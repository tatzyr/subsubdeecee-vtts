110337

Xin chào, tôi là Ben Bodner từ nhóm Công nghệ Hiển thị và Màu sắc tại Apple.

Trong video này, tôi sẽ giải thích các khả năng, trường hợp sử dụng và API của Chế độ tham chiếu mới trên iPad Pro.

Để giúp bạn hiểu Chế độ tham chiếu, trước tiên tôi nên mô tả màn hình tham chiếu là gì.

Nhiều màn hình cố tình thao tác màu sắc, độ tương phản và độ sắc nét của hình ảnh.

Ví dụ, TV thường có các chế độ khác nhau mà mỗi chế độ nhắm đến một số vẻ ngoài thẩm mỹ độc đáo và các thiết bị di động thường thích ứng với ánh sáng xung quanh.

Mặc dù các loại tính năng này có thể được mong muốn trong hầu hết các tình huống, nhưng chúng có thể là vấn đề đối với những người sáng tạo nội dung, những người thường muốn biết chính xác cách hiển thị của họ hiển thị hình ảnh.

Vì lý do đó, tham chiếu hiển thị màu hiển thị chính xác theo thông số kỹ thuật cho định dạng phương tiện.

Điều đó có nghĩa là nếu bạn có các màn hình tham chiếu khác nhau, tất cả chúng sẽ hiển thị cùng một nội dung một cách nhất quán.

Tính nhất quán này mang lại cho người sáng tạo nội dung khả năng sử dụng nhiều màn hình với sự tự tin rằng tác phẩm của họ sẽ trông giống nhau trên tất cả chúng, giả sử chúng được xem trong môi trường ánh sáng thích hợp cho định dạng phương tiện của chúng.

Bây giờ chúng ta đã hiểu về màn hình tham chiếu, hãy đi vào chi tiết về Chế độ tham chiếu trên iPad.

Đầu tiên, tôi sẽ giải thích khi nào và làm thế nào để sử dụng Chế độ Tham chiếu.

Tiếp theo, tôi sẽ đề cập đến các khả năng cụ thể của Chế độ tham chiếu bao gồm các định dạng phương tiện nào được hỗ trợ.

Và cuối cùng, tôi sẽ đưa ra tóm tắt các API được liên kết với Chế độ tham chiếu.

Vậy, khi nào thì thích hợp để sử dụng Chế độ tham chiếu và làm thế nào để chúng ta kích hoạt nó?

Chế độ tham chiếu cho phép hoặc nâng cao nhiều quy trình tạo nội dung khác nhau.

Nó bổ sung hỗ trợ cho các tác vụ quan trọng về màu sắc yêu cầu hiển thị tham chiếu, điều mà trước đây không thể thực hiện được trên các thiết bị di động.

Điều này bao gồm phân loại màu sắc, cùng với việc xem xét và phê duyệt nội dung được phân loại.

Nó cũng mang lại độ chính xác màu sắc cho các ứng dụng chỉnh sửa và tổng hợp video trên thiết bị di động, cải thiện trải nghiệm cho những người dùng thường không có quyền truy cập vào màn hình tham chiếu.

Cuối cùng, Chế độ tham chiếu hỗ trợ cả kết xuất màu dựa trên Metal và AVFoundation, vì vậy các ứng dụng phục vụ các quy trình làm việc này có thể sử dụng một trong hai.

Chế độ tham chiếu tương tự như các cài đặt trước hiển thị tham chiếu đã có sẵn trên một số hệ thống macOS nhưng có sự khác biệt quan trọng.

Trên macOS, nhiều chế độ đặt trước có sẵn mà mỗi chế độ cung cấp kết xuất màu tham chiếu cho các định dạng khác nhau.

Trên iPad, Chế độ tham chiếu chỉ là một cài đặt được bật hoặc tắt.

Điều đó có nghĩa là bạn có thể nhận được kết xuất màu tham chiếu cho nhiều định dạng mà không cần thay đổi cài đặt.

Chế độ này chỉ có thể được truy cập thông qua cài đặt iPad bởi người dùng và không thể được bật hoặc tắt theo chương trình bởi một ứng dụng.

Chế độ tham chiếu được hỗ trợ trên iPad Pro thế hệ thứ năm 12.9 inch.

Nó có thể được sử dụng với iPad như một thiết bị độc lập, nhưng nó cũng mang lại khả năng mới cho Sidecar, một tính năng cho phép iPad được sử dụng làm màn hình phụ cho thiết bị macOS.

Trước đây, Sidecar không hỗ trợ EDR.

Nhưng bây giờ, nếu Chế độ tham chiếu được bật trên iPad được sử dụng làm màn hình Sidecar, nó sẽ hỗ trợ EDR ngoài việc cho phép hiển thị màu tham chiếu cho các định dạng được hỗ trợ.

Chức năng mới này cũng yêu cầu Apple silicon Mac với macOS Ventura được sử dụng làm máy chủ cho màn hình Sidecar.

Bật Chế độ Tham chiếu thao tác với một số mục khác trong menu Cài đặt.

Để đạt được kết xuất màu sắc nhất quán, thanh trượt độ sáng bị khóa và các tính năng hiển thị động bị tắt.

Điều này bao gồm vô hiệu hóa và khóa True Tone và Night Shift, cùng với tính năng Auto-Brightness.

Bây giờ tôi đã giải thích khi nào và làm thế nào để bật Chế độ tham chiếu, chúng ta hãy xem xét kỹ hơn ý nghĩa của việc chạy màu tham chiếu, cùng với các khả năng cụ thể của Chế độ tham chiếu.

Giống như các cài đặt trước macOS mà tôi đã đề cập trước đó, Chế độ tham chiếu sử dụng quản lý màu sắc để hỗ trợ một số định dạng phương tiện khác nhau.

Điều này đảm bảo rằng màu sắc được hiển thị chính xác dựa trên đặc điểm kỹ thuật cho từng định dạng.

Tất nhiên, để xác định màu sắc nên được hiển thị như thế nào, phương tiện cần được gắn thẻ để cho biết đó là định dạng nào.

Để quản lý màu tham chiếu hợp lệ, màn hình chỉ nên được xem trong môi trường tham chiếu được chỉ định bởi tiêu chuẩn định dạng.

Định dạng video được hỗ trợ bởi Chế độ tham chiếu yêu cầu môi trường mờ, trong khi đồ họa nên được xem trong môi trường trong nhà sáng sủa.

Vậy Chế độ tham chiếu sử dụng loại quản lý màu nào?

Tất cả các định dạng màu được quản lý theo thông số kỹ thuật tương tự.

Điều này bao gồm điểm trắng D65 và độ sáng cực đại 100 nits cho phương tiện SDR hoặc 1000 nits cho phương tiện HDR.

Đối với các định dạng HDR, ánh xạ tông màu bị vô hiệu hóa nên màn hình sẽ theo dõi chính xác chức năng truyền của định dạng.

Và màu sắc sẽ được hiển thị chính xác miễn là chúng không vượt quá 1000 nits và nằm trong gam màu P3, đó là gam màu gốc của iPad.

Các màu ngoài gam màu hoặc sáng hơn 1000 nits sẽ được cắt bớt mà không cần ánh xạ tông màu.

Kết quả của việc cắt xén đó có thể thay đổi dựa trên định dạng.

Nói về các định dạng, đây là danh sách những định dạng được hỗ trợ bởi Chế độ tham chiếu, cùng với cài đặt trước hiển thị tham chiếu macOS tương ứng cho mỗi định dạng.

Trên iPad, Chế độ tham chiếu sẽ xác định cách quản lý màu phù hợp dựa trên việc gắn thẻ màu, vì vậy không cần phải chuyển đổi giữa các cài đặt trước.

Một ví dụ về gắn thẻ là các điểm mã ITU H.273 có trong bảng này, mà bạn có thể biết là thẻ màu NCLC từ QuickTime.

Nhưng có những hình thức gắn thẻ khác cũng có thể được sử dụng.

Nếu ứng dụng của bạn sử dụng định dạng không có trong danh sách này, đừng lo lắng.

Chế độ tham chiếu màu vẫn quản lý các định dạng không được hỗ trợ; chúng sẽ chỉ được hiển thị theo cách tương tự như chế độ hiển thị mặc định.

Bạn có thể nhận thấy rằng một số hàng này bao gồm nhiều định dạng.

Đó là bởi vì các định dạng được liệt kê trong cùng một hàng sẽ dẫn đến kết xuất giống nhau trên màn hình tham chiếu.

Ví dụ, HDR10 và BT.2100 PQ đều sử dụng các điểm cơ bản màu BT 2020, chức năng truyền PQ và ma trận YCC BT 2020 như được mô tả bởi các điểm mã 9-16-9.

Nhưng HDR10 cũng bao gồm siêu dữ liệu HDR có thể được sử dụng để thông báo ánh xạ tông màu.

Trong chế độ hiển thị mặc định của iPad, điều này có thể dẫn đến các phiên bản khác nhau của cùng một nội dung tùy thuộc vào định dạng.

Nhưng vì Chế độ tham chiếu không phải là bản đồ giai điệu, bất kỳ siêu dữ liệu HDR nào cũng bị bỏ qua và cả hai định dạng đều được hiển thị giống hệt nhau.

Nói chung, màn hình tham chiếu được hiệu chỉnh bằng thiết bị đo quang học để đảm bảo độ chính xác của màu sắc.

Giống như các cài đặt trước của macOS, Chế độ tham chiếu bao gồm tính năng hiệu chuẩn được tinh chỉnh cho phép hiệu chỉnh màu sắc và độ sáng của điểm trắng tại một điểm duy nhất.

Việc điều chỉnh màu sắc này nhằm tính đến sự lão hóa màn hình và sự khác biệt giữa các thiết bị đo lường để điểm trắng và độ sáng cực đại của iPad của bạn sẽ khớp với các màn hình khác đã được hiệu chỉnh với cùng một thiết bị.

Điều đó kết thúc các chi tiết cụ thể về khả năng của Chế độ tham chiếu trong kết xuất màu.

Tiếp theo, hãy thảo luận về các API UIScreen được liên kết với Chế độ tham chiếu.

Nhưng trước khi làm như vậy, tôi nên nhanh chóng tóm tắt lại EDR là gì.

EDR là viết tắt của dải động mở rộng và là công nghệ HDR của Apple.

Nó bao gồm cả công nghệ kết xuất và biểu diễn pixel.

Điểm ảnh EDR có thể đại diện cho cả nội dung SDR và HDR.

Một thành phần quan trọng của EDR là khoảng không, đó là độ sáng đỉnh HDR chia cho độ sáng cực đại SDR.

Trong Chế độ tham chiếu, đỉnh HDR luôn là 1000 nits và đỉnh SDR luôn là 100 nits, có nghĩa là khoảng không EDR luôn gấp 10 lần.

EDR đảm bảo rằng các điểm ảnh SDR, được biểu diễn với các giá trị từ 0 đến 1, luôn được hiển thị.

Bất kỳ giá trị nào giữa một và khoảng không EDR sẽ được hiển thị đúng cách mà không cần ánh xạ tông màu, trong khi các giá trị sáng hơn khoảng không EDR sẽ bị cắt bớt.

Tuy nhiên, có thể có những trường hợp bạn quyết định rằng khoảng không đủ cao để biện minh cho việc hiển thị nội dung của bạn dưới dạng EDR và thay vào đó muốn triển khai đường dẫn SDR.

Cũng có thể có những lúc bạn thích tận dụng khoảng không EDR có sẵn bằng cách áp dụng ánh xạ tông màu của riêng bạn.

Trong cả hai trường hợp, UIScreen đều có các thuộc tính truy vấn và thông báo mới mà bạn có thể sử dụng để đưa ra quyết định kết xuất trong ứng dụng của mình.

Cụ thể hơn, bạn có thể sử dụng UIScreen để đăng ký thông báo về những thay đổi trong trạng thái Chế độ Tham chiếu và sau đó truy vấn các thay đổi trong trạng thái đó.

Bạn cũng có thể sử dụng UIScreen để truy vấn các thuộc tính khoảng trống EDR hiện tại và tiềm năng của thiết bị.

Tôi sẽ nói nhiều hơn về điều đó một lát sau.

Đối với những thay đổi trong trạng thái chế độ hiển thị, hãy đăng ký UIScreen.referenceDisplayMode StatusDidChangeNotification.

Đối với mục đích truy vấn, bạn có thể sử dụng thông báo này để có được trạng thái mới và khoảng trống EDR tiềm năng mới, cả hai đều có thể thông báo các quyết định kết xuất trong ứng dụng của bạn.

Ví dụ: bạn có thể muốn ứng dụng của mình áp dụng ánh xạ âm thanh của riêng nó dựa trên khoảng trống EDR khi Chế độ tham chiếu bị tắt và không áp dụng bất kỳ ánh xạ âm nào nếu Chế độ tham chiếu được bật.

Khi bạn nhận được thông báo về việc thay đổi trạng thái chế độ hiển thị, bạn có thể sử dụng thuộc tính trạng thái chế độ hiển thị tham chiếu của UIScreen để nhận trạng thái hiện tại.

Đây sẽ là một trong bốn loại được liệt kê.

Nếu StatusEnabled được trả về, thì Chế độ tham chiếu được bật và hiển thị như mong đợi.

Nếu StatusLimited được trả về, thì Chế độ tham chiếu được bật nhưng tạm thời không thể hiển thị phản hồi tham chiếu do khoảng không EDR bị giới hạn dưới 10 lần.

Nếu trạng thái này xảy ra, thông báo giao diện người dùng cũng sẽ thông báo cho người dùng của bạn rằng kết xuất tham chiếu bị xâm phạm.

Nếu StatusNotEnabled được trả về, thì Chế độ tham chiếu được hỗ trợ trên thiết bị này, nhưng nó chưa được người dùng bật.

Và cuối cùng, nếu StatusNotSupported được trả về, thì Chế độ tham chiếu không được hỗ trợ trên thiết bị này.

Tiếp theo, chúng ta hãy xem một số mã Swift để xem cách bạn có thể tận dụng các thông báo UIScreen.

Ở đây, chúng ta sẽ bắt đầu bằng cách lấy một đối tượng thông báo mặc định từ Trung tâm thông báo.

Sau đó, chúng tôi sẽ thêm một người quan sát thông báo vào đối tượng thông báo mặc định của bạn.

Trong ví dụ này, bộ chọn screenChangedEvent xác định tin nhắn mà người nhận gửi cho người quan sát để cảnh báo người quan sát rằng thông báo đã được đăng.

Tên của thông báo để đăng ký giao hàng cho người quan sát là UIScreen.referenceDisplayMode StatusDidChangeNotification.

Bây giờ bất cứ khi nào trạng thái thay đổi, chức năng screenChangedEvent sẽ được gọi.

Trong ví dụ triển khai screenChangedEvent này, trước tiên chúng ta sẽ nhận được UIScreen từ cảnh cửa sổ.

Sau đó, chúng ta có thể lấy thuộc tính referenceDisplayModeStatus mới từ UIScreen.

Bạn cũng có thể nhận được giá trị khoảng trống EDR tiềm năng mới và sử dụng nó trong các đường dẫn kết xuất ứng dụng của bạn.

Điều đó bao gồm các thông báo thay đổi trạng thái Chế độ Tham chiếu, vì vậy hãy chuyển sang nói về khoảng không EDR.

Trước đó, tôi đã đề cập đến hai loại khoảng trống EDR: hiện tại và tiềm năng.

Các thuộc tính này có liên quan đến bất kỳ nhà phát triển nào làm việc với EDR và không dành riêng cho Chế độ tham chiếu.

Khoảng không tiềm năng trả về khoảng không tối đa có thể cho màn hình của bạn.

Ví dụ: bạn có thể quyết định sử dụng đường dẫn kết xuất SDR trong ứng dụng của mình nếu khoảng không tiềm năng không vượt quá 1.0 hoặc một số ngưỡng khác.

Khoảng không hiện tại rất năng động và có thể ít hơn khoảng không tiềm năng vì nhiều lý do.

Bạn có thể chọn áp dụng ánh xạ âm thanh trong ứng dụng của mình để nội dung của bạn không vượt quá khoảng không hiện tại, điều này sẽ khiến nó bị cắt.

Hãy xem xét một ví dụ đơn giản.

Như trong ví dụ trước, chúng ta sẽ bắt đầu bằng cách lấy UIScreen từ windowScene.

Từ đó, chúng tôi sẽ có được tài sản có trụ sở tiềm năng của EDR.

Sau đó, chúng ta có thể so sánh giá trị khoảng không EDR tiềm năng với ngưỡng và quyết định có nên triển khai đường dẫn kết xuất SDR hay đường dẫn xử lý hình ảnh hay không.

Đây là một ví dụ về cách sử dụng thuộc tính khoảng không EDR hiện tại của UIScreen.

Trong một cuộc gọi rút thăm, chúng ta có thể lấy lại UIScreen từ windowScene và sau đó lấy thuộc tính UIScreen currentEDRHeadroom.

Bạn có thể sử dụng giá trị này để xác định bản đồ âm thích hợp sẽ tránh cắt và áp dụng nó trong ứng dụng của bạn.

Bây giờ tôi đã đề cập đến UIScreen APIs và xem xét một số đoạn mã, chúng tôi đã đến cuối video này.

Tóm lại, chúng tôi đã học cách thức và thời điểm bật Chế độ tham chiếu trên iPad.

Chúng tôi đã thảo luận về kết xuất màu tham chiếu và các khả năng cụ thể của Chế độ tham chiếu, bao gồm cả định dạng phương tiện mà nó hỗ trợ.

Và cuối cùng, chúng tôi đã tìm hiểu về thông báo Chế độ Tham chiếu UIScreen và các thuộc tính mới để truy vấn khoảng trống EDR.

Nếu bạn muốn tìm hiểu thêm về EDR và công nghệ màu sắc trên nền tảng Apple, đây là danh sách các video về các chủ đề liên quan từ một vài WWDC gần đây.

Video "Khám phá EDR trên iOS" từ năm nay đặc biệt phù hợp nếu bạn đang làm việc với EDR trên iPad, có hoặc không có Chế độ tham chiếu.

Và điều đó đưa chúng ta đến cuối cuộc nói chuyện của chúng ta.

Tôi hy vọng rằng bạn sẽ tận dụng Chế độ Tham chiếu và các API của nó trong ứng dụng của bạn.

Cảm ơn vì đã xem.