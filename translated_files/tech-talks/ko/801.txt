801

iPhone X의 슈퍼 레티나 디스플레이는 콘텐츠를 표시하고 몰입감 있는 경험을 만들 수 있는 더 많은 공간을 제공합니다.

이 비디오는 모든 iOS 기기에서 멋지게 보이고 느껴지는 앱과 게임을 디자인하는 데 도움이 될 것입니다.

먼저, 새로운 디스플레이의 몇 가지 주요 측면을 검토해 봅시다.

iPhone X의 디스플레이는 3배의 이미지 배율이다.

이미지 자산을 제작하고 전달할 때, 해상도에 독립적이며 앱의 크기를 크게 줄일 수 있기 때문에 PDF를 사용하는 것이 좋습니다.

래스터화된 이미지가 필요한 경우, 앱의 자산 카탈로그에 2배와 3배 해상도를 모두 포함해야 합니다.

생산 공정을 간소화하기 위해, Apple UI 디자인 리소스에 포함된 템플릿을 사용하는 것이 좋습니다.

Apple 휴먼 인터페이스 지침의 리소스 페이지에서 다운로드할 수 있습니다.

iPhone X의 디스플레이 크기는 너비 375점, 높이 812점이다.

3배 디스플레이에서, 이것은 1125 x 2436 픽셀과 같다.

375 포인트는 iPhone 6, iPhone 7 및 iPhone 8의 4.7인치 디스플레이와 같은 너비입니다.

따라서 이러한 장치의 더 좁은 차원을 따라 제공되는 정보의 양에는 차이가 없어야 합니다.

812 포인트 높이는 4.7인치 디스플레이보다 145 포인트 더 높다.

이 추가 높이는 콘텐츠를 위한 약 20% 더 많은 공간을 제공한다.

물론, 슈퍼 레티나 디스플레이의 가장 주목할 만한 특징은 모양이다.

디스플레이는 대칭적인 외관을 위해 네 개의 둥근 모서리 주변의 제품 디자인을 따른다.

새로운 디스플레이에서 작동하도록 앱을 업데이트하는 것은 디스플레이의 뷰 포트를 채우기 위해 시각적 요소를 확장하는 동시에 제어 및 중요한 정보가 모서리에서 잘리거나 센서 하우징으로 덮이는 것을 막는 것을 포함합니다.

iPhone X에서, 사람들은 디스플레이의 하단 가장자리를 따라 아무 곳이나 위로 스와이프하여 앱 스위처와 홈 화면에 액세스합니다.

화면 하단의 표시기는 이 상호 작용에 대한 힌트를 제공한다.

이 표시기는 앱의 인터페이스 위에 표시됩니다.

앱을 디자인할 때 이것을 고려해야 합니다.

앱이 UIKit 컨트롤과 자동 레이아웃을 사용하는 경우, iPhone X 및 기타 장치를 위한 설계 및 개발은 간단해야 합니다.

내비게이션 바, 테이블 및 컬렉션 뷰와 같은 표준 UIKit 요소는 iPhone X에서 볼 때 자동으로 조정됩니다.

내비게이션 바, 탭 바 및 도구 모음은 모든 iOS 장치에서 적절하게 배치되고 확장됩니다.

탐색 표시줄의 배경 자료는 디스플레이의 상단 가장자리로 확장되고, 탭 표시줄과 도구 모음의 배경 자료는 하단으로 확장되며, 포함된 요소는 다른 요소에 의한 과부하 또는 클리핑을 방지하기 위해 배치됩니다.

가로 방향에서, 테이블 뷰는 디스플레이의 전체 너비에 걸쳐 있으며, 테이블 셀의 콘텐츠 뷰는 삽입됩니다.

앱이 자동 레이아웃을 사용하는 경우, 보기는 iPhone X의 더 큰 디스플레이 크기에 자동으로 적응할 수 있습니다.

iOS 11의 경우, 안전 영역 레이아웃 가이드라고 불리는 새로운 레이아웃 가이드가 자동 레이아웃에 추가되었습니다.

안전 영역 레이아웃 가이드는 콘텐츠와 컨트롤을 배치할 때 시스템 UI 요소가 겹치는 것을 피하는 데 도움이 됩니다.

iPhone 8에서, 막대가 보이지 않으면 안전 영역은 뷰포트와 같은 크기입니다.

상태 표시줄이 보이면, 상태 표시줄의 높이를 설명하기 위해 안전 영역의 상단 가장자리가 낮아집니다.

안전 구역은 내비게이션 바와 도구 모음 또는 탭 바를 수용하기 위해 추가로 삽입됩니다.

iPhone X에서, 안전 구역 레이아웃 가이드는 추가적인 이점을 제공한다.

화면에 막대가 보이지 않더라도 화면 가장자리의 상단과 하단에서 세로 방향으로 삽입됩니다.

이것은 인터페이스 요소가 센서 하우징, 디스플레이의 둥근 모서리 및 홈 표시기에서 멀리 떨어진 곳에 배치하여 잘리거나 덮이는 것을 방지하는 데 도움이 됩니다.

가로 방향에서, 안전 영역은 같은 이유로 화면 측면과 홈 표시기에서 삽입됩니다.

따라서, 예를 들어, 이러한 테이블 행 셀의 콘텐츠 뷰의 너비는 센서 하우징을 감싸거나 디스플레이의 둥근 모서리에 의해 잘리는 것을 방지하기 위해 안전 영역에 의해 제한됩니다.

그리고 테이블의 상단 가장자리는 내비게이션 바 밑부분을 피하기 위해 삽입되었다.

오클루전과 클리핑이 문제가 되지 않는 iPhone 8에서는 안전 영역 너비가 디스플레이 너비와 일치하며 테이블은 가장자리에서 가장자리까지 실행할 수 있습니다.

텍스트와 컨트롤이 실제로 안전 영역에서 삽입되어 있다는 것을 알게 될 것입니다.

이 삽입은 레이아웃 마진이라고 불리는 다른 레이아웃 가이드를 사용하여 달성된다.

레이아웃 여백은 앱 전반에 걸쳐 일관된 콘텐츠 여백을 제공하고 콘텐츠를 탐색 표시줄 버튼과 같은 다른 컨트롤에 정렬하는 데 도움을 줍니다.

자동 레이아웃을 사용하지 않더라도, UIView는 안전 영역 삽입과 레이아웃 여백 값을 속성으로 제공합니다.

이제, 자동 레이아웃에 대한 마지막 메모.

iPhone 6, 7, 8 및 X는 모두 컴팩트한 너비의 클래스에 속합니다.

이것은 본질적으로 앱의 레이아웃이 이 모든 장치에서 일관성이 있어야 한다는 것을 의미합니다.

앱에 사용자 지정 컨트롤이나 비표준 레이아웃이 있는 경우, iPhone X에서 잘 작동하려면 앱의 인터페이스를 약간 변경해야 할 수도 있습니다.

여기에는 두 가지 측면이 있다.

첫째, 앱이나 게임은 항상 실행되는 디스플레이를 채워야 합니다.

화면 상단이나 하단에 검은색 막대를 배치하면 앱이 작고 비좁으며 iPhone X의 다른 앱과 일치하지 않습니다.

배경 그래픽을 디자인하거나 배경 장면을 렌더링할 때, iPhone X의 디스플레이는 4.7인치 디스플레이와 종횡비가 다르다는 것을 명심하세요.

iPhone 8의 16:9 종횡비를 위해 설계된 배경 그래픽은 채우기 위해 크기를 조정하면 iPhone X의 왼쪽과 오른쪽 가장자리를 따라 자르거나, 맞게 크기를 조정하면 레터박스로 자릅니다.

마찬가지로, iPhone X용으로 설계된 배경 그래픽은 iPhone 8의 상단과 하단 가장자리를 따라 자르거나 기둥 상자로 자릅니다.

디스플레이의 종횡비에 관계없이 중요한 시각적 정보를 볼 수 있도록 이미지를 구성하는 것이 가장 좋습니다.

레이아웃을 업데이트하는 두 번째 부분은 대화형 요소와 주요 정보를 설정하거나 재배치하는 것을 포함합니다.

뷰포트의 가장자리나 모서리에 너무 가깝게 위치한 요소는 디스플레이의 둥근 모서리에 의해 잘리거나 센서 하우징으로 덮일 수 있습니다.

그러니 이것을 피하기 위해 컨트롤과 다른 요소를 삽입해야 합니다.

다시 말하지만, 안전 구역 레이아웃 가이드와 레이아웃 여백은 적절한 삽입 값을 결정하는 데 사용되어야 합니다.

장치의 가장자리를 따라 배치된 컨트롤은 장치가 어떻게 유지되는지에 따라 도달하기가 더 어려울 수 있다는 점도 주목할 가치가 있다.

컨트롤을 사용하면 더 빠르고 편안하게 상호 작용할 수 있습니다.

모서리나 화면 가장자리 아래에 있는 시각적 요소는 설정이 올바르게 보이지 않을 수 있기 때문에 수정해야 할 수도 있습니다.

어떤 경우에는, 다른 시각 치료가 필요할 수도 있다.

또한 iPhone X에서는 상태 표시줄이 더 높다는 점에 유의하십시오.

고정 포인트 값으로 삽입된 콘텐츠 뷰는 상태 표시줄의 상단 가장자리로 덮여 있습니다.

iPhone X에서는 전화 통화나 위치 추적과 같은 백그라운드 작업이 실행될 때 상태 표시줄이 더 이상 높이를 변경하지 않습니다.

이것은 상태 표시줄 스타일에 관계없이 보다 일관된 사용자 경험을 만드는 데 도움이 됩니다.

iPhone X에서 상태 표시줄은 앱이 완전히 활용하지 못할 화면 영역을 차지합니다.

앱의 인터페이스를 위한 더 많은 공간을 차지하기 위해 상태 표시줄을 숨겼다면, 여전히 필요하다면 재고할 수 있습니다.

이제, 풍경 방향에 대한 간단한 메모 하나.

대부분의 앱은 컨트롤과 시각적 정보가 중심에 있을 때 가장 잘 보이고 작동한다.

장치가 어떻게 회전하는지에 따라 변화하는 비대칭 레이아웃은 일관성 없는 사용자 경험으로 이어질 것이며 근육 기억을 구축하는 사람들의 능력을 약화시킬 수 있다.

마지막으로, 사람들이 앱 스위처와 홈 화면에 액세스하기 위해 위로 스와이프할 수 있다는 것을 알려주는 지표와 관련된 몇 가지 주요 고려 사항.

이 상호 작용은 iOS 장치 사용 경험의 핵심이기 때문에, 표시기는 항상 명확하게 보여야 한다.

이를 달성하기 위해, iOS는 배경에 비해 충분한 대비를 유지하기 위해 지표의 모양을 동적으로 조정한다.

표시기는 밝은 배경에서는 어둡게 보이고, 어두운 배경에서는 밝다.

홈 표시기와 잘 작동하도록 앱의 인터페이스를 설계할 때, 인터페이스 요소를 표시기와 가까운 곳에 배치하지 않는 것이 가장 좋습니다.

안전한 영역 내에 스크롤할 수 없는 모든 콘텐츠를 배치하여 표시기 주위에 부정적인 공간을 남겨두기만 하면 됩니다.

또한 브래킷, 베젤 또는 기타 수단과 같은 시각적 장식을 통해 지표에 특별한 관심을 끄는 것은 바람직하지 않습니다.

앞서 언급했듯이, 사람들은 디스플레이의 하단 가장자리에서 위로 스와이프하여 앱 스위처와 홈 화면에 액세스할 수 있습니다.

대부분의 경우, 스와이프 제스처는 디스플레이 중앙에서 발생하는 경향이 있으므로, 이 상호 작용은 앱의 상호 작용과 충돌하지 않습니다.

그러나, 앱이나 게임이 사람들이 디스플레이의 맨 아래를 따라 스와이프하도록 장려한다면, 디스플레이의 하단 가장자리에 대한 가장자리 보호를 켜고 싶을 수도 있습니다.

이것은 지표에 더 미묘한 외관을 제공하고 앱을 종료하려면 두 번의 스와이프가 필요하도록 동작을 변경합니다.

첫 번째 스와이프 또는 드래그는 표시기를 들어 올리고 제어를 가능하게 합니다.

두 번째로 스와이프하는 동안 사람들이 당신의 앱이나 게임을 종료할 수 있습니다.

가장자리 보호는 일관성 없는 사용자 경험으로 이어지기 때문에, 절대적으로 필요할 때만 사용해야 합니다.

스와이프와 달리, 디스플레이의 하단 가장자리를 탭하는 것은 앱이나 게임에만 영향을 미칩니다.

예를 들어, 테이블 행 셀을 탭하는 것은 표시기 뒤에 있든 없든 같은 결과를 낳는다.

테이블이나 컬렉션 뷰와 같은 수직 스크롤 가능한 뷰는 안전 영역에 의해 제한되지 않고 디스플레이 하단까지 확장되어야 합니다.

마지막으로, 전체 화면 시각적 콘텐츠를 표시할 때 자동 숨기기 동작을 활성화할 수 있습니다.

자동 숨기기하면 디스플레이를 몇 초 동안 건드리지 않으면 표시기가 사라지고 디스플레이를 건드리면 다시 페이드됩니다.

사람들이 디스플레이를 자주 만질 것 같지 않은 수동적인 경험에만 자동 숨기기를 사용하세요.

좋아요, 더 많은 iPhone X 디자인 지침은 developer.apple.com/design에서 Apple 휴먼 인터페이스 지침을 방문하십시오.

그리고 당신이 거기에 있는 동안, 최신 버전의 iOS Apple UI 디자인 리소스를 다운로드하세요.

우리는 iPhone X용 스케치와 포토샵 템플릿을 업데이트했으며, 곧 더 많은 업데이트가 있을 것입니다.