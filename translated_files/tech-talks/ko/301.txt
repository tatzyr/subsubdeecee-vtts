301

확장 가능한 엔터프라이즈 싱글 사인온을 소개하는 것을 환영합니다.

제 이름은 맷 찬다입니다.

저는 컨설팅 엔지니어이며 싱글 사인온을 만든 팀의 일원입니다.

이 비디오에서는 싱글 사인온에 대한 개요를 제공하고, 확장 프로그램을 만드는 방법, 앱에서 사용하는 방법, 배포 방법, 모범 사례로 마무리할 것입니다.

아시다시피, 거의 모든 엔터프라이즈 앱과 웹사이트는 작동하기 위해 인증해야 합니다.

이 앱들은 클라우드, 온프레미스 또는 둘 다에서 기록 시스템을 연결합니다.

하지만 최근에, 인증은 점점 더 복잡해지고 있다.

우리는 OpenID Connect, Kerberos 및 SAML을 포함한 여러 인증 방법을 고려해야 합니다.

우리는 이제 온프레미스 시스템에 대한 인증을 통합해야 하는 클라우드 리소스를 가지고 있습니다.

우리는 또한 우리의 장치를 더 신뢰해야 하며, 때로는 비밀번호가 없습니다.

조직은 이러한 도전에 어떻게 대처하나요?

그들은 도움을 주기 위해 싱글 사인온을 사용한다.

싱글 사인온을 사용하면 앱이나 웹 사이트 제품군이 동일한 자격 증명을 사용하여 원활하게 인증할 수 있습니다.

이것은 더 나은 사용자 경험을 가져온다.

일부 기업은 비밀번호가 없으므로, 싱글 사인온을 사용해야 합니다.

문제는 모든 앱이 그들의 필요를 지원하는 것은 아니라는 것이다.

기존 인증 솔루션은 많은 사용자 마찰을 일으킬 수 있다.

그들은 여러 개의 팝업, 반복되는 프롬프트, 그리고 앱 사이를 바운스한다.

안전하고 사용자 친화적인 진정한 싱글 사인온을 가질 수 있는 방법은 없었다.

오늘 저는 iOS 13, iPadOS 및 macOS Catalina에 추가한 강력한 새로운 싱글 사인온 기능에 대해 말씀드리고자 합니다.

새로운 확장 가능한 SSO MDM 프로필과 관련 도메인을 배포하여 활성화됩니다.

그것은 사용자 등록에서도 작동한다.

확장 프로그램은 UI를 표시하거나, 웹 페이지를 로드하거나, 요청을 자동으로 처리하도록 선택할 수 있습니다.

우리는 이러한 변화를 통해 사용자 친화적이고 안전한 SSO 솔루션을 만들고 사용할 수 있다고 생각합니다.

새로운 확장 프로그램은 iOS, iPadOS 및 macOS에서 실행됩니다.

그들은 네이티브 앱과 사파리가 모두 당신의 신원 제공자와 인증할 수 있게 해준다.

확장은 네이티브 코드이다.

그들은 다중 요소 인증을 활성화하고, 키체인에 액세스하고, 안전한 엔클레이브 생성 키 등을 사용할 수 있습니다.

그들은 관리되는 앱 설정을 활용하고 심지어 앱별 VPN을 사용할 수도 있다.

Apple로 로그인하는 것에 대해 궁금할 수도 있습니다.

싱글 사인온은 Apple로 로그인하는 것과 다르다.

Apple로 로그인은 소비자 앱을 위한 것이며 다양한 문제를 해결합니다.

첫째, 그것은 계정 프로비저닝 문제를 해결하기 위한 것이다.

모든 곳에서 새 계정을 만드는 대신, 대신 Apple ID를 사용하세요.

그것은 또한 사이트가 당신의 모든 개인 정보를 필요로 하지 않는 개인 정보 보호 문제를 해결합니다.

반면에, 싱글 사인온을 사용하면 필요한 앱에 기존 엔터프라이즈 계정을 사용할 수 있습니다.

당신의 기업 앱은 당신이 누구이며 무엇을 할 수 있는지 정확히 알아야 합니다.

이제 우리가 그것을 소개했으므로, 당신은 싱글 사인온을 하는 것이 실제로 어떻게 생겼는지 궁금할 것입니다.

한 번 보자.

iOS에서, 인증이 필요한 웹 페이지를 로드하는 것으로 시작합시다.

연장은 나에게 자격 증명을 요청할 것이다.

내 사용자 이름을 입력할게...

그리고 이제 내 비밀번호...

비밀번호를 저장한 다음, 페이지가 로드됩니다.

페이지가 로드된 후 내 사용자 이름을 보여준다는 것을 주목하세요.

이제 네이티브 앱으로 가서 보호된 리소스에 접근해 봅시다.

이곳은 싱글 사인온이 일어나는 곳이다.

사용자에게 자격 증명에 대한 메시지가 다시 표시되어서는 안 됩니다.

이 앱에는 두 개의 버튼이 있다.

그것은 동일한 자격 증명으로 보호되는 네트워크에서 이미지를 로드하려고 시도할 것이다.

햄버거부터 시작할게...

그리고 이제 타코...

그리고 그것은 iOS에서 작동하는 싱글 사인온이다.

이제 macOS를 위해.

다시 말하지만, 우리는 보호된 웹 페이지를 로드하고 자격 증명에 도전하려고 합니다.

그래서 내가 사파리를 열고, 내 사이트를 불러올게...

이제 내 사용자 이름을 입력할게...

그리고 내 비밀번호...

내가 저장할게, 그러면 페이지가 로드될 거야.

좋아요, 이것은 첫 번째 로그인이지만, 다른 곳에서 사용하기 전까지는 싱글 사인온이 아닙니다.

그러니 네이티브 앱에서 다른 보호된 리소스에 접근해 봅시다.

그래서 나는 햄버거부터 시작할 거야.

좋아, 그리고 이제 타코.

그리고 당신은 그들이 예상대로 적재된 것을 볼 수 있습니다.

내가 먼저 브라우저에 로그인하지 않았다면, 동일한 인증 대화상자가 네이티브 앱에 표시되었을 것이다.

로그인 후, 자격 증명이 저장되고, 이미지에 대한 접근이 허용됩니다.

그리고 그것은 macOS의 싱글 사인온이다.

그리고 이제 우리의 슬라이드로 돌아가자.

MDM 관리 장치로 싱글 사인온을 사용하려면, 이러한 것들이 필요합니다.

당신은 이미 앱과 웹사이트와 신원 제공자를 가지고 있을 것입니다.

그래서 오늘 우리는 그것들을 함께 붙이기 위해 확장에 시간을 할애할 것이다.

그래서 그건 어떻게 작동해?

확장에는 두 가지 유형이 있습니다: 리디렉션과 자격 증명.

리디렉션 확장으로 시작합시다.

리디렉션 확장은 현대적인 인증 방법을 위한 것이다.

예로는 OpenID Connect, OAuth 및 SAML이 있습니다.

이러한 방법은 웹 기술을 기반으로 하며 연합과 함께 자주 사용된다.

사파리의 예를 살펴봅시다.

리디렉션 확장은 iOS, iPadOS 및 macOS의 URLSession에서도 작동합니다.

로그인 페이지를 로드하는 대신, OS는 웹 요청을 확장 프로그램으로 리디렉션할 것이다.

확장자는 URL, 헤더 및 본문을 받을 것이다.

확장 개발자는 신원 제공자와의 인증 프로세스를 완료할 책임이 있습니다.

준비가 되면, 그것은 사파리에 URL 응답을 반환할 것이다.

이 응답이 크지 않아야 한다는 점에 유의하세요.

작은 웹 양식이 SAML 응답이나 다른 토큰을 웹 서버에 게시하기 위한 것입니다.

거대한 1-meg 웹 페이지에 사용하지 마세요.

그래서 이 싱글 사인온 확장은 무엇을 할 수 있나요?

그들은 몇 가지 일을 할 수 있다. 여기 몇 개 있어.

네이티브 UI를 제시하거나 다중 요소를 요청하도록 선택할 수 있습니다.

그들은 Secure Enclave에서 장치별 키를 생성하거나 신뢰 점수 데이터로 인증 요청을 보완할 수 있습니다.

다른 idP 특정 보안 기능도 구현할 수 있습니다.

그들은 웹 페이지를 로드하고 연맹 링크를 따라갈 수 있다.

그리고 macOS에서는 신원 제공자가 지원하는 경우 WebAuthN을 사용할 수도 있습니다.

리디렉션 확장은 네이티브 앱에서도 작동합니다.

그러나, 네이티브 앱에는 추가 옵션이 있습니다.

그들은 확장으로 작업을 보낼 수 있다.

앱은 로그인하거나 토큰을 자동으로 새로 고치기에 좋은 시기가 언제인지 결정할 수 있습니다.

확장 프로그램은 다시 인증해야 하는지 아니면 저장된 토큰을 반환해야 하는지 알 수 있습니다.

그리고 엔터프라이즈 앱 개발자의 경우, 이것은 확장 프로그램을 인증 클라이언트로 사용할 수 있다는 것을 의미합니다.

각 앱에 인증 라이브러리의 복사본을 포함시킨 다음 유지할 필요가 없습니다.

흐름을 확인해 봅시다.

네이티브 앱이 프로세스를 시작하기 위해 로그인과 같은 명령을 보낼 수 있다는 점을 제외하고는 사파리와 유사합니다.

다시 말하지만, 확장은 인증 과정을 완료할 책임이 있다.

그리고 준비가 되면, 네이티브 앱에 필요한 모든 토큰으로 URL 응답을 반환할 수 있습니다.

또한 관리되는 앱 구성을 사용하여 사용할 신원 제공자 URL의 기본 앱을 알리는 것이 좋습니다.

확장 프로그램을 구축하는 방법을 보여주기 전에, 귀사에 이러한 확장 프로그램 중 하나를 배포하는 방법에 대해 이야기해 봅시다.

두 가지 요구 사항이 있습니다: MDM 페이로드와 관련 도메인.

MDM 페이로드부터 시작합시다.

iOS 13, iPadOS 및 macOS Catalina용 새로운 확장 가능한 SSO 페이로드에 의해 활성화됩니다.

여기서 예시를 확인해 보세요.

식별자는 com.apple.extensiblesso이며, 이 페이로드는 MDM에 의해 전달되어야 합니다.

팀 식별자와 방금 이야기한 유형을 포함하여 사용하려는 확장 번들 식별자를 지정합니다.

이 경우, 리디렉션 확장.

확장 프로그램으로 라우팅할 트래픽을 결정하는 URL 접두사를 나열합니다.

그리고 마지막으로, MDM의 확장 특정 값의 선택적 사전.

이 예시에서 우리는 사용자 이름을 보내고 있다.

두 번째 요구 사항은 관련 도메인을 사용하는 것이다.

이것은 확장 개발자로부터 시작한다.

관련 도메인은 귀하 또는 귀하의 신원 제공자가 리디렉션되는 트래픽을 소유하고 있음을 증명해야 합니다.

그것은 또한 다른 사람이 당신의 트래픽을 리디렉션하는 것을 방지합니다.

애플 플랫폼에서, 확장 프로그램은 호스트 앱 안에 내장되어 있다.

관련 도메인을 설정하려면, 확장이 포함된 호스트 앱에서 관련 도메인 기능을 구성해야 합니다.

Authsrv 서비스 유형, 콜론, 앱에서 사용하는 도메인 이름으로 새 항목을 추가합니다.

여러 도메인이 필요하다면, 각각 별도로 입력하십시오.

관련 도메인은 또한 호스트 앱 ID가 서버의 Apple 앱 사이트 연결 파일에 나열되어야 합니다.

이 서버는 장치에서 액세스할 수 있어야 하며 유효한 SSL 인증서가 있어야 합니다.

사용자 승인 또는 사용자 지정 루트 인증서는 Apple 앱 사이트 연결 파일에서 지원되지 않습니다.

어떤 경우에는, 앱이 개발될 때 관련 도메인을 알 수 없습니다.

이것의 좋은 예는 신원 제공자가 확장을 개발하지만, 각 고객의 호스트가 다를 때이다.

그들은 자격 파일에 수천 개를 나열할 수 없으므로, 이런 일이 발생하면 macOS에서 새로운 관리되는 관련 도메인 페이로드를 사용할 수 있습니다.

이 값은 Xcode에서 관련 도메인의 권한 값에 사용했을 것과 동일한 형식입니다.

그리고 iOS 및 iPadOS용 새로운 AssociatedDomains MDM 애플리케이션 속성을 사용할 수 있습니다.

다시 말하지만, 그 값은 Xcode에 있었던 것과 같다.

그리고 관리되는 관련 도메인의 마지막 단계는 MDM 관리 권한을 추가하고 OS가 MDM 값을 사용하도록 알 수 있도록 관련 도메인 배열을 갖는 것입니다.

우리는 이미 나열된 모든 것에 MDM 값을 추가할 것이다.

관련 도메인과 사용 방법에 대한 자세한 내용은 유니버설 링크 세션의 새로운 기능을 확인하세요.

그리고 그것은 리디렉션 확장을 끝낸다.

이제 자격 증명 연장에 대해 이야기해 봅시다.

자격 증명 확장은 도전과 응답 인증을 위한 것이며, Kerberos가 가장 좋은 예입니다.

도전/응답은 다른 흐름을 가지고 있다.

그 흐름에서, 클라이언트는 데이터를 요청한 다음, 인증에 대한 도전을 받는다.

리디렉션 확장의 경우, 클라이언트는 데이터를 요청하기 전에 자격 증명을 요청할 것이다.

자격 증명 확장은 리디렉션 확장이 실행 중일 때 인증 문제를 처리하는 데에도 사용할 수 있습니다.

자격 증명 확장은 요청 대신 서버에서 반환된 인증 챌린지를 받습니다.

그것은 URL과 헤더를 받는다.

그들은 또한 URL 대신 MDM 페이로드의 호스트 목록을 사용한다.

호스트는 .example.com과 같은 개별 호스트 이름이나 접미사일 수 있습니다.

작업은 UI가 표시되어야 하는 시기를 결정하거나 무음 작업을 요청하는 데 사용될 수 있습니다.

그리고 마지막으로, 관련 도메인은 자격 증명 확장에 필요하지 않습니다.

자격 증명 확장의 구성은 리디렉션 확장과 유사하며, 두 가지 차이점이 있다.

첫째, 그 유형은 자격 증명이다.

둘째, 호스트 목록이 선택에 사용된다.

그것은 서버의 호스트 이름과 비교하여 확인된다.

MDM 값이 마침표로 시작하면, 호스트 이름의 접미사와 일치하는 데 사용됩니다.

그렇지 않으면, 전체 호스트 이름이 일치한다.

그리고 다시, 이 프로필은 MDM에 의해 전달되어야 한다.

자격 증명 확장은 사파리와 네이티브 앱 모두에서 작동합니다.

요청은 앱에서 서버로 전송되며, 서버는 인증 챌린지를 반환합니다.

호스트가 프로필과 일치하면, 운영 체제는 도전을 확장으로 라우팅할 것이다.

연장은 도전을 처리하거나 거부할 책임이 있다.

처리되면, 요청을 완료하기 위해 인증 헤더를 반환합니다.

그리고 서버는 발신자에게 응답을 반환할 것이다.

자격 증명 확장의 좋은 예는 iOS 13, iPadOS 및 macOS Catalina에 포함된 시스템 제공 Kerberos 확장 프로그램입니다.

이 확장 프로그램은 여러분 중 일부가 이미 사용하고 있는 Active Directory 통합 솔루션인 Enterprise Connect를 기반으로 합니다.

그것은 당신의 장치를 Active Directory와 통합하는 쉬운 방법을 제공합니다.

Kerberos 지원을 제공하는 것 외에도 Active Directory 비밀번호를 관리하고 로컬 및 Active Directory 비밀번호를 동기화하는 데 도움이 됩니다.

사용자 이름과 비밀번호, MDM이 제공하는 인증서 기반 신원 또는 스마트 카드를 사용한 인증을 지원합니다.

우리는 이 확장 프로그램이 많은 사람들이 조직에서 Kerberos와 Active Directory를 더 쉽게 사용하는 데 도움이 될 것이라고 생각합니다.

그리고 그것은 자격 증명 싱글 사인온 확장을 완료한다.

먼저 Xcode를 열고, 새 프로젝트를 만든 다음, 인증 서비스 템플릿을 사용하여 대상을 추가하세요.

이렇게 보일 거야.

그런 다음 RequestHandler 프로토콜을 구현하세요.

시스템은 각 요청에 대해 beginAuthorization 기능을 호출할 것이다.

확장 프로그램은 여러 개의 다른 앱에 의해 여러 번 호출된다는 것을 기억하세요.

따라서 각 앱의 동시성과 데이터 분리를 처리해야 합니다.

요청 매개 변수에는 현재 인증 요청에 대해 필요한 모든 정보가 포함됩니다.

확장 프로그램이 UI를 표시해야 한다고 결정하면, 표시하기 위해 request에 대해 presentAuthorization ViewController를 호출합니다.

요청에는 URL, 헤더, 호출 앱의 식별자 및 이전에 보여준 MDM 페이로드의 확장 데이터가 포함되어 있습니다.

흐름도에서 리디렉션 확장은 요청을 받고 URL 응답을 반환한다는 것을 기억하십시오.

따라서 완료되면, 리디렉션 확장은 httpResponse와 httpBody로 완료하거나 오류로 완료해야 합니다.

이것은 표시되면 뷰를 무시하고 응답을 발신자에게 되돌릴 것이다.

잘못된 방법으로 전화를 걸면, 시스템은 당신의 요청을 취소할 것입니다.

자격 증명 확장은 httpChallenge를 받고 인증 헤더를 반환해야 합니다.

따라서, 자격 증명 확장은 AuthorizationHeaders와 함께 완전한 방법을 사용해야 합니다.

확장 프로그램에서 인증 챌린지가 지원되지 않는 경우, Safari 또는 URLSession이 기본 처리로 진행되도록 doNotHandle로 응답하십시오.

이제 앱에서 확장 프로그램을 사용하는 것을 살펴봅시다.

URLSession 및 WKWebView를 포함한 표준 네트워킹 프레임워크를 사용하면 자격 증명 문제가 처리됩니다.

요청도 리디렉션되므로, 작동하기 위해 앱을 업데이트할 필요가 없습니다.

그러나, 그 흐름은 당신의 앱에 가장 적합하지 않을 수 있습니다.

예를 들어, 리디렉션은 확장으로 전송되지만, 다른 구성 요소를 오버레이하거나 다른 웹 대화상자를 먼저 표시할 수 있습니다.

작업을 사용하여 앱의 흐름을 개선하거나 로그인하는 것 이상을 할 수 있습니다.

예를 들어, 내장된 Kerberos 확장 프로그램은 iOS, iPadOS 및 macOS에서 로컬 로그인 및 로그아웃 작업을 지원합니다.

또한 앱에 대한 사용자에 대한 정보를 얻기 위해 응답 헤더의 사용자 지정 값을 반환합니다.

앱에서 작업을 호출하려면, 먼저 싱글 사인온 공급자의 인스턴스를 만들고 신원 공급자의 URL을 전달하십시오.

자격 증명 확장을 사용하는 경우, 특별한 영역이나 호스트 계획을 사용하여 해당 값과 일치시킬 수 있습니다.

그런 다음 canPerformAuthorization을 호출하여 URL이 싱글 사인온으로 처리되는지 확인하십시오.

처리할 수 있다면, 요청을 만들고 작업을 설정하세요.

자신만의 사용자 지정 작업을 만들 수도 있다는 것을 기억하세요.

다음으로 요청에 대한 컨트롤러를 만듭니다.

컨트롤러는 요청을 처리하고 응답을 반환할 책임이 있다.

응답을 처리하도록 대리인을 설정했습니다.

인증을 위해 사용할 Mac 앱의 창을 OS에 알리도록 presentationContextProvider를 설정할 수 있습니다.

이것은 사용자에 대한 요청의 맥락을 유지하는 데 도움이 될 수 있다.

마지막으로, performRequests를 호출하여 내선 번호로 보내세요.

확장이 완료되면, didCompleteWithAuthorization 위임 방법이 호출됩니다.

제공된 인증 인스턴스에는 ID 토큰, 액세스 토큰 등에 액세스할 수 있는 쉬운 방법이 있는 단일 로그인 자격 증명이 포함되어 있습니다.

시스템에서 제공하는 Kerberos 확장 프로그램은 헤더에 로그인한 사용자에 대한 몇 가지 정보를 제공합니다.

이제 몇 가지 개발 팁을.

첫 번째 요청이 접수되면 연장이 로드됩니다.

당신의 요청이 완료되면 그것은 언로드될 것입니다.

따라서, 지연 로드 설정을 권장한 다음 응답을 보내기 전에 모든 값을 디스크에 저장해야 합니다.

이제 디버깅을 위해.

확장 디버깅은 첫 번째 요청이 수신될 때까지 로드되지 않기 때문에 어려울 수 있습니다.

따라서 확장 프로그램을 디버깅하는 가장 좋은 방법은 "프로세스 ID 또는 이름으로 프로세스에 첨부..."를 사용하는 것입니다.

디버그 메뉴 아래.

확장 프로그램의 이름을 입력하기만 하면 Xcode가 처음 로드될 때 첨부됩니다.

작업을 사용할 때, 일관성을 위해, UI를 표시할 대화형 시나리오에 로그인 작업을 사용하는 것이 좋습니다.

무음 작업을 위해 새로 고침 작업을 사용해야 하며, 오류가 발생하면 네이티브 앱이 로그인 작업을 추적할 수 있습니다.

다음으로, 호스트 앱에 대해 이야기해 봅시다.

호스트 앱을 빈 컨테이너 이상으로 만드는 것은 좋은 생각이다.

추가 메뉴, 위젯 또는 명령줄 유틸리티를 고려할 수 있습니다.

온보딩, 장치 페어링 또는 비밀번호 변경과 같이 자주 사용되지 않는 기타 기능을 처리할 수 있습니다.

호스트 앱에서도 NFC를 사용할 수 있습니다.

자격 증명 확장과 리디렉션 확장을 함께 통합하는 것도 고려해야 합니다.

이제 확장 프로그램에서 활용할 수 있는 새로운 기능이 있습니다.

새로 고침 토큰과 같은 민감한 정보를 제어하는 방법으로 확장 프로그램에 보관할 수 있습니다.

JWT에 로컬로 서명한 다음, 인증을 위해 서버로 보낼 수 있습니다.

또는 장치에서 인증서 서명 요청을 만들고 CA로 보내 장치를 페어링할 수 있습니다.

또한 WKWebview의 인증 쿠키를 URLSession과 공유하여 네이티브 요청과 세션을 공유할 수 있습니다.

요약하자면, 싱글 사인온은 앱과 웹사이트에 대한 인증을 가능하게 합니다.

iOS 13, iPadOS 및 macOS에서 사용할 수 있습니다.

두 가지 유형이 있습니다.

우리는 당신이 그들과 함께 무엇을 할 수 있는지 보게 되어 정말 기쁩니다.

자세한 내용은 developer.apple.com을 방문하세요.