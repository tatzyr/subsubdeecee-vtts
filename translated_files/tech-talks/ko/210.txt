210

제이콥 클래퍼: 안녕! 공유의 새로운 소식에 오신 것을 환영합니다.

제 이름은 Jacob Klapper이고, 저는 Share Sheet 팀의 엔지니어입니다.

바로 들어가서 iOS 13의 새로운 공유 시트를 살펴봅시다.

공유 시트는 상단에 새로운 미리보기 헤더를 특징으로 한다.

이것은 사용자가 무엇을 공유하고 있는지 명확하게 하고 사용자 정의할 수 있게 해준다.

새로운 공유 시트는 또한 사용자가 누구와 공유하고 싶은지 예측하는 대화 제안 행을 빠르고 쉽게 공유할 수 있게 해준다.

마지막으로, 새로운 작업 목록은 앱과 작업 사이의 명확한 묘사를 제공하며 사용자가 가장 좋아하는 작업을 상단에 배치하여 쉽게 접근할 수 있습니다.

이제 사용자의 공유 경험을 향상시키기 위해 이 새로운 디자인을 어떻게 활용할 수 있는지에 대해 이야기해 봅시다.

먼저 공유 시트에서 미리보기 헤더를 사용자 정의하는 것에 대해 이야기할 것입니다.

그런 다음 우리는 당신의 메시징 앱에 대한 대화 제안을 선택할 것입니다.

그리고 마지막으로, 우리는 몇 가지 모범 사례를 검토할 것이다.

그래서, 공유 시트에서 미리보기 헤더를 구성하는 방법에 대해 이야기해 봅시다.

iOS 13은 앱에서 풍부한 링크를 제공할 수 있는 LinkPresentation API를 소개합니다.

UIActivityViewController는 이 프레임워크를 활용하여 공유 시트에 미리보기 헤더를 표시합니다.

이것은 사용자가 당신의 앱에서 무엇을 공유하고 있는지 명확하게 합니다.

추가 혜택으로, 사용자가 메시지를 통해 공유할 때, 성적 증명서의 링크 미리보기는 공유 시트의 것과 일치할 것이다.

이것은 사용자의 공유 경험에 연속성을 더한다.

사파리에서 미리보기 헤더를 살펴봅시다.

지금은 꽤 좋아 보이지만, 공유 시트는 헤더에 표시될 웹사이트 정보를 가져와야 했다.

다시 보자.

사파리가 이미 가지고 있을 가능성이 높기 때문에 공유 시트가 이 정보를 가져와야 하는 것은 옳지 않다.

미리보기를 가속화하기 위해, 사파리는 UIActivityItemSource를 사용하여 헤더에 표시할 Share Sheet LinkPresentation 메타데이터를 제공할 수 있습니다.

이것은 UIActivityItemSource의 새로운 ActivityViewContoller 링크 메타데이터 방법의 예입니다.

먼저, LPLinkMetadata 객체를 만드세요.

그런 다음 원본 URL과 URL 속성을 설정하세요.

제목과 아이콘 공급자를 설정하세요.

그리고 마지막으로, 메타데이터를 반환하세요.

이제 미리보기 헤더가 어떻게 생겼는지 봅시다.

보시다시피, 모든 정보를 즉시 사용할 수 있었고, 공유 시트는 추가 메타데이터 가져오기를 할 필요가 없었습니다.

이제 공유 시트의 새로운 대화 제안에 대해 이야기해 봅시다.

대화 제안을 통해 사용자는 이름을 입력하지 않고도 특정 수신자에게 콘텐츠를 쉽게 보낼 수 있습니다.

대화 제안은 SiriKit Intents를 활용하지만, SiriKit UI 확장을 추가하거나 제안이 작동하기 위해 Siri 지원을 제공할 필요가 없습니다.

대화 제안 행은 공유 시트 상단에 편리하게 배치되므로 사용자는 간단한 탭으로 공유 확장을 시작할 수 있습니다.

제안에 대한 메시징 앱의 공유 확장을 선택하는 방법에 대해 이야기해 봅시다.

앱에서 보내는 메시지에 INSendMessageIntents를 기부하고 확장 프로그램을 공유하세요.

사용자에게 더 풍부한 경험을 제공하기 위해, 수신자, speakableGroupName 및 conversationIdentifier를 포함하되 이에 국한되지 않는 가능한 한 많은 필드를 채워야 합니다.

공유 확장이 시작되면, NSExtensionContext의 인텐트 속성은 UI를 채울 대화에 대한 정보를 제공합니다.

마지막 단계는 공유 확장의 Info.plist의 IntentsSupported 배열에 INSendMessageIntent를 추가하는 것입니다. INSendMessageIntent 기부 예시를 살펴보겠습니다.

이 기능은 사용자가 앱이나 공유 확장 프로그램에서 메시지를 보낼 때마다 호출되어야 합니다.

대화 식별자는 공유 시트가 메시지를 받을 수신자 또는 그룹을 식별하는 데 도움이 됩니다.

그룹 이름은 공유 시트에 대화를 표시하는 데 사용될 것이다.

이 경우, 참가자 배열은 INPerson 객체의 배열이다.

각 INPerson은 사용자가 공유 시트에서 쉽게 찾을 수 있도록 표시 이름과 이미지가 있어야 합니다.

마지막으로, sendMessageIntent를 사용하여 INInteraction을 만드세요.

이 경우 사용자가 메시지를 보내고 있기 때문에 방향을 발신으로 설정하세요.

마지막으로, 상호 작용을 기부하세요.

IntentsSupported 배열은 Share Extension의 Info.plist의 NSExtensionAttributes 사전에 삽입되어야 합니다.

INSendMessageIntent가 지원되는 인텐트 중 하나로 나열되어 있는지 확인하십시오. 그렇지 않으면 대화 제안이 확장에 대해 활성화되지 않습니다.

공유 확장을 선택하는 모든 단계를 완료하면 공유 확장과 연결된 수신자에 대한 제안을 볼 수 있습니다.

이 제안은 앱의 아이콘과 함께 연락처 또는 그룹 이미지와 표시 이름을 특징으로 하므로 사용자가 쉽게 식별할 수 있습니다.

이제 공유 시트에 대한 몇 가지 모범 사례를 검토하여 마무리합시다.

먼저, 새로운 작업 목록에 대한 작업 확장 아이콘을 최적화하는 방법에 대해 이야기해 봅시다.

먼저, 아이콘은 40 x 40 템플릿 이미지여야 합니다.

그것들은 시스템 아이콘과 일치하도록 채우기 없이 글리프를 그려야 한다.

가능하다면, SF 기호나 기호 이미지를 사용하세요.

이렇게 하려면, CFBundleSymbolName 키를 액션 확장 프로그램의 Info.plist에 추가하세요.

다음으로, 카드 UI에 대해 이야기해 봅시다.

iOS 13의 새로운 기능, 공유 확장은 양식 시트로 표시됩니다.

공유 확장 프로그램에 전체 화면 프레젠테이션이 필요한 경우, 확장 프로그램의 Info.plist에서 NSExtensionShareWants FullScreenPresentation 키를 사용할 수 있습니다.

대부분의 확장은 이것을 필요로 하지 않지만, 카메라를 사용해야 하는 확장의 좋은 예이다.

마지막으로, 저는 iOS 13의 공유 확장에 대한 몇 가지 새로운 동작을 검토하고 싶습니다.

공유 확장은 이제 확장 프로그램의 표시 이름이 아닌 포함된 앱의 표시 이름을 사용하여 표시됩니다.

앱에 여러 공유 확장이 있는 경우, 사용자가 이를 차별화하기가 어려울 것입니다.

이 때문에, 당신의 앱은 단일 공유 확장으로 제한되어야 합니다.

이전에 앱에 여러 개의 공유 확장이 있는 경우, 사용자가 공유 확장을 시작할 때 원하는 기능을 선택할 수 있도록 옵션 UI를 추가하여 하나로 통합할 수 있습니다.

What's New in Sharing에 참여해 주셔서 감사합니다.

자세한 내용은 developer.apple.com을 방문하세요.