110337

こんにちは、アップルのディスプレイ・アンド・カラー・テクノロジーチームのベン・ボドナーです。

このビデオでは、iPad Proの新しいリファレンスモードの機能、ユースケース、APIについて説明します。

リファレンスモードを理解するために、まずリファレンスディスプレイとは何かを説明する必要があります。

多くのディスプレイは、画像の色、コントラスト、シャープネスを意図的に操作します。

たとえば、テレビは通常、それぞれが独自の美的外観をターゲットとする異なるモードを持ち、モバイルデバイスはしばしば周囲の照明に適応します。

この種の機能は、ほとんどの状況で望ましいかもしれませんが、通常、ディスプレイがどのように画像をレンダリングしているかを正確に知りたいコンテンツクリエイターにとっては問題になる可能性があります。

そのため、リファレンスディスプレイは、メディアフォーマットの仕様に合わせて正確に色をレンダリングします。

つまり、異なる参照ディスプレイがある場合、それらはすべて同じコンテンツを一貫してレンダリングします。

この一貫性により、コンテンツ作成者は、メディア形式に適した照明環境で表示されると仮定して、作品がすべてで同じように見えるという自信を持って複数のディスプレイを使用できます。

リファレンスディスプレイを理解したので、iPadのリファレンスモードの詳細に入りましょう。

まず、参照モードを使用するタイミングと方法を説明します。

次に、どのメディアフォーマットがサポートされているかなど、リファレンスモードの特定の機能について説明します。

そして最後に、リファレンスモードに関連するAPIの概要をお伝えします。

では、いつリファレンスモードを使用するのが適切で、どのように有効にしますか?

リファレンスモードは、さまざまなコンテンツ作成ワークフローを有効または強化します。

歴史的にモバイルデバイスでは不可能だったリファレンスディスプレイを必要とするカラークリティカルなタスクのサポートを追加します。

これには、カラーグレーディング、グレーディングされたコンテンツのレビューと承認が含まれます。

また、モバイルビデオ編集や合成アプリに色精度をもたらし、通常はリファレンスディスプレイにアクセスできないユーザーのエクスペリエンスを向上させます。

最後に、リファレンスモードはMetalとAVFoundationベースのカラーレンダリングの両方をサポートしているため、これらのワークフローを提供するアプリはどちらかを使用できます。

リファレンスモードは、一部のmacOSシステムですでに利用可能なリファレンスディスプレイプリセットに似ていますが、重要な違いがあります。

macOSでは、それぞれが異なるフォーマットの参照カラーレンダリングを提供する複数のプリセットモードが利用可能です。

iPadでは、リファレンスモードはオンまたはオフになっている設定の1つにすぎません。

つまり、設定を変更することなく、複数のフォーマットのリファレンスカラーレンダリングを取得できます。

このモードは、ユーザーがiPadの設定からのみアクセスでき、アプリによってプログラムで有効または無効にすることはできません。

リファレンスモードは、12.9インチの第5世代iPad Proでサポートされています。

iPadをスタンドアロンデバイスとして使用できますが、iPadをmacOSデバイスのセカンダリモニターとして使用できる機能であるSidecarにも新しい機能をもたらします。

以前は、サイドカーはEDRをサポートしていませんでした。

しかし、現在、サイドカーディスプレイとして使用されるiPadでリファレンスモードが有効になっている場合、サポートされているフォーマットのリファレンスカラーレンダリングを有効にするだけでなく、EDRをサポートします。

この新機能では、macOS Venturaを搭載したAppleシリコンMacをSidecarディスプレイのホストとして使用する必要があります。

参照モードを有効にすると、設定メニューの他のいくつかの項目が操作されます。

一貫したカラーレンダリングを実現するために、明るさスライダーはロックされ、ダイナミックディスプレイ機能はオフになります。

これには、True ToneとNight Shiftの無効化とロック、自動明るさ機能が含まれます。

リファレンスモードを有効にするタイミングと方法を説明したので、リファレンスモードの特定の機能とともに、リファレンスカラーを実行することの意味を詳しく見てみましょう。

先に述べたmacOSプリセットと同様に、リファレンスモードはカラーマネジメントを使用していくつかの異なるメディアフォーマットをサポートします。

これにより、各フォーマットの仕様に基づいて色が正確にレンダリングされます。

もちろん、色をどのようにレンダリングするかを決定するには、メディアにタグを付けて、それがどの形式であるかを示す必要があります。

参照カラー管理を有効にするには、ディスプレイはフォーマット標準で指定された参照環境でのみ表示する必要があります。

リファレンスモードでサポートされているビデオフォーマットは薄暗い環境が必要ですが、グラフィックは明るい屋内環境で表示する必要があります。

では、リファレンスモードはどのようなカラーマネジメントを使用していますか?

色のすべてのフォーマットは、同様の仕様で管理されました。

これには、D65ホワイトポイントと、SDRメディアの場合は100ニト、HDRメディアの場合は1000ニトのピーク輝度が含まれます。

HDRフォーマットの場合、トーンマッピングは無効になっているため、ディスプレイはフォーマットの転送機能を正確に追跡します。

また、色は1000ニトを超えず、iPadのネイティブ色域であるP3色域内にある限り、正しく表示されます。

色域外または1000ニットよりも明るい色は、トーンマッピングなしでクリップされます。

そのクリッピングの結果は、フォーマットによって異なる場合があります。

フォーマットといえば、リファレンスモードでサポートされているもののリストと、それぞれに対応するmacOSリファレンスディスプレイのプリセットがあります。

iPadでは、リファレンスモードはカラータグ付けに基づいて適切なカラーマネジメントを決定するので、プリセットを切り替える必要はありません。

タグ付けの1つの例は、この表に含まれるITU H.273コードポイントであり、QuickTimeのNCLCカラータグとして知っているかもしれません。

しかし、使用できる他の形式のタグ付けもあります。

アプリがこのリストにないフォーマットを使用している場合は、心配しないでください。

参照モードは、サポートされていないフォーマットを管理します。デフォルトの表示モードと同様の方法でレンダリングされるだけです。

これらの行の一部には複数の形式が含まれていることに気付くかもしれません。

これは、同じ行にリストされているフォーマットが、参照ディスプレイで同じレンダリングになるためです。

たとえば、HDR10とBT.2100 PQはどちらも、コードポイント9-16-9で説明されているように、BT 2020カラープライマリ、PQ転送機能、およびBT 2020 YCCマトリックスを使用します。

しかし、HDR10には、トーンマッピングを知らせるために使用できるHDRメタデータも含まれています。

iPadのデフォルトの表示モードでは、フォーマットに応じて同じコンテンツのレンディションが異なる場合があります。

しかし、参照モードはトーンマップしないため、HDRメタデータは無視され、両方のフォーマットは同じようにレンダリングされます。

一般的に言えば、リファレンスディスプレイは、色の精度を確保するために光学測定装置で較正されています。

macOSのプリセットと同様に、リファレンスモードには、ホワイトポイントの色度と輝度を1つのポイントでキャリブレーションできる微調整されたキャリブレーション機能が含まれています。

この色調整は、iPadのホワイトポイントとピーク輝度が同じデバイスで較正された他のディスプレイと一致するように、ディスプレイの経年劣化と測定デバイス間の違いを考慮することを目的としています。

これは、カラーレンダリングにおけるリファレンスモードの機能の詳細をまとめています。

次に、リファレンスモードに関連するUIScreen APIについて説明します。

しかし、そうする前に、私はすぐにEDRが何であるかを要約する必要があります。

EDRは拡張ダイナミックレンジの略で、AppleのHDR技術です。

レンダリング技術とピクセル表現の両方が含まれています。

EDRピクセルは、SDRとHDRの両方のコンテンツを表現できます。

EDRの重要な要素は、HDRピーク輝度をSDRピーク輝度で割ったヘッドルームです。

リファレンスモードでは、HDRピークは常に1000ニト、SDRピークは常に100ニトです。つまり、EDRヘッドルームは常に10倍です。

EDRは、ゼロから1までの値で表されるSDRピクセルが常にレンダリングされることを保証します。

1とEDRヘッドルームの間の値は、トーンマッピングなしで適切にレンダリングされますが、EDRヘッドルームよりも明るい値はクリップされます。

ただし、ヘッドルームがEDRとしてのコンテンツのレンダリングを正当化するのに十分な高さではないと判断し、代わりにSDRパスを実装したい場合があります。

また、独自のトーンマッピングを適用することで、利用可能なEDRヘッドルームを利用することを好む場合もあります。

いずれの場合も、UIScreenには、アプリでレンダリングの決定を行うために使用できる新しいクエリプロパティと通知があります。

具体的には、UIScreenを使用して、参照モードステータスの変更に関する通知を登録し、そのステータスの変更を照会することができます。

UIScreenを使用して、デバイスの現在および潜在的なEDRヘッドルームプロパティを照会することもできます。

それについてはもう少し後で話します。

表示モードのステータスを変更するには、UIScreen.referenceDisplayMode StatusDidChangeNotificationに登録してください。

クエリの目的で、この通知を使用して、新しいステータスと新しい潜在的なEDRヘッドルームを取得できます。どちらも、アプリのレンダリングの決定を通知する可能性があります。

たとえば、リファレンスモードが無効になっている場合は、アプリがEDRヘッドルームに基づいて独自のトーンマッピングを適用し、リファレンスモードが有効になっている場合はトーンマッピングを適用しない場合があります。

表示モードステータスの変更に関する通知を受け取ったら、UIScreenの参照表示モードステータスプロパティを使用して現在のステータスを取得できます。

これは4つの列挙型のうちの1つになります。

StatusEnabledが返された場合、参照モードは有効になり、期待どおりにレンダリングされます。

StatusLimitedが返された場合、参照モードは有効になりますが、EDRヘッドルームが10回未満に制限されているため、一時的に参照応答をレンダリングできません。

このステータスが発生すると、UI通知は、参照レンダリングが侵害されたことをユーザーに通知します。

StatusNotEnabledが返された場合、このデバイスでは参照モードがサポートされていますが、ユーザーによって有効になっていません。

そして最後に、StatusNotSupportedが返された場合、このデバイスでは参照モードはサポートされません。

次に、Swiftコードを見て、UIScreen通知を利用する方法を見てみましょう。

ここでは、NotificationCenterからデフォルトの通知オブジェクトを取得することから始めます。

次に、デフォルトの通知オブジェクトに通知オブザーバーを追加します。

この例では、screenChangedEventセレクタは、受信者がオブザーバーに送信するメッセージを決定し、通知が投稿されたことをオブザーバーに警告します。

オブザーバーへの配信を登録する通知の名前は、UIScreen.referenceDisplayMode StatusDidChangeNotificationです。

ステータスが変更されるたびに、関数screenChangedEventが呼び出されます。

このscreenChangedEventの実装例では、まずウィンドウシーンからUIScreenを取得します。

次に、UIScreenから新しいreferenceDisplayModeStatusプロパティを取得できます。

また、新しい潜在的なEDRヘッドルーム値を取得し、アプリケーションのレンダリングパスで使用することもできます。

参照モードのステータス変更通知をカバーしているので、EDRヘッドルームの話に移りましょう。

先ほど、現在と潜在的な2種類のEDRヘッドルームについて言及しました。

これらのプロパティは、EDRで作業する開発者に関連しており、参照モードに固有のものではありません。

潜在的なヘッドルームは、ディスプレイの最大限のヘッドルームを返します。

たとえば、潜在的なヘッドルームが1.0またはその他のしきい値を超えない場合は、アプリでSDRレンダリングパスを使用することを決定できます。

現在のヘッドルームはダイナミックであり、さまざまな理由で潜在的なヘッドルームよりも少ない可能性があります。

コンテンツが現在のヘッドルームを超えないように、アプリにトーンマッピングを適用することを選択できます。

簡単な例を見てみましょう。 簡単な例を見てみましょう。

前の例のように、windowSceneからUIScreenを取得することから始めます。

そこから、潜在的なEDRヘッドルームプロパティを取得します。

次に、潜在的なEDRヘッドルーム値をしきい値と比較し、SDRレンダリングパスまたは画像処理パスを実装するかどうかを決定できます。

以下は、UIScreenの現在のEDRヘッドルームプロパティを使用する方法の例です。

ドローコールでは、windowSceneからUIScreenを再度取得し、UIScreenプロパティcurrentEDRHeadroomを取得できます。

この値を使用して、クリッピングを回避し、アプリに適用する適切なトーンマップを決定できます。

UIScreen APIを取り上げ、いくつかのコードスニペットを確認したので、このビデオは終わりに到達しました。

要約すると、iPadでリファレンスモードを有効にする方法とタイミングを学びました。

リファレンスカラーレンダリングと、サポートするメディアフォーマットなど、リファレンスモードの特定の機能について議論しました。

そして最後に、UIScreenリファレンスモードの通知とEDRヘッドルームを照会するための新しいプロパティについて学びました。

AppleプラットフォームのEDRとカラー技術についてもっと知りたい場合は、過去数台のWWDCの関連トピックに関するビデオのリストを次に示します。

今年の「iOSでEDRを探索する」ビデオは、リファレンスモードの有無にかかわらず、iPadでEDRで作業している場合に特に重要です。

そして、それは私たちの話の終わりに私たちをもたらします。

アプリでリファレンスモードとそのAPIを活用していただければ幸いです。

見てくれてありがとう。