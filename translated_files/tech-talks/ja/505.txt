505

Shloka Kini: 認証コンテキストは、認証UIを提示し、IDプロバイダーサーバーと通信して顧客の資格情報を認証するWebサービスです。

これは、Apple TV配信プログラムの一環として、iOSおよびtvOSデバイスでテレビプロバイダーのシングルサインオン機能を取得するために必要な多くのステップの1つです。

認証コンテキストは、サーバーでホストされているWebサービスで、Appleデバイスにダウンロードされ、実行時に実行されます。

認証コンテキストがVideoSubscriberAccountフレームワークに認証応答を渡すと、デバイスキーチェーンに保存されます。

iOSデバイスでは、認証応答はiCloudキーチェーンを介して他のiOSデバイスに同期できます。

また、Apple TVでは、tvOSがiCloudキーチェーンをサポートしていないため、認証応答はデバイスから離れません。

認証コンテキストの目的は、サポートされているアプリ間でOSレベルの認証を提供することです。

このプロセスの最初のステップは、認証用のUIを提示することで、資格情報を入力するように促すことです。

この資格情報エントリのUIを指定するには、authentificationTemplateを使用します。

これは、ドキュメントで提供する例に似たXMLドキュメントです。

このXMLを提供すると、その人が使用しているプラットフォームに応じて、AppleシステムUIの一部のように見えるようにフォーマットします。

たとえば、ここのデフォルトのユーザー名パスワードテンプレートは、iOSとtvOSの両方のデバイスに適用できます。

autoAuthenticationTemplateは、お客様に資格情報の入力を求めません。

代わりに、どのアカウントに自動的に認証されるかを顧客に通知し、別のアカウントに手動でサインインするオプションを提供します。

このテンプレートは、iOSとtvOSの両方のデバイスにも適用されます。

顧客から直接資格情報を取得できない場合は、特別な場合に認証のための代替テンプレートを提供します。

onscreenCode AuthenticationTemplateはtvOSにのみ適用されます。

携帯電話、タブレット、コンピューターなどの別のデバイスでWebブラウザに入力するためのオンスクリーンコードを表示します。

webAuthenticationTemplateはiOSデバイスにのみ適用されます。

指定されたURLを使用して、このようにWebビューを起動します。

認証コンテキストと起動されるWebビュー間で通信するには、VideoSubscriberAccountクラスを使用します。

開始するには、JavaScriptで認証コンテキストを作成し、XMLテンプレートで認証UIを定義します。

このJavaScriptファイルをサーバーにホストします。

同じ認証コンテキストを両方のデバイスで使用できるため、1つの認証コンテキストのみを書くことを忘れないでください。

最後に、コンテキストとXMLを書いた後、テレビプロバイダーのオンボーディングデータを送信してください。

このデータには、テレビプロバイダーのUIに表示される名前、テレビプロバイダーを一意に識別するために当社のシステムで使用されるテレビプロバイダーの識別子、および認証URL、認証コンテキストにアクセスしてデバイスにダウンロードするためにテレビプロバイダーサーバーでpingする必要があるURLが含まれます。

App Store UIでテレビプロバイダーのブランドに表示するアートワークを送ってください。

アートワークの仕様の詳細については、ドキュメントを参照してください。

サポートされているチャンネルリストを送ってください。

これはオンボーディングデータのオプションです。

ここでは、チャンネルがテレビプロバイダーがサポートするアプリを参照しています。

Apple TV配信プログラムでは、認証フローの後に1つのアプリが自動的にインストールされます。それがメインアプリです。

テレビプロバイダーの資格情報を使用する追加のアプリがある場合は、このリストを使用して、他のテレビプロバイダーがサポートするアプリを顧客に表示します。

認証コンテキストの開発を開始するには、VideoSubscriberAccountフレームワークが認証コンテキストに対して行った要求のコールバックを処理します。

1つ目はonLaunchです。

これは、VideoSubscriberAccountリストからテレビプロバイダーが選択された後に何が起こるかを示します。

テレビプロバイダーを選択すると、次のコールバックまで保留中の画面が表示されます。

onShowUserInterface。

起動後、コールバックを処理して、資格情報入力の認証テンプレートを表示する必要があります。

次はonRequestです。

資格情報が入力された後、それらの資格情報を取り、IDプロバイダーサーバーに直接送信します。

これらの資格情報はデバイスに保存されません。

認証応答は、システムレベルの認証を確立するために、サーバーから認証コンテキストにVideoSubscriberAccountフレームワークに送り返されます。

アプリレベルの認証要求は、このシステムレベルの認証が良好である場合にのみ、処理のために送信されます。

アプリケーションをデバッグするには、iOSおよびtvOSデバイスで開発者モードを有効にして、コードが公開される前にテレビプロバイダーを追加およびテストします。

認証コンテキストを具体的にデバッグするには、Safari Web Inspectorを使用します。

macOSデバイスがJavaScriptをデバッグできるように、デバイスでWebインスペクタを有効にしてください。

要約すると、認証コンテキストは、テレビプロバイダーのIDプロバイダーサーバーとVideoSubscriberAccountフレームワーク間の通信を容易にするJavaScriptベースのWebサービスです。

ありがとうございます。