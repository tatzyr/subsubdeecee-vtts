801

iPhone Xのスーパー網膜ディスプレイは、コンテンツを表示し、深く没入感のある体験を作成するためのより多くのスペースを提供します。

このビデオは、すべてのiOSデバイスで見栄えが良く、気分が良くなるアプリやゲームの設計を始めるのに役立ちます。

まず、新しいディスプレイのいくつかの重要な側面を確認しましょう。

iPhone Xのディスプレイには3倍の画階があります。

画像アセットを作成して配信するときは、解像度に依存しないため、アプリのサイズを大幅に縮小する可能性があるため、PDFを使用することをお勧めします。

ラスタライズされた画像が必要な場合は、アプリのアセットカタログに2倍と3倍の両方の解像度を含めるようにしてください。

生産プロセスを合理化するために、Apple UIデザインリソースに含まれているテンプレートを使用することをお勧めします。

Appleヒューマンインターフェースガイドラインのリソースページからダウンロードできます。

iPhone Xのディスプレイの寸法は幅375ポイント、高さ812ポイントです。

3倍のディスプレイでは、これは1125 x 2436ピクセルに相当します。

375ポイントは、iPhone 6、iPhone 7、iPhone 8の4.7インチディスプレイと同じ幅です。

したがって、これらのデバイスの狭い寸法に沿って提示される情報の量に違いはないはずです。

812ポイントの高さは、4.7インチのディスプレイよりも145ポイント高いです。

この追加の高さは、コンテンツに約20%多くのスペースを提供します。

もちろん、スーパー網膜ディスプレイの最も顕著な特徴は、その形状です。

ディスプレイは、対称的な外観のために、4つの丸みを帯びた角すべての周りの製品のデザインに従います。

新しいディスプレイで動作するようにアプリを更新するには、ディスプレイのビューポートを埋めるために視覚的な要素を拡張すると同時に、コントロールや重要な情報がコーナーでクリップされたり、センサーハウジングで覆われたりするのを防ぎます。

iPhone Xでは、ディスプレイの下端に沿ってどこでも上にスワイプして、アプリスイッチャーとホーム画面にアクセスします。

画面下部のインジケーターは、このインタラクションに関するヒントを提供します。

このインジケーターは、アプリのインターフェース上に表示されます。

アプリを設計する際には、これを考慮する必要があります。

アプリがUIKitコントロールと自動レイアウトを使用している場合、iPhone Xやその他のデバイスの設計と開発は簡単であるべきです。

ナビゲーションバー、テーブル、コレクションビューなどの標準UIKit要素は、iPhone Xで表示すると自動的に調整されます。

ナビゲーションバー、タブバー、ツールバーは、すべてのiOSデバイスで適切に配置され、拡大縮小されています。

ナビゲーションバーの背景素材はディスプレイの上端まで拡張され、タブバーとツールバーの背景素材は下部に拡張され、含まれている要素は他の要素による下取りやクリッピングを防ぐために配置されています。

横向きでは、テーブルビューはディスプレイの全幅にまたがり、テーブルセルのコンテンツビューは挿入されます。

アプリが自動レイアウトを使用している場合、ビューはiPhone Xの大きなディスプレイサイズに自動的に適応できます。

iOS 11では、セーフエリアレイアウトガイドと呼ばれる新しいレイアウトガイドが自動レイアウトに追加されました。

セーフエリアレイアウトガイドは、コンテンツやコントロールを配置する際にシステムUI要素のアンダーラップを避けるのに役立ちます。

iPhone 8では、バーが見えない場合、セーフエリアはビューポートと同じサイズです。

ステータスバーが表示されている場合は、ステータスバーの高さを考慮して、セーフエリアの上端が下がります。

セーフエリアは、ナビゲーションバーとツールバーまたはタブバーを収容するためにさらに挿入されています。

iPhone Xでは、セーフエリアのレイアウトガイドが追加の利点を提供します。

画面にバーが表示されない場合でも、画面の端の上部と下部から縦向きで挿入されます。

これは、センサーハウジング、ディスプレイの丸みを帯びたコーナー、ホームインジケーターから離して配置することで、インターフェイス要素がクリップされたり覆われたりするのを防ぐのに役立ちます。

横向きでは、セーフエリアは同じ理由で画面とホームインジケーターの側面から挿入されます。

したがって、たとえば、これらのテーブル行セルのコンテンツビューの幅は、センサーハウジングに重なり込んだり、ディスプレイの丸みを帯びたコーナーにクリップされたりするのを防ぐために、セーフエリアによって制限されています。

そして、テーブルの上端は、ナビゲーションバーのアンダーラッピングを避けるために挿入されています。

オクルージョンとクリッピングが問題ではないiPhone 8では、セーフエリアの幅はディスプレイの幅と一致し、テーブルは端から端まで実行できます。

テキストとコントロールが実際にセーフエリアから挿入されていることに気付くでしょう。

この挿入は、レイアウトマージンと呼ばれる別のレイアウトガイドを使用して達成されます。

レイアウトマージンは、アプリ間で一貫したコンテンツマージンを提供し、ナビゲーションバーボタンなどの他のコントロールにコンテンツを揃えるのに役立ちます。

自動レイアウトを使用していなくても、UIViewはセーフエリアのインセットとレイアウトマージン値をプロパティとして提供します。

さて、自動レイアウトに関する最後のメモ。

iPhone 6、7、8、およびXはすべてコンパクト幅サイズクラスに属します。

これは本質的に、アプリのレイアウトがこれらすべてのデバイスで一貫している必要があることを意味します。

アプリにカスタムコントロールや非標準のレイアウトがある場合は、iPhone Xでうまく機能するために、アプリのインターフェースにわずかな変更を加える必要があるかもしれません。

これには2つの側面があります。

まず、アプリやゲームは常にそれが実行されているディスプレイを埋める必要があります。

画面の上部または下部に黒いバーを配置すると、アプリが小さく、窮屈で、iPhone Xの他のアプリと矛盾しているように感じます。

背景グラフィックをデザインするとき、または背景シーンをレンダリングするときは、iPhone Xのディスプレイは4.7インチのディスプレイとは異なるアスペクト比を持っていることを覚えておいてください。

iPhone 8の16:9アスペクト比用に設計された背景グラフィックは、塗りつぶしにスケーリングされている場合はiPhone Xの左右の端に沿ってトリミングされ、フィットするようにスケーリングされている場合はレターボックス化されます。

同様に、iPhone X用に設計された背景グラフィックは、iPhone 8の上端と下端に沿ってトリミングされるか、ピラーボックス化されます。

ディスプレイのアスペクト比に関係なく、重要な視覚情報が引き続き見えるように、画像を構成するのが最善です。

レイアウトの更新の2番目の部分には、インタラクティブな要素と重要な情報を設定または再配置することが含まれます。

ビューポートのエッジやコーナーに近すぎるエレメントは、ディスプレイの丸みを帯びたコーナーでクリップされたり、センサーハウジングで覆われたりする可能性があります。

したがって、これを避けるために、必ずコントロールやその他の要素を挿入してください。

繰り返しますが、セーフエリアのレイアウトガイドとレイアウトマージンは、適切な挿入値を決定するために使用する必要があります。

また、デバイスのエッジに沿って配置されたコントロールは、デバイスの保持方法によっては、到達するのがより困難になる可能性があることも注目に値します。

インセットコントロールは、それらとの対話をより迅速かつ快適にすることができます。

隅や画面の端の下に隠れているように見える視覚的な要素は、それらをインセットすることはおそらく正しく見えないので、修正する必要があるかもしれません。

場合によっては、異なる視覚治療が必要になる場合があります。

また、iPhone Xではステータスバーが高くなりますのでご注意ください。

固定ポイント値で挿入されたコンテンツビューは、トップエッジがステータスバーでカバーされます。

iPhone Xでは、電話や位置追跡などのバックグラウンドタスクが実行されているときに、ステータスバーの高さが変更されなくなりました。

これは、ステータスバーのスタイルに関係なく、より一貫性のあるユーザーエクスペリエンスを作成するのに役立ちます。

iPhone Xでは、ステータスバーは、アプリがおそらく完全に利用しない画面の領域を占有します。

アプリのインターフェースのためのより多くのスペースを主張するためにステータスバーを非表示にした場合、それがまだ必要かどうかを再考することをお勧めします。

さて、風景の向きについての簡単なメモ。

ほとんどのアプリは、コントロールと視覚情報が中央に配置されているときに最もよく見え、機能します。

デバイスの回転方法に基づいてシフトする非対称レイアウトは、一貫性のないユーザーエクスペリエンスにつながり、筋肉の記憶を構築する人々の能力を損なう可能性があります。

最後に、アプリスイッチャーとホーム画面にアクセスするために上にスワイプできることを人々に知らせる指標に関連するいくつかの重要な考慮事項。

このインタラクションはiOSデバイスを使用する経験の中核であるため、インジケーターは常にはっきりと見える必要があります。

これを達成するために、iOSはインジケーターの外観を動的に調整し、背景に対して十分なコントラストを維持します。

インジケーターは明るい背景に対して暗く、暗い背景に対して明るく見えます。

ホームインジケーターとうまく機能するようにアプリのインターフェースを設計するときは、インジケーターの近くにインターフェース要素を配置しないようにするのが最善です。

スクロールできないすべてのコンテンツを安全なエリア内に配置することで、インジケーターの周りに負のスペースを残すだけです。

また、ブラケット、ベゼル、その他の手段などの視覚的な装飾品を通じて、インジケーターに特別な注意を引くことも望ましくありません。

前述のように、人々はディスプレイの下端から上にスワイプすることで、アプリスイッチャーとホーム画面にアクセスします。

ほとんどの場合、スワイプジェスチャーはディスプレイの中央で発生する傾向があるため、このインタラクションがアプリのインタラクションと競合する可能性は低い。

ただし、アプリやゲームがディスプレイの一番下に沿ってスワイプすることを奨励している場合は、ディスプレイの下端のエッジ保護をオンにすることをお勧めします。

これにより、インジケーターがより微妙な外観になり、動作が変更され、アプリを終了するには2回のスワイプが必要になります。

最初のスワイプまたはドラッグは、インジケーターを持ち上げ、コントロールを有効にします。

2回スワイプしている間、人々はあなたのアプリやゲームを終了することができます。

エッジ保護は一貫性のないユーザーエクスペリエンスにつながるため、絶対に必要な場合にのみ使用する必要があります。

スワイプとは異なり、ディスプレイの下端をタップすると、アプリやゲームにのみ影響します。

たとえば、テーブル行のセルをタップすると、インジケーターの背後にあるかどうかにかかわらず、同じ結果が得られます。

テーブルやコレクションビューなどの垂直スクロール可能なビューは、セーフエリアによって制約されるのではなく、ディスプレイの下部まで拡張する必要があります。

最後に、フルスクリーンのビジュアルコンテンツを表示するときに自動非表示動作を有効にすることができます。

自動非表示により、ディスプレイが数秒間タッチされていない場合はインジケーターがフェードアウトし、ディスプレイがタッチされるとフェードインします。

自動非表示は控えめに使用し、人々が頻繁にディスプレイに触れる可能性が低い受動的な体験にのみ使用してください。

OK、iPhone Xのデザインガイダンスについては、developer.apple.com/designのAppleヒューマンインターフェースガイドラインをご覧ください。

そして、あなたがそこにいる間、iOS Apple UIデザインリソースの最新バージョンをダウンロードしてください。

iPhone X用のSketchとPhotoshopのテンプレートを更新しましたが、近日中にさらにアップデートされる予定です。