10884

Deena Khattab: こんにちは、Apple Designチームのデザイナー、Deena Khattabです。

後で、同僚のジェニファーとマシューが参加します。

Apple Watch Series 7の設計プロセスについて話すことに本当に興奮していますが、始める前に、何が新しいのかを簡単に見てみましょう。

Apple Watch Series 7には、41mmと45mmの2つの新しいサイズがあります。

どちらの時計も、これまで以上に大きなアクティブコンテンツエリアを備えています。

41mmは176×215ポイント、45mmは198×242ポイントです。

Apple Watch Series 7のディスプレイは端をカーブし、微妙なラップアラウンド効果が特徴です。

画面の周りのベゼルは、かつてないほど薄く、見えにくくなっています。

さらに、画面は以前のデバイスよりも角の半径が大きいです。

これらの重要なハードウェアの違いを念頭に置いて、UIを形作るための3つの有用な設計原則を特定しました。

シリーズ7には、私たちが監視した中で最大のコンテンツエリアがあります。

使いやすさを向上させるために追加のスペースを最大限に活用するために、UIコンポーネントを拡大しました。

時計アプリでより明確な階層を作成するために、タイポグラフィと色を綿密に調べました。

Apple Watchは常に軽量で目を見やすい体験でした。

私たちは、一目でより良い場所の感覚を提供するために、ナビゲーションとウェイファインディングを調べました。

要約すると、Apple Watch Series 7のアプリは、より大きく、より明確で、より目を見やすいはずです。

次のセクションでは、ジェンは、更新されたUI要素を使用して、これらの原則を自分のアプリに具現化する方法について説明します。

ジェニファー・パットン:ありがとう、ディーナ。レイアウトの余白から始めましょう。

コーナーが非常に湾曲しているため、コンテンツはコーナーにうまく収まるように入ったり降りたりする必要があります。

ステータスバーは背が高く、画面の下部にある背の高いスクロールクリアランスマージンと一致します。

そして、アクティブなディスプレイエリアとハードウェアケーシングの間の小さなベゼルで、私たちは画面の端に近いコンテンツについて識別していました。

レイアウトマージンはシリーズ7で寛大で、コンテンツに十分な呼吸の余地を与えます。

マシュー・クワンス:ありがとう、ジェニファー。

こんにちは、私の名前はマシューです。

watchOSでマージンを効果的に使用する方法の例として、株式を使ってみましょう。

まず、すでに適用されている余白を削除しましょう。

ご覧のとおり、このレイアウトにはいくつかの問題があります。

詳しく見てみましょう。 

最初の問題は、現在の株価のテキストです。

ディスプレイの端に非常に近いです。

これは、Apple Watch Series 7のラップアラウンドディスプレイに問題がある可能性があります。

2番目の問題は、ディスプレイの隅にクリップされたナスダックのテキストです。

さらに、ナビゲーションバーの最先端へのテキストの配置を失いました。

SwiftUIコードでこれらの問題を解決する方法を見てみましょう。

ここには、シンプルなVStackである株式レイアウトのスニペットがあります。

まず、.scenePadding修飾子を使用して、現在の価格ビューのレイアウトを調整できます。

この修飾子は、レイアウトマージンにシステム定義のパディングを適用します。

ご覧のとおり、これにより現在の価格ビューのレイアウトが解決されます。

以下のナスダックのテキストで同じ.scenePadding修飾子を使いましょう。

そしてもう一度、これは私たちのレイアウトの問題を解決し、私たちが探していたアライメントを回復します。

日チャートに修飾子を適用しなかったことに注意してください。

このチャートのような一部のコンテンツは、ディスプレイの端に行くのにまったく問題ありません。

.scenePadding修飾子を使用して、ディスプレイの端で歪んだりクリップされたりするテキストコンテンツにのみ保存してみてください。

ジェニファー：今年は、アプリをより見やすくし、より良い場所の感覚を提供し、アプリ内でより明確な階層を確立するために、大きなタイトルをwatchOSに持ち込みました。

スクロールテーブルビューは、iOSの大きなタイトルと同様に、この大きなタイトルを取得します。

タイトルはスクロール時にステータスバーに移行します。

ルートレベルとサブビューは大きなタイトルを取得します。

設定は、明確な場所の感覚を定義するためにアプリで大きなタイトルを使用する方法の素晴らしい例です。

スクロールしない固定ビューでは、タイマーのような機会を探して、ビューのタイトルをコンテンツ領域とステータスバーから持ち込んだり、不要な場所で完全に削除したり、戻るボタンのナビゲーションからビューのタイトルを離婚したりしました。

また、この世界時計の詳細例のように、ステータスバーが依然としてタイトル情報に最適な場所である固定ビューもあります。

大規模なタイトルは、特にシリーズ7で利用可能なより大きなアクティブコンテンツエリアに触発されましたが、以前の40および44 mmデバイスでもうまく機能します。

マシュー：SwiftUIを使用すると、アプリの大きなタイトルを簡単に設定できます。

watchOS 8のデフォルトでは、すべてのナビゲーションタイトルは大きく、アプリケーションのアクセントカラーで着色されています。

特定のビューに大きなタイトルを付けたくない場合は、.navigationBarTitleDisplayMode修飾子を使用できます。

この修飾子を適用すると、階層内の後続のビューは、上記のビューの表示モードを継承します。

ジェニファー:カラーは、ウェイファインディング、情報階層、アプリの個性を示すことを目的としています。

このマインドフルネスの例では、ティールカラーがアプリのアイデンティティと体験を強化します。

システムティールをアプリのキーカラーとして使用し、システムグレーのプラッターの背景色を押し戻して、よりミュートされた効果を作成します。

リストビューアプリはウォッチで一般的です。

このメールの例では、青い背景を使用すると、同様のナビゲーションパターンを使用する別のアプリではなく、メールアプリにいることを強制します。

この例では、明るい黄色のプラッターは、ワークアウトのような他のカルーセルナビゲーションアプリとヒントを視覚的に区別します。

また、すべてのプラットフォームでTipsエクスペリエンスの継続性を強化します。

マシュー：アセットカタログでアプリケーションのアクセントカラーを設定できます。

ここで色を設定すると、すべてのナビゲーションバーが自動的にこの色を使用します。

アクセントカラーの設定の詳細については、開発者ドキュメントを参照してください。

さらに、.accentColor修飾子を使用することで、SwiftUIで自分で色を簡単に使用できます。

メールでは、listItemTintをアプリケーションのアクセントカラーを30%の不透明度に設定します。

ジェニファー：シリーズ7の時計のデザイン中に、ボタンやボタンの形も詳しく調べました。

現在のボタンシステムはこんな感じです。

スクロールビューに見られる丸みを帯びた長方形のボタンがあり、スクロールしない固定ビューでしか見られないピン留めされたボタンのセットがあります。

それらは画面の下部に固定され、画面の形状を補完することを目的としています。

シリーズ7では、スクロールボタンと非スクロールボタンの同じ基本システムを拡張しました。

一般的なセカンダリボタンの配色に簡素化し、サイドバイサイドボタンはスプリットロゼンジ形状からサイドバイサイドピル形状に切り替えています。

更新されたアプリのボタンの例をいくつか紹介します。

左側のアラームリストのプライマリスクロールボタンと右側のUIPickerViewのサイドバイサイドボタン。

これらのピン留めされたボタンの形を詳しく見てみましょう。

シリーズ7のボタンの形を作るのに細心の注意を払いました。

これは、単純な錠剤の形を使用することがどのように見えるかの例です。

下部のボタンの平らな面がディスプレイの曲率でどのように張力を作り出すかを見てください。

そして、これが細工されたボタンの形です。

もう一度やります。

変更は微妙ですが、ディスプレイ自体の形状からボタンの形状を導き出すことで、これらのボタンは画面の下部に固定され、時計のハードウェアと調和します。

更新されたボタンは、プレシリーズ7デバイスにも戻ります。

ボタンの高さは同じままなので、既存のUIにこれらの新しいボタンを採用するためにレイアウトの更新は必要ありません。

マシュー：新しいApple Watch Series 7の外観でSwiftUIのすべてのボタンを更新しました。

ほとんどの場合、これは自動的に行われ、アプリで変更は必要ありません。

そうは言っても、いくつかのことを念頭に置いておくことが重要です。

ここに示されているキャンセルボタンのようなボタンを定義すると、SwiftUIはあなたに代わっていくつかのデフォルトの修飾子を適用しています。

watchOSのボタンは、デフォルトでボーダーボタンスタイルと自動ボーダーシェイプを使用します。

自動境界線形状は、コンテキストに基づいて境界線形状が変更されることを意味します。

スクロールビューの外側では、形状はカプセルです。

たとえば、これらのキャンセルボタンとスタートボタン。

スクロールビューでは、ボタンは丸みを帯びた長方形の形をしています。

例えば、アラームの追加ボタン。

さらに、ボーダード・ス prominentと呼ばれる代替ボタンスタイルがあります。

このスタイルは、アラームで行うボタンにアプリケーションのアクセントカラーを適用します。

これにより、ボタンがより顕著な外観が生まれ、すぐにあなたの注意を引きます。

ディーナ：この次のセクションでは、タイポグラフィの更新について説明します。

シリーズ7は、シリーズ6と同じデフォルトタイプサイズを使用します。40mmと41mmの場合は大、44mmと45mmの場合は特大です。

その結果、以前のデバイスよりも多くの文字数を獲得します。

また、3つの大きなタイプサイズを追加することで、アクセシビリティを向上させるためにタイプを使用しました。

これがデフォルトのタイプサイズのメールアプリです:特大。

そして、これは新しいAX1、AX2、AX3にあります。

時計でより大きなタイプを使用したい人を助けるために、スマートタイプの提案を追加しました。

セットアップフローでは、携帯電話は大きなタイプ設定が実装されているかどうかを識別し、新しい時計に同様のタイプサイズを提案します。

この機能により、最初からお好みのタイプサイズを簡単に使用できます。

タイポグラフィに焦点を当てながら、SFシンボルでテキストラベルを補完することをお勧めします。

リストビューベースのナビゲーションを備えたアプリの場合は、メールや電話などのアプリケーションのアクセントカラーでアウトラインシンボルを使用することをお勧めします。

これは、クロスプラットフォームの一貫性とアクセシビリティに役立ちます。

可能な限り、シンボルのスタイルと色をプラットフォーム間で調整します。

SFシンボルの詳細については、WWDC21からのこれらの講演をチェックしてください。

次に、Apple Watch Series 7の新しいキーボードとテキスト入力機能を強調します。

アクティブな画面領域が大きいため、フルキーボードを追加しました。

時計用に特別に設計されたこのキーボードでは、キーの周りに境界線を描画しません。

これにより、タップターゲットを見逃す可能性があるという感覚を避けながら、スワイプして入力することが促進されます。

入力可能なスペースを最大化するために、削除キーをキーボードからテキストフィールドに引き出しました。

さらに、キーボードでは、パスワードや2要素認証などの特定のユースケースの自動入力タイプをカスタマイズできます。

キーボードのサポートに加えて、テキスト入力の機能を改善しました。

左右のアクセサリーは、SFシンボルを使用してカスタマイズできます。

タップ性を強調するために、両方のシンボルにアプリケーションのアクセントカラーを使用することをお勧めします。

入力フィールドのプレースホルダテキストと提案されたリストのタイトルに説明的な単語を使用してください。

キーボードとテキスト入力の詳細、およびアプリケーションでの最適な使用方法については、これらのWWDC21トークをチェックしてください。

シーンパディング、自動ボタン形状、階層ナビゲーションで、新しいディスプレイの可能性を最大限に活用する方法を紹介しました。

シリーズ7の設計に関するその他のリソースについては、WWDC21の「watchOS 8の新機能」と「SwiftUIの新機能」をチェックしてください。