201

iOS 11 SDKに対してアプリをリンクすることは、iPhone Xの超網膜ディスプレイを利用するために必要な唯一のことです。

アプリが主に標準のUIKitコントロールに基づいており、自動レイアウトを使用している場合は、ほとんどの作業がUIKitによって行われるため、良好な状態です。

カスタムコントロールを使用している場合、または自動レイアウトを使用していない場合、または多くのゲームのようにカスタムフルスクリーンアプリである場合は、心配しないでください。

あなたがやるべき仕事があるかもしれませんが、それは難しくなく、新しいセーフエリアレイアウトガイドのようなツールで多くのサポートが組み込まれています。

いずれの場合も、特にランドスケープでアプリを徹底的にテストして、すべてが正しく見えることを確認する必要があります。

Xcodeの最新バージョンには、iPhone Xのシミュレータサポートが含まれており、ほとんどのレイアウトの変更、特にセーフエリアの尊重に関する調整を行うことができます。

メタルを使用するアプリや、フロントカメラなどのハードウェア機能など、一部のアプリでは、実際のデバイスを使用する必要がある場合があります。

新しいiPhone Xシミュレーターを簡単に見てみましょう。

他のiPhoneやiPadシミュレーターと同様に、多くの組み込みシステムアプリにアクセスできます。

これは、iPhone XでさまざまなUIKitコンポーネントがどのように動作するかの例を見るのに最適な方法です。

たとえば、ファイルアプリは、統合された検索バーや大きなナビゲーションバーのタイトルなど、動作中の最新のiOS 11 APIの多くを表示します。

また、シミュレーターでiCloudアカウントにサインインして、iCloud Driveにアクセスできることを忘れないでください。

これにより、ファイルを転送したり、写真などのコンテンツをシミュレーターにテストしたりすることが本当に簡単になります。

もう1つの良い例は、iPhone Xでテーブルビューがどのように動作するかを示す連絡先アプリです。

シミュレータを横向きに回転させると、セクションヘッダーなどの動作が端から端まで見られますが、テーブルの内容はセーフエリアに従ってインデントされたままです。

テーブルビューについては、後で詳しく説明します。

私が取り組んでいるアプリ、WWDCアプリに移りましょう。

私はそれをiPhone Xに移すのに少し時間を費やしましたが、私が遭遇したいくつかのレイアウトの問題と、それらをどのように修正したかを共有したいと思います。

WWDCアプリは、実際にはかなり典型的な現実世界のアプリです。

それは何年も前から存在しており、毎年さまざまなエンジニアによって取り組んできました。

多くの標準コントロールと自動レイアウトを使用していますが、カスタムビューもあり、アプリの古い部分は代わりに手動レイアウトを行います。

iPhone X用にアップデートする必要がある3つの異なる領域を強調するために使用します。

Xcode 9でプロジェクトを開き、Base SDKをiOS 11に設定することから始めました。

だから、私たちは皆、ネイティブ解像度で実行する準備ができています。

アプリでこれを行う場合、iPhone Xのフル解像度で実行されていない場合は、Launch Storyboardを設定していることを再確認してください。

さて、私たちの最初のビューはビデオタブで、これはかなり良さそうです。

これは、標準のナビゲーションバーとツールバーコントロールとともに、自動レイアウト付きのUICollectionViewを使用した今年のすべての新しいコードでした。

だから、UIKitが私のためにほとんどの仕事をしているので、ほとんどのインターフェイスが正しくレイアウトされていることには本当に驚きません。

自動レイアウトを使用しない場所の1つは、ニュースタブにあります。

それを見てみましょう。それを見てみましょう。

このビューは、UIの手動レイアウトを行っているにもかかわらず、実際にはかなり良く見えます。

私たちは自動レイアウトを直接使用していませんが、レイアウトを行うコードはレイアウトマージンインセットに注意を払っており、UIKitはセーフエリアを尊重するようにそれらを自動的に調整しています。

私が遭遇した最初の問題は、ニュースタブにあり、フルスクリーンの写真ビューアにあります。

この特定のビューは自動レイアウトを使用していますが、ページコントロールは画面下部に遠すぎます。

ホームインジケーターに走っています。

ここでの問題は、ページコントロールの下部制約が、フルスクリーンでホームインジケーターの後ろにあるスーパービューに相対的であることです。

スーパービューに制限するのではなく、ページコントロールを下部のセーフエリアレイアウトガイドに制限する必要があります。

今、その変化をしましょう。

Xcodeでこのインターフェイスを開きましたが、制約を調整する前に、このxibファイルでセーフエリアレイアウトガイドを有効にする必要があります。

Xcode 9より前に作成されたストーリーボードとxibsでは、セーフエリアのレイアウトガイドが自動的にオンになることはありません。

[ドキュメント] インスペクタに移動し、[セーフ エリア レイアウト ガイドを使用] チェックボックスを選択します。

ここで注意すべきことの1つは、iOSのストーリーボードの場合、これをオンにすると、シーンの上部と下部のレイアウトガイド、および前縁と後縁に結びついた制約が自動的にアップグレードされるということです。

したがって、これをオンにした後、必ず自動レイアウトの制約を確認してテストしてください。

これで、ページコントロールの一番下の制約を選択できます。

そして、この制約の属性インスペクタを見てください。

ここでは、制約がスーパービューの下端に接続されており、それがコントロールをあまりにも下に保っていることがわかります。

スーパービューの代わりに、これをセーフエリアに接続するように変更すると、iPhone Xではページインジケーターが自動的にホームインジケーターの上に移動します。

今ビルドして実行すると、ページコントロールは適切な場所にあり、これはポートレートとランドスケープの両方で機能します。

私が見つけた2番目の問題に移りましょう。これは「ビデオ」タブにあります。

繰り返しになりますが、物事はかなり良さそうに見えますが、検索フィールドを持ち出すと、まあ、それはあまり正しく見えません。

これを連絡先アプリのルックスと比較してみましょう。

ここではいくつかのことが間違っているように見えます。

検索バーの背景の色が正しくなく、サイズが少しずれています。

そして、私が風景に回転すると、私は物事がここでも正しく見えないことがわかります。

検索フィールドとキャンセルボタンは、どちらも画面の丸みを帯びた角によってクリップされています。

これは、セーフエリアに注意を払うことが本当に重要な典型的な例です。

この検索フィールドでは、WWDCアプリが行っていることは、UI検索コントローラーを明示的に提示することです。

iOS 11では、検索バーをナビゲーションバーと統合することができ、連絡先で見たような適切なプレゼンテーションを提供します。

コードを見て、その変更を加えましょう。

これが私たちの検索コントローラーを提示するコードです。

私は2つの変更を加えるつもりです。

まず、検索コントローラーを提示する代わりに、このビューコントローラーのUINavigationItemに渡します。

次に、検索コントローラーのisActiveプロパティをtrueに設定します。

これにより、ナビゲーションバーがアクティブになり、編集が開始されます。

可用性サポートを使用して、古いバージョンのiOSの既存の動作を維持しながら、iOS 11でのみこれを行うことができることに注意してください。

それがどのように見えるかを見るために構築して実行しましょう。

はるかに良いです。

これは、iOS 11の検索フィールドの正しい表示のように見えます。

そして、風景の中で?素晴らしい。そして

今、検索バーはセーフエリアにうまく収まっており、これはすべてナビゲーションバーによって自動的に管理されています。

ナビゲーションバー付きのUIに検索バーがある場合は、間違いなくiOS 11で同様の変更を加えたいです。

それでは、私が取り組む必要があったアプリの3番目の部分を見てみましょう。

スケジュールタブでは、UITableViewを使用しています。

ポートレートのレイアウトはかなり良さそうですが、正しく見えない検索バーの別のケースがあります。

これはたまたまヘッダービューとしてテーブルビューに挿入されますが、代わりに以前と同じ変更を適用してナビゲーションバーと統合することができます。

ビューコントローラーのナビゲーション項目に検索コントローラーを設定し、アクティブ状態を適切に設定します。

構築して実行しましょう。

これは素晴らしく見えます。

横向きに回転すると、検索フィールドは問題なく見え、ほとんどのUIは安全な領域を尊重しているように見えます。

しかし、よく見ると、テーブルセクションのヘッダーにカスタム背景色を使用しますが、それは間違っているように見えます。

色は、連絡先アプリのように、画面の端まで伸びている必要があります。

コードを見ると、アプリがヘッダービューのcontentViewに背景色を設定していることがわかります。

それは合理的なことのように思えますが、実際、iPhone X以外のiPhoneでは問題なく動作します。

では、ここでの問題は何ですか?

何が起こっているのかを理解するには、テーブルビューがiPhone Xで物事をどのようにレイアウトするかの詳細を見る必要があります。

これを説明するために、Xcodeの本当に便利なView Hierarchyデバッガから始めましょう。

これが私たちが見ていた景色です。

右下では、表示ビュー範囲を調整して、テーブルビュー自体以外のすべてのビューを非表示にすることができます。

テーブルビューは画面のフルサイズになります。

次に、テーブルビューのセルを含むように可視範囲を調整します。

細胞が端から端までどのように伸びているかに注目してください。

私はそれを強調表示するために1つを選択し、それがどこにあるかを説明するために、このビューの上にセーフエリアをオーバーレイします。

今、私はより多くのビューを画像に引き込むために可視範囲を拡張し続けます。

私たちが今見ているのは、セルのコンテンツビューが自動的にセーフエリアに挿入されているということです。

したがって、これはテーブルセルのサイズ、端から端まで続くセルのサイズと、挿入されたセルのコンテンツビューとの間に不一致を引き起こします。

ここに関係している見解のいくつかを強調します。

しかし、今、この写真は少し忙しくなっているので、これを単純化し、これらのビューにラベルを付けましょう。

デフォルトでは、テーブルセルはコンテンツビューを挿入し、セーフエリア内にあります。

そのsetting行動は、あなたがコントロールできるものです。

Xcodeでは、コンテンツビューインセットをセーフエリアにチェックボックスを使用できます。

コードで設定できる対応するプロパティもあります。

チェックボックスをオフにすると、コンテンツビューは挿入されず、コンテンツビューは端から端へと移動します。

ここでの最後のポイントは、コンテンツビューの設定に関係なく、コンテンツビューのレイアウトマージンはデフォルトでセーフエリアに対して引き続き相対的であるということです。

コンテンツビューの設定と同様に、これらのレイアウトマージンの動作を制御できるプロパティがあります。

これと他のマージン関連のオプションの詳細については、最後に言及するドキュメントとWWDCビデオで入手できます。

さて、テーブルビューがセーフエリアに関してセルをどのように配置するかを見たので、ヘッダービューの背景色を設定していたコードに戻りましょう。

セーフエリアに挿入されているコンテンツビューでのみ設定していることがわかります。

この時点で、この問題を解決するにはいくつかの異なる方法があります。

そのうちの1つは、コンテンツビューをセーフエリアに設定するというテーブルビューのデフォルトの動作を無効にすることですが、そうすると、コンテンツビューの他のすべてにも影響し、この有用なデフォルトの動作が失われます。

代わりに、ここでの最善の解決策は、背景ビューの背景色を設定することです。これは、挿入コンテンツビューとは異なり、セーフエリアの挿入に関係なく、セルの全幅にまたがります。

その変更により、ビルドして実行すると、ヘッダーの背景色が端から端まで行かないこの場所から、色がテーブル全体にまたがるが、コンテンツビューがまったく変更されないこのようになります。

それはずっと良く見えます。

これらは、iPhone X用のWWDCアプリをアップデートする際に遭遇した問題の3つの例です。

それらは修正が難しくなく、ほとんどがランドスケープビューに関係していました。

いくつかの簡単なリマインダー。

iOS 11 SDKとリンクし、Launch Storyboardを含めると、アプリのフルスクリーンネイティブ解像度が可能になります。

また、ポートレートでいくつかの問題が発生する可能性がありますが、大部分は横向きである可能性が高いので、インターフェイスを左と右の両方に回転させて、すべてのUIをテストしてください。

セーフエリアを尊重することで、ほとんどの問題を回避できます。

自動レイアウトとsafeAreaLayoutGuidesは、多くのレイアウトの課題を自動的に処理しますが、手動レイアウトを行っている場合は、セーフエリアインセットにアクセスでき、必要な計算を行うことができます。

この情報は、UIViewクラスを介して入手できます。

また、画面下部のホームインジケーターに干渉しないことも重要です。

ホームインジケーターとiPhone X用のデザインの他の多くの側面の詳細については、アプリをこの新しい画面に持ち込むための重要な詳細がたくさんあるiPhone X用のデザインビデオを必ずご覧ください。

また、WWDC 2017では、セーフエリアのレイアウトガイドを紹介し、重要なジェスチャー処理の変更、統合検索バーサポートなどの新しいiOS 11機能を活用する方法について話しました。

もちろん、developer.apple.comまたは開発者フォーラムでより多くの情報をいつでも入手できます。

ありがとう！