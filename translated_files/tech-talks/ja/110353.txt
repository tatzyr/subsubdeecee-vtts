110353

こんにちは、私の名前はティム・チェンです。

私はAppleのMapKitチームのエンジニアで、MapKit JSに取り組んでいます。

今日は、MapKit JSをWebアプリケーションと統合する際に可能な限り最高の体験を提供するために使用できるいくつかのエキサイティングな新機能について説明します。

2018年にMapKit JSが導入されて以来、私たちは毎年新機能の追加に精力的に取り組んできました。

それにより、MapKit JSはAppleのウェブ提供の不可欠な部分となり、icloud.comの独自のFind Myサーバーのような多くのウェブサイト、DuckDuckGoのようなサードパーティのウェブサイト、ギリシャの不動産検索ウェブサイトに統合されています。

このウェブサイトは、マップ機能をローカライズするMapKit JSの機能を利用していることに気づくでしょう。

簡単なインクルードと初期化により、あらゆるWebアプリケーションでMapKit JSを非常に簡単に採用できるようにしました。

ただし、アプリケーションのパフォーマンスを最適化する方法でMapKit JSを採用する柔軟性を提供したいと考えています。

今年から、パフォーマンスに目を向け、ページをより応答性が高く、読み込みを高速化し、より多くの制御を提供するように設計された方法で、必要なときに必要な機能のみを含めることができる方法を検討しました。

今日は、高性能MapKit JSロード用の新しいマークアップ、追加のMapKit JSライブラリをオンデマンドでロードする機能、そして最後に、アプリケーションがユーザーに提示する目的のマップ機能を通知する新しい方法など、3つの新機能を紹介します。

さて、これらの新機能がどのようにウェブアプリケーションを改善できるかを実証するために、仲間の海賊のためのインタラクティブな宝の地図を構築しているとしましょう。

MapKit JSのデフォルト実装を採用しました。

しかし、お粗末な海賊船のWi-Fiでこのページを表示すると、読み込みに時間がかかりすぎて、ユーザーはマップが表示されるまで待ちすぎなければならず、あなたの船員はせっかちになります。

したがって、反乱を防ぐために、新しい高性能MapKit JSロードマークアップを使用できます。

デフォルトの実装を拡張されたマークアップと、ウェブアプリの調整に使用する追加のプロパティと交換します。

まず、MapKit JSは、始めるための最小量のコードのみを含む新しいJavaScriptバンドルmarket.core.jsを提供しています。

次に、MapKit JSに必要な機能のサブセットを知らせたいと思います。

ここでは、インタラクティブマップを表示するための最小機能セットであるマップライブラリのみを指定します。

MapKit JSが非同期属性を使用してページの読み込みをブロックするのを防ぎ、読み込みが終了したときにデータコールバック属性で指定されたコールバックを呼び出します。

MapKit JSはページの読み込みをブロックしなくなったため、ウェブアプリは初めてインターフェイスを評価する前に、その準備を主張する必要があります。

例として、MapKit JSの準備が整ったときにMapKitインターフェイスに解決される非同期関数があります。

いつものように、MapKit JSは、ロードされるとすぐにグローバルウィンドウオブジェクトで利用できます。

MapKitオブジェクトが未定義の場合、MapKit JSがまだロードされていないことを意味します。

さらに、初期ライブラリがロードされているかどうかを確認したい。

データライブラリの属性を使用して、マークアップでマップライブラリを要求したことを思い出してください。

2つのテストのいずれかに失敗すると、データコールバック属性を使用したコールバックセットが呼び出されていないことを意味します。

ここでは、コールバックを非同期関数の約束に変換し、約束解決の直後にコールバックをクリーンアップします。

これにより、この機能が戻ったときにMapKit JSがロールする準備ができていることを保証します。

さて、構文に戻ります。

高性能マークアップには、ブラウザがMapKit JS CDNに行くすべての要求に対して単一のHTTP/2接続を再利用できるようにするクロスオリジン属性など、他にもいくつかの有用な属性があります。

また、MapKit JSは、機会があればすぐに初期化したいと考えています。

マークアップに最初のトークンを設定することで、それを達成できます。

それをつなぎ合わせると、ページの読み込みがさらに速くなりますが、まだそこにはありません。

地図ライブラリだけを頼んだので、海賊船や宝物を地図に戻すには、注釈ライブラリをロードする必要があります。

そして、それが私たちの2番目の最適化が役に立つところです。

そのMapKitのダウンロードのためだけに新しい方法が提供されています。

オンデマンドで追加のライブラリを非同期にロードします。

また、ロードしたライブラリに別のライブラリが必要な場合は、自動的に処理されます。

そして、ここでそれは行動しています。

MapKitダウンロードメソッドを呼び出して、注釈ライブラリを読み込むだけです。

ロードイベントのリスナーを追加し、呼び出されたときにアノテーションを追加します。

そしてもちろん、注釈以上のものをロードすることができます。

たとえば、サービスは検索やジオコーダなどのすべてのサービスAPIを網羅しています。

フルマップは、MapKitマップクラスで利用可能なすべての機能をロードします。

これには、基本的な地図、オーバーレイ、注釈、ユーザーの位置表示が含まれます。

そして、GeoJSONはGeoJSONインポーターをロードします。

さて、これは良いローディング体験ですが、私たちはこれよりもさらに良いことができます。

これは、今日紹介する3番目の機能です。優先マップのスタートアップです。

新しいロード優先プロパティを使用すると、MapKit JSに興味のあるポイントを早く表示するように指示して、野生の海賊に有利なスタートを切ることができます。

負荷優先度を設定するときは、ユーザーが必要とする最高のエクスペリエンスに応える必要があります。

利用可能な3つの負荷優先オプションがあります。

興味のあるポイントは、注釈を付ける前であっても、地図ラベルと興味のあるポイントを早く表示するようにMapKitマップに指示します。

一方、土地被覆は、土地被覆、道路、国境のみにサービスを提供します。

これらのオプションは、ビューポートの回転や正確なマップ領域など、起動時にいくつかのマップ動作に干渉するので、noneに設定することで、ロード優先度を完全にオフにすることができます。

そして、これが実際にどのように見えるかです。

マップコンストラクタオプションでロード優先度を使用して、目的の優先度を指定するだけです。

ここでは、MapKitマップに最初に興味のあるポイントを表示するように依頼します。

今、それはさらに良いローディング体験です。

本日、アプリケーションのマップロードエクスペリエンスを向上させるために設計された3つの新機能を導入しました。

私たちは、全体的なユーザーエクスペリエンスがシームレスで損なわれないようにしながら、MapKit JSを統合できると信じています。

既存のアプリケーションでは、それぞれが独自の利益をもたらすため、これらの新機能を徐々に採用してください。

以下に示す詳細なドキュメントとMaps Server APIセッションを必ず確認してください。

これらの新機能をどのように活用するかを楽しみにしています。

ありがとうございます。