802

Apple Watch Series 4には、デザイナーや開発者のための大幅な機能強化が含まれています。

シリーズ4の時計は、新しいAPIとパフォーマンスの向上とともに、より大きな寸法の新しいディスプレイを持ち、アプリを使用する人々に豊富な情報とアクションを提供する能力を高めます。

アプリを作成または更新する際に、これらの新しい次元を考慮に入れたいと思うでしょう。

シリーズ4の時計は、以前のシリーズの時計よりも大きい。

ケースの外側で測定された40mmと44mmの2つのサイズがあります。

以前のシリーズのApple Watchは38mmと42mmです。

そして、これらの時計のディスプレイ寸法は、38mmの時計では272×340ピクセル、42mmの時計では312×390ピクセルです。

シリーズ4の時計のディスプレイは大幅に成長し、40mmで324×394ピクセル、44mmで368×448ピクセルを測定しました。

ディスプレイが大きくなるだけでなく、その周りの境界線は薄く、インタラクティブな要素にもっと注意を払い、情報をより豊かで没入感のあるものにします。

すべてのディスプレイ寸法を考慮する必要があります。

アプリは、画面サイズに関係なく、同じ情報とアクションをユーザーに配信する必要があります。

レイアウトを検討する際、40mmシリーズ4ウォッチのディスプレイは、実際には以前のシリーズの42mmウォッチのディスプレイと寸法が非常に似ていることに注意してください。

新しい40mmの時計は、ディスプレイサイズが12ピクセル広く、4ピクセル高くなっています。

ケースのサイズを見渡すと、40mmと42mmの時計はスペクトルの真ん中に座っています。

ここで画面のレイアウトをターゲットにする場合は、レイアウトを38mmの寸法に縮小し、44mmの寸法に縮小する必要があります。

Developer.apple.comのデザインリソースには、4つのサイズすべてのデザインを始めるためのアセットとテンプレートが含まれています。

一部のwatchOSのインターフェース要素は、時計のサイズに合わせてスケールすることに注意してください。

テンプレートには、モックアップができるだけピクセル精度になるように、時計のサイズ別に整理されたこれらの要素の広範なコレクションが含まれています。

それでは、これらの新しいディスプレイが画面のレイアウトにどのように影響するかについて話しましょう。

新しいディスプレイの最も顕著な違いは、その形状です。

iPhone Xと同様に、Apple Watch Series 4は角が丸みを帯びており、ケースの湾曲した角の中に対称的な外観を作り出しています。

WatchKitは、テキストとコントロールの表示を支援し、UIがビューポートの最適な場所に表示されるようにします。

WatchKitの要素は新しいディスプレイに適応します。

上部では、アプリのステータスバーが丸みを帯びた角を占めます。

以前のバージョンのwatchOSと同様に、時計はすべての画面に表示され、アプリはタイトル領域を使用して、画面の目的を説明する有用な見出しまたはタイトルを提供できます。

これらの要素は両方ともインデントされ、このインデントは、アプリのコンテンツの表示を介して垂直に伸びる左右の余白を作成する必要があります。

これらはシステムの最小レイアウトマージンです。

グラフィック要素とボタンの背景は、これらのマージンを超えて、両側でデフォルトで実行される1ピクセルマージンまで、ほぼ端から端まで実行する必要があります。

テキストは、ステータスバーのテキストの左端から伸びて、左マージンに揃える必要があります。

スクロールビューのコーナーを説明するために、コンテンツ領域の上部と下部に明確な領域があります。

これらはスクロールクリア領域と呼ばれ、ユーザーがスクロールアクションを完了したときにテキストとボタンが完全に表示されることを保証します。

たとえば、スクロールビューの下部にあるボタンは、クリアエリアの上の安全なエリアに落ち着きます。

フルスクリーンのSpriteKitまたはSceneKitシーンを使用している場合は、余白とインセットを使用してコンテンツを表示に誘導します。

最高の時計体験はシンプルで目を見やすいので、アプリ内で意図的に単一画面であり、スクロールすべきではないビューがあるかもしれません。

たとえば、システムによってナッジされるのではなく、ボタンがクリアエリアに配置されていることを確認したい場合は、Xcodeで属性を設定することでできます。

ビューの属性インスペクタで、画面の端に固定を選択すると、そのビュー内のコンテンツがスクロールされなくなります。

では、Apple Watch Series 4のアプリのアップデートについて話しましょう。

アプリは、watchOS 5用に再コンパイルする前であっても、シリーズ4の時計で実行されます。

40mmの時計では38mmの寸法で、44mmの時計では42mmの寸法で表示されます。

シリーズ4のディスプレイを中心に配置されます。

そして、ユーザーの観点から見ると、あなたのアプリは予測可能に表示され、動作します。

watchOS 5用のアプリを再コンパイルすると、アプリは新しいディスプレイの全幅と高さを占有できます。

固定幅ではなく、コンテナに対してWatchKit要素を実装している限り、アプリはシリーズ4ウォッチの追加の画面スペースを埋めるために拡張され、これはユーザーにとってはるかに没入感と魅力を感じるでしょう。

アプリにフルスクリーンのSpriteKitまたはSceneKitシーンが含まれている場合は、シーン内のテキストとコントロールがシリーズ4ウォッチで正しくレンダリングされていることを確認する必要があります。

システム最小レイアウトマージンにアクセスして、コンテンツが画面の左端と右端から適切に挿入されていることを確認し、コンテンツセーフエリアの挿入情報にアクセスして、ユーザーがスクロールしたときにテキストとアクションが時計のコンテンツ領域に適切に定着くようにする必要があります。

シリーズ4は、デジタルクラウンの回転に対応する新しい触覚を導入し、Apple Watch全体でより触覚的な体験を生み出します。

デフォルトでは、ハプティックディテントまたはタップは、デジタルクラウンが回転したときに生成されます。

したがって、スクロールやピッカー内のアイテムの選択などの一般的なユーザーインタラクションは、ユーザーに触覚フィードバックを提供します。

シリーズ4の時計に関するこの新しい触覚フィードバックで、アプリの経験を評価する必要があります。

ユーザーは一貫した触覚体験に慣れるので、アプリがデジタルクラウンの回転でUIのイベントを調整する場合は、それらのUIイベントがこれらの新しい触覚効果と一致していることを確認する必要があります。

次に、watchOS 5で導入された新しいテキストスタイルと、シリーズ4の時計でのダイナミックタイプの実装について話し合いましょう。

watchOS 5では、ダイナミックタイプライブラリが拡張され、4つの新しい大きなサイズが含まれていました。

大きなタイトルとタイトル1、2、および3は、コンテンツとアクションがウォッチ画面で一目でわかるようにするためのより多くの方法を提供します。

これらのスタイルを実装してテストする際には、時計ケースのサイズに対応するさまざまなデフォルトのコンテンツカテゴリがあることを覚えておいてください。

小型は38mm、大型は40mmと42mm、XLargeは44mmのデフォルトカテゴリです。

時計は異なるデフォルト設定で始まるかもしれませんが、それぞれが幅広いユーザー設定に対応するために同じスペクトルを提供します。

これらのスタイルを遵守することで、アプリがすべてのユーザーに予測可能に配信されます。

最後に、ウォッチプロジェクトのビジュアルアセットに関連する機能強化について話し合いましょう。

PDFを使用してグラフィックスの生産を合理化し、デバイスサイズ間で高解像度のスケーリングが可能になりました。

スケールファクター2でグラフィックを準備し、PDFとして保存すると、4つの時計サイズすべてで使用する単一のファイルを作成できます。

このPDFアセットをXcodeに持ち込んだら、Watchプロジェクトのアセットカタログに配置し、アセットをユニバーサル2xボックスにドロップします。

そして、属性インスペクタで、自動スケーリングプロパティを自動に調整します。

これにより、グラフィックスは38mmディスプレイでは9%、44mmディスプレイでは10%縮小されます。

最後の注意：44mmウォッチのUIを説明するために、2つの新しいアプリアイコンサイズがあります。

これらの新しいアイコンは、ショートルックの通知とホーム画面のアイコンに使用されます。

これらのアイコンのガイドと寸法は、Apple Watch Series 4用に新しく更新されたデザインリソースのテンプレートにあります。

WWDCのビデオ「watchOSの新機能」には、watchOS 5の機能の徹底的な紹介もあります。

このビデオ、デザインリソース、ヒューマンインターフェースガイドラインは、developer.apple.comで見つけることができます。