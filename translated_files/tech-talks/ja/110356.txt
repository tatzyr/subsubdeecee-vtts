110356

やあ、みんな！私の名前はアンドリア・ジェンセンで、エンタープライズ顧客のアプリ開発の取り組みを支援するコンサルティングエンジニアです。

今日は、エンタープライズ開発者にとっての新機能についてお話ししたいと思います。

Apple製品は、私たちが想像していた以上の方法で、あらゆる規模の企業や業界全体で世界中で使用されているのを見ています。

エンタープライズ開発者は、当社のデバイスがビジネスに最も効果的に使用されていることを確認します。

小売店のPOSアプリであろうと、航空会社のパイロットのための飛行計画アプリであろうと、あなたは最高の仕事をし、他の人が自分の仕事をできるようにするために必要なツールと機能を提供するために、当社のプラットフォームに依存しています。

今年のWWDCで、AppleはiOS、iPadOS、macOS、watchOSなどのソフトウェアプラットフォームにわたるメジャーアップデートを発表しました。

今年は多くの発表があり、セッションではこれらすべてのトピックなどについて議論しました。

最小限のコードで独自のバーコードスキャンインターフェイス、ライブアクティビティ、ロック画面ウィジェットを作成して、アプリの現在のデータを一目で表示できる新しいデータスキャナーAPIなど、あなたに最も関連性があると思うものを強調します。

そして、これらはほんの始まりに過ぎません。

この新しい情報のすべてをよりよくナビゲートするために、私はこのセッションを通して参照し続ける関連分野に物事をグループ化しています。

そして、これらのそれぞれを要約レベルで確認しながら、開発者アプリやウェブサイトで見ることができる追加のセッションをご案内します。

OK！行きましょう。

私たちはSiriから始めます。

そして、iOS 15以前、SiriKitとIntentsは、アプリがSiriの力を活用するための方法でした。

今年は、アプリの優れたアクションをより迅速かつ簡単に構築できるように設計された新しいSwift専用フレームワークであるApp Intentsを発表しました。

SiriKitカスタムインテントを作成する以前の方法とは異なり、新しいアプリインテントはインテント定義ファイルや生成されたコードを必要としません。

また、インテント定義ファイルを含む既存のカスタムインテントがある場合は、それらを簡単に変換できます。

既存のインテント定義ファイルの「アプリインテントに変換」ボタンをクリックするだけです。

アプリインテントを作成したら、それを使用してまったく新しいアプリショートカットを構築できます。

アプリがインストールされると、アプリのインテントとアプリのショートカットもインストールされ、アプリが開く前にSiri、Spotlight検索、およびショートカットアプリでショートカットをすぐに利用できるようになります。

これは、アプリショートカットを作成するためにユーザー設定が不要になったことを意味します。それらは自動的にユーザーが利用でき、事前に定義されたフレーズがあります。

これらの最初のトリガーフレーズにはパラメータも含まれるようになり、いつでも必要なことを正確に行うためにショートカットを呼び出すのがこれまで以上に速くなります。

アプリのショートカットはアプリと一緒にインストールされているので、Siriに追加ボタンはもう必要ありません。

しかし、ユーザーは、アプリに含めたフレーズを認識する必要があります。

そこで、ショートカットを見つけやすくする2つの方法を紹介しました。

Siriのヒントビューは、人々が利用可能なショートカットとその使用方法を理解するのに役立ちます。

また、新しいショートカットリンクボタンが追加されたので、ショートカットアプリに簡単に飛び込んで、アプリが提供するすべてのアプリショートカットを見ることができます。

あなたのアプリは10の事前定義されたアプリショートカットに制限されているので、アプリと一緒にインストールされたものは集中して明確に定義されるべきです。

これにより、アプリを使用しているユーザーがさらに効率的なワークフローを作成できます。

私たちは、アプリの意図とアプリのショートカットでSiriを活用する2つの新しい現代的な方法と、Siriのヒントビューとショートカットリンクでそれらを発見するのに役立つ方法を導入しました。

これらのWWDCセッションをチェックして、これらをアプリに統合する方法について詳しく学んでください。

それがSiriです。

ウィジェットは、Siriの意図を活用して、アプリの関連する詳細を一目で表示するのに最適な方法です。

新しいアプリのインテントは、アプリのショートカットに電力を供給するのに最適ですが、ウィジェットに電力を供給するためにインテントを使用している人にとっては、カスタムSiriKitインテントとインテント定義ファイルを引き続き使用する必要があります。

iOS 16では、WidgetKitを使用して、iPhoneのロック画面にコンプリケーションを構築できます。

また、Apple Watchのコンプリケーションもウィジェット拡張機能を使用して構築されています。

そのため、iOS 16とwatchOS 9のコードを一度書くことができます。

そのインフラストラクチャを既存のホーム画面ウィジェットと共有することもできます。

もう少し詳しく見てみましょう。

iOS 15ではiPhoneとiPadにシステムウィジェットが導入され、watchOS 7ではClockKitを使用したカスタムコンプリケーションが導入されました。

iOS 16とwatchOS 9の新機能であるWidgetKitは、Apple Watchの新しいロック画面とコンプリケーションのウィジェットを構築するために使用できます。

以前のClockKitコンプリケーションファミリに代わるiOSとwatchOS用の新しいウィジェットファミリタイプを追加しました。

だから今、あなたがiPhoneであろうとApple Watchであろうと、あなたはから選択するいくつかの一般的なウィジェットタイプがあるでしょう：長方形、円形、インライン、そしてApple Watch専用の特別なタイプ、アクセサリーコーナー。

また、iOS 16の新しいシステムスタイルをサポートするために新しいレンダリングモードを追加したので、ユーザーが好むスタイルに関係なく、ウィジェットがくつろげるようにすることができます。

今年は、ウィジェット拡張機能を活用するもう1つの強力な方法を紹介します。ライブアクティビティです。

ライブアクティビティを使用すると、リアルタイムで起こっていることを簡単に把握できます。

それらはロック画面または新しいダイナミックアイランドから表示されます。

ライブアクティビティは、ユーザーインターフェイスにWidgetKit機能とSwiftUIを使用します。

これにより、ライブアクティビティのプレゼンテーションコードはウィジェットコードに似ています。

また、ウィジェットとライブアクティビティ間のコード共有も可能です。

ただし、ライブアクティビティはウィジェットなどの更新にタイムラインを使用しません。

ActivityKitは、各ライブアクティビティのライフサイクルを処理するためにiOS 16.1で導入されました。

それを使用して、ライブアクティビティをリクエスト、更新、終了します。

さらに、ライブアクティビティはリモートプッシュ通知を受信することで更新される可能性があるため、バックエンドでデータが変更されたときにライブアクティビティを同期させることができます。

航空アプリでこれを使用して、安全上の決定を下すためにリアルタイムで風速を監視することを想像してみてください。または、小売およびフードサービスマネージャーは、シフトのリアルタイムの統計を一目で見ることができます。

iPhone 14のロック画面に表示されるものは次のとおりです。現在の注文の最新のステータスなど、電話のロックを解除せずに永続的に表示されるライブアクティビティ。

iPhone 14 ProとiPhone 14 Pro Maxでは、ロック画面にライブアクティビティが表示され、さらに新しいダイナミックアイランドのライブアクティビティも表示されます。

これにより、システム全体のリアルタイムデータを一目で表示および操作できます。

そのため、配達ドライバーは現在の配達情報を確認でき、フィールドワーカーは現在の職場の関連データを確認でき、シフトワーカーは現在の時間を追跡することができます。これらすべては、デバイスのロックを解除することなく、別のアプリを使用している間も、リアルタイムで行います。

ロック画面用の新しいウィジェットを導入し、ウィジェット拡張を支持してClockKitのコンプリケーションを廃止しました。

ウィジェット拡張機能は、Apple Watchのコンプリケーション、ロック画面、ホーム画面のウィジェット、新しいライブアクティビティを強化しました。

これらのセッションで詳細を学び、今日からアプリの見やすい体験を構築し始めましょう。

それがウィジェットの新機能です。

だから、それはあなたを驚かせるかもしれませんが、iOSとiPadOSは世界最大の拡張現実プラットフォームであり、これまで以上に現実的な方法でアイデアに命を吹き込むのに役立ちます。

ARKit 6の新機能では、これまでで最高の画像解像度でカメラストリームを実行できる4Kビデオモードを導入しました。

また、ビデオの背景をより詳細に制御できる追加のカメラ機能強化も導入しました。

飛行機アンカーの動作、モーションキャプチャAPIの追加、ロケーションアンカーをサポートする新しい都市が更新されました。

ARKitを搭載したRoomPlanは、iPhoneとiPadのカメラとLiDARスキャナーを利用して、寸法や家具の種類などの重要な特徴を含む部屋の3Dフロアプランを作成する新しいSwift APIです。

建築やデザイン、小売、ホスピタリティ、不動産業界のワークフローにおけるRoomPlanの可能性を想像してみてください。

ARKit 6の素晴らしいアップデートと、3Dフロアプランを作成するためのRoomPlanの追加により、拡張現実をアプリに統合する方法はさらに増えています。

これらのダブダブセッションを見て、もっと学んでください。

それは拡張現実でした。

ビジョンを使用すると、コンピュータビジョンを使用して画像やビデオを処理および分析できる機能を構築できるため、ユーザーはデバイスのカメラのみを使用して関連情報をすばやくスキャンできます。

今年は、テキスト認識、バーコードスキャン、オプティカルフローの新しい改訂を発表しました。

これらの改訂により、パフォーマンスと精度が向上します。

バーコードスキャンにより、複数のバーコードのより高速なスキャン、画像ごとに検出されたバーコード、2Dバーコードのバウンディングボックスが改善されました。

テキスト認識とバーコードスキャンの改訂3は、私たちの素晴らしい新しいライブテキストとデータスキャナAPIの基盤として機能します。

テキスト認識については、現在、韓国語と日本語をサポートしています。

また、言語が事前に知られていない場合は、言語認識を行う機能もあります。

しかし、ユーザーが認識しようとしている言語がわかっている場合は、パフォーマンスを向上させるためにAPIで設定する必要があります。

ライブテキストは、iOS 15で導入されたシステム機能で、まったく新しい方法で写真のデータと対話することができます。

今年は、自分のアプリにライブテキスト機能をもたらすことができるVisionKitの新しいSwift APIを発表しました。

先ほど説明した優れたVision APIに基づいて構築されたライブテキストAPIは、静的画像で美しく動作し、一時停止したビデオフレームでの使用にも適応できます。

これで、画像内のテキストとの直接のインタラクションを許可できます。コピーなどの標準的なインタラクションが利用可能です。データ検出器は、アドレスへの道順の取得、電話をかける、電子メールの送信などのために利用できます。

ユーザーは、好みの言語に翻訳されたテキストを見ることさえできます。

最後に、QRコードの検出も利用できます。

複雑なコードを書くことなく、これらすべて。

ライブテキストAPIは、静的画像フレームの分析に最適ですが、バーコードスキャンなど、カメラを使用してライブ画像分析を行う必要がある場合があります。

iOS 16では、開発者向けのデータスキャンを簡素化するVisionKitフレームワークの一部として、新しいDataScannerViewControllerが導入されています。

この新しいビューコントローラーは、スキャン体験の作成に費やす時間を大幅に短縮します。

先ほど説明したすべての優れたVision APIを使用して、スキャンインターフェイスを処理する使いやすいドロップインUIコンポーネントにまとめました。

データスキャナーは、ライブカメラのプレビューを使用して、テキストと機械可読コードをスキャンするための組み込み機能を提供します。

カスタマイズ可能なガイダンスラベルとアイテムの強調表示により、ユーザーが適切なものをすばやく簡単に見つけてスキャンし、選択にも使用されるタップ・トゥ・フォーカス、そして最後にピンチ・ツー・ズームで詳しく見ることができます。

データスキャナAPIをアプリに統合することで、サードパーティのスキャンライブラリの使用に関連するコストを削減し、アプリのニーズに合わせてカスタマイズされた美しいスキャン体験を作成できます。

アプリが医療用品のスキャン、小売在庫管理、または航空会社の手荷物処理に使用されるかどうかにかかわらず、データスキャナAPIはそれを処理できます。

機械可読コードの場合、企業で一般的に見られるこれらの強調表示された形式を含め、これらのシンボルはすべてサポートされています。

一度に異なるシンボルで複数のコードをスキャンすることもできます。

また、テキストスキャンでは、住所から日付、時刻、期間までのコンテンツタイプをサポートしています。

従業員が書類や領収書をスキャンして関連情報を入手できるように、これを旅行や経費アプリに統合することを想像してみてください。

テキスト認識のための新しい改訂が今年導入されました:バーコードスキャンとオプティカルフロー。

そして、顔検出とランドマークの改訂1は今年廃止されました。

最新のリビジョンを使用することが常にベストプラクティスであることを覚えておいてください。

韓国語と日本語のサポートを追加しました。これらすべてが新しいライブテキストとデータスキャナAPIを強化しています。

詳細を学び、これらの素晴らしい新しいAPIをアプリに統合するには、これらのセッションをチェックしてください。

それがビジョンの新機能です。

では、地図を見てみましょう。

Apple Mapsは毎年改善され、より視覚的なディテールとより高品質の地図画像が追加されています。

今年は、まったく新しいマップでMapKitを新しいレベルに引き上げました。

それに加えて、驚くほど詳細に都市を移動できる3D都市体験を提供しています。

3Dシティ体験は、世界中の多くの大都市圏で利用できます。

そして今、この新しい体験とまったく新しいマップを、追加のコードなしで自分のアプリに含めることができます。

また、LookAround APIを導入し、この没入型体験を自分のアプリに持ち込むことができます。

配管サービスで働き、到着する前に各クライアントの住所を視覚化したり、初めてこのセーフウェイのような大規模な店舗にサービスを提供する配達ドライバーになることを想像してみてください。

駐車場と、配達をするために行く必要がある場所、そしてあなたのトラックにとってどれほどアクセスしやすいかを見ることができます。

選択可能なマップ機能により、Appleマップが提供するすべての優れた注釈を活用できるようになりました。

以前は、マップが提供する興味のあるポイントを見ることができましたが、それらと対話できませんでした。

今年は新しい、私たちはそれを変えています。

デフォルトの注釈ビューを使用するか、独自のカスタムエクスペリエンスを作成することで、Appleマップが提供する興味のあるポイントとやり取りできるようになりました。

MapKitは何年もの間、いくつかのスタイリングオプションでオーバーレイをサポートしてきました。

iOS 16では、既存のAPIを改善して、オーバーレイをマップとシームレスに統合できるようにしています。

ルートが木々によってどのように遮られているかをここで注目してください。

最後に、さまざまな種類のディスプレイを使用してマップを設定できる新しいマップ構成APIを追加しました。

優先設定の新しいプロパティが追加されましたので、使い始める必要があります。

マップのコンテキストに最適なものを選択できる3つの構成タイプがあります。

イメージマップの構成は、衛星スタイルの画像を表示するために使用されます。

ハイブリッド構成は、道路標識や興味のあるポイントなどの地図機能を追加した画像ベースの地図を提示するために使用されます。

標準のマップ構成は、完全にグラフィックベースのマップを表示するために使用されます。

これら3つの地図構成は、既存の地図タイプに似ているので、身近に聞こえるかもしれません。

特定のマップ機能を表示するためのMapTypeと関連するMKMapViewプロパティは非推奨です。

新しいMap Configurations APIの使用に移行する必要があります。

私たちのネイティブフレームワークは、素晴らしい地図体験を提供します。

その経験を拡張するために、新しいMaps Server APIを作成しました。

ジオコーディングAPIを使用すると、アドレスを緯度と経度の地理座標に変換できます。逆ジオコーディングは反対のことを行い、座標を取得してアドレスに変換することができます。

検索APIを使用すると、検索文字列を渡して、ビジネスや興味のある場所などの場所を検出できます。

また、ETA APIを使用すると、特定の目的地からどのくらい離れているかを計算できます。

私たちは美しい全く新しい地図と3D都市体験を紹介しました。

マップを設定する新しい方法といくつかの新しいサーバーAPIを使用して、その体験を自分のアプリにもたらすための新しいMapKit APIを提供しました。

これらのセッションをチェックして、これらの新機能をマップに導入する方法の詳細を確認してください。

それは地図です。

次は天気です。

現在の気象情報を提供することは、人々が最新の状態に保ち、安全で、準備を整えるのに役立ちます。

今年、私たちはまったく新しいApple Weather Serviceを発表しました。

App Storeのアプリとカスタムアプリとして公開されたアプリの両方で、Apple Developer Programの一部として利用できます。

Apple Weather Serviceは、すべてのAppleプラットフォームで利用可能な新しいネイティブフレームワークであるWeatherKitを強化します。

また、一貫した体験が重要であるため、Apple Weather Serviceをあらゆるプラットフォームに持ち込むために使用できるREST APIも提供しています。

高解像度の気象モデル（機械学習と予測アルゴリズム）を使用して、世界中のハイパーローカル天気予報を提供します。

そして、私たちは常にユーザーのプライバシーを尊重します。

場所は天気予報にのみ使用されます。

個人識別情報に関連付けられることはなく、ユーザーデータが共有または販売されることはありません。

WeatherKitを使用すると、現在の気象条件、気温、降水量、風、UV指数などの10日間の1時間ごとの予測を取得できます。

次の1時間の毎分ごとの降水量と、一部の地域では厳しい気象警報が利用可能です。

過去の気象データを取得して傾向を特定することもできます。

気象条件が職場環境に大きな違いをもたらすフィールドサービスや航空アプリにWeatherKitを統合することを想像してみてください。

新しいネイティブWeatherKitフレームワークを強化する、まったく新しいApple Weather Serviceを導入しました。

あらゆるプラットフォームにWeatherKitを持ち込むためのREST APIもあります。

これらはすべて、ハイパーローカルで最新の予測をアプリに配信するのに役立ちます。

詳細については、「Meet WeatherKit」セッションをご覧ください。

そして、それは天気でした。

プッシュツートークアプリは、医療や緊急サービスなど、迅速なコミュニケーションが不可欠な分野で多くの用途があります。

これらの分野では、コミュニケーションはリアルタイムである必要があり、応答時間は非常に重要です。

iOS 16では、このエクスペリエンスを作成するのに役立つPush to Talkフレームワークを導入しましたが、これは多くのエンタープライズ開発者にとって大きな追加になると思います。

Push to Talkフレームワークは、iOS上の新しいクラスのオーディオ通信アプリを可能にし、トランシーバースタイルのシステム体験を提供します。

Push to Talkフレームワークは、ユーザーがアプリを直接起動することなく、どこからでもアクセスできるシステムUIを活用するためのAPIを開発者に提供します。

システムUIを使用すると、ユーザーはバックグラウンドでアプリを起動するオーディオ伝送をすばやくアクティブにすることができます。

その後、オーディオを録音してバックエンドサーバーにストリーミングします。

新しいフレームワークは、過去にトランシーバーアプリをバックグラウンドで継続的に実行し続けてきた特別な資格と回避策を排除します。

Push to Talkフレームワークを使用すると、システムはバッテリー寿命を維持するために必要な場合にのみアプリをスリープ解除します。

プッシュツートーク機能は、ファーストレスポンダーや法執行機関による使用の長い歴史があります。

また、ヘルスケア、小売および倉庫環境でのプッシュツートークソリューションの使用が増加しており、カーブサイドピックアップまたはピックアンドパックのユースケースをサポートするために使用されています。

Push to Talkフレームワークは、デバイス上のどこからでも利用可能な使い慣れたシステムインターフェースを利用して、トランシーバースタイルのアプリを作成する方法を提供します。

また、既存のエンドツーエンドの通信ソリューションやバックエンドインフラストラクチャと互換性があるように設計されています。

アプリにPush to Talkを実装する方法の詳細については、WWDCからこのセッションをご覧ください。

だから、それはプッシュ・トゥ・トークです。

今年、私たちはCarPlayにいくつかの改善を行い、企業顧客にとって素晴らしい追加であると考えています。

ナビゲーションアプリは、ドライバーの正面にあるインストルメントクラスターなど、2番目の場所に地図とターンバイターンの指示を表示できるようになりました。

これは、フィールドサービス、販売、配送、およびトランジットのユースケースに最適な機能です。

すべてのCarPlayアプリには、Apple Developer Programと、アプリの種類に合ったCarPlayアプリの資格が必要です。

以前は、CarPlayの資格は、ナビゲーション、オーディオ、通信、EV充電、駐車場、クイックフードの注文など、これらのアプリタイプに限定されていました。

今年は、燃料補給と運転タスクアプリの2つの新しいタイプを追加しました。

燃料補給アプリは、ユーザーがガスポンプを起動するのに役立つ可能性があり、運転タスクアプリは、ユーザーが運転中に行う必要がある可能性のあるさまざまな簡単なタスクを可能にします。

これらのアプリは、トレーラーコントローラーなどのカーアクセサリーの制御に役立ちます。または、経費報告の走行距離の追跡など、ドライブの開始時または終了時のタスクに役立ちます。

また、新しいCarPlay SimulatorでCarPlayアプリのテストを容易にしました。

CarPlay Simulatorは、CarPlay環境を複製するスタンドアロンのMacアプリケーションです。

iPhoneにインストールして接続すると、CarPlayはiPhoneで起動し、実際の車に接続した場合と同じように実行されます。

また、アプリは実際のiPhoneで実行されているため、完全なiPhone機能にアクセスできるため、必要なシナリオをテストできます。

2番目の場所でターンバイターンの指示を持つ機能を作成し、2つの新しいアプリタイプとCarPlayシミュレータを追加しました。

アプリでCarPlayを使用する方法についてもっと知りたい場合は、このセッションをチェックしてください。

これまでのところ、システム全体で使用されているフレームワークのいくつかの改善を見てきました。

さて、UIフレームワークのアップデートについてお話ししたいと思います。 

今年私が本当に興奮しているのは、データを有益な視覚化に変換するための強力で柔軟な新しいフレームワークであるSwift Chartsです。

あなたは本当にそれを気に入ると思います。

SwiftUIですでに慣れ親しんでいるのと同じ簡潔な構文を使用し、最小限のコードに基づいて構築された効果的でカスタマイズ可能なチャートを可能にします。

Swift Chartsにはローカリゼーションとアクセシビリティのサポートが組み込まれており、SwiftUIと同様に、Swift ChartsはすべてのAppleプラットフォームをサポートしているため、誰もがチャートを本当に利用できるようにすることができます。

スウィフトチャートを使用すると、データのパターンや傾向を簡単に伝えることができます。

折れ線グラフ、棒グラフ、散布図はすべて簡単に作成できます。

また、チャートを作成すると、データに合ったスケールと軸が自動的に生成され、データが変更されたときに必要に応じて調整されます。

Swift Chartsは、このようなチャートをデータレポートや視覚化が必要なアプリに持ち込む簡単な方法です。

Swift Chartsをエンタープライズアプリ、レポートダッシュボード、販売動向、リアルタイムの指標、患者の健康データなど、想像できる美しい方法を考えてください。

スウィフトチャートは、それを生き生きとさせるのに役立ちます。

iPadOS 16では、iPadアプリにいくつかの素晴らしい新機能を構築し、真のデスクトップクラスにすることができます。

まったく新しい検索と置換UIを追加しました。

検索はより少ないスペースを占有し、iPadOSのナビゲーションバーにインラインで表示され、ボタンに折りたたむこともできます。

検索候補は、検索が有効になると表示され、検索クエリが変更されると更新できます。

そして、私たちはiPadにデスクトップクラスの編集をもたらしました。

編集メニューには、使用した入力に基づいて代替プレゼンテーションが追加されました。

タッチインタラクションでは、慣れ親しんだメニューが表示されますが、新しいページング動作があります。

マジックキーボードまたはトラックパッドを使用すると、コンテキストメニューが表示されます。

UIKitは、既存のナビゲーションバースタイルを形式化し、より高密度でカスタマイズ可能なレイアウトで2つの新しいスタイルを導入しています。

ナビゲーターアプリには、おなじみのプッシュポップナビゲーションモデルがあります。

これは通常、設定などの階層データを表示するアプリに適しています。

SafariやFilesなどのブラウザは、複数のドキュメントやフォルダ構造を表示したり、移動したりするのに理想的です。

また、編集者は、個々の文書の集中的な閲覧や編集に最適です。

iPadのナビゲーションバースタイルがより具体的になっているように、より具体的なナビゲーションスタイルのための新しいSwiftUI APIも導入しています。

これまでは、ナビゲーションベースのアプリにナビゲーションビューを使用していました。

今年は、ナビゲーションビューから離れ、ナビゲーションを処理するためのさらに2つの具体的なオプションを導入しました。

マルチコラムマップに最適なナビゲーションスプリットビューから始めましょう。

ナビゲーション分割ビューは、iPhoneの単一列のスタックに自動的に適応します。

App Store Connectアプリと同様に、2列のレイアウトがあります。

ノートのような3列のレイアウトもあります。

または、iPadとMacで3列のレイアウトを表示するメールアプリ。

単一列のレイアウトは、iPadのSlide Overにも表示され、Apple Watchにも適応します。

ナビゲーションスタックは、ビューのスタックで前後にナビゲートするためのプッシュポップインターフェイスを表します。

このスタイルのナビゲーションは、設定アプリやApple Watchの「探す」など、多くの場所で見られます。

ナビゲーションスタックとスプリットビューを混在させると、さらに多くのインターフェイスを作成できます。

新しいナビゲーションスタックでは、ディープリンクとプログラマティックナビゲーションを簡単に実装することもできます。

これらのアップデートに伴い、ナビゲーションリンクはiOS 16で変更されました。

ナビゲーションリンクは、SwiftUIで他のビューを表示するために使用されます。

設定アプリでは、さまざまなオプションと階層を移動すると、ナビゲーションリンクが次にどのビューを表示するかをアプリに伝えます。

以前は、ナビゲーションリンクはタイトルと表示先ビューを提供することで設定されていましたが、現在は提示されたデータ値に基づいてトリガーすることもできます。

最後に、ナビゲーションスタックはパスも追跡します。

パスは、ビュー間を移動するスタック上のすべてのデータを表します。

スタックがルートビューを表示しているだけの場合、パスは空です。

ビューがスタックに追加されると、その値がパスに追加されます。

ナビゲーションスタックは、このパスへのバインディングを使用して、データ駆動型のプログラマティックナビゲーションを簡単に有効にします。

そして、Device.nameを使用している開発者のために、いくつかの重要な変更があります。

iOS 16以前は、UIDevice APIでは、ユーザーが割り当てたデバイス名にアクセスできるようになりました。

ユーザーデータをよりよく保護するために、UIDevice.name APIは、ユーザーが割り当てた名前ではなく、デバイスのモデルのみを返すようになりました。

私たちは、アプリがまだデバイス名を必要とするいくつかの状況があることを認識しています。

おそらく、ユーザーが最後にファイルを編集したデバイスを確認する必要があるドキュメント管理アプリがあります。

いつものように、ユーザーが割り当てたデバイス名にアクセスするための資格をリクエストできます。

Device.nameを必要とするエンタープライズまたはカスタムアプリをお持ちの場合は、資格リクエストを送信する際にユースケースを詳細に説明してください。

共有デバイスであるかどうかを必ず含めてください。

適格基準の完全なリストについては、ユーザーが割り当てたデバイス名の資格に関するドキュメントを確認してください。

そして、それはUIフレームワークです。

私たちは、美しいデータの視覚化のためのSwift Chartsを導入し、iPadを真のデスクトップクラスにするためにいくつかの新機能を追加しました。

ナビゲーションスタックまたはナビゲーションスプリットビューの使用を支持して、SwiftUIのナビゲーションビューを廃止しました。

すべての最新の詳細を最新の状態に保つために、開発者アプリにアクセスして、これらのセッションを開始してください。

コードで優れたインターフェイスを構築するのに役立つUIフレームワークを見ました。

最後に、これらのインターフェイスを設計するために使用するツールを改善したいくつかの方法を見てみましょう。

しかし、まず、消費者向けアプリだけでなく、なぜデザインが重要なのかについて話したいと思います。

うまく設計されたエンタープライズアプリは、ビジネスに大きな影響を与える可能性があります。

ユーザーが期待する一貫性のある使い慣れたインターフェースを作成すると、より生産的で効果的な従業員になることができます。

そして、それはあなたのアプリの高レベルの採用と従業員のワークフローの効率を確保しながら、トレーニングやサポートコストなどのビジネスコストを節約します。

デザインは優れたアプリを構築する上で非常に重要な要素であるため、ヒューマンインターフェイスガイドラインを作成しました。

ヒューマンインターフェースガイドラインは、長い間、Appleプラットフォーム全体で素晴らしい体験を生み出すのに役立つ包括的なリソースでした。

今、それはあなたの現在のニーズを満たすために完全に再設計され、更新されました。

HIGは、プラットフォーム固有のガイダンスを統一された文書に統合しました。

これにより、各プラットフォームに関する関連する詳細を維持しながら、一般的なデザインアプローチを探索しやすくなります。

ナビゲートが簡単で、検索可能になりました。

今年後半には、一連のガイドライン全体の変更ログも追加します。

SFシンボルは、アプリに一貫したアイコンをもたらすことができる図像の大規模なライブラリです。

SFシンボル4では、700の新しいシンボルを追加しました。

だから今、選択できる4000以上のシンボルがあり、これらはすべてXcodeまたはSFシンボルアプリから直接利用可能になりました。

レンダリングモードでは、シンボルに色をどのように適用するかを制御できます。

SFシンボルは、モノクロ、階層、パレット、マルチカラーの4つのレンダリングモードをサポートしています。

これらのレンダリングモードでは、アプリにシンボルを表示するさまざまな方法が可能になり、特定のコンテキストに最適なものを選択できます。

以前は、レンダリングモードが指定されていない場合、デフォルトは常にモノクロでした。

SFシンボル4では、「自動」と呼ばれる新しいレンダリングモードを追加しました。

自動レンダリングでは、個々のシンボルは4つのモードの1つを独自の好みのレンダリングモードとして識別できます。

これにより、各シンボルは独自の特徴を最もよく強調することができます。

たとえば、ここでは、雲、太陽、雨のシンボルと六角形のグリッドはモノクロを好み、SharePlayとiPhoneの電波アイコンは階層を好みます。

自動レンダリングはすべてのシンボルのデフォルトモードになり、特定のコンテキストに対して別のモードが明示的に要求されない限り、優先されます。

さまざまなレンダリングモードと構成でシンボルがどのように見えるかを視覚化するために、SFシンボルアプリは右側のサイドバーにある新しいプレビュー領域を獲得しました。

SFシンボル4は、可変シンボルのサポートも追加します。

左側のサイドバーで変数コレクションを選択すると、これらの更新されたシンボルを見つけることができます。

可変シンボルを使用すると、アプリは0から1までの値に基づいて、単一のシンボルの異なるレイヤーを表示できます。

アプリはスピーカーシンボルを使用して現在の音量を表現できるようになりました。

ゼロの値で、スピーカー波はフェードアウトされ、値が1つまで増加すると、スピーカー波は徐々に塗りつぶされ、音量レベルの変化を示します。

また、カスタムシンボルを作成する場合は、プレビューエリアにも表示されている新しい統一レイヤーアノテーションをチェックする必要があります。

これにより、レンダリングモード間で共有レイヤー構造を持つことができ、注釈をより迅速かつ簡単にすることができます。

デザインを続けています。

今年は、サンフランシスコのフォントファミリーに、凝縮、圧縮、拡張の3つの新しい幅スタイルを追加しました。

これは、タイポグラフィを設計する際に、より柔軟性があることを意味します。

これらの新しいスタイルの例は、Photo MemoriesやApple Newsで見ることができます。

また、SF ArabicとSF Arabic Roundedをシステムフォントに追加し、Appleプラットフォームでのアラビア語のタイポグラフィをモダンで明確で洗練されたものにしました。

Xcode 14でiOSアプリのアイコンを追加するのがずっと簡単になりました。

Xcode 13以前では、すべてのサイズの画像を提供する必要がありました。

現在、iOS用の大判画像は1つだけです。

大きなアプリのアイコンは、すべてのiPhone、iPad、Apple Watchデバイスに表示されるように拡大縮小されます。

小さいサイズのカスタム画像を追加したい場合は、それらのためだけに特定のアイコン画像を追加できます。

今年は、ヒューマンインターフェイスガイドラインを完全に刷新し、新しいアイコンとSFシンボル4、フォントの追加、アプリのアイコンに単一の画像を使用する機能でそれらをレンダリングする方法をもたらしました。

詳細については、これらのダブダブセッションをチェックしてください。

まあ、それは多かったですが、私たちはそれを作りました!

これらは、皆さんに知ってもらいたかった今年の発表のハイライトでした。

そして、ここには、エンタープライズアプリをさらに良くするために使用できる素晴らしいことがたくさんあったと思います。

私がカバーしたすべてについてもっと知るために、あなたは開発者アプリで私たちのすべてのセッションをチェックすることができます。

今日から新しいSDKを使い始めましょう。

そして、新機能を探索する際にフィードバックを提供してください。

これらの新しいツールを使用してユーザーエクスペリエンスを向上させ、仕事をより速く、より簡単に達成できるようにする方法を見るのが待ちきれません。

聞いてくれてありがとう!