10267

♪ ♪

안녕하세요, 제 이름은 홀리이고, 저는 지속적인 통합 기술 팀의 매니저이며, 나중에 제 팀 동료인 제프 맥기니스와 합류할 것입니다.

오늘, Apple 플랫폼을 위한 앱과 프레임워크를 구축하는 모든 사람인 당신과 같은 개발자를 위해 설계된 사용하기 쉬운 지속적인 통합 및 전달 서비스인 Xcode Cloud를 소개하게 되어 기쁩니다.

이 세션에서, 우리는 지속적인 통합에 대한 소개로 시작하고 Xcode Cloud를 만날 것입니다.

그런 다음 프로젝트를 설정하고, 코드를 변경하고, Xcode Cloud를 사용하여 팀과 협력하는 방법을 배울 것입니다.

시작하자.

지속적인 통합 또는 CI는 코드 변경 사항을 정기적으로 통합하여 문제를 조기에 포착하고 수정하는 관행입니다.

이 관행을 채택함으로써 팀은 고품질의 제품을 만드는 동시에 협력할 수 있다.

일반적인 CI 워크플로우는 귀하 또는 팀원이 저장소에 코드 변경을 푸시할 때 실행되는 일련의 자동화된 단계입니다.

이러한 단계는 빌드, 테스트 실행 또는 코드 변경이 팀의 확립된 품질 수준을 충족하는지 확인하는 데 필요한 다른 많은 작업과 같은 작업을 수행할 수 있습니다.

CI를 사용하면 변화를 통합하는 것이 위험이 낮고 다음 릴리스가 안정적이라는 것을 안심할 수 있습니다.

이제, CI가 당신에게 어떤 모습일지 생각하기 위해, 앱의 수명 주기를 살펴봅시다.

개발자로서, 당신은 여러 출처의 피드백으로 작업할 가능성이 높습니다.

Xcode에서 버그를 수정하고 기능을 만들고, 풀 리퀘스트에 대해 팀으로부터 코드 검토 피드백을 받고, TestFlight를 통해 새 버전을 배포하고 테스터 피드백을 통합합니다.

코드와 피드백을 생산적으로 반복하는 팀의 능력은 고품질 앱이나 프레임워크를 만드는 데 필수적입니다.

그것이 Xcode Cloud가 들어오는 곳이다.

Xcode Cloud는 CI의 아이디어를 기반으로 하며 Apple 개발자 도구 간의 점을 연결하여 프로젝트를 구축, 테스트, 배포, 피드백 수집 및 빠르게 반복할 수 있는 완전한 개발 파이프라인을 제공합니다.

당신이 할 수 있는 것에 대해 배우기 위해 기능을 둘러보자.

당신은 Xcode에서 개발하는 데 대부분의 시간을 할애하며, Xcode Cloud는 Xcode에 있습니다.

여기서, 당신은 Xcode Cloud가 작동하는 것을 볼 수 있습니다.

여러 워크플로우가 설정되어 있고 빌드가 실행되고 문제를 파악하고 있다.

당신은 또한 당신의 팀이 하고 있는 모든 일에 대한 새로운 통찰력을 얻습니다.

워크플로우는 Xcode Cloud에 어떤 작업을 수행하고 언제 수행해야 하는지 알려주는 구성입니다.

쉬운 온보딩을 통해 첫 번째 워크플로우를 빠르게 실행할 수 있습니다.

그런 다음 돌아와서 편집하거나, 다른 사용 사례를 지원하기 위해 새로운 워크플로우를 만들 수 있습니다.

워크플로우를 실행한 결과는 빌드라고 불린다.

Xcode Cloud는 코드 서명과 여러 운영 체제 버전 및 Xcode 릴리스에 대한 액세스를 제공하는 Apple 관리 클라우드 인프라에서 빌드를 실행합니다.

보고서 네비게이터의 클라우드 탭에서 앱을 클릭하면 사이드바에서 모든 워크플로우의 상태와 최신 빌드를 볼 수 있습니다.

앱을 클릭하면 개발 팀이 작업하는 방식뿐만 아니라 git 브랜치로 구성된 모든 빌드를 보여주는 빌드 그룹 개요가 열리며, 많은 브랜치에 대해 하나의 워크플로우를 사용할 수 있지만 결과를 별도로 볼 수 있습니다.

개요 위의 광산 필터를 클릭하여 코드 변경으로 시작된 빌드만 볼 수 있도록 목록을 필터링할 수도 있습니다.

또는 보고서 네비게이터에서 사람 아이콘을 선택하여.

빌드 그룹 개요에서 한 단계 아래는 워크플로우의 단일 실행에 대한 빌드 보고서입니다.

이것은 코드 변경과 관련된 결과를 깊이 파고들 수 있는 곳입니다.

테스트 보고서, 로그를 보고 문제를 일으킨 코드로 직접 이동할 수 있습니다.

제프는 나중에 빌드 보고서에 대해 더 자세히 설명할 것이다.

우리가 방금 본 모든 것은 Xcode에서만 사용할 수 있을 뿐만 아니라 App Store Connect에서도 사용할 수 있습니다.

여기에는 빌드 시작 및 보기, 워크플로우 관리, 아티팩트 보기 및 다운로드, 팀과 결과 공유, 알림 설정 관리가 포함됩니다.

그리고 이미 TestFlight에서 작업하고 있다면, Xcode Cloud는 빠른 액세스를 위해 App Store Connect 바로 옆에 있는 탭입니다.

App Store Connect에서 개인 알림 설정을 설정할 수도 있습니다.

저는 빌드 실패에 대한 슬랙 알림을 설정하여 코드를 푸시한 후 작업을 계속할 수 있지만 고칠 것이 있으면 빠르게 알림을 받습니다.

당신 팀의 모든 사람들은 그들에게 가장 적합한 알림을 설정할 수 있습니다.

이동 중이든, Xcode에서 설정하지 않은 프로젝트의 빌드에 대한 가시성을 원하든, 프로젝트에 코드를 커밋하지 않는 팀의 일원이든, App Store Connect의 Xcode Cloud는 모든 기능을 갖춘 웹 기반 경험을 제공합니다.

우리가 Xcode Cloud를 만들었을 때, 우리는 당신의 개발 과정과 팀과의 협업을 위해 그것을 설계했지만, 또한 핵심에 프라이버시를 두고 구축되었습니다.

당신의 소스 코드는 프로젝트의 핵심입니다.

그것이 Xcode Cloud의 모든 측면이 데이터를 보호하도록 설계된 이유입니다.

건축 환경은 일시적이다.

워크로드는 완전히 격리되어 있으며, 환경은 빌드 사이에 처음부터 철거되고 생성된다.

소스 코드는 절대 저장되지 않습니다.

Xcode Cloud는 임시 빌드 환경에서만 코드를 가져옵니다.

빌드 데이터는 저장 중에 암호화되어 전용 CloudKit 데이터베이스에 저장됩니다.

그리고 당신은 당신의 데이터를 통제할 수 있습니다.

언제든지 데이터를 삭제할 수 있으며, 시스템에서 완전히 제거됩니다.

이제 Xcode Cloud를 도입했으므로, 제프에게 넘겨서 설정을 진행할 것입니다.

Xcode Cloud에 온보딩을 시작합시다.

Xcode와의 강력한 통합 덕분에 시작하는 데 몇 가지 간단한 단계만 있으면 됩니다.

이 과정은 제품 메뉴의 Xcode Cloud 섹션을 방문하여 워크플로우 만들기를 선택하는 것으로 시작됩니다.

다음으로, 로컬 프로젝트에서 감지된 이러한 옵션에서 온보딩하고 싶은 앱을 선택합니다.

오늘, 저는 제 팀이 개발하고 있는 "Fruta"라는 새로운 스무디 주문 앱을 고를 것입니다. 이 앱은 iOS와 macOS를 모두 지원하며, 우리는 두 플랫폼을 한 번에 함께 온보딩할 것입니다.

우리 앱은 나를 위해 자동으로 생성된 기본 첫 번째 워크플로우로 시작합니다.

내 로컬 프로젝트를 검사함으로써, Xcode Cloud는 우리 팀의 기존 구성에 맞게 이러한 초기 워크플로우 설정을 조정할 수 있습니다.

워크플로우는 시작 조건, 환경, 수행할 작업 세트, 배포 및 알림과 같은 사후 작업으로 구성되어 있습니다.

그리고 Xcode Cloud가 시작 조건으로 메인 브랜치에 대한 모든 푸시, 내 환경을 위한 최신 출시된 Xcode, iOS와 macOS 모두에 대한 아카이브 작업을 선택한 것을 볼 수 있습니다.

나는 이 설정을 변경할 수 있는 옵션이 있지만, 이것은 나에게 좋아 보인다, 그래서 나는 계속할 것이다.

워크플로우 편집에 대해 자세히 알아보자면, 회의 후반부에서 "Xcode 클라우드 워크플로우 탐색" 세션을 확인하세요.

다음으로, 나는 Xcode Cloud가 내 소스 코드에 접근할 수 있도록 허가할 것이다.

이것은 기본 저장소, 하위 모듈 및 개인 스위프트 패키지를 포함하여 내 프로젝트를 구축하는 데 필요한 모든 소스 저장소를 다루는 일회성 작업입니다.

공개적으로 접근 가능한 저장소의 경우, 추가 승인이 필요하지 않습니다.

Xcode Cloud는 내 프로젝트 내에서 두 개의 개인 저장소를 발견했기 때문에, 다음으로 소스가 호스팅되는 GitHub에 명시적인 권한을 부여할 것입니다.

Grant Access를 클릭하면 다음 단계에 대한 자세한 내용을 통해 App Store Connect로 이동합니다.

이 과정은 소스 공급자에 따라 다르며, 어떤 이유로든 언제든지 액세스를 취소할 수 있다는 점에 유의하는 것이 중요합니다.

Xcode Cloud에 대한 소스 코드 액세스 권한 부여는 웹에서 완료되며, 이 도우미는 그 과정을 안내합니다.

먼저, Apple ID를 Xcode Cloud에서 개인화된 경험을 가능하게 하는 데 사용되는 소스 계정과 연결합니다.

이 단계는 공급자의 기본 인증 흐름과 Xcode Cloud의 보안 암호화를 활용하므로, 제 코드와 개인 정보가 보호된다는 것을 알고 있습니다.

그런 다음 Xcode Cloud 애플리케이션을 GitHub 조직에 설치하여 선택한 저장소에 액세스할 수 있습니다.

좋아!

그 단계가 완료되면, 내 GitHub 계정은 모두 설정되었다.

로컬에서 Xcode에서 온보딩을 끝내자.

저장소가 준비되었습니다. 계속할게.

마지막 단계에서, Xcode Cloud는 내 애플리케이션과 번들 ID를 App Store Connect에 등록할 것을 제안할 것이다.

우리의 신청서는 이미 만들어졌기 때문에, 여기서 세부 사항을 확인하겠습니다.

모든 게 좋아 보여.

이제 내 앱이 Xcode Cloud용으로 구성되었으므로, 첫 번째 빌드를 시작할 온보딩 프로세스를 마무리할 수 있습니다.

내 첫 번째 빌드가 끝난 것 같아.

결과를 더 자세히 살펴봅시다.

빌드 그룹 개요는 활성 및 완료된 빌드를 한 눈에 보여주며, 첫 번째 항목을 클릭하면 빌드 개요 페이지가 열립니다.

이 개요는 기간 및 환경 구성과 같은 빌드에 대한 간략한 세부 사항을 보여주며, 하단 섹션은 관련된 모든 작업과 사후 작업의 상태를 보여줍니다.

또한, 오른쪽 상단에는 실행을 다시 재구성하는 데 유용한 버튼이 있으며, 내 지역 환경에서 이 개정판을 확인하세요.

개요를 남기고 "Archive-iOS"를 전달하는 것과 같은 작업 노드를 확장하면 이 특정 작업의 요약을 보여줍니다.

그리고 뷰 내에서, 나는 이 실행에 의해 생성된 로그와 유물을 찾을 수 있다.

로그 페이지는 이 작업 내의 모든 작업을 깔끔하게 구성하며, 주의가 필요한 영역에 집중할 수 있도록 상단에 필터를 사용할 수 있습니다.

나는 또한 아티팩트 페이지에서 내 빌드에서 생성된 바이너리, 로그 파일 및 기타 아티팩트에 쉽게 접근할 수 있다.

이 모든 것이 내 팀원들과 내가 바로 여기 Xcode에서 CI 콘텐츠에 접근할 수 있는 매우 편리한 방법이다.

이제 작업 요약을 방문하여 Mac 아카이브 작업이 실패한 이유를 조사해 봅시다.

로그 보기와 마찬가지로, 효율적인 분류를 위해 이러한 문제를 유형별로 필터링할 수 있습니다.

첫 번째 CI 빌드가 이전에 Mac 앱에서 놓친 가져오기 문제를 발견한 것 같고, Xcode에서 결과를 분류하고 있기 때문에 문제 내에서 이 점프 버튼을 사용하여 수정해야 할 코드로 직접 이동할 수 있습니다.

나는 물건을 정리하기 위해 빠른 코드를 바꿀 것이다.

그리고 나는 우리의 CI 빌드가 좋은 출발을 하기를 바란다. 그래서 나는 계속해서 커밋하고 그것을 내 원격 저장소로 푸시할 것이다.

그리고 내가 변화를 추진한 직후, 나는 Xcode Cloud가 나를 위해 새로운 빌드를 시작했다는 것을 알게 되었다.

그리고 나는 내 모든 변화를 계속 따라갈 수 있다.

나는 나의 빠른 발전에 꽤 흥분된다.

Apple의 클라우드 인프라를 기반으로 CI 빌드를 실행함으로써, 우리 팀은 그 어느 때보다 효율적으로 프로젝트에 협력할 것입니다.

이제, 재미에 동참하기 위해 홀리로 돌아가.

제프, 우리 프로젝트 Fruta를 위해 Xcode Cloud를 설정하고 실행해 주셔서 감사합니다.

같은 팀의 일원으로서, 저는 Mac에서 Fruta Xcode 프로젝트를 열고 Geoff와 나머지 팀이 작업해온 모든 워크플로우와 빌드를 볼 수 있습니다.

여기 클라우드 탭의 보고서 네비게이터에서 프로젝트 이름을 클릭하면 워크플로우가 팀 내에서 공유되기 때문에 제프가 방금 만든 기본 워크플로우를 볼 수 있습니다.

제프가 가져오기 오류를 수정했을 때 시작한 빌드 2가 성공적으로 완료된 것 같습니다.

이제 지나가는 빌드가 있으므로, 워크플로우를 편집하여 그것이 무엇을 하는지 확인하고, Fruta에 대한 추가 커버리지를 얻기 위해 어떤 개선을 할 수 있는지 알아봅시다.

워크플로우 이름을 마우스 오른쪽 버튼으로 클릭하고 워크플로우 편집을 선택할 수 있습니다.

워크플로우에 좀 더 서술적인 이름을 부여하는 것으로 시작합시다.

릴리스에 사용하는 몇 개의 지점을 구축하고 테스트할 것이기 때문에 이 워크플로우를 "릴리스"라고 부르자.

이제, 시작 조건을 편집해 봅시다.

구성을 표시하기 위해 사이드바에서 시작 조건 섹션을 선택하겠습니다.

시작 조건은 워크플로우를 실행하기 위해 어떤 일이 일어나야 하는지 정의한다는 것을 기억하세요.

기본값은 코드 변경이 메인 브랜치로 푸시될 때 시작하도록 설정되어 있습니다.

우리 팀은 또한 릴리스 브랜치를 사용하므로, 여기에도 추가합시다.

사용자 지정 브랜치 섹션에서 더하기 버튼을 클릭하고 테이블 행에 내 브랜치 이름을 입력합니다.

그것은 시작 조건에 좋아 보인다.

이제 행동으로 넘어가자.

기본 워크플로우는 내 프로젝트가 실행되는 모든 플랫폼에 대한 아카이브 작업을 자동으로 생성합니다.

이것은 구축할 수 있는 훌륭한 토대이지만, 추가 커버리지를 추가하기 위해 여기에 몇 가지 테스트를 추가하고 싶습니다.

사이드바의 작업 헤더 오른쪽에 있는 더하기 버튼을 클릭하고 테스트 작업 유형을 선택합니다.

테스트 작업을 위해, 저는 플랫폼을 선택할 수 있습니다-- iOS를 합시다-- 그런 다음 올바른 계획, 우리의 경우 Fruta iOS를 선택할 수 있습니다.

사이드바에는 아직 필요한 모든 것을 작성하지 않았기 때문에 새로운 테스트 작업 옆에 여전히 빨간색 X가 있습니다.

내가 구성해야 할 마지막 설정은 이러한 테스트를 실행할 수 있는 몇 가지 장치를 추가하는 것이다.

대상 테이블 아래의 더하기 버튼을 클릭하면 추천 iPhone 시뮬레이터가 자동으로 추가됩니다...

그리고 한 번 더 클릭하면 추천 iPad가 추가됩니다.

나는 또한 특정 장치 시뮬레이터를 선택하기 위해 이것들을 바꿀 수 있다.

내 앱이 iPhone 12에서 잘 작동하는지 확인하기 위해 최신 iPhone을 선택합시다.

제가 추가한 모든 목적지는 자동으로 최신 OS 버전을 사용하도록 설정되어 있습니다.

사이드바에서 작업 흐름을 검토할 수 있고, 모든 것이 좋아 보이므로, 오른쪽 하단 모서리에 있는 저장 버튼을 클릭하여 변경 사항을 저장합시다.

이제 워크플로우를 변경했으므로, 시작하기 위해 코드를 변경하지 않고도 작동하는지 확인하고 싶습니다.

보고서 네비게이터에서 워크플로우를 마우스 오른쪽 버튼으로 클릭하고 빌드 시작을 선택하여 수동으로 할 수 있습니다.

다음으로, 어떤 지점을 운영하고 싶은지 선택하라는 메시지가 표시됩니다.

방금 그 브랜치를 워크플로우에 추가했기 때문에 "release/v1"으로 시도해 봅시다.

그리고 여기에서, 나는 그것을 시작하기 위해 빌드 시작을 클릭한다.

좋아, 우리의 새 건물이 실행되고 있는 것 같아.

이제 빌드 그룹 개요에는 릴리스/v1 브랜치에 대한 새로운 섹션이 있으며, 방금 시작한 새 빌드인 빌드 3이 실행 상태로 여기에 나타납니다.

이것이 완료되면, 나는 우리의 출시 지점이 어떻게 하고 있는지 잘 알게 될 것이다.

그런 다음 릴리스 워크플로우에 계속 추가하거나 우리 팀이 일하는 방식을 지원하기 위해 새로운 워크플로우를 만들 수 있습니다.

Xcode Cloud는 우리 앱에 대한 지속적인 통합 관행을 채택하는 것을 정말 간단하게 만들었다.

몇 번의 클릭만으로, 제프는 워크플로우가 발견한 문제를 설정하고 수정했다.

그리고 나서 나는 그가 이미 한 모든 것을 쉽게 볼 수 있었고, 우리의 작업 흐름을 더 견고하게 만들 수 있었다.

코드와 피드백을 생산적으로 반복하는 팀의 능력은 고품질 앱이나 프레임워크를 만드는 데 필수적입니다.

Xcode Cloud를 사용하면 CI를 쉽게 설정할 수 있으며, 이것이 완전히 새로운 관행이든 프로세스를 원활하게 만들든, 생산성을 높이고 사용자가 제품에 대한 훌륭한 경험을 할 수 있다는 확신을 가질 수 있습니다.

이 세션이 Xcode Cloud와 지속적인 통합에 익숙해지는 데 도움이 되었기를 바랍니다.

캐나다 밴쿠버에 있는 우리 팀에서, 그리고 제프와 저를 대신하여, 감사드리며 남은 WWDC 2021을 즐기세요.

[쾌활한 음악].