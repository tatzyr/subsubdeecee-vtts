10122

♪ 베이스 음악 연주 ♪

♪

프레스턴 루이스: 안녕하세요, 제 이름은 프레스턴이고, 오늘 저는 당신의 앱에서 차트에 접근성을 가져오는 방법에 대해 이야기할 것입니다.

우리가 오늘 다룰 내용을 검토해 봅시다.

먼저, 우리는 당신의 차트에 접근할 수 있는 몇 가지 이점에 대해 이야기할 것입니다.

그런 다음, 우리는 차트의 시각적 측면에 대한 포괄적인 결정을 내리기 위한 몇 가지 원칙을 검토할 것입니다.

다음으로, 우리는 VoiceOver로 차트를 인지하고 탐색할 수 있도록 하는 방법에 대해 논의할 것입니다.

그리고 마지막으로, 우리는 "오디오 그래프"라는 흥미진진한 새로운 기능과 앱에서 지원하는 방법에 대해 이야기할 것입니다.

그럼, 시작하자.

데이터는 현대 세계에서 매우 중요하다.

우리는 재정, 건강, 목표 및 기타 많은 것들에 대한 결정을 내리기 위해 매일 데이터를 사용합니다.

하지만 데이터를 사용하기 위해, 우리는 그것을 이해할 수 있어야 한다.

차트는 세부 사항에 너무 깊이 들어가지 않고도 데이터가 우리에게 무엇을 말하고 있는지 빠르게 이해할 수 있기 때문에 유용하다.

하지만 시각장애인이나 저시력자들은 본질적으로 차트에 접근할 수 없다.

당신이 그것을 볼 수 없다면 시각적 차트에는 가치가 없습니다.

접근성 팀은 시각장애인과 저시력자들이 데이터에 더 쉽게 접근할 수 있도록 수년 동안 열심히 노력해 왔다.

올해는 앱에서 오디오 그래프를 지원하여 시각 장애가 있거나 시력이 낮은 사람들에게 차트의 모든 기능을 제공할 수 있습니다.

예를 들어 봅시다.

다음은 1917년부터 1975년까지의 역사적 출생률을 보여주는 예시 앱입니다.

이 차트를 보면, 몇 가지 흥미로운 기능을 즉시 볼 수 있습니다.

출생률이 1935년경에 최소로 감소한 후 1960년경으로 빠르게 증가했다가 다시 감소한 것을 알 수 있습니다.

우리는 시각 장애인과 저시력 사람들에게 새로운 오디오 그래프 VoiceOver 기능을 사용하여 데이터를 빠르게 이해할 수 있는 동일한 기능을 제공할 수 있습니다.

그게 어떻게 작동하는지 보여줄게.

먼저, 저는 보이스오버 로터에서 오디오 그래프 메뉴를 찾을 것입니다.

VoiceOver: 오디오 그래프.

프레스턴: 그런 다음 "차트 세부 사항"이 들릴 때까지 아래로 스와이프하겠습니다.

VoiceOver: 오디오 그래프를 재생하세요. 차트 세부 사항.

프레스턴: 그런 다음 두 번 탭하여 오디오 그래프 탐색기 보기를 열겠습니다.

VoiceOver: 오디오 그래프. 가고 있어.

프레스턴: 그런 다음 오디오 그래프를 재생하기 위해 재생 버튼으로 이동하여 데이터 시리즈를 연속 톤으로 재생할 것입니다.

보이스오버: 20세기 출생률.

오디오 그래프를 재생하세요. 버튼.

프레스턴: 지금 들어보자.

VoiceOver: 완료.

프레스턴: 신나지 않았어?

당신이 방금 들은 것은 당신이 보는 것과 같은 차트였고, 시각적으로 대신 청각적으로 표현되었습니다.

당신이 들은 피치는 시간이 지남에 따라 출생률에 해당하며, 낮은 피치는 더 낮은 값을 의미하고 더 높은 피치는 더 높은 값을 의미합니다.

이 피치는 시각적 차트의 선을 정확히 반영한다.

따라서 차트를 보지 않아도 오디오 그래프를 사용하면 단 몇 초 만에 중요한 기능을 인식할 수 있습니다.

이제 데이터에 대한 일반적인 감각이 생겼으니, 우리가 관심 있는 기능에 대한 더 정확한 정보를 얻자.

다음으로 우리가 알고 싶은 것은 대략 최대 출생률이 얼마였고 몇 년도에 발생했는지입니다.

이를 위해 오디오 그래프는 VoiceOver 사용자가 두 번 탭하고 누른 다음 드래그하여 자신의 속도로 데이터를 들을 수 있는 대화형 모드를 제공합니다.

그들이 일시 정지하면, VoiceOver는 오디오 그래프에서 사용자의 현재 위치에 해당하는 데이터 값을 읽을 것이다.

이 대화형 모드를 사용하여 최대 출생률과 발생 연도를 찾아봅시다.

보이스오버: 20세기 출생률.

데이터 포인트. 1960년. 10,000명당 268명의 출생.

프레스턴: 우리가 가장 높은 피치를 들을 때까지 오디오 그래프를 훑어본 다음, 데이터 값을 듣기 위해 잠시 멈추면, 우리는 최대 출생률이 1960년경 10,000명당 268명이었다는 것을 알 수 있다.

우리는 최대치가 1960년경에 발생했다는 것을 알고 있기 때문에, 우리는 심지어 이 피크가 베이비 붐 시대에 해당한다고 추론할 수도 있다.

우리는 차트의 소리화된 표현에서 이 모든 것을 알아낼 수 있다.

좋아, 이제 다른 종류의 차트의 예를 살펴봅시다.

이 차트는 여러 종류의 자동차에 대한 X축의 차량 무게와 Y축의 연료 효율 간의 관계를 보여주는 산점도이다.

이 차트의 오디오 그래프에서, 당신이 듣는 각 톤은 시각적 차트의 각 시각적 데이터 포인트와 마찬가지로 한 대의 자동차에 대한 데이터 포인트를 나타냅니다.

각 톤의 피치는 갤런당 마일로 자동차의 연료 효율을 나타낼 것이므로, 더 높은 피치는 더 연료 효율적인 차량을 의미한다.

내가 이 오디오 그래프를 재생할 때 당신이 무엇을 듣기를 기대하는지 잠시 생각해 보세요.

그게 어떻게 들리는지 들어보자.

데이터가 상승하고 있는지 아니면 하락하고 있는지 들어보세요.

VoiceOver: 완료.

프레스턴: 당신이 하향 추세를 들었기를 바랍니다.

이러한 추세는 더 큰 자동차가 이 데이터 세트에서 연료 효율이 떨어지는 경향이 있다는 것을 의미한다.

우리가 사용할 수 있는 원시 데이터 포인트만 있고 각 데이터 포인트를 개별적으로 살펴봐야 했다면 이 관계를 이해하는 데 얼마나 오래 걸렸을지 상상해 보세요.

또한, 당신이 자세히 듣고 있었다면, 이 데이터 세트에서 매우 높은 음조의 이상치를 들었을 것입니다.

그것은 시각적 차트에서 튀어나온 것처럼 오디오 그래프에서 튀어나와 이 데이터 세트에서 유일한 하이브리드 차량이다.

이상치에 대한 더 많은 정보를 얻고 싶다면, 대화형 모드를 사용하여 가장 높은 피치를 들을 때까지 데이터를 탐색한 다음, 출생률 차트에서 했던 것처럼 데이터 값을 듣기 위해 일시 중지할 수 있습니다.

오디오 그래프 외에도, 이 탐색기 보기는 이 차트 데이터의 자동 통계 분석에서 추론되는 모양, 추세 및 이상값과 같은 데이터의 중요한 기능에 대한 요약 정보를 제공합니다.

오디오 그래프와 함께, VoiceOver는 데이터에 대한 우리의 이해를 완성하기 위해 이 요약 정보를 읽을 수 있습니다.

좋아요, 접근 가능한 차트의 이점을 빠르게 요약해 봅시다.

차트에 접근할 수 있도록 하면 데이터가 풍부한 애플리케이션이 시각장애인과 저시력자를 포함한 더 많은 청중에게 다가갈 수 있습니다.

차트의 데이터를 이해하는 데 유용한 도구를 제공하여 사용자에게 권한을 부여할 것이며, 이는 개인 및 직업 생활에서 데이터의 놀라운 힘을 활용하는 데 도움이 될 것입니다.

그리고 마지막으로, 올해 새로운 API가 출시되면, 차트를 만드는 것이 그 어느 때보다 쉬워졌습니다.

앱에서 오디오 그래프를 지원하는 방법을 보여드리게 되어 정말 기쁘지만, 차트를 시각적으로 더 쉽게 접근할 수 있도록 하는 방법부터 시작하여 몇 가지 일반적인 차트 접근성 주제를 먼저 다루어야 합니다.

모든 사람이 시각적 차트를 더 잘 이해할 수 있도록 하기 위해 할 수 있는 몇 가지 간단한 일이 있습니다.

이 차트를 예로 들어 보세요.

이것은 열대 및 건조한 지역의 월 평균 강우량을 보여주는 간단한 라인 차트입니다.

이 차트의 시각적 접근성을 개선하기 위해 몇 가지 접근성 원칙을 적용해 봅시다.

첫째, 가능할 때마다 고대비 색상을 사용하는 것이 중요합니다.

전경색과 배경색의 높은 대비는 특히 시력이 낮은 사람들을 위해 차트를 더 쉽게 보고 이해할 수 있게 해준다.

보시다시피, 배경에 대한 선의 대비는 꽤 낮습니다.

제목과 라벨 텍스트도 약간 어둡게 보인다.

배경 대비가 더 높도록 이 색상들을 업데이트합시다.

그게 훨씬 나아.

색상 간의 대비 비율을 확인하여 대비가 충분한지 여부를 결정할 수 있습니다.

Xcode와 함께 제공되는 접근성 검사기에는 사용할 수 있는 색상 대비 계산기가 있습니다.

최소 4.5:1의 대비 비율을 목표로 하는 것이 좋다.

차트의 시각적 접근성을 개선하기 위해 할 수 있는 다음 일은 문제가 있는 색상 페어링을 피하는 것입니다.

가능하다면 빨간색과 초록색을 함께 사용하지 않는 것이 일반적으로 좋은 관행이다.

빨간색과 녹색 색맹은 가장 흔한 유형이며 이러한 색상을 함께 사용하면 일부 사람들에게는 차트를 이해하기 어려울 수 있습니다.

그래서 여기 다시 선 차트가 있습니다. 녹색 선은 열대 지역의 강우량을 나타내고 빨간색 선은 건조한 지역의 강우량을 나타냅니다.

범례의 색상 인코딩을 사용하여 어떤 데이터 시리즈가 어떤 데이터 시리즈인지 알 수 있을 것입니다.

하지만 만약 당신이 적녹색 색맹의 한 형태인 듀테로피아를 가지고 있다면, 차트는 당신에게 더 비슷하게 보일 수 있습니다.

어떤 선이 열대 강우량을 나타내고 어떤 선이 건조한 강우량을 나타내는지 말하기 어려울 것입니다.

빨간색을 파란색으로 대체하여 이것을 개선합시다.

이것은 큰 변화처럼 보이지 않을 수도 있지만, 적록색 실명을 가진 사람에게는 이 차트가 이제 이렇게 보일 수 있다.

이 작은 조정으로, 적녹색 색맹을 가진 사람이 시리즈의 차이를 발견하는 것이 쉬워진다.

이 색맹이 두 번째로 흔하기 때문에 파란색과 노란색을 함께 사용하지 않는 것도 좋다.

이것들은 몇 가지 좋은 개선 사항이지만, 데이터 시리즈를 구별하기 위해 색상 외에도 기호를 사용하여 한 걸음 더 나아가자.

데이터 기호를 사용하면 사람들이 색상에 전혀 의존하지 않고도 차트를 이해할 수 있습니다.

그래서 여기 다시 우리의 차트가 있습니다.

그리고 이제 각 데이터 시리즈에 몇 가지 기호를 추가해 봅시다.

열대 데이터 시리즈에는 이제 원이 있고, 건조한 데이터 시리즈에는 사각형이 있습니다.

관련 기호를 보는 것만으로도 어떤 시리즈가 어떤 시리즈인지 알 수 있습니다.

이것은 색을 전혀 인식할 수 없는 사람조차도 이제 당신의 차트를 이해할 수 있다는 것을 의미합니다.

기본적으로 이 모든 것을 하는 것은 좋지만, 다시 말하지만, 때로는 디자인이나 제품 제약이 색상 선택이나 기호를 포함하기로 결정하는 것을 제한할 수 있습니다.

이러한 경우, 몇 가지 간단한 접근성 설정을 지원하여 접근 가능한 경험을 제공할 수 있습니다.

기본 케이스에 대해 차트에 기호를 가질 수 없는 경우, Color 없는 차별화 시스템 접근성 설정이 활성화되었을 때 기호를 추가하여 접근 가능한 경험을 제공할 수 있습니다.

제품 이유로 색상 세트를 쉽게 변경할 수 없다면, 대비 증가 접근성 설정이 설정되어 있을 때 대비가 더 높은 색상을 채택하는 것을 고려해 보세요.

투명성 사용을 줄이면 차트에 더 시각적으로 접근할 수 있습니다.

차트가 투명도 효과를 사용하는 경우, 투명도 감소 접근성 설정이 켜져 있을 때 비활성화하는 것을 고려하십시오.

iOS 앱이 아닌 macOS를 구축하는 경우, 이러한 각 설정에는 지원할 수 있는 macOS에 대응이 있습니다.

이 세션의 자료에서 이러한 API에 대한 개발자 문서에 대한 링크를 찾을 수 있습니다.

이제 VoiceOver를 위해 데이터를 탐색할 수 있는 방법을 살펴봅시다.

이제, 나는 커피를 좋아하고, 프로그래밍을 좋아한다.

이 차트에 표시된 것처럼 소비된 커피의 양과 엔지니어가 생산하는 코드의 양 사이에 관계가 있는 척 합시다.

그냥 척 해.

또한, 데이터는 커피 12잔까지 올라가지만, 걱정하지 마세요, 어떤 엔지니어도 이 데이터를 만드는 데 피해를 입지 않았습니다; 그것은 모두 구성되어 있습니다.

좋아요, VoiceOver 사용자가 이 데이터를 어떻게 탐색할 수 있는지 봅시다.

다음은 차트 뷰 클래스와 해당 모델 객체의 코드 스니펫의 예입니다.

차트 보기에는 모델에 대한 참조와 그 자체를 그리기 위한 기능이 있을 수 있다.

그리고 그 모델은 차트의 제목과 데이터 포인트를 간단한 구조체에 포함할 수 있다.

당신이 하고 싶은 첫 번째 일은 차트를 컨테이너로 만드는 것입니다.

이것은 VoiceOver가 차트 요소를 올바르게 그룹화하고 탐색에 도움이 될 것입니다.

차트를 컨테이너로 만들려면, ChartView에서 accessibilityContainerType을 재정의하고 semanticGroup 컨테이너 유형을 반환하기만 하면 됩니다.

다시 말하지만, 이것은 VoiceOver 탐색과 차트에 속하는 요소를 전달하는 데 중요합니다.

다음으로, 우리는 차트에 접근성 라벨을 제공해야 합니다.

이것은 VoiceOver에게 차트를 만났을 때 무엇을 말해야 하는지 알려줍니다.

일반적으로, 이것은 차트의 제목이거나 VoiceOver가 UI에서 차트를 고유하게 식별할 수 있는 것과 유사한 것이어야 합니다.

마지막으로, 각 데이터 포인트에 대한 접근성 요소를 제공하고 싶을 것입니다.

차트 보기의 accessibilityElements 속성을 재정의하여 이러한 요소를 제공할 수 있습니다.

이것은 VoiceOver가 탐색할 수 있는 차트 내부의 요소를 만들어 사람들이 개별 데이터 포인트에 대한 정보를 얻을 수 있도록 합니다.

이를 구현하려면, "맵"을 사용하여 데이터 포인트 목록에서 접근성 요소 배열을 만들 수 있습니다.

각 데이터 포인트에 대해 ChartView를 accessibilityContainer로 지정하여 새로운 UIAccessibilityElement 객체를 만들 것입니다.

그런 다음, 우리는 요소의 accessibilityValue 속성에 대한 데이터 포인트의 문자열 표현을 제공할 것입니다.

이 문자열은 VoiceOver가 이러한 데이터 포인트 요소로 이동할 때 말하는 것입니다.

코드에서, 당신은 아마도 이 문자열이 현지화되기를 원할 것이며, 문자열 사전을 사용하여 적절한 복수화 규칙을 정의하고 싶을 수도 있습니다.

하지만, 이 예에서는, 그냥 간단하게 합시다.

마지막으로, 우리는 VoiceOver가 화면의 위치를 알 수 있도록 요소에 대한 접근성 프레임을 제공해야 합니다.

시각적 차트를 그리기 위해 이것이 필요했기 때문에 다른 곳에서 각 데이터 포인트의 프레임을 계산하기 위한 논리를 이미 가지고 있을 것입니다.

만약 당신이 그것을 사용할 수 있다면, 여기서 그 논리를 재사용할 수 있습니다.

이제 이 데이터 포인트에 대한 완성된 접근성 요소를 반환할 수 있습니다.

알았어! 우리가 지금까지 무엇을 성취했는지 봅시다.

VoiceOver: 커피 한 잔과 코드 줄.

제로 컵. 20줄의 코드.

한 컵. 서른 줄의 코드.

두 컵. 35줄의 코드.

세 잔. 32줄의 코드.

프레스턴: 좋아!

당신이 들었듯이, VoiceOver는 이제 차트를 의미 그룹으로 만들고 접근성 라벨을 부여했기 때문에 차트 내부의 요소에 초점을 맞출 때 제목을 말합니다.

우리는 또한 각각을 나타내는 UIAccessibilityElement를 만들어 각 데이터 포인트를 탐색할 수 있도록 했습니다.

우리가 넘어가기 전에 언급하고 싶은 게 하나 더 있어.

때때로 당신은 수백 또는 수천 개의 데이터 포인트를 가질 수 있습니다.

이러한 경우, 탐색하기에는 너무 많기 때문에 각 데이터 포인트에 대한 접근성 요소를 만들고 싶지 않습니다.

대신, 차트를 합리적인 간격으로 나누고 각 데이터 포인트가 아닌 각 간격에 대한 접근성 요소를 만드는 것이 좋습니다.

이것은 여전히 이해할 수 있는 동안 더 나은 내비게이션 경험을 제공하고 성능을 향상시킬 것이다.

우리는 아직 끝나지 않았어; 우리는 더 많은 것을 할 수 있어.

데이터를 탐색할 수 있도록 하는 것은 중요하지만, 우리는 여전히 VoiceOver 사용자에게 한 번에 한 지점씩 원시 데이터만 제시하고 있습니다.

차트의 가치는 데이터가 실제로 우리에게 무엇을 말하고 있는지 보여주고, 우리가 개별 데이터 포인트를 넘어 볼 수 있도록 돕는 능력이다.

여기가 오디오 그래프가 들어오는 곳이다.

이제 - 마지막으로 - 차트에 대한 오디오 그래프 지원을 구현하는 방법에 대해 이야기해 봅시다.

특정 차트를 정의하는 데 필요한 모든 정보가 포함된 ChartModel 구조체가 있다고 상상해 보세요.

당신의 코드에서, 당신은 아마 이미 이와 같이 보이는 모델 객체를 가지고 있을 것입니다.

그렇지 않다면, 걱정하지 마세요.

이 개념들은 여전히 당신의 코드에 적용될 것이지만, 그것은 조직되어 있습니다.

예를 들어, 차트에 제목과 요약이 있고, X와 Y축이 있으며, 각 축에는 제목과 축의 최소 및 최대 표시 가능한 값을 나타내는 숫자 범위가 있다고 가정해 봅시다.

그리고 마지막으로, 그것은 우리 차트의 실제 데이터를 포함하는 데이터 포인트 배열을 가지고 있다.

우리는 이 예시 모델 객체의 정보를 사용하여 차트의 오디오 그래프 기능을 활성화할 것입니다.

먼저, 접근성 프레임워크를 가져온 다음, AXChart 프로토콜을 준수하도록 ChartView 클래스를 확장하십시오.

지원할 속성이 하나밖에 없기 때문에 AXChart 프로토콜을 준수하는 것은 쉽다.

접근성 차트 설명자를 구현하기만 하면 됩니다.

당신이 구성하는 차트 설명자 객체에는 VoiceOver가 오디오 그래프 경험을 제공하는 데 필요한 모든 정보가 포함됩니다.

이 차트 설명자 중 하나를 단계별로 만드는 방법을 살펴봅시다.

먼저, 우리는 각 축에 대한 축 설명자 객체를 만들어야 합니다.

각 축 설명자는 범주형 또는 수치 데이터를 나타내는지 여부, 축에 대한 표시 가능한 값의 범위, 격자선의 위치 및 음성 데이터 값을 포맷하는 방법에 대한 정보를 VoiceOver에 제공합니다.

X축은 커피 차트의 숫자이기 때문에, 우리는 숫자 축 설명자를 만들 것이다.

X축에 범주형 데이터가 있다면, 대신 범주형 축 설명자를 사용할 것이다.

우리는 모델 객체를 사용하여 이 축의 제목과 범위를 제공할 것입니다.

우리는 또한 이 축에 격자선의 위치를 선택적으로 제공할 수 있습니다.

격자선을 제공할 때, 그것들은 재생과 상호 작용 중에 오디오 그래프에 햅틱 피드백으로 표시됩니다.

이 차트에는 X축 격자선이 없기 때문에 지금은 이것을 비워 둘 것입니다.

숫자 축의 경우, 우리는 또한 valueDescriptionProvider 폐쇄를 만들어야 합니다.

이 폐쇄는 VoiceOver에게 이 축의 값을 말하는 방법을 알려주기 때문에 매우 중요하므로 "5"라고 말하는 대신 "5컵"이라고 말할 수 있습니다.

이 축을 위해, 우리는 값 뒤에 "컵"을 말하도록 설명을 포맷할 것이다.

다시 말하지만, 당신의 코드에서, 당신은 아마도 적절한 복수화 규칙으로 이 문자열을 현지화하고 싶을 것이지만, 이 예제를 간단하게 유지합시다.

우리는 "컵"이 아닌 "코드 라인"이라고 말하도록 값 설명을 포맷하는 것을 제외하고는 Y 축에 대한 축 설명자를 만들기 위해 같은 일을 할 것입니다.

이제 차트의 기본 구조가 정의 되었으니, 데이터를 추가해 봅시다.

이렇게 하려면, 각 데이터 시리즈에 대한 데이터 시리즈 설명자를 추가합니다.

우리는 이 차트에 하나의 데이터 시리즈만 있으므로, 시리즈의 이름, 연속 여부, 그리고 이 시리즈의 실제 데이터 포인트를 전달하여 하나의 데이터 시리즈 설명자를 만들 것입니다.

시리즈가 점이나 막대와 같은 개별 표시를 사용하여 시각적으로 표현될 때 "isContinuous"에 대해 "false"를 전달해야 하며, 시리즈가 시각적으로 선으로 표현될 때 "true"를 전달해야 합니다.

시리즈의 데이터를 위해, 우리는 AXDataPoint 객체 배열을 제공해야 합니다.

이것을 하는 가장 쉬운 방법은 차트 모델의 데이터에서 그것들을 매핑하는 것이다.

우리 거의 다 왔어!

우리는 마지막으로 할 일이 하나 있어.

그리고 그것은 우리의 AXChartDescriptor 객체를 만들기 위해 모든 조각을 모으는 것이다.

우리는 다시 우리 차트의 제목이 되어야 하는 제목을 줄 것이다.

그렇다면, 우리가 하나를 가지고 있다면, 우리는 차트의 요약을 제공할 수 있다.

이것은 당신의 차트에 대체 텍스트를 제공하는 것과 같습니다.

이 속성을 사용하여 데이터에서 가장 중요한 통찰력을 한두 문장으로 전달해야 합니다.

이 요약 텍스트는 오디오 그래프 탐색기 보기에서 사용자에게 표시됩니다.

이것은 당신의 차트를 이해하려는 VoiceOver 사용자에게 매우 도움이 될 수 있습니다.

마지막으로, 우리는 차트 설명자를 완성하기 위해 이전에 만든 축과 데이터 시리즈 설명자를 제공한 다음 반환할 것입니다.

그게 다야! 최종 결과를 봅시다.

VoiceOver: 오디오 그래프. 오디오 그래프를 재생하세요.

차트 세부 사항.

오디오 그래프. 제목: 커피 한 잔 대 코드 라인.

오디오 그래프를 재생하세요. 버튼.

완료.

프레스턴: 요약해 봅시다.

차트의 시각적 디자인을 위해 접근 가능한 선택을 하세요.

여기에는 좋은 명암비를 사용하고, 색상 외에 기호를 사용하여 데이터 범주를 구별하고, 색맹 사용자에게 문제가 될 수 있는 색 구성표를 피하는 것이 포함됩니다.

접근성 트리에 데이터 요소를 노출하여 VoiceOver 사용자가 인지하고 탐색할 수 있도록 하십시오.

그리고 마지막으로, 차트 보기에 AXChart 프로토콜과 accessibilityChartDescriptor를 구현하여 VoiceOver 사용자가 시력이 있는 사용자와 동일한 가치를 차트에서 얻을 수 있도록 합니다.

이제 당신은 모두를 위해 풍부하고 접근 가능한 차트를 만드는 데 필요한 모든 것을 갖추고 있습니다.

데이터가 우리 삶에서 매우 중요하기 때문에 이러한 도구를 사용하여 사용자에게 권한을 부여하기를 바랍니다.

차트는 데이터가 풍부한 세계에서 데이터를 이해하기 위한 최고의 도구 중 하나이며, 이제 모든 사람에게 이 이점을 가져다 줄 수 있습니다!

♪