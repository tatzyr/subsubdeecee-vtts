10283

♪ ♪

안녕하세요, 저는 아리입니다. 오늘 카메론과 함께 당신에게 단축키의 세계를 소개하고 단축키, 시리 및 제안에서 훌륭한 경험을 제공하는 행동을 어떻게 설계할 수 있는지에 대해 이야기하게 되어 기쁩니다.

앱 디자인에 대해 생각할 때, 우리는 보통 UI의 세부 사항과 사용자가 앱 안에 있을 때 보고 느낄 수 있는 것에 중점을 둡니다.

하지만 이 이야기에서, 우리는 조금 다른 것을 할 것이다.

우리는 당신의 앱이 열리지 않을 때 사람들이 당신의 앱으로 가질 수 있는 경험에 초점을 맞출 것입니다.

우리는 이런 식으로 생각함으로써 열 수 있는 기회의 세계가 있다고 생각한다.

그것은 모두 우리가 "행동"이라고 부르는 개념에서 시작된다.

행동은 사람들이 당신의 앱으로 완료할 수 있는 작업을 나타내는 방법입니다.

행동을 취함으로써, 당신은 사람들이 새롭고 흥미로운 방식으로 그 작업을 수행하도록 할 수 있습니다.

캘린더 앱을 만든다고 가정해 봅시다.

사람들이 캘린더 앱 안에 있을 때 가장 일반적으로 하는 일은 무엇인가요?

음, 사람들은 아마 새로운 이벤트를 추가하고, 기존 이벤트를 찾고, 이벤트를 변경할 것이다.

그것들은 모두 행동에 대한 훌륭한 아이디어이다.

그래서, 캘린더 앱은 각 활동에 대한 작업을 정의할 수 있습니다.

여기가 마법이 시작되는 곳이다.

캘린더 앱이 이러한 작업을 생성하면, 사람들은 단축키를 형성하기 위한 빌딩 블록으로 사용할 수 있습니다.

예를 들어, 이 새 이벤트 추가 작업은 내 달력에 이벤트를 빠르게 추가하는 데 좋습니다.

사람들은 오후 6시부터 오후 7시까지 "요가"라는 이벤트를 만들기 위해 이것을 설정하여 행동을 사용자 정의할 수 있습니다.

그런 다음 그 행동은 사람들이 한 번의 탭으로 원할 때마다 행동을 수행하는 데 사용할 수 있는 지름길이 될 수 있다.

사람들은 또한 다양한 행동을 함께 혼합하고 일치시켜 오늘의 모든 캘린더 이벤트를 찾고 각각에 개인 회의실 URL을 추가하는 것과 같이 훨씬 더 강력한 일을 하는 지름길을 만들 수 있습니다.

그것은 또 다른 매우 가치 있는 지름길을 형성할 수 있다.

그리고 사람들은 다른 앱의 작업을 함께 사용하여 다음 캘린더 이벤트를 받고 참석자들에게 내가 늦을 것이라는 메시지를 보내는 것과 같은 단일 단축키로 더 많은 작업을 수행할 수 있습니다.

그리고 이 예시들은 사람들이 할 수 있는 일의 표면을 긁고 있다.

몇 가지 작업만 생성함으로써, 캘린더 앱은 Apple 기기에서 바로 가기와 함께 사용할 수 있는 수천 개의 새로운 사용 사례를 열었습니다.

업데이트된 단축키 편집기를 사용하면 누구나 작업을 함께 드래그 앤 드롭하여 단축키를 만들 수 있습니다.

동작을 만드는 것은 단축키를 설정하지 않더라도 앱을 사용하는 사람들에게 도움이 될 수 있습니다.

시스템에 행동을 기부하면, Siri는 사람들이 당신의 앱을 어떻게 사용하는지 자동으로 배우고 제안 위젯, 검색 및 잠금 화면에서 적시에 당신의 행동을 제안할 것입니다.

그리고 사람들은 Siri에게 이름을 말하는 것만으로도 단축키를 사용할 수 있다.

"시리야, 스타벅스 주문해."

마찬가지로, Siri는 조치를 시작하고 앱이 조치를 취하는 데 필요한 정보를 얻기 위해 후속 질문을 할 수 있습니다.

따라서 작업을 생성하면 앱의 기능을 자동으로 음성으로 사용할 수 있으므로 사람들이 어디서나 사용할 수 있습니다.

그것은 Siri를 넘어서도 확장된다.

단축키는 홈 화면의 단축키 위젯이나 Mac의 메뉴 표시줄에서 한 번 탭하는 것과 같이 iOS와 macOS에서 실행할 수 있습니다.

앱의 동작을 노출함으로써, 단축키 가능성의 세계로 앱을 열 수 있습니다.

훌륭한 행동을 노출하면 시간을 절약하고 새로운 것을 만들 수 있게 함으로써 사용자를 즐겁게 할 수 있다.

그래서, 이 세션에서, 우리는 "무엇이 행동을 훌륭하게 만드는가?"라는 질문에 답하려고 노력할 것이다.

그리고 그것을 통과하기 위해, 우리는 그것을 몇 가지 원칙으로 나뉜다.

훌륭한 행동은 유용하고, 모듈식이며, 다중 모드이며, 명확하고, 발견할 수 있다.

그럼 뛰어들자.

훌륭한 행동이 유용하다는 것은 분명하게 들리지만, 유용한 것을 디자인한다는 것은 실제로 무엇을 의미합니까?

바로 가기의 맥락에서, 유용한 작업은 사람들이 일반적으로 앱 내에서 수행하는 작업을 수행하는 것입니다.

당신의 행동은 작업을 완전히 수행해야 하며, 사용 사례에 필요하지 않는 한 앱을 포그라운드로 여는 것을 피해야 합니다.

가능하다면, 앱을 여는 대신 후속 질문을 해야 합니다.

알림 앱을 살펴봅시다.

알림 앱의 주요 기능 중 하나는 새로운 알림을 추가할 수 있는 기능입니다.

알림을 편집할 때, 다양한 속성을 구성할 수 있습니다.

알림을 추가하는 것은 알림 앱 내에서 할 수 있는 일이지만, 앱 외부에서 할 수 있는 것도 유용할 것이므로, 이것은 훌륭한 단축키 작업이 될 것입니다.

단축키에서 그 행동은 다음과 같습니다.

미리 알림을 설정할 때 선택할 수 있는 옵션은 여기에서 매개 변수로 구성할 수 있습니다.

단축키를 사용하여 새 알림을 추가할 때, 알림 앱을 열지 않고 즉시 추가해야 합니다.

하지만 내가 미리 알림 앱 내부의 특정 목록을 보여주는 다른 액션을 디자인하고 있다고 가정해 봅시다.

이 경우, 앱 열기는 행동의 목표를 달성하는 데 필요하므로, 이에 대한 조치를 취하는 것은 괜찮습니다.

하지만 새로운 알림을 추가하기 위한 조치는 사람들이 현재의 맥락에서 벗어나지 않고 그것을 사용할 수 있기 때문에 이것보다 조금 더 가치가 있다.

고려해야 할 한 가지는 누군가가 제목이 지정되지 않은 새 알림 추가 작업을 사용하는 경우와 같이 작업을 완료하기 위해 사용자로부터 더 많은 정보가 필요한 경우 어떻게 해야 하는지입니다.

이 경우, 바로 가기가 실행될 때, 그 행동은 "무엇을 상기시키고 싶니?"와 같은 후속 질문을 할 수 있다.

가능하다면, 최후의 수단이 되어야 하는 앱을 여는 대신 후속 질문을 함으로써 모호함을 처리해야 합니다.

어떤 행동이 유용할지 결정할 때 고려해야 할 관련 주제는 몰입이다.

당신의 행동은 사람들을 복잡한 경험에 몰입시키지 않고 작업을 수행해야 합니다.

제가 Apple Watch 앱을 위한 액션을 디자인하고 있다고 가정해 봅시다.

이 앱의 훌륭한 기능은 시계 페이스를 만들고 사용자 정의할 수 있는 기능입니다.

이것은 수많은 사용자 지정 UI 컨트롤과 라이브 시각적 미리보기가 있는 매우 복잡하고 시각적인 작업입니다.

궁극적으로, 그것은 매우 몰입감 있는 경험이므로, 아마도 훌륭한 단축키 액션을 만들지 못할 것이다.

반면에, 이미 설정된 시계 페이스 사이를 전환하는 것과 같은 간단한 작업은 너무 몰입적이지 않으며, 당신의 모든 관심 없이 사용할 수 있는 것입니다.

그래서 이 기능은 단축키 작업으로 정말 유용할 것이다.

이 작업을 통해 한 번의 탭으로 시계 페이스를 변경할 수 있는 단축키를 만들거나, 하루 종일 자동으로 변경하는 자동화를 만들 수 있습니다.

마지막으로, 가장 유용한 행동은 보통 가장 반복 가능한 행동이다.

어떤 행동을 구축할지 결정할 때, 반복적으로 유용하고 빠르고 자주 사용할 수 있는 행동의 우선순위를 정하세요.

예를 들어, 애플 뮤직 앱은 친구를 팔로우할 수 있다.

이것을 지름길 행동으로 폭로하는 것은 멋질 것이다.

예를 들어, 사람들은 한 번에 많은 친구를 팔로우하기 위해 다단계 단축키에서 그것을 사용할 수 있다.

하지만 친구를 팔로우하는 것을 실제로 음악을 재생하는 것과 같은 음악 앱의 다른 기능과 비교한다면, 친구를 팔로우하는 것은 사람들이 훨씬 덜 자주 하는 일이라는 것이 분명합니다.

시간이 허락한다면, 항상 더 많은 행동을 구축하는 것이 더 낫기 때문에, 둘 다 만드는 것을 고려할 수 있지만, 사람들이 가장 많이 사용할 기능에 대해 항상 건물 행동을 우선시해야 합니다.

따라서 유용한 작업은 앱을 실행하지 않고도 작업을 수행하고, 너무 몰입하지 않으며, 사람들이 빠르고 자주 사용할 수 있다는 점에서 반복할 수 있는 작업입니다.

훌륭한 행동을 설계하는 것에 대해 더 많은 것을 말씀드리기 위해, 저는 그것을 카메론에게 넘길 것입니다.

고마워, 아리!

제 이름은 카메론이고, 저는 시리와 단축키 팀의 디자이너입니다.

오늘, 저는 훌륭한 행동을 설계하는 더 많은 세부 사항을 안내하게 되어 정말 기쁩니다.

먼저, 모듈식 작업을 설계하는 방법에 대해 이야기하는 것으로 시작합시다.

예를 들어, 단축키에 대한 작업을 만드는 것에 대해 생각하고 있는 두 개의 별도의 To Do 앱이 있다고 상상해 보세요.

그들은 "Dog Do's"와 "Shortcats"라고 불린다.

그들은 둘 다 같은 목표를 가지고 있다: 사람들이 오래된 작업을 정리할 수 있는 지름길을 만드는 것이다.

Dog Do's는 "낡은 작업 정리"라는 행동을 만들 생각을 가지고 있는데, 이는 합리적으로 보인다.

결국, 그것은 모든 것을 하나로 한다.

하지만 정말로, 고양이 앱은 올바른 생각을 가지고 있다.

그들은 각각 개별적으로 한 가지 일을 하고 함께 훨씬 더 많은 것을 할 수 있는 일련의 행동을 만들었다.

그것이 우리의 정리 지름길에서 어떻게 작동하는지 살펴봅시다.

여기서 우리는 Dog Do's와 Shortcats가 둘 다 "낡은 작업 정리"라는 목표를 달성할 수 있다는 것을 볼 수 있다.

하지만 그들은 매우 다른 방식으로 그렇게 한다.

Dog Do's는 단일 액션을 가지고 있는 반면, Cat 앱은 Get Task 액션과 아카이브 액션을 결합하여 목표를 달성합니다.

첫 번째 작업인 "일주일 전에 생성된 작업 가져오기"는 오래된 작업을 찾고 두 번째 작업은 보관합니다.

반면에, Dog Do의 행동을 보면, 요약이 구체적이지 않기 때문에 이 행동이 정확히 무엇을 할 것인지는 불분명하다.

그래서 누군가가 고양이의 지름길을 실행하면 어떻게 될까요?

예를 들어, Siri를 사용하면 Siri는 사용자에게 작업을 보관할지 여부를 확인하도록 요청하고 어떤 작업이 보관될지에 대한 미리보기를 보여줍니다.

이 예제는 함께 작동하는 Get 및 Archive 작업을 사용하고 있습니다.

하지만 그 동작은 모듈식이기 때문에, 다른 조합이나 심지어 독립형으로도 유용할 수 있다.

여기서, 당신은 아카이브 작업이 그 자체로 꽤 유용하다는 것을 알 수 있습니다.

Get 작업 없이 사용될 때, 어떤 작업을 보관하고 싶은지 물어봐야 합니다.

Get 액션은 또한 이 경우와 같이 그 자체로 유용하며, 일주일 전에 내가 만든 모든 작업을 보여주는 데 사용됩니다.

이미 Shortcats의 행동은 다른 목적으로 재사용할 수 없는 Dog Do의 행동보다 훨씬 더 확장 가능하다는 것을 알 수 있습니다.

Siri 제안의 맥락에서, Dog Do의 행동은 모호하다; 그것이 탭되면 무엇을 할지 말하기 어렵다.

반면에, Shortcats는 작업을 얻기 위한 시간이라는 매개 변수를 포함하는 Get Tasks 액션을 기부했다.

이것은 누군가가 그 제안을 탭하면 무슨 일이 일어날지 매우 분명하게 해준다.

매개 변수를 포함하면 더 접근하기 좋고 더 나은 사용자 경험을 제공합니다.

바로 가기 편집기의 맥락에서, 다시 말하지만, 우리는 Dog Do의 행동이 모호하고 융통성이 없는 반면, Shortcats 작업의 매개 변수는 작업 검색 창을 1주에서 2주로 변경하도록 쉽게 사용자 정의할 수 있습니다.

하지만 그 이야기는 단지 당신의 앱의 행동에 관한 것이 아닙니다; 그것은 또한 단축키와 다른 앱의 행동에 내장된 행동에 관한 것입니다.

이러한 모든 유형의 작업을 함께 결합함으로써, 사람들은 앱으로 완전히 새로운 단축키와 사용 사례를 만들 수 있습니다.

당신은 행동이 어떻게 함께 작동하는지 궁금할 수도 있습니다.

바로 가기 편집기에서 어떻게 작동하는지 볼 수 있습니다.

각 작업에는 변수를 사용하여 다른 작업의 매개 변수로 전달될 수 있는 출력이 있습니다.

여기서, 아카이브 작업 작업은 "고양이 작업"이라는 변수를 사용하여 첫 번째 작업에서 지정된 기준을 충족하는 작업을 보관합니다.

그러나 Cat 앱은 더 나아가 알림, 첨부 파일, 상위 작업, 마감일, 메모 및 작업이 있는 목록과 같은 작업 가져오기 작업의 출력으로 추가 속성을 노출했습니다.

사람들이 다른 행동을 첨부할 때, 그들은 이러한 출력 속성을 사용하여 새로운 기능을 만들 수 있다.

예를 들어, 내장된 결과 표시 작업은 작업 가져오기 작업과 함께 사용하여 모든 이전 작업의 모든 메모를 표시할 수 있습니다.

또는 동일한 작업을 파일 저장 작업과 결합하여 이전 작업의 모든 첨부 파일을 iCloud에 저장할 수 있습니다.

출력을 조각으로 분리하고 라벨을 붙이면 단축키 편집기에서 변수를 편집할 때 나타납니다.

이것은 단축키 작성자에게 앱에서도 가능한 것을 넘어서는 새로운 사용 사례를 만드는 데 사용할 수 있는 강력한 도구를 제공합니다.

Shortcats 앱의 작업이나 파일 앱의 파일과 같이 앱과 관련된 개념에 대한 작업을 만들 때, 여기에 디자인을 고려해야 할 몇 가지 일반적인 작업이 있습니다.

행동을 만드세요.

그들은 새로운 작업과 같은 몇 가지 매개 변수가 주어지면 새로운 것을 추가한다.

새로운 것은 출력으로 전달된다.

이 작업은 또한 추가된 것을 요약한 사용자 지정 인터페이스와 대화를 포함해야 한다.

행동을 편집하세요. 그들은 당신의 앱에서 무언가를 바꿉니다.

새 항목은 출력으로 전달되어야 한다.

작업을 삭제하면 앱에서 지정된 항목이 삭제됩니다.

행동을 취하세요.

그들은 당신의 앱에서 특정 기준과 일치하는 것을 찾습니다.

발견된 모든 것은 출력으로 전달된다.

Get Action은 또한 발견된 것을 요약한 사용자 지정 인터페이스와 대화를 포함해야 합니다.

물건 행동.

그들은 누군가가 당신의 앱에서 특정 것을 선택할 수 있게 합니다, 예를 들어, Shortcats 앱의 작업.

이 작업은 다른 작업과 함께 사용하기 위해 물건을 보여주는 사용자 지정 인터페이스를 포함하고 물건을 출력으로 전달해야 합니다.

마지막으로, 열린 행동.

그들은 당신의 앱이 특정 것을 볼 수 있도록 포그라운드에서 열리게 합니다.

이제, 당신은 어떻게 그리고 왜 당신의 행동을 모듈식으로 설계해야 하는지 알고 있습니다.

기억하세요, 그것은 물건을 구성할 수 있게 만드는 동시에, 여전히 유용한 독립형으로 만들고, 매개 변수로 사용자 정의할 수 있게 만들고, 모든 행동에 대한 출력을 제공하는 것입니다.

멀티모달리티는 하나의 기능, 당신의 행동, 여러 가지 방식으로 그리고 맥락과 장치에 걸쳐 작동하도록 하는 것입니다.

단축키 동작을 디자인할 때, 이 세 가지 방법으로 사용할 수 있다는 것을 명심하세요: 탭이나 클릭으로 UI에서 단축키를 실행함으로써; Siri와 함께 음성으로 단축키를 실행함으로써; 그리고 단축키 편집기에서 동작을 구성할 때.

지름길로 고양이 작업 중 하나에 마감일을 추가하고 있다고 가정해 봅시다.

단축키를 탭하여 실행하면, 달력 선택기를 사용하여 날짜를 해결하기 위해 UI가 표시됩니다.

이 같은 단축키가 HomePod에서 실행되면, Siri는 누군가에게 "기한이 언제인가요?"와 같은 프롬프트로 질문을 할 것입니다.

그리고 그들은 "내일"이나 "다음 주 화요일"과 같은 말을 할 수도 있다.

누군가가 단축키를 실행하기 위해 탭했을 때 컴팩트 UI와 Siri에게 실행을 요청했을 때 HomePod에서 동일한 프롬프트가 어떻게 사용되는지 주목하세요.

프롬프트가 질문으로 표현되고 두 문맥 모두에서 적절하기 때문에 이것은 잘 작동한다.

대조적으로, Dog Do의 앱은 iPhone의 컴팩트한 UI에서 괜찮아 보이지만 Siri가 말할 때 말이 되지 않는 "Deadline:" 대화를 선택했다.

이 문제를 피하기 위해 항상 프롬프트를 질문으로 표현해야 합니다.

Siri가 말할 수 있는 훌륭한 대화를 디자인하는 데는 훨씬 더 많은 것이 있으며, 지난 몇 년 동안 이 주제에 대한 제 동료들의 이러한 대화를 확인하는 것이 좋습니다.

마지막으로, 당신의 행동에는 사람들이 그것을 빌딩 블록으로 사용할 수 있는 단축키 편집기의 인터페이스가 있습니다.

단축키 편집기에서 Siri가 묻는 것과 동일한 매개 변수는 저자가 단축키를 설정할 때 편집할 수 있는 파란색 사각형으로 표시됩니다.

이 날짜 매개 변수의 경우, 부동 팁은 입력된 텍스트에서 인식되는 날짜를 보여줍니다.

단축키를 실행하고 편집기에서 구성할 때 항상 모든 매개 변수를 사용할 수 있도록 해야 합니다.

행동의 매개 변수를 선택할 때, 각각에 대한 유형을 선택해야 합니다.

그 시스템은 양식 전반에 걸쳐 잘 작동할 많은 매개 변수 유형을 포함한다.

즉, 당신의 행동이 시스템 유형으로 잘 표현되지 않는 앱의 고유한 엔티티를 처리해야 하는 경우, 사용자 지정을 정의할 수 있습니다.

예를 들어 봅시다.

단축키에 내장된 재생 대상 설정 동작은 AirPods 또는 Bluetooth 스피커와 같은 장치의 오디오 경로를 설정합니다.

사람들이 선택할 수 있는 장치를 이해할 수 있도록, 단축키 편집기는 누군가가 매개 변수를 클릭할 때 해당 장치의 비주얼을 보여줍니다.

장치를 표현하기 위한 내장 매개 변수가 없기 때문에, 이 작업은 사용자 지정 매개 변수와 UI를 정의합니다.

우리는 이 UI를 "동적 열거"라고 부르며, 당신도 그것들을 만들 수 있습니다.

사람들이 매개 변수에 대한 값을 선택할 수 있는 두 가지 다른 시간이 있다: 구성과 해상도.

구성은 누군가가 바로 가기 편집기에서 당신의 작업을 설정할 때입니다.

해결책은 당신의 행동이 실행될 때 일어난다.

예를 들어, 왼쪽에는 누군가가 아카이브 작업 작업의 "Cat Task" 필드를 탭할 때 표시되는 동적 열거형입니다.

오른쪽에는 Siri가 누군가에게 어떤 작업을 보관하고 싶은지 물어볼 때 표시되는 시각적 목록이 있습니다.

이 두 UI 모두 아카이브 작업에서 동일한 매개 변수를 채우고 있으며, 구성 중에 왼쪽, 해상도 중에 오른쪽 매개 변수를 채웁니다.

그리고 둘 다 같은 매개 변수를 채우고 있기 때문에 둘 다 비슷한 방식으로 채워져야 한다.

이제 사람들이 당신의 행동의 매개 변수를 어떻게 채울 수 있는지 배웠으니, 사람들이 당신의 행동을 실행할 때 보여줄 수 있는 사용자 지정 인터페이스를 빠르게 살펴봅시다.

우리는 이것들을 "스니펫"이라고 부른다.

예를 들어, 우리가 스타벅스 주문 커피 액션을 실행할 때, 주문될 주문을 미리 볼 수 있는 스니펫이 표시됩니다.

삭제 또는 주문과 같은 영구적인 작업의 경우, 작업이 완료된 후 표시되는 것과 비교하여 작업이 완료되기 전에 다른 스니펫을 보여주는 것을 강력히 고려해야 합니다.

당신이 미리 보여주는 스니펫은 사람들이 그 행동이 무엇을 할 것인지 이해하는 데 도움이 될 것입니다.

이것은 그들이 그것을 통과하는 것의 지분을 이해하는 데 유용하다.

멀티모달 작업을 설계하는 데는 많은 것이 있지만, 프롬프트를 질문으로 표현하고, 적절한 매개 변수를 선택하고, 매개 변수를 채우기 위한 비주얼을 만들고, 훌륭한 스니펫을 디자인함으로써, 당신은 잘 될 것입니다.

이 모든 행동에 대한 이야기에도 불구하고, 우리는 실제로 행동이 편집자에서 어떻게 표현되는지 논의하지 않았다.

이 섹션은 모두 그것에 관한 것이다.

iOS 13에서 우리는 자연어를 사용하여 작업을 설명하는 새로운 시각적 형식인 매개 변수 요약의 개념을 도입했습니다.

올해, 우리는 매개 변수 요약에 초점을 맞추기 위해 단축키 편집기에서 작업의 모양을 재설계했습니다.

특히, 앱 이름은 작업에서 제거되었고, 앱 아이콘은 더 보기 컨트롤과 함께 인라인으로 통합되었다.

우리는 다단계 단축키에서 작업을 더 잘 보이게 하고 공간을 절약하여 한 번에 더 많은 작업을 화면에 맞출 수 있도록 이러한 변경을 했습니다.

사람들이 편집기 자체에서 당신의 행동에 대해 가질 경험을 고려하기 위해 행동을 설계할 때 중요합니다. 왜냐하면 단축키는 사람들에게 새로운 기능을 만들고 다른 사람들과 공유할 수 있는 능력을 제공하기 위해 존재하기 때문입니다.

모든 단축키는 오픈 소스이며, 누구나 내부를 들여다보고 어떻게 작동하는지 볼 수 있다는 것을 기억하세요.

작업 자체의 세부 사항에 들어가기 전에, 매개 변수 요약이 작업 제목과 다르다는 것을 기억하십시오.

당신의 액션 타이틀은 당신의 액션을 간략하게 식별하기 위해 단축키 액션 목록에서 사용됩니다.

액션 제목은 매개 변수 요약과 같은 동사로 시작하고, 메시지 보내기 액션과 함께 가능한 한 많은 단어를 공유하는 것이 중요합니다.

다른 예를 살펴봅시다.

여기 Awebreath라고 불리는 아침 호흡 운동을 돕기 위한 새로운 앱이 있습니다.

이 앱은 숨을 쉬고 싶은 길이를 선택하고 선택적으로 음악을 재생할 수 있는 간단하고 집중된 UI를 가지고 있습니다.

작업을 설계할 때, 매개 변수 요약부터 시작하세요.

요약은 가장 중요한 매개 변수를 포함하여 수행될 작업을 간결하게 설명합니다.

요약은 또한 동사로 시작해야 하며 문장처럼 쓰여져야 하지만 마침표는 없어야 한다.

Awebreath 액션에는 숨 쉬는 동안 음악을 재생할 수 있는 매개 변수가 포함되어 있지만, 필요하지 않으므로 요약에 속하지 않습니다.

세미콜론, 쉼표, 마침표와 같은 구두점도 매개 변수 요약에 있어서는 안 됩니다.

사람들은 여전히 쉐브론을 탭하여 확장할 수 있는 옵션 UI에서 재생할 음악인 이 매개 변수를 사용할 수 있습니다.

필수 매개 변수가 비어 있으면, 해결되면, 당신의 행동은 값을 요청해야 합니다.

행동에 대한 최고의 경험에 대한 강한 성향이 있다면, 매개 변수에 대한 기본값을 제공하는 것을 고려해 보세요.

만약 당신이 이것을 한다면, 당신의 행동은 그것이 실행될 때 질문하는 것을 건너뛸 수 있습니다.

이 예에서, Awebreath 앱은 15분의 기본 호흡 시간을 제공한다.

매개 변수가 필요하거나 기본값이 있는지 여부에 관계없이, 사람들은 항상 "매번 물어보세요"라는 특수 변수를 사용하여 매개 변수를 질문으로 만들 수 있습니다.

이것이 사용될 때, 바로 가기는 실행될 때 매개 변수 값을 묻는 메시지를 표시합니다.

이러한 이유로, 해당되는 경우 모든 작업 매개 변수에 대해 항상 프롬프트 및/또는 시각적 목록을 포함해야 합니다.

매개 변수 요약을 디자인할 때, 동사로 시작하여 기본값을 제공하는 것을 고려하고, 누군가가 Ask Each Time을 사용하는 경우 모든 매개 변수에 대한 메시지가 표시될 수 있다는 것을 기억하고, 모든 선택적 매개 변수를 옵션 UI에 배치하십시오.

마지막으로, 어떻게 당신의 행동을 발견할 수 있게 하고 사람들 앞에 설 수 있는지 이해하는 것이 중요합니다.

iOS 15와 macOS 몬테레이에서, 우리는 당신의 행동을 포함하는 다단계 단축키를 쉽게 공유할 수 있는 단축키에 대한 새로운 공유 방법을 도입했습니다. 업데이트된 다운로드 UI는 또한 단축키를 실행할 수 있는 위치를 표시하므로, 사람들은 무엇을 기대해야 하는지 알 수 있습니다. 앱의 제작자로서, 웹사이트, 소셜 미디어 채널 또는 앱의 도움말 섹션에서 작업을 사용하는 다단계 단축키에 대한 링크를 배치하여 사람들에게 작업을 함께 사용하는 방법에 대한 아이디어를 제공할 수 있습니다. 또한, 누군가가 "Siri에 추가"를 탭하면, 제안된 호출 문구를 사용하여 단축키가 즉시 추가됩니다. 이 새로운 UI는 제안된 호출 문구를 강조하므로, 사람들은 단축키를 실행하기 위해 Siri에게 무슨 말을 해야 할지 알 수 있습니다. 그것은 또한 그들이 당신의 지름길을 추가한 직후에 오디션을 보도록 장려합니다. 제안된 호출 문구를 제공하지 않으면, 누군가가 "Siri에 추가"를 탭한 후 바로 가기가 추가되지 않습니다. 대신, 그들은 경험이 원활하지 않고 누군가가 당신의 단축키를 성공적으로 추가하고 사용할 가능성을 줄이는 그들만의 단축키 이름을 제공하도록 요청받을 것이다.

그것은 바로 가기를 공유하고 사람들 앞에서 당신의 행동을 취하는 것에 대한 변화에 대한 마무리입니다.

그리고 그것으로, 우리는 단축키, Siri 및 제안에 대한 작업을 설계하는 방법에 대해 논의했습니다.

훌륭한 행동은 유용하고, 모듈식이며, 복합적이고, 명확하고, 발견할 수 있다.

행동을 설계하는 데 행운을 빌어.

우리는 당신이 무엇을 만들고 그것이 지름길의 세계에 어떻게 기여하는지 빨리 보고 싶습니다. 멋진 WWDC 되세요.

[쾌활한 음악].