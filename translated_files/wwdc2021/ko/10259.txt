10259

♪ ♪

안녕.

제 이름은 Kasia Wawer입니다.

저는 키보드 UI 팀의 엔지니어이며, 오늘은 키보드 레이아웃의 멋진 세계에 대한 당신의 가이드가 될 것입니다.

저는 오늘 프레임 기반 과거에서 자동 레이아웃 미래로 키보드를 가져오는 것에 대해 당신과 이야기하게 되어 매우 기쁩니다.

우리는 새로운 가이드에 대해 이야기하면서 투어를 시작할 것이다.

그런 다음, 우리는 키보드를 레이아웃에 더 완벽하게 통합하기 위해 할 수 있는 몇 가지 새로운 것들을 살펴볼 것입니다.

그리고 마지막으로, 우리는 키보드가 실제로 무엇인지에 대해 이야기할 것입니다. 철학적으로 말하자면, 고려해야 할 키보드의 유형, 그리고 당신이 바로 생각하지 않을 수도 있는 몇 가지 경우에 대해 이야기할 것입니다.

그래서, 우리 투어를 시작하자.

많은 것들과 마찬가지로, 이것은 고대 과거에서 시작된다.

이전에 앱에서 키보드로 작업한 적이 있다면, 태곳적부터 처리된 방법은 알림을 등록하고, 알림의 정보에서 적절한 오프셋과 애니메이션을 도출하고, 수학을 하고, 마지막으로 레이아웃을 조정하는 것입니다.

이제, 알림이 남아 있다.

우리는 그들을 비하하는 것이 아니다.

관심이 있다면, 2017년부터 "더 나은 텍스트 입력 경험을 위한 열쇠"에서 그들에 대해 더 많이 배울 수 있습니다.

알림이 사용자 지정 가이드와 함께 어떻게 사용될 수 있는지에 대한 간단한 예를 살펴봅시다.

이제, 우리가 교체하려고 하기 때문에 이 코드를 복사하지 마세요.

하지만 iOS 15 이전에 키보드를 다루는 방법은 다음과 같습니다.

알림에 응답하기 위해 사용자 지정 가이드와 앵커를 만들 수 있습니다.

그런 다음, 당신은 적절한 알림을 위해 등록할 것입니다.

보통, 적어도 willShow와 willHide, 하지만 가끔 프레임 변경 등.

그런 다음, 키보드가 화면을 떠나는 경우, 알림에서 프레임 정보를 받아 자신의 견해와 안전 영역 가이드를 조정하고 있는지 확인하여 상기 알림에 응답할 것입니다.

그리고 알림에서 애니메이션 정보를 얻고, 마지막으로 가이드를 일치하도록 변경할 수 있습니다.

이제, 그것은 많지 않지만, 빠르게 복잡해질 수 있다.

오늘, 저는 자동 레이아웃 컬렉션에 새롭게 추가된 UI 키보드 레이아웃 가이드를 발표하게 되어 기쁩니다.

이제, 우리가 이것에 뛰어들 때 당신의 흥분을 억제하려고 노력하세요.

키보드 레이아웃 가이드는 iOS 15에서 완전히 새로운 것이다.

이건 레이아웃 가이드야.

기존 레이아웃의 뷰와 가이드를 제한할 수 있습니다.

레이아웃 가이드에 익숙하지 않다면, 레이아웃 가이드는 뷰를 사용하지 않고 레이아웃의 공간을 나타내는 방법입니다.

그것은 전망과 같은 닻을 가지고 있다.

키보드 레이아웃 가이드는 레이아웃이 설명할 수 있도록 앱에서 키보드가 차지하는 공간을 나타냅니다.

그리고 그게 다야!

대부분.

이것을 대신 사용하기 위해 방금 본 코드를 업데이트하는 것에 대해 이야기해 봅시다.

여기 알림 코드가 있습니다.

아직 복사하지 말고, 녹색 체크 표시를 기다리세요.

그래서, 이제 당신은 당신이 추적하고 있던 앵커를 제거할 수 있습니다.

그리고 레이아웃 가이드에서 뷰의 keyboardLayoutGuide로 변경하세요.

그리고 우리는 더 이상 알림을 등록할 필요가 없습니다.

그리고 우리도 그들에게 응답할 필요가 없다.

그리고 그게 다야.

그 모든 코드는 이 한 줄로 귀결된다.

그것을 실제로 볼 준비가 되었나요?

알림 코드를 사용할 때 키보드를 불러올 때의 모습은 다음과 같습니다.

그리고 가이드를 사용하여 그것을 꺼내는 것은 다음과 같습니다.

당신은 그들의 현지화를 제외하고, 그것들이 사실상 동일해 보였다는 것을 눈치챘을지 모르지만, 그게 요점입니다.

당신은 거의 그렇게 많이 할 필요가 없으며, 같은 결과를 얻을 수 있습니다.

그래서, 가이드 업데이트에 대해 이야기해 봅시다.

그것은 UI 뷰의 속성이다.

그리고, 대부분의 경우, 가이드의 topAnchor를 사용하여 업데이트할 수 있습니다.

이 가이드는 불러올리기 및 무시와 같은 키보드 애니메이션과 일치하며, 높이 변화도 따른다.

왜냐하면 때로는 키보드가 더 크고, 때로는 더 짧기 때문이다.

하지만 가이드는 어떤 크기에든 맞게 적응할 것이다.

그리고 키보드가 도킹되지 않을 때, 기본적으로 가이드는 화면 하단으로 떨어지고 창의 너비가 되며, 상단 앵커에 묶인 모든 것이 뒤따를 것입니다.

그것은 안전 지역 삽입을 설명하므로, 더 이상 그것에 대해 걱정할 필요가 없습니다.

기본적인 용도를 위해, 그것이 아마도 당신이 알아야 할 전부일 것입니다.

하지만 이제 우리는 재미있는 것들에 대해 이야기할 수 있어.

왜 우리는 일반 레이아웃 가이드가 아닌 새로운 수업을 사용하기로 선택했나요?

음, 우리는 당신이 키보드로 할 수 있었던 것보다 더 많은 것을 할 수 있기를 바랐습니다.

우리의 다음 정거장은 당신의 앱에 완전한 키보드 통합입니다.

내가 왜 "통합"이라고 말해?

음, 저는 종종 사람들이 키보드에 대해 피해야 할 것 또는 레이아웃과 싸우는 것에 대해 이야기하는 것을 들었지만, 키보드는 앱의 일부입니다.

UI 키보드 레이아웃 가이드의 주요 동기 중 하나는 개발자에게 사용자가 텍스트를 입력할 수 있는 다양한 방법에 응답할 수 있는 기능을 제공하고, 이전에는 할 수 없었던 방식으로 키보드를 레이아웃의 일부로 완전히 생각할 수 있도록 하는 것입니다.

저는 당신이 이 새로운 기능을 어떻게 활용하는지 보게 되어 정말 기쁩니다.

그래서, 우리의 다음 정거장, 키보드 레이아웃 가이드가 단순한 레이아웃 가이드가 아닌 것은 무엇인가요?

UI 키보드 레이아웃 가이드를 사용하면 새로운 속성을 사용하여 모든 화신에서 키보드를 완전히 따를 수 있습니다: followsUndockedKeyboard.

기본적으로 거짓이지만, true로 설정하면, 가이드는 도킹 해제되거나 떠 있을 때 키보드를 따라갈 것이며, 키보드가 어디에 있든 레이아웃이 어떻게 반응하는지에 대한 많은 제어를 제공합니다.

더 이상 자동으로 바닥으로 떨어지지 마세요.

도킹을 해제할 때 키보드 알림 숨기기를 듣지 않습니다.

레이아웃 가이드는 키보드가 있는 곳이다.

하지만 그 정보를 갖는 것은 레이아웃이 다양한 유형의 키보드에 어떻게 반응하는지에 대해 훨씬 더 의식해야 한다는 것을 의미합니다.

그래서, UI 키보드 레이아웃 가이드는 또 다른 새로운 레이아웃 가이드의 하위 클래스입니다: UI 추적 레이아웃 가이드.

우리는 그것을 추적 레이아웃 가이드라고 부릅니다. 왜냐하면 그것은 화면을 이동할 때 변경하고 싶은 제약 조건을 추적하기 때문입니다.

특정 가장자리 근처에 있을 때 활성화되고, 떠날 때 비활성화하고, 특히 가장자리에서 떨어져 있을 때 활성화되고, 근처에 있을 때 비활성화되는 배열을 제공할 수 있습니다.

이것으로 할 수 있는 일과 그것을 달성하는 데 필요한 코드의 예를 살펴봅시다.

여기 테스트 앱이 있습니다.

나는 텍스트 필드와 키보드에 앉을 수 있는 몇 가지 컨트롤이 있다.

하지만, 그것이 화면 상단에 가까워지면, 나는 그들이 화면 밖에서 벗어나는 것을 피하기 위해 하단으로 떨어지기를 바란다.

그리고 키보드가 좌우로 움직일 때, 나는 나머지 UI가 조금 더 많은 공간을 제공하기 위해 조금 이동하기를 원한다.

그래서, 이 모든 것이 어떻게 성취되었나요?

우리는 여기서 몇 가지 코드를 볼 거야.

다음 슬라이드에서 editView는 텍스트 필드와 컨트롤이 있는 보기이며, imageView는 이미지 보기입니다.

좋아요, 여기서 식별자를 사용해야 하며, 샘플 코드에서 볼 수 있지만, 이것은 슬라이드에 더 잘 맞습니다.

수직 축에서 일어나는 일부터 시작합시다.

먼저, 우리는 editView의 하단을 키보드 레이아웃 가이드의 상단에 연결하는 배열을 정의합니다.

그런 다음, 우리는 가이드가 상단에서 멀리 떨어져 있을 때만 활성화되도록 설정하여 근처에 있을 때 비활성화됩니다.

그런 다음, 우리는 키보드가 뷰의 상단에 가까워질 때 원하는 별도의 제약 조건을 정의합니다.

그래서, 키보드 레이아웃 가이드의 상단 대신, 우리는 안전 영역의 하단을 사용합니다.

여기 도움이 되는 빠른 영상이 있습니다.

여기 가이드와 editView가 있습니다.

그것은 현재 정상에서 떨어져 있으므로, awayFromTopConstraints가 활성화되어 있다.

하지만, 가이드를 상단에 더 가까이 이동하면, awayFrom 제약이 비활성화되고, nearTopConstraints가 활성화되어 보기의 하단으로 떨어집니다.

우리가 정상에서 돌아왔을 때, 그 반대가 일어난다.

이제, 수평 움직임을 살펴봅시다.

키보드가 앞 가장자리와 후행 가장자리 모두에서 떨어져 있을 때, 나는 editView가 키보드의 중앙에 있기를 원한다.

나는 imageView도 뷰의 중심에 있기를 원한다.

그래서, 나는 그 제약을 정의하고 내가 선행과 후행 모두에서 떨어져 있을 때 활성화되도록 설정한다.

이제, 우리가 가장자리에 접근할 때 무슨 일이 일어날지 설정해 봅시다.

나는 우리가 후행 가장자리에 있을 때 editView가 후행으로 이동하고, 선두로 이어지기를 원한다.

그래서, 먼저, 그걸 처리하자.

나는 imageView가 키보드의 길에서 조금 벗어나기를 원하기 때문에, 우리가 어느 쪽 가장자리 근처에 있을 때, 나는 그것을 키보드의 중앙에서 반대편으로 이동하고, 키보드가 후행 가장자리에 있을 때 선두로 이어지고, 그 반대의 경우도 마찬가지입니다.

그런 다음, 나는 적절한 가장자리 근처에 있을 때 이것들을 활성화하도록 설정했다.

그들은 키보드가 그 지역으로 교차할 때 활성화되고, 떠날 때 비활성화될 것이다.

그리고 그게 다야!

당신만의 레이아웃에 초고급 키보드 통합.

그게 어떻게 생겼는지 한 번 더 살펴봅시다.

내 editView가 있어.

그것은 떠다니는 키보드와 함께 유지되며, 우리가 위쪽으로 이동할 때, 그것은 아래쪽으로 떨어진다.

그리고 우리가 좌우로 움직일 때, 우리가 방금 이야기한 조정이 일어난다.

꽤 멋져!

다음으로, 키보드에서 "near"와 "awayFrom"이 무엇을 의미하는지 이야기해 봅시다.

도킹된 키보드는 바닥 근처에 있고 다른 가장자리에서 멀리 떨어져 있는 것으로 여겨진다.

도킹되지 않고 분할된 키보드는 모든 가장자리에서 멀리 떨어져 있거나, 상단 가장자리에 가까워질 수 있다.

플로팅 키보드일 때, 그것은 어떤 가장자리에서 가깝거나 멀리 있을 수 있으며, 동시에 두 개의 인접한 가장자리 근처에 있을 수도 있습니다.

이것은 당신이 알아야 할 잠재적으로 흥미로운 갈등으로 이어질 수 있습니다.

이제, 이 모든 것은 followsUndockedKeyboard를 true로 설정할 때만 적용되며, 나머지 이야기에서는 그것이 우리가 할 가정입니다.

알았어. 마지막 스트레칭: 완전한 키보드 통합을 위한 고려 사항.

키보드는 키보드가 아닌 키보드이다.

도킹되지 않은 키보드를 따르기로 선택하면, 생각해야 할 몇 가지 추가 사항이 있습니다.

그래서, 레이아웃을 디자인할 때 어떤 종류의 것들에 주의를 기울여야 하나요?

떠다니는 키보드는 모든 것에서 멀리 떨어져 있을 수 있다는 것을 항상 기억하세요.

모든 가장자리에서 멀리 떨어져 있다면 올바르게 배치할 수 있는 충분한 정보가 있나요?

또한, 키보드가 하단 가장자리에서 떨어져 있거나 상단 가장자리 근처에 있을 때 어떤 일이 일어나야 하나요?

당신은 키보드의 topAnchor에 묶여 있는 것에도 조심하고 싶습니다.

왜냐하면 거기까지 올라갈 수 있으니까!

그러니까, 조심해.

이를 해결하는 방법은 키보드가 떨어져 있을 때 제약을 설정하는 것입니다. 하단 가장자리에서 키보드의 상단 앵커에서 safeAreaLayoutGuide의 하단으로 이동합니다.

사용자는 또한 언제든지 키보드를 이동할 수 있으므로, 특정 위치에 있다고 믿을 수 없습니다.

너도 그걸 명심하고 싶을 거야.

여기 희귀한 표본이 있습니다: 분할 키보드.

쪼개지고 도킹되지 않은 키보드는 상단에 너무 가까워질 때까지 모든 가장자리에서 멀리 떨어져 있다.

도킹된 키보드와 마찬가지로, 그것은 항상 선행과 후행에서 멀리 떨어져 있다.

새로운 것에 대해 얘기하자.

올해 카메라를 사용하여 앱에 텍스트를 가져올 수 있는 새로운 방법이 있습니다.

그것은 여전히 키보드이기 때문에, 여전히 가이드를 사용할 수 있을 것이다.

그것은 일반 도킹 키보드와 같지만, 거의 전체 화면이 될 수 있는 몇 안 되는 키보드 중 하나이다.

올해 카메라를 통한 텍스트 입력을 활용하는 방법에 대해 자세히 알아보려면, "앱에서 키보드 입력을 위해 카메라를 사용하세요"를 조정하세요.

새로운 것을 계속하면서, 하드웨어 키보드가 부착되어 있을 때는 어떨까요?

음, 올해 새로운, 우리는 더 이상 항상 전체 너비가 아닌 적응형 단축키 바를 가지고 있습니다.

사용 중인 언어와 바에 있는 버튼 수에 따라 너비가 변경됩니다.

이전에는 항상 화면의 전체 너비였지만, 지금은 도킹되지 않은 키보드를 따르는 경우, 실제로 막대의 실제 선행 및 후행 가장자리를 사용할 수 있습니다.

그래서, 여기 가장자리에 대한 이야기는 뭐야?

이것은 항상 바닥 근처에 있으며, 정상적인 위치에서는 다른 세 가장자리에서 떨어져 있다.

하지만 그건 무너질 수 있어!

만약 당신이 그것을 무너뜨리면, 그것은 또한 앞쪽 또는 뒤쪽 가장자리 근처에 있을 수 있다.

그건 그렇고, 이것은 당신이 키보드의 widthAnchor를 사용하는 것에 대해 조심하고 싶은 몇 가지 이유 중 하나입니다.

그것은 매우 작을 수도 있고, 화면의 전체 너비일 수도 있다.

이제, 투어의 가장 재미있는 부분에 들어가 봅시다: 만약 당신이 화면의 유일한 앱이 아니고, 도킹되지 않은 키보드를 따르고 있다면 어떨까요?

먼저, 키보드가 앱 공간을 떠날 수 있다는 것을 기억하세요.

그런 일이 발생하면, 우리는 그것을 마치 해고된 것처럼 취급할 것이다.

둘째, 앱이 가장 좁을 때, 상단과 하단 가장자리가 재생되지만, 키보드가 앱 위에 있든 없든 선행과 후행은 멀리 떨어져 있습니다.

또한, 당신이 화면에 있는 유일한 것이 아니라면, 가이드는 키보드의 어떤 부분이 앱 창 위에 있는지에 맞게 크기가 조정됩니다.

내 말이 무슨 뜻인지 보여주기 위해 몇 가지 비주얼을 살펴봅시다.

이 모든 것은 followsUndockedKeyboard를 true로 설정한 경우에만 적용됩니다.

그렇지 않다면, 가이드는 화면 하단, 창의 전체 너비에 있습니다.

당신이 전체 화면이고 키보드가 떠 있고 중간에 있을 때, 당신은 모든 것에서 멀리 떨어져 있습니다.

당신의 모든 awayFrom 제약이 활성화되었고, 당신의 모든 근접 제약이 비활성화되었습니다.

다른 앱이 화면에 있을 때, 당신이 더 넓은 앱이라면, 키보드가 모든 것에서 벗어날 수 있을 만큼 충분히 넓습니다.

하지만 수평 가장자리 근처에 있으려면 덜 움직여야 한다.

이것은 초상화에 있는 것과도 비슷하다.

하지만, 절반 화면에서, 같은 지점의 키보드는 이제 당신의 앞 가장자리 근처에 있으며, 가이드는 앱 위에 있는 키보드의 부분과만 일치하도록 크기가 조정되었습니다.

당신이 좁은 앱일 때, 가이드는 항상 iPhone이나 도킹된 키보드와 같은 수평 가장자리에서 멀리 떨어져 있는 것으로 간주되지만, 여전히 상단 가장자리 근처에 있을 수 있습니다.

그리고 다시 말하지만, 가이드는 앱의 부분만 설명하도록 크기가 조정되었다는 것을 알아두세요.

그리고 키보드를 도킹하고 다시 풀 사이즈가 되면, 선두, 후행 및 상단에서 멀리 떨어져 있습니다.

그리고 다시 한 번, 레이아웃 가이드가 다시 한 번 당신의 앱에 맞는 크기라는 것을 주목하세요.

만약 당신이 슬라이드 오버 앱이라면, 그것도 크기를 조정할 것입니다.

이전 예제와 데모 코드로, 이것은 모두 잘 처리되어야 한다.

당신은 이 시나리오들 중 하나에 있을 수 있다는 것을 명심해야 합니다.

이제 앱을 키보드 통합의 다음 단계로 끌어올릴 준비가 되어 있어야 합니다.

그래서, 키보드 레이아웃 가이드를 사용하세요.

앱이 할 수 있다면, UI 추적 레이아웃 가이드의 고급 기능을 활용하세요.

그리고, 가장 중요한 것은, 키보드 레이아웃을 싸우거나 피하는 것으로 생각하고 있다면, 대신 레이아웃에 통합하는 것에 대해 생각하기 시작하세요.

그리고 만약 당신이 이미 그런 식으로 생각하고 있었다면, 이제 당신은 당신의 완전한 비전을 실현할 수 있는 더 많은 도구를 가지고 있습니다.

그것은 우리를 여행의 끝으로 이끈다.

나가기 전에 모든 개인 물품을 가지고 있는지 확인하고, 선물 가게를 방문하는 것을 잊지 말고, 멋진 WWDC를 보내세요.

[에테르 타악기 음악].