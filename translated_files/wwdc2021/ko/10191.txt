10191

♪ 베이스 음악 연주 ♪

♪

막스 스테파노프: 안녕하세요! 제 이름은 맥스이고, 저는 tvOS 팀의 소프트웨어 엔지니어입니다.

오늘, Apple TV의 미디어 재생 UI의 완전히 새로운 모습과 개발자로서 사용할 수 있는 이 새로운 기능을 최대한 활용하기 위해 할 수 있는 일을 공유하게 되어 기쁩니다.

이 세션에서, 우리는 tvOS 15의 표준 재생 UI에 대한 개선 사항을 개관할 것입니다; 우리는 새로운 API를 소개할 것입니다; 그리고 마지막으로, 우리는 당신이 당신의 애플리케이션에서 훌륭한 재생 경험을 만드는 데 도움이 될 모범 사례에 대해 논의할 것입니다.

시작하자.

AVPlayerViewController는 Apple TV 사용자에게 표준 미디어 재생을 제공합니다.

새로운 클릭 휠 리모컨뿐만 아니라 건너뛰기, 스캔, 스크러빙 기능, Siri 명령, 전면 지원 등을 포함한 다양한 리모컨을 지원합니다.

사용자가 Apple TV의 자사 응용 프로그램과 유사한 경험을 할 수 있도록 응용 프로그램에서 AVPlayerViewController를 사용하는 것이 좋습니다.

아직 AVPlayerViewController를 사용하지 않았거나 재교육의 혜택을 받을 수 있다면, AVPlayerViewController를 애플리케이션에 통합하는 방법에 대해 더 자세히 설명하는 WWDC 2019의 "AVKit으로 직관적인 미디어 재생 제공"을 시청하는 것이 좋습니다.

이제, 올해 우리가 가져올 개선 사항을 살펴봅시다.

tvOS 15에서, 우리는 시청자들이 보다 일관되고 인터랙티브한 경험을 통해 순간에 머물 수 있도록 표준 재생 UI를 완전히 재설계했습니다.

전송 바에 관련 컨트롤과 옵션을 추가함으로써, 우리는 자막을 켜거나 오디오 언어를 변경하는 것과 같은 일반적인 재생 작업의 발견 가능성을 개선했습니다.

운송 바 컨트롤은 본질적으로 보편적일 뿐만 아니라 애플리케이션에 따라 다를 수 있다.

그리고 새로운 콘텐츠 탭을 통해 사용자는 이제 정보 또는 챕터와 같은 지원 정보에 쉽게 액세스하여 인라인 탐색에 액세스하고 검색할 수 있습니다.

콘텐츠 탭은 또한 관련 콘텐츠를 표시하는 데 사용될 수 있습니다.

이 예에서, 저는 작년 WWDC의 세션을 보고 있으며 플레이어를 떠나지 않고도 세션에 대한 콘텐츠 추천을 찾아볼 수 있습니다.

마지막으로, 우리는 재생 중에 사용자가 사용할 수 있는 상황별 작업을 추가했습니다.

이러한 행동은 Skip Intro 또는 Recap과 같은 완벽한 기능을 가지고 있다.

Apple TV에서 새로운 재생 UI를 활용하려면, 애플리케이션이 tvOS 15 SDK와 연결되어야 합니다.

우리는 App Store에서 사용자가 사용할 수 있는 기존 애플리케이션과의 호환성을 유지하기 위해 이 접근 방식을 취했습니다.

이러한 응용 프로그램은 기본 tvOS 14 재생 UI와 기능을 얻을 것이다.

지금쯤이면, 당신은 아마도 미디어 애플리케이션에서 이 새로운 기능 중 일부를 채택하는 방법을 배우게 되어 기뻤을 것입니다.

그래서 tvOS 15의 새로운 API에 대해 알아봅시다...

...타이틀 뷰로 시작합니다.

전송 바 바로 위에 표시된 새로운 타이틀 뷰는 사용자가 무엇을 보고 있는지 즉시 알 수 있도록 도와줍니다.

타이틀 뷰를 제시하기 위해, 우리는 현재 AVPlayerItem의 메타데이터에서 commonIdentifierTitle과 iTunesMetadataTrackSubtitle의 값을 사용할 것입니다.

미디어 자산에 임베디드 메타데이터가 포함되어 있지 않거나 보강해야 하는 경우, AVPlayerItem의 externalMetadata 속성을 사용하세요.

라이브 스트리밍 콘텐츠를 재생할 때, 타이틀 보기는 또한 시청자에게 콘텐츠 상태를 나타내는 배지를 표시합니다.

마지막으로, 애플리케이션이 타이틀 뷰를 표시하지 않는 것을 선호한다면, 새 속성 transportBarIncludesTitleView의 값을 false로 설정하여 억제하십시오.

다음으로, 운송 바 컨트롤을 살펴봅시다.

트랜스포트 바 컨트롤은 트랜스포트 바 스크러버 바로 위에 있는 UI 요소 모음입니다.

이러한 컨트롤은 사용자가 애플리케이션이 제공할 수 있는 모든 재생 옵션을 빠르고 직관적으로 찾을 수 있도록 도와줍니다.

자막, 오디오 언어 및 Picture in Picture와 같은 일부 표준 컨트롤은 시스템에서 제공됩니다.

개발자로서, AVPlayerViewController의 새로운 속성인 transportBarCustomMenuItems를 사용하여 전송 바 컨트롤 목록을 확장할 수 있습니다.

그것은 UIAction과 UIMenu 클래스의 인스턴스를 지원합니다.

전송 바 컨트롤을 사용하는 예를 살펴봅시다.

여기서, 저는 UIAction을 사용하여 사용자가 현재 미디어 항목을 즐겨찾기에 추가할 수 있도록 하고 있습니다.

또한 UIMenu 클래스를 사용하여 고급 작업 배열을 만들고 메뉴에 표시할 수 있습니다.

AVPlayerViewController가 제공하는 UIMenus는 displayInline 옵션을 사용하여 최대 한 단계의 중첩을 지원합니다.

UIMenu 및 UIAction 클래스 사용에 대한 자세한 내용은 WWDC 2019에서 "iOS 13용 UI 현대화"를 시청하는 것이 좋습니다.

이제, 콘텐츠 탭에 대해 이야기해 봅시다.

콘텐츠 탭을 사용하면 애플리케이션이 더 많은 콘텐츠에 대한 보완적인 정보나 권장 사항을 표시할 수 있습니다.

AVPlayerViewController는 미디어 자산에 포함된 메타데이터가 포함되어 있거나 AVPlayerItem으로 외부 메타데이터를 보완할 때 정보 탭을 표시합니다.

또한, AVPlayerItem으로 navigationMarkerGroups를 제공할 때, AVPlayerViewController는 챕터 탭을 표시합니다.

애플리케이션은 AVPlayerViewController의 새로운 속성인 customInfoViewControllers를 사용하여 추가 콘텐츠 탭을 표시할 수 있습니다.

그리고 tvOS 15에서, 우리는 여러 뷰 컨트롤러를 허용하는 새로운 속성을 위해 customInfoViewController 속성을 더 이상 사용하지 않습니다.

콘텐츠 탭의 크기를 적절하게 지정하려면, preferredContentSize 속성을 사용하여 높이를 지정하거나 적절한 자동 레이아웃 제약을 정의하십시오.

콘텐츠 탭을 표시하는 데 필요한 높이를 계산할 때, 시스템은 모든 뷰 컨트롤러의 크기를 가장 높은 콘텐츠 탭의 높이로 조정할 것입니다.

여러 콘텐츠 탭으로 작업할 때, 사용자 지정 뷰 컨트롤러의 크기를 일관되게 조정하거나 레이아웃이 런타임에 예상되는지 확인하십시오.

그리고 사용자 지정 보기 컨트롤러에서 제목 속성을 설정하는 것을 잊지 마세요.

우리는 그것을 콘텐츠 탭의 제목에 사용할 것이다.

멋진 콘텐츠 탭을 만들 수 있도록, 올해는 TVUIKit 프레임워크에 새로운 콘텐츠 구성을 소개합니다: TVMediaItemContent 구성 및 TVMonogramContent 구성.

이러한 구성이 코드에서 어떻게 사용될 수 있는지에 대한 몇 가지 예를 살펴봅시다.

예를 들어, 16:9 종횡비로 미디어 항목 목록을 표시하려면 TVMediaItem ContentConfiguration의 넓은 셀을 사용할 수 있습니다.

이미지, 제목 또는 보조 텍스트와 같은 속성을 설정하세요.

배지와 재생 진행 상황을 표시하도록 구성할 수도 있습니다.

완료되면, 콘텐츠 구성을 컬렉션 보기 셀에 할당하세요.

그렇게 쉬워.

현재 미디어 콘텐츠와 관련된 사람이나 캐릭터를 표시하려면 TVMonogramContentConfiguration을 사용하세요.

콘텐츠 구성 사용에 대한 자세한 내용은 WWDC 2020의 "현대 셀 구성"을 시청하는 것이 좋습니다.

마지막으로, 상황에 맞는 행동.

문맥 동작을 사용하면 응용 프로그램이 재생 중에 관련 컨트롤을 표시할 수 있습니다.

상황에 맞는 동작을 표시하려면, AVPlayerViewController의 새로운 contextualActions 속성을 사용하고 하나 이상의 UIActions를 제공하십시오.

일반적으로, 당신의 애플리케이션은 콘텐츠의 관련 섹션에서 문맥 행동을 제시하기를 원할 것입니다.

이를 달성하기 위해, 주기적 또는 경계 시간 관찰자를 추가하여 AVPlayer 타이밍을 관찰하십시오.

문맥 작업을 숨기려면, 속성을 빈 배열로 재설정하세요.

여러분 중 일부는 이미 애플리케이션 내에서 건너뛰기 기능에 대한 솔루션을 구현했을 수도 있습니다.

이 새로운 API를 사용하면 문맥 제어와의 사용자 상호 작용은 초점 동작과 일치하며, 사용될 때 애플리케이션의 지금 재생 중 상태를 유지합니다.

이제, tvOS에서 AVPlayerViewController의 몇 가지 모범 사례에 대해 이야기해 봅시다.

먼저 - 그리고 가장 중요한 - 플레이어에게 추가 제스처를 추가하지 마세요.

이것은 표준 재생 UI를 방해할 것이며 미래에는 작동하지 않을 수도 있습니다.

둘째, 누락된 메타데이터를 보완하세요.

때때로 우리는 자산과 함께 구워진 모든 메타데이터가 없는 미디어를 가지고 있다.

이러한 경우, AVPlayerItem의 externalMetadata 속성을 사용하여 제목, 삽화 또는 설명과 같은 모든 필수 메타데이터를 제공하십시오.

그리고 당신이 그렇게 할 때, 우리는 모든 관련 정보로 제목 보기와 정보 탭을 채우기 위해 나머지를 할 것입니다.

마지막으로, tvOS 애플리케이션에서 Picture in Picture를 활성화하는 것을 고려해 보세요.

사용자에게 멀티태스킹 유연성을 제공하여 동시 비디오 재생과 전체 화면 콘텐츠와 Picture in Picture 사이를 교환할 수 있습니다.

Picture in Picture를 시작하려면, WWDC 2020의 "Master Picture in Picture on tvOS"를 보는 것이 좋습니다.

그래서 요약하자.

tvOS 15를 사용하면 표준 재생 UI를 사용하여 그 어느 때보다 쉽게 훌륭한 미디어 경험을 구축할 수 있습니다.

강력한 새로운 API는 AVPlayerViewController를 그 어느 때보다 더 구성 가능하고 사용자 정의할 수 있게 만든다.

그것을 당신의 지원서에 채택하기에 더 좋은 시기는 없었습니다.

그리고 시작하는 것은 쉽다.

자세한 내용은 개발자 앱에서 이 세션에 대한 추가 리소스를 참조하십시오.

회의를 보고 즐겨줘서 고마워.

♪