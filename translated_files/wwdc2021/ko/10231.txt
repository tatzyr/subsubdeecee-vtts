10231

♪ 베이스 음악 연주 ♪

♪

라이언 채프먼: 안녕하세요, WWDC에 오신 것을 환영합니다.

안녕하세요, 저는 라이언 채프먼이고, 프로액티브 인텔리전스 팀에서 일하고 있습니다.

오늘 저는 의도 기부로 앱의 존재를 확장할 수 있는 방법에 대해 이야기할 것입니다.

우리 장치의 운영 체제는 사람들이 매일 사용하는 앱과 점점 더 통합되고 있다.

시스템과 앱 간의 이러한 협업은 사용자에게 초능력을 제공하는 지능형 시스템 경험의 핵심이다.

앱이 이 협업에 참여하고 시스템 전체에서 앱의 존재와 기능을 확장할 수 있는 주요 방법 중 하나는 의도를 기부하는 것입니다.

이 세션에서, 저는 의도 기부가 무엇인지 정의하고, 의도 기부의 삶을 안내한 다음, 성공을 위해 기부를 구성하고 궁극적으로 시스템 전반에 걸쳐 앱의 존재를 확장할 수 있는 방법에 대해 이야기할 것입니다.

의도 기부가 무엇인지 이해하는 것부터 시작합시다.

3년 전 iOS 12에서 우리는 단축키를 도입했다.

단축키를 사용하면 앱의 기능을 행동으로 노출할 수 있습니다.

그들은 사람들이 운영 체제 전반에 걸쳐 새로운 방법과 장소에서 앱의 기능을 사용할 수 있게 해준다.

그것은 사용자를 참여시키고 앱의 한계를 넘어 당신의 존재를 확장할 수 있는 정말 강력한 방법입니다.

당신이 노출하는 모든 행동은 앱의 주요 기능을 수행함으로써 가속화되어야 합니다.

그것은 사용자가 이미 당신의 앱으로 하고 싶었던 것을 취하고 그들이 더 빨리 할 수 있도록 도와야 한다는 것을 의미합니다.

그리고 다음으로, 당신이 노출하는 모든 행동은 반복 가능하고 사용자에게 지속적인 관심을 가져야 합니다.

그것은 사용자가 여러 번 하고 싶어할 수도 있는 것이어야 한다는 것을 의미한다.

누군가가 한두 번만 하고 싶어할 수도 있는 행동을 폭로하는 것은 좋은 생각이 아니다.

그리고 당신은 또한 언제든지 무국적 및 실행 가능한 행동만 노출해야 합니다. 왜냐하면 당신의 행동이 사용할 준비가 되기 전에 특정 상태에 있는 누군가에게 의존할 수 없기 때문입니다.

무엇이 훌륭한 행동을 만드는지에 대해 자세히 알아보려면, WWDC 2021의 "단축키, Siri 및 제안을 위한 훌륭한 행동 설계"라는 세션을 확인하십시오.

따라서 어떤 행동을 노출할지 결정하면, 단축키 API를 확인할 준비가 된 것입니다.

앱의 단축키를 채택하는 데 사용할 수 있는 두 가지 API가 있습니다.

첫 번째는 NSUserActivity이다.

NSUserActivity는 앱의 상태를 나타내는 가벼운 방법이며, Spotlight 및 Handoff와 같은 다른 Apple 기능과 통합됩니다.

그리고 두 번째는 의도야.

인텐트는 앱이 수행할 수 있는 작업 유형을 자세히 나타내는 방법이며, Siri에는 시스템과 통합하는 데 사용할 수 있는 다양한 기능을 지원하는 훌륭한 내장 인텐트가 많이 포함되어 있습니다.

인텐트는 또한 단축키와 함께 사용할 사용자 지정 인텐트를 정의할 수 있는 기능을 지원합니다.

API와 앱의 단축키를 채택하는 방법에 대해 자세히 알아보려면, WWDC 2018에서 "Siri 단축키 소개" 세션을 시청하세요.

이 세션을 위해, 저는 의도에 초점을 맞추고, 시스템 전반에 걸쳐 앱의 기능을 제공할 수 있는 신규 및 기존 기회를 검토할 것입니다.

의도 기부를 위한 첫 번째 단계는 어떤 유형의 의도를 채택하고 싶은지 결정하는 것입니다.

Siri에는 메시징, 예약, 미디어 등과 같은 많은 훌륭한 내장 의도가 포함되어 있습니다.

단축키를 위한 Xcode에서 사용자 지정 의도를 정의할 수 있는 기능도 있습니다.

따라서 만들고 싶은 작업이 기본 내장 SiriKit 인텐트 중 하나에 해당한다면, 그것을 채택해야 합니다.

하지만, 그렇지 않으면, Xcode의 인텐트 정의 파일을 사용하여 자신만의 것을 정의할 수 있습니다.

어떤 의도를 채택하고 앱에서 정의하고 싶은지 결정하면, 의도 기부를 시작할 수 있습니다.

의도 기부는 사람이 앱에서 작업을 수행할 때 시스템에 알리는 행위입니다.

이 시스템은 이러한 기부금을 저장하고 시스템 전반에 걸쳐 앱의 기능과 존재를 확장하는 데 사용할 것입니다.

의도를 기부하는 앱은 제안, 단축키, 초점, 스마트 스택 및 Siri와 같은 시스템 전체의 장소에 나타납니다.

이제 의도 기부가 무엇인지 높은 수준에서 이해했으니, 예를 들어 의도 기부의 삶을 통해 이것을 더 구체적으로 만들어 봅시다.

날씨 앱에서 날씨를 확인하는 예를 사용해 봅시다.

이 앱의 경우, 특정 위치에서 날씨를 확인하는 것은 내가 행동을 노출하고 싶은 앱의 핵심 기능이다.

이 앱에는 이미 내 의도를 사용하여 구성할 수 있는 기존 위젯이 있으므로, 누군가가 위젯에서 날씨를 보고 싶은 도시를 선택할 수 있습니다.

날씨 의도를 확인하는 방법, 시스템에 기부하는 방법, 그리고 시스템이 기부를 어떻게 사용하는지 알아봅시다.

Xcode에서 의도를 정의하는 첫 번째 단계는 의도 정의 파일을 만드는 것이다.

이렇게 하려면, 새 파일을 추가할게...

...그리고 SiriKit 의도 정의 파일을 선택하세요.

그런 다음 사용자 지정 인텐트를 사용하고 싶은 대상을 선택하고 인텐트 정의 파일을 만들고 싶은지 확인합니다.

의도 정의 파일이 생성되면, 의도를 정의할 수 있습니다.

날씨를 확인하기 위한 기존 내장 시스템 의도가 없었기 때문에, 새로운 의도를 추가할 수 있습니다.

의도를 "날씨 확인"이라고 부를게.

여기서부터, 나는 의도를 정의하기 시작할 수 있다.

이 의도가 내 앱의 기존 위젯에 대한 구성으로 작동하도록 허용하고 싶기 때문에 "인텐트는 위젯을 사용할 수 있습니다" 옵션을 확인하는 것으로 시작하겠습니다.

그 시스템은 또한 스마트 스택 위젯 인텔리전스를 강화하기 위해 내 의도 기부를 사용할 수 있을 것이다.

단축키 앱도 지원하려면, "Intent is user-configurable in the Shortcuts app and Add to Siri" 옵션을 확인하세요.

이 데모에서 이 옵션의 선택을 해제하고 위젯과 제안에 집중할 것입니다.

나는 또한 "의도는 Siri 제안을 받을 수 있다" 옵션을 체크한 상태로 둘 것이다. 왜냐하면 시스템이 내 의도를 위해 Siri 제안을 표시하기 위해 내 기부를 사용하기를 원하기 때문이다.

다음으로 나는 내 의도의 매개 변수를 정의해야 한다.

날씨를 확인할 수 있는 위치에 대한 하나의 매개 변수만 정의할 수 있습니다.

다음으로 매개 변수의 유형을 선택해야 합니다.

이 위치는 앱이 날씨를 가진 도시에 해당하는 내 앱의 개체를 나타내므로, 이 매개 변수를 나타내기 위해 사용자 지정 유형을 사용할 것입니다.

식별자와 displayString이 있는 도시에 대한 사용자 지정 유형을 만들 수 있습니다.

위치 매개 변수로 돌아가자.

위치 유형이 새로운 사용자 지정 도시 유형이라는 것을 알 수 있습니다.

이 의도가 위젯 구성에 사용되기를 원하기 때문에 사용자가 위젯의 값을 편집할 수 있는 옵션을 유지할 것입니다.

이 의도는 이 데모에서 Siri에서 실행을 지원하지 않기 때문에, "Siri는 실행할 때 값을 요청할 수 있습니다" 옵션을 선택 해제할 것입니다.

사람들이 위젯을 구성할 때, 날씨 위치 목록은 앱에서 제공해야 하며 그 사람이 저장한 도시에 따라 변경되므로 "옵션이 동적으로 제공됩니다" 확인란을 체크하겠습니다.

마지막으로, 제안에 대해 지원되는 매개 변수 조합을 정의하기만 하면 됩니다.

시스템은 앱이 예측을 위해 지원하는 의도와 매개 변수 조합을 결정하기 위해 의도 정의 파일을 읽습니다.

이 경우, 앱은 위치 매개 변수가 설정된 의도를 지원합니다.

나는 그 매개 변수를 지원되는 조합으로 추가할 것이다.

그런 다음 제안에 표시된 요약을 정의하겠습니다.

그리고 그게 다야.

위젯과 제안에서 사용할 수 있는 날씨를 확인하기 위한 사용자 지정 의도를 정의했습니다.

의도가 정의된 상태에서, 누군가가 앱에서 특정 위치의 날씨를 확인할 때마다 시스템에 의도를 기부하기만 하면 됩니다.

인텐트를 기부하기 위해, 인텐트 클래스의 인스턴스를 만들고 매개 변수 값을 설정합니다.

인텐트를 만든 후, INInteraction 객체의 인스턴스를 만들고, 인텐트를 전달한 다음, 상호 작용 객체의 기부 방법을 호출하여 인텐트를 시스템에 기부합니다.

무대 뒤에서, 시스템은 의도가 기부되었을 때 그 사람이 있었던 맥락과 함께 시간이 지남에 따라 이러한 기부금을 저장한다.

그들이 날씨 앱에서 날씨를 계속 확인함에 따라, 앱은 의도한 기부를 계속하고 있다.

이 경우, 그들은 쿠퍼티노와 샌디에이고의 날씨를 확인하고 있다.

시스템은 의도 매개 변수를 사용하여 의도가 동등한지 여부를 결정합니다.

기부금의 색깔에서 알 수 있듯이, 두 개의 쿠퍼티노 기부금은 동등하며 두 개의 샌디에고 기부금과 다르다.

실제로, 시스템은 또한 그 사람의 장치에 있는 다른 많은 앱으로부터 기부금을 받는다.

언제든지 기부를 삭제하고 싶다면, 삭제 API를 사용하여 단일 기부 또는 기부 그룹을 삭제할 수 있습니다.

예를 들어, 누군가가 저장된 날씨 위치에서 샌디에고 날씨 위치를 제거했다면, 샌디에고 위치와 관련된 의도를 삭제할 수 있습니다.

사람들이 더 이상 관련이 없는 앱에서 행동에 대한 제안을 받지 않도록 기부를 삭제하는 것이 중요합니다.

의도를 기부할 때, INInteraction 식별자와 그룹 식별자를 사용하여 나중에 기부한 하나 이상의 INInteraction을 삭제할 수 있습니다.

개별 상호 작용을 삭제하기 위해 식별자 배열을 전달하거나, 그룹 식별자를 전달하여 상호 작용 그룹을 삭제할 수 있습니다.

그렇다면 이 모든 의도 기부는 시스템에서 어떻게 사용되나요?

시스템이 여러 날에 걸쳐 보는 기부 이력에 대해 높은 수준의 시각을 취합시다.

여기서 당신은 한 사람을 위한 3일간의 기부금과 그들이 일어났을 때부터 하루 종일 발생한 기부금을 볼 수 있습니다.

이 시스템은 기계 학습과 온디바이스 인텔리전스를 사용하여 데이터에서 패턴을 찾고 사람의 현재 맥락과 과거의 행동 패턴을 감안할 때 어떤 의도가 관련이 있는지 예측합니다.

이 경우, 당신은 이 사람이 깨어난 후 날씨를 확인하는 것과 관련된 패턴을 가지고 있다는 것을 알 수 있습니다.

온디바이스 인텔리전스는 사용자 대면 기능과 통합되어 앱의 기능과 존재를 사용자에게 노출합니다.

이 노출이 어디에서 일어나는지에 대한 몇 가지 예를 살펴봅시다.

그렇게 하기 전에, 모든 기계 학습과 지능이 개인 정보 보호 방식으로 장치에서 수행된다는 점은 주목할 가치가 있습니다. 즉, Apple은 사용자를 개인적으로 식별하는 데 사용할 수 있는 데이터를 수집하지 않습니다.

그렇긴 하지만, 우리의 날씨 예시로 돌아가자.

앱의 기존 위젯을 구성할 수 있도록 내가 정의한 의도를 사용할 수 있습니다.

의도를 사용하도록 위젯을 구성한 후, 사람들은 위젯에서 날씨를 보고 싶은 위치를 선택할 수 있습니다.

위젯의 구성 의도와 일치하는 앱 기부 의도를 통해, 시스템은 이제 사람들에게 앱에 대한 스마트 스택 위젯 인텔리전스를 제공할 수 있습니다.

스마트 스택으로 홈 화면 구성을 가진 사람이 있다고 가정해 봅시다.

iOS 15의 새로운 기능인 스마트 스택은 위젯 제안을 지원하며, 이를 통해 시스템은 사용자가 스택에 없는 위젯을 적시에 스택 위에 배치하여 제안할 수 있습니다.

위젯을 제안해야 하는지 여부와 제안을 할 정확한 시간을 결정하기 위해, 시스템은 위젯 구성 의도와 일치하는 의도 기부를 활용합니다.

날씨 예에서, 사람이 깨어난 후, 스마트 스택은 적절한 시간에 날씨 위젯을 스택 상단에 배치했다.

이것은 사람들이 당신의 위젯을 발견하고 한눈에 볼 수 있는 정보를 제공할 수 있는 좋은 방법입니다.

만약 그들이 이미 스택에 날씨 위젯을 가지고 있었다면, 대신 날씨 위젯으로 회전했을 것이다.

위젯에 구성과 인텔리전스를 추가하는 방법에 대해 자세히 알아보려면 2020년부터 WWDC 세션을 시청하세요.

의도 기부는 또한 잠금 화면, 스포트라이트 검색 및 Siri 제안 위젯에 표시되는 Siri 제안 뒤에 있는 온디바이스 인텔리전스를 강화합니다.

이러한 제안을 통해 사람들은 한 번의 탭으로 앱의 주요 기능을 수행할 수 있습니다.

당신의 의도는 또한 내장된 단축키 앱에서 macOS, iOS 및 watchOS에서 간단하거나 복잡한 다단계 단축키의 일부로 사용할 수 있습니다.

그리고 기부는 또한 단축키 앱 갤러리에서 사람들에게 어떤 행동을 제안할지 결정하는 데 사용됩니다.

사람들은 또한 Siri에게 요청하는 것만으로 사용자 지정 의도를 실행하기 위해 음성 단축키를 설정할 수 있습니다.

내장된 INSendMessageIntent를 사용하기로 선택한 경우, 의도 기부는 사용자가 가장 중요한 사람들과 그룹에 콘텐츠를 쉽게 제공할 수 있도록 제안을 공유함으로써 사용됩니다.

iOS 15의 새로운 기능, INSendMessageIntents를 기부할 때, 시스템은 기부한 사람들을 사용하여 누가 사용자의 현재 포커스와 강하게 연관되어 있는지 결정합니다.

이러한 강력한 연관성은 특정 사람들이 메시지를 받을 때 허용된 알림 목록에 추가하는 제안을 하는 데 사용될 수 있습니다.

이 경우, Aga가 이 사용자가 Aga와의 과거 상호 작용을 기반으로 Work Focus에 대한 허용된 알림 목록에 추가하는 것을 고려해야 하는 사람으로 제안된다는 것을 알 수 있습니다.

내장된 INGetReservationDetailsIntent를 사용하기로 선택한 경우, 의도 기부는 현재 교통 상황에 따라 레스토랑 예약을 위해 떠날 때와 항공편을 체크인할 때를 사용자에게 알리는 데 사용됩니다.

사람들은 또한 지도를 열 때 Siri 제안을 볼 수 있으며, 이는 한 번의 탭으로 공항으로 가는 길을 매우 편리하게 얻을 수 있게 해준다.

iOS 15의 새로운 기능, 내장된 INPlayMediaIntent를 사용하기로 선택한 경우, 의도 기부는 잠금 화면, 제어 센터 및 홈 앱의 새로운 Now Playing UI에 표시됩니다.

이것은 사용자가 앱에서 좋아하는 콘텐츠를 듣거나 볼 수 있는 환상적인 방법입니다.

사람들은 앱에서 팟캐스트, TV 프로그램 또는 영화와 같은 정기적인 미디어 콘텐츠를 소비할 수 있습니다.

이러한 경우, INUpcomingMediaManager API를 사용하여 사용자가 듣거나 시청하지 않은 콘텐츠에 대한 미디어 의도 목록을 시스템에 제공할 수 있으므로 관심이 있을 수 있습니다.

이 시스템은 과거의 미디어 기부를 앱의 다가오는 미디어와 결합하여 더 나은 미디어 제안을 합니다.

당신의 의도는 INRelevantShortcut API를 사용하여 Siri Watch Face에 표시할 수도 있습니다.

INRelevantShortcut API를 사용하면 단축키가 시계 페이스에 표시되어야 하는 시간이나 위치와 같은 관련 정보를 시스템에 노출할 수 있습니다.

Siri Watch Face에서 단축키를 노출하는 방법에 대해 자세히 알아보려면, 2018년부터 "Siri Watch Face의 Siri 단축키" WWDC 세션을 시청하세요.

iOS 15의 새로운 기능, widgetKind 속성이 INRelevantShortcut 객체에 추가되어 스마트 스택에서 해당 위젯을 표시할 때 시스템에 힌트를 줄 수 있습니다.

이 속성과 사용 방법에 대해 자세히 알아보려면, WWDC 2021의 "위젯에 인텔리전스 추가" 세션을 시청하세요.

요약하자면, 우리는 의도 기부의 수명을 살펴보고 시스템 전반에 걸쳐 앱의 존재와 기능을 스마트 스택, 포커스, 제안, 단축키 및 Siri와 같은 점점 더 많은 곳으로 확장하는 데 어떻게 사용되는지 보았습니다.

이제 의도 기부의 삶을 살펴보았으니, 성공을 위한 기부를 구성하고 궁극적으로 시스템 전반에 걸쳐 앱의 존재를 확장할 수 있는 방법에 대해 더 자세히 이야기해 봅시다.

커피 앱에서 커피를 주문하는 새로운 예를 사용해 봅시다.

지금까지 나는 주문 커피 의도를 정의하고 두 가지 매개 변수를 노출했다: 커피의 크기와 커피 품목.

이 경우, 우리는 큰 아이스 라떼를 가지고 있다.

의도 기부에 주문 날짜를 포함하면 무엇이 잘못될 수 있는지 살펴봅시다.

2021년 6월 7일에 큰 아이스 라떼를 위한 기부와 함께, 그것은 괜찮게 시작한다.

하지만 날짜가 변경되면, 의도의 날짜 매개 변수는 새로운 값을 가지며, 두 기부가 동일한 항목과 크기를 가지고 있음에도 불구하고 시스템은 두 번째 기부를 완전히 다른 의도로 취급합니다.

이 시스템은 시간이 지남에 따라 기부금을 다르게 취급하고 있으며, 기부금의 색상에 따라 며칠 동안 동등하지 않다는 것을 알 수 있습니다.

시스템이 여러 날에 걸쳐 보는 기부 이력에 대한 높은 수준의 보기를 보면, 시스템이 큰 아이스 라떼를 주문할 때 찾을 수 있는 의미 있는 패턴이 없다는 것을 알 수 있습니다.

무엇이 잘못되었는지 이해하기 위해 의도 정의 파일을 어떻게 작성했는지 살펴봅시다.

나는 항목, 크기, 날짜에 대한 세 가지 매개 변수를 정의했다.

그리고 나는 세 가지 매개 변수 모두에서 지원되는 매개 변수 조합을 추가했다.

이것은 시스템에 예측을 위한 의도 기부에서 패턴을 찾는 방법을 결정하기 위해 세 가지 매개 변수를 모두 사용해야 한다고 알려줍니다.

이 경우, 항목 및 크기와 지원되는 조합의 날짜를 포함하여 시스템이 기부에서 패턴을 제대로 찾는 것을 막았다.

이 문제를 해결하기 위해, 대신 크기와 항목 매개 변수만 포함하는 지원되는 조합을 정의할 수 있습니다.

이렇게 함으로써, 시스템은 시간이 지남에 따라 패턴을 찾기 위해 의도 기부를 비교할 때 항목과 크기 매개 변수만 사용해야 한다는 것을 알고 있다.

이제, 그 시스템은 더 이상 날짜를 포함하지 않는 큰 아이스 라떼에 대한 기부를 보게 될 것이다.

그리고 둘째 날에, 시스템은 큰 아이스 라떼에 대한 동등한 기부를 본다.

그리고 셋째 날에도 마찬가지야.

기부 이력에 대한 높은 수준의 보기를 다시 보면, 이제 깨어난 직후 큰 아이스 라떼를 주문하는 것과 관련된 패턴이 있다는 것을 알 수 있습니다.

기부의 이익을 극대화하려면, 의도 기부가 반복될 가능성이 높고 기부하는 의도 페이로드가 기부 전반에 걸쳐 일관성이 있는지 확인하십시오.

그것은 타임스탬프를 포함하지 않는다는 것을 의미합니다.

요약하자면, 시스템은 우리가 매일 사용하는 앱과 점점 더 통합되고 있으며 의도 기부는 주요 통합 지점이다.

시스템 전반에 걸쳐 앱의 기능과 존재를 확장하여 기부 의도의 혜택을 받으세요.

들어주셔서 감사드리며 WWDC 2021에서 즐거운 시간 보내시길 바랍니다.

♪