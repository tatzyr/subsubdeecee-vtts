10036

♪ ♪

안녕.

WWDC의 사운드 분석 세션에 오신 것을 환영합니다.

제 이름은 존 황입니다.

저는 오디오 팀의 연구원입니다.

오늘, 제 동료 케빈과 저는 SoundAnalysis 프레임워크와 CreateML을 통해 사용할 수 있는 사운드 분류에 대한 개선 사항을 소개할 것입니다.

2019년에, 우리는 CreateML을 사용하여 사운드 분류 모델을 훈련시킬 수 있게 했다.

우리는 사운드 분류 모델을 만들고 Apple 장치에 배포하는 것이 쉽다는 것을 보여주었다.

이 프레임워크를 사용할 때, 모든 계산은 하드웨어 가속에 최적화되어 있으며 로컬 온디바이스에서 수행됩니다.

이것은 오디오가 클라우드로 전송되지 않기 때문에 사용자의 개인 정보를 보호하는 데 도움이 됩니다.

우리는 사운드 인식이라는 접근성 기능을 도입하기 위해 사운드 분석 프레임워크를 활용했습니다.

이 기능은 알람, 애완동물 및 기타 가정 소리와 같은 환경에서 특정 소리가 들릴 때 사용자에게 알림을 제공할 수 있습니다.

이것은 소리 분류의 한 가지 적용일 뿐이다.

우리가 그걸로 뭘 더 할 수 있는지 보자.

데모 앱은 내 Mac의 내장 마이크를 사용하여 환경에서 소리를 듣고 있다.

사운드 분류기를 통해 오디오를 전달하고 UI에 분류 결과를 표시하고 있습니다.

그래서 내가 너와 채팅하고 있을 때, 연설이 감지되었다.

잠시 저와 함께 앉아서 무슨 일이 일어나는지 보세요.

편안하게 지내세요.

음악으로 시작하자.

Siri야, Karun과 Mombru의 "Catch a Vibe"를 틀어줘.

지금 Karun과 Mombru의 "Catch a Vibe"를 연주하고 있다.

♪ ♪

♪ 오, 오, 오 ♪

분류기가 음악과 노래 소리를 모두 듣고 있다는 것을 주목하세요.

♪ 난 아무도 몰라 ♪

♪ 누가 그렇게 옳다고 생각해 ♪

♪ 날 만드는 사람은 아무도 몰라 ♪

♪ 분위기를 잡고, 주파수를 느껴보세요... ♪

이제 저와 함께 차를 마시세요.

♪ 괜찮아, 자기야 ♪

♪ 우리는 볼 수 있었어 ♪

♪ 우리가 옳을 수 있다면 ♪

♪ 그게 네가 웃는 방식에 관한 것인지 봐 ♪

♪ 숨을 참아 그리고, 자기야, 우린 할 수 있어 ♪

♪ 분위기를 잡고, 주파수를 느껴보세요 ♪

♪ 분위기를 잡아, 너와 나만 ♪

♪ 괜찮아, 자기야, 우리는 볼 수 있었어 ♪

♪ 우리가 할 수 있다면 ♪

♪ 내가 말했어, 내가 말했어 ♪

♪ 그건 내 일부야 ♪

♪ 네가 보는 모든 부분 ♪

♪ 넌 자랑스러워해야 해... ♪

이건 좋은 차야.

♪ 넌 내 아기야, 이런 ♪

♪ 넌 카트야, 알겠어... ♪

♪ 어떻게 그럴 수 있어? ♪

♪ 어떻게 그럴 수 있어?... ♪

이봐, Siri. 멈춰.

이제 이러한 각 사운드 범주에 대한 데이터를 수집하고 CreateML을 사용하여 사용자 지정 모델을 훈련했다고 가정하는 것이 합리적입니다.

네, 그렇게 할 수 있었지만, 사실, 사용된 분류기는 내장되어 있습니다.

올해 새로, 우리는 사운드 분석 프레임워크에 바로 내장된 사운드 분류기를 가지고 있습니다.

앱에서 사운드 분류를 활성화하는 것이 그 어느 때보다 쉬워졌습니다.

그것은 모든 플랫폼에서 지원됩니다.

내장된 분류기는 개발자 경험을 단순화하는 것에 관한 것이다.

그것은 높은 정확도 모델을 개발하기 위해 엄청난 양의 데이터, 전문 기계 학습 및 오디오 전문 지식, 그리고 많은 컴퓨팅 파워를 수집하고 라벨링할 필요성을 제거합니다.

이러한 세부 사항에 대해 걱정할 시간이 적을수록, 앱에서 사용자 경험을 풍요롭게 하는 데 더 많은 시간을 할애할 수 있습니다.

사운드 분류를 활성화하려면 몇 줄의 코드만 있으면 됩니다.

이 분류기가 뭘 할 수 있는지 보여줄게.

당신이 사용할 수 있는 300개 이상의 카테고리가 있습니다.

좀 더 자세히 살펴보자.

우리는 가축, 가축, 야생 동물의 소리를 분류할 수 있다.

음악의 경우, 많은 악기를 인식할 수 있다: 키보드 악기, 타악기, 현악기, 관악기.

우리는 다양한 인간의 소리를 감지할 수 있다: 그룹 활동, 호흡 소리, 발성.

그런 다음 차량, 알람, 도구, 액체 등과 같은 소리가 난다.

이 즉시 사용할 수 있는 카테고리는 당신이 시도해 볼 수 있습니다.

이 사운드 분류기를 사용하는 방법을 안내하기 위해 케빈에게 넘겨줄게.

고마워, 존.

안녕하세요, 저는 오디오 팀의 소프트웨어 엔지니어인 케빈입니다.

제가 만든 작은 응용 프로그램을 살펴보고 새로운 내장 사운드 분류기를 사용하는 방법을 보여주고 싶습니다.

나는 존이 분류기가 카우벨과 얼마나 잘 작동하는지 보여주기를 바랐지만, 그의 데모에 맞지 않았기 때문에, 나는 다른 아이디어를 생각해냈다.

이 세션을 준비하는 동안 수집한 미디어가 Mac에 있으며, 카우벨이 포함된 오래된 영상이 있다고 확신합니다.

나는 그것을 너에게 보여주고 싶지만, 먼저 그것을 찾아야 해.

이것은 내가 올바른 파일을 찾아야 한다는 것을 의미하며, 올바른 부분을 찾기 위해 내부를 살펴봐야 할 것이다.

그래서 내가 이걸 어떻게 할 거야?

내장된 사운드 분류기를 사용하여 파일을 읽고 특정 사운드가 안에 있는지 알려주는 간단한 프로그램을 작성할 것입니다.

소리가 발견되면, 프로그램은 분류기를 사용하여 그것이 발생한 시간을 알려줄 수 있다.

그런 다음 macOS에서 사용할 수 있는 단축키를 사용하여 많은 파일에서 프로그램을 실행하는 워크플로우를 만들 수 있습니다.

내 프로그램이 소리를 찾으면, 워크플로우는 보고된 감지 시간을 자동으로 사용하여 소리가 포함된 비디오 클립을 추출할 수 있습니다.

이것은 카우벨 클립을 찾는 데 도움이 될 것이다.

그러니 그것이 실제로 실행되는지 봅시다.

여기, 비디오로 가득 찬 폴더가 있습니다.

나는 모든 파일을 선택하고 빠른 작업 메뉴를 사용하여 바로 가기를 시작할 것이다.

내가 찾고 싶은 소리를 선택하라는 요청을 받았기 때문에, 옵션 목록에서 카우벨을 선택할 것이다.

이제, 내 단축키가 실행되고 있으며, 잠시 후, 내가 찾고 있는 소리를 찾아 파인더 창에서 나에게 보여준다.

한 번 보자.

좋아 보여, 존.

내가 사용한 지름길을 자세히 살펴보자.

내 지름길이 시작되면, 그것은 인식할 수 있는 모든 소리의 목록을 수집하고, 나에게 하나를 고르라고 요청한다.

내 선택을 사용하여, 그것은 내가 파인더에서 선택한 각 파일을 방문하고 내부의 소리를 찾는다.

내 소리가 감지되면, 소리가 발생한 시점에 비디오에서 몇 초를 추출하고 결과 클립을 보여줍니다.

이 단계들 중 두 단계는 내장된 분류기를 사용한다.

이것들은 바로 가기가 필요할 때 사용할 수 있도록 내 사용자 지정 응용 프로그램에서 구현한 단계입니다.

단축키에 대해 더 자세히 이야기하지는 않겠지만, 더 알고 싶다면, "macOS용 단축키 만나기"라는 제목의 WWDC 세션을 참조하십시오.

이제 내 앱의 두 가지 사용자 지정 작업에 대한 구현을 살펴봅시다.

첫 번째 행동은 앱이 인식할 수 있는 모든 소리를 보고한다.

이 앱은 내장된 사운드 분류기를 사용하고 있기 때문에, 수백 개의 소리를 인식할 수 있다.

여기 제가 이 소리를 얻기 위해 쓴 함수가 있습니다.

내장 분류기를 선택할 수 있는 새로운 이니셜라이저를 사용하여 SNClassifySoundRequest를 만듭니다.

이 요청을 받으면, 분류기가 지원하는 소리 목록을 쿼리하는 데 사용할 수 있습니다.

앱의 두 번째 동작은 파일 내에서 소리가 들릴 때 단축키를 알려줍니다.

이것을 구현하기 위해, 나는 사운드 분류를 수행하고 사운드가 처음 감지되면 다시 보고할 것이다.

사운드 분류를 수행하려면, 세 가지 물체를 준비해야 합니다.

먼저, 사운드 분류를 구성하는 데 사용할 수 있는 SNClassifySoundRequest가 필요합니다.

둘째, 특정 파일에 대한 분류를 목표로 하는 SNAudioFileAnalyzer가 필요합니다.

세 번째 물건은 약간의 주의가 필요할 것이다.

분류 결과를 처리할 나만의 옵저버 유형을 정의해야 합니다.

지금은 옵저버를 건너뛰고, 여기 이 객체들 중 처음 두 개를 준비하기 위한 몇 가지 코드가 있습니다.

내장 분류기를 사용하여 SNClassifySoundRequest를 만들 수 있으며, 분류하려는 파일의 URL을 사용하여 SNAudioFileAnalyzer를 만들 수 있습니다.

이 시점에서 옵저버가 준비되었다면, 사운드 분류를 시작하는 것은 쉬울 것이지만, 옵저버를 정의하는 것은 누락된 부분이다.

그럼 그렇게 하자.

저는 NSObject에서 상속받고 SNResultsObserving 프로토콜을 준수하는 베어 옵저버로 시작합니다.

검색하고 싶은 사운드 레이블로 인스턴스를 초기화하고, 소리를 감지하는 시간을 저장하기 위해 CMTime 멤버 변수를 추가할 것입니다.

나는 단지 요청을 실행해야 한다: didProduce 결과 방법.

이 방법은 사운드 분류에 의해 결과가 생성될 때 호출될 것이므로, 나는 SNClassificationResult의 인스턴스를 받을 것으로 예상한다.

결과의 classificationForIdentifier 방법을 사용하여 내가 찾고 있는 라벨에 대한 정보를 추출할 수 있습니다.

나는 라벨과 관련된 신뢰 점수를 물어볼 것이고, 그 점수가 특정 임계값을 초과하면, 나는 그 소리가 감지되는 것을 고려할 것이다.

처음으로 감지를 알아차렸을 때, 나중에 단축키에 제공할 수 있도록 소리가 발생한 시간을 절약할 것입니다.

그것으로, 내 옵저버는 완성되었고, 나는 파일 내에서 언제 소리가 발생하는지 결정하는 데 필요한 모든 조각을 가지고 있다.

이 예시는 내가 더 논의하고 싶은 두 가지 중요한 주제를 다룬다.

먼저, 탐지 시간에 대해 이야기한 다음, 탐지 임계값에 대해 이야기하겠습니다.

탐지 시간부터 시작합시다.

오디오를 분류할 때, 신호는 겹치는 창으로 나뉩니다.

이 창들 각각에 대해, 당신은 어떤 소리가 감지되었고 얼마나 자신 있게 감지되었는지 알려주는 결과를 얻을 수 있습니다.

또한 오디오의 어느 부분이 분류되었다는 것을 알려주는 시간 범위를 얻을 수 있습니다.

내 앱에서, 내가 소리를 감지할 때, 나는 결과의 시간 범위를 사용하여 소리가 언제 발생했는지 결정한다.

하지만 시간 범위는 창의 지속 시간이 바뀔 때 영향을 받을 수 있다.

사용 사례에 따라 창 기간을 크거나 작게 만들 수 있습니다.

짧은 창문은 드럼 탭과 같은 짧은 소리로 작업할 때 잘 작동합니다.

이것은 당신이 짧은 시간 안에 그 소리의 모든 중요한 특징을 포착할 수 있기 때문입니다.

그 작은 창문은 어떤 중요한 정보도 잘라내지 않는다.

작은 창 지속 시간을 사용하는 것의 장점은 소리가 발생한 순간을 더 가깝게 정확히 찾아낼 수 있다는 것입니다.

하지만 더 긴 소리로 작업할 때 작은 창 기간은 적절하지 않을 수 있습니다.

예를 들어, 사이렌은 더 오랜 기간 동안 상승과 하강 피치를 모두 포함할 수 있다.

이 모든 피치를 하나의 창에서 함께 캡처하면 사운드 분류가 사운드를 올바르게 감지하는 데 도움이 될 수 있습니다.

일반적으로, 당신이 관심 있는 소리의 모든 중요한 부분을 포착할 수 있을 만큼 충분히 긴 창 기간을 사용하는 것이 좋습니다.

창 기간을 편집하려면, SNClassifySoundRequest의 windowDuration 속성을 설정할 수 있습니다.

하지만, 모든 창 기간이 지원되는 것은 아닙니다.

다른 분류기는 다른 창 기간을 지원할 수 있다.

SNClassifySoundRequest의 windowDurationConstraint 속성을 읽고 지원되는 창 기간을 확인할 수 있습니다.

내장된 분류기는 1/2초에서 15초 사이의 창 지속 시간을 지원합니다.

앱에서 분류기를 채택할 때 1초 이상의 지속 시간은 좋은 출발점입니다.

다음으로 신뢰 임계값에 대해 이야기해 봅시다.

내 앱에서, 나는 그 소리에 대한 자신감이 고정된 임계값 이상으로 상승할 때마다 소리가 감지될 수 있다고 생각했다.

나는 내 임계값에 0.5의 값을 선택했지만, 자신의 앱에 대한 임계값을 선택할 때 고려해야 할 몇 가지 사항이 있습니다.

분류기는 동시에 여러 소리를 감지할 수 있다.

이런 일이 발생하면, 여러 라벨이 높은 자신감을 가지고 점수를 매겼다는 것을 알 수 있습니다.

CreateML을 사용하여 훈련된 사용자 지정 모델을 사용할 때와 달리, 라벨 점수는 1의 값에 합산되지 않습니다.

자신감은 독립적이며 서로 비교되어서는 안 된다.

신뢰 점수는 독립적이기 때문에, 다른 소리에 대해 다른 신뢰 임계값을 선택하는 것이 유용할 수 있습니다.

임계값을 선택하는 것은 절충을 수반한다.

더 높은 신뢰 임계값은 소리가 잘못 감지될 확률을 낮추지만, 충분히 강하지 않았기 때문에 진정한 탐지를 놓칠 확률도 증가시킨다.

애플리케이션의 임계값을 선택할 때, 사용 사례에 대한 이러한 요소의 적절한 균형을 달성하는 값을 찾아야 합니다.

사용자 지정 창 기간을 설정할 때 신뢰 점수가 변경될 수 있으므로 임계값에도 영향을 미칠 수 있습니다.

내장된 분류기를 사용할 때 명심해야 할 마지막 한 가지는 일부 소리가 비슷하다는 것이다.

분류기가 식별할 수 있는 많은 수의 소리 중에는 심지어 인간에게도 오디오만으로 구별하기 어려울 수 있는 몇 가지 소리 그룹이 있다.

가능하다면, 당신이 주의를 기울이는 소리에 대해 선택하는 것이 가장 좋습니다.

앱이 사용될 맥락에서 발생할 가능성이 있는 소리만 보도록 노력해야 합니다.

그것으로, 사운드 분류와 관련하여 CreateML의 새로운 기능에 대해 알아보기 위해 Jon에게 돌아가 봅시다.

좋은 예시 고마워, 케빈.

네가 그 카우벨 비디오를 재밌게 봐서 기뻐.

이제 CreateML의 새로운 기능 또는 특히 내장 분류기의 힘을 활용하여 사용자 지정 모델을 개선할 수 있는 방법을 보여드리겠습니다.

내장된 분류기는 방대한 범주에 걸쳐 수많은 데이터로 훈련되었다.

그래서 그 모델은 실제로 건전한 분류에 대한 많은 지식을 포함하고 있다.

이 모든 지식은 CreateML을 사용하여 사용자 지정 모델 교육에 활용할 수 있습니다.

이게 어떻게 작동하는지 보여줄게.

사운드 분류기는 두 개의 다른 네트워크로 분리될 수 있다.

첫 번째 부분은 특징 추출기이고, 두 번째 부분은 분류기 모델이다.

때때로 임베딩 모델로 알려진 기능 추출기는 네트워크의 중추이다.

그것은 오디오 파형을 취하여 저차원 공간으로 변환한다.

잘 훈련된 특징 추출기는 음향적으로 유사한 소리를 공간의 인근 위치로 조직한다.

예를 들어, 기타 소리는 함께 모이지만 드럼과 자동차 소리에서 멀리 떨어져 있다.

이제, 이 파이프라인의 두 번째 부분은 분류기 모델이다.

그것은 특징 추출기의 출력을 취하고 클래스 확률을 계산한다.

분류기는 우리가 내장된 분류기에 내장한 것과 같은 좋은 기능 추출기와 짝을 이루는 이점이 있다.

우리는 당신이 내장된 분류기의 기능 추출기를 사용할 수 있도록 하고 있습니다.

그것은 오디오 기능 인쇄라고 불린다.

CreateML에서 사용자 지정 모델을 훈련할 때, 모델은 오디오 기능 인쇄와 페어링됩니다.

이것으로, 당신의 모델은 내장된 분류기에 포함된 모든 지식의 혜택을 받습니다.

이전 세대의 기능 추출기에 비해, 오디오 기능 인쇄는 전반적으로 개선되었다.

이 네트워크는 더 작고 빠르지만, 우리가 비교한 모든 벤치마크 데이터 세트에서 더 높은 정확도를 달성한다.

그리고 내장 분류기와 마찬가지로, 오디오 기능 인쇄를 사용하는 모델은 유연한 창 기간을 지원합니다.

사이렌과 같은 소리에 최적화하기 위해 긴 창 지속 시간을 선택하거나 드럼 탭과 같은 소리에 대해 짧은 창 지속 시간을 선택할 수 있습니다.

오디오 기능 인쇄는 CreateML을 사용하여 사용자 지정 모델을 훈련시킬 때 새로운 기본 기능 추출기입니다.

창 지속 시간은 훈련하는 동안 단일 기능을 생성하는 데 사용되는 오디오 길이입니다.

기본값은 3초이지만, 필요에 맞게 조정할 수 있습니다.

CreateML은 1/2초에서 15초 사이의 창 지속 시간을 선택할 수 있는 옵션을 제공합니다.

사용자 지정 모델 훈련에 대한 더 자세한 예를 보려면, "CreateML에서 사운드 분류 모델 훈련"에 대한 2019 세션을 확인할 수 있습니다.

또한 사운드 분석 프레임워크를 사용하여 사용자 지정 모델을 실행하는 방법을 보여줍니다.

사운드 분석 세션에 참여해 주셔서 감사합니다.

오늘, 우리는 OS에 내장된 강력한 새로운 사운드 분류기를 도입했습니다.

그것과 함께, 우리는 CreateML의 기능 추출기를 업그레이드했습니다.

이것들은 새로운 가능성을 열어줄 것이며, 우리는 당신이 앱에서 그것들로 무엇을 할지 빨리 보고 싶습니다.

나머지 WWDC를 즐기세요.

[쾌활한 음악].