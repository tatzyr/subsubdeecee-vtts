10137

♪ ♪

안녕하세요, WWDC에 오신 것을 환영합니다.

저는 오스틴이고, 앱 및 도서 관리 API에서 일하고 있습니다.

MDM 솔루션이 그 어느 때보다 빠르고 확장 가능한 방식으로 앱과 책을 관리할 수 있도록 새로운 API 버전으로 가져온 개선 사항을 공유하겠습니다.

당신은 이미 Apps and Books Management API를 사용하여 제품을 사용하는 조직이 소유한 앱과 책을 관리할 수 있도록 하고 있을 것입니다.

조직은 Apple School Manager 또는 Apple Business Manager를 통해 이러한 자산을 인수했을 수 있습니다.

그리고 API를 사용하면 이러한 소유한 앱과 책을 조직의 관리 사용자와 장치에 할당할 수 있습니다.

우리는 올해 새로운 Apps and Books API에 많은 변화를 도입했습니다.

우리는 이 세션을 통해 이들 중 많은 부분을 다룰 것이지만 워크플로우를 가장 개선할 두 가지 개선 사항에 초점을 맞출 것입니다: 실시간 알림과 비동기 처리.

다른 변경 사항에 대한 심층적인 내용은 developer.apple.com의 장치 관리 섹션과 이 세션의 참고 자료에서 새로운 개발자 문서를 참조하십시오.

실시간 알림을 시작합시다.

우리는 이제 할당, 자산 및 등록된 사용자의 상태 변경에 대한 실시간 알림을 지원합니다.

이러한 알림을 옵트인해야 하며, 클라이언트 구성에서 구독하는 유형에 대한 알림만 받게 됩니다.

실시간 알림은 마침내 상태를 지속적으로 동기화할 필요성을 제거합니다.

알림 유형에 대해 좀 더 자세히 논의해 봅시다.

첫 번째 알림 유형은 과제를 위한 것이다.

할당은 자산이 조직이 관리하는 사용자 또는 장치에 할당될 때이다.

전체 할당 그룹이 성공적으로 수행되었다는 확인을 기다려야 한다면, 사용자가 필요로 하는 콘텐츠 설치가 지연될 것입니다.

이제, 과제 알림을 통해, 어떤 과제가 성공적으로 수행되었고 어떤 장치에 대해 정확히 알 수 있습니다.

이를 받으려면 클라이언트 구성에서 자산 관리 알림 유형을 구독합니다.

그런 다음 Apple은 자산 이벤트가 연관, 분리 또는 취소에 의해 할당 상태가 변경될 때 귀하에게 통지할 것입니다.

이제 사용자와 장치가 할당된 콘텐츠에 더 빠르게 액세스할 수 있도록 이러한 알림에 의존할 수 있습니다.

이 알림의 예를 살펴봅시다.

과제가 발생하면, 당신은 이 알림을 받습니다.

여기의 예는 연관 자산 호출에 의해 촉발되었다.

Apple은 클라이언트 구성에서 귀하가 제공한 인증 헤더에 공유 비밀과 함께 이러한 알림을 게시합니다.

알림에는 주어진 알림 유형에 특정한 페이로드가 포함되어 있습니다.

그 유형은 여기에 표시되며, 이 알림은 자산 관리입니다.

알림 페이로드에서 상태를 변경하려고 시도한 할당, 이벤트 ID, 이 MDM 트리거 비동기 이벤트의 고유 식별자를 볼 수 있습니다.

우리는 새로운 API의 비동기적 특성에 대해 조금 더 자세히 설명할 것이다.

성공했든 실패했든, 국가 변화의 결과는 다음과 같습니다.

그리고 할당 상태에 대한 변경 유형, 여기서는 동료입니다.

다음 알림 유형은 자산을 위한 것이다.

자산은 조직이 Apple School Manager 또는 Apple Business Manager에서 구매한 앱과 책입니다.

그 조직은 MDM이 그들이 콘텐츠를 소유하고 있다는 것을 알 때까지 자산을 관리하고 할당할 수 없습니다.

자산 알림을 사용하면 구매, 이전 또는 환불에서 자산이 변경될 때 실시간으로 알림을 받게 되며, MDM은 항상 각 자산의 현재 사용 가능한 수를 알 수 있습니다.

이것들을 받기 위해 클라이언트 구성에서 자산 수 알림 유형을 구독합니다.

그런 다음 Apple은 구매, 이전 또는 환불 이벤트로 인해 자산 상태가 변경될 때 귀하에게 알릴 것입니다.

이러한 알림을 통해 사용자에게 최근에 구매한 자산을 빠르게 제공할 수 있습니다.

또한 자산 상태가 이전에 어떻게 생겼는지에 대한 맥락과 함께 이 알림의 예를 살펴봅시다.

자산의 현재 상태를 얻기 위해, 우리는 "자산 가져오기" 엔드포인트라고 부른다.

이것은 GET의 적절한 HTTP 요청 방법과 버전화된 URI로 기록할 수 있는 새로운 자산 동기화 엔드포인트입니다.

여기서, 우리는 단일 자산의 상태를 받기 위해 adamId와 pricingParam의 쿼리 매개 변수로 쿼리하고 있습니다.

우리는 이제 서버 토큰 또는 sToken이 이 베어러 토큰 형식의 모든 새로운 API 요청의 인증 헤더에 제공되어야 합니다.

우리는 우리가 관심 있는 자산에 대한 이 응답의 자산 배열에서 볼 수 있으며, 할당에 사용할 수 있는 10,000개와 총 15,000개가 있습니다.

구매가 발생하면, 당신은 이 알림을 받게 될 것입니다.

우리는 페이로드에서 구매한 자산에 대한 adamId를 본다.

그런 다음 이 경우 양의 정수인 델타.

이것은 구매 또는 이체를 나타낼 수 있다.

이 델타를 사용하여 자산 동기화 엔드포인트에 다시 전화를 걸지 않고 카운트를 업데이트할 수 있습니다.

마지막 알림 유형은 등록된 사용자를 위한 것입니다.

대부분의 배포는 장치 기반 할당에 의존하지만, 사용자에게 콘텐츠를 할당해야 할 때 등록된 사용자를 만드는 것이 첫 번째 단계입니다.

이러한 사용자를 개인 또는 관리되는 Apple ID와 연결하는 것은 배포에 필요합니다.

사용자의 개인 Apple ID를 주어진 sToken에 등록된 사용자와 연결하려면, 사용자는 Apple ID를 연결하기 위한 초대를 수락해야 합니다.

이제 등록된 사용자 알림을 통해 초기 생성과 후속 초대 수락을 위해 사용자의 최신 상태로 실시간으로 업데이트됩니다.

이를 받으려면 클라이언트 구성에서 사용자 관리 및 사용자 관련 알림 유형을 구독합니다.

그런 다음 Apple은 사용자 이벤트를 생성, 연결, 업데이트 또는 종료하여 사용자 상태가 변경될 때 알려드릴 것입니다.

사용자 관련 알림을 사용하면 사용자가 Apple ID를 연결하기 위한 초대를 수락했을 때 더 잘 추적할 수 있습니다.

사용자의 상태가 이전에 어떻게 생겼는지에 대한 맥락과 함께 이러한 알림의 예를 살펴봅시다.

사용자의 현재 상태를 얻기 위해, 우리는 get users 엔드포인트라고 부른다.

이것은 새로운 사용자 동기화 엔드포인트입니다.

여기서, clientUserId 쿼리 매개 변수에 의해 관심 있는 사용자에 대해서만 필터링합니다.

이것은 응답 크기를 한 명의 사용자로만 제한할 것이다.

여기에 동기화 API에서 발견되는 몇 가지 일반적인 페이지 매김 필드가 있으며, 현재 페이지 인덱스, 크기 또는 이 컨텍스트에서 현재 페이지의 사용자 개체 수 및 제공된 쿼리의 총 페이지를 나타냅니다.

사용자 배열에서, 우리는 이 경우, 관련 상태와 반대로 등록된 상태와 초대 코드로 우리가 관심이 있는 유일한 사용자를 볼 수 있습니다.

이 사용자는 분명히 아직 Apple ID와 연결되지 않았다.

우리의 모든 동기화 API에는 기본 데이터에 쓰기가 발생할 때마다 변경되는 버전 식별자가 포함되어 있습니다.

이것은 이전 페이지의 데이터가 언제 변경되었을 수 있는지를 나타내기 위해 큰 응답을 통과할 때 매우 유용할 수 있다.

새로운 업데이트 사용자 엔드포인트를 사용하여 관리되는 Apple ID를 등록된 사용자와 연결할 수 있습니다.

이것은 여기에서 볼 수 있듯이 등록된 사용자 알림을 초래합니다.

알림 페이로드에서, 우리는 상태를 변경하려고 시도한 사용자, 이 MDM에 대한 고유 식별자, 비동기 이벤트, 상태 변경의 결과, 성공 또는 실패 여부, 사용자 상태 변경 유형, 여기에 업데이트가 있습니다.

사용자 배열을 보면, 우리는 우리가 관심 있는 사용자의 상태에 대한 clientUserId를 볼 수 있으며, idHash와 연관된 상태를 포함하고 있으며, 관리되는 Apple ID 연결이 성공적이었다는 결론을 내렸습니다.

사용자 동기화 엔드포인트에 다시 전화를 걸지 않고도 이 사용자의 상태를 업데이트하기 위해 이것을 사용합니다.

연결하는 대신, 사용자에게 자신의 Apple ID를 등록된 사용자와 연결할 수 있는 초대 링크를 제공할 수 있습니다.

여기서, 우리는 관련 사용자 알림을 보고 있습니다.

알림 페이로드에서 clientUserId, 관련 Apple ID를 나타내는 idHash, 수락한 초대 코드 및 관련 상태를 나타내는 상태를 포함하되 이에 국한되지 않는 관련 사용자에 관한 정보가 포함된 사용자 객체를 볼 수 있습니다.

사용자 동기화 엔드포인트에 다시 전화를 걸지 않고도 이 사용자의 상태를 업데이트하기 위해 이것을 사용합니다.

이 알림을 받기 위해 등록하는 방법에 대해 이야기해 봅시다.

관리하는 각 sToken에 대해 클라이언트 설정을 통해 선택해야 합니다.

당신은 이것을 게시할 notificationAuthToken과 notificationUrl로 인증을 위한 공유 비밀을 제공합니다.

토큰은 이러한 알림이 실제로 Apple에서 오는지 확인하는 데 사용되며, 이는 클라이언트 설정을 통해 언제든지 업데이트할 수 있습니다.

Apple에 성공적으로 전달되었음을 알리기 위해 알림을 받을 때 HTTP 200 레벨 응답을 제공하십시오.

Apple은 200이 아닌 응답이 반환되거나 시간 초과가 발생하면 알림을 다시 시도할 것입니다.

애플은 최선의 배송을 제공할 것이다.

당신에게 연락하려는 이 시도는 알림을 버리기 전에 몇 번 이루어질 것입니다.

즉, 일정 기간 동안 알림을 받을 수 없는 경우, 최신 상태에 대한 폴링이 필요합니다.

놓친 알림의 결과로 잠재적으로 오래된 상태에 있는 것으로 알고 있는 것에 대해서만 동기화하세요.

이 새로운 API에 가져온 두 번째 주요 개선 사항은 비동기 처리이다.

API의 초기 버전에서, 모든 관리는 동기적으로 수행되었다.

당신은 일부 자산을 관리하도록 요청하고, Apple은 동기 응답을 기다리는 동안 관리를 수행합니다.

이것은 당신이 병렬 처리를 처리했다는 것을 의미하지만, 비동기 처리는 Apple 측에서 서버 강제 병렬 처리를 가능하게 합니다.

이로 인해 처리 최적화가 발생하여 더 큰 요청이 더 빨리 처리됩니다.

주문 처리는 특정 요청 패턴으로 인해 간헐적인 실패와 후속 재시도의 양을 줄입니다.

그리고 이것은 궁극적으로 스트레스 없는 대규모 배치로 이어지며, 교육을 위해 더 쉬운 개학 시즌으로 이어진다.

Apple은 이미 Apple School Manager와 Apple Business Manager 모두에서 앱과 책, 구매 및 전송에 대한 비동기 처리의 혜택을 받아 조직이 몇 시간이 아닌 몇 분 안에 재고를 볼 수 있도록 했다.

이 모든 것이 어떻게 함께 모여 훌륭한 새로운 앱과 책 관리 경험을 만드는지 살펴봅시다.

각각 자신의 장치를 가진 10,000명의 사용자로 관리하는 조직이 있다고 가정해 봅시다.

그리고 일상 업무에 중요한 25개의 앱을 각 장치에 할당해야 합니다.

당신은 250,000개의 과제를 수행하는 것을 보고 있습니다.

당신이 이전에 이것을 어떻게 했을지 봅시다.

당신의 서버는 라이선스를 관리하기 위해 Apple에 요청합니다.

애플은 당신에게 동기적으로 응답을 반환합니다.

이 응답에는 요청된 장치에 할당된 라이선스가 포함될 것이다.

이 단일 요청은 최대 10개의 장치까지 하나의 앱만 관리하며, 그 결과 10개의 할당만 가능합니다.

이것은 250,000개의 과제를 수행하기 위해 최소 25,000개의 요청이 필요하다.

새로운 API를 통해, 이 25,000개의 최소 요청은 비동기 처리로 이동하여 가능한 10개의 요청이 됩니다.

당신이 이것을 어떻게 성취했는지 봅시다.

왼쪽에, 우리는 이제 당신의 알림 서버를 추가했습니다.

프로세스는 여전히 Apple에 자산 관리를 요청하는 것으로 시작됩니다.

요청에서, 당신은 인증 헤더에 sToken을 제공합니다.

이제 현재 최대 25개까지 단일 요청으로 여러 자산을 제공할 수 있습니다.

이 동적 제한은 서비스 구성에 노출되며 할당을 수행할 수 있는 최대 1,000개의 장치를 제공하며, 또 다른 동적 제한은 서비스 구성에도 노출됩니다.

애플은 당신에게 동기적으로 응답을 반환할 것입니다.

이 응답에서, 우리는 이 새로운 API에 중요한 HTTP 상태 코드를 가지고 있다.

우리는 오류에 대한 적절한 비-200 상태 코드를 반환하므로, 진행하기 전에 먼저 응답이 200인지 확인해야 합니다.

그런 다음, 가장 중요한 것은, 우리는 새로운 이벤트 상태 엔드포인트를 호출하거나 일치하는 할당 알림을 기다리면서 상태를 얻을 수 있는 이 비동기 이벤트에 대한 고유 식별자를 가지고 있다는 것입니다.

과제가 완료되면, 당신이 구독했다고 가정하면, Apple은 당신에게 알림을 게시할 것입니다.

이러한 각 알림에는 알림 페이로드에 나열된 요청된 할당의 하위 집합, 할당에 관한 메타데이터, 성공 또는 실패 여부를 나타내는 유형 및 해당 이벤트 ID가 있습니다.

이러한 성공적인 할당 알림을 기다렸다가 나열된 장치에 설치 명령을 보내기를 진행해야 합니다.

우리의 새로운 관리 엔드포인트의 또 다른 장점은 주문이다.

한 사용자 그룹에서 다른 사용자 그룹으로 일부 자산을 재할당하라는 요청을 받았다고 가정해 봅시다.

이것은 연결 해제와 연관 요청을 순차적으로 발사함으로써 달성될 수 있습니다.

먼저, 연결 해제 요청을 게시합니다.

그런 다음 애플은 연결 해제에 대한 이벤트 ID로 응답한다.

그런 다음, 후속 제휴 요청을 게시합니다.

애플은 다른 이벤트 ID로 응답하지만, 이번에는 동료를 위해 응답한다.

당신이 구독하고 있다고 가정하면, Apple은 분리가 완료되면 당신에게 알림을 게시할 것입니다.

그런 다음, Apple은 협회가 완료되면 당신에게 알림을 게시할 것입니다.

알림과 같은 API의 큰 변경 사항을 통해 상태를 Apple과 동기화하여 최신 상태를 보장하기 위해 지속적으로 요청할 필요가 없습니다.

비동기 처리를 통해 직원이나 학생이 필요한 콘텐츠에 액세스하거나, 대규모 배포를 빠르게 수행하는 IT 관리자 또는 조직의 자산을 효과적으로 관리하는 등 모든 사람이 더 나은 경험을 할 수 있습니다.

레거시 API는 현재 계속 지원될 것이다.

동일한 토큰에 대해 신규 및 레거시 API 버전을 함께 사용하는 것은 공식적으로 지원되지 않습니다.

이 새로운 API는 앱 및 도서 관리를 위한 길이며 오늘날에도 사용할 수 있습니다.

우리는 가능한 한 빨리 이 새로운 API를 테스트하고 통합하여 사용자에게 최고의 앱 및 도서 관리 경험을 제공하기를 기대합니다.

더 많은 통찰력을 얻으려면, 업데이트된 개발자 문서를 확인하세요.

시간 내주셔서 감사드리며, 남은 WWDC를 즐기시기 바랍니다.

[에테르 타악기 음악].