10031

♪ 베이스 음악 연주 ♪

♪

패트릭 앵글: 안녕! 저는 WebKit Developer Experience 팀의 엔지니어인 Patrick입니다. 올해 Web Inspector의 새로운 많은 흥미로운 기능과 개선 사항 중 일부를 보여드리게 되어 기쁩니다.

웹 인스펙터는 macOS의 Safari의 일부이며 웹 개발자와 디자이너가 웹 페이지와 웹 애플리케이션을 검사할 수 있는 다양한 도구 세트에 액세스할 수 있도록 합니다.

웹 페이지의 모든 리소스와 활동을 검사할 수 있으며, macOS, iOS, iPadOS 및 tvOS에서 원활하게 작동합니다.

올해, CSS 그리드를 시각화하기 위한 새로운 오버레이, 중단점 향상, 웹 인스펙터에서 바로 감사를 작성하고 편집할 수 있는 기능을 시작하는 웹 인스펙터의 새로운 기능을 보여드리게 되어 기쁩니다.

이 새로운 기능에 대해 이야기하기 전에, 이전에 웹 인스펙터를 사용해 본 적이 없다면, 활성화해야 합니다.

사파리 환경 설정의 고급 탭에서 "메뉴 표시줄에서 개발 메뉴 보기"를 활성화하세요.

그런 다음 개발 메뉴에서 웹 인스펙터 보기 항목을 사용하여 웹 인스펙터를 열 수 있습니다.

이제 웹 인스펙터가 활성화되었습니다. 올해 첫 번째 새로운 도구인 그리드 오버레이를 살펴봅시다.

요즘 웹 페이지 레이아웃은 꽤 복잡할 수 있다.

CSS 그리드는 디자이너가 믿을 수 없을 정도로 강력하고 인쇄 디자인에서 일한 적이 있는 모든 사람에게 즉시 친숙한 방식으로 콘텐츠를 쉽게 배치할 수 있는 2차원 레이아웃 시스템입니다.

유연하면서도 예측 가능한 레이아웃을 달성하기 위해 요소를 그리드에 배치하거나 배포하는 행과 열의 구조가 정의됩니다.

그리드는 웹 페이지를 배치하는 매우 유능한 방법이지만, 레이아웃이 더 복잡해짐에 따라 많은 새로운 질문과 혼란을 가져올 수 있습니다.

예를 들어, 내 칼럼은 왜 이 크기야?

아니면, 왜 이 파란 상자가 여기 아래에 있어?

이전에 웹 인스펙터에서 이러한 긴급한 질문에 대한 답변의 주요 출처는 요소 탭의 스타일 사이드바였으며, 올해는 자체 독립 사이드바로 이동하여 계산된 스타일과 같은 다른 패널과 함께 일치하는 CSS 규칙을 볼 수 있습니다.

그리드의 저작 스타일을 보면, 레이아웃에 대한 정보를 얻을 수 있습니다.

하지만 그리드의 저술된 스타일은 당신을 그곳의 일부로만 데려간다.

웹 인스펙터와 함께 이 정보를 더 시각적으로 소화할 수 있는 방법이 있다면 좋지 않을까요?

음, 지금 있어!

DOM 트리의 요소를 보면, CSS 그리드인 각 요소 옆에 새로운 클릭 가능한 그리드 배지를 볼 수 있습니다.

여기, 우리는 우리 페이지에서 두 개의 CSS 그리드 중 하나의 배지를 볼 수 있습니다.

이 새 배지를 클릭하고 웹 페이지로 돌아가면, 기존 콘텐츠 위에 새로운 그리드 오버레이를 볼 수 있으며, 작성된 CSS를 읽고 당신이 생각하는 대로 하기를 바라지 않고 그리드 인라인의 레이아웃을 시각화할 수 있습니다.

하지만 이것이 당신의 그리드에 대해 보고 싶은 정확한 정보가 아니라면 어떨까요?

그리드 영역, 선 이름 및 기타 옵션은 어떻습니까?

그것에 답하기 위해, 웹 인스펙터로 돌아가자.

여기서 그리드 오버레이와 관련된 모든 옵션과 컨트롤을 보여주는 또 다른 새로운 기능인 레이아웃 패널을 찾을 수 있습니다.

먼저, 페이지의 그리드 목록을 살펴봅시다.

여기서 모든 그리드 오버레이를 한 번에 켜거나 끌 수 있는 옵션이 있습니다.

또는 단일 그리드의 오버레이를 켜거나 전환할 수 있습니다.

각 그리드는 목록에서 식별하는 데 도움이 되도록 해당 CSS 선택기와 함께 나열됩니다.

나열된 각 그리드 옆에는 그리드 오버레이의 색상을 대화식으로 변경할 수 있는 색상 견본이 있으며, 그리드 오버레이가 활성화되면 각 요소의 배지가 이 색상을 사용합니다.

웹 검사기는 다음에 같은 페이지가 로드될 때 각 요소의 색상을 기억할 것입니다.

이제 그리드의 행 또는 열인 각 트랙의 작성된 크기를 보여주는 트랙 크기부터 시작하여 이러한 오버레이가 표시되는 방식을 제어해야 하는 옵션을 살펴보겠습니다.

여기처럼, 분수 단위와 최소 콘텐츠의 혼합이 사용되는 곳.

다음으로, 줄 번호는 그리드의 특정 행이나 열에 자식 요소를 배치하는 데 사용할 수 있는 값을 보여줍니다.

우리는 마지막 명시적인 격자선에서 세는 줄 번호를 나타내는 음수 줄 번호를 라벨 안에 양 줄 번호와 함께 배치하여 항목을 배치하는 방법을 선택할 수 있도록 합니다.

줄 이름은 지역 이름과 명시적으로 명명된 선을 기반으로 그리드의 선을 참조하는 또 다른 방법을 제공합니다.

영역 이름을 사용하면 그리드에서 명명된 각 영역을 볼 수 있으며, 원하는 배치의 각 측면의 선을 지정하지 않고 그리드에 자녀를 배치하려는 경우에 유용합니다.

우리는 각 영역의 중앙에 지역 이름을 배치하고 각 영역을 두꺼운 스트로크로 설명했습니다.

마지막으로, 이 두 번째 그리드 컨테이너에서 확장된 격자선을 켜면 페이지의 가장자리까지 확장된 트랙 라인을 볼 수 있으므로 그리드의 정렬을 페이지의 다른 요소와 시각적으로 비교할 수 있습니다.

우리는 성능을 염두에 두고 오버레이를 구축했으며, 페이지를 부드럽게 스크롤하면서 필요한 만큼 활성화할 수 있습니다.

버터처럼 부드러운 스크롤을 제공하면서 수십 개의 격자를 동시에 표시할 수 있습니다.

그들은 원래 위키피디아의 수직 설정 텍스트, 오른쪽에서 왼쪽으로 텍스트 방향 및 그 조합과 같은 모든 쓰기 모드에서 작동합니다.

그리고 이러한 오버레이는 Safari 15 또는 최신 Safari Technology Preview를 사용하여 Mac에서 원격으로 검사할 때 iOS 15 및 iPadOS 15에서도 사용할 수 있습니다.

우리는 그리드가 웹에서 매우 중요한 레이아웃 도구라고 믿으며, 이것이 우리가 이러한 도구를 웹 인스펙터에 가져와 모든 플랫폼에서 그리드를 시각화하고 디버깅하여 놀라운 레이아웃을 계속 만들 수 있도록 하는 이유입니다.

이제 그리드 오버레이가 웹 페이지의 문제를 더 잘 이해하고 해결하는 데 어떻게 도움이 될 수 있는지 살펴봅시다.

내가 매일 아침 보고 싶은 정보에 대한 간략한 개요를 제공하는 웹 페이지를 살펴봅시다.

출퇴근 시간, 오늘의 일기예보를 볼 수 있어 - 오늘 밤 재킷을 원할 것 같아! - 그리고 오늘 퇴근 후에 가게에서 픽업할 물건 목록.

이 페이지는 CSS 그리드로 배치되어 있어 다양한 크기의 타일을 쉽게 만들고 내 페이지에 배치할 수 있습니다.

하지만 잠깐, 내가 대시보드를 꾸미는 데 사용한 재미있는 이모티콘 중 하나를 두는 것을 잊어버린 것 같아.

그건 내 나머지 이모티콘과 함께 여기에 있어!

문제없어. 나는 우리의 새로운 그리드 오버레이를 사용하여 내가 원하는 곳에 정확히 배치할 수 있도록 도울 수 있다.

내 페이지를 검사하기 시작하려면, 문제가 있는 요소를 마우스 오른쪽 버튼으로 클릭하고 요소 검사기를 선택합니다.

Inspect Element가 보이지 않는다면, 앞서 논의한 것처럼 Web Inspector를 활성화해야 합니다.

그런 다음 세부 정보 사이드바에서 레이아웃 패널을 선택하여 내 페이지의 모든 그리드 컨텍스트를 볼 수 있습니다.

어떤 그리드로 작업하고 싶은지 잘 기억나지 않지만, 모든 그리드 오버레이의 상단 확인란을 선택하여 모든 오버레이를 한 번에 활성화할 수 있습니다.

이제 내가 작업하고 싶은 그리드 컨텍스트는 내 모든 타일을 담고 있는 분홍색이다.

이 그리드 컨텍스트 목록에서 선택을 해제하여 다른 두 오버레이를 끌 것입니다.

그리고 이제 내가 관심 있는 그리드 오버레이만 남았어.

만약 당신이 저와 같다면, 당면한 작업을 수행하는 데 필요한 정보만 정확히 보고 싶을 수도 있으므로, 길 잃은 이모티콘을 배치하기 위한 줄 번호에만 집중할 수 있도록 트랙 크기 라벨을 비활성화할 것입니다.

그리고 이제 남은 줄 번호 라벨을 사용하면 이모티콘을 어디에 배치하고 싶은지 정확히 볼 수 있습니다: 열 트랙 라인 6과 행 트랙 라인 4에서.

내가 명시적으로 오른쪽 버튼을 클릭하고 문제가 있는 이모티콘에 대한 타일을 검사했기 때문에, 그것은 이미 나를 위해 선택되었고, 내 수정 사항을 테스트하기 위해 스타일을 편집하기 위해 바로 이동할 수 있다.

그리고 우리의 새로운 세 개의 패널 레이아웃을 사용하면 레이아웃 패널을 동시에 볼 수 있으며, 이는 패널 사이를 지속적으로 전환하지 않고 페이지에서 다른 스타일을 테스트하는 동안 보여주는 라벨이나 그리드 오버레이를 전환하고 싶을 때 좋습니다.

스타일 패널에서 스타일 속성 섹션을 클릭하고 새 속성인 그리드 영역을 추가할 것입니다.

그런 다음 콜론을 입력하여 새 속성의 값을 편집하여 행 트랙 라인 4와 열 트랙 라인 6에 대해 "4 / 6"을 입력할 수 있습니다.

완벽해, 내 이모티콘은 지금 내가 원하는 곳에 있어.

하지만 이제 그것에 대해 좀 더 생각해 보니, 나중에 그리드에서 행이나 열을 추가하거나 제거하더라도 이 이모티콘이 항상 이 구석에 있는지 확인하고 싶습니다.

행 트랙 라인 4와 열 트랙 라인 6의 값을 준 것과 같은 라벨에서, 나는 각각에 대해 두 번째 줄 번호 -3을 본다.

이 부정적인 줄 번호는 실제로 내가 명시적으로 정의한 그리드의 끝에서 내 이모티콘 세 개의 트랙 라인을 유지할 것이며, 내 상황에 완벽할 것이다.

그리드 영역 속성의 값을 이 새로운 값인 "-3 / -3"로 업데이트하고, 내 이모티콘이 여전히 올바른 위치에 있는지 확인하고, 다른 행을 추가하거나 그리드에서 다른 열을 제거하면 계속될 것입니다.

웹 인스펙터에 오는 이 새로운 오버레이는 내 페이지의 레이아웃을 빠르게 조정하는 데 도움이 되었으며, 기존 레이아웃을 이해하고 새로운 레이아웃을 디자인하는 데 좋습니다.

이제 중단점을 사용한 자바스크립트 디버깅의 개선에 대해 이야기해 봅시다.

스크립트의 경우, 우리는 종종 왜 스크립트가 우리가 생각하는 방식으로 작동하지 않는지 알아내려고 할 때 console.log로 시작합니다.

또는, 중단점을 시도해 본 적이 없다면, 그것들을 확인하는 것을 강력히 추천합니다.

그것들은 강력하며, 우리가 잠시 후에 볼 수 있듯이, 이전보다 훨씬 더 구성할 수 있다.

중단점을 처음 접한다면, 시작하는 가장 쉬운 방법은 소스 탭에서 일시 중지하고 싶은 줄에서 자바스크립트의 줄 홈을 클릭하는 것입니다.

이것은 도달하면 그 줄의 시작 부분에서 스크립트를 일시 중지하고 줄을 실행하기를 기다리는 중단점을 만듭니다. 한 번에 하나의 문으로 코드를 통과하거나 특정 문에 더 깊이 파고들 수 있습니다. 그리고 모든 단계에서 변수의 상태를 볼 수 있습니다.

하지만 브레이크포인트에는 훨씬 더 많은 것이 있어!

사실, 모든 경우에 하나씩, 다섯 가지 유형의 중단점이 있다.

디버거 문, 예외 및 주장에 대한 중단점이 있습니다; 자바스크립트 라인에서 설정할 수 있는 자바스크립트 중단점; 클릭, 시간 초과, 간격 또는 애니메이션 프레임과 같은 이벤트가 처리될 때 일시 중지되는 이벤트 중단점; DOM 노드와 관련된 작업이 발생할 때 일시 중지되는 DOM 중단점.

이것들은 요소 탭이나 웹 인스펙터의 노드 미리보기의 컨텍스트 메뉴에서 추가할 수 있습니다.

그리고 XMLHttpRequest 또는 Fetch와 같은 API를 통해 URL에 대한 네트워크 요청이 이루어질 때 일시 중지되는 URL 중단점.

중단점을 마우스 오른쪽 버튼으로 클릭하고 중단점 편집을 선택하여 자바스크립트 중단점을 구성할 수 있습니다.

여기서, 당신은 중단점의 다양한 측면을 제어할 수 있습니다.

이 옵션들 각각을 살펴봅시다.

우리는 중단점이 맞기 위해서는 반드시 사실이어야 하는 조건을 설정할 수 있다.

올해 새롭게, 우리는 이제 요소 탭에서 현재 선택된 DOM 노드를 참조하는 것과 같이 중단점 조건과 동작에서 표현식 내에서 웹 인스펙터의 콘솔 탭 API를 사용하는 것을 지원합니다.

어떤 경우에는, 중단점 조건은 몇 번의 반복이 완료될 때까지 멈추고 싶지 않은 루프 내부와 같이 중단점을 타격하기 전에 무시하는 여러 번으로 더 잘 표현될 수 있습니다.

이것은 중단점이 언제 발사될지 제어하기 위한 조건 외에 또는 그 대신에 사용될 수 있다.

조건 외에 사용될 때, 무시된 호출의 수는 조건이 충족된 경우에만 증가한다.

다음으로, 코드가 자바스크립트 소스에 인라인인 것처럼 변수에 액세스하는 컨텍스트에서 자바스크립트를 평가하는 것과 같이 중단점이 맞았을 때 취하는 작업을 정의할 수 있습니다. 템플릿 문자열 리터럴로 콘솔에 메시지를 쉽게 기록하고, 브레이크포인트가 맞았는지 들을 수 있도록 시스템 비프를 재생하고, 소스 탭의 세부 정보 사이드바의 프로브 패널에 저장된 결과로 평가되는 프로브 표현식을

올해 새로운, 자바스크립트 표현식을 지원하는 작업 유형은 사용자 제스처를 에뮬레이트하도록 설정할 수 있으며, 이는 일반적으로 비디오 재생과 같이 사용자가 시작해야 하는 자바스크립트 API와 상호 작용할 때 유용할 수 있으므로 웹 페이지의 소스에서 변경 사항을 구현하기 전에 새로운 동작을 빠르게 테스트할 수 있습니다.

여러 작업 유형을 포함하여 중단점을 사용자 정의하기 위해 이러한 작업을 여러 번 믹스 앤 매치할 수 있습니다.

마지막으로, 기본 웹 페이지를 수정하지 않고 테스트하기 위해 로깅이나 빠른 패치를 추가하고 싶은 상황에 대한 작업을 평가하고 수행한 후 중단점을 자동으로 계속할 수 있습니다.

중단점을 구성하기 위한 이러한 옵션은 믿을 수 없을 정도로 다재다능하며, 올해는 자바스크립트 중단점뿐만 아니라 모든 중단점 유형에서 사용할 수 있다는 것을 알려드리게 되어 기쁩니다.

이를 통해 버튼과 같은 특정 유형의 요소에 대한 클릭 이벤트만 일시 중지하거나 특정 URL에 대한 네트워크 요청이 이루어질 때 시스템 경고음 재생과 같은 강력한 중단점 조건을 설정할 수 있습니다.

모든 중단점 유형에서 사용할 수 있는 이러한 구성 옵션은 적절한 시간에 소음을 줄이거나 심지어 약간의 소음을 낼 수 있도록 도와줌으로써 이미 훌륭한 디버깅 도구를 더 좋게 만듭니다.

이제, 내 대시보드 웹 페이지로 돌아가서 이 새로운 도구가 패치를 쉽게 디버깅하고 테스트할 수 있는 문제를 살펴봅시다.

나는 최근에 내 예상 통근 시간을 다른 사람과 공유하는 데 사용하고 싶은 통근 타일에 버튼을 추가했다.

당신은 언제 늦을지 절대 알 수 없습니다.

안타깝게도, 공유 버튼을 클릭하면 아무 일도 일어나지 않습니다.

더 나쁜 것은, 내가 이 타일을 작업한 지 며칠이 지났고 이 버튼에 대한 클릭 이벤트를 어디서 처리하는지 기억나지 않는다.

다행히도, 이벤트 중단점을 사용하여 클릭 이벤트 핸들러에서 일시 중지하여 코드를 찾을 수 있습니다.

소스 탭에서 이벤트 중단점을 만들 수 있습니다.

내비게이션 사이드바의 중단점 섹션 오른쪽 상단에 있는 더하기 기호를 클릭하고 이벤트 중단점을 선택하면 새로운 이벤트 중단점을 정의할 수 있습니다.

이벤트를 클릭하도록 설정한 다음, Return 키를 눌러 새 중단점을 만들겠습니다.

이제 내비게이션 사이드바에 나열된 클릭 중단점이 표시됩니다.

이 이벤트 중단점은 버튼을 클릭하면 일시 중지되어야 합니다.

하지만 먼저, 저는 출퇴근에 대한 최신 예상 시간을 공유하고 있는지 확인하고 싶습니다. 그래서 새로 고침 버튼을 클릭하고 -- 이런!

공유 버튼을 클릭할 때만 일시 중지하고 싶어도 내 이벤트 중단점은 새로 고침 버튼을 포함한 모든 클릭 이벤트에 대해 실제로 일시 중지됩니다.

올해 사용할 수 있는 새로운 구성 옵션을 사용하여 중단점을 수정합시다.

중단점을 마우스 오른쪽 버튼으로 클릭하고 중단점 편집을 선택하여 편집할 수 있습니다.

여기서, 이벤트 중단점에 대한 구성 옵션이 있는 팝오버가 있습니다.

필요할 때만 일시 중지할 수 있도록 조건을 추가해야 합니다.

이 경우, 웹 인스펙터 콘솔 API를 사용하여 "$event"로 현재 이벤트를 가져오고 이벤트의 대상이 내 공유 버튼과 같은지 확인할 수 있습니다.

이 특정 버튼에 대한 중단점을 하드 코딩하는 대신, 다른 콘솔 API를 사용하여 이벤트의 대상이 "$0"인 요소 탭에서 현재 선택된 DOM 노드인지 확인할 것입니다.

구성 팝오버를 클릭할 수 있고 모든 변경 사항이 자동으로 적용됩니다.

나는 여전히 새로 고침 버튼을 클릭한 후 중단점에서 일시 중지되어 있으므로, 내 페이지에서 스크립트 실행을 재개하기 위해 계속 버튼을 클릭할 것이다.

이제 새로 고침 버튼을 클릭하면 출퇴근 시간이 업데이트되고 중단점이 맞지 않습니다.

하지만 공유 버튼을 마우스 오른쪽 버튼으로 클릭하고 요소 검사를 선택하여 선택한 요소로 만들면, 이제 공유 버튼과 빙고를 클릭할 수 있습니다!

중단점은 내가 원하는 곳에서 정확히 일시 중지되었고, 이제 공유 버튼이 작동하지 않는 이유를 알 수 있습니다. 이 기능을 작성하는 것을 잊었습니다.

중단점은 하루를 절약하거나 적어도 이 데모를 다시 구할 수 있으며, 소스로 돌아가서 구현하기 전에 변경 사항을 테스트하기 위해 지금 당장 공유를 패치할 수 있도록 도와줍니다.

라인 거터를 클릭하고, 중단점 표시기를 마우스 오른쪽 버튼으로 클릭하고, 중단점 편집을 선택하여 공유 기능에 중단점을 추가할 것입니다.

나는 이 중단점에 대한 조건이 필요하지 않지만, 조치를 추가하고 싶다.

기본 작업 유형인 자바스크립트 평가는 정확히 내가 여기서 원하는 것이다.

내 데이터로 이미 준비한 객체인 "this.shareData"로 "navigator.share"를 호출하는 작업에 자바스크립트를 추가할 것이다.

이 수정 테스트의 일환으로 스크립트를 일시 중지할 필요가 없으므로, 평가 후 자동으로 계속할 수 있습니다.

이전과 마찬가지로, 팝오버 외부를 클릭하면 변경 사항이 저장됩니다.

지금은 클릭 이벤트 중단점을 마쳤으니, 표시기를 클릭하여 비활성화해 봅시다.

또한 내 페이지에서 스크립트 실행을 재개하려면 계속 버튼을 클릭할 것이다.

이제 공유 버튼을 클릭할 수 있으며, 공유 메뉴가 표시됩니다.

내 공유 데이터가 정확한지 확인하기 위해 메모를 선택할 것이다.

이것은 정확해 보이기 때문에, 이제 소스 코드로 돌아가서 이 변경을 할 수 있습니다.

멋져!

중단점에 대한 이러한 개선은 console.log 문으로 내 소스를 후추할 필요 없이 솔루션을 식별하고 테스트할 수 있게 했다.

그리고 이제 내가 작업 해결책을 가지고 있기 때문에, 나는 내 소스에 수정 사항을 추가할 수 있다.

이제 감사를 위한 흥미진진한 새로운 기능을 살펴봅시다: 웹 인스펙터에서 바로 테스트를 만들고 편집할 수 있는 기능.

감사 탭의 각 테스트는 자바스크립트로 작성되며 검사된 웹 페이지에 대해 실행됩니다.

이러한 테스트는 잘못된 DOM 구조를 확인하거나, 디자인 시스템 규칙을 시행하거나, 접근성 속성을 놓치지 않았는지 확인하는 데 도움이 될 수 있습니다.

개별 테스트 외에도, 테스트 그룹을 공유하고 실행할 수 있습니다.

기본적으로 웹 인스펙터에는 두 개의 테스트 그룹이 있습니다: 감사 작업 방식과 지원하는 기능에 대한 투어를 제공하는 데모 감사와 모든 이미지 요소에 제목이나 대체 텍스트가 설정되었는지 확인하는 것과 같은 ARIA 사양에 따라 DOM 접근성 모범 사례의 하위 집합을 확인하는 접근성 테스트 제품군.

테스트를 선택하고 감사 이름 옆에 있는 시작 버튼을 사용하여 실행하거나, 탐색 사이드바 상단의 시작 버튼으로 모든 테스트를 실행할 수 있습니다.

테스트가 실행된 후, 각 테스트의 결과와 합격 및 실패의 전반적인 요약을 볼 수 있습니다.

실패가 있다면, 패치할 수 있도록 그 실패에 대한 정보를 볼 수 있습니다.

테스트를 공유하거나 외부 텍스트 편집기에서 편집하려면, 테스트를 내보내고, 결과 JSON 파일을 변경한 다음, 수정된 테스트를 웹 인스펙터로 다시 가져올 수 있습니다.

이 내보내기 및 가져오기 과정은 팀 전체 또는 커뮤니티와 테스트를 공유하는 데 좋습니다.

그리고 올해, 우리는 새로운 편집 모드로 테스트를 더 쉽게 만들고 편집할 수 있습니다.

내비게이션 사이드바 하단의 편집 버튼을 클릭하면 감사 탭이 편집 모드로 변환되며, 이제 새로운 테스트를 만들고 기존 테스트를 편집할 수 있습니다.

기본 데모 감사 및 접근성 테스트 그룹은 삭제하거나 편집할 수 없지만, 복제한 다음 복제본을 편집할 수 있습니다.

지금은 내비게이션 사이드바의 항목 만들기를 사용하여 새로운 테스트를 만드는 것을 살펴봅시다.

새로운 테스트 케이스 또는 테스트 케이스 그룹을 만들 수 있습니다.

지금은, 새로운 테스트 사례를 만드는 것을 살펴봅시다.

우리가 새로운 테스트 케이스를 만들 때, 당신은 그것이 내비게이션 사이드바에 추가되고, 당신이 편집할 수 있도록 테스트의 기본 내용이 나타나는 것을 볼 수 있습니다.

여기서 구성할 수 있는 몇 가지 다른 것들이 있습니다.

이름, 테스트에 대한 설명 및 테스트가 지원하는 최소 감사 버전은 일부 기능이 지원되지 않을 수 있는 이전 버전의 웹 인스펙터에서 감사가 실행되지 않도록 합니다.

설정 스크립트는 모든 최상위 테스트 또는 테스트 그룹 전에 실행될 자바스크립트입니다.

이를 통해 이 최상위 테스트의 모든 테스트가 의존하는 일반적인 설정 기능을 수행할 수 있습니다.

그리고 마지막으로, 테스트 자체에는 true 또는 false 또는 테스트 실행에 대한 더 많은 정보가 있는 결과 객체를 반환할 수 있는 자바스크립트 함수가 있습니다.

특별한 WebInspectorAudit 객체도 사용할 수 있으며, 이는 테스트 자체와 테스트 설정 모두에서 사용할 수 있는 테스트를 위해 특별히 추가 API를 노출합니다.

웹 인스펙터 참조에서 이 API에 대해 자세히 알아볼 수 있습니다.

변경 사항은 자동으로 저장되며, 이제 이 모든 것을 내보내지 않고 웹 인스펙터에서 수행할 수 있습니다.

하지만 이 테스트의 유연성에 대한 느낌을 얻기 위해, 나는 당신에게 그것들을 실제로 보여주고 싶습니다.

마지막으로 대시보드로 돌아가서 감사가 내 웹 페이지의 디자인 문제뿐만 아니라 몇 가지 유형의 접근성 문제를 파악하는 데 어떻게 도움이 될 수 있는지 봅시다.

감사 탭을 열 때 가장 먼저 하고 싶은 일은 기본 접근성 테스트 사례를 실행하는 것입니다.

이것들은 내가 일반적인 접근성 모범 사례에서 어떻게 하고 있는지에 대한 좋은 기준 읽기를 얻는 데 도움이 될 것이다.

테스트 그룹 옆에 있는 실행 버튼을 클릭하여 이 테스트를 빠르게 실행할 수 있습니다.

그리고 나쁘지는 않지만, 난 더 잘할 수 있어.

통과된 필터 버튼을 클릭하여 결과를 숨기고 테스트 실패를 볼 수 있으며, 테스트 실패만 볼 수 있습니다.

이거 고치자.

이 테스트는 실패한 DOM 노드 목록을 제공하여 호버에 나타나는 요소 탭에서 공개 버튼을 사용하여 해당 노드로 쉽게 이동할 수 있습니다.

요소 탭에서 DOM 노드를 마우스 오른쪽 버튼으로 클릭하여 추가 > 속성을 선택하고 새 제목을 입력하여 이미지에 제목을 추가하는 것을 테스트할 것입니다.

감사 탭으로 돌아가서 같은 테스트 그룹을 다시 실행하겠습니다.

그리고 이번에는, 내가 모든 시험을 통과했다는 것을 알게 되었다.

감사의 또 다른 좋은 용도는 내 웹 페이지가 내 디자인 표준을 충족하는지 확인하는 것이다.

이 프로젝트를 진행하는 동안 내 규칙 중 하나는 내가 모든 요소에 대해 작은 글꼴 패밀리 세트를 일관되게 사용하고 있는지 확인하는 것이었다.

올해 웹 인스펙터에 추가된 새로운 감사 편집 모드를 사용합시다.

내비게이션 사이드바 하단의 편집 버튼을 클릭하여 편집을 시작하겠습니다.

나는 지금 편집 모드에 있어.

여기서 사이드바 상단의 만들기 버튼을 사용하여 새로운 테스트 사례를 만들 수 있습니다.

나는 테스트 케이스의 기본 옵션을 유지하고, 내 테스트 케이스의 이름을 "Fonts"로 지을 것이다.

이제 나머지 테스트 케이스를 편집할 수 있습니다.

이 테스트 케이스가 무엇을 하는지 기억하는 데 도움이 되는 설명을 추가하는 것으로 시작하겠습니다.

이제 제가 준비한 실제 테스트 코드를 삽입해 봅시다.

내 시험에는 세 가지 주요 단계가 있을 것이다.

먼저, 나는 예상되는 글꼴 패밀리의 배열을 만들 것이다.

다음으로, 예상 글꼴 패밀리에 나열되지 않은 글꼴 패밀리로 내 페이지의 모든 요소를 수집할 것입니다.

마지막으로, 테스트에 실패한 요소를 포함하여 결과 객체를 반환하겠습니다.

감사 작성을 마치면, 내비게이션 사이드바 하단에 있는 완료를 클릭하세요.

이제 이름 옆에 있는 실행 버튼을 클릭하여 감사를 실행할 수 있습니다.

내 페이지의 노드 중 하나에 문제가 있는 것 같으니, 무엇이 잘못되었는지 살펴봅시다.

요소 탭에서 공개 버튼을 다시 사용하여 요소로 이동하여 스타일을 볼 수 있습니다.

음, 이건 창피해.

코믹 산스!

저는 정말 이 글꼴을 사용하고 싶지 않으니, 대신 ui-rounded 글꼴 패밀리로 변경해 봅시다.

이제, 나는 감사 탭으로 돌아가서, 내 테스트를 다시 실행하고, 완벽할 거야!

내가 하고 싶은 마지막 일은 내가 저지른 것과 같은 부끄러운 실수를 피할 수 있도록 동료들과 공유할 수 있도록 감사 내보내기 버튼을 사용하여 내 테스트를 내보내는 것이다. 비록 내가 이야기의 Comic Sans 부분을 생략할 수도 있지만.

내장된 접근성 테스트는 내가 놓친 문제를 포착할 수 있었을 뿐만 아니라, 내 웹 페이지에 대한 나만의 디자인 시스템 규칙을 시행하기 위한 테스트를 작성할 수 있었고, 팀이 변경 사항을 확인하기 전에 모든 사람이 같은 페이지에 있는지 확인하는 것이 훨씬 더 쉬워졌습니다.

그리고 그것으로, 우리는 웹 인스펙터에서 이러한 큰 새로운 기능을 다루었습니다!

CSS 그리드를 위한 새로운 오버레이는 콘텐츠가 제대로 보이는지 확인하는 데 도움이 됩니다.

중단점 개선을 통해 웹 인스펙터를 떠나지 않고도 문제에 대한 수정 사항을 더 쉽게 찾고, 디버깅하고, 테스트할 수 있습니다.

그리고 웹 인스펙터에서 새로운 감사 생성 및 편집을 통해 웹 페이지가 접근성 표준과 자체 표준을 충족하는지 확인하기 위해 테스트를 빠르게 만들 수 있습니다.

이러한 새로운 기능과 함께, 우리는 웹 인스펙터를 더욱 개선하기 위해 수많은 버그를 수정하고 개선했습니다.

제가 가기 전에, 제가 당신에게 남기고 싶은 몇 가지 유용한 자료가 있습니다.

웹 인스펙터가 Safari, Mail, App Store 및 macOS 및 iOS의 다른 많은 앱에서 사용하는 빠르고 개인적이며 안전한 웹 브라우저 엔진인 오픈 소스 WebKit 프로젝트의 일부라는 것을 깨닫지 못할 수도 있습니다.

Webkit.org에서 WebKit 프로젝트에 대해 자세히 알아볼 수 있으며, 웹 인스펙터의 그리드 오버레이에 대한 것을 포함하여 WebKit의 새로운 기능에 대한 블로그 게시물도 찾을 수 있습니다.

웹 인스펙터의 새로운 기능에 대한 블로그 게시물 외에도, 다양한 웹 인스펙터의 기능과 인터페이스를 다루는 문서를 찾을 수 있으며, 감사 및 중단점과 같이 오늘 논의한 많은 기능에 대해 자세히 설명합니다.

그 기능들은 내가 오늘 다룰 수 있었던 것보다 훨씬 더 깊이가 있으며, 더 알고 싶다면 문서를 확인하는 것이 좋습니다.

우리도 네 소식을 듣고 싶어!

버그를 발견하거나 웹 인스펙터를 개선할 수 있는 방법에 대한 제안이 있는 경우, 피드백 어시스턴트에 macOS에 대한 피드백을 제출하고 피드백 영역으로 WebKit을 선택하십시오.

또한 개발자가 모든 Mac, iPhone 및 iPad에 포함된 Safari 버전에 나타나기 전에 새로운 WebKit 및 Web Inspector 도구, 기능 및 수정 사항을 조기에 액세스할 수 있도록 설계된 Safari Technology Preview를 다운로드하도록 초대하고 싶습니다.

마지막으로, "Design for Safari 15"를 포함한 다른 훌륭한 세션을 확인하여 Safari의 아름다운 콘텐츠를 적응하고 디자인하는 방법을 배우세요; 그리고 "고급 웹 콘텐츠 개발"을 포함한 다른 훌륭한 세션을 확인하여 웹 페이지를 더욱 향상시키는 데 사용할 수 있는 새로운 JavaScript 및 WebAssembly 기능에 대해 알아보세요.

또한 WWDC 2020의 "웹 인스펙터의 새로운 기능" 세션을 살펴보고 웹 인스펙터에서 더 많은 개선을 확인하십시오.

개발자 앱에서 이 멋진 세션과 더 많은 것을 찾을 수 있습니다.

고마워!

♪