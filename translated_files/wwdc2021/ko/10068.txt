10068

♪ 베이스 음악 연주 ♪

♪

에릭 혼버거: 안녕하세요, 여러분, 그리고 오늘 우리와 함께 해주셔서 감사합니다.

우리는 당신을 위해 훌륭한 콘텐츠를 계획했습니다.

우리는 당신과 내가 함께 연구 및 관리 앱을 만들 수 있는 코드를 살펴볼 것입니다.

ResearchKit은 Apple이 GitHub 커뮤니티와 협력하여 유지하는 오픈 소스 iOS 프레임워크입니다.

참가자들이 신체 또는 인지 운동과 같은 활동을 수행하는 동안 동의를 수집하고, 설문 조사를 관리하고, 센서 데이터를 기록하기 위한 UI 요소를 제공합니다.

CareKit도 마찬가지로 완전한 오픈 소스 프레임워크이며, 환자 대면 치료 앱을 구축하는 데 도움이 되도록 설계되었습니다.

그것은 약을 복용하거나 의사에게 전화하는 것과 같이 환자가 수행하기를 원하는 작업을 예약하는 데 탁월합니다.

그것은 또한 건강 관련 데이터에 대한 안전한 지속성 계층을 제공하고 차트 작성을 위한 유틸리티를 가지고 있다.

이제, 지난 WWDC 세션에서, 우리는 종종 이 두 형제자매 프레임워크에 대해 단독으로 논의했지만, 올해는 환자들에게 더 나은 경험을 만들기 위해 어떻게 함께 사용할 수 있는지 보여줄 것입니다...

미안해.

우리가 그냥 - 나는 침묵을 지켰어야 했어.

우리 잘라야 해?

승무원: 아니, 그냥 대답해.

에릭: 야, 제이미. 어떻게 지내세요?

제이미: 안녕, 에릭.

네가 지금 WWDC를 준비하느라 바쁘다는 건 알지만, 우리의 물리 치료 학습 앱에 대한 자금이 방금 들어왔다고 말하고 싶었어!

이 최첨단 연구는 많은 사람들에게 도움이 될 것이다!

그래서, 당신은 우리가 앱의 첫 번째 회전을 바로 얻을 수 있다고 생각하나요?

에릭: 이봐, 제이미, 그건 -- 멋진 소식이야, 그리고 나는 -- 나는 그것에 대해 정말 신나.

문제는 우리가 Dub Dub 코드의 한가운데에 있다는 것이다.

제이미: 오, 그래서 너 벌써 코딩하고 있어?

그거 완벽해!

그래서, 그 앱은 "복구"라고 불릴 것이다.

그것은 참가자들이 수술 후 무릎을 강화하는 데 도움이 되는 물리 치료 앱이 될 것이며, 게임 체인저가 될 것입니다!

나는 많은 훌륭한 아이디어를 가지고 있지만, 먼저, 참가자들이 앱을 사용하기 전에 연구에 참여하는 것에 동의하는 것이 정말 중요하다.

우리는 그들에게 모든 법률을 설명해야 해, 하지만 난 정말 위협적이지 않은 방식으로 하고 싶어, 알지?

우리는 또한 참가자들로부터 서명을 받고 그들이 우리와 데이터를 공유하는 데 동의하도록 해야 합니다.

어, 잠깐만, 에릭.

나는 임상 팀으로부터 메시지를 받고 있어.

오, 와우. 첫 번째 참가자들은 월요일에 수술 후 석방될 것으로 보인다.

에릭, 지금 당장 온보딩을 시작할 수 있어?

나는 나머지 팀을 따라잡아야 하지만, 조금 있다가 다시 전화할게!

이건 정말 멋질 거야!

에릭: 알았어.

어... 그럼 좋아!

내 생각에 이건 이제 우리의 코드가 될 것 같아!

그래서 제이미가 그 회의에서 나오기 전에 우리가 온보딩을 끝낼 수 있는지 보자!

그래서, 이 세션을 위해, 온보딩과 동의에 집중합시다.

참가자에게 우리가 어떤 데이터를 수집할 것인지, 누가 그것에 접근할 것인지, 무엇을 위해 사용될 것인지, 얼마나 오래 유지될 것인지, 그리고 그 모든 것을 이해하기 쉽게 만드는 것은 좋은 연구에 가장 중요하다.

우리는 당신이 앱의 매우 중요한 부분을 바로 얻는 데 도움이 될 ResearchKit의 새로운 모범 사례를 보여줄 것입니다.

그리고 보너스로, 우리는 온보딩과 동의 흐름을 CareKit 기반 앱으로 바로 굽는 영리한 방법을 시연할 것입니다.

특히, 우리는 표준 CareKit 앱을 설정할 것이지만, 참가자들이 치료 계획의 내용이 공개되기 전에 온보딩을 완료해야 하는 방식으로.

그 동의와 온보딩 흐름의 일환으로, 우리는 참가자들에게 그들이 무엇을 해야 할지 알려주는 몇 가지 지침 단계를 구축할 것이다.

우리는 실제 동의 부분에 뛰어들기 전에 이와 같은 참가자를 안내하는 것이 그들의 경험을 개선하는 데 정말로 도움이 된다는 것을 발견했습니다.

우리는 당신에게 서명을 수집하는 방법을 보여줄 것이며, 또한 ResearchKit을 사용하여 온보딩의 일환으로 HealthKit, 알림 및 장치 움직임에 대한 승인을 요청하는 방법을 시연할 것입니다.

따라가고 싶다면, 세션 리소스에서 스타터 프로젝트를 찾을 수 있습니다.

Xcode를 열고 시작합시다!

여기가 우리가 시작할 곳이야.

우리는 오늘 네 개의 파일을 만질 것이다.

첫 번째는 AppDelegate입니다.

여기가 우리가 CareKit의 상점과 상호 작용할 곳이다.

Surveys.swift에서, 우리는 ResearchKit을 사용하여 몇 가지 설문 조사를 작성할 것입니다.

다음으로, 우리는 CareFeedViewController와 InsightsViewController를 가지고 있으며, 여기서 우리는 앱의 UI를 구축할 것입니다.

이제, 스타터 앱을 실행하면, 지금 거기에 실제로 많은 것이 없다는 것을 알게 될 것입니다.

콘텐츠가 없는 OCKDailyPageViewController일 뿐입니다.

그것은 우리가 며칠 사이에 뛰어다닐 수 있게 해주지만, 아직 아무것도 없다.

그 모든 것을 채우는 것이 우리의 일이 될 것이다.

여기 구석에 인사이트 탭도 있고, 우리는 3부에서 그것으로 돌아갈 것이다.

이제, 우리가 하고 싶은 것은 참가자의 피드에 동의 카드를 표시하는 것입니다.

그 동의 작업은 나머지 앱에 접근할 것이다.

그것이 완료될 때까지 다른 어떤 것도 나타나지 않을 것이며, 일단 완료되면, 다른 모든 작업이 나타나야 한다.

여기 AppDelegate.swift로 넘어가면, 우리의 첫 번째 단계는 온보딩을 위한 CareKit 작업을 지속하는 것입니다.

이제, 우리가 작업을 만들 때마다, 우리는 참가자의 피드에 작업이 얼마나 자주 나타날지 지정하는 일정을 정의해야 합니다.

온보딩을 위해, 우리는 그들이 동의를 마칠 때까지 매일 온보딩하라는 메시지가 표시되도록 일일 일정을 사용할 것입니다.

다음으로, 우리는 작업을 만들 것이다.

우리는 그것이 독특한 한, 우리가 원하는 무엇이든 될 수 있는 신분증을 준다.

무작위 식별자는 괜찮지만, 이 경우, 저는 여기 다른 파일에서 정의한 상수를 가지고 있습니다.

우리는 또한 우리가 방금 만든 일정을 통과해야 한다.

우리는 또한 몇 가지 지침을 명시하고 온보딩이 준수에 영향을 미치지 않아야 한다는 것을 나타낼 것입니다.

이것이 의미하는 바는 기본적으로 온보딩이 대부분의 CareKit 앱 상단에서 볼 수 있는 완료 링을 채우는 데 포함되지 않는다는 것입니다.

그리고 마지막으로, 우리는 그 일을 우리 가게에 계속할 수 있다.

우리는 그냥 가서 그것이 성공했는지 아닌지 알려주기 위해 메시지를 인쇄할 것이다.

좋아요, 우리는 가게에서 온보딩 작업을 할 준비가 되었고, 이제 참가자의 피드에 표시할 준비가 되었습니다.

우리는 CareViewController.swift를 통해 CareKit에 어떻게 표시되기를 원하는지 말할 것입니다.

여기서, 우리는 조금 전에 본 달력과 피드인 OCKDailyPageViewController를 하위 분류하고 있습니다.

우리는 date 메소드를 위해 prepare listViewController를 재정의하고 있습니다.

이 방법은 사용자가 새 날짜로 스와이프할 때마다 호출되며, 날짜를 검사하고, 그 날짜에 보여주고 싶은 것을 결정하고, 적절한 콘텐츠를 listViewController에 추가하는 것이 우리의 일입니다.

이제, 우리가 하고 싶은 첫 번째 일은 참가자가 온보딩을 마쳤는지 아닌지 확인하는 것입니다. 왜냐하면 우리는 그 질문에 대한 답변에 따라 다른 콘텐츠를 표시할 것이기 때문입니다.

조금 더 내려가서 그걸 할 수 있는 방법을 적어봅시다.

checkIfOnboardingIsComplete 방법 내에서, 우리는 OCKOutomeQuery를 만들고, 온보딩 작업과 관련된 모든 결과를 쿼리할 것입니다.

우리의 질의가 돌아오면, 우리는 어떤 결과가 발견되었는지 확인할 것이다.

만약 아무것도 없다면, 그것은 온보딩이 아직 끝나지 않았다는 것을 의미한다.

만약 있다면, 그것은 온보딩이 이미 완료되었다는 것을 의미한다.

우리는 바로 여기서 새로운 방법을 사용할 것이며, 온보딩이 완료되었는지 여부에 따라 동의 작업이나 다른 모든 작업만 보여줄 것입니다.

알았어. 지금까지는, 정말 좋아!

우리는 이제 참가자가 나머지 앱에 들어가기 전에 탑승하도록 요구하는 메커니즘을 갖추고 있습니다.

다음 단계는 온보딩 흐름을 설정하는 것이다.

바로 여기서, 우리는 ResearchKit 설문 조사를 제공하는 CareKit 작업 카드를 만들고 싶지만, 그렇게 하기 전에 실제로 표시할 것이 있도록 ResearchKit 설문 조사를 만들어야 합니다.

우리는 Surveys.swift에 들러서 그것을 처리할 것이다.

시작하기 위해 우리의 기능을 실행해 봅시다.

우리의 온보딩 설문 조사는 다섯 단계로 구성됩니다: 환영 단계, 지시 단계, 서명 단계, 권한 단계, 그리고 마지막으로 완료 단계.

첫 번째는 ORKInstructionStep이 될 환영 단계가 될 것이다.

우리는 오늘 이 지침 단계들을 많이 보게 될 것이다.

ResearchKit 단계를 만들 때마다, 우리는 그것에 고유한 식별자를 제공해야 합니다.

임의의 식별자를 포함하여 원하는 모든 패턴을 사용할 수 있습니다.

나는 이 주요 경로에서 영감을 받은 접근 방식이 나에게 정말 잘 작동한다는 것을 발견했다.

우리는 또한 헤더 이미지뿐만 아니라 제목과 세부 텍스트를 지정할 것입니다.

알았어.

그래서 다음: 2단계는 우리의 정보에 입각한 동의 단계가 될 것이며, 이것은 또한 지시 단계가 될 것이다.

하지만 이번에는, 우리는 몇 가지 바디 아이템을 추가할 것이다.

바디 아이템은 기본적으로 글머리 기호이지만, 우리는 글머리 기호 대신 이미지와 이 경우 SF 기호를 사용할 수 있는 옵션이 있습니다.

이 본문 항목은 참가자들에게 건강 데이터를 공유하도록 요청받을 것이라고 말한다.

그들이 작업을 완료하도록 요청받을 것이라고 말하는 두 번째 본문 항목을 만들고, 세 번째 항목은 서명을 제공하도록 요청받을 것이라고 알려야 합니다.

그들의 데이터가 비공개로 안전하게 유지될 것이라는 것을 상기시키기 위해 하나 더 추가합시다.

마지막으로, 우리는 이 바디 아이템을 지침 단계에 삽입할 것입니다.

그리고 그것은 지침을 다룹니다.

다음은 서명을 모으는 것이며, 다행히도 ResearchKit은 이 부분을 정말 쉽게 만든다.

서명은 ORKWebViewStep으로 수집할 수 있습니다.

showSignature AfterContent 속성을 true로 설정하면 ResearchKit이 단계 하단에 서명 상자를 표시하도록 합니다.

우리는 실제 동의 문서를 HTML로 제공할 수 있으며, 서명 상자 바로 위에 표시됩니다.

여기 있어; 서명은 꽤 빠르고 쉬웠어!

마지막 부분은 허가를 요청할 것이다.

이 네 번째 단계를 위해, 우리는 내 팀 동료 Pariece가 작년에 WWDC에서 소개한 HealthKitPermissionType으로 권한을 수집할 것이다.

두 세트의 HealthKit 유형을 지정해야 합니다: 하나는 우리가 쓸 수 있는 권한이 있고 다른 하나는 읽을 수 있는 권한이 있습니다.

올해, 우리는 두 가지 새로운 허가 유형을 도입할 것이다.

첫 번째는 ORKNotificationPermissionType이며, 알림을 표시하고, 앱에 배지를 부여하고, 소리를 재생할 수 있는 권한을 요청할 수 있습니다.

우리는 또한 장치 모션 데이터에 대한 액세스를 요청하는 데 도움이 될 ORKMotionActivity PermissionType을 도입하고 있습니다.

우리는 이 세 가지 모두를 네 번째 단계를 마무리하는 requestPermissionStep에 전달할 것이다.

다섯 번째이자 마지막 단계는 제이미의 연구에 참여해준 참가자에게 감사하는 완료 단계가 될 것이다.

이 모든 단계는 ORKOrderedTask 안에 함께 연결될 것이다.

우리는 ResearchKit이 제시하기 원하는 순서대로 단계를 통과한 다음 이 방법에서 작업을 반환할 것입니다.

알았어.

이제 전체 온보딩 및 동의 흐름을 정의했으므로 CareFeedViewController로 돌아가서 CareKit 기반 앱에서 표시하는 방법을 다시 살펴봅시다.

우리는 새로운 클래스인 OCKSurveyTaskViewController를 소개하고 있으며, 이 목적을 위해 특별히 제작되었습니다.

다른 모든 CareKit 뷰 컨트롤러와 마찬가지로, 우리는 eventQuery 및 storeManager와 함께 표시하고 싶은 작업의 ID를 전달합니다.

또한, 우리는 방금 만든 설문 조사와 ResearchKit 결과를 일련의 CareKit 결과 값으로 변환하는 폐쇄가 필요합니다.

우리는 2부에서 이 폐쇄를 더 자세히 재검토할 것이다.

현재로서는, 우리는 참가자가 온보딩을 완료한 날짜를 유지하는 것으로 충분하다고 말할 것이다.

우리는 또한 이 작업 카드를 우리의 피드에 추가하고 싶을 것이다.

이제, 실제로 한 단계가 더 있는데, 그것은 참가자가 온보딩을 마치면 피드가 다시 로드되도록 하는 것이다.

우리가 그것을 달성할 수 있는 한 가지 방법은 우리 자신을 설문조사 작업 뷰 컨트롤러의 대리인으로 설정하는 것이다.

그런 다음, 여기에서, 우리는 위임 방법, 설문 조사 작업 보기 컨트롤러 did Finish 작업을 구현할 수 있습니다.

이 방법의 본문에서, 우리는 온보딩이 성공적으로 완료되었는지 확인할 수 있습니다. 이는 기본적으로 참가자가 부분적으로 취소하지 않았다고 말하는 것입니다. 그들은 끝까지 가서 성공적으로 완료했습니다.

만약 그렇다면, 우리는 reload()를 호출하여 피드를 새로 고칠 수 있습니다.

좋아, 그래서 우리의 온보딩 카드가 준비됐어.

참가자가 온보딩을 완료하면, 우리는 OCKOutcome을 저장한 다음 피드를 다시 로드할 것입니다.

이거 좋아 보인다!

내 생각에 그건 -- 그게 전부야, 사실!

앱을 실행하고 이 모든 것이 작동하는지 확인해 봅시다.

앱 사용을 시작하기 전에 동의 요청을 받고 있다는 것을 알 수 있습니다.

그리고 그게 바로 우리가 원하는 거야!

여기서 시작 버튼을 탭하면, 우리가 방금 전에 만든 환영 단계가 우리를 맞이하는 것을 보게 될 것입니다.

다음 단계는 우리가 정의한 본문 항목에 대한 지시 단계입니다.

우리가 선택한 SF 심볼은 정말 생명을 불어넣는다.

다음은 서명 단계이므로, 여기서 아래로 스크롤하여 서명하겠습니다...

...그리고 나서 우리는 승인 단계로 넘어갑니다.

먼저, 우리는 HealthKit을 승인할 것입니다.

그냥 가서 그걸 허용해.

다음은 알림, 그리고 장치 움직임입니다.

마지막 페이지는 우리가 모두 끝났고 참여해 주셔서 감사하다는 것을 알려주는 완료 단계입니다.

그리고 이제 우리는 케어 피드로 돌아왔습니다.

우리는 이제 그것을 끝냈기 때문에 더 이상 동의를 완료하라는 프롬프트를 볼 수 없다는 점에 유의하십시오.

대신, 이것은 우리 앱의 모든 진정한 콘텐츠가 나타날 곳이다.

우리는 다음 세션에서 그것에 대해 할 것이다.

Siri야, 제이미에게 메시지를 보내서 우리가 온보딩과 동의를 끝냈다고 말해줄 수 있어?

Researchandcare.org에서 우리의 프레임워크에 대한 더 많은 정보를 찾을 수 있습니다.

소스 코드를 읽거나 기여하고 싶다면, 두 프레임워크 모두 GitHub에서 사용할 수 있습니다.

다음 세션에 다시 참여해 주세요.

나는 제이미와 정말 빨리 확인할 거야, 그리고 나서 2부에서 너와 다시 합류할게.

곧 보자!

♪