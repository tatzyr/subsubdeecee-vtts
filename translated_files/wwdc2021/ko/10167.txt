10167

♪ 베이스 음악 연주 ♪

♪

Beatriz Magalhães: 안녕하세요, 제 이름은 Bea이고, 저는 문서 팀의 휴먼 인터페이스 디자이너입니다.

제 동료 잭과 저는 Xcode에서 DocC 문서를 높이는 방법에 대해 이야기할 것입니다.

이제 훌륭한 문서를 작성하고 공유하는 것이 그 어느 때보다 쉬워졌습니다.

올해, 우리는 당신의 Swift 프레임워크에 대한 문서를 Xcode 13에 바로 통합했습니다.

이 세션에서, 우리는 우리가 만든 프레임워크의 문서를 향상시킬 것입니다: SlothCreator.

SlothCreator를 사용하여 자연에서 찾은 나무늘보를 분류하고 새로운 사랑스러운 가상 나무늘보를 만들 수 있습니다.

이 프레임워크에 대한 기존 문서를 더 좋게 만들기 위해, Xcode 13에서 사용할 수 있는 문서 페이지 유형과 콘텐츠에 가장 적합한 것을 선택하는 방법, 프레임워크에 대한 이야기를 전하기 위해 API의 순서를 구성하는 방법, 그리고 확장이 문서를 작성하는 방법에 유연성을 제공할 수 있는 방법을 살펴볼 것입니다.

새로운 Xcode 기능부터 시작하겠습니다: 문서 페이지 유형.

Xcode 13에는 "문서 카탈로그"라는 새로운 기능이 있어 문서 창이나 웹에서 볼 수 있는 세 가지 페이지 유형인 참조, 기사 및 튜토리얼을 만들 수 있습니다.

각 프로젝트는 독특하고 요구 사항이 다르지만, 일반적으로 다양한 문서 세트를 갖는 것이 좋다.

레퍼런스는 라이브러리의 개별 API에 대한 간결하고 심층적인 정보를 제공합니다.

이를 통해 텍스트 설명, 코드 스니펫 및 다른 기호 간의 관계를 추가할 수 있습니다.

이것이 당신의 문서의 중추입니다.

기사는 자유 형식의 콘텐츠가 있는 페이지이다.

그들은 프레임워크가 어떻게 작동하는지에 대한 큰 그림을 제공하고 특정 작업을 완료하는 방법을 설명하는 데 능숙하다.

그들은 종종 다른 상징들 사이의 점들을 연결한다.

튜토리얼은 프레임워크를 사용하는 프로젝트의 단계별 안내입니다.

실제로 구현함으로써 기호의 조합이 어떻게 함께 작동하는지 이해하는 것이 좋습니다.

모든 숙련도 수준의 프레임워크 채택자는 튜토리얼의 혜택을 받을 수 있지만, 이것은 또한 매우 초보자 친화적인 형식이라는 점은 주목할 가치가 있다.

이 세션에서, 우리는 기사에 초점을 맞출 것이다.

참조 및 튜토리얼에 대한 정보를 보려면, 다른 WWDC 세션을 확인하세요.

SlothCreator 문서를 개선하기 전에, 문서 창의 새로운 기능을 확인해 보겠습니다.

이제 네비게이터에서 모든 Apple 기술과 자신의 문서를 볼 수 있습니다.

이제, SlothCreator 문서의 현재 상태를 확인하겠습니다.

Xcode에서 SlothCreator Swift 패키지를 열 수 있습니다.

제품을 클릭한 다음 문서 작성을 클릭하여 문서 창을 불러올 것입니다.

SlothCreator 프레임워크 문서를 스크롤하면, 내 모든 기호가 이미 여기에 참조로 덮여 있다는 것을 알 수 있습니다.

그러나, 이전에 이 프레임워크를 사용해 본 적이 없는 사람의 관점에서 이 페이지에 접근한다면, 그것이 무엇을 하는지 한 눈에 명확하지 않다.

나는 큰 그림을 그리기 위해 최고 수준의 기사를 사용할 수 있다.

최상위 기사에는 간결한 요약 문장, 이미지 및 코드 스니펫과 같은 콘텐츠가 포함된 개요, 하단에는 강조하고 싶은 몇 가지 기호가 있는 주제 섹션이 있습니다.

기사를 추가하려면, 문서 카탈로그로 프로젝트를 설정해야 합니다.

문서 카탈로그는 내 모든 문서 파일을 포함하는 Xcode 네비게이터의 파일이다.

게다가, 그것은 내가 새로운 페이지 유형을 쓸 수 있게 해준다.

이를 통해 문서를 한 눈에 빠르게 액세스할 수 있으며 일상적인 작업 흐름에서 문서의 우선 순위를 더 쉽게 지정할 수 있습니다.

이렇게 하려면 SlothCreator 대상의 소스가 포함된 SlothCreator 소스 디렉토리를 마우스 오른쪽 버튼으로 클릭하고 새 파일을 선택할 수 있습니다.

그런 다음, 문서 카탈로그를 찾을 때까지 목록을 스크롤하겠습니다.

내 프레임워크 대상과 일치하도록 이름을 지을게: SlothCreator.

Xcode는 문서 카탈로그를 만들 때 최고 수준의 기사를 제공합니다.

프로젝트 네비게이터와 마크다운 모두에서 "SlothCreator"로 이름을 바꿀 것이다.

이제, 우리 기사를 시작합시다.

당신은 마크다운을 사용하여 기사를 작성합니다.

먼저, 나는 내 프레임워크가 한 문장으로 무엇을 하는지 설명하는 요약을 추가할 것이다.

다음으로, SlothCreator의 주요 기능에 대한 개요 제목 아래에 더 심층적인 정보를 추가하겠습니다: 연구, 관리 및 시각화.

마지막으로, 개발자들이 무엇을 보고 있는지 한 눈에 알 수 있도록 이미지를 추가할 것입니다.

해상도가 2배이고 다크 모드와 호환되거나 다크 모드 대안이 있는 이미지를 추가하는 것이 좋습니다.

파일에 대한 적절한 명명 규칙을 포함하는 것을 잊지 마세요.

먼저, 당신의 파일 이름: "sloth."

그런 다음, 당신의 이미지가 다크 모드에 있다면, 틸드와 "어두운"이라는 단어입니다.

그런 다음, 스케일 요소를 설명하기 위해 @2x.

그리고 마지막으로, 당신의 이미지 파일 형식은 이 경우 .png입니다.

이제 이미지가 올바른 크기이고 이름이 올바르게 지정되었는지 확인했으니, 파인더를 열고 자산을 문서 카탈로그의 리소스 폴더로 드래그할 것입니다.

다음으로, 나는 마크다운 기사에 내 이미지를 추가할 것이다.

먼저, 나는 느낌표를 추가했고, 그 다음에는 내 이미지에 접근할 수 있도록 괄호 사이에 설명을 추가했고, 마지막으로 괄호 사이의 파일 이름을 추가했다.

넌 내가 "@2x"나 "~dark"를 입력하지 않았다는 걸 눈치챘을 거야.

그것은 Xcode가 자동으로 이미지를 선택하기 때문에, 내가 입력해야 할 것은 이미지 이름 자체뿐이다.

좋아, 나는 내 최고 수준의 기사를 끝냈어.

내 문서를 작성해서 어떻게 생겼는지 보자.

제품을 클릭하고 문서 작성을 다시 선택하여 문서 창을 불러올 것입니다.

멋진 SlothCreator는 명확한 높은 수준의 요약, 이 프레임워크가 무엇인지에 대한 더 많은 맥락을 제공하는 개요, 그리고 프레임워크의 핵심 개념을 한 눈에 보여주는 이미지를 가지고 있습니다.

이제, 이전에 SlothCreator를 사용한 적이 없는 사람은 프레임워크가 무엇을 하는지에 대한 큰 그림을 빠르게 이해할 수 있다.

SlothCreator를 시작하는 방법에 대한 실행 가능한 첫 번째 단계를 제공함으로써 이 문서를 더 좋게 만들 수 있습니다.

작업 기사가 그것에 도움이 될 수 있다.

나는 미리 작업 기사를 준비했고, Finder를 열고 SlothCreator 문서 카탈로그로 드래그할 것이다.

이 기사는 사람들에게 이 프레임워크의 핵심 요소인 나무늘보를 만들고 돌보는 방법을 가르치는 것을 목표로 한다.

구조 측면에서, 그것은 최상위 기사와 매우 유사하다.

두 유형 모두 텍스트, 이미지 및 코드 스니펫을 포함할 수 있습니다.

여기서 가장 큰 차이점은 내용에 있다.

이러한 차이점을 보려면, 제품 및 빌드 문서를 선택하여 문서를 다시 작성할 것입니다.

그런 다음, 내 문서 창 네비게이터에서, 나는 나무늘보로 시작하기를 선택할 것이다.

좋아요, 이 기사는 나무늘보의 특성과 특성을 설명함으로써 나무늘보를 만드는 방법에 대한 더 많은 맥락을 제공합니다.

그것은 또한 나무늘보를 돌보고 적절한 서식지를 형성하는 방법에 대한 실행 가능한 단계를 제공한다.

이것은 사람들이 SlothCreator를 훨씬 더 빨리 채택하는 데 도움이 될 것이다.

요약하자면, 지금까지, 나는 당신이 작성할 수 있는 모든 다른 유형의 문서와 각각을 사용할 수 있는 것에 대해 이야기했습니다.

모든 문서 파일을 같은 장소에 넣고 새로운 유형의 문서를 작성할 수 있는 "문서 카탈로그"라는 새로운 Xcode 13 기능을 도입했습니다.

그리고 나는 더 많은 맥락을 제공하고 특정 작업에 뛰어들어 내 문서를 향상시키는 두 개의 기사를 만드는 데 그것을 사용했다.

그 기사들을 작성하기 위해, 나는 Markdown과 우리가 현재 문서를 위해 지원하고 있는 새로운 파일을 사용했다.

이제, 저는 그것을 잭에게 넘길 것입니다. 그래서 그는 당신의 기호를 정리하고 문서 확장을 만들어 문서를 더 좋게 만들 수 있는 방법에 대해 이야기할 수 있습니다.

잭 로렌스: 고마워, 비, 그 기사들은 멋져 보여.

이제 새로운 페이지를 추가했으므로, 프레임워크를 통해 모든 사람을 안내할 수 있는 또 다른 방법이 있습니다.

이전에, Bea는 SlothCreator에 대한 개요가 있는 프레임워크 페이지를 만들었다.

페이지 하단에서 DocC 컴파일러는 Sloth 프레임워크의 모든 문서가 포함된 주제 섹션을 자동으로 만들었습니다.

이것은 좋은 시작이지만, 나는 우리가 그것을 개선할 수 있다고 생각한다.

그러니 한 걸음 물러서서 우리가 하고 싶은 이야기에 대해 생각해 봅시다.

SlothCreator API는 세 가지 주요 범주로 나뉩니다: 나무늘보를 연구하고 만드는 것, 나무늘보의 건강과 행복을 돌보는 것, 그리고 서식지에서 나무늘보를 보는 것.

이 카테고리를 사용하여 SlothCreator에서 문서 페이지를 구성할 수 있습니다.

여기 프레임워크의 최상위 페이지가 있습니다.

먼저, 나는 가장 중요한 페이지를 제외한 모든 페이지를 제쳐둘 것이다.

나중에 다른 페이지에서 속도와 색상과 같은 지원 유형을 구성할 수 있습니다.

다음으로, 나머지 페이지를 SlothCreator의 기능을 중심으로 그룹화할 것입니다.

그리고 마지막으로, 나는 그룹과 페이지를 가장 낮은 것부터 가장 진보된 것까지 분류할 것이다.

이 새로운 조직은 훨씬 더 친근해 보이며, 특정 기능에 관심이 있는 프레임워크 채택자들은 어디를 봐야 할지 알게 될 것이다.

이제 우리는 이러한 테마를 사용하기 위해 프레임워크에 대한 문서를 업데이트할 것입니다.

나는 SlothCreator 프로젝트와 빌드된 문서를 가지고 있다.

컴파일러는 기본 그룹이 있는 각 페이지에 주제 섹션을 자동으로 추가합니다.

하지만 추가 마크다운으로 커스터마이징할 수 있습니다.

이전에, Bea는 프레임워크 기사로 문서 카탈로그를 만들었다.

프로젝트 네비게이터에서, 나는 문서 카탈로그 안에 있는 SlothCreator Markdown 파일을 선택할 것이다.

템플릿에는 이미 내가 작성할 주제 섹션이 포함되어 있다.

"필수"로 시작해서, 나는 3단계 제목에서 그룹 제목을 업데이트할 것이다.

그런 다음 그룹에 포함할 링크 목록을 추가하겠습니다.

"시작하기" 기사와 나무늘보 유형으로 시작하겠습니다.

기사에 연결하려면, 문서 URL 체계를 사용하여 확장자 없이 파일 이름을 사용합니다.

기호에 연결하기 위해, 나는 기호의 이름을 더블 백 틱으로 둘러쌉니다.

이전에 만든 카테고리를 사용하여, 다른 모든 문서 페이지도 그룹으로 구성할 것입니다.

이제 나는 재건하고 변화를 살펴볼 것이다.

제품 메뉴에서, 나는 재구축할 문서 빌드를 선택할 것이다.

문서가 작성되었지만, DocC에 의해 생성된 진단을 볼 수 있으며, 여기에 링크를 잘못 입력한 것 같습니다.

자동 완성이 그것을 처리하도록 하자, 그래서 나는 그것이 옳다고 확신한다.

이제 제품 메뉴를 사용하여 문서를 다시 작성하여 모든 문제를 해결했는지 확인할 것입니다.

멋져, 더 이상 경고는 없어.

문서 창의 프레임워크 페이지에서, 우리의 새로운 "시작하기" 기사는 모두가 보게 될 첫 번째 주제이며, 복잡성 순서대로 SlothCreator의 주요 주제가 그 뒤를 잇습니다.

왼쪽의 문서 네비게이터도 각 페이지의 주제 섹션과 일치하도록 업데이트되므로, 내가 찾고 있는 페이지를 빠르게 찾을 수 있습니다.

이제 문서를 정리하는 방법을 검토해 봅시다.

모든 페이지는 자동으로 구성되며, 주제 섹션으로 사용자 정의할 수 있습니다.

주제 섹션을 만들려면, 2단계 주제 제목을 추가하세요.

그런 다음, 3단계 제목이 있는 그룹을 추가한 다음, 현재 페이지 아래에서 구성하고 싶은 다른 페이지에 대한 링크 목록을 추가하세요.

클래스, 구조, 열거 또는 프로토콜과 같은 컨테이너 기호와 함께 모든 기사에 주제 섹션을 추가할 수 있습니다.

프레임워크에 대한 문서를 구성할 때, 가장 중요한 기능과 테마, 그리고 개발자가 앱을 만들기 위해 함께 사용할 수 있는 API를 고려하십시오.

초점과 명확성을 더하기 위해 기본 문서 아래의 지원 페이지를 이동하세요.

그리고 기초부터 시작한 다음 점진적으로 복잡성을 도입하세요.

이제 프레임워크 페이지에서 그룹을 사용자 정의했으므로, 유형과 구성원을 포함하여 SlothCreator의 모든 문서를 정리하고 싶습니다.

문서 확장은 API에 대한 문서를 작성하는 방법을 선택할 수 있는 유연성을 제공합니다.

소스 코드에 바로 사용자 지정 주제 섹션을 추가할 수 있지만, 이 추가 문서가 별도의 파일에 있다면 시간이 지남에 따라 검토하고 유지하는 것이 더 쉬울 것이라고 생각합니다.

그리고 나는 그것을 하기 위해 문서 확장을 사용할 수 있다.

먼저, 나는 새로운 마크다운 파일을 만든다.

제목에 있는 링크 구문을 사용하여 API와 연결한다.

다음으로, 소스 코드의 초점과 명확성을 개선하기 위해, 요약 및 토론과 같은 기본 내용을 코드에 남겨두고 주제 섹션을 추출할 것입니다.

DocC가 빌드할 때, 각 소스 주석과 해당 문서 확장을 단일 문서 페이지로 병합합니다.

확장을 사용하면 문서를 작성하고 검토하고, 프레임워크의 생성된 인터페이스를 개선하고, 더 나은 문서 읽기 경험을 제공하는 것이 간단합니다.

이제 SlothCreator의 문서를 향상시키기 위해 문서 확장을 추가하겠습니다.

먼저, 변경하기 전에 Sloth 페이지를 살펴보겠습니다.

나는 Sloth 유형에 대한 문서 의견을 가지고 있고, 또한 구축된 문서도 가지고 있다.

내가 소스 코드에 쓴 문서는 멋져 보이지만, 주제 섹션은 개선될 수 있으며, 나는 문서 확장에서 그것을 할 수 있다.

프로젝트 네비게이터에서 문서 카탈로그를 마우스 오른쪽 버튼으로 클릭하여 새 파일을 추가할 것입니다.

템플릿 선택기에서 확장 파일 템플릿을 선택하고 이름을 "Sloth"로 지겠습니다.

다음으로, 제목의 링크를 사용하여 확장 파일을 나무늘보 유형에 연결할 것입니다.

URL에 모듈 이름을 포함시켜야 합니다.

이전에 내 동료 Bea가 최상위 프레임워크 기사를 만들기 위해 이 구문을 사용했기 때문에 이것은 친숙해 보일 수 있다.

그런 다음 주제 섹션에 몇 가지 맞춤형 그룹을 추가하겠습니다.

마지막으로, 결과를 확인하기 위해 제품 > 빌드 문서를 사용하여 다시 작성할 것입니다.

내가 소스 코드에 쓴 내용은 여전히 맨 위에 있으며, 문서 파일에서 만든 주제 섹션은 그 다음에 추가됩니다.

네비게이터에서 페이지를 확장하면, 네비게이터도 업데이트됩니다.

Bea와 내가 만든 변화는 끝났고, 우리는 그것들을 세상과 공유할 준비가 되어 있다.

이 문서는 Xcode에서 멋지게 보이며, 누구나 Swift 패키지를 다운로드한 후 만들 수 있습니다.

또한 네비게이터의 내보내기 버튼을 사용하여 Swift 패키지를 다운로드하거나 빌드하지 않고도 Xcode에서 문서를 탐색하는 데 사용할 수 있는 아카이브를 내보낼 수 있습니다.

그리고 모든 사람이 접근할 수 있도록 하고 싶다면, 웹에 문서를 게시할 수도 있습니다.

그리고 당신은 더 많은 것을 배우기 위해 이 관련 세션을 확인할 수 있습니다.

이제, Swift 프레임워크에 대한 문서를 어떻게 향상시킬 수 있는지 검토해 봅시다.

먼저, 프레임워크를 소개하고 API가 어떻게 함께 작동하는지 설명하는 기사를 만드세요.

다음으로, 내비게이션을 개선하기 위해 문서를 그룹으로 구성하세요.

마지막으로, 문서 확장 파일의 API 참조에 깊이와 세부 사항을 추가하십시오.

더 나아가고 싶다면, 이 두 가지 관련 세션에서 튜토리얼을 통해 웹에 게시하고 독자를 단계별로 안내하는 방법을 배울 수 있습니다.

Xcode 13은 문서에 대한 엄청난 업데이트이며, 우리는 당신이 게시하는 것을 보게 되어 매우 기쁩니다.

봐줘서 고마워!

♪