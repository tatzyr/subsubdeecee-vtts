10264

안녕하세요, 저는 니키 브라우어입니다.

저는 연필과 종이 팀의 엔지니어입니다.

그리고 오늘, 나는 너에게 퀵 노트를 채택하는 방법을 보여줄 거야.

퀵 노트는 iOS와 macOS에서 메모를 할 수 있는 기능을 간소화할 뿐만 아니라 여러 앱과 웹의 콘텐츠를 한 곳에서 연결하는 것을 목표로 하는 새로운 시스템 차원의 메모 경험입니다.

이 기능을 통해 사람들은 어디서나 메모를 쉽게 불러올 수 있으며, 가장 좋은 점은 이미 존재하는 API를 사용한다는 것입니다: NSUserActivity.

그것이 친숙하게 들린다면, 그것은 Handoff와 같은 다른 기능에 사용되기 때문이다.

오늘, 나는 너에게 퀵 노트를 실시간으로 보여줄 것이다.

시스템에서 어떻게 작동하는지 그리고 NSUserActivity를 채택하는 방법에 대해 이야기하겠습니다.

마지막으로, 당신이 최고의 경험을 만들 수 있도록 몇 가지 모범 사례를 검토하겠습니다.

새로운 퀵 노트 기능을 보여주기 위해, 저는 Apple Fitness+를 사용하여 몸매를 갖추기 위한 행동 계획을 살펴볼 것입니다.

나는 아직 가입하지 않았고, 실행 계획 없이는 하고 싶지 않다.

노트 앱으로 전환해야 하는 대신, 이제 연필을 사용하여 화면의 오른쪽 하단 모서리에서 위로 스와이프하여 새로운 퀵 노트를 만들어 시작할 준비가 되었을 때 Apple 웹사이트에는 내가 알아야 할 모든 정보가 있다는 것을 기억할 수 있습니다.

또한 퀵 노트 상단에 새로운 추가 링크 메뉴가 있으며, 이 콘텐츠로 쉽게 돌아갈 수 있도록 웹사이트에 링크를 추가할 것입니다.

Picture-in-picture와 마찬가지로, 퀵 노트 창은 장치의 어느 구석으로든 자유롭게 이동할 수 있습니다.

나는 또한 창을 기본 크기에서 가장 작은 크기로, 가장 큰 크기까지 확장하기 위해 꼬집을 수 있다.

메모를 끝내면, 왼쪽 상단 모서리에 있는 완료 버튼을 누를 수 있습니다.

하지만 아직 추가해야 할 것들이 있어서, UI를 오른쪽으로 스와이프해서 화면 측면에 집어넣을 거야.

물론, 웹사이트 외에도, 그것은 앱과도 작동한다.

지도를 사용하여, 나는 HIIT 운동을 연습하기에 좋은 장소를 찾을 수 있었다.

내가 숨겨두었다는 메모를 꺼내서 이 위치를 내 메모에 추가할게.

더 많은 공간을 그리려면, 빠른 메모 도구 모음에서 메모 아이콘을 탭하여 메모 앱에서 메모를 확인하세요.

여기서, 나는 이미지와 링크를 그릴 수 있는 능력을 활용할 것이다.

내가 여기에 추가한 링크는 그냥 오래된 링크가 아니다.

물론, 그것들을 탭하면 사파리나 지도로 갈 수 있지만, 이제 빠른 메모 제안으로 이 앱에서 내 메모로 돌아갈 수 있습니다.

Apple Fitness+에 대한 사이트로 가면, 퀵 노트 제안 UI가 오른쪽 하단 모서리에 표시됩니다.

이것을 두드리면 내가 있던 곳으로 바로 돌아갈 것이고, 내 목표는 일주일에 4~5번 HIIT 운동을 하는 것이라는 메모를 추가할 것이다.

나는 여기 iPad에서 메모를 만들었지만, Mac과도 크로스 플랫폼으로 작동한다.

Apple Fitness+에 대한 링크를 방문하면, 빠른 메모 제안 UI가 내 Mac에도 나타날 것이다.

내가 그것을 클릭하면, 노트 앱의 메모로 이동될 것이다.

이제 퀵 노트를 만났으니, 그것이 어떻게 작동하는지에 대해 이야기해 봅시다.

NSUserActivity 객체는 앱의 상태를 캡처하고 나중에 사용할 수 있는 방법을 제공합니다.

사용자 활동 객체는 웹 페이지를 보거나 앱 콘텐츠를 보는 것과 같이 무슨 일이 일어나고 있는지에 대해 생성되며, 각 앱은 현재 활동을 시스템에 등록합니다.

그런 다음 시스템은 이러한 활동을 가져와 핸드오프와 같은 기능으로 보냅니다.

이 시스템에서 피기백을 연결하는 빠른 메모.

핸드오프, 스포트라이트 및 리마인더로 가는 것 외에도, 등록된 활동도 퀵 노트로 전송됩니다.

이것이 링크 추가 메뉴에 링크가 표시되는 방식과 빠른 메모 제안을 트리거하는 방법입니다.

NSUserActivity는 이미 앱 콘텐츠를 퀵 노트와 연결하기 위한 내구성 있는 식별자 역할을 하는 세 가지 속성을 가지고 있습니다.

이 생태계의 일부가 되려면, 다음 속성 중 하나 이상을 설정해야 합니다: targetContentIdentifier, persistentIdentifier 및 webpageURL.

당신이 선택하는 것은 당신이 지원하고 싶은 다른 기능에 달려 있습니다.

targetContentIdentifier는 상태 복원 중에도 사용됩니다.

이 속성은 iPad에서 실행되는 앱을 위한 훌륭한 멀티태스킹 경험을 제공합니다.

persistentIdentifier는 또한 시스템의 스포트라이트 인덱스에서 앱 콘텐츠를 식별하는 데 사용되며, 웹 페이지 URL은 핸드오프 중에 웹 대체에도 사용됩니다.

퀵 노트 링크가 작동하려면, 식별자가 가져야 할 몇 가지 속성이 있습니다.

그들은 그 콘텐츠에 대해 독특해야 하고, 모든 장치에서 작동하도록 글로벌해야 하며, 시간이 지남에 따라 해당 콘텐츠에 대해 작업할 수 있을 만큼 안정적이어야 합니다.

활동에 대한 독특하고 글로벌하며 안정적인 식별자를 갖는 것은 빠른 메모 제안을 가능하게 한다.

Apple Fitness+에 대한 웹사이트로 돌아왔을 때, 빠른 메모 제안 UI가 나타나는 이유는 한 시간 또는 6개월 전에 생성된 링크의 식별자가 여전히 웹사이트의 식별자와 일치하기 때문입니다.

NSUserActivity를 채택하는 세 가지 주요 단계가 있습니다: 앱의 Info.plist에서 지원되는 활동을 선언하고, 다른 시점에 화면에 있는 것을 설명하는 사용자 활동을 만들고 등록하고, 활동을 계속하기 위해 들어오는 요청을 처리합니다.

이것은 퀵 노트의 링크나 다른 장치에서 올 수 있다.

Info.plist 파일의 NSUserActivityTypes 키에서 앱이 지원하는 활동 유형을 선언하십시오.

시스템은 해당 키의 정보를 사용하여 앱이 주어진 사용자 활동 객체를 처리할 수 있는지 여부를 결정합니다.

NSUserActivity 객체를 만들려면, plist에 등록된 활동 유형 문자열 중 하나를 사용하고 제목을 설정하십시오.

앞서 언급한 세 개의 식별자 중 하나 이상을 설정하세요.

이 식별자 중 하나는 퀵 노트에 사용할 수 있습니다.

이 예에서, 당신의 앱이 상태 복원을 지원하는 데 관심이 있는 iPad 앱이라고 가정해 봅시다.

targetContentIdentifier를 설정하세요.

활동을 계속하는 데 필요한 앱별 상태 정보로 userInfo 속성을 설정하십시오.

그런 다음, 그것을 응답자에게 첨부하세요.

현재 앱 활동을 수동으로 관리하여 활동을 등록해야 하는 대신, 시스템이 처리하도록 하세요.

응답자의 활동을 설정함으로써, 객체는 UIKit과 AppKit에 의해 관리됩니다.

NSUserActivity는 크로스 플랫폼이기 때문에, 이 코드는 iOS와 macOS 모두에서 작동합니다.

마지막 단계는 들어오는 활동을 수신하고 앱에서 상태를 복원하는 것입니다.

링크를 탭하면, 퀵 노트는 앱을 실행하고 UIWindowSceneDelegate의 장면(willContinueUserActivityWithType) 메소드를 호출합니다.

이것은 당신의 앱이 활동을 받고 있다는 피드백을 줄 수 있는 곳입니다.

그런 다음 퀵 노트는 장면에서 앱에 활동을 제공합니다(userActivity를 계속하세요:).

여기에서 뷰 컨트롤러, 뷰를 설정하고 userInfo 사전을 사용하여 활동을 복원하고 계속할 수 있습니다.

핸드오프의 경우, 장치가 연결할 수 없는 경우, 시스템은 오류 메시지를 표시할 수 있는 장면(didFailToContinueUserActivityWithType)을 호출합니다.

이 방법은 퀵 노트에 호출되지 않지만, NSUserActivity의 균형 잡힌 채택을 위해 구현하는 것이 좋습니다.

macOS 앱의 경우, 앱 대리자에서 동등한 애플리케이션(willContinueUserActivityWithType), 애플리케이션(continue userActivity) 및 애플리케이션(didFailToContinueUserActivityWithType)을 구현하십시오.

NSUserActivity 채택에 대한 자세한 내용은 WWDC 2014 비디오 "iOS 8 및 OS X에서 핸드오프 채택"을 확인하세요.

NSUserActivity는 다른 많은 기능의 기초이기 때문에 게이트웨이이다.

퀵 노트를 위해 그것을 채택함으로써, 이것은 당신이 얻을 수 있는 다른 모든 것입니다.

핸드오프는 기본적으로 켜져 있는 반면, 다른 것들은 옵트인이다.

사람들이 앱에서 문서에 대한 알림을 만들거나, 앱의 블로그 게시물을 스포트라이트에 표시하거나, 다중 창 처리를 개선할 수 있기 때문에 앱은 훨씬 더 강력할 수 있습니다.

자세한 내용은 최신 문서와 관련 WWDC 비디오를 확인하세요.

마지막으로, 퀵 노트를 위해 NSUserActivity를 채택하기 위한 몇 가지 모범 사례를 살펴봅시다.

저는 네 가지 행동을 살펴볼 것이며, 이들 각각에 대해 앱에서 그것들을 구현하는 이유와 방법에 대해 이야기할 것입니다.

제목 속성은 활동을 위해 사람이 읽을 수 있는 문자열이다.

이것은 링크 추가 메뉴에 나타나는 문자열입니다.

즉, 제목은 내용의 훌륭하고 서술적인 표현을 제공해야 한다.

일반적으로, 문서나 항목의 제목을 직접 사용하는 것이 좋습니다.

식별자가 독특하고, 글로벌하며, 안정적일 수 있도록 돕는 몇 가지 팁이 있습니다.

장치별 데이터를 사용하지 마세요.

이 사진의 식별자가 로컬 파일 경로인 경우, 링크는 생성된 장치에서만 작동하도록 보장됩니다.

세션 ID나 특정 보기 속성과 같은 일시적인 정보를 피하세요.

사진의 제목은 암시적으로 독특할 수 있지만, 수정할 수 있다면, 이 콘텐츠로 다시 이동하려고 할 때 존재할 것이라는 보장은 없습니다.

사진에 앱의 저장된 UUID를 사용하는 것과 같이 장기적으로 생각하면 콘텐츠가 이동되었더라도 앱이 빠른 메모 링크를 복원할 수 있습니다.

URL은 앱 콘텐츠의 고유 식별자가 될 수 있지만, 종종 일시적인 상태 정보를 포함하며, 이전에 다루었던 식별자 지침을 어기며, 이는 과도합니다.

빠른 메모는 웹 페이지 URL보다 targetContentIdentifier 또는 persistentIdentifier를 선호합니다.

웹 페이지 URL은 지침을 따르는 한 사용하기에 완벽하게 좋습니다.

앱이 상태 복원과 Spotlight 모두에 NSUserActivity를 사용하는 경우, targetContentIdentifier와 persistentIdentifier에 동일한 값을 사용하세요.

앱을 칭찬하는 웹사이트가 있다면, URL을 두 번째 대체 식별자로 추가하세요.

이렇게 하면, 앱이 설치되지 않은 경우, 링크를 열면 웹사이트로 리디렉션됩니다.

또 다른 중요한 관행은 앱의 현재 NSUserActivity가 최신 상태인지 확인하는 것입니다.

이것은 무슨 일이 일어나고 있는지 따라잡는 것을 의미한다.

가장 좋은 방법은 다른 사진을 보도록 선택하는 것과 같은 활동 변경을 감지할 때 제목과 식별자 속성을 정확하게 유지하는 것입니다.

활동 사례를 재사용하는 것은 권장되지 않습니다.

새로운 사진과 같은 새로운 콘텐츠가 있을 때, 새로운 활동을 만드세요.

UIKit과 AppKit이 예제 코드에서 보여준 것처럼 viewControllers 또는 뷰와 같은 응답자에 활동을 첨부하여 현재 앱 활동을 처리하도록 하십시오.

응답자에 첨부하는 것이 앱에서 작동하지 않는 경우, 현재 앱 활동은 적절한 시간에 becomeCurrent() 및 resignCurrent()를 호출하여 수동으로 관리할 수 있습니다.

예를 들어, 사진 보기를 마치면, 앱은 현재 활동에서 resignCurrent()를 호출하고, 새 사진을 선택하면, 앱은 새 활동에서 becomeCurrent()를 호출합니다.

더 나은 성능을 위해, 활동의 "needsSave" 속성을 활용하세요.

앱에서 활동을 제대로 복원하려면 특정 보기 속성이 필요할 수 있습니다.

예를 들어, 지도를 볼 때의 위치와 줌.

이러한 속성은 활동과 함께 전달될 수 있지만, 모든 제스처 후에 업데이트할 때 오버헤드가 있습니다.

활동을 업데이트하는 대신, needsSave를 true로 설정하세요.

시스템이 활동을 퀵 노트 링크 또는 핸드오프로 보내야 할 때, 앱이 필요에 따라 모든 속성을 업데이트할 수 있도록 대리인 콜백 userActivityWillSave가 호출됩니다.

이 콜백은 활동을 복원하는 데 도움이 되는 속성을 포함하도록 userInfo 사전을 업데이트할 수 있는 곳입니다.

준비해야 할 몇 가지 호환성 문제가 있다.

앱이 업데이트되면 어떡하지?

앱에서 두 개의 링크로 이 메모를 하세요.

링크는 장치에 있는 것보다 이전 또는 최신 버전의 앱에서 가져온 것일 수 있습니다.

완벽하게 괜찮지만, 링크는 여전히 작동해야 한다.

호환성 처리를 준비하려면, 이전 버전의 앱에서 수신 활동을 처리할 수 있는 지원을 받고, 최신 버전의 활동을 받을 때 정상적으로 실패합니다.

이것은 당신의 활동을 버전화하거나, 키 사전을 사용하고, 키가 누락되거나 이해하지 못하는 키를 갖는 것을 허용함으로써 지원될 수 있습니다.

콘텐츠가 더 이상 존재하지 않는다면 어떨까요?

활동이 연결된 콘텐츠는 삭제되거나 이동되었을 수 있습니다.

앱으로 돌아갈 때, 삭제된 경우 오류 메시지를 표시하거나 콘텐츠가 이동된 경우 리디렉션하십시오.

퀵 노트를 채택하면 앱을 이 새로운 메모 작성 시스템에 연결할 수 있습니다.

사람, 콘텐츠 및 앱 간의 연결을 개선하기 위해 설계된 시스템.

NSUserActivity를 채택했는지 확인하세요.

이제 기존 코드를 재검토하고 연마할 수 있는 좋은 기회입니다.

독특하고, 글로벌하고, 안정적인 식별자를 가지세요.

그리고 시스템이 앱의 현재 NSUserActivity를 관리할 수 있도록 응답자에 대한 활동을 설정하세요.

시청해 주셔서 감사드리며, 퀵 노트와 그 이상에서 당신의 앱을 볼 수 있기를 기대합니다.

[타격적인 음악].