10250

안녕하세요, WWDC에 오신 것을 환영합니다.

제 이름은 마이크이고, 오늘 우리는 SF Symbols 3에 도입된 새로운 기능을 활용하는 사용자 지정 기호를 만드는 방법을 살펴볼 것입니다.

먼저, 우리는 사용자 지정 기호가 무엇인지 그리고 언제 사용하고 싶은지 요약할 것입니다.

사용자 지정 기호는 SVG 템플릿으로 작업하는 것을 포함한다.

SF Symbols 3을 사용하면 완전히 새로운 템플릿 버전이 있으므로 이전 버전의 변경 사항에 대해 논의할 것입니다.

우리는 템플릿을 생성하고, 기호를 편집하고, 흑백 이외의 렌더링 모드를 준비하는 방법을 살펴볼 것입니다.

우리는 당신의 기호에 렌더링 모드 데이터를 추가하는 과정인 주석을 다룰 것입니다.

우리는 당신의 워크플로우에 큰 영향을 미칠 수 있는 몇 가지 고급 기술에 대해 논의할 것입니다.

그리고 마지막으로, 우리는 Xcode를 위해 내보내고 사용자 지정 기호를 배포하는 것으로 마무리할 것입니다.

시작하자. 그래서, 사용자 지정 기호는 무엇인가요?

음, SF 심볼은 2019년에 도입되었다.

초기 릴리스에는 앱에서 사용할 수 있는 1,500개 이상의 기호가 있었습니다.

그 이후로, 상징의 도서관은 단지 성장했다.

2년 후, SF 심볼 3과 함께, 총 3,000개 이상의 심볼이 있다.

이제, 이 상징들은 다양한 주제와 범주를 다룹니다.

하지만 당신의 앱은 원의 찻잔과 같은 기존 SF 기호에 의해 완전히 포착되지 않은 특정 요구 사항이 있을 수 있습니다.

이곳은 사용자 지정 기호가 들어오는 곳이다.

사용자 지정 기호가 필요한 경우, 일련의 벡터 경로로 그려 사용자 지정 기호 템플릿에 배치할 수 있습니다.

템플릿은 SVG 형식이며, 디자인과 가이드가 포함되어 있습니다.

이 템플릿은 SF 기호가 제공해야 하는 모든 기능을 활용할 수 있는 메커니즘입니다.

여기에는 기호가 텍스트 옆에 잘 보이도록 하는 타이포그래피 정렬, 목록과 테이블 보기에서 사용될 때 기호가 서로 광학적으로 중앙에 있는지 확인하기 위한 여백이 포함됩니다.

텍스트와 일치하고 iOS에서 대담한 접근성과 같은 기능에 맞게 조정하기 위한 여러 가중치...

그리고 마지막으로, 다른 UI 요소의 컨텍스트에 맞게 조정하기 위한 세 개의 무게 매칭 저울.

그래서 그것들은 SF 기호와 사용자 지정 기호의 하이라이트이다.

사용자 지정 기호 템플릿의 기본 사항을 검토하려면, WWDC 2019의 "SF 기호 소개"를 보는 것이 좋습니다.

SF 심볼의 디자인 세부 사항에 대해 자세히 알아보려면, WWDC 2021의 "SF 심볼의 새로운 기능"을 확인하세요.

이제 사용자 지정 기호를 언제 사용해야 하는지 알았으니, 그것들을 가능하게 하는 템플릿을 검토해 봅시다.

SF 심볼 3의 새로운 기능과 함께, 새로운 버전의 템플릿 버전 3.0이 있습니다.

이 버전의 템플릿은 버전 2.0에 비해 몇 가지 중요한 새로운 기능을 가지고 있으며, Xcode 13 이상이 필요합니다.

3.0에서, 왼쪽 마진과 오른쪽 마진 지침은 그들이 대응하는 디자인 변형을 나타내는 더 명시적인 이름을 가지고 있다.

예를 들어, 이 여백에는 접미사 "Regular-M"이 있다.

이것은 광학 정렬에 대한 추가 제어를 위해 템플릿의 모든 변형에 여백을 추가할 수 있으며, 디자인 변형 중 하나와 일치하는 접미사가 있는 한 존중받을 수 있다는 것을 의미합니다.

더 중요한 것은, 이 템플릿 형식은 기호가 다른 렌더링 모드에서 어떻게 보여야 하는지에 대한 정보를 포함할 수 있다는 것이다.

우리는 흑백 및 다색과 같은 기존 모드에 대한 데이터와 새로운 계층 및 팔레트 모드에서 사용되는 데이터를 포함할 수 있습니다.

이 모든 것 외에도, 3.0 템플릿은 더 적은 것을 함으로써 더 많은 것을 성취할 수 있는 몇 가지 고급 기능을 지원합니다.

우리는 "고급 기술" 섹션에서 이것에 대해 자세히 이야기할 것이다.

새 템플릿의 전체 사양은 Developer.Apple.com/SF-Symbols에서 업데이트된 문서를 확인하세요.

이제 새로운 템플릿에 익숙해졌으니, 사용자 지정 기호를 작업해 봅시다.

그래서 저는 동료들과 함께 카드 게임 앱을 작업하고 있으며, SF 심볼 앱은 우리가 필요한 많은 심볼을 다루고 있습니다.

카드 덱을 나타내는 데 사용할 수 있는 네 개의 정장과 스택이 있습니다.

유일하게 빠진 것은 우리 앱에서 특별한 역할을 할 하트의 여왕을 대표하는 데 사용할 수 있는 것이다.

나는 위에 심장이 있는 왕관의 상징을 상상하고 있다.

기존 SF 심볼을 사용자 정의할 수 있도록 SF 심볼 앱을 열어서 시작할 수 있습니다.

이렇게 하면, 나는 줄기 두께, 스케일 및 정렬에 대한 기준점을 가질 것이다.

SF 심볼 앱에서 "크라운"을 검색하면, 우리는 멋지고 채워지지 않은 버전을 사용할 수 있다는 것을 알 수 있습니다.

이것은 훌륭한 출발점이 될 것이다.

내가 추가해야 할 것은 위에 있는 심장뿐이다.

"크라운"을 선택하고 컨텍스트 메뉴에서 사용자 지정 기호로 복제를 선택할 수 있습니다.

그리고 사이드바의 사용자 지정 기호 섹션 아래에, 방금 복제한 왕관을 위한 셀이 있습니다.

"Custom.crown"은 약간 모호해서 이름을 바꿀 것이다.

"Queen.heart"는 내가 염두에 두고 있는 것을 훨씬 더 잘 묘사한다.

이제, 이것은 새로운 사용자 지정 기호를 시작하는 좋은 방법이지만, 1.0 및 2.0 사용자 지정 기호 템플릿으로 지난 몇 년 동안의 기호가 있을 수 있습니다.

그건 문제가 되지 않아.

앱에 기존 기호를 삭제할 수 있으며, 자동으로 현재 컬렉션에 추가되고 3.0 템플릿으로 변환됩니다.

기호가 내 컬렉션에 있으면, "크라운"과 같은 SF 기호를 복사하든, "Teacup.circle"과 같은 사용자 지정 기호를 가져오든, 스케치, 일러스트레이터 또는 피그마와 같은 내가 선택한 디자인 앱에서 편집을 위해 내보낼 수 있습니다.

그렇게 하려면, 파일 내보내기 템플릿 또는 Command + E를 선택할 수 있습니다.

이것은 내가 사용자 정의할 수 있도록 3.0 템플릿을 흑백으로 내보낼 것이다.

SF 심볼 앱에서 시작된 심볼의 경우, 3.0 템플릿의 초기 설정을 위한 두 가지 옵션이 있습니다: 정적 및 가변.

당신이 선택하는 설정은 당신의 디자인 목표에 달려 있습니다.

정적 설정은 2.0 템플릿과 비슷해 보이기 때문에 친숙해야 한다.

중간 규모에는 27세트의 경로와 한 세트의 명시적 여백이 있다.

특정 무게와 규모를 목표로 하거나, 상징의 하나 또는 두 가지 변형만 디자인할 계획이라면, 이 설정은 잘 작동할 것입니다.

반면에, 변수 설정은 세 세트의 경로와 세 세트의 여백이 있는 3.0 템플릿을 생성할 것이다.

모든 디자인 변형을 지원할 계획이라면, 다른 24개를 생성하는 데 필요한 최소 디자인 변형 수를 제공하기 때문에 이 설정으로 시작하는 데 관심이 있을 수 있습니다.

이것은 당신의 모든 경로가 매우 높은 수준의 호환성과 일관성을 가져야 합니다.

하지만 지금 이것에 대해 걱정하지 마세요.

우리는 이러한 요구 사항과 템플릿 설정을 나중에 자세히 재검토할 것입니다.

지금은 하나 또는 두 개의 변형만 그릴 것이기 때문에 정적 설정을 내보낼 것입니다.

디자인 응용 프로그램에서 템플릿을 열면 편집을 시작할 준비가 되었습니다.

2.0 템플릿으로 작업하는 것처럼, 필요하지 않은 디자인 변형을 삭제할 수 있으며 시작하기 위해 몇 가지만 디자인할 수 있습니다.

호환 가능한 경로가 없는 템플릿의 경우, Regular-Medium이 여전히 필요하므로, 그것부터 시작하겠습니다.

나는 왕관의 중간 첨탑에 심장을 위한 공간을 만들 것이다.

그리고 저는 이 기호가 다색 모드에서 잘 보이길 원하기 때문에, 나중에 기호의 특정 부분에 색상을 할당할 수 있도록 경로를 조정할 것입니다.

이러한 조정으로, 나는 이제 왕관의 속이 빈 부분에 대한 하나의 닫힌 모양을 가지고 있다.

다음으로, 나는 심장에 집중할 것이다.

이제, 기호를 편집할 때, 스트로크 기호를 작업하고 있기 때문에 Regular-Medium의 줄기 두께와 일치하도록 스트로크를 사용할 수 있습니다.

이것은 내가 심장의 비율과 크기를 반복할 때 유연성을 준다.

하지만 주목하세요, 디자인에 만족하면 라이브 스트로크를 경로로 변환해야 합니다.

경로로 변환하면 스트로크된 모양이 나중에 색상으로 채워질 수 있습니다.

경로로 변환하는 또 다른 이점은 스트로크가 충분히 정확하지 않을 때 약간의 광학 조정을 할 수 있다는 것이다.

여기처럼, 심장의 위쪽 절반에서, 뇌졸중은 안쪽이 너무 크고 둥글다.

내가 경로로 전환했기 때문에, 나는 덜 투박해 보이도록 곡선을 미세 조정할 수 있다.

이제 하나의 디자인 변형을 그렸으니, 당신의 기호가 흑백 이외의 렌더링 모드를 지원하길 원한다면 명심해야 할 몇 가지 항목에 대해 이야기할 수 있는 좋은 시간입니다.

최종 디자인에서 라이브 스트로크를 사용하지 마세요.

대신, 결과 모양이 색상이나 계층 그룹을 취할 수 있도록 획을 경로로 변환해야 합니다.

열린 길을 사용하지 마세요.

이것들은 연결되지 않는 시작점과 끝점이 있는 경로이다.

닫힌 채우기 영역이 없기 때문에, 이 모양들은 어떤 색도 가질 수 없을 것이다.

대신, 디자인의 모든 모양이 정의된 채우기 영역으로 닫혀 있는지 확인하세요.

그라디언트나 그림자와 같은 효과와 같은 하나 이상의 색상과 관련된 특별한 채우기를 피하세요.

이것들이 존재한다면, 그들은 당신이 당신의 상징을 위해 만든 다색 또는 계층적 데이터를 무시할 것입니다.

대신, 추가 효과 없이 표준의 평평한 채우기를 고수하세요.

이제, 우리가 내 디자인 도구로 돌아가면, 템플릿은 꽤 비어 있다.

기호가 iOS의 접근성 대담한 기능에 반응하도록 세미볼드를 추가하고 싶을 수도 있습니다.

이렇게 하려면, 기존 도면을 원하는 레이어로 복사하고 거기에서 조정하는 것이 좋습니다.

이것은 당신의 디자인 변형에서 동일한 수의 경로가 사용될 것이기 때문에 들어가기에 좋은 습관입니다.

다색 또는 계층적 데이터로 기호를 생성하려면 모든 디자인 변형에서 경로 수를 보존하는 것이 요구 사항입니다.

이 예시에서, 나는 그들의 번호와 순서를 나타내기 위해 경로를 색칠했다.

두 디자인 변형 모두 네 가지 경로가 있다.

처음 두 경로가 폴더를 구성하고, 세 번째 경로로 원이 있고, 네 번째 경로로 더하기 기호가 있습니다.

결과적으로, 이 두 그림은 다색으로 멋지게 보인다.

이 그림들은 또한 네 개의 경로가 있지만, 세심한 주의를 기울이면, 내가 오른쪽에 있는 경로의 순서를 섞었다는 것을 알게 될 것이다.

폴더의 메인 스트로크는 왼쪽에 있는 그림의 첫 번째 경로이지만, 오른쪽에 있는 그림의 세 번째 경로이다.

디자인이 같은 수의 경로를 가지고 있지만 순서가 다를 때, 그들은 매우 다르게 렌더링될 가능성이 있다.

그리고 만약 우리가 이 그림들을 다색으로 렌더링한다면, 그것들은 일치하지 않는다.

더하기 배지의 녹색은 오른쪽 디자인 변형의 폴더에 적용되고 있다.

여왕의 심장 상징으로 돌아가세요.

지금까지는 멋져 보여.

그리고 내가 디자인 변형을 만드는 방법에 주의했기 때문에, 다색 및 계층적 모드를 지원하기 위해 주석을 달면 더 좋게 만들 수 있다.

내가 그것을 하기 전에, 나는 내 기호를 앱으로 다시 가져와야 할 것이다.

나는 단순히 그것을 기존 셀에 놓을 수 있다. 우리는 SF 심볼 앱에서 그것을 업데이트해야 한다.

이제 기호에 주석을 달 필요는 없지만, 흑백 이외의 렌더링 모드에서 기호의 모양을 제어하고 싶다면 좋은 생각입니다.

주석을 달기 위해, 당신은 당신의 상징을 구성하는 개별 경로를 빌딩 블록으로 사용할 것입니다.

이것들로부터, 당신은 각 렌더링 모드에 대한 레이어 세트를 만듭니다.

레이어는 단순히 일부 관련 렌더링 데이터가 있는 경로 모음입니다.

여기 나는 일곱 개의 길이 있는 왕관을 위한 층과 두 개의 길이 있는 심장을 위한 층이 있다.

다색 모드의 레이어에는 색상이 할당되고, 계층 모드의 레이어에는 계층 그룹이 할당됩니다.

레이어는 상단의 레이어가 아래의 레이어를 차단하는 명시적인 z 순서를 가지고 있다.

이것은 디자인 애플리케이션에서 레이어를 만드는 것과 다르지 않다.

주석을 시작하려면, 앱에서 기호를 선택하고 갤러리 보기를 입력합니다.

오른쪽의 관리자에서 렌더링 모드 탭을 선택하여 기호를 미리 보고 주석을 달 수 있습니다.

나는 단색, 계층적, 팔레트, 다색 중에서 선택할 수 있다.

흑백 이외의 모드에서는 활성 모드에 해당하는 레이어를 추가하고 편집할 수 있습니다.

그리고 중앙에는 미리보기가 있습니다.

여기서 우리는 우리가 처분할 수 있는 모든 경로와 상호 작용하고 그것들을 레이어에 할당할 수 있다.

먼저 다색 렌더링 모드로 시작하겠습니다.

나는 왕관을 위한 새로운 층을 만들 것이다.

그런 다음, 레이어의 색상을 선택할 수 있습니다.

다색 레이어의 경우, 다양한 시스템 색상 중에서 선택하거나 나만의 사용자 지정 색상을 사용할 수 있습니다.

조명 모드, 어두운 모드, 고대비 모드 및 다른 활기찬 컨텍스트에서 멋지게 보이도록 시스템 외관의 변화에 적응하기 때문에 가능할 때마다 시스템 제공 색상을 사용하는 것이 좋습니다.

나는 왕관에 시스템 옐로우를 사용할 것이다.

그리고 그건 한 층 끝났어. 이제, 그냥 심장을 위해.

나는 그것을 빨간색으로 자체 레이어에 추가할 것이다.

기호의 빈 부분에 색상을 설정하여 다색 모드에서 왕관에 조금 더 깊이를 더하고 싶습니다.

경로는 원하는 수의 레이어에서 사용될 수 있다.

그래서, 쓰다듬고 채워진 효과를 얻기 위해, 나는 내가 원하는 경로가 있는 레이어를 추가하고 더 낮은 불투명도로 설정했다.

나도 심장을 위해 똑같이 할 거야.

그거 좋아 보인다.

다음으로, 나는 계층으로 넘어갈 것이다.

나는 이전처럼 레이어를 구성할 수 있지만, 색상 대신 1차에서 3차에 이르는 계층적 그룹을 할당한다.

계층적 데이터는 계층적 및 팔레트 렌더링 모드에서 사용될 것이다.

나는 2차에 내 왕관을 위한 레이어를 추가할 것이다.

그리고 초등의 심장.

나는 미리보기에서 약간의 왕관이 심장이 완전히 불투명하지 않기 때문에 겹치는 심장을 통해 보여주는 것을 볼 수 있다.

이것은 겹치는 모양으로 작업할 때 흔한 문제이다.

이러한 중첩이 어떻게 렌더링되는지 제어하기 위해, 각 레이어는 오른쪽에 토글이 있습니다.

비활성 상태인 경우, 투명한 레이어는 왼쪽과 같이 아래 레이어와 섞일 것이다.

이것은 기본 행동이다.

활성이면 투명한 레이어는 그 뒤에 있는 것을 지우고 오른쪽에 표시된 것처럼 다른 레이어가 존재하지 않는 것처럼 렌더링합니다.

토글 뒤에 명확한 설정으로, 이제 내 기호는 예상대로 작동한다.

계층적 주석 데이터는 팔레트 렌더링 모드에서도 사용되므로, 레이어 상호 작용이 잘 보이도록 하겠습니다.

이거 멋져 보여.

청록색 층은 투명하지만 뒤에 명확한 것이 활성화되어 있기 때문에, 우리는 그 뒤에 있는 남색 왕관을 볼 수 없다.

팔레트 렌더링 모드에서, 나는 계층적에서와 같은 것 대신에 내 기호에 두 개에서 세 개의 색을 할당할 수 있다.

이 두 모드가 색상을 적용하기 위해 계층적 주석을 해석하는 방법의 차이점을 검토해 봅시다.

계층은 한 가지 색상을 사용하여 기호의 레이어에 적용하여 계층 수준에 따라 불투명도를 변경합니다.

이 경우, 우리는 1차 그룹과 3차 그룹이 있는 상징을 가지고 있다.

팔레트는 두 개에서 세 개의 색상을 가지며, 전달된 색상 수에 따라 동작이 약간 다를 것이다.

두 가지 색상을 전달하면 수준에 관계없이 사용 가능한 계층 그룹 간에 색상을 분배할 수 있습니다.

이 기호의 경우, 우리는 두 그룹만 있기 때문에, 첫 번째 색상은 기본 그룹에 적용되고 두 번째 색상은 3차 그룹에 적용됩니다.

세 가지 색상을 전달하면, 각 색상은 해당 계층 그룹에 적용됩니다.

첫 번째 색은 1차에, 두 번째는 2차에, 세 번째는 3차에 할당된다.

이미 주석을 달았던 기호를 계속 편집해야 하는 경우, 템플릿을 내보내고 디자인 도구에서 흑백 표현을 편집할 수 있습니다.

그런 다음 기호를 다시 가져오고 주석이 여전히 예상대로 렌더링되는지 확인하세요.

주석 데이터를 유지하려면 주석이 달린 기호의 경로를 수정할 때 특별한 주의를 기울여야 합니다.

이 데이터는 디자인 전반에 걸쳐 동일한 수의 경로가 필요하기 때문에, 포인트를 안전하게 추가, 제거 및 조정할 수 있습니다.

하지만 전체 경로를 제거하거나 재정렬하면 디자인이 주석 데이터와 동기화되지 않습니다.

이러한 경우, 새로운 경로 구조를 설명하기 위해 기호에 다시 주석을 달아야 합니다.

이제, 나는 두 가지 디자인 변형으로 내 기호를 가지고 있으며, 주석이 달려서 다른 렌더링 모드에서 멋지게 보일 것이다.

여기서 멈출 수 있지만, 저울과 무게의 다른 조합을 지원해야 한다면 어떨까요?

이 섹션에서는 세 개 이상의 디자인 변형을 그릴 계획이라면 시간을 절약할 수 있는 사용자 지정 기호로 작업하는 기술에 대해 이야기할 것입니다.

과거에는 템플릿의 나머지 변형을 하나씩 계속 작성하여 원하는 무게와 규모에 맞게 경로를 조정했습니다.

하지만 이제, SF 심볼 3와 함께, 이것을 할 수 있는 훨씬 더 나은 방법이 있다.

호환 가능한 데이터가 있는 세 가지 디자인 변형만 제공하면, 나머지 템플릿을 무료로 받을 수 있습니다.

이것은 3.0 변수 템플릿을 요청할 때 얻을 수 있는 SVG의 구조입니다.

호환 가능한 디자인을 생산하기 위한 요구 사항에 대해 자세히 알아봅시다.

먼저, 우리는 우리가 디자인 소스라고 부르는 것을 확인합니다.

이것들은 초경량-소형, 일반-소형, 그리고 검은색-소형이다.

만약 그것들이 존재한다면, 경로는 그들이 일치하는지 확인하기 위해 출처를 가로질러 평가된다.

비교를 위해 Regular-Small 소스와 Black-Small 소스에 집중합시다.

디자인 변형 전반에 걸쳐, 모든 경로는 주석 요구 사항과 관련하여 앞서 논의한 것과 정확히 동일한 번호와 순서를 가져야 합니다.

나는 그들의 순서를 나타내기 위해 왕관의 경로를 색칠했다.

아홉 개의 길이 있고, 그것들은 모두 일치한다.

예를 들어, 심장의 두 경로는 두 디자인 변형 모두에서 여덟 번째와 아홉 번째 경로이다.

지금까지는, 아주 좋아.

다음으로, 우리는 디자인 변형에 걸쳐 해당 경로 내부를 확인할 것입니다.

일반 소스와 블랙 소스의 심장에 대한 외부 경로를 비교해 봅시다.

각 경로는 일련의 지점에서 구성된다.

우리는 빨간색의 일반 소스에 대해 24점, 파란색의 검은색 소스에 대해 24점을 가지고 있습니다.

호환되기 위해, 포인트는 해당 경로 사이에서 일대일로 일치해야 한다.

각 쌍의 일치하는 점은 가상의 선을 만들고, 각 점을 각각의 선을 따라 움직이면 두 개의 호환 가능한 경로를 혼합할 수 있습니다.

일반 소스의 각 지점은 블랙 소스의 한 지점에 해당하기 때문에, 우리는 바로 그렇게 할 수 있다.

우리는 빨간색의 작은 심장에 집중하고 파란색의 더 큰 심장과 섞이는 경로를 관찰할 것이다.

블렌딩은 호환 가능한 경로 사이의 어느 곳에서나 새로운 경로를 생성할 수 있게 해준다.

이 혼합은 "보간"으로 알려져 있다.

이제 포인트 수준에서 보간이 어떻게 작동하는지 알았으니, 축소하여 전체 기호에 적용해 봅시다.

초경량, 일반, 검은색 사이의 무게를 계산할 수 있다는 것을 알게 될 것입니다.

이것은 당신의 기호를 위한 중간 및 대규모 디자인 변형을 생성하는 데 필요한 무게 보상을 위한 메커니즘입니다.

그 요구 사항을 요약해 봅시다.

기호가 보간 가능한 것으로 간주되려면, 세 가지가 필요하다.

먼저, 세 가지 디자인 소스.

초경량-소형, 일반-소형, 그리고 검은색-소형.

둘째, 경로 호환성.

모든 경로는 출처 간에 일치해야 한다.

그리고 마지막으로, 포인트 호환성.

일치하는 모든 경로는 같은 수의 점을 가져야 한다.

그렇다면 이 보간 가능한 기호 중 하나를 어떻게 만들 수 있을까요?

음, 정적 설정 대신, 나는 가변 설정으로 SF Symbols 앱에서 3.0 템플릿을 내보내는 것으로 시작할 것이다.

이런 식으로, 나는 세 가지 소스 디자인에 대한 여백과 개요를 가지고 있다.

나는 레귤러-미디엄에서 이전에 했던 것처럼 레귤러-미디엄으로 시작하고 내 마음을 위에 추가할 것이다.

이번에는 단지 더 작은 규모를 위한 것이다.

보간에는 매우 엄격한 요구 사항이 있기 때문에, 다른 소스에서 작업하기 전에 초기 레귤러-소형 디자인 변형을 좋은 상태로 만드는 것이 좋습니다.

초경량-소형 및 검은색-소형 소스 작업을 할 때, 일반-소형 경로를 복사하여 붙여넣고 거기에서 지점만 재배치하는 것이 가장 좋습니다.

이것은 사용자 지정 기호가 다른 디자인 변형을 생성할 수 있는지 확인하는 데 중요합니다.

그럼 한 번 더 검토해 봅시다.

기호를 보간할 수 있기를 원할 때, 호환성을 깨뜨릴 수 있으므로 포인트를 추가하거나 제거하지 마십시오.

대신, 기존 포인트만 조정하세요.

이동 지점과 제어 지점은 디자인 간의 호환성을 보존하기 때문에 괜찮습니다.

준비가 되면, 앱의 사용자 지정 기호 셀에 업데이트된 템플릿을 놓고 이전처럼 주석을 달 수 있습니다.

내가 출처를 그리는 데 신중했기 때문에, 나는 27개의 변형을 모두 다루었고, 구현하기 위해 이것을 넘겨줄 준비가 다 되었다.

이제 사용자 지정 기호를 만드는 방법을 다루었으니, 기호를 배포하는 방법과 같은 다음 단계에 대해 이야기해 봅시다.

기호를 배포할 때, 두 가지 옵션이 있습니다.

2.0 템플릿이나 3.0 템플릿을 내보낼 수 있습니다.

2.0 템플릿은 iOS 14와 같은 구형 OS에 다시 배포할 계획인 경우에만 사용해야 합니다.

흑백만 포함되어 있으므로 해당 모드에서 사용할 때 기호가 의미가 있는지 확인하십시오.

2.0 템플릿으로 변환하는 것은 손실 작업이다.

이전 OS가 이해하지 못하기 때문에 주석 데이터와 명시적 여백이 제거됩니다.

3.0은 추가한 모든 다색 및 계층적 데이터와 사용자 지정 여백을 포함할 수 있지만, 이전 버전과 호환되지 않습니다.

여기서 조심하세요, 이 템플릿은 편집을 위한 소스 아티팩트가 아닙니다.

현재 디자인 도구는 내장된 주석 데이터와 완전히 호환되지 않을 수 있습니다.

기호를 더 많이 편집하거나 동료와 공유해야 하는 경우, SF 기호 앱으로 다시 가져와야 합니다.

거기에서, 당신은 주석을 떨어뜨릴 위험 없이 흑백 표현을 작업할 수 있습니다.

내보내는 3.0 템플릿은 Xcode로 바로 이동하거나 SF Symbols 앱으로 돌아가야 합니다.

최소 배포 대상이 iOS 14인 경우, 2.0과 3.0 템플릿을 모두 내보내고 버전 확인을 기반으로 적절한 자산을 사용해야 합니다.

최소 배포 대상이 iOS15 이상인 경우, 3.0 템플릿만 내보내면 됩니다.

동료와 기호를 공유하는 경우, 3.0 템플릿을 내보내세요.

그런 다음 SF 심볼 앱으로 가져와 편집과 주석을 계속할 수 있습니다.

우리는 오늘 많은 내용을 다루었으니, 간단히 요약해 봅시다.

우리는 새로운 3.0 사용자 지정 기호 템플릿, 지원하는 기능 및 편집 방법에 대해 이야기했습니다.

우리는 주석을 위해 기호를 준비하고 다색 및 계층적 데이터를 추가하는 방법을 다루었습니다.

우리는 보간을 활용하기 위해 더 엄격한 요구 사항을 선택하는 고급 워크플로우를 탐구했습니다.

그리고 우리는 방금 당신의 상징을 배포하는 방법에 대한 이야기를 마쳤습니다.

기호를 전달하면, OS에서 사용할 수 있습니다.

적절한 모드에서 기호를 렌더링하는 데 사용할 수 있는 몇 가지 새로운 API가 있습니다.

코드에서 SF 기호와 사용자 지정 기호를 호출하는 방법에 대해 자세히 알아보려면, WWDC 2021의 "UIKit 및 AppKit의 SF 기호"와 "SwiftUI의 SF 기호"를 확인하세요.

그것은 처음부터 끝까지 사용자 지정 기호이다.

나는 당신이 당신만의 상징을 만들고 주석을 달는 것을 즐기길 바랍니다.

[쾌활한 음악].