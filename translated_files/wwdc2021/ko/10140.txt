10140

♪ ♪

안녕하세요, 여러분!

저는 AVFoundation 엔지니어인 Prashant입니다.

WWDC21에 오신 것을 환영합니다.

최근 몇 년 동안, 최고 스트리밍 서비스의 인기는 선형 텔레비전의 인기에 근접했다.

당신이 있는 시장에 따라, 사용자는 실제로 지불해야 하는 광고 없는 콘텐츠보다 무료 광고 지원 콘텐츠를 선호할 수 있습니다.

따라서 HLS 스트림에 광고 및 기타 인터스티셜을 포함하는 데 관심이 있다면, 올바른 세션을 조정했습니다.

뛰어들기 전에, HLS 스트림에 광고를 삽입하기 위한 기존 메커니즘을 빠르게 검토해 봅시다.

중단 태그를 사용하여 서버 측 광고 삽입을 수행할 수 있습니다.

이것은 광고 세그먼트가 콘텐츠 세그먼트와 함께 바느질된다는 점에서 상당히 정적인 계획이며, 이 바느질은 재생 목록이 사용자에게 판매되기 전에 수행되어야 합니다.

당신이 상상할 수 있듯이, 이것은 사용자가 광고 마커에 접근하거나 심지어 다시 바인딩할 때 광고가 결정되기를 원하는 광고 자산의 늦은 바인딩을 허용하지 않습니다. 예를 들어, 사용자가 이미 본 비디오의 일부로 이동하면 동일한 광고를 다시 보게 될 것입니다.

HLS는 세그먼트 세분성에서 작동하기 때문에, 광고 포드로의 전환은 세그먼트 경계에서 이루어져야 한다.

광고 마커가 콘텐츠 세그먼트 중간에 있다면, 광고를 바느질하기 위해 그 세그먼트를 분할해야 합니다.

종종, 품질 계층의 수는 기본 자산과 중간 자산 간에 다를 것입니다.

모든 기본 품질 계층과 함께 광고를 바느질하려면, 광고는 콘텐츠 인코딩과 일치하도록 조절되어야 합니다.

그리고 당신은 또한 광고가 기본 콘텐츠와 동일한 코덱을 사용하는지 확인하고 싶을 것입니다.

그리고 라이브 스트리밍 시나리오에서, 당신의 포장업자는 많은 백엔드 부기를 해야 할 수도 있습니다.

당신의 광고와 광고는 대부분 주문형 비디오 스트림이 될 것입니다.

하지만 패키퍼는 광고 중단 전체를 위해 세그먼트별로 이것들을 스풀링해야 할 것이다.

고객 측에 광고를 삽입할 수도 있습니다.

지금까지, 우리는 이것을 어떻게 할 수 있는지에 대한 공식적인 추천이 없었다.

더 인기 있는 접근 방식 중 하나는 한 플레이어가 주요 콘텐츠를 제시하고 다른 플레이어가 중간극을 제시하는 2인자 방식을 사용하는 것이다.

그리고 전환은 두 플레이어 간의 재생을 조정하고 플레이어 보기 계층을 관리함으로써 달성된다.

이것은 잘 작동하지만, 여기서의 문제는 대부분 성능 측면에 있다.

버퍼링이 두 플레이어 간에 제대로 조정되지 않으면, 광고를 미리 가져오는 것은 기본 콘텐츠 스트림의 적응형 비트 전송률 성능에 영향을 미칠 것입니다.

그리고 Picture in Picture와 AirPlay와 같은 기능은 이러한 사용자 지정 플레이어 접근 방식으로 잘하기가 정말 어렵습니다.

올해, 우리는 이러한 모든 우려를 해결했고 일반적으로 광고 삽입을 훨씬 더 간단하게 만들려고 시도했습니다.

우리는 광고가 프로그램 타임라인에 예약할 수 있는 별도의 자산으로 취급되는 HLS 인터스티셜을 도입하고 있습니다.

광고는 더 이상 DISCONTINUITY 태그로 바느질되지 않습니다.

대신 그들은 마스터 재생 목록을 통해 참조할 수 있는 독립적인 자산으로 남아 있다.

곧 볼 수 있듯이, 이 계획은 역동적이며, 광고 인벤토리에 대한 늦은 바인딩과 심지어 재결합을 허용합니다.

당신은 더 이상 세그먼트 경계에 제약을 받지 않습니다.

프로그램 타임라인의 어느 곳에나 임의로 광고를 게재할 수 있습니다.

AVKit과 함께 HLS 인터스티셜은 tvOS의 내비게이션 제한에 대한 내장 지원을 제공합니다.

우리는 또한 AirPlay와 Picture in Picture에 대한 지원이 내장되어 있습니다.

예정된 모든 광고와 중간 광고는 AirPlay 세션으로 전달될 것입니다.

우리는 또한 원활한 전환을 달성하기 위해 기본 및 중간 플레이어 간의 버퍼링 및 기타 시스템 리소스 사용을 조정합니다.

이제 HLS 인터스티셜을 사용하는 광고와 함께 주문형 비디오 콘텐츠를 제시할 때 일반적인 재생 흐름을 살펴봅시다.

이 그림의 파란색 막대는 주요 콘텐츠를 나타내며, 주황색과 녹색 막대는 재생 중에 예약하고 싶은 광고입니다.

이제, 프라이머리는 광고 마커가 일시 중지될 때까지 재생되며, 첫 번째 광고가 재생되기 시작할 것이다.

첫 번째 광고가 나오면, 두 번째 광고는 즉시 뒤따를 것이다.

두 번째 광고 이후, 프라이머리는 중단된 곳에서 재개될 것이다.

이제 버퍼링 시퀀스를 살펴봅시다.

우리는 첫 번째 광고의 시작 시간까지 기본을 버퍼링하는 것으로 시작합니다.

이제 우리는 첫 번째 광고를 미리 버퍼링하여 원활한 전환을 가능하게 합니다.

이것이 완전히 버퍼링된 후, 우리는 두 번째 광고를 미리 버퍼링할 것이다.

그리고 두 번째 광고가 완전히 버퍼링된 후, 우리는 원활하게 다시 전환할 수 있도록 기본을 다시 버퍼링하기 시작할 것입니다.

라이브 시나리오의 재생 흐름은 광고 기간까지 앞으로 점프한 후 기본에 다시 합류한다는 점을 제외하고는 비슷합니다.

이것은 우리가 라이브 엣지와 동기화된 상태를 유지하기 위한 것이다.

그리고 이것은 또한 원활한 전환이 가능하도록 유사한 버퍼링 전략을 채택한다.

그래서 HLS 인터스티셜로 광고를 어떻게 예약할 건가요?

이제 DATERANGE 태그를 사용하여 서버 측 광고 삽입을 할 수 있습니다.

이를 위해, 우리는 속성이 있는 새로운 날짜 범위 클래스를 도입하고 있습니다.

이 재생 목록은 PROGRAM-DATE-TIME 태그를 통해 타이밍 정보를 전달하고 있습니다.

광고 일정이 이제 날짜를 사용하여 지정되었기 때문에 이 태그는 이제 필수입니다.

여기서 우리는 com.apple.hls.interstitial로 설정된 수업과 함께 DATERANGE 태그를 사용하여 정렬된 광고를 볼 수 있습니다.

ID 속성은 이벤트를 고유하게 식별합니다.

START-DATE는 기본 타임라인에서 광고를 시작하고 싶은 곳입니다.

여기서 우리는 광고가 재생 5초에 예정되어 있다는 것을 알 수 있다.

DURATION 속성은 광고의 지속 시간을 지정합니다.

X-ASSET-URI 속성은 광고의 마스터 재생 목록의 URI를 지정합니다.

그리고 X-RESUME-OFFSET 속성은 기본 재생을 재개하려는 START-DATE의 오프셋을 지정합니다.

0의 이력서 오프셋은 프라이머리가 중단된 곳에서 재개된다는 것을 의미한다.

이력서 오프셋 속성이 없는 경우, 우리는 광고 기간과 동일한 오프셋으로 기본에 다시 합류할 것입니다.

이것은 아마도 당신이 라이브 시나리오를 위해 하고 싶은 것일 것입니다.

때때로 당신은 여기에 표시된 것처럼 인스트림 광고를 건너뛰고 싶을 수도 있습니다.

그것을 위해, 당신은 단순히 인스트림 광고의 기간으로 이력서 오프셋을 지정하면 됩니다.

DATERANGE 태그를 사용하여 여러 광고를 예약할 수 있습니다.

여기서 우리는 첫 번째 광고가 기본 5초에, 두 번째 광고는 10초에 예정된 것을 볼 수 있습니다.

각각에 대해 동일한 시작 시간을 지정하여 연속 광고를 예약할 수 있습니다.

여기서 우리는 첫 번째 광고가 재생되기 5초에 시작되고, 두 번째 광고도 마찬가지라는 것을 알 수 있다.

광고는 재생 목록에 나타나는 순서대로 표시될 것이다.

X-ASSET-URI 속성을 사용하여 광고를 참조하는 이러한 접근 방식은 재생 목록에 DATERANGE 태그를 추가할 때 광고 포드를 정의해야 합니다.

하지만 X-ASSET-LIST 속성을 사용하여 그 결정을 연기할 수 있습니다.

X-ASSET-LIST는 이벤트 일정이 포함된 JSON 객체를 가리킨다.

객체에는 전면 목록을 지정하는 ASSETS 배열이 있으며, 각 항목은 마스터 재생 목록의 URI와 기간을 지정합니다.

이 JSON 객체는 버퍼링 시간에만 가져와서 광고 인벤토리에 늦게 바인딩할 수 있습니다.

보통, 광고는 끝까지 완전히 진행될 것이다.

그러나, X-PLAYOUT-LIMIT 속성을 사용하여 광고 종료 시간을 지정할 수 있습니다.

이 속성을 사용하여 생방송에서 조기 반환 시나리오를 구현할 수 있습니다.

조기 복귀는 라이브 피드로 돌아가기 위해 광고 중단을 중단하고 싶은 곳입니다.

이것은 속보 시나리오 때문일 수도 있고, 스포츠 경기장에서 시청자들이 놓치지 않기를 바라는 갑작스러운 흥분이 있었을 수도 있습니다.

그래서 조기 반환을 구현하기 위해 이것을 어떻게 사용하시겠습니까?

여기 여섯 개의 세그먼트가 포함된 라이브 재생 목록이 있습니다.

라이브 엣지는 세그먼트 6의 끝에 있다.

이제 플레이헤드는 보통 라이브 엣지 뒤에 있는 세 가지 목표 기간일 것이다.

이 경우, 그것은 세 번째 세그먼트의 끝에 있다.

이 시점에서, 15초 광고 지점은 세그먼트 6을 따르기로 결정되었다.

그래서 재생 목록 업데이트에는 실제로 광고 일정을 전달하는 DATERANGE 태그와 함께 여섯 개의 세그먼트가 모두 포함되어 있습니다.

다음 업데이트에서, 플레이헤드는 세그먼트 4의 끝으로 이동했을 것이며, 광고는 여전히 세그먼트 6을 따라갈 예정이다.

여기서 음영 처리된 세그먼트 7은 단순히 광고 중단을 나타낸다.

다음 업데이트에서, 재생헤드는 세그먼트 5의 끝으로 이동했고, 다음 업데이트에서, 우리는 광고 중단의 시작 부분에 있습니다.

만약 당신이 아무것도 하지 않는다면, 광고는 15초 동안 진행될 것입니다.

하지만 12초 후에 조기 복귀 일정을 잡고 싶다면, 플레이아웃 한도를 지정하기만 하면 됩니다.

이제 당신의 광고는 프로그램으로 돌아가기 전에 12초 동안 재생됩니다.

종종 계약상의 이유로, 당신은 사용자가 광고를 건너뛰거나 건너뛰는 것을 방지하고 싶을 것입니다.

X-RESTRICT 속성을 사용하여 탐색 제한을 지정할 수 있습니다.

값 점프가 있는 X-RESTRICT는 사용자가 광고 전 시간에서 광고 후 시간까지 찾는 것을 방지할 것이다.

값 건너뛰기가 있는 X-RESTRICT는 원하는 것과 다른 속도로 광고를 재생하는 것을 방지할 것이다.

이러한 제한은 UI에 의해 시행된다는 점에 유의하십시오.

tvOS에서, 그것들은 AVKit에 의해 시행된다.

그리고 비디오 프레젠테이션에 AVPlayerViewController를 사용하면 사용할 수 있어야 합니다.

다른 플랫폼에 있거나 AVKit을 사용하지 않는 경우, 이러한 제한을 시행하는 것은 애플리케이션에 달려 있습니다.

이제 DATERANGE 태그를 사용하여 서버 측 광고를 예약할 수 있는 방법을 보았으니, 클라이언트에서 진행 상황을 어떻게 모니터링할 수 있는지 봅시다.

이를 위해, 우리는 두 개의 새로운 AVFoundation 객체를 도입하고 있습니다: 인터스티셜이 예약되거나 재생될 때 클라이언트에게 알리는 AVPlayerInterstitialEventMonitor와 플레이어 항목의 타임라인에 광고를 게재하는 데 필요한 모든 정보가 포함된 AVPlayerInterstitialEvent 객체.

AVPlayerInterstitialEventMonitor에는 다음과 같은 속성이 있습니다: 기본 자산을 재생하는 기본 플레이어, 광고 재생을 모니터링하는 데 사용할 수 있는 전면 플레이어의 핸들, 플레이어에 설정된 다른 전면을 나타내는 AVPlayerInterstitialEvent 객체의 배열인 이벤트 배열.

우리는 곧 AVPlayerInterstitialEvent 객체에 대한 설명을 얻을 것이다.

현재 이벤트에 대한 핸들.

그래서 이것은 인터스티셜이 재생되고 그렇지 않으면 무효일 때 유효할 것이다.

그리고 나서 우리는 이벤트 일정이 변경될 때 실행되는 eventsDidChangeNotification과 마지막으로 인터스티셜로 전환할 때 실행되는 currentEvent- DidChangeNotification이 있습니다.

틈새 이벤트를 설명하는 AVPlayerInterstitialEvent 객체는 기본적으로 이전에 본 DATERANGE 속성과 유사한 속성을 가지고 있습니다.

primaryItem은 중간 일정을 예약하고 싶은 타임라인의 주요 자산을 나타냅니다.

식별자는 ID 속성과 유사하며 이것은 이벤트를 고유하게 식별합니다.

시간과 날짜 필드는 각각 미디어 시간과 날짜의 중간 시점의 시작 시간을 지정합니다.

이것은 START-DATE 속성과 같을 것이다.

우리는 당신의 광고 포드를 나타내는 중간 플레이어 아이템을 만들기 위해 템플릿 항목의 복사본을 사용할 것입니다.

그래서 이것은 우리가 이전에 본 ASSET-LIST 속성과 비슷하다.

제한 속성은 당신의 전면에 대한 탐색 제한을 명시할 것입니다.

그런 다음 우리는 DATERANGE와 유사한 resumptionOffset과 playoutLimit 속성을 가지고 있습니다.

그리고 마지막으로 우리는 userDefinedAttributes의 사전을 가지고 있다.

따라서 DATERANGE 태그에서 사용자 지정 속성을 지정할 수 있으며, 이는 userDefinedAttributes 속성을 통해 클라이언트 애플리케이션에 표시됩니다.

예를 들어, 광고 재생 지표를 보고하기 위해 비콘 URL과 기타 사용자 지정 속성을 포함할 수 있습니다.

다음은 인터스티셜이 재생될 때 이러한 API를 사용하여 UI를 업데이트하는 방법을 보여주는 몇 가지 예제 코드입니다.

기본 콘텐츠를 재생하기 위해 AVPlayer를 만듭니다.

그래서 이 콘텐츠에는 DATERANGE 태그를 사용하여 예정된 인터스티셜이 있습니다.

그런 다음 AVPlayerInterstitialEventMonitor를 만들고 플레이어에 설정하세요.

그런 다음 currentEvent- DidChangeNotification을 구독하여 플레이어가 인터스티셜 안팎으로 전환할 때 애플리케이션에 알립니다.

그리고 그 알림이 발생하면, UI를 업데이트하기만 하면 됩니다.

때때로 당신은 고객 측에서 광고를 예약하고 싶을 수도 있습니다. 이를 위해 AVPlayer에서 이벤트를 프로그래밍 방식으로 설정할 수 있는 AVPlayer- InterstitialEventController를 소개합니다.

이 객체는 AVPlayerInterstitialEventMonitor에서 상속되므로 많은 공통점을 가지고 있다.

주목해야 할 한 가지는 이벤트 속성이 모니터에서 읽기 전용이지만 컨트롤러의 읽기-쓰기 속성이므로 프로그래밍 방식으로 이벤트를 예약할 수 있다는 것입니다.

그리고 여기에는 현재 재생 중인 인터스티셜을 취소할 수 있는 cancelCurrentEvent API도 있습니다.

이 샘플에서, 우리는 AVPlayer에 두 개의 광고가 포함된 광고 포드를 어떻게 예약할 수 있는지 알 수 있습니다.

주요 자산을 재생하기 위해 AVPlayer를 만듭니다.

그런 다음 AVPlayer- InterstitialEventController를 만들고 AVPlayer에 설정합니다.

광고 포드를 나타내는 AVPlayer 항목 배열을 만듭니다.

그런 다음 primaryItem을 플레이어의 현재 항목으로 지정하는 AVPlayerInterstitialEvent 객체를 만드세요. 이는 영화 자산, 이 예제의 시작 시간, 재생 후 약 10초, 그리고 templateItems를 우리가 이전에 만든 광고 포드로 나타내기 때문입니다.

그리고 객체가 생성된 후, 컨트롤러의 이벤트 속성에 설정하기만 하면 됩니다.

AVPlayerViewController에서 플레이어를 설정하기 직전에 currentItem.translates- PlayerInterstitialEvents 속성을 true로 설정했다는 것을 알 수 있습니다.

이것이 설정되면, AVKit은 타임라인에 내비게이션 마커를 배치하고 tvOS에서 내비게이션 제한을 시행할 것이다.

이제 tvOS에서 HLS 인터스티셜과 AVKit 통합을 검토하는 데모로 넘어가자.

여기서 우리는 약 40초에 재생을 시작할 예정인 광고가 있습니다.

그리고 이 광고에는 내비게이션 제한이 없습니다.

광고 마커가 타임라인에서 보이는 것을 볼 수 있습니다.

광고가 재생될 때, 재생헤드 위에 카운트다운 타이머가 나타납니다.

그리고 이 광고에는 제한이 없기 때문에, 내가 Apple TV 리모컨의 가장자리로 손을 미끄러질 때, 나는 건너뛸 수 있는 옵션을 얻을 것이다.

그리고 그렇게 하면 우리는 광고를 건너뛰고 프라이머리로 돌아갈 것이다.

이제 이것에 대해, 우리는 같은 설정을 가지고 있지만, 광고에는 건너뛰기 제한이 설정되어 있습니다.

그래서 이제 광고가 재생되면, 광고를 건너뛸 수 있는 옵션이 보이지 않을 것입니다.

당신은 프라이머리로 돌아가기 전에 그것이 완전히 진행될 때까지 기다려야 할 것입니다.

"그레이하운드"의 톰 행크스.

PG-13 등급. Apple TV+에서만.

고마워, 조쉬.

여기 이 타임라인에서 볼 수 있는 두 개의 광고가 있습니다.

첫 번째는 내비게이션 제한이 없고 두 번째는 점프 제한이 있다.

그래서 우리가 두 광고를 모두 지나치려고 할 때...

우리는 광고가 재생되는 동안 재생헤드가 제한된 광고 마커에 스냅되는 것을 본다.

우리는 높은 곳에서 지옥을 끌어내릴 거야.

"그레이하운드"의 톰 행크스.

PG-13 등급. Apple TV+에서만.

그리고 광고가 끝난 후, 우리는 검색 위치에서 재개할 것이다.

마무리하기 위해, 이제 DATERANGE 태그를 사용하여 서버 측 광고를 예약할 수 있습니다.

중단한 곳에서 프로그램에 다시 참여할 수 있도록 주문형 비디오 스트림에 대해 이력서 오프셋을 0으로 지정하고 싶습니다.

그리고 라이브 스트림에 대한 이 속성을 건너뛰면 라이브 에지에서 다시 참여할 수 있습니다.

광고 자산의 늦은 바인딩을 위해 X-ASSET-LIST 속성을 사용하고, X-PLAYOUT-LIMIT 속성을 사용하여 라이브 방송에서 조기 수익을 예약하고, X-RESTRICT 속성으로 탐색 제한을 지정할 수 있습니다.

클라이언트 측에서 광고 재생을 모니터링하려면 AVPlayer-InterstitialEventMonitor를 사용합니다.

그리고 AVPlayer- InterstitialEventController를 사용하여 프로그래밍 방식으로 광고를 설정할 수 있습니다.

WWDC21의 나머지 부분을 시청하고 즐겨 주셔서 감사합니다.