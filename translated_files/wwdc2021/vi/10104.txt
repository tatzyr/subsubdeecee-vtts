10104

♪ ♪

Xin chào.

Chào mừng đến với Meet Safari Web Extensions trên iOS.

Tôi là David Quesada, một kỹ sư trong nhóm Safari.

Và hôm nay, tôi sẽ xem qua một tính năng mới thú vị trong iOS 15, Tiện ích mở rộng web Safari.

Tiện ích mở rộng web là một loại tiện ích mở rộng trình duyệt mạnh mẽ cho phép người dùng mở rộng và tùy chỉnh trình duyệt của họ theo nhiều cách.

Chúng được xây dựng với các công nghệ web tiêu chuẩn: HTML, CSS và JavaScript.

Và WebExtension API đã có sẵn cho tất cả các trình duyệt máy tính để bàn chính trong một thời gian, điều đó có nghĩa là bạn có thể viết tiện ích mở rộng trình duyệt một lần và triển khai nó trên tất cả các trình duyệt đó, tiếp cận rất nhiều người dùng.

Nhưng bây giờ, tôi rất vui khi nói với bạn rằng Tiện ích mở rộng web đang đến với iOS 15, cho phép bạn xây dựng tiện ích mở rộng trình duyệt cho nhiều người dùng hơn bao giờ hết.

Tôi muốn cho bạn xem bản demo ngay bây giờ về Tiện ích mở rộng web Safari đang chạy trên iOS.

Tôi sẽ giới thiệu một tiện ích mở rộng có tên Sea Creator.

Tiện ích mở rộng này ban đầu được viết cho các trình duyệt trên Mac, nhưng tôi đang làm việc để đưa nó lên iOS.

Phần mở rộng này cho tôi thấy những sự thật thú vị về các sinh vật biển và làm cho việc đọc thêm về cuộc sống biển trở nên thú vị bằng cách thay thế tên của các sinh vật biển bằng biểu tượng cảm xúc.

Hãy cùng xem cái này trên iPad.

Bây giờ, tôi vừa cài đặt Sea Creator và tôi đã mở Safari, nơi tôi đang đọc một bài báo về cá.

Tôi thực sự muốn bắt đầu sử dụng Sea Creator ở đây để tôi có thể làm sống động trang này với một số biểu tượng cảm xúc.

Vì vậy, tôi sẽ mở menu hành động và đi sâu vào danh sách Tiện ích mở rộng mới, hiển thị cho tôi tất cả các tiện ích mở rộng mà tôi có sẵn, bao gồm cả Sea Creator.

Vì vậy tôi sẽ bật nó lên.

Bây giờ, một tính năng khác của Sea Creator là tôi có thể đặt nó ở phía trước và trung tâm trong Safari với Trang Bắt đầu tùy chỉnh mà tôi sử dụng mỗi khi mở một tab mới.

Tôi sẽ kiểm tra điều đó một chút.

Và bây giờ tôi đã bật Sea Creator, nó ở ngay đó trong menu Hành động đã sẵn sàng để tôi sử dụng.

Và khi tôi làm điều đó, Safari hỏi tôi liệu tôi có đồng ý với việc cấp cho Sea Creator toàn quyền truy cập vào trang web này không.

Chúng tôi đã mang cùng một mô hình quyền Tiện ích mở rộng web từ Safari trên Mac sang iOS, điều đó có nghĩa là tôi, với tư cách là người dùng, có toàn quyền kiểm soát số lượng tiện ích mở rộng duyệt web của mình có thể truy cập.

Tôi sẽ nói chi tiết hơn về điều này sau.

Nhưng ngay bây giờ, tôi sẽ cho phép Sea Creator chạy.

Và cứ như vậy, nó đã hoán đổi tất cả các biểu tượng cảm xúc cá này trên trang, đó chỉ là cách tôi thích đọc nó.

Nó cũng mở cửa sổ bật lên này cho tôi thấy tổng cộng có bao nhiêu từ tôi đã thay thế cho đến nay.

Nhưng nó không chỉ là một trang này.

Tôi đã cho phép Sea Creator làm việc trên toàn bộ trang web này.

Vì vậy, khi tôi điều hướng đến các trang khác, Sea Creator vẫn đang làm việc cho tôi và cũng cung cấp cho tôi biểu tượng cảm xúc ở đây.

Tôi không cần phải cố gắng mở lại tiện ích mở rộng khi tôi đã bắt đầu sử dụng nó.

Tất nhiên, Sea Creator có thêm một tính năng mà tôi đã đề cập trước đó.

Khi tôi mở một tab mới để duyệt thêm, tôi được chào đón bởi trang Tab mới táo bạo này từ Sea Creator với một sự thật trong ngày hôm nay về sao biển - và một lần nữa, bộ đếm đó cho tôi thấy có bao nhiêu biểu tượng cảm xúc mà Sea Creator đã cho tôi cho đến nay.

Điều này khá tuyệt.

Vì vậy, đó là một cái nhìn nhanh về Sea Creator hoạt động tốt trên iOS.

Trong phiên này, tôi muốn chỉ ra cách bạn cũng có thể tạo Tiện ích mở rộng web Safari cho iOS.

Và tôi sẽ sử dụng Sea Creator làm ví dụ về cách tôi lấy một tiện ích mở rộng hiện có và đưa nó lên iOS chỉ với một vài thay đổi.

Nhưng đừng lo lắng nếu bạn chưa bao giờ viết tiện ích mở rộng trình duyệt trước đây.

Tôi sẽ cung cấp cho bạn một cái nhìn tổng quan về cách thức hoạt động của Tiện ích mở rộng Web và cách bạn có thể bắt đầu tạo một tiện ích mới.

Trên đường đi, tôi sẽ đề cập đến một số kỹ thuật gỡ lỗi và các phương pháp hay nhất để giúp tiện ích mở rộng của bạn trở nên tốt nhất có thể.

Và tôi sẽ kết thúc nó với một số suy nghĩ về quyền riêng tư của người dùng và cách nó liên quan đến mô hình quyền của Tiện ích mở rộng web Safari.

Vì vậy, hành trình của chúng tôi bắt đầu bằng việc tạo ra một tiện ích mở rộng web có thể chạy trên iOS ngay từ đầu.

Hãy nhìn vào hậu trường để hiểu cách thức hoạt động của nó.

Điều quan trọng là phải hiểu rằng đối với Safari, Tiện ích mở rộng web là một phần của ứng dụng.

Vì vậy, khi bạn muốn cài đặt một tiện ích mở rộng web, bạn cài đặt ứng dụng của nó.

Và giống như bất kỳ loại ứng dụng iOS nào khác, các ứng dụng có Tiện ích mở rộng web Safari có thể được tìm thấy trên App Store.

Và Xcode có mọi thứ bạn cần để xây dựng một ứng dụng để vận chuyển tiện ích mở rộng của bạn.

Vì vậy, khi bạn nghĩ về việc xây dựng Tiện ích mở rộng web Safari cho iOS, bạn có thể bắt đầu từ một trong ba nơi.

Có thể bạn đang xem xét việc tạo một tiện ích mở rộng mới từ đầu, hoặc có thể bạn đã viết một tiện ích mở rộng cho một trình duyệt khác và bạn muốn mang nó đến Safari, hoặc có thể bạn đã có tiện ích mở rộng cho Safari trên Mac và bạn cũng muốn cung cấp nó trên iOS.

Tôi muốn xem lại những gì bạn có thể làm trong từng trường hợp này.

Vì vậy, trước tiên, nếu bạn muốn tạo một Tiện ích mở rộng Web hoàn toàn mới, bạn có thể sử dụng các mẫu đi kèm của Xcode, giúp bạn dễ dàng bắt đầu.

Bạn có thể tạo một dự án Xcode mới và sử dụng mẫu Ứng dụng Mở rộng Safari để bắt đầu xây dựng một tiện ích mở rộng web cũng như ứng dụng chứa nó.

Và khi bạn sử dụng mẫu này, bạn sẽ nhận được một tiện ích mở rộng hoàn chỉnh với tất cả các tài nguyên mà tiện ích mở rộng web điển hình có thể có.

Bạn có thể sử dụng điều này làm điểm khởi đầu bằng cách tùy chỉnh những gì đã có ở đó hoặc thêm hoặc xóa các phần theo những gì tiện ích mở rộng của bạn cần.

Bây giờ, nếu bạn đã xây dựng Tiện ích mở rộng Web cho một trình duyệt khác, bạn có thể tận dụng một công cụ gọi là Trình chuyển đổi Tiện ích mở rộng Web Safari để tự động tạo dự án Xcode từ tiện ích mở rộng hiện có đó.

Bạn chỉ cần chạy trình chuyển đổi trên dòng lệnh, cung cấp cho nó một đường dẫn đến tài nguyên tiện ích mở rộng của bạn và nó sẽ tạo ra một dự án Xcode mới đóng gói tiện ích mở rộng của bạn trong một ứng dụng gốc.

Và mới trong Xcode 13, Safari Web Extension Converter tạo ra một dự án hỗ trợ Safari trên cả iOS và macOS theo mặc định.

Và dự án mới được tạo, theo mặc định, tham chiếu đến tài nguyên tiện ích mở rộng hiện tại của bạn ở đường dẫn ban đầu thay vì sao chép chúng.

Cuối cùng, nếu bạn đã thiết lập dự án Xcode trong quá khứ để xây dựng Tiện ích mở rộng web Safari cho macOS, bạn cũng có thể sử dụng trình chuyển đổi để nâng cấp dự án đó để nó cũng hỗ trợ iOS.

Bạn có thể chạy trình chuyển đổi và cung cấp tùy chọn --rebuild-project cùng với đường dẫn đến dự án Xcode của bạn.

Sau đó, trình chuyển đổi sẽ thêm phiên bản tiện ích mở rộng tương thích với iOS và ứng dụng chứa vào dự án của bạn.

Bây giờ tôi muốn hiển thị Trình chuyển đổi tiện ích mở rộng web Safari đang hoạt động bằng cách truy tìm lại các bước đưa Sea Creator lên iOS lần đầu tiên.

Vì vậy, đây là dự án Sea Creator Xcode của tôi, mà tôi đã sử dụng để phát triển Sea Creator cho Safari trên Mac.

Nhưng nó chỉ hỗ trợ Mac ngay bây giờ, và tôi muốn sửa nó.

Vì vậy, tôi sẽ mở một thiết bị đầu cuối và nhập xcrun safari-web-extension-converter, và tôi sẽ sử dụng tùy chọn --rebuild-project, và tôi sẽ cung cấp một đường dẫn đến dự án Xcode của mình và chạy bộ chuyển đổi.

Và nó xác nhận một số chi tiết về dự án hiện tại của tôi và dừng lại để hỏi tôi liệu tôi có muốn ghi đè lên nó bằng phiên bản đa nền tảng hay không.

Ngoài ra, bất cứ khi nào bạn chạy bộ chuyển đổi, nó sẽ cảnh báo bạn về các vấn đề tương thích tiềm ẩn với tiện ích mở rộng của bạn.

Trong trường hợp này, nó cảnh báo tôi về việc sử dụng một thứ gọi là trang nền liên tục, không được hỗ trợ trên iOS.

Tôi sẽ cần sửa cái này sau.

Nhưng bây giờ, tôi sẽ để bộ chuyển đổi tiếp tục hoạt động.

Và khi nó hoàn thành, dự án của tôi sẽ tự động mở ra.

Lưu ý rằng có các thư mục ở đây cho cả phiên bản iOS và macOS của ứng dụng của tôi và tiện ích mở rộng.

Bây giờ, tôi muốn xem thư mục Tài nguyên trong nhóm tiện ích mở rộng được chia sẻ.

Đây là nơi tôi sẽ tìm thấy các phần cốt lõi của Sea Creator Web Extension.

Đối với những người bạn mới sử dụng Web Extension API, tôi muốn giải thích một số phần này là gì, vì tôi sẽ đề cập đến chúng sau.

Tôi sẽ bắt đầu với bản kê khai.

Đây là một tệp JSON mô tả cấu trúc của phần mở rộng.

Nó bao gồm thông tin quan trọng như tên của tiện ích mở rộng, trang web nào nó muốn truy cập và những tính năng mà nó hỗ trợ, chẳng hạn như trang bật lên hoặc trang Tab mới như Sea Creator có.

Tiếp theo, có một nguồn JavaScript được gọi là tập lệnh nền.

Trình duyệt có thể chạy tập lệnh này trong nền khi tiện ích mở rộng của bạn được bật và nó cho phép tiện ích mở rộng của bạn lắng nghe các sự kiện khác nhau đến từ trình duyệt hoặc các phần khác của tiện ích mở rộng của bạn.

Kịch bản nền của Sea Creator theo dõi bộ đếm đó về số lượng biểu tượng cảm xúc mà nó được thêm vào các trang web.

Tiếp theo, có một loại kịch bản khác được gọi là kịch bản nội dung.

Trình duyệt tự động chạy tập lệnh này trên các trang web mà người dùng truy cập.

Một tiện ích mở rộng có thể có bất kỳ số lượng tập lệnh nội dung nào và bản kê khai chỉ định tập lệnh nội dung nào sẽ chạy trên trang web nào.

Tập lệnh này cung cấp cho tiện ích mở rộng của bạn sức mạnh để mở rộng và tùy chỉnh các trang bằng cách thao tác trực tiếp chúng.

Ví dụ, trang nội dung của Sea Creator là thứ thực sự thay thế tên động vật bằng biểu tượng cảm xúc.

Và sau khi làm điều đó, nó sẽ gửi một tin nhắn đến tập lệnh nền để nó có thể cập nhật bộ đếm trung tâm đó.

Tất nhiên, tiện ích mở rộng cũng có một số tệp HTML, CSS và các tệp JavaScript khác cho trang Tab Mới và cả trang bật lên đó.

Và cuối cùng, có một số tài nguyên khác ở đây như chuỗi được bản địa hóa, cũng như các biểu tượng của tiện ích mở rộng và đồ họa khác.

Vì vậy, tất cả các phần này kết hợp với nhau để tạo ra Tiện ích mở rộng web Sea Creator.

Và nhờ có Trình chuyển đổi tiện ích mở rộng web Safari, bây giờ tôi có một dự án đóng gói tất cả những thứ này vào một ứng dụng gốc.

Và tôi có thể chạy dự án của mình ngay bây giờ, vì vậy tôi có thể bắt đầu sử dụng Sea Creator trong Safari ngay lập tức.

Tôi sẽ làm điều đó ngay bây giờ bằng cách vào thanh công cụ ở đầu màn hình, chọn Sea Creator cho iOS và chọn điểm đến nơi tôi muốn chạy ứng dụng.

Tôi không có bất kỳ thiết bị iOS nào được kết nối, vì vậy trong trường hợp này, tôi sẽ sử dụng trình mô phỏng iPhone.

Sau đó tôi sẽ nhấp vào nút Chạy.

Và Xcode sau đó sẽ xây dựng dự án ứng dụng của tôi, tải trình giả lập và chạy ứng dụng của tôi.

Vì vậy, đây là ứng dụng Sea Creator được tạo bởi Web Extension Converter và nó chứa Sea Creator Web Extension.

Vào đầu phiên này, tôi đã chỉ ra rằng tôi có thể bật tiện ích mở rộng trực tiếp trong Safari, nhưng như ứng dụng gợi ý, tôi cũng có thể sử dụng Cài đặt để quản lý tiện ích mở rộng của mình.

Và tôi muốn thể hiện điều đó ở đây, vì vậy tôi sẽ chuyển sang Cài đặt.

Tôi sẽ nhảy vào Safari, Tiện ích mở rộng, và sau đó là Sea Creator.

Và đây là trang chi tiết cho Sea Creator với một số thông tin về tiện ích mở rộng và công tắc để bật nó lên.

Nhưng công tắc đó bị chuyển sang màu xám và tôi chưa thể bật tiện ích mở rộng.

Điều này có nghĩa là có một vấn đề với tiện ích mở rộng khiến nó không tải được.

Tôi chắc chắn cần phải xem xét điều này tiếp theo.

Và đây là nơi tôi muốn nói về gỡ lỗi.

Đó là bước đầu tiên tuyệt vời để có thể xây dựng dự án và cài đặt tiện ích mở rộng của bạn, nhưng tất nhiên, điều cần thiết là phải biết cách đào sâu hơn để tìm hiểu lý do tại sao mọi thứ trở nên tồi tệ nếu chúng xảy ra.

Thật dễ dàng để xác định lỗi trong tiện ích mở rộng web và sử dụng các công cụ như Trình kiểm tra web để gỡ lỗi các phần của tiện ích mở rộng của bạn và đó là những gì tôi sẽ chỉ cho bạn ngay bây giờ.

Nhìn lại Cài đặt, có một lỗi ở đây ở dưới cùng cho tôi biết rằng Tiện ích mở rộng trên iOS phải có trang nền không liên tục.

Điều này nghe có vẻ quen thuộc.

Đó là cùng một vấn đề mà bộ chuyển đổi đã cảnh báo tôi trước đó.

Và bây giờ tôi thực sự muốn đi sửa nó.

Vì vậy, tôi sẽ quay lại Xcode, mở bản kê khai và thêm khóa "liên tục": khóa sai trong phần nền.

Tôi sẽ nói về sự thay đổi này chi tiết hơn sau, nhưng hiện tại, điều này sẽ giúp tôi vượt qua lỗi.

Bây giờ tôi đã thực hiện thay đổi này, tôi sẽ chạy lại ứng dụng để cài đặt tiện ích mở rộng cập nhật trên trình giả lập.

Và đây là ứng dụng Sea Creator một lần nữa.

Có vẻ như tôi chỉ gặp một lỗi cần sửa, vì vậy bây giờ tôi sẽ đi thẳng đến Safari thay vì quay lại Cài đặt.

Tôi sẽ mở Safari, mở danh sách Tiện ích mở rộng và có Sea Creator, và có vẻ như tôi có thể bật nó ngay bây giờ.

Safari cung cấp cho tôi sự lựa chọn để sử dụng trải nghiệm Tab Mới của Sea Creator.

Và tôi muốn kiểm tra xem nó trông như thế nào trên iPhone vì tôi chưa từng thấy nó trước đây.

Vì vậy, tôi sẽ đặt nó làm trang Tab Mới của mình, đóng danh sách Tiện ích mở rộng và mở một tab mới.

Và đúng như tôi mong đợi, có trang Tab Mới từ Sea Creator.

Nhưng văn bản thực sự nhỏ, và trang trông không đẹp.

Đây là lần đầu tiên tôi chạy tiện ích mở rộng này trên iOS, vì vậy không có gì đáng ngạc nhiên khi nội dung vẫn chưa được điều chỉnh để hoạt động tốt với iPhone.

Tôi muốn sửa cái này ngay bây giờ, và để làm điều đó, tôi sẽ sử dụng Web Inspector để xem xét kỹ hơn trang này và thử một vài thay đổi mà tôi có trong đầu.

Vì vậy, để đến Trình kiểm tra web, tôi sẽ mở Safari trên máy Mac của mình và sau đó tôi sẽ kiểm tra lại Tùy chọn nâng cao của Safari để đảm bảo rằng tôi đã bật menu Phát triển.

Và bây giờ tôi đã có menu Phát triển đó, tôi có thể mở nó ra, chọn Trình mô phỏng iPhone mà tôi đang sử dụng và chọn một trang để kiểm tra.

Bây giờ, có hai lựa chọn ở đây cho Sea Creator.

Tôi có thể chọn Trang nền mở rộng nếu tôi muốn gỡ lỗi tập lệnh nền, nhưng trong trường hợp này, tôi muốn kiểm tra trang Tab mới.

Vì vậy tôi sẽ chọn tùy chọn khác.

Và bây giờ tôi đang ở trong Web Inspector.

Điều đầu tiên tôi muốn giải quyết ở đây là kích thước tổng thể của trang.

Theo mặc định, Safari trên iPhone hiển thị trang web như thể nó có kích thước bằng trình duyệt máy tính để bàn, và sau đó nó chia tỷ lệ nội dung lớn hơn xuống để tất cả đều vừa với màn hình.

Nhưng tôi không muốn hành vi này ở đây vì nó làm cho văn bản quá nhỏ.

Vì vậy, tôi sẽ sử dụng một phương pháp rất phổ biến khi nói đến thiết kế web cho iPhone.

Tôi sẽ thêm một thẻ meta khung nhìn để yêu cầu Safari không mở rộng nội dung theo cách này.

Tôi sẽ chọn phần tử Head, thêm phần tử Child và thêm nội dung của thẻ meta viewport đó.

Tôi sẽ thêm thẻ và trang cập nhật trực tiếp trong trình giả lập để đáp ứng với sự thay đổi đó.

Bây giờ tất cả văn bản đều ở kích thước có thể đọc được, nhưng không phải tất cả đều vừa với màn hình, đó là vấn đề tiếp theo của tôi.

Tôi muốn kiểm tra các yếu tố trên trang này để hiểu tại sao nó lại xuất hiện như thế này.

Tôi sẽ xem thẻ nội dung và tôi nhận thấy có div này ở đây chứa tất cả nội dung trên trang.

Nếu tôi tập trung vào nó và nhìn vào thanh bên biểu định kiểu bên phải, tôi nhận thấy rằng phần tử có chiều rộng cố định là 850.

Điều đó sẽ có ý nghĩa trên máy tính để bàn, nơi các cửa sổ có thể thực sự rộng và bạn muốn văn bản kết thúc vào một lúc nào đó.

Nhưng điều đó không hoạt động trên iPhone vì điện thoại không rộng như vậy.

Tôi nghĩ sẽ có ý nghĩa hơn ở đây nếu quy tắc đó đặt chiều rộng tối đa cho nội dung thay vì yêu cầu chiều rộng chính xác.

Và tôi có thể chỉ cần chỉnh sửa quy tắc ở đây.

Tôi sẽ nhấp vào chiều rộng và thay đổi nó thành chiều rộng tối đa, và trang trong trình giả lập cập nhật để phản ánh sự thay đổi đó.

Bây giờ chiều rộng của nội dung phù hợp hơn nhiều với iPhone và tất cả văn bản đều vừa vặn trên màn hình.

Điều này có vẻ tốt hơn nhiều bây giờ, nhưng những thay đổi mà tôi đã thực hiện chỉ là tạm thời cho phiên Thanh tra này.

Tôi thực sự muốn lưu những thay đổi này trở lại dự án của mình để tôi không bị mất chúng.

Và thật dễ dàng để lưu một bản sao cập nhật của bảng định kiểu trong khi tôi làm việc trong Trình kiểm tra bảng định kiểu.

Tôi có thể chỉ cần nhập Command+S để lưu biểu định kiểu của mình có quy tắc cập nhật đó.

Và tôi sẽ ghi đè lên new_tab_page.css trong dự án của mình.

Nhưng để thay đổi khung nhìn, tôi đã thêm thẻ đó vào trang web trực tiếp thay vì tài nguyên tĩnh, vì vậy tôi sẽ phải thực hiện thay đổi tương tự đối với nguồn gốc.

Tôi sẽ chọn thẻ đó, sao chép nó, quay lại Xcode, mở nguồn đó cho trang Tab Mới và dán nội dung vào đó.

Vì vậy, lần tới khi tôi chạy Sea Creator, nó sẽ sử dụng nguồn trang và biểu định kiểu được cập nhật đó, và nó sẽ trông đẹp trở lại.

Và đó là một vài ví dụ về việc sử dụng Web Inspector để xem xét dưới mui xe của tiện ích mở rộng web, hiểu chính xác những gì đang xảy ra và thử nghiệm những thay đổi tiềm năng trong khi lặp lại tiện ích mở rộng.

Hiện tại, tôi sẽ chỉ xem trang Tab Mới, nhưng sau này trong quá trình phát triển, rõ ràng tôi nên đi kiểm tra tất cả các phần khác của tiện ích mở rộng trên iOS và tôi sẽ sử dụng các công cụ và kỹ thuật tương tự cho việc đó.

Bạn có thể sử dụng cài đặt tiện ích mở rộng của Safari trên iOS để xem bất kỳ lỗi nào trong cấu hình Tiện ích mở rộng Web của mình.

Cụ thể, Sea Creator đã gặp lỗi nghiêm trọng khi sử dụng trang nền liên tục, nhưng cũng có thể có những cảnh báo không gây tử vong ở đây mà bạn nên kiểm tra.

Những chi tiết này sẽ chỉ xuất hiện trong Cài đặt để gỡ lỗi các bản dựng ứng dụng của bạn từ Xcode chứ không phải cho các bản sao từ App Store hoặc TestFlight.

Khi bạn thực hiện các thay đổi đối với tiện ích mở rộng web của mình, bạn chỉ cần chạy lại ứng dụng của mình để cập nhật tiện ích mở rộng trên thiết bị hoặc trình mô phỏng.

Và tất nhiên, Web Inspector cho phép bạn điều tra các vấn đề với nội dung web của tiện ích mở rộng.

Hãy nhớ rằng để truy cập Trình kiểm tra web, tôi phải bật menu Phát triển trong Tùy chọn nâng cao của Safari trên Mac.

Trong bản demo của mình, tôi đã sử dụng trình mô phỏng iOS cho tiện ích mở rộng của mình, nhưng nếu bạn muốn sử dụng thiết bị iOS vật lý, bạn cũng sẽ cần bật hỗ trợ Trình kiểm tra web trên thiết bị đó trong Cài đặt nâng cao của Safari.

Để đi sâu hơn vào Web Inspector và tìm hiểu về một số tính năng mới nhất của nó, hãy xem các cải tiến của Discover Web Inspector.

Bây giờ tôi đã tạo Tiện ích mở rộng web Safari cho iOS và tôi đã gỡ lỗi một số vấn đề cơ bản, tôi muốn hướng dẫn một số phương pháp hay nhất cần ghi nhớ, bao gồm một số điều bạn có thể cần chú ý khi xây dựng tiện ích mở rộng cho Safari trên iOS.

Tôi sẽ tập trung vào năm chủ đề có thể liên quan đến tiện ích mở rộng của bạn, bắt đầu với các trang nền không liên tục.

Trang nền là một trang web mà trình duyệt tải để chạy tập lệnh nền của tiện ích mở rộng của bạn.

Và trang này cho phép tiện ích mở rộng của bạn xử lý các sự kiện được gửi bởi trình duyệt hoặc các phần khác của tiện ích mở rộng của bạn.

Nhưng việc giữ cho trang này được tải có chi phí hiệu suất.

Nó có thể sử dụng bộ nhớ và nguồn điện như thể bạn đang mở và chạy thêm một tab cho mọi tiện ích mở rộng được bật.

Giữ tất cả các trang này được tải mọi lúc có thể khá lãng phí.

Nhưng bạn có thể làm cho một trang nền không liên tục, có nghĩa là trình duyệt sẽ chỉ tải nó khi tiện ích mở rộng của bạn thực sự cần hoạt động và trình duyệt sau đó có thể dỡ trang đó khi nó không hoạt động trong một thời gian.

Bằng cách đó, chi phí hiệu suất chỉ được thanh toán trong khi phần mở rộng của bạn đang làm điều gì đó hữu ích.

Điều này rất quan trọng vì các trang nền phải không liên tục trên iOS, nơi bộ nhớ hệ thống và thời lượng pin đặc biệt ở mức cao.

Các mẫu mở rộng web trong Xcode đã đi kèm với một trang nền không liên tục, vì vậy chúng đã sẵn sàng để chạy trên iOS.

Nhưng nếu bạn có một tiện ích mở rộng hiện có sử dụng trang nền liên tục như Sea Creator đã làm, bạn sẽ cần thay đổi nó để không liên tục.

Và bạn có thể làm điều đó bằng cách thêm khóa sai "kiên tục:" đó vào phần nền của bản kê khai của bạn.

Để tìm hiểu thêm về một số phương pháp hay nhất và các vấn đề tiềm ẩn mà bạn có thể gặp phải khi cập nhật tiện ích mở rộng để sử dụng trang nền không liên tục, hãy xem Khám phá các cải tiến tiện ích mở rộng web Safari.

Tiếp theo, hãy nói về thiết kế đáp ứng.

Như chúng ta đã học với Sea Creator, việc đưa tiện ích mở rộng sang iOS có nghĩa là nội dung web của nó có thể được hiển thị trong các môi trường mới mà bạn chưa từng xem xét trước đây.

Giống như tôi đã làm với trang Tab mới của Sea Creator, hãy đảm bảo kiểm tra bố cục nội dung web tiện ích mở rộng của bạn trên iPhone và iPad và sử dụng thiết kế đáp ứng có thể chứa nhiều kích thước màn hình khác nhau.

Nhưng sự khác biệt về kích thước màn hình không phải là sự cân nhắc duy nhất khi nói đến việc làm cho nội dung web của bạn trông tuyệt vời trên iOS.

Hãy để tôi kể cho bạn nghe về một vài điều bạn nên biết.

Nếu tiện ích mở rộng của bạn có nội dung web toàn trang đưa ra các yếu tố quan trọng ở gần cuối màn hình, bạn có thể thấy nó được bao phủ bởi Thanh Tab của Safari hoặc chỉ báo chính của thiết bị.

Theo thuật ngữ CSS, khu vực gần cạnh màn hình nơi nội dung có thể bị ẩn một phần được gọi là khu vực không an toàn, trong khi khu vực có thể sử dụng của khung nhìn được gọi là khu vực an toàn.

Bằng cách sử dụng các biến môi trường CSS, bạn có thể tính toán vùng an toàn bên trong để đảm bảo các yếu tố quan trọng được định vị trong vùng an toàn.

Trên iPhone, điều này cũng đáng xem xét trong Landscape, nơi các thiết bị có thể có khu vực an toàn ở bên trái và bên phải của màn hình.

Bằng cách sử dụng CSS tương tự và bằng cách chỉ định tham số khung nhìn phù hợp trong khung nhìn của bạn, bạn có thể cung cấp cho nội dung web của mình một thiết kế tràn cạnh vẫn giữ nội dung quan trọng trong khu vực an toàn.

Kiểm tra Thiết kế cho Safari 15 để tìm hiểu thêm về các API này có thể làm cho nội dung web của bạn cảm thấy thoải mái hơn trên iOS.

Trên iPad và trình duyệt máy tính để bàn, nếu tiện ích mở rộng của bạn có trang bật lên, bạn có thể quen với việc nó được hiển thị dưới dạng cửa sổ bật lên có kích thước thoải mái để phù hợp với nội dung của nó.

Nhưng trên iPhone, tuy nhiên, Safari sẽ hiển thị trang web này dưới dạng một trang tính, điều này có thể gây ngạc nhiên cho nội dung của bạn.

Tấm trải dài toàn bộ chiều rộng của thiết bị và nó có thể được bố trí cao hơn nội dung mong đợi.

Trong ảnh chụp màn hình này của phiên bản đầu tiên của Sea Creator, nội dung không có nhiều phần đệm từ cạnh màn hình và chúng tôi đặt màu nền trên một phần tử riêng lẻ trong trang thay vì trên phần thân máy.

Vì vậy, văn bản trông hơi chật chội và nền không lấp đầy toàn bộ trang.

Nhưng kể từ đó chúng tôi đã cập nhật căn chỉnh và đệm của nội dung để có thêm một chút không gian để thở và bây giờ chúng tôi chỉ định một màu nền trên thân để nó bao phủ toàn bộ trang tính.

Nếu tiện ích mở rộng của bạn có trang bật lên, hãy suy nghĩ xem bạn có nên thực hiện các thay đổi tương tự cho tiện ích mở rộng của mình hay không.

Và lưu ý rằng Safari cũng sẽ sử dụng một bài thuyết trình tương tự trong Phong cảnh.

Đảm bảo kiểm tra giao diện tiện ích mở rộng của bạn trong các cấu hình này để đảm bảo bố cục của nó có ý nghĩa khi được cung cấp thêm không gian này.

Và cuối cùng trong số những cân nhắc về thiết kế, tôi muốn đề cập đến Dynamic Type.

Dynamic Type là một tính năng cho phép người dùng điều chỉnh kích thước của văn bản và các yếu tố trực quan khác.

Bạn có thể làm cho nội dung nhỏ hơn để phù hợp hơn hoặc lớn hơn để nó hiển thị rõ ràng hơn.

Đảm bảo kiểm tra giao diện tiện ích mở rộng của bạn dưới kích thước văn bản nhỏ hơn hoặc lớn hơn để đảm bảo rằng nó trông ổn với bất kỳ kích thước nào mà người dùng chọn.

Để giúp nội dung web của bạn tận dụng tối đa Dynamic Type, WebKit có nhiều phông chữ hệ thống tôn trọng tùy chọn kích thước văn bản của người dùng và thay đổi kích thước để phù hợp.

Bạn nên áp dụng các phông chữ này trong tiện ích mở rộng của mình để văn bản của nó vẫn có thể đọc được một cách thoải mái đối với người dùng, giống như phần còn lại của giao diện Safari.

Vì vậy, điều chính rút ra ở đây là thiết kế nội dung web tiện ích mở rộng của bạn với giao diện người dùng của Safari.

Kiểm tra bất kỳ nội dung web toàn trang nào trên iPhone để đảm bảo rằng nó thích ứng tốt với kích thước màn hình và không xung đột với giao diện người dùng của Safari ở cuối màn hình.

Bạn nên kiểm tra trang web bật lên của mình trên iPhone để đảm bảo bố cục của nó có ý nghĩa với bản trình bày kiểu trang tính và bạn nên kiểm tra giao diện của mình trên một loạt các kích thước Loại động để đảm bảo nó điều chỉnh theo sở thích của người dùng.

Để biết thêm các mẹo về thiết kế nội dung web để trông tuyệt vời trong giao diện mới của Safari, hãy xem Thiết kế cho Safari 15.

Tiếp theo, các sự kiện con trỏ.

Nếu tiện ích mở rộng của bạn hiện phụ thuộc vào việc xử lý các sự kiện chuột cho các lần nhấp và kéo tùy ý, hãy lưu ý rằng các sự kiện tương tự sẽ không được gửi khi người dùng nhấn vào iOS.

Thay vào đó, bạn nên áp dụng API Sự kiện Con trỏ.

Nó tương tự như API Sự kiện Chuột và nó hoạt động giống như với đầu vào chuột, nhưng API Sự kiện Con trỏ cũng báo cáo các lần chạm và đầu vào Apple Pencil.

Và bây giờ hãy nói về Web Extension Windows API.

Trên các trình duyệt máy tính để bàn, người dùng có thể mở nhiều cửa sổ và Tiện ích mở rộng web của bạn có thể sử dụng API browser.windows để hoạt động với các cửa sổ này.

Và điều tương tự cũng đúng trên iPad, nơi bạn cũng có thể mở nhiều cửa sổ của Safari.

Mỗi cửa sổ Safari có thể ở chế độ xem toàn màn hình hoặc nó có thể ở chế độ xem tách biệt, song song với một ứng dụng khác, có thể là một Safari khác.

Tuy nhiên, dưới mui xe, mỗi cửa sổ này thực sự được gọi là một cảnh trên iOS.

Nếu tiện ích mở rộng của bạn sử dụng Windows API, bạn nên biết rằng mỗi cảnh của Safari thực sự có hai cửa sổ: một để duyệt web thông thường và một cho duyệt web Riêng tư.

Điều này cũng đúng trên iPhone, mặc dù chỉ có một cảnh của Safari.

Nếu tôi gọi browser.windows.getAll API để truy vấn những cửa sổ nào đang mở, thì API sẽ trả về hai đối tượng cửa sổ này.

Trong cửa sổ đầu tiên, thuộc tính ẩn danh là sai và tập trung là đúng.

Điều này đại diện cho cửa sổ tôi đang xem, đó là trong trình duyệt thông thường chứ không phải Duyệt web riêng tư.

Cửa sổ thứ hai giữ các tab Duyệt web Riêng tư trong cảnh Safari.

Và tất nhiên, các thuộc tính của nó khác với cửa sổ đầu tiên.

Ẩn danh là đúng, và tập trung là sai.

Bây giờ khi tôi chuyển Safari sang Duyệt web Riêng tư và gọi lại windows.getAll, API trả về các đối tượng cửa sổ khác nhau.

Bây giờ thuộc tính tập trung đã thay đổi trong cả hai cửa sổ và cửa sổ thứ hai bây giờ có tiêu điểm.

Điều này hoạt động giống hệt nhau trên iPad, nơi một cảnh Safari được đại diện bởi hai cửa sổ.

Nhưng nếu tôi mở cảnh thứ hai của Safari trong chế độ xem phân tách, API bây giờ sẽ báo cáo bốn cửa sổ.

Và nếu tiện ích mở rộng của tôi lắng nghe sự kiện windows.onCreated, nó sẽ quan sát thấy sự kiện đó cháy hai lần khi mở chế độ xem phân chia, một lần cho mỗi trong hai cửa sổ mới trong cảnh Safari mới.

Vì vậy, nếu bạn sử dụng API này, hãy ghi nhớ mô hình này khi bạn gặp phải các cửa sổ bổ sung mà ban đầu bạn có thể không mong đợi.

Ngoài mô hình này về cửa sổ thực sự là gì, có một vài hạn chế của API cửa sổ có thể ảnh hưởng đến tiện ích mở rộng của bạn.

Các phương pháp để tạo, xóa và cập nhật trạng thái của cửa sổ không khả dụng.

Trên iOS, vị trí cửa sổ được kiểm soát hoàn toàn bởi người dùng, không phải bất kỳ ứng dụng hoặc tiện ích mở rộng nào.

Sự kiện windows.onRemoved sẽ không bị kích hoạt như bạn có thể mong đợi khi người dùng đóng Safari khỏi trình chuyển đổi ứng dụng.

Điều đó không thực sự đóng hoặc xóa một cửa sổ.

Nó chỉ để nó cho người dùng tiếp tục nơi họ đã dừng lại sau đó.

Và lưu ý rằng những hạn chế này chỉ áp dụng cho chính các cửa sổ chứ không áp dụng cho các tab trong các cửa sổ đó.

Với browser.tabs API, Web Extensions vẫn có toàn quyền kiểm soát để thêm, xóa và cập nhật các tab riêng lẻ theo ý muốn.

Bây giờ, cuối cùng trong các phương pháp hay nhất là phát hiện tính năng.

Khi đưa tiện ích mở rộng hiện có lên iOS, bạn có thể thấy một số API không khả dụng - ví dụ: API cửa sổ mà tôi đã đề cập một lúc trước.

Nhưng có một vài cái khác, như menu ngữ cảnh và WebRequest.

Nếu các phần không thiết yếu của tiện ích mở rộng của bạn sử dụng các API như vậy, hãy đảm bảo sử dụng tính năng phát hiện để xử lý trường hợp chúng không khả dụng.

Vì vậy, thay vì gọi vô điều kiện các API này, hãy điều kiện hóa mã đó dựa trên sự tồn tại của các API đó, vì vậy bạn có thể loại trừ sạch các phần của tiện ích mở rộng của mình và làm cho nó linh hoạt hơn khi nói đến trình duyệt mà nó hỗ trợ.

Bạn cũng nên sử dụng mẫu này khi áp dụng các API mới được thêm vào trong tương lai, vì chúng có thể không có sẵn ngay lập tức trên tất cả các trình duyệt hoặc trong các phiên bản trình duyệt trước đó mà một số người dùng có thể vẫn đang sử dụng.

Và điều đó kết thúc các phương pháp hay nhất.

Bây giờ tôi đã đề cập đến nhiều phần của Tiện ích mở rộng web Safari, nhưng tôi đã lưu chủ đề được cho là quan trọng nhất cuối cùng và đó là quyền riêng tư của người dùng.

Quyền riêng tư của người dùng là một phần quan trọng trong mọi thứ chúng tôi làm, vì vậy chúng tôi tin rằng người dùng xứng đáng được minh bạch và kiểm soát khi nói đến cách xử lý dữ liệu cá nhân của họ.

Và tất nhiên điều đó bao gồm mọi thứ họ làm trong Safari.

Tiện ích mở rộng web có thể có được một lượng lớn quyền truy cập vào trình duyệt của người dùng, vì vậy quyết định về việc liệu điều đó có nên được cho phép hay không và trang web nào nên tùy thuộc vào người dùng.

Trong lịch sử, các trình duyệt khác sẽ cung cấp cho tiện ích mở rộng quyền truy cập đầy đủ vào mọi trang web mà nó yêu cầu ngay lập tức khi bạn bật nó lên, điều này có khả năng yêu cầu bạn hy sinh quyền riêng tư ngay từ đầu chỉ để thưởng thức tiện ích mở rộng.

Nhưng Safari nhằm mục đích làm tốt hơn bằng cách cung cấp tính minh bạch và kiểm soát cho người dùng Tiện ích mở rộng web với mô hình chọn tham gia trong đó các tiện ích mở rộng chỉ được cấp quyền truy cập vào các trang web khi người dùng đồng ý.

Bạn đã nhìn thoáng qua điều này trước đó với Sea Creator.

Nó không ngay lập tức bắt đầu sửa đổi các trang của tôi khi tôi bật nó lên, nhưng nó chỉ có thể làm điều đó khi tôi nói rõ ràng với Safari, "Vâng, tôi muốn sử dụng tiện ích mở rộng này ở đây và tôi ổn với việc nó có quyền truy cập."

Và một khi tôi cung cấp quyền truy cập tiện ích mở rộng đó, Safari cho tôi biết trong Tab Bar rằng tôi có tiện ích mở rộng đang chạy trên trang này, vì vậy tôi biết rằng tiện ích mở rộng có thể thấy trình duyệt web của tôi ở đây.

Nhưng nếu tôi điều hướng đến bất kỳ trang web nào mà tôi chưa cho phép tiện ích mở rộng truy cập, chỉ báo đó sẽ biến mất.

Và tôi biết rằng tiện ích mở rộng đó không chạy trên trang này và không thể thấy những gì tôi đang làm ở đây.

Hãy xem xét mô hình quyền này chi tiết hơn.

Một lần nữa, người dùng chọn tiện ích mở rộng của bạn khi họ chọn sử dụng nó trên các trang web cụ thể.

Safari sẽ yêu cầu người dùng đồng ý bằng cách trình bày một hộp thoại cho biết rõ tiện ích mở rộng đang cố gắng truy cập trang web nào.

Điều này xảy ra khi người dùng gọi tiện ích mở rộng của bạn bằng cách chọn nó trong menu Hành động hoặc bằng cách sử dụng bất kỳ phím tắt nào của nó.

Và sự đồng ý này là bắt buộc để bất kỳ API nhạy cảm với quyền riêng tư nào hoạt động.

Cụ thể, bất kỳ API nào tiết lộ URL hoặc tiêu đề của tab sẽ chỉ bao gồm thông tin này nếu tiện ích mở rộng của bạn có quyền cho URL đó.

API Cookies sẽ chỉ cho phép tiện ích mở rộng của bạn đọc và ghi cookie cho các trang web mà tiện ích mở rộng của bạn có quyền.

Và việc tiêm JavaScript và bảng định kiểu sẽ chỉ được phép trên các trang web mà bạn đoán nó, tiện ích mở rộng của bạn có quyền.

Nếu các tập lệnh tiện ích mở rộng của bạn gọi bất kỳ API nào trong số này khi tiện ích mở rộng của bạn không có quyền bắt buộc nhưng chưa hỏi người dùng, Safari sẽ đợi để gọi trình xử lý hoàn thành của bạn và sẽ hiển thị biểu ngữ không gián đoạn ở đầu màn hình.

Điều này cho người dùng biết rằng tiện ích mở rộng của bạn muốn có thêm quyền truy cập và sau đó họ có thể xem lại tập hợp các trang web mà tiện ích mở rộng của bạn đang yêu cầu và họ có thể đưa ra quyết định cho phép hoặc từ chối quyền truy cập cho các trang web đó.

Bạn nên tránh yêu cầu nhiều quyền hơn theo cách này so với tiện ích mở rộng của bạn thực sự cần.

Đối với một số loại tiện ích mở rộng, cách suy nghĩ về sự cho phép này có thể nhiều hơn một chút so với nhu cầu của bạn.

Ví dụ: các tiện ích mở rộng chia sẻ hoặc chú thích các trang web riêng lẻ không cần quyền truy cập đầy đủ vào trang web bất cứ lúc nào người dùng truy cập vào bất kỳ tab nào, mà thay vào đó họ chỉ muốn được phép một lần để làm một việc tại một thời điểm cho người dùng.

Và có một giải pháp tuyệt vời cho những tiện ích mở rộng đó được gọi là quyền activeTab.

Khi tiện ích mở rộng của bạn yêu cầu quyền activeTab, Safari sẽ tự động cấp quyền tiện ích mở rộng của bạn trên các tab nơi người dùng sử dụng tiện ích mở rộng của bạn một cách rõ ràng.

Và sự cho phép này sẽ chỉ giới hạn ở trang web hiện tại chỉ trong tab hiện tại.

Vì vậy, nó sẽ bị thu hồi nếu người dùng điều hướng tab đó đến một trang web khác.

Safari sẽ không hiển thị lời nhắc khi cấp quyền này, vì không cần cam kết lâu dài từ người dùng.

Để áp dụng tính năng này, chỉ cần thêm activeTab vào phần Quyền trong bản kê khai của bạn.

Vì vậy, tất cả những điều này là để nói rằng trong Safari, người dùng luôn kiểm soát những trang web mà tiện ích mở rộng của họ có thể hoạt động.

Vì vậy, hãy lưu ý rằng tiện ích mở rộng của bạn sẽ không tự động hoạt động trên mọi trang mà người dùng truy cập.

Đối với nhiều tiện ích mở rộng, quyền activeTab là một cách tuyệt vời để chỉ truy cập vào các trang mà người dùng đang sử dụng tiện ích mở rộng của bạn mà không làm phiền họ về bất kỳ quyền truy cập nào ngoài đó.

Tất cả các khái niệm này đều giống nhau trên tất cả các nền tảng của chúng tôi hỗ trợ Tiện ích mở rộng web Safari.

Để xem điều này đang hoạt động trên macOS và xem xét kỹ hơn việc cập nhật tiện ích mở rộng để sử dụng activeTab, hãy xem Meet Safari Web Extensions từ WWDC 2020.

Và đó là mô hình quyền bảo vệ quyền riêng tư của Tiện ích mở rộng web Safari.

Cùng với mọi thứ khác mà tôi đã đề cập hôm nay, tôi hy vọng điều này sẽ cung cấp cho bạn cái nhìn đầy đủ hơn về Tiện ích mở rộng web Safari trên iOS và các công cụ có sẵn cho bạn để xây dựng chúng.

Chúng tôi rất vui mừng khi thấy những trải nghiệm Tiện ích mở rộng Web sẽ được đưa đến Safari trên iOS 15, bao gồm nhiều tiện ích mở rộng mà chúng tôi đã yêu thích trên Mac ngày hôm nay nhưng cũng có những tiện ích mở rộng mới tuyệt vời vẫn chưa xuất hiện.

Vì vậy, nếu bạn chưa quen với việc phát triển tiện ích mở rộng, tôi khuyến khích bạn kiểm tra các tài nguyên được liên kết được liên kết với phiên này.

Ở đó, bạn sẽ tìm thấy mã mẫu mà bạn có thể tải xuống và tự mình dùng thử.

Và bạn có thể đọc thêm về các API mở rộng web có sẵn cho bạn trong tài liệu dành cho nhà phát triển của Apple và MDN Web Docs.

Nếu bạn đã phát triển Tiện ích mở rộng Web cho một trình duyệt khác hoặc cho Safari trên Mac, tôi khuyến khích bạn dùng thử Trình chuyển đổi Tiện ích mở rộng Web Safari trong Xcode 13 để dễ dàng đưa tiện ích mở rộng của bạn lên iOS.

Nếu bạn có phản hồi như báo cáo lỗi, đề xuất hoặc vấn đề tương thích, tôi khuyến khích bạn gửi cho chúng tôi phản hồi đó tại feedbackassistant.apple.com.

Bạn cũng có thể liên hệ với chúng tôi tại Diễn đàn Nhà phát triển Apple nếu bạn muốn liên hệ hoặc có câu hỏi.

Và cuối cùng, tôi muốn giới thiệu lại hai phiên khác mà bạn có thể quan tâm.

Khám phá các cải tiến mở rộng web Safari sẽ dạy cho bạn về một số bổ sung API gần đây cho các tiện ích mở rộng web Safari.

Và Thiết kế cho Safari 15 sẽ chỉ cho bạn cách làm cho nội dung web của bạn trông tuyệt vời với thiết kế mới của Safari trong iOS 15.

Cảm ơn vì đã xem, và chúc bạn có một WWDC tuyệt vời.

[Nhạc lạc quan].