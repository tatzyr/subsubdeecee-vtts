10036

♪ ♪

Xin chào.

Chào mừng đến với buổi Phân tích Âm thanh tại WWDC.

Tên tôi là Jon Huang.

Tôi là một nhà nghiên cứu trong nhóm âm thanh.

Hôm nay, đồng nghiệp của tôi, Kevin, và tôi sẽ giới thiệu những cải tiến để phân loại âm thanh được cung cấp thông qua khung SoundAnalysis và CreateML.

Vào năm 2019, chúng tôi đã có thể đào tạo các mô hình phân loại âm thanh bằng cách sử dụng CreateML.

Chúng tôi đã chỉ ra rằng thật dễ dàng để tạo ra các mô hình phân loại âm thanh và triển khai chúng trong các thiết bị Apple.

Khi bạn sử dụng khung này, tất cả các tính toán được tối ưu hóa để tăng tốc phần cứng và được thực hiện cục bộ trên thiết bị.

Điều này giúp bảo vệ quyền riêng tư của người dùng vì âm thanh không bao giờ được gửi lên Đám mây.

Chúng tôi đã tận dụng khung Phân tích Âm thanh để giới thiệu Tính năng Trợ năng được gọi là Nhận dạng Âm thanh.

Tính năng này có thể cung cấp thông báo cho người dùng khi nghe thấy một số âm thanh nhất định trong môi trường như báo thức, vật nuôi và các âm thanh gia đình khác.

Đây chỉ là một ứng dụng phân loại âm thanh.

Hãy xem chúng ta có thể làm gì khác với nó.

Ứng dụng demo đang sử dụng micrô tích hợp trên máy Mac của tôi để nghe âm thanh trong môi trường.

Nó truyền âm thanh qua bộ phân loại âm thanh và hiển thị kết quả phân loại trong giao diện người dùng.

Vì vậy, khi tôi đang trò chuyện với bạn, lời nói được phát hiện.

Vui lòng ngồi lại với tôi một chút và xem điều gì sẽ xảy ra.

Làm cho bản thân thoải mái.

Hãy bắt đầu với một chút âm nhạc.

Này Siri, chơi "Catch a Vibe" của Karun và Mombru.

Hiện đang chơi "Catch a Vibe" của Karun và Mombru.

♪ ♪

♪ Ồ, ồ, ồ ♪

Lưu ý rằng bộ phân loại đang chọn cả âm nhạc và âm thanh hát.

♪ Tôi không biết ai cả ♪

♪ Ai cảm thấy đúng như vậy ♪

♪ Không biết ai tạo ra tôi ♪

♪ Nắm bắt một sự rung cảm, cảm nhận tần suất... ♪

Bây giờ hãy cùng tôi uống trà.

♪ Cảm thấy ổn, em yêu ♪

♪ Chúng ta có thể thấy ♪

♪ Nếu chúng ta có thể đúng ♪

♪ Xem nếu đó là điều gì đó về cách bạn cười ♪

♪ Nín thở và, em yêu, chúng ta có thể ♪

♪ Nắm bắt một sự rung cảm, cảm nhận tần số ♪

♪ Nắm bắt một sự rung cảm, chỉ có bạn và tôi ♪

♪ Cảm thấy ổn, em yêu, chúng ta có thể thấy ♪

♪ Nếu chúng ta có thể ♪

♪ Tôi đã nói, tôi đã nói ♪

♪ Nó là một phần của tôi ♪

♪ Tất cả những phần bạn thấy ♪

♪ Bạn nên tự hào về... ♪

Đây là trà ngon.

♪ Em là con của anh, trời ơi ♪

♪ Bạn là một chiếc xe đẩy, tôi hiểu rồi... ♪

♪ Làm sao điều này có thể xảy ra? ♪

♪ Làm sao điều này có thể xảy ra?... ♪

Này, Siri. Dừng lại.

Bây giờ thật hợp lý khi cho rằng tôi đã thu thập một số dữ liệu cho từng danh mục âm thanh này và đào tạo một mô hình tùy chỉnh bằng CreateML.

Vâng, tôi có thể đã làm điều đó, nhưng thực ra, bộ phân loại được sử dụng đã được tích hợp sẵn.

Mới trong năm nay, chúng tôi có một bộ phân loại âm thanh được tích hợp ngay trong khuôn khổ Phân tích Âm thanh.

Việc bật phân loại âm thanh trong ứng dụng của bạn chưa bao giờ dễ dàng hơn thế.

Nó được hỗ trợ trên tất cả các nền tảng.

Trình phân loại tích hợp là tất cả về việc đơn giản hóa trải nghiệm của nhà phát triển.

Nó loại bỏ nhu cầu thu thập và dán nhãn một lượng lớn dữ liệu, chuyên môn học máy và âm thanh chuyên biệt, và rất nhiều sức mạnh tính toán để phát triển một mô hình có độ chính xác cao.

Bạn càng ít phải lo lắng về những chi tiết này, bạn càng có nhiều thời gian để làm phong phú thêm trải nghiệm người dùng trong ứng dụng của mình.

Chỉ cần một vài dòng mã để cho phép phân loại âm thanh.

Tôi sẽ chỉ cho bạn những gì bộ phân loại này có thể làm.

Có hơn 300 danh mục để bạn sử dụng.

Chúng ta hãy xem xét kỹ hơn.

Chúng ta có thể phân loại âm thanh của động vật nuôi, động vật nuôi và động vật hoang dã.

Đối với âm nhạc, nhiều nhạc cụ có thể được nhận ra: nhạc cụ bàn phím, bộ gõ, nhạc cụ dây, nhạc cụ gió.

Chúng ta có thể phát hiện các âm thanh khác nhau của con người: hoạt động nhóm, âm thanh hô hấp, phát âm.

Sau đó, có âm thanh của những thứ như phương tiện, báo động, dụng cụ, chất lỏng và nhiều hơn thế nữa.

Các danh mục sẵn sàng sử dụng này có sẵn để bạn dùng thử.

Tôi sẽ chuyển nó cho Kevin để hướng dẫn bạn cách sử dụng bộ phân loại âm thanh này.

Cảm ơn, Jon.

Xin chào, tôi là Kevin, một kỹ sư phần mềm trong nhóm Âm thanh.

Tôi muốn chỉ cho bạn cách sử dụng trình phân loại âm thanh tích hợp mới bằng cách xem qua một ứng dụng nhỏ mà tôi đã xây dựng.

Tôi đã hy vọng Jon sẽ cho thấy trình phân loại hoạt động tốt như thế nào với chuông bò, nhưng vì nó không phù hợp với bản demo của anh ấy, tôi đã nảy ra một ý tưởng khác.

Tôi có một số phương tiện truyền thông trên máy Mac của mình mà tôi đã thu thập trong khi chuẩn bị cho phiên này và tôi khá chắc chắn rằng tôi có một số cảnh quay cũ có chứa chuông bò.

Tôi rất muốn cho bạn xem, nhưng trước tiên tôi phải tìm nó.

Điều này có nghĩa là tôi sẽ phải tìm đúng tệp và tôi sẽ phải nhìn vào bên trong để tìm đúng phần.

Vậy tôi sẽ làm điều này như thế nào?

Tôi sẽ viết một chương trình đơn giản sử dụng trình phân loại âm thanh tích hợp để đọc một tệp và cho tôi biết liệu một âm thanh nhất định có ở bên trong hay không.

Nếu âm thanh được tìm thấy, chương trình có thể sử dụng trình phân loại để cho tôi biết thời gian nó xảy ra.

Sau đó, tôi có thể sử dụng Phím tắt, hiện đã có trên macOS, để tạo quy trình làm việc chạy chương trình của tôi trên nhiều tệp.

Khi chương trình của tôi tìm thấy âm thanh, quy trình làm việc có thể tự động sử dụng thời gian phát hiện được báo cáo để trích xuất video clip có chứa âm thanh.

Điều này sẽ hoạt động tốt cho việc tìm kiếm một clip chuông bò.

Vì vậy, hãy xem nó hoạt động.

Ở đây, tôi có một thư mục đầy video.

Tôi sẽ chọn tất cả các tệp và khởi động phím tắt của mình bằng cách sử dụng menu Hành động nhanh.

Tôi được yêu cầu chọn âm thanh mà tôi muốn tìm, vì vậy từ danh sách các tùy chọn, tôi sẽ chọn Cowbell.

Bây giờ, phím tắt của tôi đang chạy, và chỉ sau một vài phút, nó tìm thấy âm thanh tôi đang tìm kiếm và hiển thị nó cho tôi trong cửa sổ Finder.

Hãy cùng xem nào.

Trông ổn đấy, Jon.

Chúng ta hãy xem xét kỹ hơn phím tắt mà tôi đã sử dụng.

Khi phím tắt của tôi bắt đầu, nó sẽ thu thập một danh sách tất cả các âm thanh mà nó có thể nhận ra và nó yêu cầu tôi chọn một âm thanh.

Sử dụng lựa chọn của tôi, nó truy cập từng tệp mà tôi đã chọn trong Finder và tìm kiếm âm thanh bên trong.

Khi âm thanh của tôi được phát hiện, nó sẽ trích xuất một vài giây từ video vào khoảng thời gian âm thanh xảy ra và cho tôi xem clip kết quả.

Trong số các bước này, hai trong số chúng sử dụng bộ phân loại tích hợp sẵn.

Đây là các bước mà tôi đã triển khai trong ứng dụng tùy chỉnh của riêng mình để Phím tắt sử dụng theo yêu cầu.

Mặc dù tôi sẽ không nói về Phím tắt chi tiết hơn, nhưng nếu bạn tò mò muốn tìm hiểu thêm, vui lòng tham khảo phiên WWDC có tựa đề "Gặp gỡ Phím tắt cho macOS".

Bây giờ hãy xem xét việc triển khai cho hai hành động tùy chỉnh của ứng dụng của tôi.

Hành động đầu tiên báo cáo tất cả các âm thanh mà ứng dụng có thể nhận ra.

Vì ứng dụng đang sử dụng bộ phân loại âm thanh tích hợp, nó có thể nhận ra vài trăm âm thanh.

Đây là một chức năng tôi đã viết để có được những âm thanh này.

Tôi tạo SNClassifySoundRequest bằng cách sử dụng trình khởi tạo mới cho phép tôi chọn trình phân loại tích hợp sẵn.

Khi tôi có yêu cầu này, tôi có thể sử dụng nó để truy vấn danh sách các âm thanh mà trình phân loại hỗ trợ.

Hành động thứ hai của ứng dụng cho Shortcuts biết khi nghe thấy âm thanh trong một tệp.

Để thực hiện điều này, tôi sẽ thực hiện phân loại âm thanh và báo cáo lại lần đầu tiên âm thanh được phát hiện, nếu nó được phát hiện.

Để thực hiện phân loại âm thanh, tôi sẽ cần chuẩn bị ba đối tượng.

Đầu tiên, tôi sẽ cần SNClassifySoundRequest, mà tôi có thể sử dụng để định cấu hình phân loại âm thanh.

Thứ hai, tôi sẽ cần một SNAudioFileAnalyzer, cho phép tôi nhắm mục tiêu phân loại đối với một tệp cụ thể.

Đối tượng thứ ba sẽ cần thêm một chút chú ý.

Tôi sẽ cần xác định loại Người quan sát của riêng mình, loại này sẽ xử lý kết quả phân loại.

Bỏ qua Người quan sát ngay bây giờ, đây là một số mã để chuẩn bị hai đối tượng đầu tiên trong số này.

Tôi có thể tạo SNClassifySoundRequest bằng cách sử dụng trình phân loại tích hợp và tôi có thể tạo SNAudioFileAnalyzer bằng URL đến tệp tôi muốn phân loại.

Nếu, tại thời điểm này, tôi đã có một Người quan sát sẵn sàng hoạt động, sẽ dễ dàng để bắt đầu phân loại âm thanh, nhưng xác định rằng Người quan sát là phần còn thiếu.

Vậy hãy làm điều đó.

Tôi đang bắt đầu ở đây với một Người quan sát trần kế thừa từ NSObject và phù hợp với giao thức SNResultsObserving.

Tôi sẽ khởi tạo các trường hợp với nhãn âm thanh mà tôi muốn tìm kiếm và tôi sẽ thêm một biến thành viên CMTime để lưu trữ thời gian mà tôi phát hiện ra âm thanh.

Tôi chỉ cần thực hiện yêu cầu: phương pháp kết quả didProduce.

Phương pháp này sẽ được gọi khi kết quả được tạo ra bằng cách phân loại âm thanh, vì vậy tôi hy vọng sẽ nhận được các trường hợp của SNClassificationResult.

Tôi có thể sử dụng phương pháp classificationForIdentifier của kết quả để trích xuất thông tin về nhãn mà tôi đang tìm kiếm.

Tôi sẽ truy vấn điểm tin cậy liên quan đến nhãn và nếu điểm đó vượt quá một ngưỡng nhất định, tôi sẽ xem xét âm thanh sẽ được phát hiện.

Khi tôi nhận thấy phát hiện lần đầu tiên, tôi sẽ tiết kiệm thời gian âm thanh xảy ra để tôi có thể cung cấp nó cho Shortcuts sau này.

Cùng với đó, Người quan sát của tôi đã hoàn thành và tôi có tất cả các phần cần thiết để xác định khi nào âm thanh xuất hiện trong một tệp.

Ví dụ này đề cập đến hai chủ đề quan trọng mà tôi muốn thảo luận thêm.

Đầu tiên, tôi sẽ nói về thời gian phát hiện, và sau đó tôi sẽ nói về các ngưỡng phát hiện.

Hãy bắt đầu với thời gian phát hiện.

Khi bạn phân loại âm thanh, tín hiệu sẽ bị chia thành các cửa sổ chồng chéo.

Đối với mỗi cửa sổ này, bạn sẽ nhận được kết quả cho bạn biết âm thanh nào đã được phát hiện và mức độ tự tin.

Bạn cũng sẽ nhận được một khoảng thời gian, cho bạn biết phần nào của âm thanh đã được phân loại.

Trong ứng dụng của tôi, khi tôi phát hiện ra âm thanh, tôi sử dụng phạm vi thời gian của kết quả để xác định thời điểm âm thanh xảy ra.

Nhưng phạm vi thời gian có thể bị ảnh hưởng khi thời lượng của một cửa sổ thay đổi.

Bạn có thể tùy chỉnh thời lượng cửa sổ để làm cho nó lớn hay nhỏ dựa trên trường hợp sử dụng của bạn.

Cửa sổ ngắn hoạt động tốt khi làm việc với âm thanh ngắn, như tiếng trống.

Điều này là do bạn có thể nắm bắt tất cả các tính năng quan trọng của âm thanh đó trong một khoảng thời gian nhỏ.

Cửa sổ nhỏ không cắt ra bất kỳ thông tin quan trọng nào.

Ưu điểm của việc sử dụng thời lượng cửa sổ nhỏ là nó cho phép bạn xác định chính xác hơn thời điểm âm thanh xảy ra.

Nhưng thời lượng cửa sổ nhỏ có thể không phù hợp khi làm việc với âm thanh dài hơn.

Ví dụ, còi báo động có thể chứa cả cao độ tăng và giảm trong một khoảng thời gian dài hơn.

Chụp tất cả các cao độ này lại với nhau trong một cửa sổ duy nhất có thể giúp phân loại âm thanh phát hiện chính xác âm thanh.

Nói chung, thật tốt khi sử dụng thời lượng cửa sổ đủ lâu để ghi lại tất cả các phần quan trọng của âm thanh mà bạn quan tâm.

Nếu bạn muốn chỉnh sửa thời lượng cửa sổ, bạn có thể đặt thuộc tính windowDuration của SNClassifySoundRequest.

Tuy nhiên, lưu ý rằng không phải tất cả các khoảng thời gian cửa sổ đều được hỗ trợ.

Các bộ phân loại khác nhau có thể hỗ trợ các khoảng thời gian cửa sổ khác nhau.

Bạn có thể kiểm tra thời lượng cửa sổ nào được hỗ trợ bằng cách đọc thuộc tính windowDurationConstraint của SNClassifySoundRequest.

Bộ phân loại tích hợp hỗ trợ thời lượng cửa sổ dài từ 1/2 giây đến 15 giây.

Thời lượng từ một giây trở lên là điểm khởi đầu tuyệt vời khi áp dụng trình phân loại trong ứng dụng của bạn.

Hãy nói tiếp theo về ngưỡng tin cậy.

Trong ứng dụng của mình, tôi đã xem xét một âm thanh được phát hiện bất cứ khi nào độ tin cậy cho âm thanh đó tăng lên trên một ngưỡng cố định.

Tôi đã chọn giá trị 0,5 cho ngưỡng của mình, nhưng có một số điều cần xem xét khi chọn ngưỡng cho ứng dụng của riêng bạn.

Trình phân loại có thể phát hiện nhiều âm thanh cùng một lúc.

Khi điều này xảy ra, bạn có thể nhận thấy rằng một số nhãn ghi điểm với độ tin cậy cao.

Không giống như khi sử dụng một mô hình tùy chỉnh được đào tạo bằng CreateML, điểm nhãn không cộng lại với giá trị của một mô hình.

Các bí mật là độc lập và không nên so sánh với nhau.

Bởi vì điểm tin cậy là độc lập, bạn có thể thấy hữu ích khi chọn các ngưỡng tin cậy khác nhau cho các âm thanh khác nhau.

Chọn một ngưỡng liên quan đến sự đánh đổi.

Ngưỡng tin cậy cao hơn làm giảm xác suất âm thanh sẽ được phát hiện sai, nhưng nó cũng làm tăng khả năng phát hiện thực sự sẽ bị bỏ lỡ vì nó không đủ mạnh.

Khi bạn chọn một ngưỡng cho đơn đăng ký của mình, bạn sẽ cần tìm một giá trị đạt được sự cân bằng phù hợp của các yếu tố này cho trường hợp sử dụng của bạn.

Lưu ý rằng điểm tin cậy có thể thay đổi khi bạn đặt thời lượng cửa sổ tùy chỉnh, vì vậy điều này cũng có thể ảnh hưởng đến ngưỡng của bạn.

Một điều cuối cùng cần ghi nhớ khi sử dụng bộ phân loại tích hợp là một số âm thanh tương tự nhau.

Trong số lượng lớn âm thanh mà trình phân loại có thể xác định là một số nhóm âm thanh có thể khó phân biệt chỉ bằng âm thanh, ngay cả đối với con người.

Nếu có thể, tốt nhất bạn nên chọn lọc về những âm thanh mà bạn chú ý đến.

Bạn nên cố gắng chỉ xem những âm thanh có khả năng xảy ra trong bối cảnh mà ứng dụng của bạn sẽ được sử dụng.

Với điều đó, hãy quay lại với Jon để tìm hiểu về những gì mới trong CreateML liên quan đến phân loại âm thanh.

Cảm ơn, Kevin, vì ví dụ tuyệt vời đó.

Tôi rất vui vì bạn đã vui vẻ với video chuông bò đó.

Bây giờ hãy để tôi chỉ cho bạn những gì mới trong CreateML hoặc cụ thể là cách bạn có thể cải thiện các mô hình tùy chỉnh của mình bằng cách tận dụng sức mạnh của trình phân loại tích hợp.

Trình phân loại tích hợp được đào tạo với rất nhiều dữ liệu trên một số lượng lớn các danh mục.

Vì vậy, mô hình thực sự chứa rất nhiều kiến thức về phân loại âm thanh.

Tất cả kiến thức này có thể được sử dụng để đào tạo mô hình tùy chỉnh của bạn bằng cách sử dụng CreateML.

Tôi sẽ chỉ cho bạn cách thức hoạt động của nó.

Bộ phân loại âm thanh có thể được tách thành hai mạng khác nhau.

Phần đầu tiên là trình trích xuất tính năng và phần thứ hai là mô hình phân loại.

Trình trích xuất tính năng, đôi khi được gọi là mô hình nhúng, là xương sống của mạng.

Nó lấy một dạng sóng âm thanh và biến nó thành một không gian chiều thấp.

Một bộ trích xuất tính năng được đào tạo tốt tổ chức các âm thanh tương tự vào các vị trí gần đó trong không gian.

Ví dụ, âm thanh của guitar sẽ tụ lại với nhau nhưng được đặt cách xa tiếng trống và âm thanh xe hơi.

Bây giờ, phần thứ hai của đường ống này là mô hình phân loại.

Nó lấy đầu ra của trình trích xuất tính năng và tính toán xác suất lớp.

Trình phân loại được hưởng lợi từ việc được ghép nối với trình trích xuất tính năng tốt, giống như trình trích xuất mà chúng tôi đã nhúng vào trình phân loại tích hợp sẵn.

Chúng tôi đang cung cấp trình trích xuất tính năng của trình phân loại tích hợp cho bạn.

Nó được gọi là Audio Feature Print.

Khi bạn đào tạo mô hình tùy chỉnh của riêng mình trong CreateML, mô hình của bạn sẽ được ghép nối với Audio Feature Print.

Với điều này, mô hình của bạn được hưởng lợi từ tất cả kiến thức có trong trình phân loại tích hợp sẵn.

So với trình trích xuất tính năng thế hệ trước, Audio Feature Print có những cải tiến trên diện rộng.

Mặc dù mạng này nhỏ hơn và nhanh hơn, nhưng nó đạt được độ chính xác cao hơn trên tất cả các bộ dữ liệu chuẩn mà chúng tôi so sánh.

Và giống như trình phân loại tích hợp sẵn, các mô hình sử dụng Audio Feature Print hỗ trợ thời lượng cửa sổ linh hoạt.

Bạn có thể chọn thời lượng cửa sổ dài để tối ưu hóa cho âm thanh như còi báo động hoặc thời lượng cửa sổ ngắn cho âm thanh như vòi trống.

Audio Feature Print là trình trích xuất tính năng mặc định mới khi bạn đào tạo một mô hình tùy chỉnh bằng CreateML.

Thời lượng Window là độ dài của âm thanh được sử dụng để tạo ra một tính năng duy nhất trong quá trình đào tạo.

Nó mặc định là ba giây, nhưng bạn có thể điều chỉnh nó cho phù hợp với nhu cầu của mình.

CreateML cung cấp cho bạn tùy chọn để chọn thời lượng cửa sổ từ 1/2 giây đến 15 giây.

Để có ví dụ chi tiết hơn về việc đào tạo một mô hình tùy chỉnh, bạn có thể xem phiên 2019 về "Đào tạo Mô hình Phân loại Âm thanh trong CreateML."

Nó cũng chỉ cho bạn cách sử dụng Khung phân tích âm thanh để chạy mô hình tùy chỉnh.

Cảm ơn vì đã tham gia cùng chúng tôi trong phiên về Phân tích Âm thanh.

Hôm nay, chúng tôi đã giới thiệu một trình phân loại âm thanh mới mạnh mẽ được tích hợp trong hệ điều hành.

Cùng với nó, chúng tôi đã nâng cấp trình trích xuất tính năng trong CreateML.

Những thứ này sẽ mở ra những khả năng mới và chúng tôi nóng lòng muốn xem bạn sẽ làm gì với chúng trong ứng dụng của mình.

Tận hưởng phần còn lại của WWDC.

[Nhạc lạc quan].