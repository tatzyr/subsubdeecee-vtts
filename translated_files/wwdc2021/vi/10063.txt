10063

♪ ♪

Xin chào!

Tên tôi là Russell, và tôi là một kỹ sư trong nhóm UIKit.

Trong iOS 13, chúng tôi đã giới thiệu một giao diện tinh tế cho các trang tính, đưa chúng đến Điện thoại và thêm một cử chỉ kéo để loại bỏ phổ quát.

Để tìm hiểu thêm về điều này, hãy xem video Hiện đại hóa giao diện người dùng của bạn cho iOS 13, cụ thể là phần về Bài thuyết trình bắt đầu từ 9 phút 45 giây.

Trong iOS 15, chúng tôi đã xây dựng trên nền tảng đó bằng cách thêm một loạt các tùy chọn tùy chỉnh vào trang tính, vì vậy bây giờ bạn có thể sử dụng chúng theo những cách mới thú vị hơn bao giờ hết.

Chúng tôi đã thêm hỗ trợ cho một detent trung bình, cho phép bạn tạo một trang tính có thể thay đổi kích thước theo chiều dọc chỉ bao phủ một nửa màn hình.

Bây giờ bạn cũng có thể xóa chế độ xem mờ, điều này sẽ cho phép bạn xây dựng giao diện người dùng phi phương thức, nơi người dùng có thể tương tác với nội dung phía sau trang tính trong khi trang tính được trình bày.

Tiếp theo, tôi sẽ đề cập đến một số tùy chọn hình ảnh mới, bao gồm cách để có được giao diện không toàn màn hình trên điện thoại ở dạng ngang.

Và cuối cùng, tôi sẽ chỉ ra cách thiết lập giao diện người dùng thích ứng liền mạch giữa cửa sổ bật lên trong các lớp kích thước thông thường và trang tính tùy chỉnh trong các lớp kích thước nhỏ gọn.

Để khám phá tất cả những điều này, chúng tôi đã tạo một ứng dụng mẫu để tạo bưu thiếp kỹ thuật số và nó có sẵn với video này.

Đối với mỗi tấm bưu thiếp, tôi có thể tùy chỉnh hình ảnh cũng như văn bản và phông chữ.

Bây giờ, trước khi tôi có thể tùy chỉnh một tờ, trước tiên tôi phải lấy một tờ.

Một trang tính là một thể hiện của một lớp con UIPresentationController mới được gọi là UISheetPresentationController và tất cả các tùy chọn tùy chỉnh được hiển thị dưới dạng thuộc tính trên lớp này.

Cách điển hình để có được một thể hiện của lớp này là đọc thuộc tính sheetPresentationController trên bộ điều khiển chế độ xem trước khi bạn trình bày nó.

Phương thức này trả về một phiên bản không phải không miễn là modalPresentationStyle của bộ điều khiển chế độ xem là biểu mẫu hoặc trang tính, theo mặc định.

Từ đây, sau đó bạn có thể đặt các thuộc tính khác nhau trên phiên bản để tùy chỉnh nó.

Đây là mẫu tương tự như lấy trình điều khiển trình bày bật lên của bộ điều khiển chế độ xem và đặt các thuộc tính của nó.

Và với điều đó, chúng ta hãy nhảy vào các dấu vết.

Detents là gì?

Dấu chân là chiều cao mà một tấm nằm tự nhiên và chúng được định nghĩa là một phần nhỏ của khung tấm được mở rộng hoàn toàn.

Khung mở rộng hoàn toàn được hiển thị trên iPhone và iPad ở đây, và nó sẽ quen thuộc nếu bạn đã sử dụng các trang tính trước đây.

Chúng tôi đã hiển thị hai detent do hệ thống xác định trong iOS 15: một detent trung bình, bằng khoảng một nửa chiều cao đầy đủ của trang tính và một detent lớn, là chiều cao của một trang tính được mở rộng hoàn toàn.

Để xác định các detents nào bạn muốn một trang tính hỗ trợ, chỉ cần đặt một mảng các detents bạn muốn trên thuộc tính detents.

Giá trị mặc định của thuộc tính này là một mảng chỉ có trọng lượng lớn, đó là lý do tại sao nếu bạn không đặt nó, bạn sẽ nhận được một bảng chiều cao đầy đủ tiêu chuẩn.

Nếu bạn đặt cái này thành một mảng các detent trung bình và lớn, bạn sẽ nhận được một tờ có thể thay đổi kích thước giữa trung bình và lớn.

Nhưng bạn cũng có thể đặt cái này thành một mảng chỉ có giá trị trung bình, cung cấp cho bạn một tờ trình bày ở độ cao trung bình và không thể thay đổi kích thước thành chiều cao đầy đủ.

Hãy áp dụng cái này cho ứng dụng mẫu.

Tôi đang bắt đầu với một số mã nhắm vào SDK iOS 14 để trình bày bộ chọn hình ảnh hệ thống trong một bảng tiêu chuẩn.

Khi một nút được nhấn, chức năng đầu tiên này được gọi, tạo ra một bộ chọn hình ảnh, đặt đại diện của bộ chọn thành chính nó và sau đó trình bày bộ chọn.

Sau đó, khi một hình ảnh được chọn, phương thức đại diện didFinishPicking được gọi, sau đó đặt hình ảnh đã chọn trên chế độ xem hình ảnh và loại bỏ bộ chọn.

Hãy chạy nó.

Khi tôi nhấn vào nút ảnh, bộ chọn ảnh sẽ bao gồm toàn bộ ứng dụng.

Lưu ý rằng chuyến du lịch của tôi gần đây rất ảo.

Và khi tôi chọn một bức ảnh, người chọn ảnh bỏ qua, để lộ bức ảnh tôi đã chọn trong bưu thiếp.

Nhưng nếu tôi muốn chọn một bức tranh khác thì sao?

Tôi phải trải qua toàn bộ dòng chảy này một lần nữa.

Và sẽ thật tuyệt nếu tôi có thể cho xem thư viện ảnh và bưu thiếp của mình cùng một lúc.

Và với một ý định trung bình, tôi có thể.

Đây là mã giống như trước đây nhưng với một vài thay đổi.

Trước khi tôi trình bày bộ chọn, tôi truy cập sheetPresentationController của nó và đặt các detents của nó thành trung bình và lớn.

Cũng trong bộ chọn đã gọi lại đại diện didFinishPicking, tôi đã xóa dòng loại bỏ bộ chọn ảnh, bởi vì bây giờ tôi không muốn bộ chọn ảnh loại bỏ khi chọn ảnh.

Bây giờ khi tôi chạy cái này và nhấn vào nút ảnh, thư viện của tôi xuất hiện ở độ cao một nửa, tôi có thể chọn một bức ảnh và thì đấy.

Tôi có thể thấy nó trong bưu thiếp của mình với thư viện vẫn còn bên dưới.

Và nếu tôi muốn thử một bức ảnh khác, nó đơn giản như một cú chạm.

Ngoài ra, vì mảng detent của tôi bao gồm detent lớn, tôi có thể kéo thanh để thay đổi kích thước trang tính này đến chiều cao đầy đủ.

Ngoài ra, vì chế độ xem cuộn được cuộn lên trên cùng, cuộn chế độ xem cuộn cũng sẽ mở rộng trang tính.

Đối với một bảng hành động như Bảng chia sẻ hệ thống, đây là một tính năng tuyệt vời dần dần tiết lộ các hành động nâng cao hơn ở cuối danh sách.

Nhưng đối với ví dụ thư viện ảnh này, tôi có thể muốn cuộn không mở rộng trang tính để bưu thiếp luôn hiển thị trừ khi tôi thay đổi kích thước trang tính một cách rõ ràng bằng cách kéo từ thanh.

Để có được hành vi thay thế này, tôi chỉ cần đặt một thuộc tính bổ sung: PrefersScrollingExpands- WhenScrolledToEdge.

Theo mặc định, thuộc tính này là đúng, vì vậy việc đặt nó thành sai sẽ ngăn việc cuộn mở rộng trang tính.

Bây giờ bộ chọn ảnh không thay đổi kích thước khi cuộn, nhưng tôi vẫn có thể kéo thanh để có cái nhìn rõ hơn về thư viện ảnh của mình.

Nhưng bây giờ khi tôi nhấn vào một bức ảnh, không rõ ràng là có bất cứ điều gì đã xảy ra.

Điều này trái ngược với hành vi trước đó, khi việc nhấn vào một bức ảnh đã loại bỏ bộ chọn ảnh, cho thấy rõ ràng lựa chọn của tôi đã được nhận.

Điều tôi muốn là thay đổi kích thước trang tính thành giá đỡ trung bình khi tôi nhấn vào ảnh, vừa để cho biết lựa chọn của tôi đã được nhận vừa để hiển thị lựa chọn của tôi trong bưu thiếp.

Và tôi có thể đạt được điều này bằng cách thay đổi theo chương trình mục tiêu đã chọn.

Vì vậy, nếu tôi quay lại phương thức đại diện chọn hình ảnh được gọi bất cứ khi nào một bức ảnh được nhấn, tôi có thể thêm một số mã vào đây để lấy sheetPresentationController và đặt Trình xác định đã chọn thành trung bình.

Hãy thử cái này.

Chú ý sự chuyển đổi khi tôi nhấn vào một bức ảnh.

Whoa!

Quá trình chuyển đổi đó diễn ra quá nhanh, tôi gần như bị mất lông mày.

Nó thực sự không hoạt hình chút nào.

Tôi có thể dễ dàng tạo hiệu ứng động cho quá trình chuyển đổi này bằng cách gói cài đặt của thuộc tính trong khối sheet.animateChanges.

Điều này sẽ tạo hiệu ứng động cho trang tính xuống giá trị trung bình nếu cần với đường cong hoạt hình tiêu chuẩn và tạo hiệu ứng động cho các trang tính khác trong ngăn xếp, chẳng hạn như bảng gốc tăng tỷ lệ trở lại.

Bơ mịn.

Một điều tuyệt vời nữa là xóa chế độ xem mờ để hiển thị ảnh đã chọn đầy đủ màu sắc.

Để làm điều đó, có một thuộc tính nữa để xem xét được gọi là smallestUndimmed- DetentIdentifier.

Theo mặc định, thuộc tính này là nil, có nghĩa là tất cả các detents đều bị mờ, nhưng nếu bạn muốn loại bỏ mờ, hãy đặt nó thành số nhận dạng của lỗ nhỏ nhất mà bạn không muốn làm mờ.

Trong trường hợp này, tôi sẽ đặt nó ở mức trung bình.

Lưu ý rằng không có sự mờ đi ở giá trung bình khi tôi đưa người nhặt lên.

Ta-da!

Nhưng độ mờ vẫn mờ dần nếu tôi thay đổi kích thước thành lỗ lớn.

Hơn cả việc loại bỏ độ mờ một cách trực quan, thuộc tính này còn cho phép bạn xây dựng trải nghiệm phi phương thức nâng cao, vì bây giờ tôi có thể tương tác không chỉ với nội dung trong trang tính mà còn với nội dung bên ngoài trang tính.

Điều này thậm chí còn sâu sắc hơn với trình chọn phông chữ, nơi tôi đã xây dựng một giao diện người dùng cho phép tôi chọn một phạm vi văn bản trong khi trình chọn phông chữ đang hoạt động, áp dụng phông chữ cho chỉ phạm vi đó, điều chỉnh lựa chọn của tôi và áp dụng lại phông chữ.

Tải xuống ứng dụng mẫu để biết chi tiết về cách đạt được điều này.

Cũng cần lưu ý rằng các trang tính có chiều cao trung bình hỗ trợ tránh bàn phím tự động, vì vậy nếu tôi tìm kiếm phông chữ ở đây, trang tính sẽ tự động phát triển để tính đến bàn phím và khi bàn phím bị loại bỏ, trang tính sẽ tự động thu gọn trở lại.

Vì vậy, đó là rất nhiều thông tin về detents, nhưng bây giờ tôi muốn chuyển sự chú ý của chúng tôi sang một số tùy chọn tùy chỉnh trực quan mới khác cho các trang tính, bắt đầu với giao diện tùy chọn mới cho các trang tính trên iPhone ở dạng ngang.

Trong iOS 13, chúng tôi đã tạo tất cả các trang tính toàn màn hình ở chế độ ngang và bây giờ chúng tôi đã cung cấp một giao diện thay thế trong đó các trang tính chỉ được gắn vào màn hình ở cạnh dưới của chúng.

Để có được diện mạo mới này, chỉ cần đặt prefersEdgeAttached- InCompactHeight thành true.

Bây giờ chỉ cần cài đặt cái này sẽ luôn cung cấp cho bạn một tờ giấy rộng bằng khu vực an toàn.

Nếu bạn muốn một trang tính có chiều rộng theo trình bàyViewControllers preferredContentSize, hãy đặt widthFollows- PreferredContentSize- WhenEdgeAttached thành true.

Điều này sẽ làm cho trang tính có chiều rộng mặc định hẹp hơn và bạn có thể đặt Kích thước Nội dung ưa thích để tùy chỉnh thêm chiều rộng này.

Bên cạnh những tài sản này, còn có một tài sản để hiển thị người lấy nếu bạn thích.

Trình lấy thường không cần thiết, nhưng trong trường hợp có thể ít rõ ràng hơn rằng một trang tính có thể thay đổi kích thước, chẳng hạn như khi cuộn không thay đổi kích thước trang tính, hiển thị trình lấy có thể là một chỉ báo hữu ích về khả năng thay đổi kích thước.

Bây giờ chú ý đến các góc của tờ giấy.

Một lựa chọn khác mà chúng tôi đã giới thiệu là khả năng tùy chỉnh bán kính góc.

Nếu ứng dụng của bạn có vẻ ngoài tròn trịa hơn, bạn có thể muốn phù hợp với tính thẩm mỹ đó.

Lưu ý rằng hệ thống sẽ giữ cho các góc xếp chồng lên nhau trông nhất quán, vì vậy nếu bộ chọn ảnh này mở rộng để đẩy lại bảng gốc, bảng gốc sẽ có các góc lớn hơn để khớp.

Cuối cùng, mặc dù có thể tạo một trang tính với các detents trên iPad, nhưng thường thì một cửa sổ bật lên được mong muốn thay vào đó thích ứng với một trang tính nhỏ gọn, có khả năng được tùy chỉnh với những thứ như detents.

Hãy thực hiện cách tiếp cận này với ứng dụng mẫu.

Để có được một cửa sổ bật lên cho bộ chọn hình ảnh trên iPad, tôi cần thực hiện một vài sửa đổi nhỏ.

Đầu tiên, tôi sẽ đặt modalPresentationStyle của bộ chọn thành popover.

Sau đó, thay vì lấy sheetPresentationController, bởi vì điều này bây giờ sẽ trả về nil, vì modalPresentationStyle không phải là một trang tính, tôi sẽ lấy popoverPresentationController.

Tôi sẽ đặt nguồn của cửa sổ bật lên là barButtonItem của chúng tôi, và sau đó tôi sẽ lấy một thuộc tính mới trên cửa sổ bật lên được gọi là adaptiveSheet- PresentationController.

Thuộc tính này trả về một ví dụ của trang tính mà cửa sổ bật lên sẽ thích ứng trong các lớp kích thước nhỏ gọn và sau đó tôi sẽ định cấu hình nó giống như tôi đã làm với trang tính trước đây.

Bây giờ khi tôi nhấn vào nút ảnh, bộ chọn ảnh sẽ xuất hiện trong cửa sổ bật lên và nếu tôi thay đổi kích thước cảnh, nó sẽ thích ứng với bảng chiều cao trung bình.

Nó hoạt động!

Và nếu tôi mở rộng bộ chọn, và chọn một bức ảnh-- ồ, không!

Nó không tự động thay đổi kích thước thành chiều cao trung bình như chúng tôi đã thực hiện trước đây.

Hừm.

Hãy quay lại phương thức đại diện chọn didFinishPicking.

À!

Để có được bảng thích ứng, tôi cũng cần đọc adaptiveSheet- PresentationController trên cửa sổ bật lênPresentationController ở đây trong mã.

Bây giờ hãy chú ý khi tôi chọn một bức ảnh.

Hoan hô! Nó thay đổi kích thước trở lại mức trung bình một lần nữa.

Bây giờ, tôi đã nói về rất nhiều thứ ở đây sẽ cho phép bạn dễ dàng xây dựng các loại giao diện người dùng mới với các trang tính mà trước đây không thể dễ dàng xây dựng.

Xem lại các ứng dụng của riêng bạn cho các khu vực sẽ được hưởng lợi từ các tấm chiều cao trung bình hoặc trải nghiệm phi phương thức.

Nếu bạn có bất kỳ thẻ tùy chỉnh nửa chiều cao nào trong ứng dụng của mình hôm nay, hãy thay thế chúng bằng các trang UIKit mới được cải tiến này.

Cảm ơn bạn đã xem, và tôi mong được thấy tất cả những điều mới mẻ thú vị mà bạn xây dựng bằng các trang tính.