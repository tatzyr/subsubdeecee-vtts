10029

♪ ♪

Xin chào, tôi là Jen Simmons.

Và tôi ở đây để nói về cách Safari mới tác động đến thiết kế và phát triển web.

Nếu bạn là nhà thiết kế web, nhà phát triển web hoặc có bất kỳ vai trò nào liên quan đến việc tạo trang web hoặc ứng dụng web, phiên này là dành cho bạn.

Đây là một năm tuyệt vời đối với Safari.

Trong phiên này, chúng ta sẽ tập trung vào tác động thiết kế trực quan hoặc tương tác của những thay đổi trong Safari.

Safari có một thiết kế hoàn toàn mới.

Theo mặc định, trang web của bạn sẽ trông tuyệt vời, nhưng nếu bạn muốn đi xa hơn, phiên này sẽ trao quyền cho bạn để làm cho công việc của bạn thực sự tỏa sáng trong Safari mới.

Chúng ta sẽ nói về một vài tính năng mới tuyệt vời trong macOS, iOS và iPadOS và cách chúng sẽ tác động đến web.

Chúng tôi sẽ đề cập đến những gì mới trong CSS, bao gồm cả thuộc tính yêu thích của tôi, thuộc tính tỷ lệ khía cạnh mới.

Và chúng ta sẽ xem xét các điều khiển biểu mẫu, các điều khiển mà chúng ta mới triển khai và một giao diện hoàn toàn mới cho các biểu mẫu trên iOS và iPadOS.

Hãy bắt đầu với thiết kế của chính trình duyệt.

Kể từ rất sớm trong quá trình phát triển của trình duyệt web, hầu hết các trình duyệt chúng tôi đã sử dụng đều có một vài điểm chung cơ bản.

Có một thanh công cụ rất cao ở trên cùng với một khe cắm cho URL nằm trên dòng riêng của nó.

Và trang web nằm trong không gian này, cổng thông tin này đến web, khung nhìn.

Tất nhiên, với tư cách là người dùng, chúng tôi đã tự đào tạo bản thân để tập trung vào trang web mà chúng tôi đang sử dụng, nhưng trong nhiều năm, bản thân trình duyệt đã duy trì sự hiện diện trực quan mạnh mẽ.

Không, bất kể một trang web được thiết kế để nhìn và cảm nhận như thế nào, giao diện trình duyệt đã đóng khung thiết kế đó và thống trị nó.

Điều gì sẽ xảy ra nếu chúng ta có thể loại bỏ khung đó và mở rộng thiết kế của trang web đến mọi cạnh của cửa sổ?

Chà, đó là những gì chúng tôi đã làm trong Safari 15.

Năm nay, chúng tôi đã mô phỏng lại trải nghiệm duyệt web như chúng tôi biết.

Chúng tôi đang tập trung tất cả vào nội dung web.

Safari mới kết hợp thanh tab vào mỗi trang web bằng cách thay đổi màu nền của nó.

Toàn bộ giao diện nằm trên một dòng và mọi thứ tự nhiên xuất hiện khi cần thiết.

Điều này làm cho nội dung của bạn cảm thấy mở rộng hơn.

Mỗi trang web hoặc ứng dụng web tiếp quản, mở rộng đến cả bốn cạnh của cửa sổ.

Giao diện trình duyệt mang lại nội dung.

Vậy điều gì quyết định màu nào được sử dụng cho nền của thanh công cụ?

Là một nhà thiết kế hoặc phát triển web, bạn có thể chọn màu sắc và mã mà bạn chọn vào HTML của mình.

Đối với các trang web không cung cấp màu sắc, Safari sẽ tìm ra màu để sử dụng.

Đôi khi Safari khớp với màu nền của trang web.

Những lần khác, nó khớp với nền tiêu đề.

Để cung cấp sự lựa chọn của bạn cho màu thanh công cụ, hãy đặt nó vào đầu HTML bằng cách sử dụng thẻ meta có tên "theme-color" và sử dụng thuộc tính nội dung để chỉ định màu.

Bằng cách cung cấp thông tin này trong đầu HTML, Safari sẽ nhận được nó ngay lập tức khi tải trang.

Nó cũng là mã khai báo.

Nó rất đơn giản để sử dụng.

Bạn có thể hỗ trợ cả Chế độ Sáng và Tối bằng cách đặt hai màu.

Có, bây giờ bạn có thể thêm các thuộc tính phương tiện vào thẻ meta.

Trong trường hợp này, media="(prefers-color-scheme: light)" trong thẻ meta đầu tiên và "(prefers-color-scheme: dark)" trong thẻ thứ hai.

Đây là một bổ sung mới cho đặc tả HTML mà chúng tôi đã đề xuất vào mùa xuân này.

Nó cung cấp cho chúng tôi một cách đơn giản, mạnh mẽ để kết nối bảng màu mà người dùng đã yêu cầu.

Trong các trình duyệt hỗ trợ name="theme-color" nhưng chưa hỗ trợ sử dụng thuộc tính phương tiện trên thẻ meta, các trình duyệt đó sẽ sử dụng khai báo màu chủ đề đầu tiên và bỏ qua phần còn lại.

Vì vậy, hãy đặt dự phòng của bạn lên hàng đầu, không phải cuối cùng, theo cách bạn làm trong CSS.

Ngay cả khi trang web của bạn không có toàn bộ thiết kế cho Chế độ tối, bạn có thể muốn đặt màu của riêng mình cho thanh tab khi thiết bị ở Chế độ tối.

Nếu một màu bạn đã chỉ định quá sáng, Safari sẽ thực hiện các điều chỉnh để cung cấp cho người dùng trải nghiệm Chế độ tối mà họ đã yêu cầu.

Thay vì xác định màu chủ đề trên đầu HTML, bạn có thể xác định nó trong tệp kê khai web.

Nếu bạn chỉ định nó ở cả hai nơi, màu trong đầu HTML là màu được sử dụng.

Và ngay bây giờ vào tháng 6 năm 2021, vẫn chưa có cách nào để xác định nhiều màu cho Chế độ Sáng và Tối trong tệp kê khai web.

Có một cuộc thảo luận đang diễn ra trong nhóm làm việc ngay bây giờ để tìm ra điều đó.

Ngoài ra còn có một phạm vi màu rất hẹp mà Safari sẽ không áp dụng - màu sắc, thực sự, điều đó sẽ hoàn toàn cản trở trải nghiệm của người dùng, có thể khiến nó không thể truy cập được.

Đối với những thứ này, Safari sẽ làm một cái gì đó khác, như ở đây, thay đổi thanh tab của trang web này thành màu trắng.

Nếu màu sắc mà bạn đã chọn dường như không hoạt động, chỉ cần thử điều chỉnh nó một chút.

Nếu bạn muốn, bạn có thể đặt màu chủ đề khác nhau trên các phần khác nhau trên trang web của mình.

Mỗi trang HTML riêng biệt có đầu riêng.

Hoặc bạn có thể sử dụng JavaScript để hoán đổi màu chủ đề một cách linh hoạt để phản ứng với hành vi của người dùng.

Hãy suy nghĩ thông qua những cách mà thiết kế của bạn có thể kết hợp thanh tab liền mạch vào trang web của bạn.

Đó là cách bạn có thể tạo cảm giác về trang web hoặc ứng dụng web của mình lấp đầy toàn bộ cửa sổ trong Safari 15 trên macOS và Safari cho iPadOS và iOS 15.

Tiếp theo, hãy xem xét hai điều chỉnh nhỏ khác mà bạn có thể thực hiện để thực sự đưa trang web của mình lên một tầm cao mới.

Nhiều người trong chúng ta có rất nhiều tab mở trong trình duyệt web của mình khi chúng ta làm việc.

Safari mới cung cấp một cách trực quan để sắp xếp các tab đó thành các nhóm.

Tôi thực sự thích điều này.

Tôi đã sắp xếp các dự án công việc của mình thành các nhóm riêng biệt và đặt tên cho từng dự án tôi muốn, và sau đó tôi có thể cất chúng đi.

Đặt cách những thứ mà tôi không làm việc, biết rằng tôi có thể tải lại các tab đó sau này trên bất kỳ thiết bị nào, vì Nhóm Tab được đồng bộ hóa trên macOS, iOS và iPadOS.

Mặc dù Nhóm Tab cung cấp cho chúng ta khả năng giải mã thanh tab, nhưng vẫn có thể mở nhiều tab trong bất kỳ một cửa sổ nào.

Khi có nhiều tab, biểu tượng yêu thích trở nên khá quan trọng để dễ dàng xác định tab nào là tab nào.

Bạn sẽ muốn đảm bảo rằng bạn cung cấp một biểu tượng tuyệt vời cho trang web của mình, một biểu tượng hỗ trợ các thiết bị có độ phân giải cao.

Một biểu tượng yêu thích với nền trong suốt có thể trông đặc biệt tuyệt vời.

Nhân tiện, rất nhiều nhóm sử dụng công cụ tự động để tạo ra các kích thước và định dạng biểu tượng khác nhau để hỗ trợ nhiều loại thiết bị.

Thông thường, công cụ như vậy tạo ra mã chỉ định màu chủ đề cùng với mã biểu tượng cho đầu HTML.

Hoặc có lẽ CMS của bạn hoặc khung giao diện người dùng của bạn đang xác định màu chủ đề và bạn đã không nhận ra điều đó.

Kiểm tra và xem.

Kiểm tra màu đó và xem nó có tốt cho thiết kế trang web của bạn không, có lẽ thay đổi nó thành màu tốt hơn.

Khi hầu hết mọi người nhìn vào thanh tab mới, họ sẽ chỉ thấy tất cả các tab của họ trên một dòng.

Là một người tạo trang web, bạn có thể sẽ nhận thấy rằng khi trang web được tải vào cửa sổ trình duyệt, tab cho trang web đó sẽ hiển thị tên miền của nó.

Và khi một trang web nằm trong tab nền, tiêu đề trang web là những gì được hiển thị, văn bản trong thẻ tiêu đề trong đầu HTML.

Không gian cho tiêu đề trang có thể bị hạn chế, vì vậy việc tạo ra một mẫu chu đáo cho tiêu đề trang web của bạn là rất quan trọng.

Tiêu đề đi vào vấn đề càng nhanh, người dùng càng dễ dàng tìm thấy tab mà họ muốn.

Một số trang web đặt tên của trang web đầu tiên và tên của trang thứ hai.

Thay vào đó, hãy đặt tiêu đề nội dung lên hàng đầu.

Bằng cách đó, nếu ai đó mở trang web của bạn trong nhiều tab, sẽ dễ dàng hơn để biết tab nào là tab nào.

Màu sắc của thanh tab, biểu tượng yêu thích và tiêu đề trang là tất cả các phần của trang web để thiết kế với ý định.

Chúng không hiển thị trên chính trang web, nhưng chúng tác động sâu sắc đến trải nghiệm của ai đó về trang web hoặc ứng dụng web của bạn.

Để chỉ cho bạn nhiều hơn về cách tận dụng sức mạnh của thẻ meta màu chủ đề, đây là Myles.

Xin chào, tôi là Myles.

Và tôi đang làm việc trên Dog Dog DC, đây là một trang web nơi mọi người có thể phát trực tuyến video về những chú chó của họ trong WWDC.

Tại đây, bạn có thể xem luồng của Maggie trong Safari.

Cô ấy trông thật hạnh phúc!

Tôi đã bắt đầu phát trực tuyến tạm dừng ngay bây giờ, nhưng tôi sẽ tạm dừng nó một chút.

Bắt tốt.

Và ở phía bên phải của Dog Dog DC, bạn có thể bình luận trong thời gian thực để thể hiện Maggie giỏi như thế nào.

Bây giờ, ở đầu cửa sổ Safari, Safari 15 tô màu đen cho thanh tab, đây thực sự là màu nền của trang của tôi.

Bạn có thể thấy màu đen được sử dụng làm nền của khu vực nội dung trung tâm ở phía dưới.

Và màu đen đó trông đẹp ở trên đó trong thanh tab.

Toàn bộ cửa sổ trông giống như nó có một thiết kế toàn diện, mạch lạc.

Bạn cũng có thể thấy trong thanh tab rằng Safari đang đề cập đến trang của tôi là Không an toàn, điều mà tôi mong đợi vì đây là môi trường phát triển của tôi.

Bây giờ, chúng tôi cũng có một thanh màu xanh nổi ở đầu trang web trông thực sự tuyệt vời được mở rộng lên thanh tab.

Vì vậy, nếu tôi vào mã nguồn của mình trong Trình chỉnh sửa ở đây...

Tôi có thể ghi đè màu đen mà Safari tự động phát hiện ra để phù hợp với màu xanh tuyệt đẹp này.

Tôi sẽ thêm một thẻ meta này, thẻ này sẽ mở rộng màu xanh lam đó lên thanh tab.

Sau đó tôi sẽ tải lại và xem nó trông như thế nào.

Điều đó có vẻ khá tốt, nhưng chúng tôi đã thiết kế Dog Dog DC để chứa một thanh bản tin màu xám ở trên cùng nằm ngang, điều này thực sự làm gián đoạn luồng màu sắc một chút vào thanh tab trên cùng.

Để có được một khung vẽ không bị gián đoạn, hãy biểu thị thanh bản tin theo cách khác thay vì màu nền.

Hừm.

Tôi sẽ tiếp tục chơi với nó sau.

Hiện tại, tôi sẽ xóa thanh bản tin.

Chà, bây giờ trông thật tuyệt.

Màu sắc không bị gián đoạn và thực sự tỏa sáng trong Safari 15.

Và tất nhiên, hiệu ứng tương tự cũng hoạt động tốt trên iPadOS.

Được rồi.

Bây giờ, tôi có thể ngồi đây và xem Maggie cả ngày, nhưng những gì tôi thực sự muốn làm là đưa cô ấy về phía trước và trung tâm và làm mờ mọi thứ ngoại trừ cô ấy và khu vực trò chuyện, bởi vì tôi rất coi trọng những bình luận doggo đó.

Vì vậy, tất nhiên, tôi sẽ nhấn vào nút Chế độ Rạp hát này.

Nhưng chờ đã.

Khi tôi vào Chế độ Rạp hát, thanh tab vẫn đầy màu sắc.

Chế độ rạp hát sẽ tốt hơn một chút nếu chúng ta cập nhật màu chủ đề khi vào Chế độ rạp hát.

Chà, chúng ta có thể sửa nó ở đây trong JavaScript của tôi.

Trước đó, Jen đã chỉ cho bạn cách sử dụng truy vấn phương tiện trong chính phần tử meta để tự động phản ứng với những thay đổi trong môi trường, như Chế độ tối.

Tuy nhiên, đối với những thay đổi do chính trang của tôi khởi xướng, tôi có thể làm điều này một cách chủ động hơn bằng cách sử dụng JavaScript để chỉ cần sửa đổi chính phần tử meta bằng JavaScript tiêu chuẩn khi vào Chế độ Rạp hát.

Và, tất nhiên, tôi không thể quên đặt lại phần tử khi thoát khỏi Chế độ Rạp hát.

Hãy xem nó trông như thế nào bây giờ.

Hoàn hảo. Và chúng ta bắt đầu.

Điều đó trông tốt hơn rất nhiều.

Bây giờ tôi thực sự có thể tập trung vào Maggie.

Quay lại với bạn, Jen.

Chó Chó DC.

Tôi sẽ đảm bảo truy cập trang web đó khi nó trực tuyến, Myles.

Cảm ơn.

Tôi thực sự thích cách điều này mở ra một cách khác để các nhà thiết kế web tác động đến trải nghiệm nội tạng của mọi người trên web.

Bây giờ chúng ta hãy đi sâu hơn một chút vào những gì đang xảy ra trên iOS.

Bạn sẽ nhận thấy màu chủ đề cũng được sử dụng ở đây, ở trên cùng, quấn quanh vỏ cảm biến để trang web hoặc ứng dụng web lấp đầy toàn bộ màn hình.

Bạn cũng sẽ nhận thấy rằng chúng tôi đã di chuyển thanh tab xuống cuối màn hình.

Điều này đặt nó trực tiếp dưới ngón tay cái của người dùng, giúp họ tiếp cận dễ dàng hơn, đặc biệt nếu họ đang sử dụng điện thoại bằng một tay.

Vuốt sang một bên trên thanh tab để chuyển đổi giữa các tab.

Và vuốt lên để xem lưới tất cả các tab và để truy cập Nhóm Tab.

Khi người dùng cuộn trang web, thanh tab sẽ thu nhỏ xuống chỉ còn tên miền ở dưới cùng để đảm bảo mọi người biết họ đang ở đâu.

Khi họ kéo trang xuống, thanh tab mở rộng xuất hiện trở lại.

Tất cả những điều này có nghĩa là các trang web và ứng dụng web mà bạn tạo ra là ngôi sao sáng của chương trình.

Nhưng điều gì sẽ xảy ra nếu bạn đã xây dựng một cái gì đó quan trọng ở cuối trang và bây giờ nó được che phủ bởi thanh tab mới?

Đây là nơi bạn muốn sử dụng các biến môi trường trong CSS của mình để đảm bảo có đủ phần đệm hoặc lề hoặc rãnh lưới hoặc theo cách bạn viết mã bố cục của mình.

Bạn có thể sử dụng biến môi trường để đảm bảo bất kỳ giao diện người dùng hoặc nội dung nào bị ảnh hưởng bởi thanh tab sẽ bị ảnh hưởng.

Vậy biến môi trường là gì?

Đó là một phép đo động được cung cấp bởi trình duyệt.

Bạn có thể thấy ở đây, màu xanh lá cây được gọi là khu vực an toàn.

Khi thanh tab được mở rộng ở phía dưới, khu vực an toàn bắt đầu từ phía trên nó.

Khi thanh tab thu nhỏ, kích thước của khu vực an toàn sẽ thay đổi.

Env(safe-area-inset-bottom) là phép đo dù có bao nhiêu điểm ảnh từ khu vực an toàn đến dưới cùng của khung nhìn.

Nó rất giống hàm var trong các thuộc tính tùy chỉnh CSS.

Ví dụ, có thể bạn đã sử dụng các thuộc tính tùy chỉnh để biến tất cả các màu của mình thành các biến.

Chỉ thay vì bạn xác định biến này, trình duyệt mới xác định nó.

Nó cung cấp thông tin về môi trường.

Và bạn có thể sử dụng phép đo độ dài đó ở bất kỳ vị trí nào trong mã của mình, kể cả bên trong một calc.

Ở đây, chân trang của tôi là vị trí: dính với một số đệm để đẩy hai liên kết của tôi ra khỏi các cạnh của chân trang.

Tôi đã xác định đáy đệm của 1rem + env (safe-area-inset-bottom).

Trong nhiều ngữ cảnh, đó sẽ là 1rem + 0.

Trên iOS, nó sẽ là 1rem cộng với khoảng cách cần thiết để xóa thanh tab.

Có bốn biến môi trường cung cấp phép đo từ rìa của khu vực an toàn đến cạnh của khung nhìn: env (safe-area-inset-top), -right, -bottom và -left.

Các biến môi trường này không chỉ hoạt động trong Safari.

Chúng được xác định trong đặc tả CSS và hoạt động trên các trình duyệt, thiết bị và hệ điều hành khác nhau.

Nếu bạn muốn thực hiện các điều chỉnh theo chiều dọc, bạn cần thực hiện hành động sử dụng biến môi trường.

Safari sẽ không cố gắng di chuyển nội dung xung quanh theo mặc định.

Tuy nhiên, khi một chiếc iPhone được xoay sang một bên, nó hoạt động hơi khác một chút.

Ngoài ra còn có một khu vực an toàn được xác định để tránh vỏ cảm biến và các cạnh tròn của màn hình.

Theo mặc định, Safari sẽ tự động di chuyển nội dung web từ cạnh trái và phải và đưa nó vào khu vực an toàn.

Bạn có thể tự hỏi tại sao.

Chà, nếu thay vào đó, Safari mở rộng mọi trang web sang cạnh trái và phải, nội dung có thể bị mất.

Ở đây, văn bản được che đậy.

Và đó là - điều đó không tốt cho khả năng sử dụng.

Để ngăn ngừa mất dữ liệu, Safari sẽ đưa nội dung vào khu vực an toàn, bao gồm cả khi một trang web đang sử dụng thẻ meta viewport với width=device-width, đây là thẻ meta thường được sử dụng trong thiết kế web đáp ứng.

Nhưng tất nhiên tôi muốn thiết kế này trông đẹp hơn.

Tôi muốn tiêu đề màu tím của mình và bức ảnh mở rộng đến các cạnh của màn hình.

Tôi có thể báo hiệu cho Safari rằng tôi muốn trình duyệt mở rộng nội dung sang các cạnh trái và phải bằng cách thay đổi thẻ meta viewport thành viewport-fit=cover.

Bây giờ tôi có trách nhiệm đảm bảo rằng bố cục hoạt động.

Tôi sẽ sử dụng các biến môi trường để đảm bảo nội dung hiển thị đầy đủ.

Tôi có thể xác định lề trái của env (safe-area-inset-left) trên văn bản tiêu đề và trên văn bản đoạn văn.

Để biết thêm thông tin về các biến vùng an toàn và các biến môi trường, hãy xem bài viết "Thiết kế trang web cho iPhone X" trên Blog WebKit, được liên kết trong ghi chú cho phiên này.

Hãy đến Myles và xem các biến môi trường hoạt động như thế nào.

Bây giờ hãy xem Dog Dog DC trông như thế nào trong Safari trên iPhone.

Ở đây trên iPhone của tôi, chúng ta có thể nhìn thấy Maggie giống như cách chúng ta đã nhìn thấy cô ấy trước đây, nhưng lần này trên một thiết bị nhỏ hơn.

Nhưng chờ đã. Có vẻ như có một vấn đề.

Khi người dùng cuộn khu vực trò chuyện, khu vực đầu vào sẽ chồng lên thanh tab.

Dog Dog DC đang sử dụng rõ ràng các đơn vị vh để tự định cỡ từ trên xuống dưới, lấy chính xác kích thước của toàn bộ khung nhìn, hiện đang chia sẻ với thanh tab.

Là một người dùng, tôi có thể cuộn để thu nhỏ thanh tab, và điều đó khá dễ dàng.

Nhưng với tư cách là một nhà phát triển, tôi muốn đảm bảo rằng người dùng của tôi có trải nghiệm tốt nhất có thể ngay cả khi họ cuộn.

May mắn thay, tôi có thể sử dụng các miếng lót khu vực an toàn để di chuyển khu vực đầu vào lên với số lượng thích hợp.

Tất cả những gì tôi phải làm là thêm phần đệm phía dưới và đặt nó thành vùng an toàn-mặt dưới.

Sau đó tôi chỉ cần tải lại trang web của mình.

Tôi thực sự vừa sử dụng một trong những tính năng mới yêu thích của Safari 15: kéo để làm mới.

Hừm.

Điều đó khá gần với những gì tôi muốn, nhưng có vẻ như bây giờ nó hơi quá cao.

Ồ, tôi thấy vấn đề.

Tôi đã đưa ra phần đệm dưới cùng của khu vực đầu vào khi nó đã có lề dưới cùng và hai thứ đó xếp chồng lên nhau theo chiều dọc.

Vì vậy, có vẻ như tôi chỉ nên cập nhật biên độ hiện có để sử dụng khu vực an toàn bên trong thay thế.

Hãy điều chỉnh lại những phong cách này và xem nó trông như thế nào bây giờ.

Hoàn hảo.

Điều này thực sự cho thấy sức mạnh của các biến môi trường.

Chúng có thể được áp dụng cho bất kỳ độ dài nào theo phong cách của bạn.

Bạn có thể sử dụng chúng trong đường viền, lề, đệm, chiều cao dòng, bất cứ thứ gì.

Khi thanh tab được thu nhỏ và mở rộng, giá trị của biến môi trường sẽ tự động cập nhật và Safari sẽ tự động bố trí lại trang với giá trị mới khi chúng thực hiện.

Bạn cũng có thể thấy trong Dog Dog DC khu vực trò chuyện là khu vực thay đổi kích thước khi thanh tab được mở rộng như thế nào.

Mọi thứ bên trên nó vẫn giữ nguyên kích thước, trong khi mọi thứ bên dưới nó ôm lấy thanh tab.

Điều này là do chúng tôi đang sử dụng bố cục Flexbox, nơi loại hành vi này rất tự nhiên và dễ tạo ra.

Nếu bạn chưa bắt đầu sử dụng các chế độ bố cục hiện đại hơn này như Flexbox hoặc grid, bây giờ sẽ là thời điểm tuyệt vời để cung cấp cho chúng một cái nhìn khác.

Tiếp theo, hãy nghe từ Jen về một số tính năng tuyệt vời hơn trong Safari 15.

Cảm ơn, Myles.

Các biến môi trường là một công cụ mạnh mẽ khác để tạo bố cục phản hồi tự động với bất kỳ thiết bị nào mà ai đó đang sử dụng.

Chúng ta cũng hãy xem một trang web trông như thế nào khi ai đó lưu nó dưới dạng ứng dụng Màn hình chính.

Tôi có thể lưu trang web này vào Màn hình chính của mình chỉ bằng một cú chạm.

Bây giờ biểu tượng trang web của tôi nằm trên Màn hình chính của tôi.

Nếu tôi nhấn vào nó, tôi có thể thấy trang web được mở dưới dạng ứng dụng Màn hình chính.

Nó trông thật tuyệt vời.

Màu chủ đề lấp đầy phần trên cùng của màn hình, giống như trong Safari.

Tôi có được một trải nghiệm giống như ứng dụng.

Bạn sẽ nhận thấy không có thanh tab ở phía dưới.

Chúng tôi không ở trong ứng dụng Safari.

Chúng tôi đang ở trong ứng dụng thiết kế web Resilient.

Vì vậy, đó là Safari mới và cách bạn có thể đảm bảo trang web của mình trông tuyệt vời.

Tiếp theo, hãy nói về một số tính năng mới tuyệt vời của macOS, iOS và iPadOS và cách chúng sẽ tác động đến web.

Thông thường, trải nghiệm đầu tiên mà mọi người sẽ có trên trang web của bạn là khi người khác nói với họ về nó, chẳng hạn như khi một người gửi liên kết đến một người khác trong Tin nhắn.

Bất cứ khi nào điều này xảy ra, trang web sẽ xuất hiện dưới dạng một liên kết phong phú đơn giản.

Cách thức hoạt động của các liên kết phong phú này nhất quán trên iOS, iPad OS và macOS.

Và năm nay, với Shared with You, chúng tôi đã thêm nhiều địa điểm mới và nhiều cách mới để mọi người chia sẻ nội dung web với nhau.

Đây chỉ là hai.

Bạn sẽ muốn dành thời gian để đảm bảo trang web của mình trông tuyệt vời khi nó được trình bày trong các liên kết phong phú.

Theo mặc định, nếu không có gì khác, các liên kết phong phú sẽ chọn tiêu đề trang web, URL trang web và biểu tượng yêu thích và hiển thị chúng một cách đơn giản.

Chúng ta có thể cải thiện điều này bằng cách thêm vào siêu dữ liệu của chúng ta trong đầu HTML của chúng ta thông qua các thẻ meta với các tên được xác định trong giao thức đồ thị mở.

Hãy chỉ định một tiêu đề tốt hơn một chút cho ngữ cảnh này so với tiêu đề trang web.

Và chúng tôi sẽ chỉ định một hình ảnh để hiển thị.

Chúng tôi muốn hình ảnh này là một cái gì đó cho trang web cụ thể này, giống như hình ảnh anh hùng từ nội dung của trang này.

Nếu chúng tôi muốn, chúng tôi cũng có thể cung cấp một video.

Video sẽ tự động phát âm thầm nếu người dùng cho phép và họ có thể nhấn vào nó để nghe âm thanh.

Bạn có thể tìm hiểu thêm về các chi tiết trong "Đảm bảo các liên kết phong phú đẹp", một video ngắn trên developer.apple.com.

Tùy chỉnh các liên kết phong phú của bạn là một chi tiết khác đảm bảo mọi người có trải nghiệm tuyệt vời với trang web hoặc ứng dụng web của bạn.

Tiếp theo, chúng ta hãy xem xét trí thông minh thị giác và web.

Rất nhiều văn bản trên web bị mắc kẹt bên trong hình ảnh.

Bắt đầu từ Safari 15, chúng tôi đang sử dụng trí thông minh thị giác để giải phóng văn bản đó.

Giờ đây mọi người có thể tương tác trực tiếp với nó, giống như họ làm với bất kỳ văn bản nào khác trên trang web.

Đây là một hình ảnh trên Twitter chứa đầy văn bản.

Khi chúng ta di chuột qua nó, thấy con trỏ chuột thay đổi thành con trỏ?

Bây giờ chúng ta có thể kéo qua văn bản này và sao chép nó, giống như bất kỳ văn bản nào khác.

Bất cứ khi nào bạn di chuột qua một hình ảnh trên macOS Monterey hoặc chạm vào hình ảnh trên iOS hoặc iPadOS 15, trí thông minh thị giác sẽ nhanh chóng tìm và nhận ra tất cả văn bản trong hình ảnh đó.

Một khi trí thông minh thị giác tìm thấy văn bản, bạn không chỉ có thể chọn và sao chép nó, bạn có thể tra cứu nó, dịch nó, tìm kiếm trên web với cụm từ đó, chia sẻ văn bản, nghe nó, giống như bất kỳ văn bản nào khác.

Văn bản mà trí thông minh thị giác tìm thấy, nó trở thành một phần của trang web và nó không trở thành một phần của trang web.

Văn bản được đưa vào Shadow DOM bên trong hình ảnh, có nghĩa là nó không bị ảnh hưởng bởi JavaScript.

Nhưng nó bị ảnh hưởng bởi z-order.

Vì vậy, nếu có thứ gì đó phủ lên hình ảnh của bạn, như hộp trong suốt, trí thông minh thị giác sẽ không thể tìm thấy bất kỳ văn bản nào trong hình ảnh bên dưới.

Lớp trên cùng cản trở.

Chúng tôi đã tích hợp trí thông minh thị giác vào các công nghệ hỗ trợ như VoiceOver để làm cho văn bản bị mắc kẹt trong hình ảnh có sẵn cho nhiều người hơn.

Nhưng điều đó không có nghĩa là tính năng này thay đổi các phương pháp hay nhất về khả năng tiếp cận hiện tại.

Tất nhiên, nội dung trên web bao gồm chủ yếu là văn bản thực sự nên được đưa lên web dưới dạng văn bản trong HTML, được tạo kiểu với phông chữ web để mang lại cho nó giao diện nếu bạn muốn, nhưng dưới dạng nội dung văn bản.

Đây vẫn là phương pháp hay nhất.

Đối với nội dung là ảnh, hình minh họa hoặc hình ảnh khác, cách tốt nhất vẫn là bao gồm văn bản thay thế làm thuộc tính trên phần tử hình ảnh.

Văn bản thay thế tuyệt vời cung cấp loại ý nghĩa và ngữ cảnh mà chỉ con người mới có thể giải thích.

Thêm vào đó, không phải tất cả các trình duyệt đều có trí thông minh thị giác, vì vậy hãy tiếp tục đảm bảo rằng các hình ảnh trên trang web của bạn có văn bản thay thế hữu ích.

Điều đó nói rằng, thật tuyệt khi có thể truy cập văn bản, cho đến bây giờ, bạn phải có khả năng xem để đọc hoặc nhập lại để trích dẫn ở một nơi khác.

Tiếp theo, chúng ta hãy xem CSS đã được triển khai trong WebKit trong năm qua.

Đầu tiên, tỷ lệ khung hình.

Tỷ lệ khung hình là một thuộc tính CSS mới cho phép bạn đặt tỷ lệ khung hình ưa thích cho bất kỳ phần tử nào.

Nhưng điều đó có nghĩa là gì, "đặt một tỷ lệ khung hình ưa thích"?

Chà, trước tiên chúng ta hãy xem xét các loại nội dung trên web có tỷ lệ khung hình tự nhiên.

Hình ảnh là một ví dụ điển hình.

Giả sử chúng ta có một hình ảnh của Maggie rộng gấp đôi so với nó cao.

Hình ảnh đó có tỷ lệ khung hình 2:1.

Chúng tôi sẽ đưa hình ảnh này lên một trang web và làm cho nó linh hoạt bằng cách thêm chiều rộng: 100% và chiều cao: tự động, một kỹ thuật thiết kế web đáp ứng cổ điển.

Bởi vì hình ảnh có tỷ lệ khung hình tự nhiên, chiều cao sẽ tự động thay đổi mối quan hệ trực tiếp với chiều rộng.

Bức ảnh này luôn rộng gấp đôi so với chiều cao của nó, và Maggie luôn trông rất đẹp.

Loại hành vi này rất được mong đợi, chúng tôi gần như thậm chí không nhìn thấy nó nữa.

Đây chỉ là cách hình ảnh hoạt động.

Video hoạt động theo cùng một cách khi bạn đặt nó vào HTML của trang bằng cách sử dụng phần tử video.

Các tệp video cũng có tỷ lệ khung hình tự nhiên.

Và yếu tố video truyền tải tỷ lệ khung hình đó đến trình duyệt khi nó tính toán bố cục trang.

Nhưng không phải tất cả nội dung đều có tỷ lệ khung hình tự nhiên.

Ở đây, tôi có một yếu tố bài viết.

Bên trong, có một tiêu đề và một đoạn văn.

Theo mặc định, phần tử bài viết có chiều rộng của ô tô và chiều cao của ô tô.

Trong chế độ viết này, chiều rộng của tự động có nghĩa là vui lòng kéo dài bài viết ra để nó chiếm 100% không gian có sẵn.

Chiều cao tự động có nghĩa là đủ cao để phù hợp với tất cả nội dung bên trong chế độ xem và không cao hơn.

Chúng ta có thể thấy khi cột văn bản trở nên hẹp hơn, văn bản kết thúc thường xuyên hơn và chiếm ngày càng nhiều không gian dọc hơn.

Khi cột trở nên rộng hơn, văn bản sẽ chảy lại và chiếm ngày càng ít không gian dọc hơn.

Chiều cao hộp của tôi đang điều chỉnh để phù hợp với nội dung văn bản - không quá ngắn và không quá cao - mà không quan tâm đến bất kỳ loại tỷ lệ khung hình nào.

Đối với hầu hết lịch sử của web, đây chỉ là cách bố cục hoạt động.

Bất kỳ ý tưởng thiết kế đồ họa nào về việc sử dụng hình vuông hoặc làm hộp đều có hình dạng nhất quán, những ý tưởng thiết kế đó, tốt, chúng đã được ném vào xô "Không! Trang web không hoạt động theo cách đó!" Cho đến bây giờ.

Bây giờ chúng ta có thể viết CSS để xác định tỷ lệ khung hình ưa thích trên các phần tử mà nếu không sẽ không có.

Hãy thêm tỷ lệ khía cạnh: 1 / 1 vào mã của chúng tôi, cho biết bất kỳ chiều rộng nào mà điều này kết thúc, hãy nghĩ về điều đó như một đơn vị, và sau đó làm cho chiều cao cũng là một đơn vị, điều này có nghĩa là làm cho nó trở thành một hình vuông.

Chiều cao phát triển lớn hơn trước đây để duy trì hình vuông đó.

Nhưng điều gì sẽ xảy ra khi có quá nhiều nội dung để vừa với hình vuông đó?

Theo mặc định, hộp sẽ tự động phát triển để cao hơn.

Với một dòng mã, chúng ta có thể tạo một tập hợp các hình vuông hoặc bất kỳ hộp hình dạng nào với bất kỳ tỷ lệ khung hình nhất định nào, biết rằng nếu nội dung dài hơn trong một trong các hộp, hộp đó sẽ phát triển để ngăn tràn.

Nếu chúng ta muốn tỷ lệ khung hình luôn được tuân thủ, ngay cả khi điều đó gây ra tràn, chúng ta có thể thêm chiều cao tối thiểu là 0 vào mã của mình.

Có lẽ chúng tôi muốn xử lý tràn theo một cách khác, như bằng cách thêm tràn: cuộn.

Bây giờ, tôi đã viết giá trị để làm cho hình vuông này là 1 / 1.

Nhưng thay vào đó tôi chỉ có thể viết điều này dưới dạng tỷ lệ khía cạnh: 1.

Nếu chỉ có một số, trình duyệt sẽ cho rằng nó "trên một". Trên thực tế, có rất nhiều cách tôi có thể thể hiện cùng một tỷ lệ khung hình, bao gồm cả việc sử dụng các số thập phân.

Điều này cho phép chúng tôi tự do viết tỷ lệ khung hình theo những cách mà bạn có thể quen thuộc từ các ngành công nghiệp khác như phim ảnh và truyền hình hoặc nghệ thuật và thiết kế.

Trong thập kỷ qua, hầu như không thể sử dụng các tỷ lệ này trên web, mặc dù chúng đã có một vị trí sâu sắc và có ý nghĩa trong văn hóa con người trong kiến trúc, hội họa, thiết kế sách, thiết kế in ấn hiện đại.

Bây giờ chúng ta có thể xây dựng bố cục của mình bằng cách sử dụng các tỷ lệ này.

Đặc biệt là khi bạn kết hợp tỷ lệ khía cạnh với lưới CSS, tất cả các loại khả năng thiết kế mới sẽ mở ra.

Nói về phim và video, một trường hợp sử dụng rất phổ biến cho tỷ lệ khung hình sẽ là video được nhúng từ các dịch vụ của bên thứ ba.

Nếu bạn sử dụng YouTube, Vimeo, Wistia hoặc bất kỳ nhà cung cấp dịch vụ lưu trữ video nào, những người đó sẽ cung cấp cho bạn một iFrame để nhúng video của bạn.

Phần tử iFrame không phải là phần tử có tỷ lệ khung hình tự nhiên.

Khi thiết kế web đáp ứng xuất hiện, chúng tôi muốn làm cho các video nhúng của mình trở nên linh hoạt, nhưng chúng tôi đã gặp rắc rối.

Chúng tôi đã bị mắc kẹt khi sử dụng một bản hack đệm khó hiểu trong CSS hoặc sử dụng JavaScript để thay đổi kích thước video.

Bây giờ chúng ta có thể thêm một dòng CSS để cung cấp cho iFrame đó một tỷ lệ khung hình ưa thích.

Đó là một giải pháp rất thanh lịch cho một vấn đề rất phổ biến.

Tỷ lệ khung hình: nó cung cấp cho chúng ta một công cụ mạnh mẽ khác để tạo ra bố cục mà chúng ta muốn.

Tiếp theo, những khoảng trống linh hoạt.

Năm nay trong Safari 14.1, chúng tôi đã vận chuyển hỗ trợ cho các khoảng trống trong các thùng chứa Flexbox.

Khoảng cách linh hoạt cung cấp cho bạn một cách để xác định không gian tối thiểu giữa các mục để đảm bảo rằng luôn có một khoảng trống.

Ở đây, tôi có một thanh điều hướng mà tôi đã đặt ra trong Flexbox.

Tôi không muốn những món trên thanh menu này chạm vào nhau.

Nếu tôi thêm một thuộc tính khoảng cách, với giá trị 1rem, bây giờ luôn có một khoảng trống giữa các mục.

Không cần lề trái hoặc lề phải.

Tôi không cần phải tìm ra cách loại bỏ những lề đó ở rìa bên ngoài.

Điều này đơn giản hơn nhiều.

Có nhiều tính năng khác trong CSS đã được triển khai trong WebKit năm nay, bao gồm các thuộc tính logic bổ sung, rất quan trọng để hỗ trợ khán giả quốc tế.

Các thuộc tính biến đổi riêng lẻ: xoay, dịch và chia tỷ lệ.

Cập nhật và cải tiến để cuộn lề và cuộn snap.

Hỗ trợ cho không gian màu mới.

Và hoạt ảnh của các yếu tố giả và các thuộc tính rời rạc.

Nhiều tính năng trong số này đã được vận chuyển vào mùa xuân vừa qua trong Safari 14.1 trên macOS và Safari cho iOS và iPadOS 14.5.

Và phần còn lại sẽ được giao vào mùa thu này trong Safari 15.

Tiếp theo, chúng ta hãy xem xét các điều khiển biểu mẫu.

Trong Safari 14.1, chúng tôi đã vận chuyển hỗ trợ cho các đầu vào Ngày và Giờ trên macOS.

Bây giờ trên Mac, người dùng có thể điền vào các trường Ngày bằng cách tương tác với điều khiển Lịch hoặc điền thời gian bằng điều khiển Thời gian.

Và xác thực phía máy khách được tích hợp ngay.

Đối với iOS và iPadOS 15, chúng tôi đã thiết kế lại hoàn toàn các điều khiển biểu mẫu.

Chúng sẽ phù hợp hơn với trải nghiệm tổng thể và phù hợp hơn nhiều với UIKit.

Và chúng trông cũng tuyệt vời ở Chế độ tối.

Đây là những mặc định mới cho các điều khiển biểu mẫu.

Nếu bạn đã ghi đè bất kỳ phong cách nào trong số này, thì tất nhiên, phong cách của bạn sẽ được áp dụng.

Chúng tôi cũng đã triển khai một bộ chọn màu mới cho loại đầu vào "màu sắc" trên iOS và iPadOS với ba bảng để chọn hoặc điều chỉnh màu, cộng với ống nhỏ mắt.

Đó là chuyến tham quan Safari 15 của chúng tôi và một số điểm nổi bật về những gì đã hạ cánh trên WebKit năm nay.

Nhưng trước khi tôi đi, tôi muốn đảm bảo rằng bạn biết nơi tìm các tài nguyên quan trọng để tìm hiểu thêm về Safari và WebKit và nơi bạn có thể gửi phản hồi về những gì bạn muốn xem tiếp theo.

Các liên kết đến tất cả các tài nguyên này có trong ghi chú cho phiên này.

Nếu bạn quan tâm đến việc tìm hiểu về JavaScript mới, DOM APIs và hỗ trợ định dạng phương tiện, hãy xem "Phát triển nội dung web nâng cao" tại đây tại WWDC21.

Chắc chắn xem "Khám phá các cải tiến của trình kiểm tra Web" và tìm hiểu về các công cụ phát triển web mới đến với Safari, bao gồm cả trình kiểm tra CSS Grid của riêng chúng tôi.

Để cập nhật những gì sắp tới trong tương lai, hãy tải xuống Bản xem trước công nghệ Safari, bản có logo màu tím.

Nó cập nhật khoảng hai tuần một lần.

Đó là một cách đặc biệt tuyệt vời để kiểm tra các bản sửa lỗi mới nhất và sử dụng những tiến bộ gần đây nhất trong trình kiểm tra Web.

Webkit.org là nơi dành cho các ghi chú phát hành WebKit, các bài viết chi tiết về các công nghệ web mới và tài liệu cho trình kiểm tra Web.

Và chúng tôi muốn nghe từ bạn.

Nếu bạn có đề xuất cho trình kiểm tra Web hoặc cho giao diện của Safari, hãy gửi phản hồi trong Trợ lý phản hồi của Apple.

Nếu bạn gặp lỗi trong WebKit, điều gì đó về HTML, CSS, JavaScript hoặc DOM APIs có vẻ bị hỏng hoặc bị thiếu, vui lòng gửi phiếu tại bugs.webkit.org.

Và bạn có thể tìm và theo dõi chúng tôi trên Twitter @webkit.

Tôi hy vọng bạn cũng hào hứng với thiết kế mới của Safari 15 như chúng tôi, cách thanh tab mới mang đến cho bạn một chiều hướng mới cho thiết kế của bạn, khả năng bố cục mới với tỷ lệ khung hình, điều khiển biểu mẫu hoàn toàn mới trên iOS và iPad OS, và hơn thế nữa.

Tôi nóng lòng muốn xem điều này mang lại những đổi mới nào trong thiết kế web.

Cảm ơn vì đã tham gia cùng tôi và tận hưởng WWDC.

[Nhạc lạc quan].