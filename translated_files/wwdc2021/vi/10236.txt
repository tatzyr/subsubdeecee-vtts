10236

Xin chào, tên tôi là David, và tôi là một kỹ sư trong nhóm Công cụ Tài liệu tại Apple.

Trong phiên này, bạn sẽ tìm hiểu về việc lưu trữ tài liệu DocC và tự động hóa việc xây dựng tài liệu.

Đầu tiên, tôi sẽ nói về việc xây dựng tài liệu trong Xcode và cách bạn có thể lưu trữ các kho lưu trữ tài liệu đã xây dựng trên máy chủ.

Tiếp theo, tôi sẽ đi vào chi tiết hơn về cách xây dựng tài liệu hoạt động và cách bạn có thể tự động hóa tài liệu xây dựng.

Trong suốt buổi nói chuyện này, tôi sẽ chỉ cho bạn SlothCreator, một dự án mà các đồng nghiệp của tôi và tôi đang thực hiện.

Chúng tôi đã tạo một trang web để giúp mọi người bắt đầu.

Và bây giờ, chúng tôi thực sự hào hứng với việc sử dụng các tính năng tài liệu mới trong Xcode để xây dựng một phiên bản tài liệu của chúng tôi mà chúng tôi có thể lưu trữ ngay trên trang web của mình.

Điều đó sẽ giúp mọi người bắt đầu dễ dàng hơn.

Vì vậy, hãy xem làm thế nào chúng ta có thể hoàn thành điều đó.

Các tính năng tài liệu mới trong Xcode 13 giúp việc xây dựng tài liệu cho các khung, thư viện và gói Swift của bạn thực sự dễ dàng.

Bạn có thể bắt đầu sử dụng nó ngay lập tức mà không cần bất kỳ thiết lập nào và sau đó mở rộng tài liệu của bạn với tài liệu bổ sung theo thời gian.

Và thật dễ dàng để xuất tài liệu của bạn từ cửa sổ Tài liệu dành cho nhà phát triển.

Bạn có thể chia sẻ kho lưu trữ tài liệu đã xuất với những người khác để họ có thể nhập và đọc tài liệu trong Xcode hoặc bạn có thể lưu trữ kho lưu trữ tài liệu trực tuyến.

Nếu bạn muốn tìm hiểu thêm về tài liệu trong Xcode và về tài liệu tác giả cho các biểu tượng của bạn, các đồng nghiệp của tôi Victoria và Ethan chỉ nói về điều đó trong phiên "Gặp gỡ tài liệu DocC trong Xcode".

Trong nửa sau của bài thuyết trình này, tôi sẽ nói về cách bạn có thể tự động hóa việc xây dựng tài liệu trên dòng lệnh.

Nhưng hiện tại, tôi sẽ sử dụng kho lưu trữ tài liệu mà tôi đã xuất từ Xcode để lưu trữ trên máy chủ của chúng tôi.

Bản thân kho lưu trữ tài liệu là một vùng chứa tất cả dữ liệu để vừa đọc tài liệu trong Xcode vừa lưu trữ trực tuyến.

Nó được cấu trúc như một ứng dụng web Vue.js một trang được sử dụng để hiển thị cả tài liệu tham khảo và bài viết cũng như các hướng dẫn phong phú và tương tác của bạn.

Có hai loại yêu cầu khác nhau mà máy chủ cần xử lý để lưu trữ kho lưu trữ tài liệu.

Yêu cầu tài liệu và các trang hướng dẫn trong đó URL yêu cầu bắt đầu bằng /documentation/ hoặc /tutorials/ và yêu cầu các tệp và dữ liệu bổ sung được tải bởi ứng dụng web, trong đó URL yêu cầu khớp với đường dẫn tệp tương đối cho một trong các tệp trong kho lưu trữ tài liệu.

Hãy xem xét một ví dụ về các yêu cầu tạo nên một trang và cách máy chủ phản hồi chúng.

Khi một nhà phát triển đọc tài liệu được lưu trữ của bạn và trình duyệt yêu cầu một trang, nếu yêu cầu bắt đầu bằng /documentation/ hoặc /tutorials/ thì máy chủ sẽ phản hồi bằng tệp index.html nằm trong kho lưu trữ tài liệu.

Tệp đó tham chiếu CSS và JavaScript trong kho lưu trữ tài liệu mà trình duyệt yêu cầu tải phần còn lại của ứng dụng web.

Sau khi tải xong, ứng dụng web sẽ yêu cầu nội dung cho trang đó và bất kỳ hình ảnh hoặc phương tiện nào khác mà nó tham chiếu.

Cả các tệp được tham chiếu bởi tệp index.html và nội dung và phương tiện được tải bởi ứng dụng web đều sử dụng URL yêu cầu phù hợp với cấu trúc thư mục của kho lưu trữ tài liệu.

Bây giờ bạn đã thấy máy chủ lưu trữ cần phản hồi các yêu cầu đến như thế nào, hãy xem xét điều đó trong bản demo.

Nhiều người trong số các bạn có thể đã có một máy chủ lưu trữ trang web của mình.

Đối với dự án của chúng tôi, chúng tôi đang sử dụng máy chủ Apache, nhưng bạn có thể sử dụng bất kỳ máy chủ nào cho phép định tuyến tùy chỉnh.

Đây là trang web của chúng tôi về SlothCreator.

Chúng tôi đã thêm nút "Đọc tài liệu" này bên dưới văn bản giới thiệu ở giữa trang, nhưng nút này vẫn chưa hoạt động.

Vậy hãy sửa nó đi.

Tôi đã sao chép kho lưu trữ tài liệu vào thư mục nơi chúng tôi đang lưu trữ trang web của mình và thêm một tệp .htaccess trống.

Nhưng tôi chưa thiết lập bất kỳ định tuyến nào trong đó.

Có hai quy tắc định tuyến mà tôi cần thêm vào: một cho các trang tài liệu và hướng dẫn và một cho các tệp và dữ liệu bổ sung.

Đối với quy tắc đầu tiên, mẫu mà tôi muốn khớp là bất kỳ URL nào bắt đầu bằng "tài liệu" hoặc "hướng dẫn" làm thành phần đường dẫn đầu tiên của nó.

Bất kỳ yêu cầu nào phù hợp với mẫu này, tôi muốn định tuyến lại đến tệp index.html trong kho lưu trữ tài liệu.

Cuối cùng, tôi sẽ kết thúc quy tắc bằng một lá cờ để ngừng đánh giá các quy tắc nếu yêu cầu khớp với quy tắc này.

Đối với quy tắc thứ hai, tôi sẽ rõ ràng hơn về mô hình.

Vì chúng tôi cũng đang lưu trữ trang web của mình với máy chủ này, chúng tôi không muốn định tuyến lại các yêu cầu cho trang web đến các tệp trong kho lưu trữ tài liệu.

Nếu tôi nhìn vào bên trong kho lưu trữ tài liệu, bạn có thể thấy rằng có một số tệp và thư mục cấp cao nhất mà tôi có thể khớp theo mẫu.

Vì vậy, tôi sẽ thêm một mẫu phù hợp với tất cả những thứ đó.

Trong trường hợp này, URL yêu cầu là đường dẫn tệp tương đối cho một trong các tệp trong kho lưu trữ tài liệu, vì vậy tôi sẽ định tuyến lại yêu cầu đến mẫu phù hợp nhưng có tiền tố là SlothCreator.doccarchive.

Và giống như trước đây, tôi đã thêm cùng một lá cờ để ngừng đánh giá các quy tắc.

Bây giờ, nếu tôi tải lại trang web và nhấp vào liên kết tài liệu, bạn sẽ thấy rằng máy chủ hiện lưu trữ cả trang web và tài liệu của chúng tôi.

Trang SlothCreator chính nhóm các ký hiệu quan trọng thành các chủ đề liên quan đến các nhiệm vụ cấp cao hơn.

Và mỗi biểu tượng liên quan đến nhóm đó thành các chủ đề cụ thể hơn.

DocC đi kèm với một thiết kế tích hợp, sạch sẽ được tạo ra để phù hợp với nhiều dự án khác nhau.

Điều này làm cho nó thực sự dễ dàng để có tài liệu đẹp, thanh lịch cho các dự án của bạn, như tài liệu SlothCreator của chúng tôi tại đây.

Bây giờ chúng tôi đã lưu trữ một bản sao tài liệu của mình trên trang web của mình, hãy xem cách tự động xây dựng và cập nhật kho lưu trữ tài liệu.

Để làm điều đó, tôi sẽ viết một tập lệnh gọi xcodebuild.

Khi tôi có một tập lệnh thực hiện việc này, tôi có thể chạy nó bất cứ khi nào có thay đổi mới được thực hiện để tài liệu được lưu trữ luôn được cập nhật.

Mới trong Xcode 13, bạn có thể xây dựng tài liệu trên dòng lệnh với hành động docbuild mới của xcodebuild.

Khi bạn xây dựng tài liệu trong Xcode hoặc xcodebuild, nó hoạt động giống như một bản dựng tiêu chuẩn cũng xây dựng tài liệu.

Trong quá trình xây dựng, trình biên dịch Swift thu thập thông tin chi tiết về tất cả các biểu tượng công khai, mối quan hệ của chúng và nhận xét tài liệu trong nguồn và chuyển tệp này dưới dạng tệp được gọi là biểu đồ biểu tượng cho trình biên dịch tài liệu để tạo kho lưu trữ tài liệu với tất cả dữ liệu cần thiết để vừa đọc tài liệu trong Xcode vừa

Nếu mục tiêu có một danh mục tài liệu liên quan với các bài báo, phương tiện hoặc hướng dẫn bổ sung cho dự án của bạn, thì trình biên dịch tài liệu sẽ kết hợp tất cả nội dung đó với thông tin biểu tượng khi nó tạo ra kho lưu trữ tài liệu.

Nếu bạn muốn tìm hiểu thêm về danh mục tài liệu, hãy xem phiên "Nâng cao tài liệu DocC của bạn trong Xcode", nơi các đồng nghiệp của tôi Bea và Jack nói về các loại tài liệu khác nhau và cách bạn có thể tận dụng từng loại để cung cấp cho các nhà phát triển một cách tuyệt vời để tìm hiểu về dự án của bạn.

Tài liệu xây dựng không chỉ áp dụng cho các mục tiêu của bạn.

Nếu mục tiêu của bạn có sự phụ thuộc vào các khung, thư viện hoặc gói Swift khác, thì quy trình tương tự cũng được áp dụng cho tất cả những thứ đó để bạn có được tất cả tài liệu liên quan cho dự án của mình ở cùng một nơi.

Vì tôi đang tìm cách tự động hóa việc xây dựng và cập nhật tài liệu được lưu trữ của chúng tôi bằng một tập lệnh, xcodebuild trên dòng lệnh sẽ hoàn hảo cho điều đó.

Hành động docbuild mới trong xcodebuild hoạt động giống như hành động xây dựng mặc định, nhưng nó cũng xây dựng tài liệu.

Giống như hành động xây dựng, bạn chuyển nó sơ đồ mà bạn muốn xây dựng và dự án hoặc không gian làm việc mà nó là một phần của nó.

Bạn cũng có thể gọi xcodebuild từ bên trong thư mục chứa dự án, không gian làm việc hoặc gói Swift của bạn và chỉ chuyển nó theo sơ đồ.

Tùy thuộc vào dự án và sơ đồ của bạn, bạn có thể muốn chuyển các cờ khác như sdk, đích đến hoặc cấu hình để tùy chỉnh cách dự án của bạn được xây dựng.

Không bắt buộc phải làm như vậy.

Nhưng để dễ dàng theo dõi hơn, tôi sẽ chỉ định một derivedDataPath tùy chỉnh, nơi các sản phẩm xây dựng và tài liệu được xây dựng sẽ được viết.

Sau khi xây dựng xong, tôi có thể tìm thấy tất cả các kho lưu trữ tài liệu đã xây dựng bằng cách sử dụng phần mở rộng tệp .doccarchive và sao chép từng tệp vào một vị trí khác hoặc sang một máy khác.

Hãy xem xét điều đó trong bản demo.

Đây là tài liệu được lưu trữ của chúng tôi từ trước.

Nó nhóm các biểu tượng liên quan thành các chủ đề để các nhà phát triển dễ dàng tìm thấy các loại cốt lõi cho một nhiệm vụ cụ thể.

Trong thời gian kể từ khi chúng tôi xây dựng phiên bản này, các đồng nghiệp của tôi đã thêm một số bài viết và hướng dẫn mới xuất hiện trong phần Essentials.

Vì vậy, bây giờ là thời điểm tuyệt vời để tôi viết tập lệnh tự động hóa xây dựng tài liệu mới nhất và cập nhật trang web của chúng tôi.

Như bạn vừa thấy, chúng tôi xây dựng tài liệu bằng cách gọi hành động docbuild của xcodebuild và cập nhật trang web của chúng tôi bằng cách tìm và sao chép kho lưu trữ tài liệu vào thư mục nơi chúng tôi đang lưu trữ trang web của mình.

Tôi đã biết tôi cần vượt qua sơ đồ nào vì nó giống như tôi thấy trong bộ chọn sơ đồ trong Xcode.

Nếu tôi chưa mở Xcode, tôi cũng có thể chạy xcodebuild -list trên dòng lệnh để liệt kê tất cả các sơ đồ có sẵn.

Một lần nữa, derivedDataPath tùy chỉnh không bắt buộc, nhưng nó giúp dễ dàng theo dõi nơi tài liệu được xây dựng được viết và tìm thấy.

Sau khi xây dựng xong, tôi có thể tìm thấy tất cả các kho lưu trữ tài liệu và sao chép từng tài liệu vào thư mục nơi chúng tôi đang lưu trữ trang web của mình.

Và với điều đó đã hoàn thành, tôi đã sẵn sàng để chạy kịch bản.

Bây giờ, nếu tôi làm mới, bạn có thể xem bài viết và hướng dẫn được thêm vào trong phần Essentials.

Với những thay đổi mới nhất này, tài liệu của chúng tôi trông đầy đủ hơn.

Và những người mới sử dụng SlothCreator có một nơi tuyệt vời để bắt đầu, cho dù họ thích nội dung của một bài viết hay hướng dẫn từng bước trong một trong những hướng dẫn của chúng tôi.

Bây giờ, việc cập nhật tài liệu được lưu trữ của chúng tôi dễ dàng như chạy một tập lệnh.

Và nếu chúng tôi chạy nó như một phần của móc sau hợp nhất trên máy chủ tích hợp liên tục của mình, thì chúng tôi có thể đảm bảo rằng tài liệu được lưu trữ của chúng tôi luôn được cập nhật.

Để tóm tắt lại những gì chúng ta đã nói trong phiên này, bạn có thể chia sẻ tài liệu lưu trữ hoặc lưu trữ chúng trực tuyến để mang lại trải nghiệm tài liệu tuyệt vời cho người tiêu dùng khuôn khổ của bạn, ngay cả trước khi họ bắt đầu sử dụng nó trong Xcode.

Và việc xây dựng tài liệu trên dòng lệnh cho phép bạn đưa tài liệu vào quy trình làm việc tự động hóa của mình.

Nếu bạn muốn tìm hiểu thêm về tài liệu DocC, "Gặp gỡ tài liệu DocC trong Xcode" là phần giới thiệu tuyệt vời về các tính năng tài liệu mới trong Xcode.

"Nâng tài liệu DocC của bạn trong Xcode" đi sâu vào cách bạn có thể nâng cao tài liệu của mình với danh mục DocC.

Và "Xây dựng các hướng dẫn tương tác bằng DocC" nêu chi tiết cách bạn có thể cấu trúc ý tưởng của mình và tạo ra các hướng dẫn tuyệt vời cho dự án của mình.

Cảm ơn bạn đã xem.

[Âm nhạc].