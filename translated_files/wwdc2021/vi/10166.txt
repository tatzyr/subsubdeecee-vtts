10166

Xin chào, tôi là Victoria.

Tôi là một kỹ sư trong nhóm Công cụ Tài liệu tại Apple, và cùng với đồng nghiệp Ethan của tôi, chúng tôi sẽ giới thiệu cho bạn về các tính năng tài liệu mới trong Xcode 13.

Có nhiều cách mới để đọc và viết tài liệu vừa phù hợp với quy trình làm việc của bạn vừa mở ra những khả năng mới cho sự phát triển của bạn.

Xcode 13 có các tính năng mới để xây dựng, viết và duyệt tài liệu cho các khung và gói Swift.

Điều này mở ra một chế độ phát triển dựa trên tài liệu mạnh mẽ, nơi bạn có thể đọc tất cả về các phụ thuộc Swift của mình trong khi viết mã của mình.

Tài liệu này nằm ngay bên cạnh các thư viện nền tảng trong cửa sổ Tài liệu dành cho nhà phát triển ngay trong Xcode.

Trong phiên này, chúng tôi sẽ cung cấp tổng quan về các tính năng tài liệu trong Xcode 13, hướng dẫn bạn xây dựng tài liệu cho các khung và gói Swift bạn đang viết và sử dụng, chỉ cho bạn cách bạn có thể sử dụng Xcode 13 để viết tài liệu tuyệt vời và kết thúc bằng cách trình bày các cách bạn có thể chia sẻ tài liệu với Xcode 13.

Hãy bắt đầu với lý do tại sao cá nhân tôi hào hứng với các tính năng tài liệu mới.

Tôi chắc rằng tất cả chúng ta đều đã ở đó.

Có một số khung hoặc gói mới mà chúng tôi muốn sử dụng, nhưng khi đến lúc tích hợp nó vào mã của chúng tôi, chúng tôi cần tìm ra tất cả những gì có trong đó.

Đây là nơi Xcode 13 bước vào.

Bây giờ Xcode đi kèm với trình biên dịch cho tài liệu cũng như mã của bạn, và bạn có thể xây dựng và xem tài liệu cho các khung Swift và các gói tất cả bên trong Xcode.

Chúng tôi gọi nó là DocC, và chúng tôi đã tích hợp tất cả trong Xcode để nâng cao cách bạn đọc và viết tài liệu.

Bây giờ, DocC không chỉ là một trình biên dịch tài liệu chạy theo thực tế.

Đó là một môi trường tài liệu tích hợp đầy đủ bổ sung cho Xcode, cung cấp một môi trường trực tiếp, phong phú với các tài liệu của bạn xuất hiện trong Trợ giúp nhanh, hoàn thành mã phong phú để cho phép bạn liên kết các tài liệu của mình lại với nhau thành một tổng thể gắn kết, tài liệu đầy đủ có sẵn trong cửa sổ Tài liệu dành cho nhà

Hãy theo dõi các phiên DocC khác của chúng tôi tại WWDC 2021, phiên này sẽ xem xét tất cả những điều này một cách chi tiết và hơn thế nữa.

DocC trao quyền cho bạn viết tài liệu tham khảo xuất sắc, tận dụng sức mạnh của Xcode và Swift để cung cấp cho người dùng cái nhìn toàn cảnh về các API công khai trong khuôn khổ hoặc gói của bạn, hoàn chỉnh với khả năng mô tả cách các API hoạt động cùng nhau, không chỉ riêng lẻ.

Tuy nhiên, DocC cho phép bạn viết nhiều hơn là tài liệu tham khảo tuyệt vời.

Có hai cách bổ sung để viết tài liệu với DocC mà chúng tôi rất vui mừng được giới thiệu trong năm nay.

Các bài viết cho phép bạn hướng dẫn người dùng qua bức tranh lớn đằng sau khuôn khổ của bạn, cho bạn cơ hội gắn kết các mục riêng lẻ trong khuôn khổ của bạn với nhau bằng một câu chuyện gắn kết.

Và hướng dẫn là một hướng dẫn từng bước mạnh mẽ để viết một dự án sử dụng khuôn khổ của bạn.

Chúng cho phép bạn đi sâu hơn nhiều so với tài liệu tham khảo hoặc bài viết bằng cách cung cấp cho người dùng của bạn phần giới thiệu có hướng dẫn về khuôn khổ của bạn từ đầu.

Tất cả những trải nghiệm tác giả này tận dụng và mở rộng sức mạnh và sự đơn giản của Markdown để làm cho tác giả tài liệu của bạn trôi chảy như viết mã của bạn.

Nếu bạn muốn biết thêm về việc lắp ráp danh mục tài liệu với các bài báo và hướng dẫn bên ngoài mã nguồn của mình, hãy xem các phiên này tại WWDC năm nay.

Và cuối cùng, chúng tôi sẽ phát hành DocC dưới dạng Mã nguồn mở vào cuối năm nay, cùng với một ứng dụng web cho phép bạn lưu trữ các kho lưu trữ tài liệu đã xây dựng của mình trên web để bạn có thể tận dụng các quy trình làm việc tài liệu mới này ngay cả bên ngoài Xcode.

Bây giờ bạn đã có một hương vị của các tính năng tài liệu mới trong Xcode 13, hãy đi sâu vào và nói về việc xây dựng tài liệu của bạn với DocC trong Xcode.

Trước tiên chúng ta hãy xem nhanh dưới mui xe để xem nó hoạt động như thế nào.

Để xây dựng tài liệu của bạn, Xcode xây dựng khuôn khổ hoặc gói của bạn và yêu cầu trình biên dịch lưu thông tin về các API công khai của nó cùng với các tạo tác được biên dịch của bạn.

Thông tin API công khai đó sau đó được chuyển đến DocC, sau đó kết hợp nó với danh mục tài liệu của bạn chứa các bài báo và hướng dẫn được viết bên ngoài mã nguồn của bạn để tạo kho lưu trữ cuối cùng chứa tài liệu được biên dịch.

Để tìm hiểu thêm về danh mục tài liệu và sắp xếp tài liệu của bạn, hãy xem phiên "Nâng cao tài liệu DocC của bạn trong Xcode".

Và nhờ sự tích hợp của DocC với hệ thống xây dựng của Xcode, quá trình này lặp lại cho mọi khung và gói Swift mà mục tiêu của bạn phụ thuộc vào.

Bằng cách này, bạn có tất cả các tài liệu liên quan của mình ở một nơi.

Nhưng điều này có ý nghĩa gì đối với nhu cầu tài liệu hàng ngày của bạn?

Có ba cách để xây dựng tài liệu cho các khung và gói Swift trong Xcode 13.

Để xây dựng tài liệu theo yêu cầu, có một mục menu Xây dựng Tài liệu mới để biên dịch và tải lên tài liệu của bạn.

Và nếu bạn đang làm việc trên khung Swift và luôn muốn xem trước tài liệu của mình khi bạn tiếp tục, cũng có một cài đặt xây dựng mới để xây dựng tài liệu mỗi khi bạn biên dịch.

Và đối với dòng lệnh và nhu cầu CI của bạn, xcodebuild cũng có một lệnh mới để xây dựng tài liệu.

Điều này chạy bản dựng tương tự như chọn Tài liệu Xây dựng trong Xcode nhưng sử dụng xcodebuild trên dòng lệnh.

Đồng nghiệp David của tôi có nhiều thông tin hơn về việc tự động hóa quy trình làm việc tài liệu trong phiên "Lưu trữ và Tự động hóa Tài liệu DocC của bạn".

Hãy xem điều này đang hoạt động.

Các đồng đội của tôi đã làm việc trên gói này có tên SlothCreator, tất cả là về việc lập danh mục và tùy chỉnh những con lười nhỏ dễ thương.

Tôi muốn dùng thử nó, vì vậy hãy xem nó trông như thế nào trong Xcode 13.

Tôi đã thiết lập ứng dụng này mà tôi đã gọi là Slothy để tôi có thể sử dụng SlothCreator để tùy chỉnh con lười của mình và xem trước chúng khi tôi sử dụng.

Tôi đã thiết lập SlothCreator làm phụ thuộc vào ứng dụng của mình rồi, nhưng tôi muốn xem thêm về những API mà nó cung cấp, vì vậy hãy mở menu Sản phẩm...

Và chọn Xây dựng Tài liệu để xem qua.

Và cứ như vậy, cửa sổ Tài liệu dành cho nhà phát triển mở ra và trong Navigator, tôi có thể mở rộng dự án Slothy của mình và gói SlothCreator mà tôi đang làm việc để xem tổng quan trong Navigator.

Tôi sẽ tải tổng quan về SlothCreator trong chế độ xem chính và nếu tôi cuộn xuống, có một danh sách các loại và giao thức có sẵn.

Ở đây tôi có thể thấy loại này được gọi là Habitat.

Hãy nhấp vào nó để tải trang của nó.

Có một số thông tin tốt ở đây, nhưng tôi tự hỏi liệu có điều gì khác đã đề cập đến nó không.

Hãy chọn trường Tìm kiếm ở trên cùng và tìm kiếm "môi trường sống".

Có vẻ như một vài điều khác nhau đề cập đến điều này.

Hãy nhấp vào phương pháp ngủ này để hiển thị trang tài liệu của nó.

Trang này dành riêng cho phương pháp ngủ, nhưng tôi tò mò đây là một phần của loại nào.

Ở thanh nhảy ở đầu cửa sổ, tôi có thể thấy đây là một phần của loại Sloth.

Nếu tôi nhấp vào Sloth này, một menu kéo xuống sẽ xuất hiện và nếu tôi nhấp lại vào nó, tôi có thể mở trang tài liệu của loại đó.

Bây giờ tôi đang có một bức tranh về cách tất cả các API này khớp với nhau.

Vì vậy, bây giờ chúng tôi đã có cơ hội xem qua tài liệu của SlothCreator.

Hãy tua lại và xem nó đã đến thời điểm đó như thế nào.

Đồng nghiệp Ethan của tôi sẽ bắt đầu bằng cách hiển thị một số tính năng mới trong Xcode 13 để viết tài liệu tuyệt vời.

Lấy nó đi.

Cảm ơn bạn, Victoria.

Bây giờ chúng ta đã xem qua sự hỗ trợ tuyệt vời của Xcode 13 cho việc xây dựng và duyệt tài liệu, tôi muốn chỉ cho bạn một vài thủ thuật để viết tài liệu tốt hơn với DocC.

DocC được thiết kế xoay quanh những lợi ích của tài liệu trong nguồn.

Bạn viết tài liệu của mình ngay bên cạnh mã của mình, giúp tích hợp thuận tiện và dễ dàng với quy trình phát triển hiện tại của bạn.

Để thêm tài liệu vào tờ khai, bạn chỉ cần viết một loại nhận xét đặc biệt ngay phía trên nó.

Điều này giúp bạn dễ dàng đồng bộ hóa tài liệu của mình với bất kỳ thay đổi mã nào bạn có thể thực hiện trong tương lai.

Và, tất nhiên, nó sẽ phù hợp với công cụ dựa trên văn bản hiện có của bạn, như Git diffs.

Bạn có thể đã chú thích mã nguồn của mình bằng các nhận xét để cung cấp thêm ngữ cảnh cho những người bảo trì cơ sở mã của bạn trong tương lai.

Trong Swift và nhiều ngôn ngữ khác, bạn viết bình luận bằng cách bắt đầu dòng của mình bằng hai dấu gạch chéo về phía trước.

Bằng cách viết những nhận xét này, bạn đã đi một chặng đường dài trong việc giúp những người bảo trì trong tương lai hiểu và làm việc hiệu quả trong cơ sở mã của bạn.

Nhưng điều gì sẽ xảy ra nếu bạn muốn giúp đỡ những người chấp nhận khuôn khổ của bạn ngày nay?

Đây là những gì nhận xét tài liệu dành cho.

Bằng cách viết một bình luận bắt đầu bằng ba dấu gạch chéo, bạn đang yêu cầu trình biên dịch tài liệu Swift liên kết nhận xét với khai báo ngay bên dưới nó.

Nhận xét sẽ được bao gồm trong trang tài liệu được biên soạn của biểu tượng và bất kỳ ai nhập khung của bạn đều có thể truy cập được.

Và nếu bạn thích sử dụng nhận xét kiểu khối, bạn có thể tạo nhận xét tài liệu theo kiểu đó bằng cách chỉ cần bao gồm một dấu hoa thị bổ sung trong dấu phân cách mở đầu.

Hãy xem tất cả điều này hoạt động như thế nào trong thực tế.

Như Victoria đã đề cập, trong vài tháng qua, chúng tôi đã làm việc trên khuôn khổ SlothCreator.

SlothCreator là một gói Swift cung cấp chức năng lập danh mục và tùy chỉnh những con lười dễ thương.

Là một nhà phát triển của SlothCreator, tôi muốn chắc chắn rằng có một cách dễ dàng để bất kỳ người chấp nhận khuôn khổ nào bắt đầu, vì vậy tôi đã làm việc để thêm nhận xét tài liệu vào các phần của cơ sở mã mà tôi đã làm việc.

Đặc biệt, tôi muốn chắc chắn rằng mọi API công khai trong SlothCreator đều được ghi chép đầy đủ, bởi vì đó là những API này mà bất kỳ ai cũng có thể nhập khung của tôi đều có thể truy cập được.

Vì lý do tương tự, DocC chỉ tạo các trang tài liệu cho các biểu tượng công khai và mở trong khuôn khổ của bạn.

Chỉ có một vài biểu tượng trong SlothCreator vẫn cần ghi lại.

Hãy bắt đầu với cấu trúc Thực phẩm này.

Tôi sẽ bắt đầu bằng cách thêm ba dấu gạch chéo phía trên khai báo của loại để tạo nhận xét tài liệu.

Và sau đó tôi sẽ viết rằng đây là "Thức ăn mà một con lười có thể tiêu thụ."

Dòng đầu tiên trong nhận xét tài liệu của tôi sẽ biến thành tóm tắt của biểu tượng, nhưng tôi muốn thêm một số thông tin bổ sung với phần thảo luận.

Tôi sẽ thêm một cái ngay bây giờ bằng cách thêm một ngắt dòng sau bản tóm tắt của tôi và sau đó thêm một số chi tiết bổ sung về các loại thực phẩm mà những con lười yêu thích.

Và bởi vì DocC có hỗ trợ đầy đủ cho Markdown, tôi có thể thêm một ví dụ mã bằng cách sử dụng cú pháp khối mã có hàng rào của Markdown.

Tuyệt vời.

Tôi nghĩ điều này bổ sung thêm một số bối cảnh bổ sung thực sự hữu ích xung quanh cấu trúc Thực phẩm.

Hãy xem tài liệu của tôi hiện đang trông như thế nào bằng cách xây dựng lại tài liệu.

Tôi có thể làm điều đó bằng cách di chuyển chuột lên menu Sản phẩm và sau đó chọn Xây dựng Tài liệu.

Xcode bây giờ sẽ xây dựng lại tài liệu của SlothCreator cùng với chính khuôn khổ.

Và bởi vì tôi đã sử dụng nút Xây dựng Tài liệu cho bản dựng này, khi nó hoàn tất, trình xem tài liệu sẽ mở ra cùng với tài liệu cập nhật của tôi.

Nhưng tôi thực sự quan tâm đến việc đi thẳng đến trang cho cấu trúc Thực phẩm để xem lại nhận xét mà chúng tôi vừa thêm vào.

May mắn thay, Xcode có một tính năng gọi là Trợ giúp nhanh sẽ cho phép tôi làm điều đó.

Trợ giúp nhanh cung cấp một phiên bản tóm tắt ngắn gọn của tài liệu biểu tượng ngay trong trình chỉnh sửa nguồn.

Tôi có thể dùng thử ngay bây giờ bằng cách giữ phím Tùy chọn và sau đó nhấp vào khai báo của Food.

Nhưng một người chấp nhận SlothCreator có thể mở cùng một chế độ xem bằng cách nhấp vào tùy chọn vào bất kỳ tham chiếu nào đến cấu trúc Thực phẩm trong mã của họ.

Vì vậy, nhận xét chúng tôi đã viết nằm ngay tại đây trong phần Tóm tắt và Thảo luận.

Nhưng nếu tôi đang tìm kiếm nhiều hơn chế độ xem tóm tắt, mới trong Xcode 13 là liên kết Mở trong Tài liệu dành cho Nhà phát triển.

Nếu tôi di chuyển chuột đến góc dưới cùng bên phải của chế độ xem Trợ giúp Nhanh và nhấp vào Mở trong Tài liệu dành cho Nhà phát triển, cửa sổ tài liệu sẽ khởi chạy ngay đến trang của biểu tượng đó.

Tuyệt vời.

Có một biểu tượng khác vẫn còn thiếu tài liệu trong SlothCreator.

Tôi sẽ mở tệp Sloth bằng cách di chuyển chuột đến Trình điều hướng của Xcode và nhấp vào mục Sloth.

Và nếu tôi cuộn xuống, tôi nhận thấy rằng phương pháp Ăn vẫn cần nhận xét tài liệu.

Vì vậy, chúng ta hãy xem nhanh cách tốt nhất để ghi lại các phương pháp.

Chúng tôi bắt đầu theo cùng một cách, bằng cách thêm nhận xét ba dấu gạch chéo phía trên khai báo của phương thức và thêm văn bản sẽ tạo nên bản tóm tắt tài liệu của nó.

Nhưng chúng ta cũng nên ghi lại cụ thể những gì chúng ta mong đợi được truyền dưới dạng tham số.

Chúng tôi làm điều này thông qua phần Thông số.

Bạn thêm phần Tham số vào tài liệu của mình bằng cách viết một mục danh sách Markdown bắt đầu bằng từ Tham số theo sau là tên tham số phương thức của bạn, dấu hai chấm và sau đó là tài liệu của nó.

Bạn có thể thêm phần Trả về theo cách rất giống nhau, lần này bằng cách viết dấu phân cách Trả về theo sau là dấu hai chấm và mô tả về những gì phương thức của bạn trả về.

Nhưng nếu phương pháp của bạn có nhiều tham số thì sao?

Trong trường hợp này, điều tốt nhất nên làm là chuyển từ dấu phân cách Tham số ít sang Dấu phân cách Tham số nhiều.

Điều này hoạt động giống như những cái khác ngoại trừ tên tham số của bạn được viết dưới dạng con của dấu phân cách Tham số cha mẹ.

Vì vậy, bây giờ chúng ta đã xem qua những điều cơ bản, hãy ghi lại phương pháp Ăn lười biếng.

Bây giờ, tôi có thể bắt đầu giống như cách chúng tôi đã làm khi ghi lại cấu trúc Thực phẩm bằng cách viết thủ công một nhận xét tài liệu bắt đầu bằng ba dấu gạch chéo về phía trước.

Nhưng vì tôi đang ghi lại một biểu tượng phức tạp hơn, tôi sẽ tận dụng tính năng Thêm Tài liệu tuyệt vời của Xcode sẽ chèn một mẫu phù hợp nhất để ghi lại tuyên bố hiện tại.

Tôi có thể làm điều này bằng cách giữ phím Command và sau đó nhấp vào khai báo của phương thức để mở menu Hành động.

Tiếp theo, tôi có thể nhấp vào Thêm Tài liệu trong menu Hành động và, giống như vậy, tôi có một mẫu tuyệt vời để bắt đầu ghi lại phương pháp của mình.

Tôi sẽ bắt đầu bằng cách điền vào bản tóm tắt của phương pháp, và sau đó tôi sẽ mô tả các thông số thực phẩm và số lượng cũng như những gì phương pháp này trả về.

Và sau đó tôi sẽ hoàn thành tài liệu bằng cách thêm phần Thảo luận cùng với một ví dụ mã.

Giống như lần trước, tôi có thể xây dựng lại tài liệu bằng cách di chuyển chuột vào menu Sản phẩm và chọn mục Xây dựng Tài liệu.

Và một lần nữa, Xcode đang xây dựng tài liệu của tôi cùng với chính khuôn khổ.

Lần này, tôi sẽ điều hướng đến cấu trúc Sloth thông qua Navigator của cửa sổ, nơi tôi sẽ tìm thấy Sloth trong nhóm chủ đề Sloths.

Nếu tôi cuộn xuống trang Sloth, tôi sẽ tìm thấy phương thức của mình trong phần Phương thức Phiên bản...

Cùng với tài liệu cập nhật của tôi.

Tôi đã thực sự hạnh phúc với nó rồi.

Các đầu vào và đầu ra của phương pháp thực sự được xác định rõ ràng, và cũng có một ví dụ mã hữu ích ở đây.

Tôi nghĩ điều này gần như đã sẵn sàng để đi, nhưng chúng ta vẫn đang thiếu thứ gì đó ở đây.

Nếu tôi chỉ đang đọc trang tài liệu này, tôi không có bối cảnh tuyệt vời về các biểu tượng liên quan khác mà tôi nên xem xét ở đây.

Và với tư cách là người duy trì SlothCreator, tôi thực sự muốn gọi ra một số biểu tượng khác mà người đọc của tôi nên cân nhắc tìm hiểu về tiếp theo.

Chà, điều mới đối với Xcode 13 là khả năng liên kết với các ký hiệu trong tài liệu của bạn.

Đây là một cách thực sự tuyệt vời để kết nối các phần khác nhau trong khuôn khổ của bạn và hướng dẫn người đọc của bạn đến các phần thông tin có liên quan.

Bạn viết các liên kết này thông qua cú pháp đánh dấu ngược kép mới.

Hãy xem xét một ví dụ.

Đây là phương pháp mà chúng tôi đã ghi lại trước đây, ngủ.

Nhưng nó không tồn tại trong chân không.

Thực sự có một tài sản khác trong cấu trúc Sloth.

Có một giá trị đại diện cho mức năng lượng hiện tại của con lười, và tôi nghĩ điều quan trọng ở đây là người đọc của tôi phải hiểu rằng một trong những tác dụng phụ của việc gọi giấc ngủ là sự thay đổi mức năng lượng của con lười.

Vì vậy, tôi sẽ thêm vào phần Thảo luận về phương pháp của mình ở đây với tham chiếu đến thuộc tính Mức năng lượng.

Trước Xcode 13, cách tự nhiên để làm điều này là chỉ viết tên của thuộc tính bằng phông chữ mã không gian đơn bằng cách bao quanh nó trong các dấu gạch ngược.

Nhưng bây giờ tôi có thể chuyển đổi thành cú pháp backtick kép và tạo một liên kết.

Bây giờ, liên kết đến energyLevel khá đơn giản vì thuộc tính đó là anh chị em của phương pháp tôi đang ghi lại và giống như khi tham chiếu đến một biến cục bộ trong Swift, tôi không cần phải đủ điều kiện thêm liên kết của mình với loại cha mẹ.

Tôi chỉ có thể viết tên của tài sản, energyLevel.

Nhưng nếu tôi muốn tham khảo một đứa trẻ thuộc loại khác, tôi cần phải cụ thể hơn một chút.

Vì vậy, ở đây tôi viết Habitat/comfortLevel để liên kết với một đứa trẻ của cấu trúc Habitat.

Tuyệt vời.

Hãy xem điều này hoạt động như thế nào trong thực tế bằng cách thêm một số liên kết đến tài liệu cho phương pháp ăn.

Tôi sẽ bắt đầu ở đây bằng cách viết rằng "Khi họ ăn thức ăn, một con lười..."

Và bây giờ tôi sẽ viết một liên kết biểu tượng đến thuộc tính energyLevel.

Vì vậy, tôi sẽ gõ hai backticks, và sau đó tôi sẽ bắt đầu viết energyLevel.

Việc hoàn thành mã của Xcode sẽ giúp tôi đảm bảo rằng tôi nhận được liên kết chính xác.

Tôi sẽ tiếp tục và chọn mặt hàng đó.

Và vì vậy tôi sẽ nói rằng mức năng lượng "tăng theo thức ăn" - và bây giờ tôi sẽ tham khảo một đứa trẻ của cấu trúc Thực phẩm.

Tôi sẽ bắt đầu với hai tấm nền một lần nữa.

Và sau đó tôi sẽ viết Thức ăn, một dấu gạch chéo về phía trước, và sau đó là năng lượng.

Bây giờ tôi đã tạo ra hai liên kết biểu tượng mà tôi nghĩ sẽ thực sự giúp người đọc của tôi hiểu rõ hơn về ngữ cảnh xung quanh phương pháp này.

Và các liên kết này thậm chí có thể truy cập được trong Trợ giúp Nhanh.

Vì vậy, tôi sẽ giữ phím Tùy chọn và nhấp vào khai báo phương thức của mình để mở cửa sổ bật lên Trợ giúp Nhanh.

Đây là phần Thảo luận mà chúng tôi đã thêm và, tất nhiên, trong cuộc thảo luận, hai liên kết của chúng tôi.

Và nếu tôi nhấp vào một cái, tôi sẽ được đưa thẳng đến trang của biểu tượng được tham chiếu trong cửa sổ tài liệu.

Bây giờ tôi đã viết một bình luận tài liệu tốt cho mọi API công khai trong SlothCreator, tôi thực sự vui mừng được chia sẻ nó với các đồng nghiệp của mình và thậm chí có thể cung cấp nó trên web.

Tôi có thể làm điều này thông qua kho lưu trữ tài liệu mà Xcode xuất ra như một phần của mọi bản dựng tài liệu.

Chứa trong kho lưu trữ tài liệu là một ứng dụng web một trang mà bạn có thể sử dụng để chia sẻ tài liệu của mình trên web.

Đồng nghiệp David của tôi sẽ đi sâu vào cách thực hiện điều đó trong phiên "Máy chủ và tự động hóa tài liệu DocC của bạn" của anh ấy.

Tôi thực sự khuyên bạn nên kiểm tra cái đó.

Nhưng Xcode cũng hỗ trợ xuất và nhập tài liệu của bạn trực tiếp từ cửa sổ tài liệu.

Hãy xem xét điều đó ngay bây giờ.

Tôi sẽ xuất SlothCreator từ cửa sổ tài liệu bằng cách trước tiên di chuyển chuột sang Navigator của cửa sổ.

Khi tôi di chuột qua mục khung SlothCreator, một biểu tượng menu theo ngữ cảnh sẽ xuất hiện.

Tôi sẽ nhấp vào nó, và bây giờ tôi có tùy chọn Xuất.

Tôi sẽ lưu nó vào máy tính để bàn của mình.

Tuyệt vời.

Bây giờ tôi đã sẵn sàng gửi nó cho các đồng nghiệp của mình và nếu họ chỉ cần nhấp đúp vào kho lưu trữ, nó sẽ mở trong cửa sổ tài liệu của Xcode.

Nhưng vì tôi đã biết về SlothCreator, tôi muốn mở một kho lưu trữ tài liệu khác.

Gần đây tôi đã thảo luận với nhóm rằng sẽ rất tuyệt nếu thêm giao diện dòng lệnh vào SlothCreator và một trong những đồng nghiệp của tôi đã đề cập rằng ArgumentParser là một khung mã nguồn mở tuyệt vời có thể hữu ích.

Họ đã gửi cho tôi kho lưu trữ tài liệu mới nhất cho ArgumentParser, vì vậy hãy mở nó ngay bây giờ.

Tôi chỉ cần nhấp đúp vào kho lưu trữ tài liệu và, cứ như vậy, bắt đầu học ngay lập tức.

Tài liệu là chìa khóa để phát triển một khuôn khổ thành công và lâu dài.

Chúng tôi nghĩ rằng bạn sẽ thấy tài liệu viết trực tiếp trong nguồn thực sự thuận tiện và mạnh mẽ.

Và mới trong Xcode 13 với tích hợp DocC, tất cả công việc khó khăn của bạn khi viết tài liệu tuyệt vời sẽ được đền đáp theo những cách mới và mạnh mẽ.

Chúng tôi có một số phiên khác tại WWDC thực sự giúp bạn đưa tài liệu của mình lên một tầm cao mới.

"Nâng cao tài liệu DocC của bạn trong Xcode" chọn nơi phiên này kết thúc, chỉ cho bạn cách sắp xếp tài liệu của mình tốt hơn bằng cách thêm danh mục tài liệu.

"Lưu trữ và tự động hóa tài liệu DocC của bạn", mà tôi đã đề cập trước đó, giải thích cách tích hợp các bản dựng tài liệu vào thiết lập tích hợp liên tục hiện tại của bạn cũng như cách lưu trữ tài liệu của bạn trực tuyến.

Cuối cùng, nếu bạn có một phần phức tạp hơn trong khuôn khổ của mình có thể được hưởng lợi từ hướng dẫn từng bước, tôi khuyên bạn nên xem "Xây dựng các hướng dẫn tương tác trong DocC" sẽ chỉ cho bạn cách thực hiện điều đó.

Cảm ơn bạn đã xem.

[Nhạc gõ].