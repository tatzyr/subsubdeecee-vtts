10257

♪ Nhạc bass đang phát ♪

♪

Marin Eubanks: Xin chào mọi người.

Tôi là Marin, một kỹ sư trong nhóm ClassKit và tôi rất vui được giới thiệu cho bạn một API mới mà chúng tôi đã thêm vào ClassKit cho các ứng dụng dựa trên tệp.

Hôm nay, tôi sẽ xem xét Bài tập ở trường và cách nó được sử dụng với ClassKit.

Sau đó, tôi sẽ thực hiện đánh giá chuyên sâu về API mới cho các ứng dụng dựa trên tệp.

Tiếp theo, tôi sẽ hướng dẫn bạn triển khai mẫu.

Và cuối cùng, tôi sẽ chỉ cho bạn cách kiểm tra API mới bằng cách sử dụng chế độ nhà phát triển của ClassKit.

Hãy để tôi bắt đầu bằng cách cung cấp cho bạn một cái nhìn tổng quan ngắn gọn về Bài tập ở trường.

Schoolwork là một ứng dụng giáo dục cho phép giáo viên chia sẻ các bài tập trong đó học sinh sử dụng ứng dụng của bạn để học.

Khi ứng dụng của bạn áp dụng khung ClassKit và quảng cáo nội dung có thể gán - được gọi là CLSContexts - cũng như bắt đầu báo cáo dữ liệu tiến độ về các hoạt động, giáo viên sẽ có thể chỉ định nội dung đó và xem dữ liệu tiến độ được báo cáo bởi ứng dụng của bạn.

Nếu ứng dụng của bạn được kích hoạt ClassKit, giáo viên sẽ có nhiều khả năng sử dụng ứng dụng của bạn trong chương trình giảng dạy của họ.

Và sắp ra mắt, Schoolwork sẽ còn dễ sử dụng hơn và bổ sung nhiều tính năng mới để hợp lý hóa quy trình làm việc của giáo viên, thông báo hướng dẫn và cung cấp dữ liệu từ ứng dụng của bạn cho giáo viên.

Bây giờ chúng ta đã quen thuộc với Schoolwork, hãy xem dữ liệu từ ứng dụng của bạn chảy vào Schoolwork như thế nào.

Ứng dụng của bạn gửi dữ liệu đến khung ClassKit.

ClassKit hiển thị dữ liệu đó cho ứng dụng Schoolwork.

Dữ liệu sau đó được trình bày cho học sinh và giáo viên.

Đây là góc nhìn về Schoolwork với một vài bài tập của các ứng dụng hỗ trợ ClassKit.

Nếu chúng ta nhấn vào một trong các bài tập, chúng ta có thể thấy một ví dụ về một ứng dụng đã áp dụng ClassKit và báo cáo dữ liệu tiến độ của học sinh.

Chúng tôi sẽ xem xét chi tiết của trường hợp sử dụng này một lát sau.

Bây giờ chúng tôi đã xem xét Schoolwork, hãy nói về API tiến trình dựa trên tệp mới của chúng tôi.

Có hơn 190.000 ứng dụng giáo dục trong App Store.

Và trong khi rất nhiều bạn đã áp dụng API dựa trên ngữ cảnh của ClassKit, không phải tất cả các bạn đều có.

Chúng tôi đã nhận được phản hồi cụ thể xung quanh các ứng dụng tương tác với các tệp và cách bạn muốn áp dụng ClassKit nhưng ngữ cảnh không hoàn toàn phù hợp với trường hợp sử dụng của bạn.

Chà, nếu bạn đang trì hoãn việc áp dụng ClassKit vì ứng dụng của bạn dựa trên tệp, chúng tôi đã thêm một API mới chỉ dành cho bạn.

API mới này dành cho bất kỳ ứng dụng nào tương tác với các tệp.

Nếu bạn có một ứng dụng có thể chỉnh sửa tệp hoặc chỉ cần mở và xem tệp, thì bạn sẽ thích API mới của chúng tôi cho các ứng dụng dựa trên tệp.

Việc áp dụng API mới này cho phép báo cáo dữ liệu tiến độ của học sinh trên các tệp được sử dụng trong ứng dụng của bạn khi chúng được chỉ định trong Schoolwork.

Khi giáo viên chỉ định nội dung từ ứng dụng hỗ trợ ClassKit, họ sẽ được cung cấp thông tin chi tiết bổ sung, đây là một chiến thắng cho họ và là một trường hợp sử dụng mới tuyệt vời cho ứng dụng của bạn.

Một điều quan trọng cần lưu ý là ứng dụng của bạn phải áp dụng Open in Place.

Khi ứng dụng của bạn hỗ trợ Open in Place, tệp chính xác được chia sẻ giữa học sinh và giáo viên sẽ mở trong ứng dụng của bạn chứ không phải bản sao.

Đây là API mới để thêm dữ liệu tiến độ vào tệp.

Nó được gọi là fetchActivity, và nó tồn tại trên CLSDataStore.

Tôi có cả phiên bản thay thế không đồng bộ và không đồng bộ của API này được hiển thị ở đây.

Bạn sẽ chuyển URL tệp của tệp của mình sang API này và nó trả về CLSActivity.

Khi bạn có CLSActivity, bạn có thể thêm dữ liệu tiến độ vào đó.

Bây giờ, chúng ta hãy xem xét các loại dữ liệu tiến độ mà ứng dụng của bạn có thể gửi.

Nếu bạn đã áp dụng ClassKit, thì đây sẽ là đánh giá về các loại dữ liệu tiến trình hiện tại mà chúng tôi có sẵn.

Nếu bạn chưa quen với ClassKit, các lớp này hiện đang được sử dụng trên CLSContexts, nhưng các kiểu dữ liệu tương tự cũng có thể được áp dụng cho các tệp.

Ở đây chúng ta có một CLSActivity.

Đây là một lớp được sử dụng để đóng gói tất cả dữ liệu tiến trình được liên kết với một tệp cụ thể.

Chúng tôi có một vài loại dữ liệu có thể được thêm vào CLSActivity.

Đầu tiên chúng ta có thời lượng.

Đây là khoảng thời gian mà một sinh viên dành để làm việc với tệp được chỉ định.

Thời gian nên được báo cáo trên tất cả các loại tệp.

Để sử dụng API này, bạn chỉ cần gọi các phương thức bắt đầu và dừng tồn tại trên CLSActivity.

Tiếp theo chúng ta có tiến bộ.

Đây là một số giá trị giữa 0 và 1.

Tiến độ thường được sử dụng khi bạn có thể xác định sự tiến bộ của học sinh thông qua một tệp.

Ví dụ, giả sử bạn có một tệp âm thanh hoặc video, và học sinh đã hoàn thành 50 phần trăm.

Bạn sẽ báo cáo tiến trình phát lại là .5.

Để thêm tiến độ, bạn có thể đặt trực tiếp thuộc tính tiến trình hoặc thêm phạm vi từ đầu đến cuối.

Bạn có thể thêm các phạm vi chồng chéo hoặc cùng một phạm vi nhiều lần.

Chúng tôi sẽ xử lý logic để đảm bảo tiến độ chính xác được báo cáo cho học sinh và giáo viên.

Chúng tôi cũng có primaryActivityItem rất hữu ích nếu bạn có một tệp có thể được chỉnh sửa.

Cài đặt primaryActivityItem chỉ ra rằng, phần dữ liệu này, bạn muốn làm nổi bật cho học sinh và giáo viên, và nó hiển thị trong phần chính của giao diện người dùng trong ứng dụng Schoolwork.

Ngoài ra còn có một thuộc tính ActiveItems bổ sung.

Đây là một mảng CLSActivityItems hữu ích cho việc thêm siêu dữ liệu bổ sung.

Để thêm một primaryActivityItem, hãy đặt thuộc tính primaryActivityItem trên CLSActivity.

Để thêm một ActiveItem bổ sung, hãy gọi hàm addAdditionalActivityItem trên CLSActivity và chuyển vào activityItem mà bạn muốn thêm.

Các thuộc tính primaryActivityItem và additionalActivityItem có tham chiếu đến một trong ba lớp con CLSActivityItem của chúng tôi.

Bạn có thể thêm bất kỳ lớp con nào sau đây: Đầu tiên, chúng tôi có CLSBinaryItem.

Điều này được sử dụng để đại diện cho bất kỳ loại dữ liệu nhị phân nào.

Một ví dụ về cách sử dụng điều này có thể là một câu hỏi trong một bài kiểm tra.

Giả sử học sinh hiểu đúng hoặc sai.

Hoặc bạn có thể thêm CLSQuantityItem.

Cái này được sử dụng cho bất kỳ giá trị số chung nào.

Bạn có thể sử dụng cái này cho số trang, số trang trình bày hoặc tổng số từ trên một tài liệu.

Và cuối cùng là CLSScoreItem.

Lớp này được sử dụng cho bất cứ thứ gì được thể hiện như một phần trong tổng số.

Ví dụ, điểm số trong một bài kiểm tra; người dùng đạt tám trên mười.

Bạn có thể thêm bất kỳ sự kết hợp nào của các lớp con này vào một hoạt động, một trong số chúng hoặc tất cả chúng.

Bây giờ chúng ta đã biết các loại dữ liệu mà chúng ta có thể thêm vào, hãy xem qua một mẫu mã áp dụng API này vào một ứng dụng.

Ở đây tôi có một ứng dụng mẫu có thể mở và chỉnh sửa tệp văn bản.

Khi học sinh mở tệp văn bản, tôi sẽ bắt đầu hẹn giờ.

Học sinh sẽ xem qua, chỉnh sửa tập tin.

Khi học sinh chuẩn bị đóng tệp, tôi sẽ ghi lại tổng số từ và dừng bộ đếm thời gian.

Hãy điều hướng đến phần mã của tôi được gọi khi tôi mở tệp và học sinh bắt đầu tương tác với nó.

Tôi có một chức năng openFile.

Đây là nơi tôi sẽ bắt đầu theo dõi thời gian.

Trong ứng dụng của bạn, bạn sẽ đi đến phần mã mà bạn đã có để mở tệp và đây là nơi bạn sẽ thêm một chút mã để bắt đầu hẹn giờ.

Đầu tiên, tôi sẽ tìm nạp hoạt động CLS cho URL tệp của mình.

Khi tôi có hoạt động, tôi sẽ gọi bắt đầu để bắt đầu theo dõi thời gian và sau đó tôi sẽ gọi lưu trên CLSDataStore để cam kết những thay đổi mà tôi đã thực hiện.

Hãy tiếp tục và thêm một điểm dừng ở đây mà chúng ta sẽ quay lại sau khi thử nghiệm việc triển khai của chúng ta.

Bây giờ, tôi cũng muốn dừng bộ đếm thời gian khi học sinh hoàn thành và thêm một Mục Hoạt động chính.

Vì vậy, hãy điều hướng đến phần mã của tôi được gọi khi học sinh sắp đóng tệp.

Ở đây tôi sẽ gọi CLSDataStore.shared. fetchActivity, lấy primaryActivityItem để cập nhật nó nếu nó đã tồn tại hoặc tạo một CLSQuantityItem mới nếu chưa có.

Khi tôi có CLSQuantityItem, tôi có thể cập nhật giá trị của nó và đặt nó làm PrimaryActivityItem trên hoạt động của mình.

Tôi có thể thêm tiến độ vào hoạt động của mình.

Và cuối cùng, gọi dừng lại để dừng hẹn giờ.

Sau đó, tôi đảm bảo gọi lưu.

Nếu chúng tôi không gọi lưu trên CLSDataStore, thì chúng tôi sẽ không duy trì bất kỳ thay đổi nào mà chúng tôi vừa thực hiện.

Tôi cũng sẽ thêm một điểm dừng ở đây.

Chúng tôi sẽ sử dụng điều này để giúp chúng tôi gỡ lỗi việc gửi dữ liệu tiến độ của học sinh.

Bây giờ chúng tôi đã áp dụng API vào ứng dụng mẫu của mình, hãy xem cách chúng tôi có thể kiểm tra việc triển khai của mình bằng cách sử dụng Schoolwork và chế độ nhà phát triển.

Đầu tiên, chúng ta cần thiết lập quyền phát triển môi trường ClassKit.

Cái này nằm bên trong Xcode.

Giá trị mặc định là sản xuất.

Chúng tôi sẽ thay đổi giá trị của quyền phát triển để chúng tôi có thể kiểm tra bằng cách sử dụng chế độ nhà phát triển và Schoolwork.

Lần tới khi chúng tôi chạy mã của mình, nó sẽ chạy ở chế độ nhà phát triển.

Điều quan trọng là đảm bảo đưa cái này trở lại sản xuất sau khi bạn hoàn thành thử nghiệm.

Tiếp theo, chúng ta cần bật chế độ nhà phát triển trên iPad của mình.

Chúng tôi sẽ mở ứng dụng Cài đặt, điều hướng đến Nhà phát triển > ClassKit API.

Chúng tôi sẽ chọn Giáo viên để thay đổi vai trò của chúng tôi thành một giáo viên trong Schoolwork.

Bây giờ, chúng ta sẽ mở ứng dụng Schoolwork.

Khi Schoolwork mở ra, chúng tôi được trình bày với giao diện người dùng của giáo viên.

Và nếu chúng ta nhấn vào nút Tạo Bài tập ở góc trên cùng bên phải, chúng ta có thể tạo một bài tập thêm một tệp mà ứng dụng của chúng ta hỗ trợ bằng cách nhấn vào nút Tệp.

Sau đó, chúng tôi sẽ chọn tệp mà chúng tôi muốn thêm, nhập lớp học và tiêu đề của bài tập.

Bạn cũng có thể tùy chọn thêm bất kỳ văn bản hướng dẫn nào nếu bạn muốn.

Và sau đó nhấn vào nút ở góc trên cùng bên phải để xuất bản bài tập này cho lớp.

Bây giờ chúng tôi đã tạo bài tập, chúng tôi có thể chuyển đổi vai trò của mình để hoạt động như một sinh viên và kiểm tra việc thực hiện dữ liệu tiến độ gửi của chúng tôi.

Vì vậy, hãy điều hướng trở lại ứng dụng Cài đặt.

Trong Cài đặt, chúng tôi sẽ chọn Nhà phát triển > ClassKit API và nhấn vào Sinh viên.

Điều này bây giờ đã thay đổi vai trò của tôi trong Schoolwork để hoạt động như một học sinh.

Chúng ta sẽ quay lại ứng dụng Schoolwork.

Tôi có thể thấy bây giờ tôi đã đăng nhập với tư cách là sinh viên vì tôi không còn nút Tạo Bài tập ở góc trên cùng bên phải của giao diện người dùng của mình nữa.

Ở giữa màn hình, tôi thấy bài tập chúng tôi vừa tạo và nếu tôi nhấn vào nó, tôi sẽ được hiển thị chi tiết của bài tập.

Tôi có thể nhấn vào biểu tượng tệp và điều đó sẽ liên kết sâu với tôi vào ứng dụng của mình, nơi tôi bắt đầu báo cáo dữ liệu tiến độ.

Tệp mở ra trong ứng dụng của tôi và mã của tôi được gọi để bắt đầu hẹn giờ.

Ở đây chúng ta có thể thấy điểm dừng của chúng ta bị tấn công sau khi lưu cuộc gọi để bắt đầu hẹn giờ.

Và nếu chúng ta nhấn Play và sau đó quay lại ứng dụng của mình, tôi sẽ thấy biểu ngữ Student Progress thả xuống từ trên xuống, đó là dấu hiệu cho thấy việc lưu đã thành công và bộ đếm thời gian đã được bắt đầu.

Sau đó tôi sẽ xem qua, thêm một loạt văn bản để hoàn thành bài luận.

Ứng dụng mẫu của tôi có nút Xong mà học sinh sẽ nhấn vào khi họ chỉnh sửa xong tệp.

Vì vậy, tôi sẽ nhấn vào nút Xong ở góc trên cùng bên trái.

Tại thời điểm này, hàm closeFile của tôi sẽ được gọi.

Chúng ta có thể thấy điểm dừng thứ hai của chúng ta đã được nhấn để lưu wordCount làm Mục hoạt động chính và dừng bộ hẹn giờ.

Sau đó, chúng ta có thể nhấn Play và quay lại Schoolwork.

Trong Schoolwork, tôi có thể thấy dữ liệu tiến độ được gửi bởi ứng dụng của tôi.

Đầu tiên, tôi thấy thời gian là 41 phút.

Điều này xác nhận rằng tôi đang gọi bắt đầu, dừng và lưu một cách chính xác.

Tiếp theo, tôi thấy số lượng từ, mà tôi đặt làm Mục Hoạt động chính.

Bất kỳ lớp con CLSActivityItem nào tôi đặt làm primaryActivityItem sẽ hiển thị ở đây trong phần chính của giao diện người dùng.

Thực tế là tôi có thể thấy số lượng từ của mình là 558 từ xác nhận rằng việc gửi CLSQuantityItem của tôi đang hoạt động chính xác.

Bây giờ, hãy chuyển vai trò của chúng ta trở lại giáo viên và xem dữ liệu được gửi bởi ứng dụng của tôi xuất hiện như thế nào đối với giáo viên.

Ở giữa màn hình, chúng ta thấy tôi có thời gian trung bình và số lượng từ trung bình cho tất cả học sinh.

Dưới đây là một hàng cho mỗi học sinh trong bài tập.

Trong phòng giam của Học sinh, tôi thấy dữ liệu mà một học sinh đã gửi.

Và nếu tôi nhấn vào ô Sinh viên, tôi có thể thấy dữ liệu tiến độ được báo cáo bởi ứng dụng của tôi.

Chúng tôi có Mục Hoạt động chính, thời gian và một Mục Hoạt động bổ sung được liệt kê là Cấp Lớp Khả năng Đọc.

Và đó là cách bạn sử dụng chế độ nhà phát triển để kiểm tra tích hợp ClassKit của mình.

Đừng quên đặt quyền lợi trở lại sản xuất.

Chà, tuyệt vời!

Chúng tôi đã đề cập rất nhiều ngày hôm nay, từ API mới đến thử nghiệm nó với chế độ nhà phát triển.

Ngay cả khi bạn không xem xét ứng dụng của mình cho giáo dục, rất có thể một nhà giáo dục làm được và việc kích hoạt ClassKit có nghĩa là ứng dụng của bạn sẽ sẵn sàng để họ tích hợp ngay vào chương trình giảng dạy của họ.

Vì vậy hãy đảm bảo áp dụng API của chúng tôi.

Và cảm ơn bạn.

Cảm ơn bạn đã báo cáo phản hồi và vui lòng gửi bất kỳ phản hồi nào khác mà bạn có thể có.

Chúng tôi rất thích nghe tin từ bạn.

Và nếu bạn quan tâm đến việc tìm hiểu thêm về các API dựa trên ngữ cảnh của chúng tôi, hãy xem các phiên trước của chúng tôi về "Có gì mới trong ClassKit" và bài nói chuyện của chúng tôi "Giới thiệu ClassKit" từ năm 2018.

Cảm ơn, và chúc bạn có một WWDC tuyệt vời!

♪