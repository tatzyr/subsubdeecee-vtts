10045

♪ Nhạc bass đang phát ♪

♪

Alex Telek: Xin chào, tôi là Alex.

Tôi là một kỹ sư trong đội Shazam.

Cảm ơn vì đã tham gia phiên này.

Hôm nay, tôi sẽ chỉ cho bạn cách tạo trải nghiệm âm thanh tùy chỉnh cho ứng dụng của bạn với ShazamKit bằng cách sử dụng nhận dạng danh mục tùy chỉnh.

Trong phiên này, tôi sẽ sử dụng một số khái niệm ShazamKit hiện có, chẳng hạn như danh mục, chữ ký và các mục phương tiện.

Nếu bạn chưa quen thuộc với những thứ đó, hãy đảm bảo xem bài nói chuyện "Khám phá ShazamKit".

Hãy xem những gì chúng ta sẽ đề cập hôm nay.

Chúng ta sẽ nói về cách xây dựng danh mục với âm thanh và siêu dữ liệu tùy chỉnh.

Chúng tôi sẽ tìm hiểu cách bạn có thể kết hợp âm thanh với danh mục tùy chỉnh của riêng mình khi sử dụng micrô và khung AVFAudio để ghi lại âm thanh.

Sau đó, chúng tôi sẽ tùy chỉnh ứng dụng của mình để đồng bộ hóa nội dung với âm thanh tùy chỉnh.

Cuối cùng, chúng tôi sẽ đề cập đến một số phương pháp hay nhất mà bạn có thể sử dụng khi làm việc với các danh mục tùy chỉnh.

Đây là một mã-cùng.

Có một dự án có sẵn trên cổng thông tin dành cho nhà phát triển mà chúng tôi sẽ sử dụng trong suốt phiên này.

Tôi khuyên bạn nên tải xuống dự án trước khi chúng ta bắt đầu.

Khi việc học ngày càng trở nên kỹ thuật số hơn, chúng ta cần đưa ra những cách để giữ cho trẻ em tham gia.

Điều gì sẽ xảy ra nếu bạn có thể phát video trên Apple TV của mình và có một ứng dụng đồng hành hiển thị các câu hỏi chính xác vào đúng thời điểm?

Hôm nay, tôi sẽ chỉ cho bạn cách xây dựng một ứng dụng từ xa đồng bộ hóa và phản ứng với video giáo dục bằng cách sử dụng nhận dạng danh mục tùy chỉnh.

Đầu tiên, chính xác các danh mục tùy chỉnh là gì và làm thế nào để chúng ta xây dựng một danh mục?

Danh mục tùy chỉnh là một tập hợp các chữ ký mà bạn tạo ra từ bất kỳ âm thanh nào.

Bạn cũng có thể thêm siêu dữ liệu liên quan cho mỗi chữ ký.

Để thêm chữ ký vào danh mục tùy chỉnh của bạn, bạn có thể sử dụng đối tượng SignatureGenerator.

Nó sẽ chuyển đổi bộ đệm âm thanh thành chữ ký.

Đầu tiên, tạo một trình tạo chữ ký, sau đó sử dụng chức năng installTap trên inputNode của audioEngine, thêm bộ đệm và audioTime vào trình tạo.

Tham số bộ đệm là bộ đệm của âm thanh được thu từ đầu ra của inputNode.

audioTime là thời gian mà bộ đệm được ghi lại.

Khi bạn chỉ định Định dạng âm thanh, hãy đảm bảo rằng định dạng là PCM ở một trong các tỷ lệ mẫu được hỗ trợ.

Gọi chức năng chữ ký trên trình tạo sẽ chuyển đổi bộ đệm âm thanh thành chữ ký.

Chúng tôi gọi đây là chữ ký tham chiếu, sau đó chúng tôi có thể thêm vào danh mục tùy chỉnh.

Bạn cũng có thể thêm chữ ký vào danh mục bằng cách sử dụng tệp shazamsignature.

Đây là một tệp không rõ ràng có thể được chia sẻ trên các thiết bị.

Để giúp việc áp dụng các danh mục tùy chỉnh với ShazamKit dễ dàng hơn, trong phiên này, chúng tôi đã bao gồm tệp này để bạn sử dụng.

Trước khi chúng ta bắt đầu, hãy mở dự án đã tải xuống và xem chúng ta có gì trong đó.

Chúng ta hãy xem xét kỹ đối tượng Câu hỏi.

Một câu hỏi đại diện cho một nội dung tùy chỉnh trong ứng dụng.

Đầu tiên, có một tiêu đề và một phần bù.

Tiêu đề là một chuỗi mô tả một phần trong video.

Bù đắp là thời gian khi phần này xuất hiện.

Ví dụ, sau 45 giây, giáo viên bắt đầu nói về một phương trình toán học.

Bạn sẽ tạo một Câu hỏi với tiêu đề đó và 45 làm phần bù.

Phương trình đại diện cho một thời điểm giảng dạy, hiển thị các phương trình toán học.

Bạn có thể sử dụng cái này như các khối xây dựng gia tăng.

Ví dụ, bạn có thể muốn hiển thị phía bên trái và bên phải của một phương trình ở các độ lệch khác nhau.

Cuối cùng, answerRange và requireAnswer được sử dụng để chỉ ra khi nào một giao diện người dùng tương tác sẽ hiển thị, vì vậy trẻ em có thể thực hành trả lời các câu hỏi.

Hãy cùng xem điều này sẽ như thế nào đối với video giáo dục của chúng tôi.

Câu hỏi đầu tiên bắt đầu từ 14 giây.

Tôi có một quả táo đỏ ở 21 giây và thêm ba quả táo xanh ở 25 giây.

Cuối cùng, sau 31 giây, học sinh sẽ có cơ hội trả lời câu hỏi.

Lưu ý, các video thường được định dạng theo giờ, phút và giây, vì vậy để tạo độ lệch như tôi đã làm ở đây, trước tiên bạn nên chuyển đổi thời gian thành giây.

Ví dụ, bạn có thể nhờ Siri giúp đỡ, như, "Ba phút 14 giây trong vài giây là gì?"

Bây giờ, hãy đi sâu vào mã và xem cách chúng ta có thể bắt đầu với các danh mục tùy chỉnh!

Đầu tiên, tôi sẽ xây dựng một danh mục bằng cách thêm chữ ký với một số siêu dữ liệu được liên kết với nó.

Ở đây, tôi có CatalogProvider với chức năng tạo danh mục.

Chữ ký tham khảo mà bạn sẽ thêm vào danh mục được gọi là FoodMath.shazamsignature.

Hãy tải tệp đó vào và tạo một đối tượng chữ ký từ nó.

Khi bạn có điều đó, bạn xác định siêu dữ liệu bằng cách sử dụng các mục phương tiện.

Tôi sẽ đặt một số khóa thuộc tính mục phương tiện được xác định trước, chẳng hạn như tiêu đề và phụ đề.

Điều này sẽ mô tả video giáo dục.

Tôi cũng đã tạo một tiện ích mở rộng trên SHMediaItemProperty với hai khóa tùy chỉnh: giáo viên và tập.

Đặt số tập và tên của giáo viên sẽ tùy chỉnh thêm nội dung của danh mục.

Tất cả những gì bạn phải làm bây giờ là tạo một đối tượng customCatalog.

Sau đó gọi addReferenceSignature trên đó và chuyển chữ ký và đối tượng mediaItem.

Điều này sẽ liên kết siêu dữ liệu bạn vừa tạo với chữ ký tham chiếu bạn đã tải từ đĩa.

Hoàn hảo!

Bây giờ tôi đã có nó, tôi có thể bắt đầu kết hợp âm thanh với danh mục và xem kết quả đang hoạt động.

Vậy hãy mở Matcher.

Chúng tôi sẽ khớp âm thanh đầu vào từ micrô với nội dung của danh mục tùy chỉnh mà chúng tôi vừa tạo.

Để ghi lại âm thanh từ micrô, bạn có thể sử dụng AVAudioEngine từ AVFAudio.

Trong dự án này, tôi đã thêm mô tả về việc sử dụng micrô trong tệp Info.plist.

Cũng trong Matcher, tôi đã bao gồm mã để yêu cầu quyền micrô và thiết lập phiên âm thanh.

Đầu tiên, để nhận thông tin cập nhật về các trận đấu, bạn tạo một đối tượng phiên và đặt đại diện.

Chức năng đối sánh lấy danh mục tùy chỉnh mà chúng tôi đã tạo trước đó, vì vậy bạn có thể chuyển nó cho phiên.

Bây giờ, bạn đã sẵn sàng để kết hợp âm thanh bằng cách sử dụng chức năng installTap trên inputNode của audioEngine.

Hàm trả về một audioBuffer - đó là âm thanh được chuyển đổi từ micrô - và audioTime - là thời gian bộ đệm được ghi lại.

Sau đó, bạn gọi matchStreamingBuffer trong phiên và chuyển bộ đệm âm thanh và thời gian âm thanh.

Chúng tôi khuyên bạn nên bao gồm thời gian khi có sẵn vì điều này sẽ được xác thực bởi phiên để đảm bảo rằng âm thanh được cung cấp tiếp giáp nhau.

Vì bạn đã đặt đại diện phiên ở đầu, để xử lý các cập nhật, bạn có thể triển khai phiên: didFind match: chức năng từ đại diện phiên.

Đối với điều này, tôi đã tạo ra một đối tượng gọi là MatchResult.

Nó chứa một MatchedMediaItem, được trả về bởi phiên: didFind match: hàm, đây là siêu dữ liệu được liên kết với chữ ký tham chiếu trong danh mục.

Nó sẽ bao gồm các chi tiết mà chúng tôi đã tạo trước đó, như số tập và tên của giáo viên.

Nó chỉ có thể được tạo ra từ một trận đấu, và nó chứa thêm thông tin liên quan đến điều đó.

Cũng trong MatchResult, chúng tôi có đối tượng Câu hỏi mà tôi đã chỉ cho bạn trước đó.

Điều này đại diện cho một phần trong video với một phương trình toán học.

Chúng tôi sẽ sử dụng cái này để tìm nội dung liên quan cho một trận đấu.

Vì vậy, bên trong đại diện, chúng tôi đặt MatchResult để lấy đối tượng MatchedMediaItem đầu tiên và bây giờ chúng tôi sẽ không đặt gì cho Câu hỏi.

Bây giờ hãy xây dựng và chạy và xem trận đấu đang hoạt động.

Đây là ứng dụng FoodMath của chúng tôi, nó có một danh sách các tập có sẵn cho học sinh.

Tôi có thể phát video và cùng với đồng nghiệp Neil của tôi, chúng ta có thể học cách giải một số bài toán.

Neil, bạn có gì cho chúng tôi hôm nay?

Neil: Vì vậy, định dạng là tôi sẽ hỏi bạn một câu hỏi, bạn sẽ có một chút thời gian để suy nghĩ về nó, và sau đó chúng ta sẽ xem liệu bạn có hiểu đúng không!

Bạn cũng có thể chơi cùng nếu bạn có ứng dụng của chúng tôi. < Khi tôi bắt đầu video, ứng dụng nhận ra rằng chúng tôi đang nghe tập ba, "Count on Me."

Điều này thật tuyệt!

Tiếp theo, tôi muốn tìm ra những phần nào cần hiển thị cho một độ lệch cụ thể trong âm thanh, sử dụng đối tượng Câu hỏi của chúng tôi.

Chúng tôi sử dụng MatchedMediaItem để biết chúng tôi đang xem video nào, nhưng nó cũng chứa thông tin bổ sung về trận đấu, chẳng hạn như CurrentMatchOffset được dự đoán.

Đây là vị trí tự động cập nhật trong chữ ký tham chiếu được biểu thị dưới dạng khoảng thời gian tính bằng giây.

Bạn có thể sử dụng điều này để tìm ra vị trí của bạn trong video và tìm đối tượng Câu hỏi có liên quan.

Quay trở lại mã, trong cuộc gọi lại đại diện, thay vì đặt nil, tôi muốn tìm Câu hỏi cuối cùng xuất hiện ngay sau CurrentMatchOffset dự đoán.

Tôi có thể sử dụng độ lệch của câu hỏi để so sánh các giá trị.

phiên:didFindMatch có thể được gọi nhiều lần với cùng một trận đấu.

Vì vậy, hãy triển khai một bộ lọc sẽ chỉ cập nhật kết quả khi bạn nhận được một đối tượng Câu hỏi mới.

Một khi bạn có điều đó, bạn có thể cập nhật kết quả với giá trị.

Bây giờ hãy xem nó trông như thế nào; xây dựng và chạy.

Lần này, tôi muốn tìm hiểu về sự bổ sung.

Tôi sẽ phát lại video và xem liệu nội dung của câu hỏi có hiển thị đồng bộ với video hay không.

Neil: Câu hỏi một. Hãy bắt đầu nào.

Hôm nay tôi đã đến các cửa hàng và tôi tưởng tượng ra một vài quả táo, vì vậy tôi đã mua một quả táo đỏ; và tôi đã mua một, hai, ba quả táo xanh.

Tôi đã mua tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu... ngay bây giờ. < Alex: Bây giờ là thời gian đặt câu hỏi. Một cộng ba là gì?

Nó có thể là năm không?

Ồ. Không, tôi đã hiểu sai cái đó. Hãy thử lại lần nữa.

Tôi sẽ tua lại video, và lần này tôi sẽ chú ý nhiều hơn!

Neil: Câu hỏi một. Hãy bắt đầu nào.

Hôm nay tôi đã đến các cửa hàng và tôi tưởng tượng ra một vài quả táo, vì vậy tôi đã mua một quả táo đỏ; và tôi đã mua một, hai, ba quả táo xanh.

Tôi đã mua tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu... ngay bây giờ. < Alex: Bây giờ tôi nghe lại nó, tôi biết rằng câu trả lời là bốn.

Điều gì sẽ xảy ra nếu bạn thấy câu hỏi này quá dễ dàng?

Hãy để tôi bỏ qua và xem Neil có điều gì phức tạp hơn một chút để dạy chúng ta không.

Neil: Câu hỏi bốn. Câu hỏi cuối cùng.

Vì vậy hôm nay, tôi cảm thấy khá đói.

Vì vậy, tôi đã quyết định sẽ mua 14 quả táo.

Một... hai... ba... bốn -- < Alex: Đó là rất nhiều táo. Hãy để tôi tiếp tục thêm một chút nữa.

Bỏ qua phía trước 20 giây.

Neil: Vì vậy tôi quyết định mua thêm 28 quả táo nữa.

Một... hai... ba...

Bốn... năm... sáu...

26... 27...

28 quả táo.

Tôi đã mua tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu ngay bây giờ. < Alex: Bây giờ, đó là một câu hỏi tuyệt vời.

Bạn đã theo dõi chưa?

Tôi sẽ đi với con số yêu thích của tôi!

Đúng rồi!

Câu trả lời cho câu hỏi cuối cùng là 42!

Thật đơn giản: bất kể học sinh ở đâu trong video, ứng dụng từ xa của bạn sẽ cập nhật và cập nhật nội dung.

Hãy đề cập đến một số phương pháp hay nhất khi sử dụng danh mục tùy chỉnh.

Danh mục tùy chỉnh có thể được chia sẻ liền mạch giữa các thiết bị bằng cách sử dụng phần mở rộng tệp shazamcatalog.

Bạn có thể tải và lưu vào đĩa bằng cách sử dụng fileURL cũng như gửi chúng qua mạng.

Khi sử dụng dịch vụ web từ xa, bạn có thể muốn tải xuống danh mục trước và sau đó sử dụng chức năng thêm trên đối tượng danh mục tùy chỉnh.

Đảm bảo cung cấp danh mục địa phương khi không có sẵn danh mục nào trên mạng.

Danh mục có thể lưu trữ các khóa tùy chỉnh để trả lại dữ liệu cụ thể cho trường hợp sử dụng của bạn.

Đảm bảo rằng dữ liệu bạn thêm vào danh mục của mình là một trong những giá trị danh sách tài sản hợp lệ.

Khi sử dụng matchStreamingBuffer, ShazamKit sẽ khớp với luồng âm thanh và cân bằng hiệu suất cũng như cường độ tìm kiếm, thực hiện tất cả công việc tạo và tự động cập nhật chữ ký cho bạn.

Vì vậy, bây giờ bạn đã xây dựng một ứng dụng đầy đủ được đồng bộ hóa với video giáo dục, cập nhật nội dung đến nơi học sinh hiện chỉ sử dụng chữ ký và danh mục tùy chỉnh.

Đây chỉ là một trong nhiều ví dụ có thể xảy ra và chúng tôi thực sự vui mừng khi thấy những gì bạn sẽ xây dựng bằng ShazamKit.

Cảm ơn bạn và chúc bạn có một WWDC tuyệt vời.

♪