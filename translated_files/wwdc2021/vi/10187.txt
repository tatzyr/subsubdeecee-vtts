10187

♪ Nhạc bass đang phát ♪

♪

Willem Mattelaer: Xin chào, tên tôi là Willem và tôi là một kỹ sư làm việc trong Hoạt động Nhóm.

Tôi sẽ được Angus và Adam tham gia để nói về cách bạn có thể tạo ra những trải nghiệm tùy chỉnh với Hoạt động Nhóm.

Để bắt đầu, tôi sẽ giới thiệu ứng dụng mà chúng tôi sẽ làm việc trong phiên này và giải thích lý do tại sao nó là một ứng cử viên tuyệt vời để thêm hỗ trợ Hoạt động Nhóm vào.

Tiếp theo, chúng ta sẽ xem xét các bước tạo hoạt động và quản lý phiên và giải thích sự khác biệt so với việc tạo ra trải nghiệm truyền thông.

Cuối cùng, chúng tôi sẽ đề cập đến một số cách bạn có thể đánh bóng trải nghiệm mà người dùng của bạn có trong khi sử dụng ứng dụng của bạn.

Hoạt động nhóm cho phép bạn xây dựng trải nghiệm được chia sẻ trên các thiết bị với SharePlay.

Mặc dù trọng tâm là tạo ra trải nghiệm truyền thông, nhưng điều đó không ngăn cản bạn phát huy sự sáng tạo của mình và xem ứng dụng của bạn có thể được trải nghiệm như thế nào trên nhiều thiết bị.

Chúng tôi sẽ xây dựng dựa trên một số khái niệm đã được giới thiệu trong phiên " Phối hợp trải nghiệm truyền thông với Hoạt động Nhóm".

Tôi thực sự khuyên bạn nên kiểm tra cái đó.

Trong phiên này, chúng tôi sẽ làm việc trên một ứng dụng có tên DrawTogether cho phép bạn - bạn đoán nó - vẽ cùng nhau trong FaceTime.

Đó là một ứng dụng khá đơn giản, nơi gần như toàn bộ màn hình là khung vẽ và mọi người đều nhận được một màu ngẫu nhiên mà họ có thể sử dụng để vẽ.

Nhưng mặc dù đơn giản, nhưng vẫn vô cùng thú vị khi vẽ với bạn bè của tôi và ngưỡng mộ kỹ năng tuyệt vời của một số người trong số họ hoặc cười vào những bức vẽ kém cỏi của họ.

Bản thân tôi chắc chắn rơi vào loại thứ hai.

Hãy để tôi chỉ cho bạn một bản demo nhanh về những gì chúng ta sẽ hướng tới.

Này các bạn, có chuyện gì vậy?

Adam, tôi thấy bạn có một câu hỏi cho tôi.

Adam Syed: Vâng. Vì vậy, Angus và tôi đã nói chuyện, và anh ấy đã đề cập rằng bạn là một nghệ sĩ thực sự giỏi - giống như một Picasso hạng A.

Vậy là bạn phải cho chúng tôi xem, anh bạn!

Angus Burton: Tôi đã xem một số bức vẽ của Willem, và chúng rất ấn tượng.

Willem: Tôi nghĩ, Angus, bạn đang phóng đại một chút.

Nhưng tôi rất vui khi cho bạn thấy những gì tôi có thể làm.

Hãy vào ứng dụng DrawTogether.

Adam: Được rồi.

Chúng ta có thể làm, như, một cảnh quan mục vụ không?

Willem: Chắc chắn rồi, uh... hãy để tôi bắt đầu bằng cách vẽ một ngôi nhà, có thể.

Adam: Được rồi.

Angus: Willem, ngôi nhà này trông khá cơ bản, anh bạn.

Có lẽ tôi sẽ giúp bạn với một mặt trời.

Adam: Tôi sẽ thử một cái cây.

Willem: Cái cây đó quá cao.

Adam: Không, mặt trời quá thấp, anh bạn.

Willem: Để tôi thêm một ít cỏ.

Adam: Tôi sẽ vẽ thêm vài cái cây nữa.

Willem: Được rồi. Ừm, tôi nghĩ tôi sẽ gọi nó.

Chúng tôi không phải là nghệ sĩ và chúng tôi nên dừng những gì chúng tôi đang làm ngay bây giờ.

Hãy - Tôi sẽ nói chuyện với các bạn sau, OK?

Adam: OK Angus: Tạm biệt.

Willem: Như bạn đã thấy, một trong những trải nghiệm cốt lõi của API Hoạt động Nhóm là cho phép bạn làm mọi thứ cùng nhau trong khi xa nhau về thể chất.

Các tương tác thời gian thực mà bạn có thể mở khóa và phản ứng tức thì mà người dùng của bạn sẽ nhận được, vì họ có thể nhìn và nghe thấy mọi người khác, có thể dẫn đến một số khoảnh khắc thực sự kỳ diệu.

Đây là điều bạn nên ghi nhớ khi xem xét cách tích hợp Hoạt động Nhóm trong ứng dụng của mình.

Có hai bước để áp dụng Hoạt động Nhóm: tạo hoạt động và quản lý phiên.

Chúng tôi đã đề cập chi tiết hơn về điều này trong phiên "Điều phối trải nghiệm truyền thông".

Trong phiên này, chúng ta hãy xem các bước này thay đổi như thế nào khi xây dựng trải nghiệm tùy chỉnh, bắt đầu với việc tạo hoạt động.

Có hai phần để tạo ra một Hoạt động Nhóm.

Đầu tiên bạn định cấu hình hoạt động của mình, và sau đó là kích hoạt hoạt động.

So với Hoạt động Nhóm phương tiện truyền thông, chỉ có phần cấu hình là khác nhau đối với hoạt động tùy chỉnh.

Khi cấu hình hoạt động, bạn phải suy nghĩ về trải nghiệm cụ thể mà bạn muốn chia sẻ giữa tất cả những người tham gia.

Hoạt động nên chứa tất cả thông tin không đổi trong suốt trải nghiệm đó.

Nếu bạn đã xem phiên "Phối hợp trải nghiệm truyền thông với các hoạt động nhóm", điều này sẽ trông quen thuộc.

Chúng tôi đã xác định một cấu trúc DrawTogether phù hợp với giao thức GroupActivity và chúng tôi đã triển khai thuộc tính siêu dữ liệu nơi chúng tôi xây dựng siêu dữ liệu được liên kết với một tiêu đề.

Bây giờ để biến điều này thành một hoạt động tùy chỉnh, chúng ta sẽ chỉ cần đặt đúng loại trên siêu dữ liệu.

Bằng cách đặt nó thành chung chung, chúng tôi định cấu hình hoạt động này thành một hoạt động tùy chỉnh.

Và đó là tất cả những gì bạn cần làm khi định cấu hình một hoạt động tùy chỉnh so với một phương tiện truyền thông.

Bây giờ hãy nhảy ngay vào Xcode và bắt đầu tạo Hoạt động Nhóm tùy chỉnh của chúng tôi trong ứng dụng DrawTogether.

Đầu tiên, hãy để tôi nhanh chóng hướng dẫn bạn qua mã mà chúng ta bắt đầu.

DrawTogether là một ứng dụng SwiftUI sử dụng vòng đời ứng dụng SwiftUI.

ContentView là chế độ xem chính của ứng dụng.

Ở trên cùng của chế độ xem, có một chỉ báo hiển thị màu sắc sẽ được sử dụng khi vẽ.

Bên dưới đó là CanvasView.

Điều này cần một khung vẽ và sẽ chịu trách nhiệm vẽ tất cả các nét vẽ trong khung vẽ và cập nhật khung vẽ dựa trên bất kỳ đầu vào nào của người dùng.

Cuối cùng, ở phía dưới có một ControlBar, chứa một vài điều khiển có thể hữu ích trong khi vẽ.

Hiện tại chúng tôi có một nút duy nhất ở đó để xóa khung vẽ và bắt đầu lại từ đầu.

Bản thân khung vẽ bao gồm một mảng các nét vẽ trong đó mỗi nét vẽ có màu sắc, số nhận dạng và danh sách các điểm.

Khung vẽ cũng có một activeStroke - đại diện cho một nét vẽ mà người dùng cục bộ hiện đang vẽ - và màu nét vẽ sẽ được người dùng sử dụng.

Bây giờ chúng ta hãy bắt đầu với việc cấu hình hoạt động của chúng ta.

Trước khi chúng ta làm điều đó, tôi sẽ phải thêm quyền Hoạt động Nhóm.

Tôi làm điều đó bằng cách vào cài đặt dự án và trong tab Ký & Khả năng, tôi sẽ thêm một khả năng mới.

Tôi sẽ tìm kiếm các Hoạt động Nhóm và chọn nó.

Bây giờ chúng ta đã có quyền lợi, cuối cùng chúng ta hãy định cấu hình hoạt động của chúng ta.

Tôi sẽ thêm một tệp mới bằng cách vào Tệp > Mới > Tệp...

Và chọn Swift File.

Tôi sẽ gọi nó là "DrawTogether"...

...Và nhấp vào Tạo.

Đầu tiên, tôi sẽ nhập khuôn khổ của chúng tôi.

Tiếp theo, tôi sẽ xác định một cấu trúc mới được gọi là "DrawTogether" phù hợp với giao thức GroupActivity.

Giao thức GroupActivity có hai thuộc tính cần được triển khai: activityIdentifier và siêu dữ liệu.

Đối với activityIdentifier, tôi sẽ dựa vào việc triển khai mặc định.

Tuy nhiên, thuộc tính siêu dữ liệu vẫn cần thiết.

Vậy hãy thêm nó vào.

Trong thuộc tính được tính toán này, tôi tạo một đối tượng GroupActivityMetadata và tôi đặt tiêu đề.

Tôi cũng đặt loại là chung chung.

Điều này rất quan trọng đối với một hoạt động tùy chỉnh.

Cuối cùng, tôi trả lại đối tượng siêu dữ liệu.

Bây giờ chúng tôi đã định cấu hình hoạt động, chúng tôi vẫn cần kích hoạt nó vào thời điểm thích hợp.

Tôi sẽ thêm một nút mới để kích hoạt nó - và còn nơi nào tốt hơn cho điều đó sau thanh điều khiển của chúng tôi?

Tôi sẽ thêm nút ở đầu HStack của chúng tôi.

Đối với nhãn của nút, chúng tôi đang sử dụng Biểu tượng SF.

Và trong phần đóng hành động, chúng tôi sẽ tạo một phiên bản mới của Hoạt động Nhóm tùy chỉnh của mình và gọi kích hoạt nó.

Và đó là tất cả những gì cần thiết để kích hoạt hoạt động của chúng tôi.

Tôi vừa chỉ ra cách định cấu hình Hoạt động Nhóm tùy chỉnh và cách kích hoạt nó.

Đây là hai phần cần thiết cho bước tạo hoạt động.

Bây giờ, tôi sẽ giao nó cho Angus, người sẽ cho bạn biết về bước quản lý phiên.

Angus: Cảm ơn, Willem.

Tiếp theo, chúng ta sẽ nói về cách bạn có thể gửi và nhận dữ liệu tùy chỉnh trong ứng dụng của mình bằng cách sử dụng Hoạt động nhóm.

Đây là trọng tâm của việc tạo ra trải nghiệm SharePlay độc đáo với các Hoạt động Nhóm.

Từ phiên trước có tiêu đề, "Phối hợp trải nghiệm truyền thông với Hoạt động Nhóm", bạn nên làm quen với ba bước nhận phiên, chuẩn bị phát lại và tham gia phiên.

Thay vì đồng bộ hóa phát lại, chúng ta cần định cấu hình một phiên cho trải nghiệm tùy chỉnh của mình.

Nhưng trước khi chúng ta nhảy vào đó, hãy thêm mã để nhận Phiên Nhóm và tham gia.

Hãy quay lại Xcode và điều đầu tiên chúng ta sẽ làm là điều hướng đến ContentView và nhập GroupActivities.

Tiếp theo, chúng tôi sẽ tạo một nhiệm vụ không đồng bộ để nhận GroupSession của chúng tôi.

Bây giờ chúng tôi có một GroupSession, chúng tôi cần một nơi để lưu trữ nó.

Hãy lưu trữ nó trên đối tượng Canvas của chúng tôi bằng một phương thức mới mà chúng tôi sẽ gọi là "configureGroupSession".

Bây giờ, hãy điều hướng đến Canvas và triển khai phương thức configureGroupSession.

Chúng ta sẽ bắt đầu bằng cách lên đầu trang và đảm bảo nhập GroupActivities.

Hãy đi đến cuối tệp của chúng tôi và thực hiện phương pháp mới của chúng tôi tiếp theo.

Ở đây chúng tôi đã gán đối tượng groupSession mà chúng tôi nhận được cho một thuộc tính mới trong lớp của chúng tôi.

Cũng lưu ý rằng chúng tôi đã đặt lại khung vẽ trước khi đặt thuộc tính groupSession.

Cuối cùng nhưng không kém phần quan trọng, hãy thêm mã để tham gia groupSession.

Tại thời điểm này, chúng ta sẽ có thể xây dựng và biên soạn dự án của mình.

Hãy kiểm tra điều đó ngay bây giờ bằng cách vào Sản phẩm > Xây dựng.

Tuyệt vời.

Bây giờ chúng tôi đã thiết lập mã để nhận và tham gia Phiên nhóm của mình, hãy xem cách định cấu hình phiên để gửi và nhận dữ liệu tùy chỉnh trong ứng dụng của chúng tôi.

Để định cấu hình phiên, chúng tôi sẽ sử dụng GroupSessionMessenger, cung cấp một API đơn giản để gửi và nhận dữ liệu thô hoặc tin nhắn có cấu trúc đến và đi từ những người tham gia trong Phiên nhóm.

Hãy xem cách sử dụng GroupSessionMessenger tiếp theo.

Để bắt đầu, chúng tôi sẽ tạo một GroupSessionMessenger từ groupSession của chúng tôi.

Bước đầu tiên trong việc sử dụng GroupSessionMessenger là xác định loại dữ liệu nào cần được trao đổi giữa những người tham gia trong ứng dụng của bạn.

Trong DrawTogether, dữ liệu cụ thể mà chúng ta cần chia sẻ với các thiết bị khác là bản thân các nét vẽ.

Chúng ta có thể biểu diễn một nét vẽ với ba thuộc tính: một định danh, một màu sắc và một điểm tọa độ.

Lưu ý rằng chúng tôi làm cho UpsertStrokeMessage của chúng tôi phù hợp với giao thức Codable.

Điều này là do GroupSessionMessenger cho phép chúng tôi gửi và nhận các tin nhắn có cấu trúc và sẽ tự động xử lý việc tuần tự hóa và hủy tuần tự hóa cho chúng tôi, miễn là các tin nhắn có thể mã hóa được.

Bước thứ hai để định cấu hình phiên là nhận dữ liệu bằng API Tin nhắn trên GroupSessionMessenger.

Đối với DrawTogether, chúng tôi sẽ cần xử lý việc nhận UpsertStrokeMessages.

API tin nhắn được hiển thị ở đây có thể lấy loại có thể mã hóa và trả về một chuỗi không đồng bộ - cung cấp cho chúng tôi một bộ chứa các tin nhắn thuộc loại đó - và ngữ cảnh xung quanh tin nhắn - bao gồm thông tin như người tham gia đã gửi tin nhắn đó.

Bước thứ ba để cấu hình phiên là gửi dữ liệu bằng cách sử dụng API gửi trên GroupSessionMessenger.

Đối với DrawTogether, chúng tôi sẽ gửi UpsertStrokeMessage cho tất cả những người tham gia trong nhóm.

Lưu ý rằng API gửi là một phương thức ném không đồng bộ.

Các lỗi mà nó gây ra nên được xử lý một cách thích hợp bởi ứng dụng của bạn.

Bây giờ, hãy vào Xcode và thêm mã GroupSessionMessenger của chúng tôi.

Chúng tôi sẽ bắt đầu bằng cách điều hướng đến tệp nguồn Canvas và tạo một GroupSessionMessenger từ Phiên Nhóm của chúng tôi.

Chúng tôi sẽ thêm thuộc tính messenger vào Canvas để giữ đối tượng messenger mà chúng tôi vừa tạo.

Tiếp theo chúng ta cần xác định UpsertStrokeMessage, sẽ được gửi và nhận giữa những người tham gia.

Hãy tạo một tệp mới cho việc này.

Chúng tôi sẽ làm điều đó bằng cách vào File > New > File...

Chọn Tệp Swift...

...Và hãy dán nó vào thư mục Mô hình của chúng tôi.

Và hãy gọi nó là "Tin nhắn".

Bây giờ hãy thêm mã để xác định UpsertStrokeMessage.

Bây giờ chúng tôi đã xác định tin nhắn để gửi và nhận với GroupSessionMessenger, hãy viết mã để gửi và nhận nó.

Chúng tôi sẽ điều hướng trở lại Canvas để làm điều này.

Hãy đi đến cuối tệp của chúng tôi và thêm mã để nhận tin nhắn.

Ở đây, chúng tôi tạo một tác vụ tách rời để nhận UpsertStrokeMessages từ chuỗi không đồng bộ và gọi một phương thức mới, xử lý, để xử lý tin nhắn.

Hãy thực hiện điều đó tiếp theo.

Trong mã này, chúng tôi kiểm tra xem liệu chúng tôi đã có đột quỵ chưa bằng cách kiểm tra số nhận dạng của nó và nếu có, hãy thêm điểm vào đó.

Nếu không, chúng tôi tạo một nét mới, thêm điểm vào đó và thêm nét vào mảng nét của chúng tôi.

Tiếp theo, chúng tôi sẽ viết mã để gửi tin nhắn.

Chúng ta sẽ đi đến phương pháp ở trên, addPointToActiveStroke.

Tuyệt vời!

Bây giờ hãy xây dựng và chạy ứng dụng của chúng tôi và xem trải nghiệm DrawTogether được chia sẻ đang hoạt động.

Vì vậy, tôi sẽ chuyển sang hai thiết bị của mình và tôi sẽ bắt đầu cuộc gọi FaceTime với chính mình.

Tôi sẽ vào ứng dụng Điện thoại và sau đó tự gọi cho mình.

Và sau đó tôi sẽ trả lời trên thiết bị khác của mình.

Tắt mic đi.

Bây giờ trên thiết bị này, tôi sẽ bắt đầu trải nghiệm DrawTogether được chia sẻ.

Tôi sẽ nhấn vào biểu tượng dưới cùng bên trái.

Và trên thiết bị khác, tôi sẽ tham gia Phiên họp Nhóm.

Và bây giờ tôi sẽ chơi tic-tac-toe với chính mình.

Tôi sẽ di chuyển trước.

Có vẻ như tôi đã thắng.

Tuyệt. Có vẻ như mã của chúng tôi hoạt động.

Bây giờ chúng ta đã nói về cách định cấu hình phiên bằng GroupSessionMessenger bằng cách xác định tin nhắn trước tiên, sau đó nhận tin nhắn và cuối cùng gửi tin nhắn, hãy nói về một vài điều khác cần xem xét khi sử dụng GroupSessionMessenger.

Dưới mui xe, GroupSessionMessenger cung cấp dịch vụ gửi tin nhắn đáng tin cậy và được FIFO sắp xếp cho tất cả những người tham gia tích cực trong nhóm.

Các tin nhắn bạn gửi có những ràng buộc; nếu chúng quá lớn, một lỗi sẽ được ném ra từ API gửi.

GroupSessionMessenger dành cho các tải trọng nhỏ hơn và không nên được sử dụng để phát trực tuyến các nội dung lớn như tệp, hình ảnh hoặc video.

Một điều khác cần xem xét khi gửi tin nhắn là kiểm soát luồng và giới hạn tốc độ.

Gửi một loạt các tin nhắn liên tiếp, giống như một vòng lặp, có thể dẫn đến lỗi được ném từ API gửi.

Cuối cùng, khi xác định các tin nhắn để sử dụng với GroupSessionMessenger, hãy cân nhắc thêm hỗ trợ lập phiên bản vào giao thức ứng dụng của bạn.

Điều này sẽ cho phép các ứng dụng của bạn hỗ trợ tương tác với các thiết bị chạy phiên bản phần mềm cũ hơn của bạn.

Bây giờ tôi sẽ trao nó cho Adam, người sẽ nói chuyện với bạn về cách bạn có thể trau dồi trải nghiệm GroupActivities của mình.

Adam: Cảm ơn, Angus!

Vì vậy, bây giờ hãy nói về một số bước hoàn thiện mà ứng dụng của bạn có thể cần cho trải nghiệm tùy chỉnh của nó.

Đầu tiên, hãy nói về những người tham gia muộn.

Những người tham gia muộn là những thiết bị tham gia vào một phiên hoạt động sau khi phiên được bắt đầu.

Để đảm bảo trải nghiệm phù hợp, những người tham gia muộn cần được cung cấp thông tin mới nhất để tất cả các thiết bị hoạt động dựa trên cùng một dữ liệu.

Tính toán cho kịch bản này là rất quan trọng để đảm bảo trải nghiệm người dùng mạch lạc, nhưng nó không phải là một kích thước phù hợp với tất cả.

Dữ liệu cần thiết cho quá trình bắt kịp này sẽ phụ thuộc vào ứng dụng và trải nghiệm của bạn.

Vì vậy, hãy xem nó áp dụng như thế nào cho ứng dụng DrawTogether.

Giả sử rằng chúng ta có hai thiết bị trong một Phiên Nhóm.

Hai thiết bị này có cùng thông tin: một khuôn mặt cười được vẽ trên khung vẽ của chúng.

Bạn có thể thấy rằng bởi vì cả hai đều ở trong phiên khi bản vẽ xảy ra, họ có cùng dữ liệu trong suốt trải nghiệm.

Bây giờ, hãy thêm một thiết bị khác.

Tại thời điểm này, các cuộc gọi thiết bị mới tham gia vào GroupSession của họ, nhưng không có gì trên canvas.

Vì vậy, chúng tôi vẽ một đám mây, và - Ồ, đó là - điều đó không tốt!

Bởi vì thiết bị mới không có ngữ cảnh trước đó, khuôn mặt cười của chúng tôi bây giờ có một đám mây trên đó.

Bây giờ hãy sao lưu và thử lại lần nữa.

Làm thế nào để chúng ta khắc phục điều này để thiết bị mới có màn trình diễn khuôn mặt cười ngay khi nó tham gia?

Khi các cuộc gọi thiết bị mới tham gia vào Phiên nhóm, mọi thiết bị khác được tham gia vào Phiên nhóm sẽ thấy thuộc tính Người tham gia đang hoạt động trên lửa Phiên nhóm.

Các thiết bị quan sát tín hiệu đó sau đó sẽ gửi dữ liệu bắt kịp của nó - trong trường hợp này là khung vẽ hiện có - đến thiết bị mới được nối.

Bây giờ khi thiết bị mới tham gia, nó thấy rằng đã có một khuôn mặt cười ở đó để chúng ta có thể vẽ xung quanh nó!

Vậy bây giờ, làm thế nào chúng ta làm điều này trong mã?

Điều đầu tiên chúng ta cần làm là hiểu dữ liệu mà ứng dụng của chúng ta cần truyền tải trong tin nhắn bắt kịp của chúng ta.

Vì chúng tôi là một trải nghiệm DrawTogether và mục tiêu của chúng tôi là đảm bảo rằng khung vẽ giống nhau trên thiết bị của mọi người, hãy tiếp tục và tạo một tin nhắn mới trong tệp Message.swift của chúng tôi có tên là "CanvasMessage".

Cấu trúc này sẽ chứa tất cả các nét vẽ mà chúng ta có và một biến mà chúng ta sẽ gọi là "pointCount", sẽ được sử dụng như một heuristic để tính toán tin nhắn nào cập nhật nhất.

Tuyệt vời!

Bây giờ, làm thế nào để chúng ta xử lý việc nhận được tin nhắn này?

Nếu chúng ta chuyển sang mô hình Canvas của mình trong Canvas.swift, chúng ta có thể thiết lập trình xử lý tin nhắn trong configureGroupSession bằng cách sử dụng GroupSessionMessenger như Angus đã chỉ cho chúng ta trước đây.

Từ đây, bạn có thể thấy rằng chúng tôi gọi vào chức năng xử lý của mình, vì vậy hãy tiếp tục và thực hiện điều đó.

Trong mã này, bạn có thể thấy rằng chúng tôi bảo vệ chống lại quan điểm của mình Đếm heuristic để chỉ chấp nhận các tin nhắn bắt kịp mới hơn những gì chúng tôi hiện có.

Nếu điều đó trôi qua, thì chúng ta hãy tiếp tục và ghi đè các nét vẽ của canvas bằng các nét của catchupMessage.

Bây giờ, như chúng ta đã thảo luận trước đó, chúng ta cần lắng nghe những Người tham gia tích cực thay đổi để tìm hiểu xem có bất kỳ người tham gia mới nào mà chúng ta cần giao tiếp hay không.

Vì vậy, hãy tiếp tục và thêm nó vào chức năng configureGroupSession của chúng tôi.

Trong trình xử lý này, bạn có thể thấy rằng chúng tôi lấy delta giữa những Người tham gia đang hoạt động mới và những Người tham gia đang hoạt động cũ của chúng tôi.

Điều này đảm bảo rằng chúng tôi chỉ gửi tin nhắn bắt kịp của mình cho những người tham gia mới tham gia.

Tuyệt vời!

Bây giờ chúng tôi chỉ cần hình thành và gửi tin nhắn của chúng tôi.

Tin nhắn này sẽ chứa trạng thái canvas hiện tại của chúng tôi và sẽ chỉ gửi nó cho những Người tham gia mới.

Và thế là xong!

Đó là bắt kịp!

Vì vậy, bây giờ chúng ta đã có tất cả các phần cho Phiên họp Nhóm để tiếp tục cho một hoạt động cụ thể, chúng ta phải làm gì nếu chúng ta thay đổi hoàn toàn các hoạt động?

Đây có thể là một cái gì đó giống như thay đổi khung vẽ hoặc thay đổi phim.

API của chúng tôi cung cấp hai cách thay đổi hoạt động: bạn có thể tạo Phiên nhóm mới hoặc cập nhật hoạt động cho mọi người trên Phiên nhóm hiện tại của mình.

Vì vậy, hãy nói về cả hai.

Cách đầu tiên và ưa thích để thay đổi nội dung là thông qua việc gọi cùng một API đã bắt đầu Phiên Nhóm: prepareForActivation trên GroupActivity.

Cách tiếp cận này giúp dễ dàng suy luận về trạng thái nhất quán giữa những người tham gia, vì nó cung cấp một rào cản sạch sẽ cho lối vào và lối ra của GroupSession, vì vậy bạn không cần phải lo lắng về các trạng thái kéo dài hoặc tin nhắn mà bạn không cần từ GroupSession cũ.

Điều này cực kỳ hữu ích khi người dùng quay lại hoạt động để tìm hoạt động tiếp theo, chẳng hạn như tìm kiếm một ghi chú hoặc bộ phim mới.

Điều này cũng cung cấp cho hệ thống một dấu hiệu về một thay đổi lớn, sẽ được sử dụng để thông báo cho người dùng.

Sau cuộc gọi này, giống như bắt đầu Phiên Nhóm, bạn sẽ nhận được Phiên Nhóm mới của mình thông qua chuỗi không đồng bộ phiên trên GroupActivity.

Bây giờ, điều gì sẽ xảy ra nếu ứng dụng của bạn có một danh sách các hoạt động mà bạn sẽ chuyển đổi, chẳng hạn như nhiều bài hát phát sau nhau?

API GroupSession của chúng tôi cung cấp một cách đơn giản để bạn kích hoạt cập nhật cho mọi người bằng cách chỉ cần đặt thuộc tính hoạt động trên GroupSession.

Từ đó, sau đó bạn lắng nghe sự thay đổi thuộc tính hoạt động.

API của chúng tôi sẽ đảm bảo rằng các thiết bị luôn hội tụ vào cùng một hoạt động nên bạn không cần phải lo lắng về điều đó.

Bây giờ chúng ta đã hiểu về mặt khái niệm hai, chúng ta nên sử dụng cái nào cho ứng dụng DrawTogether của mình?

Bởi vì ứng dụng của chúng tôi muốn có một bảng xếp hạng sạch trên mỗi khung vẽ mới, API Phiên mới sẽ cung cấp cho chúng tôi chính xác những gì chúng tôi muốn.

Vì vậy, bây giờ hãy chuyển sang Xcode để xem cách triển khai nó.

Bước đầu tiên ở đây là quyết định cách chúng tôi muốn kích hoạt một phiên mới.

Trong trường hợp của chúng tôi, hãy làm cho nó như vậy khi một khách hàng sử dụng nút Đặt lại của chúng tôi, chúng tôi sẽ tiếp tục và tạo một GroupSession mới.

Nếu chúng ta nhìn vào mã ControlBar của mình, chúng ta có thể thấy rằng chúng ta đã có một CapsuleButton gọi vào mô hình Canvas của chúng ta để đặt lại trạng thái cục bộ.

Vì vậy, hãy tiếp tục và sửa đổi chức năng đó để phá bỏ GroupSession và tạo một cái mới.

Trong mã này, chúng tôi sẽ tiếp tục và hủy bỏ bất kỳ nhiệm vụ và hủy bỏ nào mà chúng tôi có cho GroupSession của mình.

Chúng tôi cũng sẽ kiểm tra xem chúng tôi có GroupSession hay không - và nếu có, hãy để nó và gọi vào thuộc tính kích hoạt trên loại DrawTogether của chúng tôi.

Từ đó, dòng chảy bình thường của chúng tôi để nhận GroupSession sẽ diễn ra, và chúng tôi đã sẵn sàng!

Bây giờ chúng ta có một cách rõ ràng để chuyển sang một bức tranh mới.

Bây giờ, điều gì sẽ xảy ra nếu chúng tôi muốn thay đổi giao diện người dùng của mình để cho người dùng biết rằng họ có thể thử trải nghiệm SharePlay của chúng tôi với bạn bè của họ?

Ví dụ: trong ứng dụng vẽ của chúng tôi, chúng tôi muốn khung vẽ của mình thay đổi từ cái này sang cái này khi chúng tôi đủ điều kiện cho GroupSession, bạn sẽ nhận thấy rằng bây giờ chúng tôi hiển thị một nút để chia sẻ khung vẽ.

Vậy làm thế nào để chúng ta làm điều này?

Với GroupStateObserver API, chúng tôi có thể lắng nghe nhà xuất bản cho chúng tôi biết khi nào thiết bị đủ điều kiện cho Phiên nhóm.

Sau đó chúng ta có thể sử dụng cái này để tự động hiển thị và ẩn nút của chúng ta.

Vậy chúng ta hãy đi và thực hiện nó!

Như chúng ta đã thấy, chúng ta muốn một nút nhỏ ở phía dưới bên trái của ứng dụng của chúng ta.

Vì ứng dụng của chúng tôi đã có nút chia sẻ trong chế độ xem ControlBar của chúng tôi, hãy thay đổi hành vi để hiển thị và ẩn nút dựa trên GroupStateObserver.

Đầu tiên chúng ta tiếp tục và thêm groupStateObserver vào chế độ xem của chúng ta.

Bây giờ hãy bao quanh CapsuleButton của chúng tôi để chỉ hiển thị nếu chúng tôi đủ điều kiện cho một groupSession và chúng tôi chưa ở trong groupSession này.

Và thế là xong!

Nút của chúng tôi bây giờ chỉ hiển thị động khi nó hữu ích cho người dùng.

Bây giờ chúng ta hãy xem lại những gì chúng ta đã thấy trong phiên này.

Chúng tôi đã trải qua toàn bộ quá trình tạo ra một ứng dụng vẽ đơn giản mà sau đó chúng tôi đã thay đổi để tận dụng Hoạt động nhóm để làm cho nó được đồng bộ hóa và kết nối hơn bao giờ hết.

Nhưng quan trọng hơn, chúng tôi đã trải qua tất cả các bước cần thiết để bạn giải phóng hoàn toàn sự sáng tạo của mình và tạo ra bất kỳ trải nghiệm SharePlay tùy chỉnh nào với Hoạt động Nhóm.

Chúng tôi đã nói về việc tạo một hoạt động tùy chỉnh với một loại chung, định cấu hình và tận dụng GroupSession và GroupSessionMessenger để giao tiếp đồng bộ, và các trường hợp cạnh và API mà ứng dụng của bạn nên áp dụng để tạo ra trải nghiệm người dùng thực sự phong phú.

Tôi hy vọng bạn thích tạo ra trải nghiệm tùy chỉnh này với chúng tôi và chúng tôi mong muốn được thấy sự sáng tạo của bạn trở nên điên cuồng với khuôn khổ Hoạt động Nhóm!

Bước tiếp theo của bạn trong khi tìm hiểu về Hoạt động nhóm nên là phiên "Thiết kế cho Hoạt động Nhóm" Và nếu bạn chưa xem nó, hãy xem phiên "Xây dựng trải nghiệm truyền thông với Hoạt động Nhóm".

Nếu bạn có bất kỳ câu hỏi nào, vui lòng tìm chúng tôi tại phòng thí nghiệm Hoạt động Nhóm.

Và cuối cùng, cảm ơn tất cả các bạn đã theo dõi và có một WWDC tuyệt vời.

Chúng tôi nóng lòng muốn xem những gì bạn xây dựng!

♪