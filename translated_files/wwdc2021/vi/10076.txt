10076

♪ Nhạc bass đang phát ♪

♪

Michael Patrick Johnson: Xin chào!

Tên tôi là Michael Patrick Johnson, và tôi là một kỹ sư trong nhóm Object Capture.

Hôm nay, đồng nghiệp Dave McKinnon của tôi và tôi sẽ chỉ cho bạn cách biến các đối tượng trong thế giới thực thành các mô hình 3D bằng cách sử dụng API trắc quang mới của chúng tôi trên macOS.

Bạn có thể đã quen thuộc với việc tạo các ứng dụng thực tế tăng cường bằng cách sử dụng khung ARKit và RealityKit của chúng tôi.

Bạn cũng có thể đã sử dụng Reality Composer và Reality Converter để tạo ra các mô hình 3D cho AR.

Và bây giờ, với Object Capture API, bạn có thể dễ dàng biến hình ảnh của các đối tượng trong thế giới thực thành các mô hình 3D chi tiết.

Giả sử bạn có một ít bánh pizza mới nướng trước mặt trên bàn bếp.

Trông rất ngon, phải không?

Giả sử chúng ta muốn chụp chiếc bánh pizza ở phía trước như một mô hình 3D.

Thông thường, bạn sẽ cần thuê một nghệ sĩ chuyên nghiệp trong nhiều giờ để mô hình hóa hình dạng và kết cấu.

Nhưng, khoan đã, bạn chỉ mất vài phút để nướng trong lò nướng của riêng mình!

Với Object Capture, bạn bắt đầu bằng cách chụp ảnh đối tượng của mình từ mọi góc độ.

Tiếp theo, bạn sao chép hình ảnh vào máy Mac hỗ trợ API Object Capture mới.

Sử dụng một kỹ thuật thị giác máy tính được gọi là "photogrammetry", chồng hình ảnh 2D được biến thành mô hình 3D chỉ trong vài phút.

Mô hình đầu ra bao gồm cả lưới hình học cũng như các bản đồ vật liệu khác nhau và sẵn sàng được thả ngay vào ứng dụng của bạn hoặc xem trong AR Quick Look.

Bây giờ chúng ta hãy xem xét từng bước này chi tiết hơn một chút.

Đầu tiên, bạn chụp ảnh đối tượng của mình từ mọi phía.

Hình ảnh có thể được chụp trên iPhone hoặc iPad, máy ảnh DSLR hoặc thậm chí là máy bay không người lái của bạn.

Bạn chỉ cần đảm bảo rằng bạn có được những bức ảnh rõ ràng từ mọi góc độ xung quanh đối tượng.

Chúng tôi sẽ cung cấp các phương pháp hay nhất để chụp sau phiên.

Nếu bạn chụp trên iPhone hoặc iPad, chúng tôi có thể sử dụng dữ liệu độ sâu âm thanh nổi từ các thiết bị được hỗ trợ để cho phép khôi phục kích thước vật thể thực tế, cũng như vectơ trọng lực để mô hình của bạn được tự động tạo bên phải.

Khi bạn đã chụp được một thư mục hình ảnh, bạn cần sao chép chúng vào máy Mac của mình, nơi bạn có thể sử dụng Object Capture API để biến chúng thành mô hình 3D chỉ trong vài phút.

API được hỗ trợ trên các máy Mac dựa trên Intel gần đây, nhưng sẽ chạy nhanh nhất trên tất cả các máy Mac silicon mới nhất của Apple vì chúng tôi có thể sử dụng Apple Neural Engine để tăng tốc các thuật toán thị giác máy tính của mình.

Chúng tôi cũng cung cấp HelloPhotogrammetry, một ứng dụng dòng lệnh mẫu để giúp bạn bắt đầu.

Bạn cũng có thể sử dụng nó trực tiếp trên thư mục hình ảnh của mình để thử xây dựng một mô hình cho chính mình trước khi viết bất kỳ mã nào.

Cuối cùng, bạn có thể xem trước các mô hình đầu ra USDZ ngay trên máy Mac của mình.

Chúng tôi có thể cung cấp các mô hình ở bốn cấp độ chi tiết được tối ưu hóa cho các trường hợp sử dụng khác nhau của bạn, chúng tôi sẽ thảo luận chi tiết hơn sau.

Các chi tiết Giảm, Trung bình và Đầy đủ đã sẵn sàng để sử dụng ngay khi lấy ra khỏi hộp, giống như bánh pizza được hiển thị ở đây.

Raw được thiết kế cho quy trình làm việc tùy chỉnh.

Bằng cách chọn đầu ra USDZ ở mức chi tiết Trung bình, bạn có thể xem mô hình mới trong AR Quick Look ngay trên iPhone hoặc iPad của mình.

Và đó là tất cả để có được các đối tượng giống như thật được tối ưu hóa cho AR!

Ồ khoan đã, nhớ pizza từ trước không?

Chúng ta phải dọn dẹp.

Hình ảnh này không thực sự là một bức ảnh, nhưng thực sự được tạo ra bằng cách sử dụng Object Capture trên một số chiếc bánh pizza.

Những mô hình này sau đó được kết hợp vào cảnh này trong một công cụ hậu kỳ và được kết xuất bằng cách sử dụng bộ dò tia với các bản đồ vật liệu tiên tiến.

Vì vậy, bạn thấy đấy, Object Capture có thể hỗ trợ nhiều trường hợp sử dụng mục tiêu, từ các ứng dụng AR trên iPhone hoặc iPad đến các tài sản sản xuất sẵn sàng cho phim.

Trong phần còn lại của phiên này, chúng tôi sẽ chỉ cho bạn cách bắt đầu sử dụng Object Capture API và sau đó đưa ra các phương pháp hay nhất của chúng tôi để đạt được kết quả chất lượng cao nhất.

Trong phần bắt đầu, chúng ta sẽ đi sâu vào chi tiết hơn về API Object Capture và giới thiệu các khái niệm mã cần thiết để tạo một ứng dụng.

Tiếp theo chúng ta sẽ thảo luận về các phương pháp hay nhất để chụp ảnh, lựa chọn đối tượng và lựa chọn cấp độ chi tiết.

Hãy bắt đầu bằng cách thực hiện các bước cần thiết trong việc sử dụng API trên macOS.

Trong phần này, bạn sẽ tìm hiểu các thành phần cơ bản của Object Capture API và cách ghép chúng lại với nhau.

Giả sử chúng ta có đôi giày thể thao mới thú vị này mà chúng ta muốn biến thành một mô hình 3D để xem trong AR.

Ở đây chúng ta thấy một sơ đồ đồ họa của quy trình làm việc cơ bản mà chúng ta sẽ khám phá trong phần này.

Có hai bước chính trong quy trình: Thiết lập, nơi chúng tôi trỏ đến tập hợp hình ảnh của một đối tượng; và sau đó là Quy trình, nơi chúng tôi yêu cầu tạo các mô hình mà chúng tôi muốn được xây dựng.

Đầu tiên, chúng tôi sẽ tập trung vào khối Thiết lập, bao gồm hai bước phụ: tạo một phiên và sau đó kết nối luồng đầu ra liên quan của nó.

Khi chúng ta có một phiên hợp lệ, chúng ta có thể sử dụng nó để tạo ra các mô hình của mình.

Điều đầu tiên chúng ta cần làm là tạo ra một PhotogrammetrySession.

Để tạo một phiên, chúng tôi sẽ giả sử bạn đã có một thư mục hình ảnh của một đối tượng.

Chúng tôi đã cung cấp một số thư mục chụp ảnh mẫu trong tài liệu API để bạn bắt đầu nhanh chóng.

PhotogrammetrySession là lớp cấp cao nhất chính trong API và là điểm kiểm soát chính.

Một phiên có thể được coi là một vùng chứa cho một tập hợp hình ảnh cố định mà các thuật toán quang trắc sẽ được áp dụng để tạo ra mô hình 3D kết quả.

Ở đây chúng tôi có 123 hình ảnh HEIC của đôi giày thể thao được chụp bằng iPhone 12 Pro Max.

Hiện tại có một số cách để chỉ định bộ hình ảnh để sử dụng.

Đơn giản nhất chỉ là một URL tệp đến một thư mục hình ảnh.

Phiên họp sẽ nhập từng cái một và báo cáo về bất kỳ vấn đề nào gặp phải.

Nếu có dữ liệu độ sâu được nhúng trong hình ảnh HEIC, nó sẽ tự động được sử dụng để khôi phục tỷ lệ thực tế của đối tượng.

Mặc dù chúng tôi hy vọng hầu hết mọi người sẽ thích đầu vào thư mục hơn, chúng tôi cũng cung cấp một giao diện cho quy trình làm việc nâng cao để cung cấp một chuỗi các mẫu tùy chỉnh.

Mẫu Photogrammetry bao gồm hình ảnh cộng với dữ liệu tùy chọn khác như bản đồ độ sâu, vectơ trọng lực hoặc mặt nạ phân đoạn tùy chỉnh.

Khi bạn đã tạo một phiên từ một nguồn đầu vào, bạn sẽ đưa ra yêu cầu về nó để tái tạo mô hình.

Phiên sẽ xuất ra các mô hình kết quả cũng như các thông báo trạng thái trên luồng tin nhắn đầu ra của nó.

Bây giờ chúng ta đã thấy phiên là gì, hãy xem cách tạo một phiên bằng API.

Ở đây chúng ta thấy mã để thực hiện thiết lập ban đầu của một phiên từ một thư mục hình ảnh.

PhotogrammetrySession nằm trong khuôn khổ RealityKit.

Đầu tiên, chúng tôi chỉ định thư mục đầu vào làm URL tệp.

Ở đây, chúng tôi giả định rằng chúng tôi đã có một thư mục trên đĩa cục bộ chứa hình ảnh của đôi giày thể thao của chúng tôi.

Cuối cùng, chúng tôi tạo phiên bằng cách chuyển URL làm nguồn đầu vào của chúng tôi.

Trình khởi tạo sẽ gây ra lỗi nếu đường dẫn không tồn tại hoặc không thể đọc được.

Bạn có thể tùy chọn cung cấp các thông số cấu hình nâng cao, nhưng ở đây chúng tôi sẽ chỉ sử dụng các mặc định.

Đó là tất cả những gì cần thiết để tạo ra một phiên!

Bây giờ chúng tôi đã tạo thành công một đối tượng phiên, chúng tôi cần kết nối luồng đầu ra của phiên để chúng tôi có thể xử lý các tin nhắn khi chúng đến.

Sau khi luồng tin nhắn được kết nối, chúng ta sẽ xem cách yêu cầu các mô hình sau đó sẽ đến luồng đó.

Chúng tôi sử dụng AsyncSequence - một tính năng Swift mới trong năm nay - để cung cấp luồng đầu ra.

Thông báo đầu ra bao gồm kết quả của các yêu cầu, cũng như các thông báo trạng thái như cập nhật tiến độ.

Khi chúng tôi thực hiện cuộc gọi quy trình đầu tiên, tin nhắn sẽ bắt đầu chảy trên luồng tin nhắn đầu ra.

Chuỗi tin nhắn đầu ra sẽ không kết thúc trong khi phiên đang hoạt động.

Nó sẽ tiếp tục tạo ra các tin nhắn cho đến khi phiên được hủy khởi tạo hoặc trong trường hợp có lỗi nghiêm trọng.

Bây giờ, chúng ta hãy xem xét kỹ hơn các loại tin nhắn mà chúng ta sẽ nhận được.

Sau khi yêu cầu được thực hiện, chúng tôi hy vọng sẽ nhận được các thông báo requestProgress định kỳ với ước tính đã hoàn thành phân số cho mỗi yêu cầu.

Nếu bạn đang xây dựng một ứng dụng gọi Object Capture API, bạn có thể sử dụng chúng để điều khiển thanh tiến trình cho mỗi yêu cầu để chỉ ra trạng thái.

Khi yêu cầu được xử lý xong, chúng tôi sẽ nhận được thông báo requestComplete chứa tải trọng kết quả, chẳng hạn như mô hình hoặc hộp giới hạn.

Nếu có sự cố xảy ra trong quá trình xử lý, một requestError sẽ được xuất ra cho yêu cầu đó thay thế.

Để thuận tiện, một thông báo processingComplete được xuất ra khi tất cả các yêu cầu được xếp hàng đã hoàn tất quá trình xử lý.

Bây giờ chúng ta đã được giới thiệu về khái niệm luồng đầu ra phiên và thấy các thông báo đầu ra chính, chúng ta hãy xem một số mã ví dụ xử lý luồng tin nhắn.

Khi chúng tôi có cái này, chúng tôi sẽ xem cách yêu cầu một mô hình.

Đây là một số mã tạo ra một tác vụ không đồng bộ xử lý tin nhắn khi chúng đến.

Nó có vẻ như rất nhiều mã, nhưng hầu hết nó chỉ đơn giản là gửi tin nhắn như chúng ta sẽ thấy.

Chúng tôi sử dụng vòng lặp "để thử chờ đợi" để lặp lại không đồng bộ các tin nhắn trong session.outputs khi chúng đến.

Phần lớn mã là một trình điều phối tin nhắn chuyển đổi trên tin nhắn đầu ra.

Đầu ra là một liệt kê với các loại tin nhắn và tải trọng khác nhau.

Mỗi tuyên bố trường hợp sẽ xử lý một tin nhắn khác nhau.

Hãy đi qua chúng.

Đầu tiên, nếu chúng tôi nhận được thông báo tiến độ, chúng tôi sẽ chỉ in ra giá trị.

Lưu ý rằng chúng tôi nhận được tin nhắn tiến độ cho mỗi yêu cầu.

Đối với ví dụ của chúng tôi, khi yêu cầu hoàn tất, chúng tôi mong đợi tải trọng kết quả là một modelFile với URL đến nơi mô hình được lưu.

Chúng tôi sẽ xem cách đưa ra yêu cầu như vậy trong giây lát.

Nếu yêu cầu không thành công do lỗi trắc quang, thay vào đó chúng tôi sẽ nhận được thông báo lỗi cho nó.

Sau khi toàn bộ tập hợp các yêu cầu từ một cuộc gọi quy trình kết thúc, một thông báo processingComplete được tạo ra.

Đối với ứng dụng dòng lệnh, bạn có thể thoát khỏi ứng dụng tại đây.

Cuối cùng, có những thông báo trạng thái khác mà bạn có thể đọc trong tài liệu, chẳng hạn như cảnh báo về hình ảnh trong thư mục không thể tải được.

Và đó là nó để xử lý tin nhắn!

Nhiệm vụ xử lý tin nhắn này sẽ tiếp tục lặp lại và xử lý tin nhắn không đồng bộ miễn là phiên còn hoạt động.

Được rồi, hãy xem chúng ta đang ở đâu trong quy trình làm việc của mình.

Chúng tôi đã hoàn thành hoàn thành giai đoạn Thiết lập và chuẩn bị sẵn sàng cho một phiên.

Bây giờ chúng tôi đã sẵn sàng để đưa ra yêu cầu xử lý các mô hình.

Trước khi chúng ta nhảy vào mã, chúng ta hãy xem xét kỹ hơn các loại yêu cầu khác nhau mà chúng ta có thể thực hiện.

Có ba loại dữ liệu khác nhau mà bạn có thể nhận được từ một phiên: ModelFile, ModelEntity và BoundingBox.

Các loại này có một trường hợp liên quan trong liệt kê Yêu cầu: modelFile, modelEntity và giới hạn; mỗi loại có các tham số khác nhau.

Yêu cầu modelFile là phổ biến nhất và là yêu cầu chúng tôi sẽ sử dụng trong quy trình làm việc cơ bản của mình.

Bạn chỉ cần tạo một yêu cầu modelFile chỉ định URL tệp với phần mở rộng USDZ, cũng như mức độ chi tiết.

Có một tham số hình học tùy chọn để sử dụng trong quy trình làm việc tương tác, nhưng chúng tôi sẽ không sử dụng nó ở đây.

Đối với các đường ống xử lý hậu kỳ liên quan nhiều hơn, nơi bạn có thể cần các định dạng đầu ra USDA hoặc OBJ, thay vào đó bạn có thể cung cấp URL thư mục đầu ra, cùng với mức độ chi tiết.

Phiên sau đó sẽ ghi các tệp USDA và OBJ vào thư mục đó, cùng với tất cả các tài sản được tham chiếu như kết cấu và vật liệu.

Một ứng dụng GUI cũng có thể yêu cầu RealityKit ModelEntity và BoundingBox để xem trước và tinh chỉnh tương tác.

Một yêu cầu modelEntity cũng có cấp độ chi tiết và hình học tùy chọn.

Một yêu cầu giới hạn sẽ trả về một khối lượng chụp ước tính BoundingBox cho đối tượng.

Hộp này có thể được điều chỉnh trong giao diện người dùng và sau đó được chuyển trong đối số hình học của yêu cầu tiếp theo để điều chỉnh âm lượng tái tạo.

Chúng ta sẽ xem điều này hoạt động như thế nào sau đó một chút trong phiên.

Hầu hết các yêu cầu cũng có mức độ chi tiết.

Cấp độ xem trước chỉ dành cho quy trình làm việc tương tác.

Nó có chất lượng hình ảnh rất thấp nhưng được tạo ra nhanh nhất.

Các cấp độ chi tiết chính theo thứ tự tăng chất lượng và kích thước là Giảm, Trung bình và Đầy đủ.

Tất cả các cấp độ này đều sẵn sàng để sử dụng ngay lập tức.

Ngoài ra, cấp độ Raw được cung cấp để sử dụng chuyên nghiệp và sẽ cần quy trình làm việc hậu kỳ để được sử dụng đúng cách.

Chúng ta sẽ thảo luận chi tiết hơn về những điều này trong phần thực hành tốt nhất.

Được rồi, bây giờ chúng ta đã thấy những loại yêu cầu nào chúng ta có thể thực hiện, hãy xem cách thực hiện điều này trong mã.

Bây giờ chúng ta sẽ xem cách tạo hai mô hình đồng thời trong một cuộc gọi, mỗi mô hình có tên tệp đầu ra và mức độ chi tiết khác nhau.

Ở đây chúng ta thấy cuộc gọi đầu tiên để xử lý phiên.

Lưu ý rằng nó cần một loạt các yêu cầu.

Đây là cách chúng tôi có thể yêu cầu hai mô hình cùng một lúc.

Chúng tôi sẽ yêu cầu một mô hình ở mức độ chi tiết Giảm và một ở Mức trung bình, mỗi mô hình được lưu vào một tệp USDZ khác nhau.

Yêu cầu tất cả các cấp độ chi tiết mong muốn để chụp đối tượng đồng thời trong một cuộc gọi cho phép công cụ chia sẻ tính toán và sẽ tạo ra tất cả các mô hình nhanh hơn so với yêu cầu chúng tuần tự.

Bạn thậm chí có thể yêu cầu tất cả các cấp độ chi tiết cùng một lúc.

Quá trình có thể ngay lập tức gây ra lỗi nếu yêu cầu không hợp lệ, chẳng hạn như nếu vị trí đầu ra không thể được ghi.

Cuộc gọi này trả về ngay lập tức và các tin nhắn sẽ sớm bắt đầu xuất hiện trên luồng đầu ra.

Và đó là sự kết thúc của quy trình làm việc cơ bản!

Bạn tạo phiên với hình ảnh của mình, kết nối luồng đầu ra và sau đó yêu cầu các mô hình.

Thời gian xử lý cho mỗi mô hình của bạn sẽ phụ thuộc vào số lượng hình ảnh và mức chất lượng.

Khi quá trình xử lý hoàn tất, bạn sẽ nhận được thông báo đầu ra rằng mô hình có sẵn.

Bạn có thể mở tệp USDZ kết quả của đôi giày thể thao bạn đã tạo ngay trên máy Mac của mình và kiểm tra kết quả ở dạng 3D từ mọi góc độ, kể cả phía dưới.

Sau đó trong phiên này, chúng tôi sẽ chỉ cho bạn cách đạt được phạm vi bảo hiểm cho tất cả các mặt của đối tượng của bạn trong một phiên chụp, tránh sự cần thiết phải kết hợp nhiều lần chụp lại với nhau.

Nó trông thật tuyệt!

Bây giờ bạn đã thấy quy trình làm việc cơ bản, chúng tôi sẽ cung cấp tổng quan cấp cao về quy trình làm việc tương tác nâng cao hơn mà API Object Capture cũng hỗ trợ.

Quy trình làm việc tương tác được thiết kế để cho phép thực hiện một số điều chỉnh trên mô hình xem trước trước khi tái tạo cuối cùng, điều này có thể loại bỏ nhu cầu chỉnh sửa mô hình hậu kỳ và tối ưu hóa việc sử dụng bộ nhớ.

Đầu tiên, lưu ý rằng bước Thiết lập và bước Quy trình ở cả hai đầu của quy trình làm việc này vẫn giống như trước đây.

Bạn vẫn sẽ tạo một phiên và kết nối luồng đầu ra.

Bạn cũng sẽ yêu cầu các mô hình cuối cùng như trước đây.

Tuy nhiên, lưu ý rằng chúng tôi đã thêm một khối ở giữa nơi giao diện người dùng 3D được trình bày để chỉnh sửa tương tác của mô hình xem trước.

Quá trình này được lặp lại cho đến khi bạn hài lòng với bản xem trước.

Sau đó bạn có thể tiếp tục thực hiện các yêu cầu mô hình cuối cùng như trước đây.

Trước tiên, bạn yêu cầu một mô hình xem trước bằng cách chỉ định một yêu cầu mô hình với mức độ xem trước chi tiết.

Mô hình xem trước có chất lượng hình ảnh thấp và được tạo ra càng nhanh càng tốt.

Bạn có thể yêu cầu một tệp mô hình và tự tải nó hoặc trực tiếp yêu cầu RealityKit ModelEntity hiển thị.

Thông thường, một yêu cầu giới hạn cũng được thực hiện cùng một lúc để xem trước và chỉnh sửa âm lượng chụp.

Bạn có thể điều chỉnh âm lượng chụp để loại bỏ bất kỳ hình học không mong muốn nào trong quá trình chụp, chẳng hạn như bệ cần thiết để giữ đối tượng thẳng đứng trong quá trình chụp.

Bạn cũng có thể điều chỉnh chuyển đổi gốc để chia tỷ lệ, dịch và xoay mô hình.

Thuộc tính hình học của yêu cầu mà chúng tôi đã thấy trước đó cho phép cung cấp khối lượng chụp và biến đổi gốc tương đối trước khi mô hình được tạo.

Điều này xuất ra một mô hình 3D đã sẵn sàng để sử dụng.

Hãy xem xét quá trình này đang hoạt động.

Ở đây chúng tôi thấy một ví dụ về ứng dụng Object Capture tương tác mà chúng tôi đã tạo bằng API để chứng minh quy trình làm việc tương tác này.

Đầu tiên, chúng tôi chọn thư mục Hình ảnh chứa hình ảnh của một tảng đá trang trí, cũng như một thư mục đầu ra nơi USDZ cuối cùng sẽ được viết.

Sau đó, chúng tôi nhấn Xem trước để yêu cầu mô hình xem trước và khối lượng chụp ước tính.

Sau một thời gian trôi qua, mô hình xem trước của tảng đá của chúng tôi và âm lượng chụp của nó xuất hiện.

Nhưng giả sử rằng chúng ta chỉ muốn phần trên cùng của tảng đá trong đầu ra như thể phần dưới nằm dưới lòng đất.

Chúng ta có thể điều chỉnh hộp giới hạn để tránh tái tạo lại đáy của mô hình.

Khi chúng tôi hài lòng, chúng tôi nhấn Refine Model để tạo bản xem trước mới bị giới hạn ở âm lượng chụp đã sửa đổi này.

Điều này cũng tối ưu hóa mô hình đầu ra chỉ cho phần này.

Khi mô hình tinh chỉnh đã sẵn sàng, bản xem trước mới sẽ xuất hiện.

Bạn có thể thấy hình học của mô hình mới đã được cắt để ở bên trong hộp.

Điều này rất hữu ích để loại bỏ các mục không mong muốn trong ảnh chụp như bệ giữ một vật thể.

Khi chúng tôi hài lòng với bản xem trước đã cắt, chúng tôi có thể chọn kết xuất cuối cùng đầy đủ chi tiết để bắt đầu quá trình tạo.

Sau một thời gian, mô hình đầy đủ chi tiết đã hoàn thành và thay thế mô hình xem trước.

Bây giờ chúng ta có thể thấy chi tiết đầy đủ của mô hình thực tế, trông rất tuyệt.

Mô hình được lưu trong thư mục đầu ra và sẵn sàng sử dụng mà không cần xử lý hậu kỳ bổ sung nào.

Và đó là tất cả những gì cần thiết để bắt đầu với Object Capture API mới.

Chúng tôi đã thấy cách tạo một phiên từ một nguồn đầu vào như một thư mục hình ảnh.

Chúng tôi đã thấy cách kết nối luồng đầu ra không đồng bộ để gửi tin nhắn.

Sau đó chúng tôi đã thấy cách yêu cầu hai mô hình chi tiết cấp độ khác nhau cùng một lúc.

Cuối cùng, chúng tôi đã mô tả quy trình làm việc tương tác với một ứng dụng RealityKit GUI ví dụ cho ObjectCapture.

Bây giờ tôi sẽ giao nó cho đồng nghiệp Dave McKinnon của tôi, người sẽ thảo luận về các phương pháp hay nhất với Object Capture.

Dave McKinnon: Cảm ơn, Michael.

Xin chào, tôi là Dave McKinnon, và tôi là một kỹ sư làm việc trong nhóm Object Capture.

Trong phần tiếp theo, chúng tôi sẽ đề cập đến các phương pháp hay nhất để giúp bạn đạt được kết quả chất lượng cao nhất.

Đầu tiên, chúng ta sẽ xem xét các mẹo và thủ thuật để chọn một đối tượng có các đặc điểm phù hợp.

Tiếp theo là một cuộc thảo luận về cách kiểm soát điều kiện môi trường và máy ảnh để có được kết quả tốt nhất.

Tiếp theo, chúng ta sẽ hướng dẫn cách sử dụng Ứng dụng CaptureSample.

Ứng dụng này cho phép bạn chụp ảnh ngoài dữ liệu độ sâu và thông tin trọng lực để khôi phục tỷ lệ và hướng thực của đối tượng của bạn.

Chúng tôi minh họa việc sử dụng ứng dụng này để chụp bằng tay cũng như bàn xoay.

Cuối cùng, chúng tôi sẽ thảo luận về cách chọn mức chi tiết đầu ra phù hợp cho trường hợp sử dụng của bạn cũng như cung cấp một số liên kết để đọc thêm.

Điều đầu tiên cần xem xét khi quét là chọn một đối tượng có các đặc điểm phù hợp.

Để có kết quả tốt nhất, hãy chọn một đối tượng có đủ chi tiết kết cấu.

Nếu đối tượng chứa các vùng không có kết cấu hoặc trong suốt, kết quả quét có thể thiếu chi tiết.

Ngoài ra, cố gắng tránh các vật thể có chứa các vùng phản chiếu cao.

Nếu vật thể phản chiếu, bạn sẽ nhận được kết quả tốt nhất bằng cách khuếch tán ánh sáng khi bạn quét.

Nếu bạn định lật đối tượng trong suốt quá trình chụp, hãy đảm bảo rằng nó cứng để nó không thay đổi hình dạng.

Cuối cùng, nếu bạn muốn quét một đối tượng có chứa chi tiết bề mặt mịn, bạn sẽ cần sử dụng máy ảnh có độ phân giải cao ngoài việc có nhiều ảnh cận cảnh bề mặt để khôi phục chi tiết.

Bây giờ chúng tôi sẽ chứng minh quy trình quét điển hình.

Đầu tiên, để có kết quả tốt nhất, hãy đặt đối tượng của bạn trên nền gọn gàng để đối tượng nổi bật rõ ràng.

Quá trình cơ bản liên quan đến việc di chuyển chậm xung quanh vật thể để đảm bảo chụp nó đồng đều từ mọi phía.

Nếu bạn muốn tái tạo lại phần dưới của đối tượng, hãy lật nó và tiếp tục chụp ảnh.

Khi chụp ảnh, hãy cố gắng tối đa hóa phần trường nhìn chụp đối tượng.

Điều này giúp API khôi phục càng nhiều chi tiết càng tốt.

Một cách để làm điều này là sử dụng chế độ dọc hoặc ngang tùy thuộc vào kích thước và hướng của đối tượng.

Ngoài ra, hãy cố gắng duy trì mức độ chồng chéo cao giữa các hình ảnh.

Tùy thuộc vào đối tượng, 20 đến 200 hình ảnh cận cảnh là đủ để có kết quả tốt.

Để giúp bạn bắt đầu chụp ảnh chất lượng cao với độ sâu và trọng lực trên iOS, chúng tôi cung cấp Ứng dụng CaptureSample.

Điều này có thể được sử dụng như một điểm khởi đầu cho các ứng dụng của riêng bạn.

Nó được viết bằng SwiftUI và là một phần của tài liệu dành cho nhà phát triển.

Ứng dụng này trình bày cách chụp ảnh chất lượng cao để chụp đối tượng.

Nó có chế độ màn trập thủ công và hẹn giờ.

Bạn cũng có thể sửa đổi ứng dụng để đồng bộ hóa với bàn xoay của mình.

Nó thể hiện cách sử dụng iPhone và iPad với camera kép để thu thập dữ liệu độ sâu và nhúng nó ngay vào các tệp HEIC đầu ra.

Ứng dụng cũng chỉ cho bạn cách lưu dữ liệu trọng lực.

Bạn có thể xem thư viện của mình để nhanh chóng xác minh rằng bạn có tất cả các bức ảnh chất lượng tốt với độ sâu và trọng lực và xóa các bức ảnh xấu.

Các thư mục chụp được lưu trong thư mục Tài liệu của ứng dụng, nơi có thể dễ dàng sao chép vào máy Mac của bạn bằng iCloud hoặc AirDrop.

Ngoài ra còn có các màn hình trợ giúp tóm tắt một số hướng dẫn thực hành tốt nhất để có được một bức ảnh tốt mà chúng ta thảo luận trong phần này.

Bạn cũng có thể tìm thấy thông tin này trong tài liệu dành cho nhà phát triển.

Chúng tôi khuyên bạn nên chụp bàn xoay để có kết quả tốt nhất có thể.

Để bắt đầu, bạn sẽ cần một thiết lập như chúng tôi có ở đây.

Cái này chứa một thiết bị iOS để chụp, nhưng bạn cũng có thể sử dụng máy ảnh SLR kỹ thuật số; bàn xoay cơ học để xoay vật thể; một số tấm chiếu sáng ngoài lều đèn.

Mục tiêu là có ánh sáng đồng đều và tránh bất kỳ bóng tối cứng nào.

Một cái lều nhẹ là một cách tốt để đạt được điều này.

Trong trường hợp này, Ứng dụng CaptureSample chụp ảnh bằng chế độ màn trập hẹn giờ được đồng bộ hóa với chuyển động của bàn xoay.

Chúng ta cũng có thể lật đối tượng và thực hiện nhiều đường chuyền bàn xoay để chụp đối tượng từ mọi phía.

Đây là tệp USDZ kết quả từ ảnh chụp bàn xoay được hiển thị trong Xem trước trên macOS.

Bây giờ chúng ta đã đề cập đến các mẹo và thủ thuật để chụp ảnh, hãy chuyển sang phần cuối cùng của chúng ta về cách chọn đầu ra phù hợp.

Có nhiều cài đặt chi tiết đầu ra khác nhau có sẵn để quét.

Hãy cùng xem nào.

Đây là bảng hiển thị các mức độ chi tiết.

Các cấp độ được hỗ trợ được hiển thị dọc theo phía bên trái.

Reduced và Medium được tối ưu hóa để sử dụng trong trải nghiệm dựa trên web và di động, chẳng hạn như xem nội dung 3D trong AR Quick Look.

Chúng có ít hình tam giác và kênh vật chất hơn và do đó tiêu thụ ít bộ nhớ hơn.

Full và Raw được thiết kế để sử dụng tương tác cao cấp như trò chơi máy tính hoặc quy trình làm việc hậu kỳ.

Chúng chứa chi tiết hình học cao nhất và mang đến cho bạn sự linh hoạt để lựa chọn giữa vật liệu nướng và không nướng.

Mức độ chi tiết giảm và trung bình là tốt nhất cho nội dung mà bạn muốn hiển thị trên internet hoặc thiết bị di động.

Trong trường hợp này, Object Capture sẽ nén thông tin hình học và vật liệu từ kết quả Raw xuống mức phù hợp để hiển thị trong các ứng dụng AR hoặc thông qua AR Quick Look.

Cả hai mức chi tiết, Giảm và Trung bình, đều chứa các kênh vật liệu PBR khuếch tán, bình thường và tắc nghẽn môi trường xung quanh.

Nếu bạn muốn hiển thị một lần quét với chi tiết cao, Medium sẽ tối đa hóa chất lượng so với kích thước tệp để cung cấp cho bạn cả chi tiết hình học và vật liệu hơn.

Tuy nhiên, nếu bạn muốn hiển thị nhiều lần quét trong cùng một cảnh, bạn nên sử dụng cài đặt Giảm chi tiết.

Nếu bạn muốn tìm hiểu thêm về cách sử dụng Object Capture để tạo trải nghiệm AR trên thiết bị di động hoặc web, vui lòng xem phiên "AR Quick Look, meet Object Capture".

Xuất với mức đầu ra đầy đủ là một lựa chọn tuyệt vời cho quy trình làm việc chuyên nghiệp.

Trong trường hợp này, bạn đang nhận được chi tiết tối đa có sẵn cho quá trình quét của mình.

Full sẽ tối ưu hóa hình dạng của quá trình quét và nướng chi tiết thành vật liệu PBR chứa thông tin khuếch tán, bình thường, tắc nghẽn môi trường xung quanh, độ nhám và dịch chuyển.

Chúng tôi nghĩ rằng mức đầu ra này sẽ cung cấp cho bạn mọi thứ bạn cần cho những kết xuất khó khăn nhất.

Cuối cùng, nếu bạn không cần nướng nguyên liệu hoặc bạn có đường ống riêng cho việc này, mức Raw sẽ trả về số lượng poly tối đa cùng với chi tiết kết cấu khuếch tán tối đa để xử lý thêm.

Nếu bạn muốn tìm hiểu thêm về cách sử dụng Object Capture cho quy trình làm việc chuyên nghiệp trên macOS, vui lòng xem phiên "Tạo quy trình làm việc 3D bằng USD".

Cuối cùng, và quan trọng nhất, nếu bạn dự định sử dụng bản quét của mình trên cả iOS, cũng như macOS, bạn có thể chọn nhiều cấp độ chi tiết để đảm bảo bạn có tất cả các đầu ra phù hợp cho các trường hợp sử dụng hiện tại và tương lai.

Và đó là một cái bọc.

Hãy tóm tắt lại những gì chúng ta đã học được.

Đầu tiên, chúng tôi đã đề cập, thông qua ví dụ, các khái niệm chính đằng sau API Object Capture.

Chúng tôi đã chỉ cho bạn cách tạo phiên Chụp đối tượng và sử dụng phiên này để xử lý bộ sưu tập hình ảnh của bạn để tạo ra mô hình 3D.

Chúng tôi đã chỉ cho bạn một ví dụ về cách API có thể hỗ trợ ứng dụng xem trước tương tác để cho phép bạn điều chỉnh âm lượng chụp và chuyển đổi mô hình.

Tiếp theo, chúng tôi đề cập đến các phương pháp hay nhất để quét.

Chúng tôi đã thảo luận về loại đối tượng cần sử dụng cũng như môi trường, ánh sáng và cài đặt máy ảnh cho kết quả tốt nhất.

Cuối cùng, chúng tôi đã thảo luận về cách chọn cài đặt chi tiết đầu ra phù hợp cho ứng dụng của bạn.

Nếu bạn muốn tìm hiểu cách đưa Object Capture vào ứng dụng của riêng mình, hãy xem cả ứng dụng xử lý iOS capture và macOS CLI để bắt đầu.

Cùng với các ứng dụng này có nhiều loại dữ liệu mẫu thể hiện phương pháp hay nhất và có thể giúp ích khi lập kế hoạch cách chụp các bản quét của riêng bạn.

Ngoài ra, vui lòng xem tài liệu chi tiết về phương pháp hay nhất trực tuyến tại developer.apple.com, cũng như các phiên WWDC liên quan này.

Điều duy nhất còn lại là bạn ra ngoài và sử dụng Object Capture để quét.

Chúng tôi rất vui khi thấy những đối tượng nào bạn sẽ quét và chia sẻ.

♪