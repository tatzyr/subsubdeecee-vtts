10122

♪ Nhạc bass đang phát ♪

♪

Preston Lewis: Xin chào, tên tôi là Preston, và hôm nay tôi sẽ nói về cách mang lại khả năng truy cập vào biểu đồ trong ứng dụng của bạn.

Hãy xem xét những gì chúng ta sẽ đề cập hôm nay.

Đầu tiên, chúng ta sẽ nói về một số lợi ích của việc làm cho biểu đồ của bạn có thể truy cập được.

Sau đó, chúng tôi sẽ xem xét một số nguyên tắc để đưa ra quyết định toàn diện cho các khía cạnh trực quan của biểu đồ của bạn.

Tiếp theo, chúng ta sẽ thảo luận về cách làm cho biểu đồ của bạn có thể cảm nhận và điều hướng được với VoiceOver.

Và cuối cùng, chúng ta sẽ nói về một tính năng mới thú vị được gọi là "biểu đồ âm thanh" và cách hỗ trợ chúng trong ứng dụng của bạn.

Vì vậy, hãy bắt đầu.

Dữ liệu rất quan trọng trong thế giới hiện đại của chúng ta.

Chúng tôi sử dụng dữ liệu mỗi ngày để đưa ra quyết định về tài chính, sức khỏe, mục tiêu và nhiều thứ khác.

Nhưng để sử dụng bất kỳ dữ liệu nào, chúng ta phải có khả năng hiểu nó.

Biểu đồ rất hữu ích vì chúng cho phép chúng tôi nhanh chóng hiểu những gì dữ liệu của chúng tôi đang cho chúng tôi biết mà không cần phải đi quá sâu vào chi tiết.

Nhưng các biểu đồ vốn không thể truy cập được đối với người mù hoặc thị lực kém.

Không có giá trị trong biểu đồ trực quan nếu bạn không thể nhìn thấy nó.

Nhóm tiếp cận đã làm việc chăm chỉ trong nhiều năm để làm cho dữ liệu dễ tiếp cận hơn đối với người mù và thị lực kém.

Năm nay, bạn có thể mang toàn bộ sức mạnh của biểu đồ của mình đến những người bị mù hoặc thị lực kém bằng cách hỗ trợ biểu đồ âm thanh trong ứng dụng của bạn.

Hãy xem xét một ví dụ.

Đây là một ứng dụng ví dụ hiển thị tỷ lệ sinh lịch sử từ năm 1917 đến năm 1975.

Khi bạn nhìn vào biểu đồ này, bạn có thể thấy ngay một số tính năng thú vị.

Bạn có thể thấy rằng tỷ lệ sinh giảm xuống mức tối thiểu vào khoảng năm 1935, và sau đó nhanh chóng tăng lên khoảng năm 1960 và sau đó giảm trở lại.

Chúng tôi có thể cung cấp cho người mù và thị lực kém cùng một khả năng để nhanh chóng cảm nhận dữ liệu bằng cách sử dụng tính năng VoiceOver biểu đồ âm thanh mới.

Để tôi chỉ cho bạn cách nó hoạt động.

Đầu tiên, tôi sẽ tìm menu Audio Graph trong rôto VoiceOver.

VoiceOver: Biểu đồ âm thanh.

Preston: Sau đó tôi sẽ vuốt xuống cho đến khi tôi nghe thấy "Chi tiết biểu đồ".

VoiceOver: Phát biểu đồ âm thanh. Chi tiết biểu đồ.

Preston: Sau đó, tôi sẽ nhấn đúp để mở chế độ xem Explorer biểu đồ âm thanh.

VoiceOver: Biểu đồ âm thanh. Tiêu đề.

Preston: Sau đó, tôi sẽ điều hướng đến nút Phát để phát biểu đồ âm thanh, biểu đồ này sẽ phát chuỗi dữ liệu dưới dạng âm thanh liên tục.

VoiceOver: Tỷ lệ sinh của thế kỷ 20.

Phát biểu đồ âm thanh. Nút bấm.

Preston: Hãy nghe nó ngay bây giờ.

VoiceOver: Hoàn thành.

Preston: Điều đó không thú vị sao?

Những gì bạn vừa nghe là biểu đồ giống như biểu đồ bạn nhìn thấy, được thể hiện bằng thính giác thay vì trực quan.

Các cao độ bạn nghe tương ứng với tỷ lệ sinh theo thời gian với cao độ thấp hơn có nghĩa là giá trị thấp hơn và cao độ cao hơn có nghĩa là giá trị cao hơn.

Những cao độ này phản ánh chính xác đường thẳng trong biểu đồ trực quan.

Vì vậy, ngay cả khi không nhìn thấy biểu đồ, biểu đồ âm thanh cho phép bạn cảm nhận các tính năng quan trọng của nó chỉ trong vài giây.

Bây giờ chúng ta đã có ý thức chung về dữ liệu, hãy lấy thông tin chính xác hơn về các tính năng mà chúng ta quan tâm.

Điều tiếp theo chúng ta có thể muốn biết là tỷ lệ sinh tối đa là bao nhiêu và nó xảy ra vào năm nào.

Để làm điều này, biểu đồ âm thanh cung cấp một chế độ tương tác nơi người dùng VoiceOver có thể nhấn đúp và giữ và sau đó kéo để nghe dữ liệu theo tốc độ của riêng họ.

Nếu họ tạm dừng, VoiceOver sẽ đọc giá trị dữ liệu tương ứng với vị trí hiện tại của người dùng trong biểu đồ âm thanh.

Hãy sử dụng chế độ tương tác này để cố gắng tìm tỷ lệ sinh tối đa và nó xảy ra vào năm nào.

VoiceOver: Tỷ lệ sinh của thế kỷ 20.

Điểm dữ liệu. 1960. 268 ca sinh trên 10.000 người.

Preston: Bằng cách lướt qua biểu đồ âm thanh cho đến khi chúng tôi nghe thấy cao độ cao nhất, sau đó tạm dừng để nghe giá trị dữ liệu, chúng tôi có thể biết rằng tỷ lệ sinh tối đa là 268 trên 10.000 người vào khoảng năm 1960.

Bởi vì chúng tôi biết mức tối đa xảy ra vào khoảng năm 1960, chúng tôi thậm chí có thể suy ra rằng đỉnh cao này tương ứng với kỷ nguyên bùng nổ trẻ em.

Chúng ta có thể tìm ra tất cả những điều này chỉ từ biểu diễn sonified của biểu đồ.

Được rồi, bây giờ chúng ta hãy nhìn vào một ví dụ về một loại biểu đồ khác.

Biểu đồ này là biểu đồ phân tán cho thấy mối quan hệ giữa trọng lượng xe trên trục X và hiệu suất nhiên liệu trên trục Y đối với một số loại ô tô khác nhau.

Trong biểu đồ âm thanh cho biểu đồ này, mỗi âm bạn nghe thấy sẽ đại diện cho một điểm dữ liệu cho một ô tô, giống như mỗi điểm dữ liệu trực quan trên biểu đồ trực quan.

Cao độ của mỗi giai điệu sẽ thể hiện hiệu suất nhiên liệu của ô tô tính bằng dặm mỗi gallon, vì vậy cao độ cao hơn biểu thị các phương tiện tiết kiệm nhiên liệu hơn.

Hãy dành một chút thời gian để suy nghĩ về những gì bạn mong đợi khi tôi phát biểu đồ âm thanh này.

Hãy nghe nó nghe như thế nào.

Cố gắng lắng nghe để biết liệu dữ liệu đang có xu hướng tăng hay giảm.

VoiceOver: Hoàn thành.

Preston: Hy vọng rằng bạn đã nghe thấy xu hướng giảm.

Xu hướng này có nghĩa là những chiếc ô tô lớn hơn có xu hướng ít tiết kiệm nhiên liệu hơn trong tập dữ liệu này.

Hãy tưởng tượng sẽ mất bao lâu để hiểu mối quan hệ này nếu chúng ta chỉ có sẵn các điểm dữ liệu thô và chúng ta phải xem xét từng điểm dữ liệu riêng lẻ.

Ngoài ra, nếu bạn đang lắng nghe kỹ, bạn có thể đã nghe thấy ngoại lệ rất cao trong tập dữ liệu này.

Nó nổi bật trong biểu đồ âm thanh giống như nó nổi bật trong biểu đồ trực quan và tình cờ là phương tiện hybrid duy nhất trong tập dữ liệu này.

Nếu bạn muốn biết thêm thông tin về ngoại lệ, bạn có thể sử dụng chế độ tương tác để điều hướng qua dữ liệu cho đến khi bạn nghe thấy cao độ cao nhất, sau đó tạm dừng để nghe giá trị dữ liệu, giống như chúng tôi đã làm với biểu đồ tỷ lệ sinh.

Ngoài biểu đồ âm thanh, chế độ xem thám hiểm này cung cấp thông tin tóm tắt về các tính năng quan trọng của dữ liệu như hình dạng, xu hướng và ngoại lệ, được suy ra từ phân tích thống kê tự động về dữ liệu của biểu đồ này.

Cùng với biểu đồ âm thanh, VoiceOver có thể đọc thông tin tóm tắt này để hoàn thành sự hiểu biết của chúng ta về dữ liệu.

Được rồi, hãy nhanh chóng tóm tắt lại những lợi ích của các biểu đồ có thể truy cập.

Làm cho biểu đồ của bạn có thể truy cập được cho phép các ứng dụng giàu dữ liệu của bạn tiếp cận đối tượng rộng hơn, bao gồm cả người mù và người có thị lực kém.

Nó sẽ trao quyền cho người dùng của bạn bằng cách cung cấp cho họ các công cụ hữu ích để hiểu dữ liệu trong biểu đồ của bạn, điều này sẽ giúp họ tận dụng sức mạnh đáng kinh ngạc của dữ liệu trong cuộc sống cá nhân và nghề nghiệp của họ.

Và cuối cùng, với API mới sắp ra mắt trong năm nay, việc tạo biểu đồ của bạn dễ dàng hơn bao giờ hết.

Tôi thực sự vui mừng được chỉ cho bạn cách hỗ trợ biểu đồ âm thanh trong ứng dụng của bạn, nhưng trước tiên chúng ta cần đề cập đến một số chủ đề chung về khả năng truy cập biểu đồ, bắt đầu với cách bạn có thể làm cho biểu đồ của mình dễ tiếp cận trực quan hơn.

Có một vài điều đơn giản bạn có thể làm để làm cho biểu đồ trực quan của mình dễ hiểu hơn đối với mọi người.

Lấy biểu đồ này làm ví dụ.

Đây là biểu đồ đường đơn giản cho thấy lượng mưa trung bình hàng tháng cho các vùng nhiệt đới và khô cằn.

Hãy áp dụng một số nguyên tắc tiếp cận để cải thiện khả năng tiếp cận trực quan của biểu đồ này.

Đầu tiên, điều quan trọng là sử dụng các màu có độ tương phản cao bất cứ khi nào có thể.

Độ tương phản cao giữa màu nền trước và màu nền làm cho biểu đồ của bạn dễ nhìn và dễ hiểu hơn, đặc biệt là đối với những người có thị lực kém.

Như bạn có thể thấy, độ tương phản của các đường so với nền của chúng khá thấp.

Tiêu đề và văn bản nhãn cũng có vẻ hơi mờ.

Hãy cập nhật những màu này để có độ tương phản cao hơn so với nền.

Điều đó tốt hơn nhiều.

Bạn có thể kiểm tra tỷ lệ tương phản giữa các màu để xác định xem độ tương phản có đủ hay không.

Trình kiểm tra khả năng truy cập đi kèm với Xcode có Máy tính tương phản màu mà bạn có thể sử dụng.

Thật tốt khi nhắm đến tỷ lệ tương phản ít nhất là 4,5:1.

Điều tiếp theo bạn có thể làm để cải thiện khả năng tiếp cận trực quan của biểu đồ là tránh các cặp màu có vấn đề.

Nói chung, nên tránh sử dụng màu đỏ và màu xanh lá cây cùng nhau nếu có thể.

Mù màu đỏ và xanh lá cây là loại phổ biến nhất và việc sử dụng các màu này cùng nhau có thể khiến biểu đồ của bạn khó hiểu đối với một số người.

Vì vậy, đây là biểu đồ đường một lần nữa, với một đường màu xanh lá cây đại diện cho lượng mưa ở các vùng nhiệt đới và một đường màu đỏ đại diện cho lượng mưa ở các vùng khô cằn.

Bạn có thể biết chuỗi dữ liệu nào bằng cách sử dụng mã hóa màu trong chú giải.

Nhưng nếu bạn bị deuteranopia, một dạng mù màu đỏ-xanh lá cây, biểu đồ có thể trông giống như thế này đối với bạn.

Thật khó để bạn biết dòng nào đại diện cho lượng mưa nhiệt đới và dòng nào đại diện cho lượng mưa khô cằn với những màu này.

Hãy cải thiện điều này bằng cách thay thế màu đỏ bằng màu xanh lam.

Điều này có vẻ không phải là một sự thay đổi lớn, nhưng đối với một người bị mù màu đỏ-xanh lá cây, biểu đồ này bây giờ có thể trông như thế này.

Với sự điều chỉnh nhỏ này, người bị mù màu đỏ-xanh lá cây sẽ dễ dàng phát hiện ra sự khác biệt giữa các chuỗi.

Cũng nên tránh sử dụng màu xanh lam và màu vàng cùng nhau vì họ mù màu này là phổ biến thứ hai.

Đây là một số cải tiến tốt, nhưng hãy tiến thêm một bước nữa bằng cách sử dụng các ký hiệu ngoài màu sắc để phân biệt chuỗi dữ liệu của bạn.

Sử dụng các ký hiệu dữ liệu giúp mọi người có thể hiểu biểu đồ của bạn mà không cần phải dựa vào màu sắc.

Vì vậy, đây là biểu đồ của chúng tôi một lần nữa.

Và bây giờ hãy thêm một số ký hiệu cho mỗi chuỗi dữ liệu.

Lưu ý rằng chuỗi dữ liệu nhiệt đới hiện có các vòng tròn và chuỗi dữ liệu khô cằn có hình vuông.

Bạn có thể biết chuỗi nào bây giờ chỉ bằng cách nhìn vào các biểu tượng liên quan.

Điều này có nghĩa là ngay cả một người không thể cảm nhận được màu sắc bây giờ cũng có thể hiểu biểu đồ của bạn.

Thật tốt khi làm tất cả những điều này theo mặc định, nhưng một lần nữa, đôi khi những hạn chế về thiết kế hoặc sản phẩm có thể hạn chế sự lựa chọn màu sắc hoặc quyết định bao gồm các biểu tượng của bạn.

Trong những trường hợp này, bạn vẫn có thể cung cấp trải nghiệm có thể truy cập bằng cách hỗ trợ một vài cài đặt trợ năng đơn giản.

Nếu bạn không thể có các biểu tượng trong biểu đồ của mình cho trường hợp mặc định, bạn vẫn có thể cung cấp trải nghiệm có thể truy cập bằng cách thêm các biểu tượng khi cài đặt khả năng truy cập hệ thống Phân biệt không có màu được bật.

Nếu bạn không thể dễ dàng thay đổi bộ màu của mình vì lý do sản phẩm, hãy cân nhắc áp dụng các màu có độ tương phản cao hơn khi cài đặt khả năng tiếp cận Tăng độ tương phản được đặt.

Giảm việc sử dụng độ trong suốt cũng có thể làm cho biểu đồ của bạn dễ tiếp cận trực quan hơn.

Nếu biểu đồ của bạn sử dụng các hiệu ứng trong suốt, hãy cân nhắc vô hiệu hóa chúng khi cài đặt khả năng truy cập Giảm độ trong suốt được bật.

Nếu bạn đang xây dựng một ứng dụng macOS thay vì một ứng dụng iOS, mỗi cài đặt này có một đối tác trên macOS mà bạn có thể hỗ trợ.

Bạn sẽ tìm thấy các liên kết đến tài liệu dành cho nhà phát triển cho các API này trong tài liệu cho phiên này.

Bây giờ hãy xem cách chúng tôi có thể làm cho dữ liệu của bạn có thể điều hướng được cho VoiceOver.

Bây giờ, tôi thích cà phê, và tôi thích lập trình.

Hãy giả vờ trong một phút có mối quan hệ giữa lượng cà phê tiêu thụ và lượng mã mà một kỹ sư sản xuất như thể hiện trong biểu đồ này.

Cứ giả vờ đi.

Ngoài ra, dữ liệu lên đến 12 tách cà phê, Nhưng đừng lo lắng, không có kỹ sư nào bị tổn hại trong việc tạo ra dữ liệu này; tất cả đều được tạo ra.

Được rồi, hãy xem cách chúng ta có thể điều hướng dữ liệu này cho người dùng VoiceOver.

Đây là một đoạn mã ví dụ từ lớp xem biểu đồ và đối tượng mô hình tương ứng của nó.

Chế độ xem biểu đồ có thể có tham chiếu đến mô hình của nó và một chức năng để tự vẽ.

Và mô hình có thể có tiêu đề của biểu đồ và các điểm dữ liệu chứa trong một cấu trúc đơn giản.

Điều đầu tiên bạn muốn làm là biến biểu đồ thành một vùng chứa.

Điều này sẽ giúp VoiceOver nhóm các yếu tố biểu đồ của bạn một cách chính xác và hỗ trợ điều hướng.

Để biến biểu đồ của bạn thành một vùng chứa, chỉ cần ghi đè accessibilityContainerType trên ChartView của bạn và trả về loại vùng chứa semanticGroup.

Một lần nữa, điều này rất quan trọng đối với việc điều hướng VoiceOver và giao tiếp những yếu tố nào thuộc về biểu đồ.

Tiếp theo, chúng ta cần cung cấp cho biểu đồ của mình một Nhãn khả năng tiếp cận.

Điều này cho VoiceOver biết phải nói gì khi nó gặp biểu đồ của bạn.

Thông thường, đây chỉ nên là tiêu đề biểu đồ của bạn hoặc một cái gì đó tương tự mà VoiceOver có thể nói để xác định duy nhất biểu đồ của bạn trong giao diện người dùng của bạn.

Cuối cùng nhưng không kém phần quan trọng, bạn sẽ muốn cung cấp một yếu tố khả năng truy cập cho mỗi điểm dữ liệu.

Bạn có thể cung cấp các yếu tố này bằng cách ghi đè thuộc tính accessibilityElements của chế độ xem biểu đồ của bạn.

Điều này sẽ tạo ra các yếu tố bên trong biểu đồ của bạn mà VoiceOver có thể điều hướng, để mọi người có thể nhận được thông tin về các điểm dữ liệu riêng lẻ.

Để thực hiện điều này, bạn chỉ cần sử dụng "bản đồ" để xây dựng một loạt các yếu tố khả năng truy cập từ danh sách các điểm dữ liệu của mình.

Đối với mỗi điểm dữ liệu, chúng tôi sẽ tạo một đối tượng UIAccessibilityElement mới, chỉ định ChartView làm accessibilityContainer của nó.

Sau đó, chúng tôi sẽ cung cấp một chuỗi biểu diễn của điểm dữ liệu cho thuộc tính accessibilityValue của phần tử.

Chuỗi này là những gì VoiceOver sẽ nói khi nó điều hướng đến các phần tử điểm dữ liệu này.

Trong mã của bạn, bạn có thể sẽ muốn chuỗi này được bản địa hóa và bạn có thể muốn sử dụng từ điển chuỗi để xác định các quy tắc số nhiều thích hợp.

Tuy nhiên, đối với ví dụ này, chúng ta hãy giữ nó đơn giản.

Cuối cùng, chúng tôi cần cung cấp một khung khả năng truy cập cho phần tử của mình để VoiceOver biết nó nằm ở đâu trên màn hình.

Bạn có thể đã có logic để tính toán khung cho mỗi điểm dữ liệu ở nơi khác, vì bạn cần cái này để vẽ biểu đồ trực quan.

Nếu bạn có sẵn nó, bạn có thể sử dụng lại logic đó ở đây.

Bây giờ bạn có thể trả lại phần tử khả năng truy cập đã hoàn thành của mình cho điểm dữ liệu này.

Được rồi! Hãy xem những gì chúng ta đã đạt được cho đến nay.

VoiceOver: Tách cà phê so với các dòng mã.

Không có cốc. Hai mươi dòng mã.

Một cốc. Ba mươi dòng mã.

Hai cốc. Ba mươi lăm dòng mã.

Ba cốc. Ba mươi hai dòng mã.

Preston: Tuyệt vời!

Như bạn đã nghe, VoiceOver bây giờ nói tiêu đề khi nó tập trung một phần tử vào bên trong biểu đồ bởi vì chúng tôi đã biến biểu đồ thành một nhóm ngữ nghĩa và đặt cho nó một nhãn khả năng tiếp cận.

Chúng tôi cũng có thể điều hướng qua từng điểm dữ liệu bằng cách tạo UIAccessibilityElement để đại diện cho từng điểm.

Có một điều nữa tôi muốn đề cập trước khi chúng ta tiếp tục.

Đôi khi bạn có thể có hàng trăm hoặc thậm chí hàng nghìn điểm dữ liệu.

Trong những trường hợp này, bạn chắc chắn không muốn tạo một yếu tố khả năng truy cập cho mỗi điểm dữ liệu vì sẽ có quá nhiều cách để điều hướng.

Thay vào đó, chúng tôi khuyên bạn nên chia biểu đồ của mình thành các khoảng thời gian hợp lý và tạo một yếu tố khả năng tiếp cận cho mỗi khoảng thời gian thay vì mỗi điểm dữ liệu.

Điều này sẽ cung cấp trải nghiệm điều hướng tốt hơn cũng như cải thiện hiệu suất trong khi vẫn dễ hiểu.

Chúng ta vẫn chưa hoàn thành; chúng ta có thể làm nhiều hơn nữa.

Làm cho dữ liệu có thể điều hướng được là rất quan trọng, nhưng chúng tôi vẫn chỉ trình bày dữ liệu thô cho người dùng VoiceOver từng điểm một.

Giá trị của biểu đồ là khả năng cho chúng ta thấy những gì dữ liệu thực sự cho chúng ta biết và giúp chúng ta nhìn xa hơn các điểm dữ liệu riêng lẻ.

Đây là nơi biểu đồ âm thanh xuất hiện.

Vì vậy, bây giờ - cuối cùng - hãy nói về cách triển khai hỗ trợ biểu đồ âm thanh cho biểu đồ của bạn.

Hãy tưởng tượng chúng ta có một cấu trúc ChartModel chứa tất cả thông tin chúng ta cần để xác định một biểu đồ cụ thể.

Trong mã của bạn, bạn có thể có một đối tượng mô hình trông giống như thế này rồi.

Nếu bạn không, đừng lo lắng.

Những khái niệm này vẫn sẽ áp dụng cho mã của bạn tuy nhiên nó được tổ chức.

Đối với ví dụ của chúng tôi, giả sử một biểu đồ có tiêu đề và tóm tắt, nó có trục X và Y, và mỗi trục có một tiêu đề cũng như một phạm vi số đại diện cho các giá trị hiển thị tối thiểu và tối đa cho trục.

Và cuối cùng, nó có một mảng các điểm dữ liệu chứa dữ liệu thực tế của biểu đồ của chúng tôi.

Chúng tôi sẽ sử dụng thông tin trong đối tượng mô hình ví dụ này để kích hoạt tính năng biểu đồ âm thanh cho biểu đồ của chúng tôi.

Đầu tiên, nhập khung Trợ năng, sau đó mở rộng lớp ChartView của bạn để phù hợp với giao thức AXChart.

Việc tuân thủ giao thức AXChart rất dễ dàng vì chỉ có một thuộc tính để hỗ trợ.

Bạn chỉ cần triển khai accessibilityChartDescriptor.

Đối tượng mô tả biểu đồ mà bạn xây dựng sẽ chứa tất cả thông tin mà VoiceOver cần để cung cấp trải nghiệm biểu đồ âm thanh.

Hãy cùng hướng dẫn cách xây dựng một trong những mô tả biểu đồ này từng bước.

Đầu tiên, chúng ta cần tạo một đối tượng mô tả trục cho mỗi trục.

Mỗi bộ mô tả trục cung cấp thông tin cho VoiceOver về việc nó đại diện cho dữ liệu phân loại hay số, phạm vi giá trị có thể hiển thị cho trục, vị trí của các đường lưới và cách định dạng các giá trị dữ liệu có thể nói được.

Vì trục X là số cho biểu đồ cà phê của chúng tôi, chúng tôi sẽ tạo một bộ mô tả trục số.

Nếu chúng tôi có dữ liệu phân loại trên trục X của mình, chúng tôi sẽ sử dụng bộ mô tả trục phân loại thay thế.

Chúng tôi sẽ cung cấp tiêu đề và phạm vi cho trục này bằng cách sử dụng đối tượng mô hình của chúng tôi.

Chúng tôi cũng có thể tùy ý cung cấp vị trí của các đường lưới trên trục này nếu chúng tôi có chúng.

Khi bạn cung cấp các đường lưới, chúng được thể hiện trong biểu đồ âm thanh dưới dạng phản hồi xúc giác trong quá trình phát lại và tương tác.

Chúng tôi sẽ để trống cái này ngay bây giờ vì chúng tôi không có bất kỳ đường lưới trục X nào trong biểu đồ này.

Đối với trục số, chúng ta cũng cần tạo một đóng valueDescriptionProvider.

Việc đóng cửa này rất quan trọng vì nó cho VoiceOver biết cách nói các giá trị trên trục này, vì vậy nó có thể nói "5 cốc" thay vì chỉ nói "5".

Đối với trục này, chúng tôi sẽ định dạng mô tả để nói "cốc" sau giá trị.

Một lần nữa, trong mã của bạn, bạn có thể muốn bản địa hóa chuỗi này với các quy tắc số nhiều thích hợp, nhưng hãy giữ cho ví dụ này đơn giản.

Chúng tôi sẽ làm điều tương tự để tạo một bộ mô tả trục cho trục Y của chúng tôi, ngoại trừ việc chúng tôi sẽ định dạng mô tả giá trị của mình để nói "dòng mã" thay vì "cốc".

Bây giờ chúng ta đã xác định cấu trúc cơ bản của biểu đồ, hãy thêm dữ liệu.

Để làm điều này, bạn thêm một bộ mô tả chuỗi dữ liệu cho mỗi chuỗi dữ liệu.

Chúng tôi chỉ có một chuỗi dữ liệu trong biểu đồ này, vì vậy chúng tôi sẽ chỉ tạo một bộ mô tả chuỗi dữ liệu, chuyển tên của chuỗi, cho dù nó có liên tục hay không và các điểm dữ liệu thực tế cho chuỗi này.

Bạn nên vượt qua "false" cho "isContinuous" khi chuỗi được thể hiện trực quan bằng cách sử dụng các dấu rời rạc, như điểm hoặc thanh, và bạn nên vượt qua "true" khi chuỗi được thể hiện trực quan dưới dạng một dòng.

Đối với dữ liệu của chuỗi, chúng ta cần cung cấp một mảng các đối tượng AXDataPoint.

Cách dễ nhất để làm điều này là chỉ lập bản đồ chúng từ dữ liệu trong mô hình biểu đồ.

Chúng ta sắp đến nơi rồi!

Chúng tôi chỉ có một việc cuối cùng phải làm.

Và đó là ghép tất cả các mảnh lại với nhau để xây dựng đối tượng AXChartDescriptor của chúng tôi.

Chúng tôi sẽ cho nó một tiêu đề, một lần nữa, nên là tiêu đề của biểu đồ của chúng tôi.

Sau đó, nếu chúng tôi có, chúng tôi có thể cung cấp bản tóm tắt biểu đồ của mình.

Điều này giống như cung cấp văn bản thay thế cho biểu đồ của bạn.

Bạn nên sử dụng thuộc tính này để truyền đạt những hiểu biết quan trọng nhất từ dữ liệu của bạn trong một hoặc hai câu.

Văn bản tóm tắt này sẽ được trình bày cho người dùng trong chế độ xem khám phá biểu đồ âm thanh.

Điều này có thể cực kỳ hữu ích cho người dùng VoiceOver đang cố gắng hiểu biểu đồ của bạn.

Cuối cùng, chúng tôi sẽ cung cấp các bộ mô tả trục và chuỗi dữ liệu mà chúng tôi đã tạo trước đó để hoàn thành bộ mô tả biểu đồ của mình và sau đó chúng tôi sẽ trả lại nó.

Thế là xong! Hãy xem kết quả cuối cùng.

VoiceOver: Biểu đồ âm thanh. Phát biểu đồ âm thanh.

Chi tiết biểu đồ.

Biểu đồ âm thanh. Tiêu đề: Tách cà phê so với các dòng mã.

Phát biểu đồ âm thanh. Nút bấm.

Hoàn thành.

Preston: Hãy tóm tắt lại.

Đảm bảo đưa ra các lựa chọn dễ tiếp cận cho thiết kế trực quan của biểu đồ của bạn.

Điều này bao gồm việc sử dụng tỷ lệ tương phản tốt, sử dụng các ký hiệu ngoài màu sắc để phân biệt các danh mục dữ liệu và tránh cách phối màu có thể có vấn đề đối với người dùng mù màu.

Đảm bảo hiển thị các yếu tố dữ liệu của bạn trong cây trợ năng để làm cho chúng có thể nhận biết và điều hướng được đối với người dùng VoiceOver.

Và cuối cùng nhưng không kém phần quan trọng, hãy triển khai giao thức AXChart và accessibilityChartDescriptor trên chế độ xem biểu đồ của bạn để cho phép người dùng VoiceOver nhận được cùng một giá trị từ biểu đồ của bạn như những người dùng có thị lực.

Bây giờ bạn có mọi thứ bạn cần để tạo ra các biểu đồ phong phú, dễ tiếp cận cho mọi người.

Chúng tôi hy vọng bạn sẽ sử dụng những công cụ này để trao quyền cho người dùng của mình vì dữ liệu rất quan trọng trong cuộc sống của chúng ta.

Biểu đồ là một trong những công cụ tốt nhất của chúng tôi để hiểu dữ liệu trong một thế giới giàu dữ liệu và bây giờ bạn có thể mang lại lợi ích này cho mọi người!

♪