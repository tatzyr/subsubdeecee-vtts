10046

♪ ♪

Xin chào. Tên tôi là Justin.

Tôi là một kỹ sư ảnh.

Cùng với đồng nghiệp của tôi, Adam, chúng ta sẽ nói về các cách để cải thiện quyền truy cập vào Ảnh trong ứng dụng của bạn.

Đầu tiên, tôi sẽ nói về những cải tiến mà chúng tôi đã thực hiện cho hệ thống chọn Ảnh.

Sau đó, Adam sẽ hiển thị các API nhận dạng đám mây mới và cách bạn có thể sử dụng chúng để xác định cùng một tài sản trên các thiết bị khác nhau.

Cuối cùng, anh ấy cũng sẽ thảo luận về những thay đổi đối với chế độ truy cập thư viện hạn chế.

Hãy bắt đầu với công cụ chọn Ảnh.

Trong iOS 14, chúng tôi đã giới thiệu PHPicker, sự thay thế hiện đại cho UIImagePickerController.

PHPicker API đảm bảo quyền riêng tư trong khi cung cấp cho ứng dụng của bạn các tính năng bạn cần, như nhiều lựa chọn hình ảnh và tìm kiếm.

Nếu bạn chưa nghe nói về PHPicker, bạn có thể xem phiên "Gặp gỡ người chọn ảnh mới" WWDC 2020 của chúng tôi để tìm hiểu thêm về nó.

Trong iOS 15, hệ thống chọn ảnh có bốn cải tiến lớn.

Đầu tiên, quyền riêng tư.

Chúng tôi tin rằng điều quan trọng là phải cho mọi người biết ứng dụng của bạn có thể truy cập thông tin gì, điều này làm tăng niềm tin.

Trong iOS 14, một số người có thể cho rằng ứng dụng của bạn có quyền truy cập vào toàn bộ thư viện ảnh của họ, ngay cả khi nó chỉ hiển thị bộ chọn Ảnh ngoài quy trình và chỉ có quyền truy cập vào ảnh họ đã chọn.

Để giúp mọi người hiểu sự khác biệt, chúng tôi đã thêm một phần mới vào Cài đặt> Quyền riêng tư> Ảnh.

Phần mới chứa các ứng dụng chỉ sử dụng hệ thống chọn Ảnh, giải thích rằng các ứng dụng đó chỉ có quyền truy cập vào ảnh mà mọi người đã chọn.

Chúng tôi thực sự khuyến khích bạn thay thế bộ chọn tùy chỉnh của mình bằng bộ chọn hệ thống nếu bạn chưa làm như vậy.

Tiếp theo, hãy nói về việc lựa chọn theo thứ tự.

Đôi khi, mọi người có thể muốn kiểm soát thứ tự của ảnh khi chọn chúng.

Trong iOS 15, ứng dụng của bạn có thể định cấu hình bộ chọn để hiển thị thứ tự lựa chọn, như được hiển thị ở đây.

Theo mặc định, chúng tôi vẫn sẽ hiển thị dấu kiểm lựa chọn.

Để chọn tham gia vào hành vi lựa chọn được sắp xếp mới, bạn chỉ cần bật nhiều lựa chọn và đặt "lựa chọn" thành "đã đặt hàng".

PHPicker API hoạt động tốt khi tất cả những gì ai đó cần làm là chọn ảnh mới.

Nhưng điều gì sẽ xảy ra nếu mọi người cũng muốn bỏ chọn ảnh bằng cách sử dụng bộ chọn?

Trong iOS 15, một API lựa chọn trước mới có sẵn để bạn sử dụng.

Nhưng trước khi chúng ta nói về API mới, hãy xem lại cách PHPicker API được sử dụng hiện tại.

Bạn chỉ cần tạo một đối tượng PHPickerConfiguration và sử dụng nó để khởi tạo bộ chọn.

Khi phiên chọn hoàn tất, các bức ảnh đã chọn sẽ được trả lại ứng dụng của bạn.

Giả sử cấu hình được khởi tạo với đối tượng PHPhotoLibrary, kết quả chọn sẽ chứa cả nhà cung cấp mặt hàng và số nhận dạng tài sản.

Ứng dụng của bạn có thể sử dụng nhà cung cấp mặt hàng để tải và hiển thị các bức ảnh đã chọn.

Trong iOS 15, bạn cũng có thể trình bày bộ chọn với một số ảnh được chọn ban đầu.

Nó cho phép mọi người chọn nhiều ảnh hơn hoặc bỏ chọn những bức ảnh được chọn trước bởi ứng dụng của bạn.

Để làm điều đó, bạn cần tạo một đối tượng cấu hình mới.

Bạn có thể cung cấp cho cấu hình một mảng các số nhận dạng tài sản mà bạn đã truy xuất trước đó, ID: 1 và ID: 2 trong trường hợp này.

Khi một PHPickerViewController mới được trình bày, các ảnh có ID: 1 và ID: 2 sẽ được chọn theo mặc định.

Mọi người có thể bỏ chọn chúng hoặc chọn ảnh bổ sung.

Bạn vẫn muốn giữ lại kết quả chọn cũ ngay bây giờ vì bạn sẽ cần sử dụng chúng sau này.

Giả sử ảnh có ID: 2 bị bỏ chọn, nhưng một ảnh mới có ID: 3 được thêm vào lựa chọn.

Khi phiên chọn hoàn tất, các bức ảnh đã chọn sẽ được trả lại.

Nhưng kết quả đầu tiên chỉ có số nhận dạng tài sản mà không có dữ liệu tài sản thực tế.

Tại sao?

Bởi vì nó đã được chọn bởi ứng dụng của bạn.

Tất cả các kết quả không được chọn bởi những người sử dụng ứng dụng của bạn đều có các nhà cung cấp mặt hàng trống.

Kết quả chọn cũ có dữ liệu tài sản thực tế, vì vậy bạn có thể sử dụng ID cũ: 1 kết quả để thay thế kết quả bằng nhà cung cấp mặt hàng trống.

Bởi vì ID: 2 không còn được chọn nữa, bạn có thể loại bỏ ID cũ: 2 kết quả.

Được rồi.

Bây giờ chúng ta có thể tiếp tục xử lý các bức ảnh đã chọn như trước đây.

Tóm lại: nếu một phiên chọn được hoàn thành, tất cả các tài sản được chọn, bao gồm các tài sản được chọn trước chưa được bỏ chọn, sẽ được trả lại.

Và hãy nhớ rằng, các nhà cung cấp mặt hàng trả lại cho các tài sản được chọn trước sẽ trống.

Trong trường hợp phiên chọn bị hủy, chỉ những tài sản được chọn trước mới được trả lại.

Tất cả các nhà cung cấp mặt hàng sẽ trống.

Được rồi, chúng ta hãy xem mã.

Để đặt các tài sản được chọn trước, bạn chỉ cần khởi tạo cấu hình với một đối tượng photoLibrary và bật nhiều lựa chọn.

Bạn có thể đặt các tài sản được chọn trước bằng cách sử dụng API xác định tài sản được chọn trước mới.

Trong cuộc gọi lại đại diện, bạn cần truy xuất Lựa chọn hiện có từ phiên chọn trước đó.

Sau đó, bạn có thể lặp lại tất cả các kết quả chọn mới được trả về.

Bạn nên thay thế kết quả mới bằng kết quả cũ nếu chúng là một phần của lựa chọn hiện có.

Cuối cùng, bạn có thể lưu lựa chọn cập nhật.

Cuối cùng nhưng không kém phần quan trọng, hãy nói về báo cáo tiến độ.

Có thể mất một thời gian để tải xuống một tài sản lớn nếu nó không có sẵn cục bộ trên thiết bị, điều này có thể xảy ra nếu Ảnh iCloud và Tối ưu hóa Bộ nhớ được bật.

Trước đây, bạn chỉ có thể hiển thị một con quay trong khi tải, đây không phải lúc nào cũng là trải nghiệm người dùng lý tưởng.

Tôi vui mừng thông báo rằng trong iOS 15, ứng dụng của bạn có thể truy xuất tiến trình tải thực tế từ bộ chọn.

Tiến trình tải có sẵn thông qua NSItemProvider API hiện có.

Bạn có thể sử dụng tiến trình trả về để hiển thị giao diện người dùng đang tải cho phù hợp.

Đó là tất cả cho bản cập nhật bộ chọn Ảnh.

Bây giờ tôi sẽ bàn giao cho đồng nghiệp của tôi, Adam, để nói thêm về các API cloudIdentifier mới.

Cảm ơn, Justin.

Với các tính năng và API mới mà chúng tôi đã thêm vào, bộ chọn Ảnh là cách tốt nhất để hầu hết các nhà phát triển sử dụng Ảnh trong ứng dụng của họ.

Nhưng chúng tôi biết có những loại ứng dụng đặc biệt yêu cầu mức độ truy cập và tích hợp sâu hơn để quản lý hoặc chỉnh sửa ảnh, máy ảnh tùy chỉnh hoặc ứng dụng cung cấp cho mọi người cách duyệt thư viện ảnh của họ theo một cách độc đáo.

Đối với các ứng dụng đó, PhotoKit cung cấp một bộ API phong phú để truy cập và cập nhật ảnh, video và album được lưu trữ trong thư viện ảnh.

Tài sản và album được PhotoKit cung cấp các số nhận dạng duy nhất có thể được lưu trong ứng dụng của bạn và sau đó được sử dụng để truy xuất các bản ghi tương tự từ thư viện ảnh.

Mỗi thư viện ảnh và số nhận dạng của nó đều dành riêng cho thiết bị mà chúng đang chạy, ngay cả khi các thiết bị đó đang đồng bộ hóa thư viện với Ảnh iCloud.

Vì vậy, hãy chuyển sự chú ý của chúng tôi trở lại ứng dụng của bạn.

Mọi người thích cách họ có thể sử dụng các ứng dụng trên iPhone khi họ ra ngoài và sau đó, trở lại bàn làm việc, sử dụng máy tính xách tay hoặc iPad để tận dụng định dạng lớn hơn.

Khách hàng của bạn muốn có trải nghiệm liền mạch khi chuyển từ thiết bị này sang thiết bị khác.

Ví dụ, giả sử tôi đã xây dựng một ứng dụng ghi nhật ký ảnh để mọi người ghi lại trải nghiệm bằng hình ảnh và nhận xét.

Nó hoàn hảo như một ứng dụng iPhone để chụp nội dung khi đang di chuyển.

Họ sẽ có thể tiếp tục làm việc trên tạp chí đó ngay tại nơi họ đã dừng lại khi mở ứng dụng của tôi trên iPad hoặc Mac, với tất cả ảnh và nội dung họ đã thêm vào điện thoại của mình.

Vậy nó hoạt động như thế nào?

Làm thế nào để bạn tìm thấy cùng một nội dung khi mỗi thiết bị có thư viện ảnh riêng và các số nhận dạng riêng biệt?

Nó hoạt động bằng cách sử dụng các API nhận dạng đám mây mới.

Họ cung cấp cho bạn một cách để tìm cùng một tài sản và album giữa các thiết bị.

Bạn sử dụng số nhận dạng đám mây để tra cứu số nhận dạng cục bộ duy nhất cho mỗi thư viện ảnh.

Và các API mới này có sẵn trên mọi nền tảng hỗ trợ PhotoKit: iOS, iPadOS, macOS và tvOS.

Mục tiêu là cung cấp cho bạn một cách đơn giản để lập bản đồ tài sản giữa các thiết bị mà không phải lo lắng về đám mây.

Nó được thiết kế để hoạt động tốt nhất khi chạy trên tài khoản đã đăng nhập vào iCloud Photos, nhưng số nhận dạng đám mây sẽ hoạt động ngay cả khi tài khoản đã đăng xuất hoặc chạy trên hệ thống chưa bao giờ đăng nhập vào iCloud.

Tất cả đều dựa trên ánh xạ định danh, vì vậy hãy rõ ràng.

Có hai loại định danh.

Số nhận dạng cục bộ là những gì tôi đã nói trước đó, số nhận dạng bạn sử dụng trên thiết bị dành riêng cho thư viện đó.

Nếu bạn đã từng sử dụng PhotoKit trước đây, bạn đã thấy chúng được gọi là localIdentifiers trong API.

Mã định danh đám mây là API mới, được sử dụng để tra cứu số nhận dạng cục bộ trên thiết bị này hay thiết bị khác.

Chúng được đại diện bởi một lớp mới có sẵn được gọi là PHCloudIdentifier.

Hãy cùng tìm hiểu cách sử dụng chúng.

Chúng tôi sẽ bắt đầu trên thiết bị nguồn, nơi ứng dụng của bạn đã thu thập danh sách các số nhận dạng cục bộ cho một số tài sản.

Từ mảng các số nhận dạng cục bộ đó, chúng tôi muốn lấy các số nhận dạng đám mây tương ứng.

Đây là một ví dụ về cách sử dụng API để có được chúng.

Cuộc gọi này đến thư viện ảnh trả về một từ điển với các đối tượng cloudIdentifierMapping cho mỗi localIdentifier.

Chúng tôi sẽ lặp lại thông qua từ điển đó và lấy một cloudIdentifier từ đối tượng cloudMapping.

Tôi sẽ nói về việc xử lý lỗi một chút.

Hiện tại, chúng ta nên có số nhận dạng đám mây của mình và chúng ta đã sẵn sàng sử dụng chúng.

Và lợi ích lớn nhất của số nhận dạng đám mây là sử dụng chúng ở mọi nơi, vì vậy chúng tôi cần chia sẻ chúng với các thiết bị kết nối đám mây khác.

Bạn muốn cung cấp chúng cho ứng dụng của mình khi nó chạy trên bất kỳ thiết bị nào được kết nối với tài khoản iCloud này.

Bạn có thể lưu trữ số nhận dạng đám mây vào một chuỗi và chia sẻ dữ liệu đó bằng CloudKit hoặc một dịch vụ dữ liệu mạng khác.

Cách bạn đóng gói dữ liệu này thực sự phụ thuộc vào nhu cầu của bạn và ứng dụng của bạn.

Hãy suy nghĩ về cách bạn sẽ sử dụng thông tin trên thiết bị thứ hai.

Làm cách nào để bạn xây dựng lại trạng thái ứng dụng để bao gồm nội dung được tham chiếu bởi các số nhận dạng đám mây đó?

Bây giờ, trên thiết bị thứ hai, khi bạn đã tải xuống và hủy lưu trữ các số nhận dạng đám mây, chúng tôi muốn sử dụng chúng để tra cứu các số nhận dạng cục bộ dành riêng cho thư viện.

Làm việc theo hướng khác, cuộc gọi này đến thư viện ảnh trả về một từ điển với các đối tượng localIdentifierMapping cho mỗi cloudIdentifier.

Một lần nữa, chúng ta sẽ lặp lại thông qua từ điển và lần này lấy localIdentifier từ đối tượng localMapping.

Khi tôi có tất cả localIdentifiers, tôi có thể sử dụng chúng để tìm nạp và hiển thị các tài sản tôi có trên thiết bị nguồn.

Bạn có thể thấy cách API giúp dễ dàng tra cứu số nhận dạng theo cả hai hướng, nhưng thực tế của các cấu hình thiết bị khác nhau, cài đặt tài khoản, trạng thái mạng và vô số biến số khác có thể có nghĩa là mọi thứ không phải lúc nào cũng đơn giản như vậy.

Để xử lý sự phức tạp đó, API sử dụng một cặp đối tượng trợ giúp để giữ một mã định danh hợp lệ hoặc một lỗi cho biết lý do tại sao ánh xạ không thành công.

Có hai loại lỗi bạn nên xử lý khi tra cứu ánh xạ nhận dạng.

Nếu thư viện ảnh không thể giải quyết ánh xạ nhận dạng vì bản ghi cơ bản không có mặt hoặc ứng dụng không có quyền truy cập vào nó, đối tượng ánh xạ được trả về bởi API sẽ chứa lỗi Không tìm thấy mã định danh.

Tại đây bạn có thể thấy cách chúng tôi nhận mã lỗi từ đối tượng localIdentifierMapping nếu mã định danh không được đặt.

Đối với lỗi Không tìm thấy Mã định danh, việc theo dõi Mã định danh đám mây chưa được giải quyết là hợp lý để chúng tôi có thể đặt trình giữ chỗ trong giao diện người dùng để cho biết không thể tìm thấy ảnh trên thiết bị này.

Loại lỗi khác xảy ra nếu chúng ta không thể giải quyết ánh xạ nhận dạng duy nhất.

Nói cách khác, có nhiều tài sản khớp với mã định danh đám mây được cung cấp.

Điều này có thể xảy ra nếu trạng thái đám mây không hoàn toàn đồng bộ trên thiết bị này và thư viện phải dựa vào nội dung hình ảnh để tìm kết quả phù hợp.

Trong trường hợp này, đối tượng ánh xạ sẽ có lỗi Tìm thấy Nhiều Mã định danh và thông tin người dùng lỗi sẽ chứa các số nhận dạng phù hợp.

Với mã lỗi Tìm thấy Nhiều Mã định danh, chúng ta có thể lấy các số nhận dạng cục bộ phù hợp từ thông tin người dùng lỗi bằng cách sử dụng LocalIdentifiersErrorKey.

Trong ví dụ này, chúng tôi đã lưu trữ chúng trong từ điển để sau này chúng tôi có thể tìm nạp và hiển thị các tài sản phù hợp và để khách hàng quyết định.

Đó là tổng quan về số nhận dạng đám mây và cách sử dụng chúng.

Hãy nhớ rằng việc tra cứu ánh xạ giữa số nhận dạng cục bộ và đám mây có thể tốn kém, vì vậy hãy sử dụng số nhận dạng cục bộ trong các tương tác ứng dụng của bạn với thư viện ảnh, thực hiện công việc lập bản đồ tại các điểm tải và lưu, sau đó lưu trữ và chia sẻ số nhận dạng đám mây để làm cho chúng có sẵn trên các thiết

Tiếp theo, thư viện hạn chế.

Trước khi chúng ta đi sâu vào các bản cập nhật cho thư viện hạn chế, hãy nhanh chóng xem lại cách thức hoạt động của quyền truy cập thư viện ảnh.

Khi ai đó khởi chạy một ứng dụng và yêu cầu quyền truy cập vào dữ liệu ảnh bằng PhotoKit, hệ thống sẽ yêu cầu sự cho phép của họ trước khi cấp quyền truy cập ứng dụng.

Và lần đầu tiên điều này xảy ra, họ sẽ thấy một cảnh báo như thế này.

Điều này thực sự quan trọng đối với khách hàng của chúng tôi.

Nó cho phép họ kiểm soát mức độ truy cập để cung cấp cho ứng dụng này: cho phép truy cập vào một lựa chọn ảnh hạn chế, quyền truy cập đầy đủ vào toàn bộ thư viện của họ hoặc từ chối quyền truy cập hoàn toàn.

Nếu họ chọn tùy chọn Chọn Ảnh, thì ứng dụng sẽ được cấp quyền truy cập thư viện hạn chế.

Bạn có thể tham khảo phiên WWDC '20 của chúng tôi "Xử lý Thư viện Ảnh Giới hạn trong ứng dụng của bạn" để có mô tả đầy đủ hơn về chế độ thư viện giới hạn và cách thiết kế ứng dụng của bạn để hoạt động tốt nhất với nó.

Hiện tại, chỉ cần biết rằng quyền truy cập thư viện hạn chế được thiết kế để minh bạch cho nhà phát triển ứng dụng là đủ.

Nói chung, PhotoKit APIs sẽ hoạt động như bình thường, hoạt động giống như thư viện chỉ chứa các ảnh đã được chọn.

Nó hoạt động thuận tiện với quy trình làm việc chung.

Ví dụ, khi một ứng dụng thêm ảnh vào thư viện, ảnh đó sẽ tự động được đưa vào lựa chọn thư viện giới hạn của ứng dụng.

Có một quy trình làm việc khác mà chúng ta thấy trong các ứng dụng sử dụng album tùy chỉnh để theo dõi các nội dung mà chúng đã thêm vào.

Nhưng trong iOS 14, chế độ thư viện hạn chế không cho phép tạo hoặc truy cập vào các album tùy chỉnh.

Tôi rất vui khi nói với bạn rằng trong iOS 15, chúng tôi đã thêm hỗ trợ cho các ứng dụng để tạo, tìm nạp và cập nhật album của riêng họ khi chạy ở chế độ thư viện hạn chế.

Bây giờ chúng ta hãy chuyển sự chú ý của chúng ta sang một quy trình làm việc khác, và đối với điều này, tôi sẽ tham khảo lại ứng dụng viết nhật ký ảnh ví dụ của mình.

Vì tôi muốn mang đến cho khách hàng của mình trải nghiệm tuyệt vời khi họ chọn quyền truy cập thư viện hạn chế cho ứng dụng của tôi, tôi đã tùy chỉnh giao diện để trình chọn thư viện hạn chế như một phần của việc tạo tạp chí mới.

Điều này cung cấp một bước tự nhiên trong quá trình tạo nhật ký để họ chọn nhiều ảnh hơn.

Nhưng một khi lựa chọn được cập nhật, thật tuyệt khi biết những bức ảnh nào đã được thêm vào, vì chúng là những bức ảnh mà khách hàng của tôi muốn sử dụng trong tạp chí này.

Với presentLimitedLibraryPicker API mới trong iOS 15, tôi có thể vượt qua trình xử lý hoàn thành cung cấp cho tôi số nhận dạng của các bức ảnh họ vừa chọn trong bộ chọn.

Điều này cho tôi biết khi nào cập nhật lựa chọn được thực hiện và họ đã thêm tài sản nào.

Điều đó bao gồm các bản cập nhật của chúng tôi cho thư viện hạn chế, hỗ trợ cho các ứng dụng tạo và làm việc với album của riêng họ và API mới để cung cấp cho các ứng dụng một cách để theo dõi những gì đã được thêm vào lựa chọn thư viện giới hạn.

Đó là hầu hết những gì chúng ta phải nói hôm nay, nhưng trước khi chúng ta đi, tôi muốn để lại cho bạn những điều sau đây.

Đối với những người đã không cập nhật mã của bạn trong một thời gian, đã đến lúc rời khỏi Thư viện Tài sản.

Nó đã bị phản đối kể từ iOS 9 và chúng tôi đang lên kế hoạch xóa nó trong SDK trong tương lai.

Đây là thời điểm để chuyển sang bộ chọn Ảnh mới hoặc PhotoKit để tích hợp sâu hơn với ảnh.

Và một lý do nữa để chuyển sang PhotoKit: chúng tôi biết rằng chúng tôi đã có những khoảng trống lâu dài trong việc xử lý lỗi và tôi rất vui được nói với bạn rằng cuối cùng chúng tôi đã giải quyết được những người có mã lỗi mới để xác định vấn đề cơ bản trong quá trình xử lý yêu cầu thay đổi, yêu cầu tài nguyên và các cuộc gọi truy cập thư

Chúng tôi nóng lòng chờ bạn kiểm tra tất cả các tính năng mới tuyệt vời mà chúng tôi đã thêm vào bộ chọn Ảnh và PhotoKit trong iOS 15.

Cảm ơn bạn.