10294

Xin chào, và chào mừng đến với WWDC.

Tên tôi là Joel, và tôi muốn nói với bạn về cách bạn có thể thêm nhạc vào ứng dụng của mình với MusicKit.

MusicKit là một khuôn khổ mới cho các nền tảng của Apple cung cấp các API biểu cảm cho các ứng dụng của bạn để truy cập các mục nhạc trong Swift.

Nó tận dụng cú pháp đồng thời Swift mới và được thiết kế từ đầu để sử dụng kết hợp với SwiftUI.

MusicKit tăng tốc cách các ứng dụng của bạn tích hợp với Apple Music API, đây là bộ API phía máy chủ của chúng tôi để truy cập một loạt nội dung danh mục từ Apple Music, do đó giúp bạn dễ dàng xây dựng các ứng dụng hấp dẫn gắn liền với Apple Music hơn nhiều.

Đầu tiên, chúng ta sẽ nói về cách yêu cầu nội dung âm nhạc với MusicKit.

Tiếp theo, chúng ta sẽ nói về các chủ đề khác quan trọng đối với cách ứng dụng của bạn tích hợp với Apple Music, chẳng hạn như yêu cầu sự đồng ý của người dùng cho ứng dụng của bạn để truy cập dữ liệu liên quan đến Apple Music, quản lý mã thông báo cần thiết để truy cập Apple Music API, truy cập thông tin đăng ký và các khả năng liên quan

MusicKit cung cấp một lớp mô hình mới để truy cập các mục nhạc, với các yêu cầu có cấu trúc cho phép bạn tìm nạp nội dung từ Apple Music API.

Bạn có thể tìm kiếm nội dung trong danh mục Apple Music hoặc tìm nạp tài nguyên dựa trên một bộ lọc cụ thể.

Những yêu cầu này tạo ra phản hồi với các mục được nhóm lại trong bộ sưu tập, có hỗ trợ tích hợp cho việc phân trang, cho phép bạn nhận được lô mục tiếp theo từ phản hồi ban đầu.

Vậy, những món đồ âm nhạc này trông như thế nào?

Hãy xem xét một ví dụ cụ thể với một album.

"Album" là một loại giá trị với các thuộc tính được nhóm trong ba danh mục khác nhau.

Danh mục đầu tiên chứa các thuộc tính đơn giản, chẳng hạn như thuộc tính chuỗi như "title", thuộc tính boolean như "isCompilation" hoặc các thuộc tính có cấu trúc hơn như "artwork", cho phép bạn truy cập vào URL cho tác phẩm nghệ thuật cùng với thông tin kích thước có liên quan và các màu sắc liên quan.

Album cũng cung cấp một số mối quan hệ, chẳng hạn như các nghệ sĩ hoặc thể loại liên quan, hoặc danh sách các bản nhạc trong một album nhất định.

Ví dụ, kết quả của mối quan hệ "bài hát" là một tập hợp các giá trị thuộc loại "Bài hát", là một loại mục âm nhạc khác.

Cuối cùng, ngoài các mối quan hệ cấp mô hình mạnh mẽ này, "Album" cung cấp một số liên kết yếu hơn của nội dung liên quan.

Các hiệp hội rất giống với các mối quan hệ, nhưng chúng thường phù du hơn, hoặc được thúc đẩy bởi biên tập nhiều hơn.

Ví dụ, liên kết "appearsOn" trên một album trả về một bộ sưu tập danh sách phát, nhưng, không giống như các bộ sưu tập cho các mối quan hệ, bộ sưu tập này cũng có tiêu đề.

Tải và truy cập các mối quan hệ với MusicKit rất đơn giản.

Với một album, bạn có thể dễ dàng tìm nạp một đại diện khác của cùng một album này bao gồm các mối quan hệ như "nghệ sĩ" và "bài hát", cũng như các liên kết như "album liên quan", trong một thao tác duy nhất.

Phương thức "with" cần được gọi bằng từ khóa Swift đặc biệt "await", điều này chỉ ra rằng điều này sẽ thực hiện một thao tác không đồng bộ đằng sau hậu trường.

Điều này thực sự sẽ tìm nạp một đại diện đầy đủ hơn của album này từ Apple Music API qua mạng.

Sau đó, bạn có thể lấy danh sách các bản nhạc từ album chi tiết này và lặp lại các bản nhạc đó như bạn làm với một mảng thông thường.

Và đây là đầu ra bảng điều khiển cho mã này.

Truy cập các hiệp hội như "album liên quan" hoạt động theo cùng một cách, với sự khác biệt duy nhất là chúng thường bao gồm một tiêu đề, có thể truy cập trực tiếp trên bộ sưu tập.

Sau đó, bạn có thể lặp lại bộ sưu tập theo cách tương tự để in một vài trong số những album liên quan đó.

Và đây là đầu ra bảng điều khiển cho mã này.

Bây giờ, chúng ta hãy xem bản demo yêu cầu nội dung âm nhạc với MusicKit.

Tôi đang làm việc trên một ứng dụng cho phép tôi tìm và thưởng thức các album từ Apple Music.

Tôi có thể tìm kiếm album bằng cách sử dụng trường tìm kiếm này, trường này đã được kết nối một số mã để tải kết quả tìm kiếm phù hợp bằng cách sử dụng yêu cầu tìm kiếm danh mục nhạc.

Ứng dụng này cũng theo dõi danh sách các album mà tôi đã xem gần đây.

Chúng tôi có thể tìm thêm thông tin về album này có tiêu đề "Catch A Vibe - EP" bằng cách chọn nó và bạn có thể nhận thấy danh sách các bản nhạc cho album này đang hoạt hình sau khi chế độ xem chi tiết này xuất hiện.

Điều này được thực hiện bằng cách tải mối quan hệ "bài hát" của album này như chúng ta vừa thấy và cập nhật biến trạng thái cho chế độ xem SwiftUI của chúng ta, sau đó được sử dụng để điền vào danh sách này.

Chúng ta có thể bắt đầu phát nhạc từ album này bằng nút phát bên dưới tác phẩm nghệ thuật hoặc bằng cách chọn một bản nhạc cụ thể.

Điều này sẽ chỉ đơn giản là sử dụng API phát lại trong MusicKit để đặt hàng đợi với danh sách các bản nhạc này và gọi phương thức phát trên trình phát.

Hãy thử nó đi!

Vì vậy, nếu tôi chọn bài hát có tiêu đề "Catch a Vibe" của Karun & MONBRU...

Bài hát này bắt đầu phát.

♪ Ồ, ồ, không ♪

Ứng dụng của chúng tôi thậm chí còn hoạt động tự động trong các điều khiển phương tiện trong màn hình Khóa, điều này cho phép tôi quét đến nửa điểm trong bài hát này.

Nhưng tôi đã hy vọng sử dụng ứng dụng này để giúp tôi khám phá lại âm nhạc cũ từ thư viện CD của mình, như album này của Phoenix.

Vì vậy, tôi muốn thêm một tính năng cho phép tôi hướng máy ảnh iPhone của mình vào mã vạch của một đĩa CD cũ và để ứng dụng này hiển thị cùng một album này ở định dạng kỹ thuật số.

Tôi đã thêm một số mã thử nghiệm cho tính năng này.

Khi tôi bật nó, tôi có thể thấy một nút mã vạch ở phía dưới, nút này sẽ hiển thị chế độ xem camera.

Nếu tôi trỏ nó vào mã vạch của đĩa CD này, nó sẽ tự động nhận ra giá trị mã vạch và hiển thị nó.

Tất cả những gì tôi thiếu là một số mã sử dụng MusicKit để tìm album tương ứng.

Hãy tiếp tục và thêm nó vào ứng dụng của chúng tôi.

Vì vậy, hãy để tôi tạo một albumRequest bằng cách sử dụng MusicCatalogResourceRequest.

Tôi đang tìm kiếm các album đặc biệt.

Và ở đây, chúng tôi muốn đảm bảo rằng chúng tôi tìm thấy các album trong đó thuộc tính UPC, viết tắt của Universal Product Code, đó là thuật ngữ kỹ thuật cho mã vạch, bằng: Mã vạch được phát hiện.

Tôi có thể thực hiện yêu cầu này không đồng bộ.

albumYêu cầu.phản hồi.

Và sau đó từ phản hồi, tôi có thể tìm album đầu tiên trong kết quả.

Sau đó, tôi có thể chuyển album đầu tiên này sang phương thức trợ giúp handleDetectedAlbum bên dưới.

handleDetectedAlbum (Album đầu tiên).

Phương pháp này loại bỏ chế độ xem quét mã vạch, và sau đó đẩy chế độ xem chi tiết album cho album được phát hiện.

Và nó được trang trí ở đây với MainActor để đảm bảo rằng nó sẽ được thực hiện trên chủ đề chính.

Vì vậy, khi chúng tôi gọi nó, chúng tôi cần đảm bảo rằng chúng tôi thêm từ khóa await.

Vì vậy, hãy xây dựng và chạy lại ứng dụng của chúng tôi và dùng thử.

Nhấn vào nút mã vạch.

Lấy album của tôi.

Nó đã hoạt động!

Bây giờ, sẽ dễ dàng hơn nhiều để thưởng thức âm nhạc cũ của tôi ở định dạng kỹ thuật số trên Apple Music.

MusicKit cũng cung cấp một yêu cầu dữ liệu mục đích chung, khác với các yêu cầu có cấu trúc ở chỗ nó cho phép bạn tải nội dung từ một điểm cuối Apple Music API tùy ý bằng URL của nó.

Những gì bạn sẽ nhận được từ yêu cầu này là dữ liệu thô cho phản hồi JSON từ Apple Music API.

Bạn cần giải mã dữ liệu thô này bằng JSONDecoder, nhưng làm điều đó không khó vì bạn có thể tận dụng các loại mục nhạc hiện có, vì chúng phù hợp với giao thức Codable.

Hãy xem xét một ví dụ.

Nếu bạn muốn tải danh sách các thể loại cấp cao nhất từ Apple Music, bạn có thể làm điều đó bằng cách tải nội dung từ URL cụ thể này và đây là phản hồi JSON tương ứng.

Nếu bạn xem xét kỹ hơn kết quả này, bạn có thể thấy ở giữa những gì trông giống như một tài nguyên thể loại.

Vậy, bạn sẽ thể hiện điều này như thế nào trong Swift?

Chắc chắn rồi, MusicKit có một loại Thể loại.

Phóng to lại, bạn sẽ thể hiện toàn bộ phản hồi trong Swift như thế nào?

Bạn có thể tạo một cấu trúc, với một thành viên dữ liệu, đó là một mảng các thể loại đơn giản.

Sau đó, đảm bảo đánh dấu cấu trúc này là Decodable.

Và điều này thậm chí không yêu cầu viết bất kỳ logic giải mã bổ sung nào, bởi vì bản thân "Thể loại" cũng phù hợp với Decodable.

Vì vậy, để tải dữ liệu này trong ứng dụng của bạn, bạn sẽ đặt cấu trúc này ở đầu tệp của mình, sau đó bạn sẽ xây dựng URL bằng cách sử dụng mã quốc gia cụ thể cho người dùng của mình.

Tạo một yêu cầu dữ liệu âm nhạc bằng cách sử dụng URL này và nhận phản hồi từ đó, theo cùng một mẫu mà chúng ta đã thấy.

Khi bạn có phản hồi đó, bạn có thể giải mã dữ liệu của nó bằng JSONDecoder, bằng cách chuyển loại MyGenresResponse cho phương thức giải mã.

Và thế là xong!

Bây giờ bạn có thể truy cập các thể loại riêng lẻ trong phản hồi các thể loại được đánh máy mạnh mẽ của mình.

Và, như bạn có thể thấy, bạn nhận được cùng một loại mục nhạc mà bạn có thể lấy từ các yêu cầu khác trong MusicKit.

Vì vậy, đó là cách bạn tải nội dung từ bất kỳ URL tùy ý nào cho Apple Music API.

Và bây giờ chúng ta đã biết cách tải nội dung nhạc, hãy thảo luận về một số bước sơ bộ quan trọng để tích hợp ứng dụng của bạn với Apple Music, bắt đầu với quyền riêng tư.

Chúng tôi muốn người dùng kiểm soát ứng dụng nào có quyền truy cập vào dữ liệu của họ.

Vì vậy, trước khi bạn có thể yêu cầu bất kỳ dữ liệu nào từ Apple Music API, có thể bao gồm lịch sử nghe của người dùng hoặc thư viện nhạc của họ, bạn cần có sự đồng ý của người dùng để ứng dụng của bạn truy cập Apple Music.

Yêu cầu nội dung người dùng này cần được thực hiện trên cơ sở mỗi thiết bị và mỗi ứng dụng.

Và đây là hộp thoại đồng ý của người dùng trông như thế nào trong ngữ cảnh của một ứng dụng có tên Zova, đây là một ứng dụng thể dục tuyệt vời cho phép bạn tập luyện với danh sách phát của họ trên Apple Music hoặc danh sách phát của riêng bạn.

Khi bạn bắt đầu tập luyện lần đầu tiên, Zova xin phép truy cập Apple Music.

Hộp thoại này cần truyền đạt cho người dùng lý do tại sao ứng dụng của bạn cần truy cập vào Apple Music.

Cuối cùng, mô tả sử dụng ứng dụng của bạn cho Apple Music, mà bạn cần xác định trong Info.plist của mình, được bao gồm dưới dạng phụ đề của hộp thoại này.

Đây là một ví dụ về cách bạn có thể yêu cầu sự đồng ý của người dùng cho MusicKit.

Giả sử bạn có một tính năng trong ứng dụng của mình yêu cầu MusicKit và bạn đang truy cập vào tính năng này bằng cách sử dụng biến trạng thái isAuthorizedForMusicKit.

Tại thời điểm thích hợp trong ứng dụng của bạn, trước khi bạn cố gắng sử dụng MusicKit, bạn có thể yêu cầu ủy quyền truy cập Apple Music bằng phương thức yêu cầu không đồng bộ này.

Điều này sẽ chỉ nhắc người dùng nếu ứng dụng của bạn chưa được ủy quyền.

Phương thức yêu cầu trả về một giá trị trạng thái và bạn có thể đặt biến isAuthorizedForMusicKit của mình thành "true" nếu trạng thái đó bằng "authorized".

Bây giờ, hãy nói ngắn gọn về các mã thông báo cần thiết để tải dữ liệu từ Apple Music API.

Apple Music API yêu cầu mã thông báo dành cho nhà phát triển, về cơ bản xác thực ứng dụng của bạn với API.

Trước đây, để có được mã thông báo nhà phát triển này, bạn sẽ phải tạo khóa riêng MusicKit trong cổng thông tin nhà phát triển, đặt nó trên máy chủ dưới sự kiểm soát của bạn, để đảm bảo khóa được giữ kín và ứng dụng của bạn yêu cầu mã thông báo nhà phát triển mới từ máy chủ của bạn.

Nhưng bây giờ, với MusicKit cho Swift, bạn không còn phải lo lắng về bất kỳ điều gì trong số này nữa, vì mã thông báo nhà phát triển được tạo tự động cho ứng dụng của bạn.

Bạn chỉ cần chọn tham gia hành vi tự động mới này bằng cách đăng ký vào cổng thông tin dành cho nhà phát triển.

Cụ thể, trong trang nơi bạn đăng ký ID ứng dụng của mình, hãy chọn tab Dịch vụ ứng dụng ở dưới cùng và bật hộp kiểm MusicKit.

Và bạn đã hoàn thành!

Ngoài ra, Apple Music API yêu cầu mã thông báo người dùng cho bất kỳ điểm cuối được cá nhân hóa nào.

Và giống như mã thông báo nhà phát triển, mới trong năm nay, mã thông báo người dùng được tự động tạo thay mặt bạn.

Một điều nữa bạn có thể cần sử dụng MusicKit trong ứng dụng của mình là cách để tìm hiểu xem người dùng của bạn có đăng ký Apple Music đang hoạt động hay không.

Thông tin đăng ký trong MusicKit được hiển thị dưới dạng ba khả năng riêng biệt, cho bạn biết liệu người dùng có thể phát nội dung từ danh mục Apple Music hay không, nếu họ đã bật Thư viện nhạc iCloud hoặc nếu họ có thể trở thành người đăng ký, trong trường hợp họ chưa có đăng ký hoạt động.

Đảm bảo kiểm tra khả năng liên quan cho chức năng cụ thể liên quan đến Apple Music trong ứng dụng của bạn.

Ví dụ: nếu bạn có một nút phát được kết nối để phát một số bản nhạc, bạn có thể muốn vô hiệu hóa nó nếu người dùng của bạn không thể phát nội dung danh mục từ Apple Music.

Bạn có thể xác định một biến trạng thái trong chế độ xem của mình để theo dõi đăng ký nhạc.

Sau đó, bạn có thể áp dụng công cụ sửa đổi bị vô hiệu hóa cho nút của mình để đảm bảo nó vẫn bị vô hiệu hóa nếu thuộc tính đăng ký nhạc "canPlayCatalogContent" được đặt thành "false".

Và cuối cùng, bên trong một khối không đồng bộ được chuyển đến công cụ sửa đổi tác vụ mới, bạn có thể sử dụng luồng cập nhật đăng ký mới để được thông báo về những thay đổi trong đăng ký nhạc.

Bây giờ, hãy nói về việc phát lại với MusicKit.

MusicKit cung cấp hai trình phát riêng biệt, mà chúng tôi gọi là SystemMusicPlayer và ApplicationMusicPlayer.

Hãy đi sâu vào sự khác biệt giữa những người chơi đó, bắt đầu với một ví dụ.

Trong khi một ứng dụng truyền thông xã hội có thể muốn sử dụng SystemMusicPlayer để thay đổi những gì đang phát ra khỏi ứng dụng âm nhạc hệ thống, một ứng dụng thể dục có thể thích sử dụng ApplicationMusicPlayer để giữ trạng thái phát lại của chúng hoàn toàn độc lập với ứng dụng âm nhạc hệ thống.

Cả hai người chơi này đều tự động báo cáo thông tin đang phát và xử lý các lệnh từ xa.

Đây là những gì đã cho chúng tôi tích hợp sâu với các điều khiển phương tiện hệ thống trong màn hình khóa, trước đó trong bản demo của chúng tôi.

Tuy nhiên, ứng dụng hiện đang phát được báo cáo khác.

Nếu bạn sử dụng SystemMusicPlayer, ứng dụng Âm nhạc sẽ được báo cáo là ứng dụng đang phát, trong khi nếu bạn sử dụng Ứng dụng MusicPlayer, ứng dụng của bạn sẽ là ứng dụng được báo cáo là ứng dụng đang phát.

Quyền sở hữu của hàng đợi phát lại cũng khác nhau.

Với SystemMusicPlayer, ứng dụng của bạn chỉ đơn thuần là điều khiển từ xa ứng dụng Âm nhạc hệ thống, trong khi với ApplicationMusicPlayer, ứng dụng của bạn sở hữu một hàng đợi phát lại hoàn toàn riêng biệt.

Cả hai người chơi này đều cho phép bạn đặt hàng đợi với một hoặc nhiều vật phẩm, thêm vật phẩm để chơi tiếp theo hoặc chơi sau.

Nhưng chỉ có ApplicationMusicPlayer cung cấp cho bạn quyền kiểm soát bổ sung đối với hàng đợi phát lại, cho phép bạn chèn các mục ở giữa hoặc xóa các mục đã được thêm vào trước đó.

Cuối cùng, nếu người dùng của bạn chưa phải là người đăng ký Apple Music, bạn có thể muốn cho phép họ bắt đầu dùng thử miễn phí Apple Music từ bên trong ứng dụng của bạn, vì vậy họ sẽ có thể tận hưởng tất cả các chức năng bạn đã làm việc để cải thiện trải nghiệm người dùng của ứng dụng với âm nhạc.

Ưu đãi đăng ký có thể được cấu hình bằng cách điều chỉnh thông báo chính được hiển thị cho người dùng để tương ứng tốt hơn với chức năng trong ứng dụng của bạn, như "phát nhạc".

Nó cũng có thể theo ngữ cảnh, làm nổi bật một bài hát, album hoặc danh sách phát cụ thể.

Và bằng cách sử dụng bảng ưu đãi đăng ký trong ứng dụng của bạn, bạn có thể nhận được phần thưởng khi đưa người đăng ký Apple Music mới vào, thông qua chương trình liên kết của chúng tôi, mà chúng tôi gọi là Chương trình Đối tác Hiệu suất Dịch vụ Apple.

Để hiển thị ưu đãi đăng ký nhạc theo ngữ cảnh trong ứng dụng của bạn, bạn sẽ cần theo dõi đăng ký nhạc như chúng ta đã thấy trước đó.

Bạn cũng sẽ cần một biến trạng thái khác để theo dõi xem ưu đãi có đang được hiển thị hay không.

Chuyển ID của, giả sử, một album, làm thuộc tính itemID của các tùy chọn ưu đãi đăng ký của bạn.

Giữ nút ưu đãi bị vô hiệu hóa bất cứ khi nào "canBecomeSubscriber" được đặt thành "false" trên đăng ký nhạc.

Sau đó, sử dụng công cụ sửa đổi musicSubscriptionOffer có liên kết với thuộc tính isShowingOffer và cũng bao gồm các tùy chọn của bạn.

Cuối cùng, đặt biến isShowingOffer thành "true".

Hãy quay lại ứng dụng của chúng tôi và xem ưu đãi theo ngữ cảnh cho Apple Music trông như thế nào.

Trong bản demo trước đó của chúng tôi, chúng tôi đã đăng nhập bằng đăng ký Apple Music đang hoạt động.

Vì vậy, để mô phỏng kịch bản có thể thích hợp để hiển thị ưu đãi đăng ký cho Apple Music, bạn chỉ cần vào Cài đặt và đăng xuất khỏi tài khoản của mình.

Sau đó, nếu tôi quay lại ứng dụng của mình, bạn có thể thấy rằng nút phát đã bị vô hiệu hóa và di chuyển sang trái để nhường chỗ cho một nút khác mời người dùng tham gia Apple Music.

Nếu tôi nhấn vào nút này, một ưu đãi đăng ký sẽ được hiển bày, làm nổi bật album cụ thể mà chúng tôi vừa xem trong ứng dụng của mình.

Và đó là cách bạn có thể cho phép người dùng bắt đầu dùng thử miễn phí Apple Music từ bên trong ứng dụng của bạn.

Tóm lại, có rất nhiều loại ứng dụng có thể được nâng cao bằng cách thêm một chút âm nhạc như một phần trải nghiệm của họ.

Ví dụ, bạn có thể làm cho trò chơi của mình nhập vai hơn rất nhiều bằng cách chơi nhạc nền phù hợp với tâm trạng trò chơi của bạn.

Hoặc bạn có thể phát nhạc lạc quan để giữ cho người dùng của mình có động lực trong một ứng dụng thể dục.

Và trong một ứng dụng truyền thông xã hội, bạn có thể giữ cho người dùng của mình tương tác nhiều hơn với nội dung làm nổi bật âm nhạc.

Để đi xa hơn nữa, hãy đảm bảo kiểm tra một số phiên liên quan, để bạn có thể tìm hiểu về cách khai thác sức mạnh của chữ ký Shazam với ShazamKit và đi sâu hơn vào tính đồng thời với SwiftUI.

Cảm ơn vì đã xem, và tận hưởng WWDC 2021!

[Nhạc gõ].