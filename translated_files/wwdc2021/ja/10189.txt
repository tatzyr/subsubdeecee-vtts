10189

♪ベース音楽の演奏♪

♪

ジャー・ノーブル:こんにちは、私はジャーです!

そして、私はここAppleでWebKitとSafariでメディア再生に取り組んでいます。

人々は、同じ部屋にいる人でも、隣にいる人でも、世界の反対側にいる人でも、お気に入りの番組や映画を見たり、一緒に音楽を聴くのが大好きです。

そして今、GroupActivitiesを使用すると、どこにいてもユーザーにSharePlay体験を提供することがこれまで以上に簡単になりました。

このセッションでは、4つのトピックを取り上げます。

Safariでの調整された再生の紹介、SafariでSharePlayで動作するようにiOSアプリを準備する方法、アプリのWebページでメディアセッションAPIを採用する方法、および複数のデバイス間で再生を調整するための新しいWeb API。

では、SharePlayとSafariについて少し話すことから始めましょう。

前のセッションでは、GroupActivitiesを使用してiPhoneとiPadアプリケーションで素晴らしいSharePlayエクスペリエンスを作成する方法を学びました。

そして、macOS Montereyでは、Catalystを使用して、素晴らしいiPhoneやiPadアプリと一緒に、同じ体験をMacにもたらすことができます。

また、アプリケーションにコンパニオンWebサイトがある場合は、ユーザーがApp Storeからアプリをダウンロードすることなく、Mac Safari 15ユーザーに同じ素晴らしいSharePlay体験をもたらすことができます。

そして、それは私がこのセッションで行う方法をあなたに示すものです。

私は映画の予告編を見ることができるiPhoneアプリケーションに取り組んできました。

私はすでに私のアプリにGroupActivitiesのサポートを追加しました。これにより、友人はFaceTimeで一緒に映画の予告編を見ることができます。

しかし、私の映画の予告編アプリにもウェブサイトがあります。

そして、そのウェブページでGroupActivitiesのサポートを追加すると、どのように見えるかがここにあります。

友達のサムとFaceTime通話中です。

サムは映画の予告編を見るのが大好きなので、私は彼らにこの新しい映画予告編アプリをテストするのを手伝ってくれるように頼みました。

彼らが私たちの通話中にそのアプリで新しい予告編を再生し始めると、私は通知を通してその予告編を見るために招待されます。

Safariでセッションに参加するオプションが表示されます。

その通知をクリックすると、Safariは共有コンテンツのURLで起動し、Samが予告編の再生を開始すると、同時にSafariで再生されます。

Safariでビデオを一時停止、再生、検索することさえでき、セッションの他の全員が同じコマンドがローカルビデオに反映されているのを同時に見ることができます。

それは本当に素晴らしいものになるでしょう!

では、映画予告編のウェブサイトにGroupActivitiesのサポートを追加するには何が必要ですか?

Safariのボンネットの下を見る前に、Safari 15で利用可能な新しいWeb APIで、GroupActivitiesを通じてSafariで動作するようにアプリを準備する方法について話しましょう。

SafariでGroupActivitiesセッションに参加するには、iPhoneまたはiPadアプリを持つユーザーは、Webサイトを指すfallbackURLでGroupSessionActivityを作成する必要があります。

fallbackURLは、あなたのウェブサイトだけでなく、再生する特定のコンテンツを識別する必要があります。

iPhoneユーザーからMacのユーザーにWatch Togetherの招待状が発行されると、Safariが起動され、GroupSessionActivityで提供したURLを読み込むように求められます。

フォールバックURLがSafariに読み込まれると、サイトはいくつかのシンプルだが重要なWeb APIを実装する必要があります。

1つ目はメディアセッションです。

メディアセッションは、サイトがブラウザ（Safari）にページ内のメディア再生の現在の状態について詳しく伝えることを可能にする標準的なWeb APIです。

サイトは、現在の再生状態、コンテンツの継続時間をブラウザに伝えることができます。

現在の再生アイテムのアートワークを提供できます。

現在のコンテンツがスキップできる広告であることをブラウザに伝えることさえできます。

ブラウザがこのメタデータをすべて利用できるようにすると、そのメタデータをオペレーティングシステムの残りの部分に提供し、ブラウザウィンドウ自体の外でユーザーに提示することができます。

オペレーティングシステムが、データが「再生中」と呼ばれるものの中にあると表示する1つの場所。

Now Playingは、ユーザーが今楽しんでいるメディアをすばやく見てコントロールするための素晴らしい方法です。

iOSでは、ユーザーはコントロールセンターとロック画面から「再生中」にアクセスできます。

そして、macOS Montereyでは、ユーザーはメニューバーから直接「再生中」にアクセスできます。

また、Safariはメディアセッションを通じて提供された情報を使用して、コンテンツのタイトル、期間、再生状態、アートワークなどを「再生中」に入力します。

Now Playingでは、ユーザーに簡単な再生コントロールセットを表示することで、ユーザーが聴いているものの再生を制御することもできます。

サイトは、ユーザーが「再生中」と対話したときに実行する特定のアクションをメディアセッションに登録できます。たとえば、ユーザーが「再生中」の「再生」ボタンをタップすると、Safariはサイト独自のアクションハンドラを実行して再生を開始できます。

メディアセッションでは、サイトがブラウザに公開するメタデータを完全に制御し、再生コマンドの実装方法も制御できます。

再生を開始する前に、いくつかのセットアップやプリフライトを行う必要がありますか?

問題ありません。

mediaSessionのプレイアクションハンドラーで、今、あなたはできます。

サイトが以前にメディアセッションを採用している場合は、すでに半分完了しています。

しかし、映画の予告編サイトはまだメディアセッションを採用していないので、今そのサポートを追加しましょう。

このサイトでは、プレイ、一時停止、シークトのアクションを追加したいと考えています。

そのためには、ナビゲーターのmediaSessionプロパティを使用します。

まず、プレイ用のアクションハンドラーを追加しましょう。

mediaSession. setActionHandler() を呼び出し、文字列再生と、ビデオ要素で play() を呼び出すインライン関数を渡します。

次に、一時停止とシークにも同じことをします。

また、ブラウザに再生状態を正確に表現していることを確認するために、ビデオ要素にイベントリスナーを追加し、その状態が変更されたときにmediaSessionを更新します。

まず、updateMediaSessionState()という関数を追加しましょう。

ビデオ要素を照会して、再生中か一時停止中かを調べます。

次に、ビデオ要素の再生状態に応じて、mediaSessionのplaybackStateプロパティを文字列の再生または一時停止のいずれかに設定します。

次に、ビデオ要素の持続時間、再生速度、および現在の時刻を照会します。

次に、これらの値を使用して、mediaSessionのsetPositionState()関数を呼び出し、それらの値を辞書パラメータに渡します。

次に、イベントリスナーを追加して、それらの値が変更されたときに検出し、updateMediaSessionState()を呼び出して、それらの新しい値でmediaSessionを更新します。

再生、一時停止、期間の変更、レートの変更、時間の変更にはイベントリスナーが必要です。

そして最後に、映画予告編のウェブサイトにはタイトル文字列とタイトルアートワークのURLの両方があるため、メディアセッションのメタデータプロパティをそれらの値を含む新しいMediaMetadataオブジェクトに設定できます。

だから、それを試してみましょう!

Safariでページをリロードし、再生を開始し、システムメニューの[再生中]アイコンをクリックします。

そして、再生中パネルにタイトルとアートワークが見えます。

そして、一時停止ボタンをタップすると、一時停止アクションハンドラが呼び出され、再生が一時停止します。

メディアセッションは、ブラウザが再生を開始または停止する必要があることをページに指示するメカニズムを提供することにより、WebページでのWatch Togetherエクスペリエンスの構成要素を提供します。

これで、Webページで共同視聴体験を作成する第2部に進む準備が整いました。セッション内のすべてのデバイスで再生を調整します。

これを行うには、「コーディネーター」と呼ばれる新しいプロパティを追加して、メディアセッションを拡張しました。

ページは、メディアセッションのコーディネーターを使用して、セッション内の他のすべてのユーザーに、再生を開始または一時停止する、メディアのタイムラインの特定のポイントを探す、またはプレイリストの次の項目に移動するためのページの意図を通知します。

コーディネーターは、これらの意図をセッション内の他のすべてのデバイスと通信し、他のすべてのデバイスの再生状態の変更を聞き、競合を解決し、全員が再生を開始する準備ができているのを待ちます。

そして、全員が準備ができたら、コーディネーターは先ほど追加したメディアセッションアクションハンドラを使用して、セッション内の他のすべてのユーザーと一緒に再生を開始します。

また、別のユーザーが何らかの理由で再生を一時停止した場合、コーディネーターはメディアセッションの一時停止アクションハンドラを呼び出します。

そうは言っても、私はいくつかの注意点を指摘したいと思います。

コーディネーターインターフェースは実験的なWeb APIであり、まだ標準化を経ておらず、そのプロセスはこのAPIを改善する可能性がありますが、APIのいくつかの側面は変更される可能性があります。

詳細については、W3CのメディアセッションのGitHubページをご覧ください。

このAPIは現在Safariでのみ実装されていますが、Safariがコーディネーターを実装するために使用するGroupActivitiesフレームワークは、他のMacブラウザで採用されることを望んでいます。

そして、最後の注意点は、ユーザーはSafariで既存のセッションに参加できますが、現在、GroupSessionはiPhone、iPad、またはmacOSアプリケーションから開始する必要があるということです。

では、コーディネーターのサポートを追加しましょう。

私が最初にしたいことは、セッションが利用可能になったら参加することです。

そこで、mediaSessionにコーディネーターチェンジイベントリスナーを追加します。

ハンドラで、mediaSession に null 以外のコーディネーター プロパティがある場合は、その join() 関数を呼び出します。

また、セッションで再生していることを示すために、コントロールにアイコンを追加したいと思います。

したがって、ハンドラでは、mediaSessionにコーディネータープロパティがあるかどうかに基づいて、アイコンを表示または非表示にします。

また、クリックイベントリスナーをアイコンに接続して、コーディネーターのleave（）を呼び出します。

次に、カスタムコントロールのイベントハンドラを変更して、コーディネーターの存在を確認し、コーディネーターがある場合は、代わりに適切なコーディネーター関数を呼び出します。

再生ボタン、一時停止ボタン、タイムラインスライダーに1つ追加します。

そして、それを実際に見てみましょう!

友達のサムから招待状をもらったので、それを受け入れるつもりです。

私のページは、サムがiPhoneで見ているのと同じコンテンツに読み込まれます。

そして、再生ボタンをクリックすると、サムのiPhoneと私のウェブページの両方が同時に再生し始めます。

アリー・フォックス:私たちがそこに着く方法は冒険です。

ディナ:私は怖いです。

アリー：そのように感じなければ、それは冒険ではないでしょう。

♪ < それは素晴らしかったです。

予告編が終わったので、サムはiPhoneを使って冒頭に戻します。

ユーザーは、iPhone、iPad、Apple TV、またはMacで実行されているSafariのいずれであっても、アプリケーションでお気に入りのコンテンツを一緒に見たり聞いたりすることを気に入ると思います。

そして、どこにいても、すべてのユーザーにその体験を提供できることを願っています。

GroupActivities APIの詳細については、「グループアクティビティでメディア再生を調整する」と「グループアクティビティの設計」のセッションから始めてください。

Safari 15で利用可能になる他の新しいウェブAPIに興味がある場合は、「高度なウェブコンテンツを開発する」というセッションを必ずチェックしてください。

来てくれてありがとう、WWDC21の残りの部分を楽しんでください。

♪