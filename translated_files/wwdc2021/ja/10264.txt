10264

こんにちは、私はニッキー・ブラウワーです。

私は鉛筆と紙のエンジニアです。

そして今日は、クイックノートを採用する方法を紹介します。

クイックノートは、iOSとmacOSでメモを取る機能を合理化するだけでなく、複数のアプリとウェブのコンテンツを1か所で接続することを目的とした、まったく新しいシステム全体のメモ作成体験です。

この機能により、人々はどこでも簡単にメモを表示でき、最良の部分は、すでに存在するAPIを使用することです: NSUserActivity。

それが聞き覚えがあるなら、それはHandoffのような他の機能に使われているからです。

今日は、クイックノートをライブで実際にお見せします。

システム上での仕組みと、NSUserActivityの採用方法について説明します。

最後に、あなたが最高の体験を創造できるように、いくつかのベストプラクティスについて説明します。

新しいクイックノート機能を紹介するために、Apple Fitness+を使用して体調を整えるための行動計画を踏むつもりです。

私はまだサインアップしていないし、行動計画なしではしたくない。

メモアプリに切り替える代わりに、鉛筆を使って画面の右下隅から上にスワイプして、まったく新しいクイックノートを作成して、始める準備ができたら、Appleのウェブサイトに私が知る必要があるすべての情報があることを覚えておくことができます。

クイックノートの上部に新しい追加リンクメニューもあり、このコンテンツに簡単に移動できるようにウェブサイトへのリンクを追加します。

ピクチャー・イン・ピクチャーと同様に、クイックノートウィンドウはデバイスの任意のコーナーに自由に移動できます。

また、ウィンドウをピンチしてデフォルトのサイズから最小サイズに拡大縮小し、最大サイズに拡大することもできます。

メモが終わったら、左上隅の「完了」ボタンを押すことができます。

しかし、まだ追加する必要があるものがあるので、UIを右にスワイプして画面の側面に隠します。

もちろん、ウェブサイトに加えて、アプリでも機能します。

マップを使って、HIITワークアウトを練習するのに最適な場所を見つけることができました。

隠したメモを取り出して、この場所をメモにも追加します。

描画するスペースを増やすには、クイックノートツールバーからノートアイコンをタップして、ノートアプリでノートにたどり着く。

ここでは、画像やリンクを描画する機能を利用します。

私がここに追加したリンクは、単なる古いリンクではありません。

確かに、それらをタップするとSafariやマップが表示されますが、今ではクイックノートの提案でこれらのアプリからメモに戻ることができます。

Apple Fitness+に関するサイトにアクセスすると、クイックノートの提案UIが右下隅に表示されます。

これをタップすると、すぐに元の場所に戻り、私の目標は週に4〜5回HIITトレーニングを行うことであるというメモを追加します。

iPadでここにメモを作成しましたが、Macとのクロスプラットフォームでも機能します。

Apple Fitness+に関するリンクにアクセスすると、クイックノートの提案UIも私のMacに表示されます。

それをクリックすると、メモアプリのメモに移動します。 メモに移動します。

クイックノートに出会ったので、それがどのように機能するかについて話しましょう。

NSUserActivityオブジェクトは、アプリの状態をキャプチャして後で使用する方法を提供します。

ユーザーアクティビティオブジェクトは、Webページの表示やアプリのコンテンツの表示など、何が起こっているかについて作成され、各アプリは現在のアクティビティをシステムに登録します。

その後、システムはこれらのアクティビティを取得し、Handoffなどの機能に送信します。

このシステムでピギーバックをリンクするクイックノート。

Handoff、Spotlight、Remindersに加えて、登録されたアクティビティもクイックノートに送信されます。

これは、リンクがリンクの追加メニューに表示される方法であり、クイックノートの提案をトリガーするものです。

NSUserActivityにはすでに、アプリのコンテンツをクイックノートにリンクするための耐久性のある識別子として機能する3つのプロパティがあります。

このエコシステムに参加するには、targetContentIdentifier、persistentIdentifier、およびwebpageURLの1つ以上のプロパティを設定する必要があります。

どちらを選択するかは、サポートしたい他の機能によって異なります。

targetContentIdentifierは、状態の復元中にも使用されます。

このプロパティは、iPadで動作するアプリのための素晴らしいマルチタスク体験を生み出します。

persistentIdentifierは、システムのSpotlightインデックスのアプリコンテンツを識別するためにも使用され、webpageURLはHandoff中のWebフォールバックにも使用されます。

クイックノートリンクが機能するためには、識別子が持つ必要があるいくつかのプロパティがあります。

それらは、そのコンテンツに対してユニークで、グローバルであるため、すべてのデバイスで動作し、時間の経過とともにそのコンテンツで機能するのに十分安定している必要があります。

アクティビティの一意でグローバルで安定した識別子を持つことで、クイックノートの提案が可能になります。

Apple Fitness+に関するウェブサイトに戻ると、クイックノートの提案UIが表示される理由は、1時間前または6ヶ月前に作成されたリンクの識別子がまだウェブサイトの識別子と一致しているからです。

NSUserActivityを採用するには、主に3つのステップがあります。アプリのInfo.plistでサポートされているアクティビティを宣言し、さまざまな時点で画面に表示される内容を説明するユーザーアクティビティを作成して登録し、アクティビティを継続するための着信リクエストを処理します。

これは、クイックノートのリンクまたは別のデバイスから来ている可能性があります。

Info.plistファイルのNSUserActivityTypesキーで、アプリがサポートするアクティビティタイプを宣言します。

システムは、そのキーの情報を使用して、アプリが特定のユーザーアクティビティオブジェクトを処理できるかどうかを判断します。

NSUserActivityオブジェクトを作成するには、plistで登録されたアクティビティタイプの文字列の1つを使用し、タイトルを設定します。

前述の3つの識別子のうち1つ以上を設定します。

これらの識別子のいずれかをクイックノートに使用できます。

この例では、あなたのアプリが状態復元のサポートにも関心のあるiPadアプリだとしましょう。

targetContentIdentifierを設定します。

アクティビティを継続するために必要なアプリ固有の状態情報を使用して、userInfoプロパティを設定します。

次に、それをレスポンダーに添付します。

現在のアプリのアクティビティを手動で管理してアクティビティを登録する代わりに、システムに処理してもらいましょう。

レスポンダにアクティビティを設定することで、オブジェクトはUIKitとAppKitによって管理されます。

NSUserActivityはクロスプラットフォームであるため、このコードはiOSとmacOSの両方で機能します。

最後のステップは、着信アクティビティの受信を処理し、アプリでその状態を復元することです。

リンクをタップすると、クイックノートはアプリを起動し、UIWindowSceneDelegateのシーン(willContinueUserActivityWithType)メソッドを呼び出します。

これは、アプリがアクティビティを受信しているというフィードバックを与えることができる場所です。

クイックノートは、シーン内のアプリにアクティビティを提供します(userActivityを続ける:)。

ここでは、ビューコントローラー、ビューを設定し、userInfo辞書を使用してアクティビティを復元および続行します。

Handoffの場合、デバイスが接続できない場合、システムはエラーメッセージを表示できるシーン(didFailToContinueUserActivityWithType)を呼び出します。

このメソッドはクイックノートには呼び出されませんが、NSUserActivityの包括的な採用のために実装するのに適しています。

macOSアプリの場合、アプリデリゲートに同等のアプリケーション(willContinueUserActivityWithType)、アプリケーション(continue userActivity)、およびアプリケーション(didFailToContinueUserActivityWithType)を実装します。

NSUserActivityの採用の詳細については、WWDC 2014のビデオ「iOS 8とOS Xでのハンドオフの採用」をご覧ください。

NSUserActivityは、他の多くの機能の基盤であるため、ゲートウェイです。

クイックノートに採用することで、これはあなたが得ることができる他のすべてです。

ハンドオフはデフォルトでオンになっていますが、他のものはオプトインされています。

アプリ内のドキュメントに関するリマインダーを作成したり、アプリのブログ投稿にスポットライトを表示したり、マルチウィンドウ処理を改善したりできるため、アプリはさらに強力になる可能性があります。

詳細については、最新のドキュメントと関連するWWDCビデオをご覧ください。

最後になりましたが、クイックノートにNSUserActivityを採用するためのベストプラクティスをいくつか確認しましょう。

私は4つの行動について説明し、これらのそれぞれについて、あなたのアプリにそれらを実装する理由と方法について話します。

Titleプロパティは、アクティビティの人間が読める文字列です。

これは、リンクの追加メニューに表示される文字列です。

そうは言っても、タイトルは内容の良い、説明的な表現を提供する必要があります。

一般的に、文書やアイテムのタイトルを直接使用することをお勧めします。

識別子がユニークでグローバルで安定しているのに役立つヒントがいくつかあります。

デバイス固有のデータの使用は避けてください。

この写真の識別子がローカルファイルパスの場合、リンクは作成されたデバイスでのみ機能することが保証されます。

セッションIDや特定の表示プロパティなどの一時的な情報は避けてください。

写真のタイトルは暗黙的に一意かもしれませんが、変更できる場合、このコンテンツに戻ろうとするときに存在する保証はありません。

写真にアプリの保存されたUUIDを使用するように、長期的に考えると、コンテンツが移動された場合でも、アプリはクイックノートリンクを復元できます。

URLはアプリコンテンツの一意の識別子にすることができますが、多くの場合、一時的な状態情報が含まれており、前述の識別子ガイドラインに違反しています。

クイックノートは、webpageURLよりもtargetContentIdentifierまたはpersistentIdentifierを好みます。

ガイドラインに従っている限り、webpageURLは使用しても問題ありません。

アプリが状態復元とSpotlightの両方にNSUserActivityを使用する場合は、targetContentIdentifierとpersistentIdentifierに同じ値を使用します。

アプリを補完するウェブサイトがある場合は、URLを2番目のフォールバック識別子として追加してください。

このようにして、アプリがインストールされていない場合、リンクを開くとウェブサイトにリダイレクトされます。

もう1つの重要な方法は、アプリの現在のNSUserActivityが最新であることを確認することです。

これは、起こっていることに追いつくことを意味します。

ベストプラクティスは、別の写真を表示するように選択するなど、アクティビティの変更を検出するときに、タイトルと識別子のプロパティを正確に保つことです。

アクティビティインスタンスを再利用することはお勧めできません。

新しい写真のような新しいコンテンツがある場合は、新しいアクティビティを作成します。

UIKitとAppKitが、サンプルコードで示したように、viewControllersやviewなどのレスポンダーにアクティビティを添付することで、現在のアプリアクティビティを処理させます。

レスポンダへのアタッチがアプリで機能しない場合は、適切なタイミングで becomeCurrent() と resignCurrent() を呼び出すことで、現在のアプリアクティビティを手動で管理できます。

たとえば、写真の表示が終了すると、アプリは現在のアクティビティで resignCurrent() を呼び出し、新しい写真が選択されると、アプリは新しいアクティビティで becomeCurrent() を呼び出します。

パフォーマンスを向上させるには、アクティビティの「needsSave」プロパティを活用してください。

アクティビティでは、アプリでアクティビティを適切に復元するために、特定のビュープロパティが必要になる場合があります。

例えば、地図を見るときの位置とズーム。

これらのプロパティはアクティビティと一緒に渡すことができますが、すべてのジェスチャーの後に更新するとオーバーヘッドがあります。

アクティビティを更新する代わりに、needsSaveをtrueに設定します。

システムがアクティビティをクイックノートリンクまたはハンドオフに送信する必要がある場合、デリゲートコールバックuserActivityWillSaveが呼び出され、アプリはオンデマンドですべてのプロパティを更新できます。

このコールバックは、アクティビティの復元に役立つプロパティを含むようにuserInfo辞書を更新できる場所です。

準備すべき互換性の問題がいくつかあります。

アプリが更新された場合はどうなりますか?

アプリからの2つのリンクでこのメモを取ってください。

リンクは、デバイス上のものよりも古いバージョンまたは新しいバージョンのアプリからのものである可能性があります。

完全に問題ありませんが、リンクはまだ機能する必要があります。

互換性処理の準備のために、アプリの以前のバージョンからのアクティビティの受信を処理するためのサポートがあり、新しいバージョンからアクティビティを受け取るときに優雅に失敗します。

これは、アクティビティをバージョン管理したり、キーの辞書を使用したり、キーが欠落したり、理解できないものを持っていることに寛容であることからサポートできます。

コンテンツがもう存在しない場合はどうなりますか?

アクティビティがリンクしたコンテンツは、削除または移動された可能性があります。

アプリに戻るときは、削除された場合はエラーメッセージが表示され、コンテンツが移動された場合はリダイレクトされます。

クイックノートを採用すると、アプリがこの新しいメモ取りシステムに接続されます。

人、コンテンツ、アプリ間の接続を改善するために設計されたシステム。

NSUserActivityを採用していることを確認してください。

今、既存のコードを再訪し、磨く絶好の機会です。

一意、グローバル、および安定した識別子を持っています。

そして、レスポンダーにアクティビティを設定して、システムがアプリの現在のNSUserActivityを管理できるようにします。

ご覧いただきありがとうございます。クイックノートとそれ以降であなたのアプリを見るのを楽しみにしています。

[パーカッシブミュージック]。