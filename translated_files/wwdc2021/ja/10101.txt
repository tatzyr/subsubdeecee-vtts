10101

こんにちは、「ReplayKitでローリングクリップを発見」へようこそ。

私の名前はアーネストで、ReplayKitチームのソフトウェアエンジニアです。

今日は、アプリケーションのハイライトをキャプチャする新しい方法を示すことに本当に興奮しています。

まず、ReplayKitの概要をお伝えします。

ReplayKitは、アプリケーションの画面とオーディオを録音できるフレームワークです。

人々が指導ビデオを作りたいとき、または単にゲームプレイを披露したいとき、アプリ内画面録画は、保存して友達と共有できるビデオを作成します。

そして、人々が作成するビデオコンテンツをもっとコントロールしたい場合はどうなりますか?

フィルターやオーバーレイを追加したい場合があります。

アプリ内スクリーンキャプチャでこれを行うことができます。

アプリ内画面キャプチャは、オーディオとビデオのサンプルをアプリケーションプロセスに直接提供するため、作成中のコンテンツを完全に制御できます。

そして、私たちは皆、ゲームをプレイする次の最高のことは、ゲームプレイをライブで見ることであることを知っています。

アプリ内放送により、アプリケーションをサードパーティの放送サービスに簡単にストリーミングし、世界中で視聴できます。

現在の記録機能はさまざまなユースケースをカバーしていますが、現在カバーしていないものもあります。

だから、あなたのプレイヤーがすべての敵と戦い、あなたのゲームのレベルへの鍵のロックを解除したと想像してみてください、そして今、彼らはその瞬間を友達と共有したいと思っています。

しかし、このレベルをプレイするのは初めてなので、彼らは何かエキサイティングなことが起こることを知らなかったし、その瞬間を捉えることができなかった。

現在、プレイヤーは記憶に残るハイライトをすべて保存するために、ゲームプレイ全体を記録する必要があります。

これにより、大きな録音が発生し、多くのスペースを占有するだけでなく、短いクリップにトリミングする時間が必要になります。

すべてのハイライトがちょうど起こったときに記録できたら、それは素晴らしいことではないでしょうか？

あるいは、さらに良いことに、ReplayKitがあなたのためにこれを行い、各瞬間のビデオクリップを提供したらどうなりますか?

今年は、私たちが取り組んでいる新機能、クリップ録画を紹介できることを嬉しく思います。

クリップの録音は、オーディオとビデオのサンプルのローリングバッファを保持します。

クリップのエクスポートが呼び出されると、最大15秒前のサンプルを短いビデオクリップにエクスポートできます。

だから今、いつ録音を開始するかを知る代わりに、いつエクスポートするかを知る必要があります。

ビデオクリップをエクスポートする方法はいくつかあります。

アプリケーションにUIボタンやゲームコントローラーのサポートを追加できるので、クリップをキャプチャするタイミングを手動で制御できます。

ボタンをタップするだけで、必要なときに正確にクリップを取得できます。

また、クリップを自動的にキャプチャするトリガーをアプリケーションに追加することもできます。

これにより、彼らが完璧なコンボを得たり、最終的なボスを倒したり、最高のスピードランに勝ったりするとき、あなたはいつもそれらのエキサイティングな瞬間をキャプチャします。

また、これらすべてのクリップを使用すると、パーソナライズされたユーザーエクスペリエンスを作成できます。

録画のコレクションに開くカスタムオーバーレイを追加したり、プレイヤーが見て共有できるように、レベルの終わりにキャプチャされたすべてのクリップを含むハイライトリールを提示することもできます。

クリップの録画はiOSとmacOSで利用可能で、既存の録画、キャプチャ、ブロードキャストAPIと並ぶ強力な機能です。

他の機能と同様に、クリップの録画は、同じHD品質、低パフォーマンスの影響、および組み込みのプライバシー保護を提供します。

クリップの録画はボンネットの下でどのように機能しますか?

見てみましょう。 

クリップの録画には、開始、停止、エクスポートの3つのAPIが含まれています。

クリップバッファリングを開始するには、アプリケーションがRPScreenRecorderを呼び込んでsharedRecorderシングルトンインスタンスを取得する必要があります。

共有インスタンスを使用すると、startClipBuffering APIを呼び出すことができます。

その時点で、ReplayKitはアプリケーションの画面とオーディオサンプルをローリングバッファに保存します。

ReplayKitが新しいサンプルを受け取るたびに、15秒より古いサンプルは破棄されます。

ローリングバッファが起動した後、ReplayKitはアプリケーションがエクスポートするように指示するのを待ちます。

アプリケーションがエクスポートクリップAPIを呼び出すと、ReplayKitは残りを処理し、その瞬間のビデオクリップを返します。

ローリングバッファが不要になった場合、またはアプリ内ブロードキャストなどの別のReplayKit機能を使用する場合は、停止APIを呼び出すことができ、ReplayKitはセッションを破棄します。

この情報を念頭に置いて、新しいクリップAPIを実装するサンプルプロジェクトをお見せしましょう。

あなたはすでに昨年のセッションからこのサンプルプロジェクトに精通しているかもしれません。

更新されたサンプルプロジェクトには、クリップのコードが含まれるようになりました。

このコードを見てみましょう。 では、

他のレコーディングセッションと同様に、メインストーリーボードの「クリップの開始」ボタンに関連付けられたIBActionがあります。

このボタンは、まだアクティブでない場合はクリップバッファリングを開始し、アクティブの場合はクリップバッファリングを停止するために使用されます。

では、クリップバッファリングを開始すると何が起こるかを見てみましょう。

クリップバッファリングを開始するコードは次のとおりです。

RPScreenRecorderから共有レコーダーインスタンスを取得し、完了ハンドラでstartClipBufferingを呼び出します。

ここでは、完了ハンドラ内で、UIの更新など、起動時に発生したエラーを処理する必要があります。

エラーがない場合は、UIを更新して、録画が現在アクティブであることを示す必要があります。

開始と同様に、サンプルプロジェクトにはストップクリップバッファリング方法があります。

ここで共有インスタンスを取得しますが、今回はstopClipBuffering APIを呼び出します。

完了ハンドラでは、停止中に発生したエラーを処理する必要があり、UIを更新して、録画していないことを示す必要があります。

クリップバッファリングの開始と停止のコードを確認したので、クリップをエクスポートするために必要なコードを見てみましょう。

これは、「クリップのエクスポート」ボタンに関連付けられたIBActionのコードです。

このアクションは、人がクリップを生成することを決定したときにトリガーされます。

このアプローチに制限されず、独自のアプリケーショントリガーに基づいてクリップを自動的にエクスポートする可能性があることを覚えておいてください。

ここで、積極的に録画していて、以前のstartClipBufferingメソッドからボタンが有効になっている場合、exportClip関数が呼び出されます。

exportClip APIを呼び出すには、URLとクリップの継続時間を指定する必要があります。

開始APIと停止APIと同様に、完了ハンドラーのエラーを処理します。

エラーがない場合は、指定されたURLにクリップがあるはずです。

クリップにアクセスすると、独自のユーザーエクスペリエンスを構築して整理できます。

ここの私のサンプルコードでは、クリップは単に写真に保存されます。

そして、それだけです!

これら3つのAPIを使用すると、アプリケーションに録画するクリップを追加できるようになりました。

指定されたURLのクリップに直接アクセスできるため、独自のアプリ内体験を構築できます。

前述のように、クリップを取得するもう1つの方法は、ゲームコントローラーのサポートを追加することです。

ゲームコントローラーのフレームワークには、クリップの録画が組み込まれます。

ゲームコントローラーからエクスポートされたクリップは、写真またはデスクトップに直接保存されることに注意してください。

したがって、生成されたクリップで独自のアプリ内体験を作成するには、ReplayKitクリップAPIを実装する必要があります。

ReplayKitとゲームコントローラーフレームワークの両方を統合する場合は、RPScreenRecorderで利用可能なプロパティと記録プロパティの両方にキー値観察を使用していることを確認することをお勧めします。

また、必要に応じてアプリケーションの状態を更新できるように、必ずプロトコルRPScreenRecorderDelegateに従ってください。

そして、クリップ録画をアプリケーションに統合するのは簡単です。

クリップの録画により、アプリケーションはエキサイティングな瞬間をすべてキャプチャする準備が整います。

あなたが作成するすべてのクリップと新しいユーザーエクスペリエンスを見るのを楽しみにしています。

私たちのセッションをご覧いただきありがとうございます。

素晴らしいWWDCをお過ごしください。

[パーカッシブミュージック]。