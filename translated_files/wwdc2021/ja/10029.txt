10029

♪ ♪

こんにちは、私はジェン・シモンズです。

そして、私は新しいSafariがウェブデザインと開発にどのように影響するかについて話すためにここにいます。

あなたがウェブデザイナー、ウェブ開発者、またはウェブサイトやウェブアプリの作成に関わる役割を持っているなら、このセッションはあなたのためです。

今年はサファリにとって大きな年です。

このセッションでは、Safariの変更によるビジュアルまたはインタラクションデザインへの影響に焦点を当てます。

Safariはまったく新しいデザインです。

デフォルトでは、あなたのウェブサイトは素晴らしく見えますが、あなたが余分なマイルを行きたいなら、このセッションは、新しいSafariであなたの仕事を本当に輝かせることができます。

macOS、iOS、iPadOSの素晴らしい新機能のいくつかと、それらがウェブにどのような影響を与えるかについて話します。

私のお気に入りである新しいアスペクト比プロパティを含む、CSSの新機能について説明します。

そして、フォームコントロール、新しく実装したコントロール、そしてiOSとiPadOSのフォームの全く新しい外観を見ていきます。

ブラウザ自体のデザインから始めましょう。

ウェブブラウザの進化の非常に早い時期から、私たちが使用したブラウザのほとんどは、いくつかの基本的な共通点を持っていました。

上部には非常に背の高いツールバーがあり、独自の行にあるURL用のスロットがあります。

そして、ウェブサイトはこのスペース、ウェブへのこのポータル、ビューポートの中にとどまります。

もちろん、ユーザーとして、私たちは使用しているウェブサイトにすべての焦点を当てるように自分自身を訓練してきましたが、何年もの間、ブラウザ自体は強い視覚的な存在感を維持してきました。

いいえ、ウェブサイトがどのように見た目と感触に設計されていても、ブラウザインターフェイスはそのデザインをフレーム化し、それを支配しました。

そのフレームを取り除き、ウェブサイトのデザインをウィンドウのあらゆる端に拡張できたらどうでしょうか?

まあ、それは私たちがSafari 15でやったことです。

今年、私たちは知っているブラウジング体験を再考しました。

私たちはウェブコンテンツに重点を置いています。

新しいSafariは、背景色を変更することで、タブバーを各ウェブサイトにブレンドします。

インターフェイス全体が1つの行にあり、必要に応じて物事が自然に表示されます。

これにより、コンテンツがより広範に感じることができます。

各WebページまたはWebアプリが引き継ぎ、ウィンドウの4つのエッジすべてに拡張します。

ブラウザのインターフェースはコンテンツに屈します。

では、ツールバーの背景にどの色を使用するかを決定するものは何ですか?

ウェブデザイナーまたは開発者として、HTMLに選択する色とコードを選択できます。

色を指定しないサイトの場合、Safariは使用する色を見つけます。

Safariはウェブページの背景色と一致することがあります。

他の時には、ヘッダーの背景と一致します。

ツールバーの色を選択するには、name=「theme-color」のメタタグを使用してHTMLヘッドに入れ、content属性を使用して色を指定します。

この情報をHTMLヘッドに提供することで、Safariはページの読み込み時にすぐに取得します。

それはまた、宣言的なコードです。

使い方はとても簡単です。

2色を設定することで、ライトモードとダークモードの両方をサポートできます。

はい、メタタグにメディア属性を追加できるようになりました。

この場合、最初のメタタグのmedia=「(prefers-color-scheme: light)」、2番目のメタタグの「(prefers-color-scheme: dark)」。

これは、この春に提案したHTML仕様への新しい追加です。

これは、ユーザーが要求した配色にフックするシンプルで堅牢な方法を提供します。

Name=「テーマカラー」をサポートしているが、メタタグのメディア属性の使用をまだサポートしていないブラウザでは、これらのブラウザは最初のテーマカラー宣言を使用し、残りを無視します。

だから、CSSで行うように、最後ではなく、フォールバックを最初に置いてください。

サイトにダークモードの全体的なデザインがなくても、デバイスがダークモードのときにタブバーに独自の色を設定することをお勧めします。

指定した色が明るすぎる場合、Safariはユーザーが要求したダークモード体験を提供するために調整を行います。

HTMLヘッドでテーマの色を定義する代わりに、ウェブマニフェストファイルで定義できます。

両方の場所で指定すると、HTMLヘッドの色が使用されます。

そして現在、2021年6月には、ウェブマニフェストファイルでライトモードとダークモードの複数の色を定義する方法はまだありません。

今、それを理解するためにワーキンググループで議論が行われています。

Safariが適用しない色の非常に狭い範囲もあります - 色は、本当に、それは完全にユーザーエクスペリエンスの邪魔になり、おそらくアクセスできなくなります。

これらのために、Safariはここのように何か他のことを行い、このサイトのタブバーを白に変更します。

選択した色が機能していないように見える場合は、少し調整してみてください。

必要に応じて、ウェブサイトの異なる部分でテーマの色を異なるように設定できます。

それぞれの別々のHTMLページには独自の頭があります。

または、JavaScriptを使用して、ユーザーの行動に反応してテーマの色を動的に交換することもできます。

デザインがタブバーをサイトにシームレスに融合させる方法を考えてください。

それが、macOSのSafari 15とiPadOSとiOS 15のSafariで、ウィンドウ全体を埋めるウェブサイトやウェブアプリの感覚を作り出す方法です。

次に、あなたのウェブサイトを本当に次のレベルに引き上げるためにできる他の2つの小さな調整を見てみましょう。

私たちの多くは、作業中にウェブブラウザで多くのタブを開いています。

新しいSafariは、これらのタブをグループにまとめる直感的な方法を提供します。

私はこれが本当に好きです。

私は仕事のプロジェクトを別々のグループに整理し、それぞれに好きな名前を付けて、それらを片付けることができます。

タブグループはmacOS、iOS、iPadOS間で同期されるため、後でどのデバイスでもそれらのタブをリロードできることを知って、私が取り組んでいないことを置きます。

タブグループはタブバーを整理する機能を提供しますが、1つのウィンドウで多くのタブを開くことは可能です。

タブがたくさんある場合、ファビコンは、どのタブがどのタブであるかを簡単に識別するためにかなり重要になります。

高解像度デバイスをサポートするサイトに素晴らしいアイコンを提供することを確認する必要があります。 高解像度デバイスをサポートします。

透明な背景を持つファビコンは特に素晴らしく見えます。

ところで、多くのチームは自動ツールを使用して、さまざまなサイズと形式のアイコンを生成し、幅広いデバイスをサポートしています。

多くの場合、このようなツールは、HTMLヘッドのアイコンコードとともにテーマの色を指定するコードを生成します。

または、CMSやフロントエンドフレームワークがテーマカラーを定義していて、それに気づいていなかったのかもしれません。

チェックして見てください。

その色をテストし、それがあなたのサイトのデザインに良いものかどうかを確認し、おそらくより良いものに変更します。

ほとんどの人が新しいタブバーを見ると、すべてのタブが1行に表示されます。

ウェブサイトを作る人として、おそらくサイトがブラウザウィンドウに読み込まれると、そのサイトのタブにドメイン名が表示されることに気付くでしょう。

また、サイトがバックグラウンドタブにある場合、Webページのタイトルは表示されるもので、HTMLヘッドのタイトルタグのテキストです。

ページタイトルのスペースは制限される可能性があるため、Webページタイトルの思慮深いパターンを作成することが重要です。

タイトルがポイントに到達するのが早ければ早いほど、ユーザーは必要なタブを見つけやすくなります。

一部のサイトでは、ウェブサイトの名前を最初に、ページの名前を2番目に置きます。

代わりに、コンテンツのタイトルを最初に置きます。

そうすれば、誰かがあなたのサイトを複数のタブで開いている場合、どのタブがどのタブであるかを見分けるのが簡単です。

タブバーの色、ファビコン、ページタイトルはすべて、意図的にデザインするサイトの一部です。

それらはウェブページ自体には表示されませんが、あなたのウェブサイトやウェブアプリの誰かの経験に深く影響します。

テーマカラーメタタグの力を活用する方法の詳細を示すために、ここにマイルズがあります。

こんにちは、私はマイルズです。

そして、私はWWDC中に犬のビデオをストリーミングできるウェブサイトであるDog Dog DCに取り組んでいます。

ここでは、Safariでマギーのストリームを見ることができます。

彼女はとても幸せそうに見えます!

今のところ一時停止してストリームを始めましたが、少しだけ一時停止を解除します。

グッドキャッチ。

そして、ドッグドッグDCの右側では、マギーがどれほど優れているかを表現するためにリアルタイムでコメントすることができます。

さて、Safariウィンドウの上部にあるSafari 15は、タブバーを黒く色付けしています。これは実際には私のページの背景色です。

下部の中央のコンテンツ領域の背景として黒い色が使用されていることがわかります。

そして、その黒い色はタブバーに似合います。

窓全体が全体的で一貫性のあるデザインのように見えます。

また、タブバーで、Safariが私のページが安全ではないと言及していることがわかります。これは私の開発環境であるため、私は期待しています。

今、私たちはまた、ウェブサイトの上部に浮遊ブルーのバーを持っています。それはタブバーに拡張された本当に素晴らしく見えるでしょう。

だから、ここのエディタでソースコードに入ると...

この美しい青色に合わせて、Safariが自動的に発見した黒い色を上書きできます。

このメタタグを追加して、その青い色をタブバーに拡張します。

その後、リロードして、それがどのように見えるかを確認します。

それはかなり良さそうですが、私たちはDog Dog DCを、上部に水平の灰色のニュースレターバーを含むように設計しました。これは実際に上部のタブバーに色の流れを少し中断します。

途切れないキャンバスを得るために、背景色ではなく、別の方法でニュースレターバーを表示しましょう。

うーん。

私は後でそれで遊び続けます。

とりあえず、ニュースレターバーを削除します。

うわー、それは今素晴らしく見えます。

色は途切れず、Safari 15で本当に輝いています。

そしてもちろん、同じ効果はiPadOSでも効果的です。

わかった。

今、私は一日中ここに座ってマギーを見ることができましたが、私が本当にしたいのは、彼女の正面と中央を持ってきて、彼女とチャットエリア以外のすべてを暗くすることです。なぜなら、私はそれらのdoggoのコメントを真剣に受け止めているからです。

もちろん、このシアターモードボタンをタップします。

でも待って。

シアターモードに入ると、タブバーはまだカラフルです。

シアターモードに入るときにテーマの色を更新すると、シアターモードが少し良くなります。

さて、私たちはここで私のJavaScriptでそれを修正することができます。

以前、ジェンは、メタ要素自体でメディアクエリを使用して、ダークモードなどの環境の変化に自動的に反応する方法を示しました。

ただし、ページ自体によって開始された変更については、JavaScriptを使用してより積極的な方法でこれを行うことができ、シアターモードに入るときに標準のJavaScriptを使用してメタ要素自体を変更するだけです。

そしてもちろん、シアターモードを終了するときに要素をリセットすることを忘れることはできません。

それが今どのように見えるか見てみましょう。

完璧。そして、私たちはそこに行きます。

それはとても良く見えます。

今、私は本当にマギーに集中することができます。

戻るよ、ジェン。

ドッグドッグDC。

オンラインになったら、必ずそのサイトを訪問するよ、マイルズ。

ありがとう。

私は、これがウェブデザイナーが人々のウェブの本能的な経験に影響を与える別の方法を開く方法が本当に好きです。

では、iOSで何が起こっているのかをもう少し深く掘り下げてみましょう。

テーマの色もここで使用され、上部で、センサーハウジングを包み込み、WebページまたはWebアプリが画面全体を埋めます。

また、タブバーを画面の下部に移動したことにも気付くでしょう。

これにより、ユーザーの親指の下に直接配置され、特に携帯電話を片手で使用している場合は、手が届きやすくなります。

タブバーを横にスワイプして、タブを切り替えます。

そして、上にスワイプしてすべてのタブのグリッドを表示し、タブグループにアクセスします。

ユーザーがWebページをスクロールすると、タブバーは最下部のドメイン名だけに最小化され、人々がどこにいるかを認識できるようにします。

ページを元に戻すと、展開されたタブバーが再び表示されます。

これはすべて、あなたが作るウェブサイトやウェブアプリがショーの輝くスターであることを意味します。

しかし、ページの下部に何か重要なものを構築し、それが新しいタブバーによって隠されている場合はどうなりますか?

これは、CSSで環境変数を使用して、十分なパディング、マージン、グリッドトラック、またはレイアウトコードを書くようにしたい場所です。

環境変数を使用して、タブバーの影響を受けるUIやコンテンツが邪魔にならないようにすることができます。

では、環境変数とは何ですか?

これは、ブラウザによって提供される動的な測定です。

ご覧のとおり、緑はセーフエリアと呼ばれるものです。

タブバーが下部で展開されると、セーフエリアはその上から始まります。

タブバーが最小化されると、セーフエリアの寸法が変わります。

Env(safe-area-inset-bottom)は、セーフエリアからビューポートの下部までのピクセル数の測定値です。

これは、CSSカスタムプロパティのvar関数によく似ています。

たとえば、カスタムプロパティを使用して、すべての色を変数に変換したことがあるかもしれません。

この変数を定義する代わりに、ブラウザがそれを定義します。

環境に関する情報を提供しています。それは環境に関する情報を提供しています。

そして、その長さ測定は、計算内を含め、コード内の任意の場所で使用できます。

ここでは、私のフッターは位置です:私の2つのリンクをフッターの端から遠ざけるためにいくつかのパディングで粘着性があります。

1rem + env(safe-area-inset-bottom)のパディングボトムを定義しました。

多くの文脈では、それは1rem + 0になります。

iOSでは、1レムとタブバーをクリアするために必要な距離になります。

安全領域の端からビューポートの端までの測定を提供する4つの環境変数があります。env(safe-area-inset-top)、-right、-bottom、-leftです。

これらの環境変数はSafariだけでは機能しません。

それらはCSS仕様で定義されており、さまざまなブラウザ、デバイス、オペレーティングシステムで動作します。

垂直方向の調整を行う場合は、環境変数を使用するアクションを実行する必要があります。

Safariはデフォルトでコンテンツを移動しようとしません。

しかし、iPhoneを横に回転させると、動作が少し異なります。

センサーハウジングと画面の丸いエッジを避けるために定義された安全な領域もあります。

デフォルトでは、Safariは自動的にウェブコンテンツを左右の端から移動し、セーフエリアに入れます。

なぜだろうと疑問に思うかもしれません。

代わりに、Safariがすべてのサイトを左右の端に拡張すると、コンテンツが失われる可能性があります。

ここでは、テキストは隠蔽されています。

そして、それは使いやすさに悪いです。

データの損失を防ぐために、Safariは、サイトがwidth=device-widthのメタビューポートタグを使用している場合を含め、コンテンツをセーフエリアにスクートします。これは、レスポンシブWebデザインで一般的に使用されるメタタグです。

しかし、もちろん、私はこのデザインをより良く見せたいです。

紫色のヘッダーと写真を画面の端まで伸ばしたいです。

メタビューポートタグをviewport-fit=coverに変更することで、ブラウザにコンテンツを左右に拡張してほしいとSafariに通知できます。

今、私はレイアウトが機能することを確認する責任があります。

環境変数を使用して、コンテンツが完全に表示されるようにします。

ヘッダーテキストと段落テキストにenv(safe-area-inset-left)の左余白を定義できます。

安全なエリアの挿入と環境変数の詳細については、このセッションのメモにリンクされているWebKitブログの記事「iPhone X用のWebサイトの設計」をチェックしてください。

マイルズに行って、環境変数がどのように機能するかを見てみましょう。

では、iPhoneのSafariでDog Dog DCがどのように見えるか見てみましょう。

私のiPhoneでは、以前と同じようにマギーを見ることができますが、今回は小さなデバイスで見ることができます。

でも待って。問題があるようです。 

ユーザーがチャットエリアをスクロールすると、入力エリアがタブバーと重なります。

Dog Dog DCは、明示的にvhユニットを使用して上から下にサイズを測り、明示的にビューポート全体のサイズを正確に取得し、タブバーと共有しています。

ユーザーとして、私はスクロールしてタブバーを最小化することができ、それはかなり簡単です。

しかし、開発者として、ユーザーがスクロールしても可能な限り最高の体験をできるようにしたいと考えています。

幸いなことに、セーフエリアインセットを使用して、入力エリアを適切な量移動できます。

私がしなければならないのは、ボトムパディングを追加し、セーフエリアインセットボトムに設定することだけです。

その後、ウェブページをリロードするだけです。

私は実際にSafari 15のお気に入りの新機能の1つを使用しました:プルしてリフレッシュします。

うーん。

それは私が欲しいものにかなり近いですが、今は少し高すぎるように見えます。

ああ、問題が見えます。

入力領域にボトムパディングを与えましたが、すでにボトムマージンがあり、これら2つは垂直に積み重ねられます。

したがって、代わりにセーフエリアインセットを使用するには、既存のマージンを更新する必要があるようです。

これらのスタイルをもう一度調整して、それが今どのように見えるか見てみましょう。

完璧。

これは実際に環境変数の力を示しています。

それらはあなたのスタイルの任意の長さに適用できます。

境界線、余白、パディング、行の高さなど、何でも使用できます。

タブバーが最小化され、展開されると、環境変数の値が自動的に更新され、Safariは自動的に新しい値でページを再レイアウトします。

また、Dog Dog DCでは、チャットエリアがタブバーが展開されたときにサイズが変更される領域であることがわかります。

その上のすべてが同じサイズのままですが、その下のすべてがタブバーを抱きしめます。

これは、この種の動作が非常に自然で簡単に作成できるFlexboxレイアウトを使用しているためです。

Flexboxやグリッドのようなこれらのより現代的なレイアウトモードをまだ使い始めていない場合は、今が彼らに別の外観を与えるのに最適な時期です。

次に、Safari 15のいくつかの素晴らしい機能についてジェンから聞いてみましょう。

ありがとう、マイルズ。

環境変数は、誰かが使用しているデバイスに動的に応答するレイアウトを作成するためのもう1つの強力なツールです。

また、誰かがホーム画面アプリとして保存したときにウェブサイトがどのように見えるかを見てみましょう。

タップするだけで、このサイトをホーム画面に保存できます。

今、私のサイトのアイコンは私のホーム画面にあります。

それをタップすると、サイトがホーム画面アプリとして開いているのを見ることができます。

それは素晴らしく見えます。

テーマの色は、Safariと同じように、画面の上部を塗りつぶします。

私はアプリのような経験を得ます。

下部にタブバーがないことに気付くでしょう。

私たちはSafariアプリにいません。

私たちはレジリエントウェブデザインアプリにいます。

だから、それが新しいSafariであり、あなたのウェブサイトが素晴らしく見えるようにする方法です。

次に、macOS、iOS、iPadOSの驚くべき新機能のいくつかと、それらがウェブにどのように影響するかについて話しましょう。

多くの場合、人々があなたのウェブサイトについて経験する最初の経験は、ある人がメッセージで別の人へのリンクを送信するときのように、他の誰かがそれについて彼らに話すときです。

これが起こるたびに、サイトは単純なリッチリンクとして表示されます。

これらのリッチリンクの仕組みは、iOS、iPad OS、macOSで一貫しています。

そして今年、Shared with Youでは、人々がウェブコンテンツを互いに共有するための多くの新しい場所と多くの新しい方法を追加しました。

これらは2つだけです。

リッチリンクで提示されたときに、サイトが幻想的に見えるように時間をかけて確認したいと思うでしょう。

デフォルトでは、他に何もなければ、リッチリンクはウェブページのタイトル、サイトのURL、およびファビコンをピックアップし、それらを簡単な方法で表示します。

オープングラフプロトコルで定義された名前を持つメタタグを介して、HTMLヘッドのメタデータに追加することで、これを改善できます。

ウェブページのタイトルよりも、この文脈に少し良いタイトルを指定しましょう。

そして、表示するグラフィックを指定します。

この画像は、このページのコンテンツのヒーロー画像のように、この特定のウェブページのものにしたいと考えています。

よろしければ、ビデオも提供できます。

ユーザーが許可すれば、ビデオは静かに自動再生され、それをタップして音を聞くことができます。

詳細については、developer.apple.comの短いビデオ「美しいリッチリンクを確保する」で詳しく知ることができます。

リッチリンクをカスタマイズすることは、人々があなたのウェブサイトやウェブアプリで素晴らしい経験を持つことを保証するもう一つの詳細です。

次に、ビジュアルインテリジェンスとウェブを見てみましょう。 

ウェブ上の非常に多くのテキストが画像の中で立ち往生しています。

Safari 15から、ビジュアルインテリジェンスを使用してそのテキストを解放しています。

今では、人々はウェブページ上の他のテキストと同じように、それを直接操作することができます。

これは、テキストでいっぱいのTwitterの画像です。

その上にカーソルを合わせると、マウスポインタがカーソルに変わるのが見えますか?

これで、他のテキストと同じように、このテキストをドラッグしてコピーすることができます。

macOS Montereyで画像にカーソルを合わせるか、iOSまたはiPadOS 15で画像をタッチすると、ビジュアルインテリジェンスは、その画像内のすべてのテキストをすばやく見つけて認識します。

ビジュアルインテリジェンスがテキストを見つけたら、選択してコピーできるだけでなく、他のテキストと同じように、検索したり、翻訳したり、そのフレーズでウェブを検索したり、テキストを共有したり、聞いたりすることができます。

ビジュアルインテリジェンスが見つけたテキストは、ウェブページの一部になり、ウェブページの一部にはなりません。

テキストは画像内のShadow DOMに注入されます。つまり、JavaScriptの影響を受けません。

しかし、それはzオーダーの影響を受けます。

したがって、透明なボックスなど、画像にオーバーレイするものがある場合、視覚的知性は下の画像内のテキストを見つけることができません。

上のレイヤーが邪魔になります。

ビジュアルインテリジェンスをVoiceOverなどの支援技術に統合し、画像に閉じ込められたテキストをより多くの人々が利用できるようにしました。

しかし、それはこの機能が現在のアクセシビリティのベストプラクティスを変更するという意味ではありません。

もちろん、主にテキストで構成されるウェブ上のコンテンツは、HTMLのテキストとしてウェブ上に置く必要があり、必要に応じてルックアンドフィールを与えるためにウェブフォントでスタイル設定する必要がありますが、テキストコンテンツとして。

これはまだベストプラクティスです。

写真、イラスト、またはその他の画像であるコンテンツの場合、ベストプラクティスは、画像要素の属性として代替テキストを含めることです。

偉大な代替テキストは、人間だけが説明できる種類の意味と文脈を提供します。

さらに、すべてのブラウザが視覚的な知性を持っているわけではないので、あなたのウェブサイト上の画像が有用な代替テキストを持っていることを確認してください。

そうは言っても、今まで、どこか他の場所で引用するために読んだり、再入力したりすることができなければならなかったテキストにアクセスできるのはかなり素晴らしいことです。

次に、昨年WebKitに実装されたCSSを見てみましょう。 昨年はWebKitで実装されています。

まず、アスペクト比。

アスペクト比は、任意の要素の優先アスペクト比を設定できる新しいCSSプロパティです。

しかし、「好ましいアスペクト比を設定する」とはどういう意味ですか?

さて、まず、自然なアスペクト比を持つウェブ上のコンテンツの種類を見てみましょう。

画像は良い例です。

マギーの画像は、高さの2倍の幅があるとしましょう。

その画像のアスペクト比は2:1です。

この画像をWebページに置き、幅：100%と高さ：自動、古典的なレスポンシブウェブデザイン技術を追加して柔軟にします。

画像は自然なアスペクト比であるため、高さは幅と直接関係して自動的に変化します。

この写真は常に高さの2倍の幅で、マギーはいつも本当によく見えます。

この種の行動はとても期待されているので、私たちはもうほとんどそれを見ていません。

これはまさに画像の仕組みです。

ビデオは、ビデオ要素を使用してページのHTMLに入れると同じように機能します。

ビデオファイルには自然なアスペクト比もあります。

そして、ビデオ要素は、ページレイアウトを計算する際に、そのアスペクト比をブラウザに伝えます。

しかし、すべてのコンテンツが自然なアスペクト比を持っているわけではありません。

ここでは、記事の要素があります。

中には、見出しと段落があります。

デフォルトでは、記事要素の幅はauto、高さはautoです。

この書き込みモードでは、自動の幅は、利用可能なスペースの100%を占めるように記事を伸ばしてください。

高さオートとは、ビュー内にあるすべてのコンテンツに収まるのに十分な高さであり、背が高くないことを意味します。

テキストの列が狭くなると、テキストがより頻繁にラップされ、より多くの垂直スペースを占有する方法がわかります。

列が広くなると、テキストはリフローし、垂直方向のスペースが少なくなります。

私のボックスの高さは、アスペクト比に関係なく、短すぎず、背が高すぎず、テキストコンテンツに合わせて調整されています。

ウェブの歴史のほとんどで、これはレイアウトがどのように機能したかです。

正方形を使用したり、箱を作ったりすることに関するグラフィックデザインのアイデアは、それらのデザインのアイデアは、まあ、彼らは「いいえ!ウェブはそのようには機能しません!今まで。

これで、CSSを書いて、そうでなければ持っていない要素の優先アスペクト比を定義することができます。

アスペクト比：1 / 1をコードに追加しましょう。これは、これが終わる幅が何であれ、それを1つの単位と考え、高さも1つの単位にします。これは正方形にしてください。

その正方形を維持するために、高さは以前よりも大きくなります。

しかし、その正方形の中に収まるコンテンツが多すぎるとどうなりますか?

デフォルトでは、ボックスは自動的に背が高くなります。

1行のコードで、コンテンツがボックスの1つで長い場合、そのボックスがオーバーフローを防ぐために成長することを知って、特定のアスペクト比を持つ正方形のセットまたは任意の形状ボックスを作成することができます。

アスペクト比を常に遵守させたい場合は、オーバーフローを引き起こしたとしても、コードに0の最小高さを追加できます。

おそらく、オーバーフローを追加するなど、別の方法でオーバーフローを処理したい:スクロール。

さて、私はこの正方形を1/1にする値を書いています。

しかし、私は代わりにこれをアスペクト比として書くことができます：1

番号が1つしかない場合、ブラウザは「1以上」とみなします。実際、小数を使うなど、同じアスペクト比を表現する方法はたくさんあります。

これにより、映画やテレビ、アートやデザインなどの他の業界から慣れ親しんだ方法でアスペクト比を書く自由が得られます。

過去10年間、建築、絵画、ブックデザイン、モダンなプリントデザインにおいて、人間の文化全体に深く意味のある場所を持っていたにもかかわらず、ウェブ上でこれらの比率を使用することはかなり不可能でした。

これで、これらの比率を使用してレイアウトを構築できます。

特に、アスペクト比とCSSグリッドを組み合わせると、あらゆる種類の新しいデザインの可能性が開かれます。

映画とビデオといえば、アスペクト比の非常に一般的なユースケースの1つは、サードパーティのサービスからの埋め込みビデオです。

YouTube、Vimeo、Wistia、または多くのビデオホスティングプロバイダーのいずれかを使用している場合は、ビデオを埋め込むためのiFrameを提供します。

iFrame要素は、自然なアスペクト比を持つ要素ではありません。

レスポンシブウェブデザインが登場したとき、私たちは埋め込みビデオを柔軟にしたかったのですが、トラブルに遭遇しました。

私たちは、CSSで紛らわしいパディングハックを使用するか、JavaScriptを使用してビデオのサイズを変更するかのどちらかで立ち往生しています。

これで、そのiFrameに好ましいアスペクト比を与えるために1行のCSSを追加することができます。

それは非常に一般的な問題に対する非常にエレガントな解決策です。

アスペクト比:それは私たちが望むレイアウトを作成するための別の強力なツールを提供します。

次に、フレックスギャップ。

今年のSafari 14.1では、Flexboxコンテナのギャップのサポートを出荷しました。

フレックスギャップは、常にギャップがあることを確認するために、アイテム間の最小スペースを定義する方法を提供します。

ここでは、Flexboxにレイアウトしたナビゲーションバーがあります。

これらのメニューバーの項目がお互いに触れてほしくない。

1rem値のギャッププロパティを追加すると、アイテムの間には常にスペースがあります。

左または右の余白は必要ありません。

外縁の余白を取り除く方法を理解する必要はありません。

これははるかに簡単です。

CSSには、国際的な視聴者をサポートするために非常に重要な追加の論理プロパティを含む、今年WebKitに実装された他の多くの機能があります。

個々の変換プロパティ: 回転、翻訳、および拡大縮小。

スクロールマージンとスクロールスナップの更新と改善。

新しい色空間のサポート。

そして、擬似要素と離散的なプロパティのアニメーション。

これらの機能の多くは、この春、macOSのSafari 14.1とiOSとiPadOS 14.5のSafariで出荷されました。

そして、残りはこの秋にサファリ15で出荷されます。

次に、フォームコントロールを見てみましょう。 

Safari 14.1では、macOSの日付と時刻入力のサポートを出荷しました。

Macでは、ユーザーはカレンダーコントロールと対話して日付フィールドに記入したり、タイムコントロールで時間を記入したりできます。

そして、クライアント側の検証が組み込まれています。

iOSとiPadOS 15では、フォームコントロールを完全に再設計しました。

彼らは全体的な経験によりよくマッチし、UIKitではるかに良くフィットします。

そして、彼らはダークモードでも素晴らしく見えます。

これらはフォームコントロールの新しいデフォルトです。

これらのスタイルのいずれかを上書きした場合、もちろん、あなたのスタイルが適用されます。

また、iOSとiPadOSに入力タイプ=「色」の新しいカラーピッカーを実装し、色を選択または調整するための3つのパネルとスポイトを備えています。

それがSafari 15のツアーであり、今年WebKitに上陸したもののハイライトの一部です。

しかし、私が行く前に、SafariとWebKitについてもっと学ぶための重要なリソースを見つける場所と、次に見たいものに関するフィードバックを提出できる場所を知っていることを確認したいと思います。

これらすべてのリソースへのリンクは、このセッションのメモにあります。

新しいJavaScript、DOM API、メディアフォーマットのサポートについて学ぶことに興味がある場合は、WWDC21で「高度なWebコンテンツの開発」をチェックしてください。

間違いなく「Webインスペクタの改善を発見する」を見て、独自のCSSグリッドインスペクタを含むSafariに登場する新しいWeb開発者ツールについて学んでください。

将来何が起こるかについていくために、紫色のロゴが入ったSafari Technology Previewをダウンロードしてください。

約2週間ごとに更新されます。

これは、最新のバグ修正に対してテストし、Webインスペクタの最新の進歩を使用するのに特に素晴らしい方法です。

Webkit.orgは、WebKitのリリースノート、新しいWeb技術を詳述した記事、およびWebインスペクタのドキュメントの場所です。

そして、私たちはあなたから話を聞きたいです。

WebインスペクタやSafariのインターフェースに関する提案がある場合は、Appleのフィードバックアシスタントでフィードバックを提出してください。

WebKitのバグ、HTML、CSS、JavaScript、またはDOM APIが壊れている、または欠落していると思われるバグに遭遇した場合は、bugs.webkit.orgにチケットを提出してください。

そして、あなたはTwitter @webkitで私たちを見つけてフォローすることができます。

私たちと同じようにSafari 15の新しいデザイン、新しいタブバーがデザインに新しい次元を与える方法、アスペクト比のレイアウトの新しい可能性、iOSとiPad OSのまったく新しいフォームコントロールなどに興奮していることを願っています。

これがウェブデザインにどのような革新をもたらすかを見るのが待ちきれません。

参加してくれてありがとう、WWDCを楽しんでください。

[明るい音楽]。