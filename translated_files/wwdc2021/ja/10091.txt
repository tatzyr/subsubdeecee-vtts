10091

♪ベース音楽の演奏♪

♪

Kritarth Jain:こんにちは、「コミュニケーションと時間に敏感な通知の送信」へようこそ。

私は通知チームのエンジニアであるKritarthで、後で同僚のKevinが加わります。

通知はアプリケーションエクスペリエンスの重要な要素であり、特定のカテゴリの通知を高めるとともに、それらを強化する新しい方法について説明します。

まず、通知の視覚的な更新と、新しいAPIでそれらを拡張する方法について説明します。

次に、新しい管理コントロールの概要と、これらがコミュニケーションとタイムセンシティブ通知にどのように関連しているかを説明します。

次に、通知の中断に焦点を当て、それらを制御するための新しいAPIをカバーします。

その後、タイムセンシティブとコミュニケーションの2種類の通知に磨きをかけ、これらを構成する方法について説明します。

通知の視覚的な更新から始めましょう。

現在、通知は、アプリケーションアイコンとともに、コンテンツと関連するメディアに重点を置いた新しい外観になりました。

豊富な通知プレゼンテーションと付随するアクションが、システムスタイルに合わせて更新されました。

通知アクションをアイコンに関連付けることができます。

図像学は、アクションが何をするかを伝え、アクションの横に視覚的なコンテキストを提供します。

ここには、いいねとコメントの2つの通知アクションがあり、これらはカスタム通知カテゴリに設定されています。

これらのアクションにアイコンを追加するには、システムイメージまたはテンプレートイメージのいずれかの画像名を持つUNNotificationActionIconタイプのオブジェクトを作成します。

次に、これらのアイコンをUNNotificationActionのそれぞれのコンストラクタに提供します。

このカテゴリに関連付けられた通知が展開されると、アクションは提供されたアイコンとともに表示されます。

通知はアプリアイコンをより大きなサイズで表示するため、アプリケーションバンドルに高解像度のアイコンを提供します。

コンテンツ拡張機能がリッチ通知の新しいプレゼンテーションとレイアウトで引き続き動作することを確認し、通知アクションのアイコンを採用してコンテキストを追加します。

次に、新しい通知管理オプションについて説明します。

アプリケーションからの通知の配信と中断に影響を与える新しいシステムコントロールがあります。

これらは通知の概要とフォーカスです。

まず、通知の概要について話し合いましょう。

通知は、その日のスケジュールされた時間に要約として配信できるようになりました。

これにより、受信通知からのアクティブな中断の数が減少し、プリセットされた時間にまとめて表示されます。

スケジュールのサマリーに配信されるすべての通知は、ロック画面の通知リストに表示されます。

通知内容にメディア添付ファイルを含めると、その通知が通知サマリーの上部に掲載される可能性が高くなります。

新しいAPIを採用して、通知コンテンツの関連性スコアを提供し、アプリケーションからの適切な通知が通知サマリーにも取り上げられるようにします。

通知に関連するもう1つの管理ツールはFocusです。

デバイスは、読書、睡眠、仕事などのアクティビティや時間帯に基づいて、特定のフォーカスで設定できます。

このような構成の場合、デバイスは通知の表示と中断をフィルタリングします。

フォーカス設定では、割り込み通知を送信できる人やアプリケーションを選択できます。

たとえば、ワークフォーカス中、メールとメッセージは、同僚からの直接通信とともに、通知を送信することができます。

したがって、通知サマリーとフォーカスは、どのアプリケーションが割り込み通知をいつ送信できるかを制御します。

これにより、1日を通しての中断をより適切に管理できます。

通知がこれらの管理コントロールを突破する機会がありますが、許可されている場合に限ります。

コミュニケーションや時間に敏感な通知が突破することも可能です。

次に、アプリケーションが通知に関連付けられた中断を制御する方法について説明します。

UserNotificationsフレームワークの一部として、中断レベルの新しいAPIがあります。

サポートされている4つの異なる割り込みレベルがあります。

これらはパッシブ、アクティブ、タイムセンシティブ、クリティカルです。

パッシブ割り込みレベルの通知は、画面を警告したり点灯したりせず、システムコントロールを突破したりしません。

これらの通知は、通知リストに静かに配信され、次回リストが表示されたときに利用できます。

受動的な中断は、中断に即時の注意を必要としないが、最終的に見られるべき通知に使用する必要があります。

いくつかの例は、食事の推奨事項と新しいエピソードの可用性です。

アクティブな中断は、通知が音と振動を再生し、画面を照らす、今日存在する動作に似ています。

これらの通知は、通知のシステム管理を突破しません。

これはデフォルトの割り込みレベルです。

アクティブ割り込みは、システムが現在中断されないように設定されている場合、割り込みを保証しない通知に使用する必要があります。

いくつかの例は、スポーツの更新とライブストリームビデオ通知です。

時間に敏感な通知は、アクティブな通知と同じように警告します。

これらは、許可されている場合、通知の概要やフォーカスなどのシステム制御を突破できるため、特別です。

これらの通知は、積極的な中断に関連する場合にのみ使用し、即時の注意が必要です。

一部の例は、アカウントのセキュリティとパッケージ配送アラートです。

最後に、クリティカル中断レベルは、iOS 14に存在するクリティカル通知サポートと同等です。

この中断レベルの通知は、積極的に警告し、システムコントロールを突破し、デバイスの着信音スイッチをバイパスします。

この破壊的な行動のため、重大な中断は引き続き承認された資格を必要とします。

重要な通知のいくつかのユースケースは、悪天候と地域の安全警報です。

UserNotificationsフレームワークの新しいAPIをサポートするために、さまざまなレベルが定義されたUNNotificationInterruptionLevelの新しい列挙型があります。

通知要求のコンテンツオブジェクトの設定中に、この中断レベルを設定します。

この例では、パッシブが設定されています。

割り込みレベルが指定されていない場合は、デフォルトレベルが使用されます。

プッシュ通知ペイロードの場合、キー割り込みレベルで新しいキーと値のペアを提供します。

ここでも、中断レベルをパッシブに設定します。

この通知がデバイスに配信されると、パッシブとして設定されているため、中断することなくロック画面に表示されます。

通知に関連する中断の別の形態は、アナウンスです。

AirPods ProやAirPods Maxなどの互換性のあるデバイスが接続されている場合、Siriは通知をアナウンスできます。

iOS 14でこのアナウンス動作を取得するには、通知をAllowAnnouncementオプションを要求するカテゴリに関連付ける必要がありました。

iOS 15では、このカテゴリオプションの要件は非推奨です。

サポートされているオーディオデバイスに接続されている間、アナウンスは任意の通知に対してサポートされています。

通信と時間に敏感な通知はデフォルトで発表されます。

CarPlayに接続している間、通信通知は自動的にアナウンスするように設定することができ、体験をよりシームレスにします。

次に、時間に敏感な通知とその設定方法に焦点を当てましょう。

時間に敏感な通知は、すぐに注意が必要な通知です。

その重要性のために、これらは許可されている場合、通知の要約やフォーカスなどのシステム制御を突破することができます。

時間に敏感な通知の例は、薬の服用に関するリマインダーからのものです。

この通知は、ワークフォーカスを突破し、すぐに目立つように掲載されます。

タイムセンシティブ通知を送信する際には、信頼を維持することが重要です。

中断的な性質を過剰に使用せず、関連する場合にのみ使用してください。

タイムセンシティブアラートやアプリケーションからのすべての通知をオフにするオプションがあることを知ってください。

時間に敏感な通知を設定するには、アプリケーションのXcode経由で関連する機能を有効にします。

投稿される通知リクエストにタイムセンシティブ割り込みレベルを設定します。

ローカル通知の場合、コンテンツオブジェクトにタイムセンシティブ割り込みレベルが設定されます。

プッシュペイロードの場合、中断レベルのキーをタイムセンシティブとして設定します。

配信されると、この通知は目立つよう掲示され、緊急性が強調されます。

コミュニケーション通知について話し合いましょう。

そして、それらについてあなたに話すために、ケビンに渡させてください。

ケビン？

ケビン・ハリントン:ありがとう、クリタース。

私は通知チームのエンジニア、ケビンです。

フォーカスと通知の要約を突破する緊急通知には重要です。

人々からの通信はまた、高い通知配信を保証します。

これらの通信は、通話やメッセージなど、さまざまな形で送信できます。

アプリケーションが通信である通知と、それらの通信に関連する人々に通知できる新しいAPIを強調します。

コミュニケーション通知の重要性は、ユーザーの決定によって決定されます。

Siriの提案は、これらの決定を知らせるのに役立ち、中断を許されるべき重要な人々を提案します。

ユーザーがデバイスとやり取りするとき - 電話に出る、FaceTimeに参加する、メッセージを送る - Siriはフォーカスと通知サマリーを突破する候補者を学習します。

iOS 15では、通信通知はより豊かなユーザーエクスペリエンスを得る。

最も目立つのは目立つアバターです。

タイトルとサブタイトルは標準化されています。

タイトルには常に送信者が含まれ、グループ通信の場合はサブタイトルに受信者が含まれます。

タイトルと字幕のテキストは、プラットフォーム間で、すべてのデバイスにローカライズされ、フォーマットされています。

たとえば、ウォッチはグループコミュニケーションの受信者のファーストネームのみを表示することを好みます。

Siriは、HomePod、AirPods、CarPlayなど、サポートされているデバイスでの通信通知の内容を発表します。

そして、Siriはこれらの通信通知に優先順位を付けるのに役立つ提案を提供します。

アプリのユーザーは、連絡先のユーザーに関連付けられます。

これらの関連付けは、通知の提案として表示されます。

ユーザーが提案を確認すると、Siriショートカットはアプリ内のそれらの人々とのタスクに利用できます。

Siriは、アプリのコミュニケーションに関連する人々を含め、フォーカス設定で突破するために、関連する人々に提案します。

コミュニケーションとは何か、そうでないものについてこれらの決定を下すために、この新しいAPIを使用すると、SiriKitの呼び出しとメッセージの意図を通知に追加できます。

意図は一般的なタスクによって駆動されます。

アプリは、電話をかけたり、メッセージを受け取ったりするなど、イベントが発生すると、これらの意図を寄付します。

そこから、Siriは、アプリのユーザーが共有シートからメッセージを送ったり、Siri経由でアプリから通話を開始したりするなど、これらの意図に基づいてショートカットと提案を提供します。

この新しいAPIは、これらの同じ意図を通知に関連付けて、アプリをSiriエコシステムにさらに統合します。

通信通知にSiriKitインテントを使用すると、アプリ、Siri、システムUI全体で一貫性を維持しながら、アプリのエンゲージメントが向上します。

関連する通信を表すインテントは、StartCallとSendMessageのインテントです。

NotificationContentProvidingプロトコルは、インテントを通知に関連付けるメカニズムです。

NotificationContentオブジェクトでは、通信処理のためのContentProvidingインテントで更新を呼び出します。

StartCallとSendMessageのインテントは提供に準拠しています。

通信通知は、Appleプッシュ通知サービスを通じて配信されます。

アプリのNotificationServiceExtensionでSiriKitインテントでNotificationContentオブジェクトを更新する必要があります。

SiriKitのインテントはデバイスのローカルであるため、ローカルでサービスを受ける必要があります。

サービス延長は、まさにこれらのケースのためのものです。

配信前にリモート通知の内容をカスタマイズする場所です。

ローカル通知のメインアプリプロセスでこれを行うこともできます。

didReceive関数で、プッシュペイロードの内容を意図的に更新します。

メッセージング通知の場合は、SendMessageIntentを作成します。

また、通話関連の通知には、StartCallIntentを使用してください。

Siriに何が起こっているのかを知性に伝えるためのインタラクションを作成します。

通知拡張では、インタラクションの方向は常に着信します。

これはユーザーに起こっているイベントです。彼らは着信を受信しています。

次に、インタラクションを寄付する必要があります。

寄付は、システムが将来的により良い提案をするのにも役立ちます。

通知の内容を意図して更新します。

そして最後に、返された意図でcontentHandlerを呼び出します。

Siriがあなたのアプリで起こる出来事から学ぶことができるように、寄付が必要です。

インタラクションの方向は常に通知のために受信されます。

他のSiriKitの使用では、発信メッセージの送信や発信など、デバイスで開始されたアクションの発信を指示することができます。

コンテンツの提供に準拠したシステムオブジェクトのみがサポートされています。

オブジェクトをコンテンツ提供に適合させないでください。

通信通知を送信するには、アプリケーションのXcode経由で通信機能を有効にします。

Info.plistのユーザーアクティビティタイプ配列にインテントタイプを追加するか、インテント拡張機能を実装することで、コミュニケーションインテントをサポートします。

ユーザーがメッセージを作成した後に送信を押したときなど、ユーザーがアプリのフォアグラウンドでアクションを実行するときに、コミュニケーションインテントを寄付します。

その後、Siriは外向的な意図を使用して、フォーカスと要約を突破するために提案されるべき人をよりよく補佐します。

連絡先の提案についても同様です。

この機能では、Siriは発信意図の寄付からのみ学習するので、連絡先はスパム発信者のように関与していない人々によって乱雑にされません。

通信意図の適切な使用は、インテリジェントな通知体験の基本であり、カバーすべき点がいくつかあります。

インテントパーソンは、SendMessageとStartCallインテントの構成要素です。

入力するすべてのパラメータは、より豊かでインテリジェントなユーザーエクスペリエンスを提供します。

意図的な人との意図の作成も同様です。入力するすべてのパラメータは、より豊かでインテリジェントなユーザーエクスペリエンスを提供します。

まだ使用していない場合は、インテントの使用を開始してください。

Intentsは、通知、共有シート、連絡先、Spotlightでアプリの可視性を高めます。

また、SiriKitを使用して、メッセージの送信や通話の開始などのSiriショートカットを提供できます。

着信と発信の両方のやり取りに意図を寄付する習慣を身につけましょう。

あなたはすでに発信意図を寄付しているかもしれません。

サービス拡張機能で着信StartCallとSendMessageインテントの寄付を開始します。

これは、コミュニケーション通知体験の基本です。

アプリがまだ通知サービス拡張機能を使用していない場合は、追加する必要があります。

最後に、コンテンツ提供プロトコルを使用して、通信として配信する各通知を装飾することで、ピースをまとめます。

このセッションでは、視覚的な更新からコミュニケーション通知まで、多くのことを取り上げました。

ここにいくつかの持ち帰りがあります。

新しい視覚的な更新と管理オプションを考慮し、通知がそれらとシームレスに機能することを確認します。

システム制御との相乗効果で通知がどのように中断されるかをよりよく制御するために、中断レベルを採用します。

タイムセンシティブ通知は、タイムセンシティブ通知を顕著に中断し、ブレークスルーやアナウンスなどの自動動作を取得します。

コールとメッセージングの意図を実装して寄付して、通知に結び付けられたアップグレードされたコミュニケーション体験と、行動のブレークスルーとアナウンスを実現します。

私たちは、あなたが通知を中心に構築するすべての新しい素晴らしい経験を見るのが待ちきれません。

皆さんが素晴らしいWWDCを過ごせることを願っています!

♪