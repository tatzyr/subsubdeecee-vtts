10276

♪ベース音楽の演奏♪

♪

ロン・サントス:やあ、みんな。私はロン・サントスです。

私はキーボードに取り組んでいるソフトウェアエンジニアです。

そして、入力やディクテーションではなく、カメラを使用してテキストを入力できる新機能を最大限に活用する方法を紹介します。

だから、私たちはこの新しいリリースに本当に一生懸命取り組んできました、そして今、WWDCがついにここに来たので、私は休暇の準備ができています。

安全になったらすぐに、休暇を取って旅行したいです。私は少し休みを取って旅行したいです。

しかし、私を悩ませる旅行についての1つのことは、その非デジタルテキストのすべてを扱うことです。

どういう意味かわかりますか?

請求書、アクティビティチラシ、そして彼らがホテルの部屋にあなたのために残す巨大なバインダー

幸いなことに、iOS 15には、あなたの周りの世界からテキストをキャプチャできる新機能があります。

私の言いたいことをお見せしましょう。

チェックしてみて！

私はこの旅行日記アプリを作っています。

ハワイへの最後の旅行のように、私が行った旅行や滞在した場所を記録するためにそれを使用します。

ここの上部には、画像ヘッダーを追加できます。カメラロールから素敵な風景写真かもしれません。

次に、名前、電話番号、住所などのホテル情報のフィールドがあります。

私は実際に私の目の前にある文書にそのすべての情報を持っています。

私はそれをすべてタイプしたくありません、そして今、私はする必要はありません。

たとえば、電話番号フィールドを2回タップすると、編集メニューにカメラからのテキストを使用する新しいオプションが表示されます。

起動すると、カメラはドキュメント上のこのテキストグループを即座に認識します。

私はそれを凍結して、電話番号だけを選択することができます。

次に、[挿入]をタップすると完了です。

それはかなり素晴らしいと思います。

写真が千の言葉に値するという言葉を思い出させます。

しかし、この機能を使用すると、文字通り写真から千の言葉を取ることができます。

とにかく、先ほど言ったように、この機能を最大限に活用する方法をお見せしたいと思います。

コンテンツのフィルタリングについて話すことから始めましょう。

あなたが覚えているなら、私は大きなテキストブロックから電話番号をドラッグして選択しなければなりませんでした。

まあ、アプリが私が電話番号を探していることを知っているなら、私はそれをする必要はありません。

それは他のすべてを無視して、ただ番号をつかむべきです。

まず、必要なコンテンツをフィルタリングするのがいかに簡単かをお見せします。

フィルタリングは、テキストフィールドとテキストビューで利用可能なTextContentTypeとKeyboardTypeプロパティを使用して行われます。

実際、あなたはおそらくすでにこれらのプロパティを使用して自動入力のようなものをサポートしているでしょう。

もしそうなら、素晴らしい。

カメラ入力の余分なメリットがあります。

そして、あなたがそれらを使用していない場合は、ここにあなたの方法を示す前年からのいくつかのビデオがあります。

はい、TextContentTypeに戻ります。

TextContentTypeは、これらのさまざまな値のいずれかにすることができます。

しかし、カメラはこれらすべてのタイプをフィルタリングしません。

この7つだけでフィルタリングされます。

いくつかの例を見てみましょう。 ではいくつかの例を見てみましょう。

これらの最初の4つ（電話番号、完全な住所、URL、電子メール）はすべて、今日のiOSに先行しています。

iOS 15の新機能では、フライト番号、出荷追跡番号、日付、時刻、期間の組み合わせの3つのタイプが追加されました。

フライト番号が旅行アプリにどのように役立つか、または追跡番号がパッケージ追跡アプリにとってどのようにクールであるかを想像できます。

とにかく、これらのコンテンツタイプを使用する方法は次のとおりです。

それは超簡単です。

インターフェイスビルダーの場合は、属性インスペクタでコンテンツタイプとキーボードタイプを探します。

コードでこれを行う場合は、必要な値を割り当てるだけです。

私の旅行日記アプリでは、電話番号フィールドは電話パッドキーボードを使用しており、アドレスフィールドにはfullStreetAddressのtextContentTypeがあります。

そして、電話番号については、autocorrectionTypeをnoに設定したことに注意してください。

なぜなら、自動修正や予測テキスト候補がない場合、iOSはカメラにすばやくアクセスするためのボタンを提供するからです。

さて、私のアプリに戻りましょう、そして私たちは再びホテルの電話番号をキャプチャしようとすることができますが、今回は、私たちの変更で。

さて、カメラを持ち出すと、電話番号以外の他のすべてのテキストをスマートに無視します。

アドレスフィールドでもう一度やってみましょう。

それはとても速いです。

タップとスワイプがはるかに少なくなります。

それがコンテンツをフィルタリングする方法です。

別の挑戦に移りましょう。

その使用を本当に奨励するために、この機能をより見つけやすくするにはどうすればよいですか?

アプリ開発者として、私たちは合理化されたユーザーインターフェースが大好きです。

つまり、ユーザーが知らないメニューやジェスチャーの後ろに隠された追加機能がある場合があります。

たとえば、アプリでメモフィールドを使用する場合、ここで入力にカメラを使用できるかどうかは明らかではありません。

編集メニューは2回目のタップ時にのみ表示されます。

そして、候補バーには、先ほどお見せしたボタンの代わりに予測テキストがあります。

したがって、カメラの入力を示唆する画面上のボタンが必要な場合は、専用のランチャーボタンを追加してください。

これを行うには、まず、iOS 15で新しいcaptureTextFromCameraファクトリメソッドを使用してUIActionを作成する必要があります。

このアクションは、カメラを起動する方法を知っていますが、ボタンやメニューと一緒に使用すると、画像とラベルも提供します。

カメラからテキストを挿入するアイテムで、私のアプリにメニューを追加しましょう。

だから、これがまた私のアプリです。

メモフィールドを編集するときは、このツールバーがキーボードの上に表示されます。

カメラアイコン付きの2番目の項目をタップすると、新しい機能であるカメラからのテキストなど、カメラ関連のアクションの束のメニューを表示したいです。

ここでは、アクションを作成します。

そして、オプションの識別子以外に、ファクトリメソッドはレスポンダーがテキストを受け入れることだけであることに注意してください。

次に、他のメニュー項目のアクションを作成します。

最後に、メニューを組み立てて、textFromCameraアクションを含む、作成したばかりのアクションのそれぞれを入力します。

タイトルや使用する画像を指定する必要がないことを覚えておいてください。

それはすべてアクションによって提供されます。

タイトルは私のためにローカライズされるでしょう。

よし、やってみよう。

アプリに戻ってきました。

これがメモフィールドとカメラメニューのツールバーです。

目の前のアクティビティチラシからテキストを挿入させてください。

そして終わった!

わずか数行のコードでユーザーが発見できるランチャー。

しかし、心に留めておくべきことが1つあります。

カメラランチャーを追加する前に、まずcanPerformAction withSenderの結果を確認する必要があります。

これは、UIActionがcaptureTextFromCameraと呼ばれるUIResponderオブジェクトの新しいメソッドを呼び出すことで機能し、カット、コピー、ペーストなどの標準的な編集アクションと同様に機能するためです。

そして、これらのアクションは、コンテキストに応じて、常に利用できるとは限りません。

たとえば、何も選択されていない場合、テキストをカットすることはできません。

ここでも同じことです。captureTextFromCameraアクションにはいくつかの前提条件があります。

その1つの方法は、すべての要件が満たされていることを確認します。

しかし、それぞれに目を通しましょう。

そうすれば、そのメソッドがfalseを返す理由をよりよく知ることができます。

まず、いくつかのハードウェア要件があります。iOS 15を実行しているすべてのデバイスがこの機能をサポートしているわけではありません。

デバイスはiPhoneであるべきです。

そして、どんなiPhoneだけでなく、ニューラルエンジンの機械学習の超能力を持つもの。

ハードウェアとは別に、レスポンダーはテキスト挿入を処理する必要があります。

それについては後でもっと話しましょう。

次に、これは明らかかもしれませんが、レスポンダーがテキストビューまたはテキストフィールドである場合は、編集可能でなければなりません。

そして最後に、ユーザーは優先言語のリストにこれらの7つのサポートされている言語のうち少なくとも1つを持っている必要があります。

あなたは今、カメラ入力を処理するための設備が整っています。

しかし、締めくくる前に、私がアプリに追加した楽しいものをお見せしましょう。

ヘッダーの写真を覚えていますか？

素敵ですが、その上にキャプションを追加するのはちょっとクールだと思います。

たぶん、カメラから取ったキャプション。

そこで、メニュー項目で行ったように、ここにランチャーボタンを追加しました。

そして今、私はテキストをキャプチャして画像の上に置くことができます。

でも、どうやってやるの?

つまり、それは画像ビューであり、テキストコントロールではありません。

一歩下がって、テキストコントロールがどのように機能するかを理解しましょう。

そして、後で画像ビューについて話します。

テキストコントロールは、UIKeyInputと呼ばれるプロトコルを採用しています。

これは、レスポンダーがキーボード入力を受け入れるための基本的なメソッドセットを定義します。

プロトコルには3つのメソッドがあり、そのうちの1つはinsertTextメソッドです。

そして、その方法はまさにカメラからアプリにテキストを転送するために使用されるものです。

したがって、レスポンダーがカメラ入力をサポートするには、このプロトコルを採用する必要があります。

私はちょうどテキストコントロールがUIKeyInputを採用すると言ったことを知っています。

しかし、実際には、彼らはUIKeyInputの拡張であるUITextInputと呼ばれるプロトコルを採用しています。

UITextInputを採用すると、カメラを使用するときに追加の機能、つまり挿入するテキストのプレビューが表示されます。

そして、それはここに示されているsetMarkedTextメソッドで行われます。

ただし、プレビューはオプションです。

あなたがそれを持っていないことを選択した場合、UIKeyInputを採用するだけで済みます。

言及すべき最後のプロトコルが1つあり、あなたはすでに数分前にそれを捕まえたかもしれません。

UIKeyInput自体はUITextInputTraitsを拡張します。

そのプロトコルは、KeyboardTypeやTextContentTypeなどのオプションのプロパティのみで構成されており、以前から特定のコンテンツのカメラ入力をフィルタリングするために使用されます。

したがって、カメラ入力には、UIKeyInputを採用し、オプションで、求めている機能のレベルに応じて、UITextInputTraitsまたはUITextInputを採用します。

わかりました。では、ImageViewに戻しましょう。

UIImageViewをサブクラス化し、UIKeyInputを採用するHeadlineImageViewという新しいクラスを作成します。

これがコードです。 

これはUIImageViewの単純なサブクラスであり、キャプションを表示するために使用するUILabelサブビューがあります。

UIKeyInputを採用するには、hasText、deleteBackward、insertTextの3つのメソッドが必要であることを覚えておいてください。

通常、レスポンダーはUIKeyInputを採用してキーボードを召喚します。

しかし、キーボード入力ではなくカメラ入力のみが欲しいので、insertTextを実装するだけです。

hasTextはfalseを返すだけで、deleteBackwardは何もする必要はありません。

insertTextに関しては、その実装は本当に簡単です。

カメラからテキストを取り、私たちのラベルに渡すだけです。

それがすべてです! 

これで、カメラからキャプチャされたキャプションを表示する方法を持つ画像ビューがあります。

私と一緒にこの旅行をしてくれてありがとう!

これがあなたが立ち去ることを願っているものです。

テキストコンテンツの種類を活用してください。

彼らは、カメラからテキストをフィルタリングするなど、複数の方法で役立ちます。

カメラの入力を本当に促進したいときは、独自のランチャーを作成してください。

私たちは、ユーザーがアプリ間でカメラ入力に関連付けることができる一貫した外観のためのラベルと画像を提供します。

ただし、まず機能が利用可能かどうかを確認してください。

最後に、テキストコントロールではない独自のカスタムレスポンダーにカメラ入力を使用できることを忘れないでください。

UIKeyInputプロトコルを採用するだけです。

安全な旅をして、WWDC 2021の残りの部分を楽しんでください!

♪