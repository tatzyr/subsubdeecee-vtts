10291

♪ベース音楽の演奏♪

♪

グラハム・セイファート:こんにちは、WWDC 2021へようこそ。

私の名前はGraham Seyffertで、MusicKitのエンジニアです。

過去数年間で、Apple Musicカタログから新しく強化されたデータを取得する開発者の能力を強化しました。

今日、私たちはあなたにこれらの改善のいくつかを紹介することに興奮しています。

このプレゼンテーションでは、APIの検索機能の強化と、リソースを関連付け、属性を拡張し、応答内のリソースのリレーションシップビューを要求することによってデータを要求する新しい方法について説明します。

最後に、チャートAPIの新しい機能強化について確認します。

検索の機能強化のいくつかを調べる前に、現在の/search/hintsエンドポイントをすばやく要約したいと思います。

今日すでにこのエンドポイントを使用して、推奨される検索語句のリストを取得する可能性があります。

例として、検索用語「テイラー」の結果をいくつか紹介します。

今日は、/search/hintsエンドポイントに代わる/search/suggestionsエンドポイントを紹介します。

このエンドポイントは、/search/hintsエンドポイントと同じ用語へのアクセスを提供し、リクエストにkinds=termsを指定することで、これらを取得し続けることができます。

ただし、このエンドポイントからの応答が少し異なることがわかります。

提案された結果は、リクエストで指定された種類の1つと一致する種類を示すようになりました。

また、検索クエリに使用する用語と、ユーザーに表示する用語を区別します。

さらに重要なことに、このエンドポイントでは、トップの推奨検索結果にもアクセスできるようになりました。

これらは、リクエストにkinds=topResultsと、結果の取得に関心のあるリソースタイプを指定することで要求される場合があります。

topResults種類のリソースは、コンテンツキーの下にあります。

このエンドポイントから得られる結果は、幅よりも速度を優先するため、通常の検索から得られる結果と著しく異なる可能性があることは注目に値します。

そのため、これは通常の/検索エンドポイントの置き換えではなく、それを補完することを目的としています。

リソースを変更する方法に入る前に、馴染みのない人のためのリソースとは何かを再紹介したいと思います。

すべてのリソースには、APIでリソースを検索するために必要な最小限の情報である「リソース識別子」と呼ばれるものがあります。

リソース識別子には、リソースのID、そのタイプ、およびhrefが含まれます。

リソースの完全な表現には、その名前などのリソースの属性、およびインクルードパラメータを使用して要求された場合の潜在的な関係も含まれます。

関係は、曲のジャンルやプレイリストのトラックなど、関連リソースのコレクションです。

それで、私は今、リソースに関連する概念を紹介したいと思います。

関連で要求された関係は、その関係内のリソースの前述のリソース識別子のみを返すという点で、要求された関係とは異なります。

これは、アクセスが必要なのがリソースの参照である場合、関係を関連付けると、より迅速な応答が得られます。

関連クエリパラメータを使用して、ターゲットとするリソースタイプで分類し、その後に取得したい関係名のリストを使用して、関係を関連付けることができます。

たとえば、/search /suggestionsエンドポイントでは、ユーザーが曲の結果を選択すると、その曲のアルバムページにポップアウトすることを決定できます。

この場合、必要なのは、そこに移動するためにその曲のアルバムのhrefだけなので、そのデータを取得するために relate=albumsを指定できます。

その後、その曲の結果がそれぞれのアルバムのリソース識別子を含むようになりました。

したがって、関連するコンテンツをすばやく参照したいときに使用するのは素晴らしいことですが、すでに回答に戻っているリソースについてもっと知りたい場合はどうなりますか?

前述のように、今日のすべてのリソースには、名前、アートワークなどのデフォルトの属性セットがあります。

しかし、リソースには拡張された属性もあるかもしれません。

拡張属性は、計算にコストがかかるか、必要頻度が低いため、デフォルトでそれらを含めると、応答が著しく遅くなるか、オブジェクトモデルが肥大化する可能性があります。

関連クエリパラメータで見たものと同様に、拡張クエリパラメータを使用してリソースタイプで分類し、興味のある属性名のリストでそれに従うことで、リソースの拡張属性を要求できます。

/suggestionsのリクエストに基づいて、曲の結果については、ユーザーがApple Musicのそのアーティストのページにリンクできるようにしたいと決めるかもしれません。

これを行うには、リクエストにextend=artistUrlを追加するだけです。

実際、これを行うと、応答の曲のリソースにartistUrl属性が含まれていることがわかります。

さて、リレーションシップビューの概念を紹介したいと思います。

関係と比較して、ビューはリソースとより緩く結合されています。

彼らは必ずしも人間関係のようなリソースに関するいくつかの地上の真実を表すものではありません。

これにより、ビューはアルバムページなどの製品ページ体験を駆動するのに理想的です。

これを、たとえば検索結果ページで使用するのに便利な関係と比較してください。

さらに、ビューには、タイトルなどの属性とデータがある場合があります。

ビューは、直接リソースフェッチでのみリクエストできます。

これは、それらを取得するには2つの異なる方法があることを意味します。

ビュークエリパラメータを使用してリストを指定するか、リクエストパスのリソースのIDの直後に/view/{viewName}を介してリストを指定できます。

この回答では、アーティストリソースにトップソングビューを含めるとどのように見えるかの例があります。

その他の例としては、トップミュージックビデオやアーティストのシングルなどがあります。

特定のリソースタイプでサポートされているビューの完全なリストは、もちろん、公式のApple Music APIドキュメントに記載されています。

最後に、Charts APIのアップデートを見てみましょう。

今日、Apple Musicは、世界、店頭、そして最近では特定の都市のチャートプレイリストをサポートしています。

ユーザーはこれらのチャートプレイリストをライブラリに追加することができ、自動的に更新されます。

types=playlistsを指定し、「with」クエリパラメータを使用して、dailyGlobalTopChartsまたはcityCharts、またはその両方のいずれかのセットを示すことで、/chartsエンドポイントから直接これらを取得できるようになりました。

そして、ここに、これらのクエリパラメータを持つチャートの応答がどのように見えるかの例があります。

要約すると、今日は検索とチャートのエンドポイントの強化を検討し、応答でリソースのデータを取得する新しい方法を検討しました。

Apple Music APIについてもっと知りたい場合は、Apple Music APIでコンテンツを相互参照する方法に関する今年のセッション、またはAPIのコアコンセプトのいくつかをさらに詳細に説明する2017年のIntroducing MusicKitプレゼンテーションを強くお勧めします。

ご覧いただきありがとうございます。今年のWWDCをお楽しみください。ありがとうございます。

♪