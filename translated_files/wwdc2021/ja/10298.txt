10298

みなさん、こんにちは！

WWDC21セッション「スマートホームアプリにMatterのサポートを追加する」へようこそ。

私はホームエンジニアリングのセリーナです。

今日、私の同僚、Chris、Sagarと私は、Matterサポートのために今年追加したエキサイティングな機能を説明します。

月曜日の基調講演で述べたように、Matterは、すべてのスマートホームアクセサリーがシームレスに連携して前進するために、Appleや他の業界リーダーによって開発されているスマートホームアクセサリーの新しい基準です。

そのビジョンは、世界中のホームオートメーションを民主化し、人々がスマートホームの構築を開始し、今後何年も追加し続けることを可能にすることです。

Matterプロトコルは、HomeKitを含む実績のある技術を活用し、最も幅広い量のスマートホームデバイスをサポートし、メーカーが製品に簡単に統合できるようにするオープンソースの取り組みとして開発されています。

Matterを使用すると、スマートホームアクセサリーメーカーは複数のプロトコルを並行してサポートする必要がなくなり、製品を作る開発作業を真に簡素化し、継続的にサポートします。

また、アプリ開発者は、独自のプロトコルを作成して維持する負担なしに、顧客に最適なアプリ体験の開発に集中する機会を提供します。

アクセサリーのためのこのような統一されたプロトコルを作成することで、顧客はスマートホームの便利さを簡単に楽しみ、全員が一緒に働くことを知って、自信を持って製品を家に持ち込むことができます。

これにより、人々が店舗でより多くのアクセサリーを選択でき、世界中の建築業者がそれらを標準として家庭に設置できるようになります。

これらに動機づけられて、開発者がアクセサリーやアプリの開発でMatterを最も早く使用できるようにしたいと考えています。

Matterのサポートは、開発者プレビューとしてiOS、iPadOS、tvOS 15でサポートされることをお知らせします。

今日あなたに紹介したい素晴らしい機能がたくさんあります。

まず第一に、HomeKitを介してMatterアクセサリーと統合する方法について話しましょう。

今日、HomeKitアクセサリプロトコルを実装するアクセサリは、HomeKitフレームワークを介してApple Homeと統合されています。

長年にわたり、私たちはHAPアクセサリーの完全な制御と管理を提供するHomeKitの上に素晴らしい機能を構築してきました。

MatterアクセサリとApple Homeの統合を検討すると、当然のことながら、Parallel ProtocolとしてMatterをサポートするためにHomeKitフレームワークの責任を拡大することができるという結論に達しました。

アーキテクチャ的には、これはHomeKitがMatterアクセサリと通信するために、CHIPフレームワークとして知られるオープンソースのMatter実装を呼び出すことを意味します。

あなたの文脈では、Matterプロジェクトの以前の名前はConnected Home over IP、つまりCHIPでした。

だからこそ、今日の講演を通して、オープンソースプロジェクトとAPIの両方でCHIPの参照を見ることができます。

後のリリースでAPIの命名が更新されることを期待しています。

メイントピックに戻ると、HomeKitが提供するカプセル化により、既存のすべてのApple Home機能がMatterアクセサリでシームレスかつすぐに作業を開始できます。

たとえば、HAPアクセサリの設定と同じフローを使用してMatterアクセサリを設定し、コントロールセンターでMatterアクセサリを1回下にスワイプするだけで制御し、Siri for Matterアクセサリのステータスとハンズフリーで統合し、すべてのAppleデバイスで制御します。

しかし、HomeKitの責任は、ファーストパーティの機能をサポートすることだけではありません。

実際、1日目から、アプリ開発者がアクセサリとの通信プロトコルを実装する負担なしに、顧客のために創造的で楽しいスマートホームアプリを構築するためにHomeKitを活用できるべきだというビジョンを持ってHomeKitを設計しました。

これはMatterのアクセサリーに引き続き当てはまります。

HomeKitで使用しているように、既存のAPIを使い続けてください。

彼らは皆、Matterアクセサリーで作業を開始するだけで、コードの変更は必要ありません。

アクセサリーのセットアップを例に挙げてみましょう。

このコードは、今日HomeKitアプリでaddAndSetupAccessories APIを呼び出す方法を示しています。

iOS 15開発者プレビューでは、このAPIで呼び出すQRコードスキャナは、HAP QRコードで動作するだけでなく、Matter QRコードの認識を開始し、アクセサリのセットアップに使い慣れた一貫した体験を顧客に提供します。

少し楽しみのために、今年のSwiftのアップデートに細心の注意を払っている人は、Swift並行性の世界で変化が進行中であることを知っています。

使用したのと同じAPIも、新しいSwift async/awaitパラダイムを介して呼び出すことができるようになったことをお知らせします。

セットアップに加えて、iOS 15開発者プレビューでは、既存のHomeKit APIを使用して、Matterのアクセサリの状態を読み書きすることもできます。

さらに、Matterアクセサリーのリモートアクセスとタイムリーな通知を自動的に取得し、HAPアクセサリーで行うのと同じ方法で、シーンとオートメーションAPIを使用してMatterアクセサリーを追加および編集することができます。

また、未来へのスニークピークを取りましょう。

Matterプロジェクトが発展し続けるにつれて、ますます多くのアクセサリーカテゴリのサポートを提供することを期待しています。

私たちは、これらの新しいMatterアクセサリーカテゴリをHomeKitに統合し続け、開発者が簡単に使用できるようにします。

第二に、HAPはプロトコルとして、カスタム特性をサポートしています。

これにより、メーカーはアクセサリーを使用して創造的なカスタム機能を構築し、HomeKitを通じてアクセスすることができます。

Matterは、プロトコルとして、カスタム機能もサポートしています。

そこで、ここで点をつなげて、HomeKitフレームワークを介してMatterのカスタム機能へのアクセスを提供したいと考えています。

この機能は後のリリースで提供されるので、お楽しみに、初期の考えがあればお知らせください。

要するに、私たちはMatterとHomeKitをシームレスに統合することにコミットしています。

アクセサリー開発者であろうと、HomeKitアプリ開発者であろうと、HomeKitの顧客であろうと、Matter「Just Works」として安心してください。

HomeKitを使用してMatterアクセサリと統合すると、HomePodやApple TVなどのAppleスマートホームハブのパワーとインテリジェンスのおかげで、安全なリモコンやオートメーションなどの機能を無料で利用できます。

しかし、顧客がMatterアクセサリーを家庭の他のスマートホームハブと接続するのを手助けする必要がある場合は、iOSアプリからも簡単にできるようにしています。

次に、クリスに渡して、それについてもっと話します。

ありがとう、セリーナ。

今年の開発者プレビューでは、Matterアクセサリとホームハブとの直接接続を確立できる、概念的によく知られた新しいセットアップAPIを構築しています。

ユーザーエクスペリエンスを探求することから始めましょう。

ご覧のとおり、この流れは、今日のApple製品とHomeKitアクセサリの両方を設定する方法によく似ています。

私たちは、お客様がこの流れに精通していることを知っており、彼らがそれを愛していることを知っており、あなたにもその恩恵を受けてほしいと思います。

これはシステムUIですが、ユーザーが選択した家や部屋はアプリから販売されていることに注意することが重要です。

あなたのアプリは、必要な操作を完了し、新しいアプリ拡張タイプを介して設定するために要求された情報を提供する責任があります。

これを一歩ずつ解き明かしましょう。

セットアップを開始する前に、アプリは管理するホームを表すトポロジオブジェクトを作成します。

次に、このトポロジオブジェクトを新しいセットアップAPIに渡します。

この時点で、セットアップが開始され、Matter QRコードをスキャンする準備が整いました。

これは呼び出しのコード例です。

ご覧のとおり、このAPIは概念的には、アクセサリのセットアップ用の既存のHomeKit APIと非常によく似ています。

主な違いは、アプリが管理するホームのセットアップを通知するために使用されるHMCHIPServiceTopologyオブジェクトの追加です。

ユーザーがスキャナーでMatter QRコードをスキャンすると、セットアップは検出されたアクセサリのカテゴリを示す検出されたカードに自動的に進みます。

この例では、ユーザーにアプリにアクセサリを追加するオプションが表示されます。

ユーザーがアクセサリをホームハブに接続することを選択したら、どの特定のホームに追加するかを指定する必要があるかもしれません。

複数のホームで構成されるトポロジでセットアップを開始した場合に、この画面を提示します。

トポロジが1つのホームのみで構成されている場合、ユーザーの意図はすでに知られているため、このカードはスキップされます。

ユーザーがホームを選択すると、iOSは拡張機能に、スキャンしたアクセサリのマターペイロードとペアリングするように要求を送信します。

拡張機能は、原則HMCHIPServiceRequestHandlerサブクラスを介してこの要求に応答します。

呼び出されたら、CHIPフレームワークAPIを使用して、Matterアクセサリとホームハブの間に安全なペアリングを作成します。

次に、iOSは、選択したホームに対応する部屋のリストを拡張機能から要求します。

これらの部屋は、ユーザー選択のためにUIで表示されます。

拡張機能でこの要求に応答するコードは簡単です。

ペア要求と同様に、拡張機能の原則HMCHIPServiceRequestHandlerサブクラスを中心に展開します。

この機能を実装し、ユーザーが選択したホームに一致する対応する部屋を返すだけです。

ユーザーがアクセサリの名前と部屋を選択したら、その情報を拡張機能に提供し、アクセサリの設定を依頼します。

他のリクエストタイプと同様に、拡張機能はCHIPフレームワークAPIを使用してアクセサリを直接設定することで、設定リクエストに応答します。

最後に、アクセサリがアプリ用に完全に構成された後、ユーザーはApple Homeアプリ、コントロールセンター、およびSiriを使用してこのアクセサリを制御する機会も提供されます。

ここで再び完全に収集されたのは、あなたの拡張機能が実装することを期待するコードです。

ルームリクエスト、ペアアクセサリーリクエスト、アクセサリー設定リクエストの3つのシンプルな機能。

HMCHIPServiceRequestHandlerをサブクラス化し、これらのメソッドをオーバーライドすると、残りのセットアップエクスペリエンスは開発者の観点から本質的に自由になります。

UIプレゼンテーション、ステップ間の遷移、エラー処理などは、すべてあなたのために処理されます。

これにより、書く必要のあるコードの量が大幅に削減されると同時に、ユーザーに真に一流の体験を提供します。

これまでのところ、既存のHomeKit APIを使用してMatterアクセサリと統合する方法と、Matterアクセサリを別のスマートホームハブに接続する必要がある場合は新しいAPIについて話しました。

Matterアクセサリ開発者の場合は、ファームウェア開発の目的でプロトコル自体にも精通する必要があります。

次に、同僚のSagarがMatterプロトコルのツアーに参加し、MatterとHAPの類似点を紹介します。

ありがとう、クリス。

Matterデータモデルから始めましょう。

Every Matterアクセサリーは、Matterデータモデルを介してその機能を公開します。

エンドポイントを使用して、上からこれらの機能に個別に対処できます。

エンドポイントは、アクセサリの論理的に別々の機能と考えることができます。

ほとんどのアクセサリーには、これらの2つしかありません。1つは名前、ベンダー、モデルなどの情報用で、もう1つはアクセサリーの主な機能、例えばライト用です。

各エンドポイントは、その中に複数のクラスターを持つことができます。

各クラスターは、そのエンドポイントの特定の機能を表します。

私たちの光の例では、その光の終点には、明るさ、色、および電力制御のためのクラスターがあるかもしれません。

HomeKitに精通している私たちにとって、クラスターはHomeKitサービスと同等と考えることができます。

次に、クラスターの中に何があるかを見ていきます。

クラスターは1つ以上の属性を持つことができます。

各属性は、アクセサリの状態を表します。

私たちの光の例では、光の明るさクラスターには、光の明るさを読み、制御できる属性があります。

繰り返しますが、Matterの属性はHomeKitの特性と同等であると考えることができます。

最後に、ここでは、各属性が読み取り、書き込み、レポートに至るまでの一連のアクションをサポートする可能性があることがわかります。

私たちの軽い例では、ライトがオンまたはオフになるたびにアクセサリから通知を受け取るために、オンオフクラスターでレポートを有効にしたい場合があります。

Matterは通常、その機能に基づいて各属性を設定し、対話するためのAPIの幅広い選択を提供します。

先ほどお話ししたこれらの概念は、オープンソースのCHIPフレームワークに実装されており、Appleは主要な貢献者の1つです。

Selinaが先に述べたように、CHIPはMatterに改名されましたが、フレームワークとコードは将来のリリースで更新される予定です。

完全に認定されたバージョンのCHIPフレームワークはiOSで配布され、HomeKitとMatterアクセサリとの統合が可能になり、アプリで使用する必要がある場合はオープンソースAPIへのアクセスも提供されます。

CHIPフレームワークを使用して軽いアクセサリーと対話する例を見てみましょう。

これは、先ほど調べたマターデータモデルの中核的な概念を行使します。

共有されたCHIPControllerにアクセスすることから始めます。

このコントローラーは、マターへの私たちの主なハンドルです。

次に、ペアリング中に割り当てたデバイスIDを使用して、ライトのハンドルを取得します。

次に、ライトエンドポイントのオンオフクラスターにハンドルを初期化します。

そして今、このオンオフクラスターでは、オンオフ属性の読み取りと書き込みを実行できます。

まず、ライトの状態を切り替えるだけのオンオフ属性を切り替えるように要求します。

次に、オンオフ属性の状態を読み取るように要求します。

その後、アクセサリは属性のステータスを含む応答を送信し、アプリケーションを更新するために使用できます。

だから、それはCHIPフレームワークの簡単な外観です。

今日のセッションを終える前に、Matterで導入された新しいコンセプトについて説明し、それを活用するホームアプリで導入したいくつかの新機能を紹介したいと思います。

すでにご存知かもしれませんが、Matterプロトコルを使用すると、複数の管理者が同時にアクセサリに接続できます。

これは、顧客に選択肢を提供するための優れた機能ですが、アクセサリー管理に関しても課題をもたらします。

ホームアプリがこれをどのように組み込んでいるかを見てみましょう。

ホームアプリは、この新しいコネクテッドサービスセクションの下で、アクセサリに接続されたすべての管理者のリストを表示できるようになりました。

ユーザーは、接続された管理者を管理するオプションも与えられます。

そして最後に、ユーザーはペアリングモードを再度オンにして、新しい管理者がアクセサリに接続できるようにするオプションがあります。

ここでの目標はシンプルです。お客様が自分に最適なものを選択する自由を確保し、スマートホームアクセサリーがどのように管理されているかを伝える自信を確保したいと考えています。

したがって、MatterサポートはまずiOS、iPadOS、tvOS 15の開発者プレビューで利用可能になり、それを有効にするにはこれらのプラットフォームに開発者プロファイルをインストールする必要があります。

また、HomeKit経由でMatterアクセサリーを制御するためのホームハブも必要です。

Matterが市場で入手可能になったら、資格のあるベンダーIDと認定製品IDを公開することを期待していますが、開発者プレビューでサンプルベンダーIDと製品IDのリストを提供し、開発を容易にします。

これらのIDは、開発者プレビューですでにサポートされているMatterアクセサリカテゴリを表すように事前に設定されています。

いつものように、developer.apple.comで当社のAPIに関する詳細情報を見つけることができます。

また、MatterオープンソースAPIとMatterアクセサリの定義の詳細については、Githubで見つけることができます。

したがって、結論として、アクセサリ開発者、HomeKitアプリ、およびHomeKitユーザー向けに、HomeKitを介してシームレスなMatterサポートを提供します。

Matterアクセサリーを他のスマートホームハブに接続する必要がある開発者向けに、今後のシードに新しいセットアップAPIがあります。

そして、これらすべては、iOS、iPadOS、tvOS 15の開発者プレビューから利用可能になります。

見てくれてありがとう、そして私のチームと私から、さようなら。

[パーカッシブミュージック]。