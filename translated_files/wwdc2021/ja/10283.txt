10283

♪ ♪

こんにちは、私はアリです。今日はキャメロンと一緒に、ショートカットの世界を紹介し、ショートカット、Siri、提案で素晴らしい体験を強化するアクションを設計する方法について話すことに興奮しています。

アプリの設計について考えるとき、私たちは通常、UIの詳細と、ユーザーがアプリの中にいるときに何を見て感じることができるかに焦点を当てます。

しかし、この講演では、私たちは少し違うことをするつもりです。

私たちは、あなたのアプリが開いていないときに人々があなたのアプリで持つことができる経験に焦点を当てます。

私たちは、このように考えることで開くことができる機会の世界があると考えています。

すべては、私たちが「行動」と呼ぶ概念から始まります。

アクションは、人々があなたのアプリで完了できるタスクを表す方法です。

アクションを作成することで、人々が新しいエキサイティングな方法でそれらのタスクを実行できるようにすることができます。

カレンダーアプリを作るとしましょう。

カレンダーアプリの中にいるとき、人々がする最も一般的なことは何ですか?

まあ、人々はおそらく新しいイベントを追加し、既存のイベントを検索し、イベントに変更を加えるでしょう。

それらはすべて行動のための素晴らしいアイデアです。

したがって、カレンダーアプリは、これらのアクティビティのそれぞれに対してアクションを定義できます。

ここが魔法の始まりです。

カレンダーアプリがこれらのアクションを作成すると、人々はそれらをビルディングブロックとして使用してショートカットを作成できます。

たとえば、この新しいイベントの追加アクションは、カレンダーにイベントをすばやく追加するのに最適です。

これを設定して、午後6時から午後7時まで「ヨガ」と呼ばれるイベントを作成するなど、アクションをカスタマイズできます。

その後、アクションはショートカットになり、ワンタップでいつでもアクションを実行できます。

また、さまざまなアクションを組み合わせて、今日のすべてのカレンダーイベントを見つけ、それぞれに個人的な会議室のURLを追加するなど、さらに強力なショートカットを形成することもできます。

それは別の超貴重な近道を形成することができます。

そして、人々は一緒に異なるアプリのアクションを使用して、私の次のカレンダーイベントを取得し、私が遅れるというメッセージを出席者に送信するこのショートカットのように、1つのショートカットでさらに多くのことを成し遂げることができます。

そして、これらの例は、人々ができることの表面を引っ掻いているだけです。

ほんの少しのアクションを作成することで、カレンダーアプリは、Appleデバイス間でショートカットで使用できる何千もの新しいユースケースをオープンしました。

更新されたショートカットエディタを使用すると、アクションを一緒にドラッグアンドドロップすることで、誰でもショートカットを構築できます。

アクションを作成することは、ショートカットを設定していなくても、アプリを使用する人々を助けることができます。

システムにアクションを寄付すると、Siriは人々があなたのアプリをどのように使用しているかを自動的に学習し、適切なタイミングで、提案ウィジェット、検索、およびロック画面であなたの行動を提案します。

そして、人々はSiriにその名前を言うだけで、どんなショートカットでも使うことができます。

「Hey Siri、スターバックスを注文して」

そのように、Siriはアクションを開始し、アプリがアクションを実行するために必要な情報を取得するためにフォローアップの質問をすることができます。

したがって、アクションを作成することで、アプリの機能を自動的に音声対応にするので、人々はどこからでもそれを使用することができます。

それはSiriにも及んでいます。

ショートカットは、ホーム画面のショートカットウィジェットやMacのメニューバーからワンタップするなど、iOSとmacOSから実行できます。

アプリからアクションを公開することで、ショートカットの可能性の世界にアプリを開くことができます。

素晴らしいアクションを公開することで、時間を節約し、新しいものを構築できるようにすることで、ユーザーを喜ばせることができます。

そこで、このセッションでは、「アクションを素晴らしいものにするものは何ですか?」という質問に答えようとします。

そして、それを通り抜けるために、私たちはそれをいくつかの原則に分解しました。

優れたアクションは、有用で、モジュール式で、マルチモーダルで、明確で、発見可能です。

では、飛び込みましょう。

素晴らしい行動が役に立つことは明らかですが、役に立つものをデザインすることは本当に何を意味しますか?

ショートカットの文脈では、有用なアクションは、人々が通常アプリ内で行うタスクを実行するアクションです。

アクションはタスクを完全に実行し、ユースケースに必要な場合を除き、アプリをフォアグラウンドに開くのを避ける必要があります。

可能であれば、アプリを開く代わりに、フォローアップの質問をする必要があります。

リマインダーアプリを見てみましょう。 

リマインダーアプリの主な機能の1つは、新しいリマインダーを追加する機能です。

リマインダーを編集すると、さまざまな属性を設定できます。

リマインダーの追加は、リマインダーアプリ内でできることですが、アプリの外でできることも便利なので、これは素晴らしいショートカットアクションになります。

ショートカットのアクションは次のようになります。

リマインダーを設定するときに選択できるオプションは、ここでパラメータとして設定できることに注意してください。

ショートカットを使用して新しいリマインダーを追加すると、リマインダーアプリを開かずにすぐに追加する必要があります。

しかし、リマインダーアプリ内の特定のリストを表示する別のアクションをデザインしているとしましょう。

この場合、アクションの目標を達成するためにアプリを開く必要があるので、このためにアクションを実行しても大丈夫です。

しかし、新しいリマインダーを追加するためのアクションは、人々が現在のコンテキストから引き離されることなくそれを使用できるため、これよりも少し価値があります。

もう1つ考慮すべきことは、誰かがタイトルが指定されていないAdd New Reminderアクションを使用する場合など、アクションを完了するためにユーザーからより多くの情報を必要とする場合に何をすべきかです。

この場合、ショートカットを実行すると、アクションは「何を思い出させたいですか？」などのフォローアップの質問をすることができます。

可能であれば、アプリを開くのではなく、フォローアップの質問をすることで曖昧さに対処する必要があります。これは最後の手段であるべきです。

どのアクションが役立つかを決定する際に考慮すべき関連トピックは、没入です。

あなたの行動は、人々を複雑な経験に没頭させることなく、タスクを実行する必要があります。

Apple Watchアプリのアクションをデザインしているとしましょう。

このアプリの優れた機能は、ウォッチフェイスを作成してカスタマイズする機能です。

これは、多数のカスタムUIコントロールとライブビジュアルプレビューを備えた非常に複雑で視覚的な作業です。

最終的には、それは非常に没入感のある経験なので、おそらく素晴らしいショートカットアクションはできないでしょう。

一方、すでに設定されているウォッチフェイスを切り替えるような簡単なタスクは、あまり没入型ではなく、十分な注意を払わずに使用できるものです。

したがって、この機能はショートカットアクションとして本当に役立ちます。

このアクションを使用すると、ワンタップでウォッチフェイスを変更できるショートカットを作成したり、1日を通して自動的に変更するオートメーションを作成したりできます。

最後に、最も有用なアクションは、通常、最も反復可能なアクションです。

どのアクションを構築するかを決定するときは、繰り返し有用であり、迅速かつ頻繁に使用できるアクションに優先順位を付けてください。

例えば、Apple Musicアプリには友達をフォローする機能があります。

これをショートカットアクションとして公開するのはクールです。

人々は、一度に多くの友人をフォローするなど、マルチステップのショートカットでそれを使用することができます。

しかし、実際に音楽を再生するなど、友達をフォローする音楽アプリの他の機能と比較すると、友達をフォローすることは、人々がはるかに少ない頻度であることは明らかです。

時間が許せば、より多くのアクションを構築することが常に良いので、両方を作ることを検討できますが、人々が最も使用する機能のアクションを構築することを常に優先する必要があります。

したがって、便利なアクションは、理想的にはアプリを起動せずにタスクを実行し、没入感が強すぎず、反復可能であり、人々が迅速かつ頻繁に使用するアクションです。

素晴らしいアクションをデザインすることについてもっと多くのことを伝えるために、私はそれをキャメロンに引き渡すつもりです。

ありがとう、アリ！

私の名前はキャメロンで、Siriとショートカットチームのデザイナーです。

今日、私は素晴らしいアクションを設計することの細かい点を通してあなたを連れて行くことに本当に興奮しています。

まず、モジュール式のアクションを設計する方法について話しましょう。

例として、ショートカットのアクションの作成を考えている2つの別々のTo Doアプリがあると想像してください。

彼らは「Dog Do's」と「Shortcats」と呼ばれています。

彼らは両方とも同じ目標を持っています:人々が古いタスクをクリーンアップすることを可能にするショートカットを作成することです。

Dog Do'sは、「古いタスクをクリーンアップする」というアクションを作成するというアイデアを持っていますが、これは合理的に思えます。

結局のところ、それはすべてを1つにまとめます。

しかし、本当に、Catアプリは正しい考えを持っています。

彼らは、それぞれが個別に1つのことを行い、一緒にもっと多くのことができる一連のアクションを作成しました。

それが私たちのクリーンアップショートカットでどのように機能するかを見てみましょう。

ここでは、Dog Do'sとShortcatsの両方が「古いタスクをクリーンアップする」という目標を達成できることがわかります。

しかし、彼らは非常に異なる方法でそうします。

Dog Do'sには1つのアクションがありますが、CatアプリはGet TaskアクションとArchiveアクションを組み合わせて目標を達成します。

最初のアクション「1週間前に作成されたタスクを取得する」は、古いタスクを見つけ、2番目のアクションはそれらをアーカイブします。

一方、Dog Doの行動を見ると、要約が具体的ではないため、この行動が正確に何をするかは不明です。

では、誰かが猫の近道を走ったらどうなりますか?

たとえば、Siriでは、Siriはユーザーにタスクをアーカイブするかどうかを確認し、どのタスクがアーカイブされるかのプレビューを表示します。

この例では、GetアクションとArchiveアクションを連携して使用しています。

しかし、アクションはモジュール式であるため、他の組み合わせやスタンドアロンでも役立ちます。

ここでは、アーカイブアクション自体が非常に有用であることがわかります。

取得アクションなしで使用する場合は、どのタスクをアーカイブするかを尋ねる必要があります。

Getアクションは、この場合のように、1週間前に作成したすべてのタスクを表示するために使用され、単独でも役立ちます。

すでに、Shortcatsの行動はDog Doの行動よりもはるかに拡張可能であり、他の目的に再利用できないことがわかります。

Siriの提案の文脈では、Dog Doの行動は曖昧です。それがタップされた場合、それが何をするかを見分けることは困難です。

一方、Shortcatsは、タスクを取得する期間というパラメータを含むGet Tasksアクションを寄付しました。

これにより、誰かが提案をタップすると何が起こるかが非常に明確になります。

パラメータを含めると、より親しみやすく、ユーザーエクスペリエンスが向上します。

ショートカットエディタのコンテキストでは、Dog Doのアクションが曖昧で柔軟性がないことがわかりますが、Shortcatsアクションのパラメータを簡単にカスタマイズして、タスク検索のウィンドウを1週間から2週間に変更できます。

しかし、このストーリーはアプリのアクションだけでなく、ショートカットに組み込まれているアクションや他のアプリからのアクションでもあります。

これらすべてのタイプのアクションを組み合わせることで、人々はアプリでまったく新しいショートカットとユースケースを作成できます。

行動がどのように連携するのか疑問に思うかもしれません。

ショートカットエディタでどのように機能するかを確認できます。

各アクションには出力があり、変数を使用して別のアクションのパラメータに渡すことができます。

ここでは、アーカイブタスクアクションは、「Catタスク」という変数を使用して、最初のアクションで指定された基準を満たすタスクをアーカイブします。

しかし、Catアプリはさらに進んで、リマインダー、添付ファイル、親タスク、締め切り、メモ、タスクが入っているリストなど、タスクを取得アクションからの出力として追加のプロパティを公開しました。

ユーザーが他のアクションをアタッチすると、これらの出力プロパティを使用して新しい機能を作成できます。

たとえば、組み込みの「結果を表示」アクションは、「タスクを取得」アクションと一緒に使用して、古いタスクのすべてのメモを表示できます。

または、同じアクションを[ファイルの保存]アクションと組み合わせて、古いタスクからすべての添付ファイルをiCloudに保存することもできます。

出力を細かく分けてラベルを付けると、ショートカットエディタで変数を編集しているときに表示されます。

これにより、ショートカットの作成者は、アプリでも可能性を超えた新しいユースケースを作成するために使用できる強力なツールが得られます。

Shortcatsアプリのタスクやファイルアプリのファイルなど、アプリ固有の概念のアクションを作成する場合、設計を検討すべき一般的なアクションがいくつかあります。

アクションを作成します。

彼らは、新しいタスクのようないくつかのパラメータを考えると、新しいものを追加します。

新しいものは出力として渡されます。

このアクションには、追加されたものを要約したカスタムインターフェイスと対話も含める必要があります。

アクションを編集します。彼らはあなたのアプリで何かを変えます。

新しい項目は出力として渡す必要があります。

削除アクションにより、指定されたものがアプリで削除されます。

行動を起こす。

彼らはあなたのアプリで特定の基準に一致するものを見つけます。

見つかったものはすべて出力として渡されます。

アクションの取得には、見つかったものをまとめたカスタムインターフェイスとダイアログも含める必要があります。

物事の行動。

彼らは、Shortcatsアプリのタスクなど、あなたのアプリから特定のものを誰かに選択させます。

このアクションには、他のアクションで使用するために、物事を示すカスタムインターフェイスと、物事を出力として渡す必要があります。

最後に、オープンアクション。

アプリがフォアグラウンドで開かれ、特定のものが表示されます。

今、あなたはあなたの行動をモジュラーに設計する方法と理由を知っています。

物事を構成可能にし、それらを有用なスタンドアロンにし、パラメータで物事をカスタマイズ可能にし、すべてのアクションの出力を提供することを覚えておいてください。

マルチモダリティとは、1つの機能、あなたの行動、複数の方法で、コンテキストやデバイス間で機能させることです。

ショートカットアクションを設計するときは、タップまたはクリックのいずれかでUIでショートカットを実行する、Siriで音声でショートカットを実行する、ショートカットエディタでアクションを設定する場合の3つの方法で使用できることに注意してください。

ショートカットでCatのタスクの1つに締め切りを追加するとしましょう。

ショートカットをタップして実行すると、カレンダーピッカーを使用して日付を解決するためのUIが表示されます。

この同じショートカットがHomePodで実行されると、Siriは「締め切りはいつですか？」というようなプロンプトで誰かに質問をします。

そして、彼らは「明日」や「来週の火曜日」のようなものを言うかもしれません。

誰かがショートカットを実行するためにタップしたときにコンパクトなUIで、またSiriに実行するように頼んだときにHomePodで同じプロンプトがどのように使用されるかに注意してください。

プロンプトは質問として表現され、両方の文脈で適切であるため、これはうまく機能します。

対照的に、Dog Doのアプリは、iPhoneのコンパクトなUIでは問題なく見えるダイアログ「Deadline:」を選択しましたが、Siriが話すと意味がありません。

この問題を回避するには、常にプロンプトを質問として表現する必要があります。

Siriが話すための素晴らしい対話をデザインするにはもっと多くのことがあり、このトピックに関する過去数年間の私の同僚からのこれらの話をチェックすることをお勧めします。

最後に、あなたのアクションにはショートカットエディタにもインターフェイスがあり、人々はそれをビルディングブロックとして使用できます。

ショートカットエディタでは、Siriが尋ねるのと同じパラメータが、ショートカットを設定するときに作成者が編集できる青い長方形として表示されます。

この日付パラメータでは、フローティングチップは、入力されたテキストから認識される日付を表示します。

ショートカットを実行するときとエディタで設定するときの両方で、常にすべてのパラメータを使用可能にすることを目指すべきです。

アクションのパラメータを選択するときは、それぞれにタイプを選択する必要があります。

このシステムには多くのパラメータタイプが含まれており、モダリティ間でうまく機能します。

とはいえ、アクションがシステムタイプでうまく表現されていないアプリの一意のエンティティに対処する必要がある場合は、カスタムエンティティを定義できます。

例を見てみましょう。 例を見てみましょう。

ショートカットに組み込まれているSet Playback Destinationアクションは、AirPodsやBluetoothスピーカーなど、デバイスのオーディオルートを設定します。

人々が選択できるデバイスを理解するのを助けるために、ショートカットエディタは、誰かがパラメータをクリックしたときにそれらのデバイスのビジュアルを表示します。

デバイスを表すための組み込みパラメータがないため、アクションはカスタムパラメータとそれに伴うUIを定義します。

私たちはこれらのUIを「動的列挙」と呼び、あなたもそれらを作成することができます。

パラメータの値を選択できる時間は2つあります。設定と解像度です。

設定は、誰かがショートカットエディタであなたのアクションを設定しているときです。

解決は、アクションが実行されたときに発生します。

たとえば、左側には、誰かがアーカイブタスクアクションの「Catタスク」フィールドをタップしたときに表示される動的列挙です。

右側は、Siriが誰かにアーカイブしたいタスクを尋ねたときに表示されるビジュアルリストです。

これらのUIは両方とも、アーカイブアクションで同じパラメータ、設定中の左のパラメータ、解決中の右のパラメータを埋めています。

また、どちらも同じパラメータを埋めているため、両方とも同様の方法で入力する必要があります。

人々があなたのアクションのパラメータを入力する方法を学んだので、アクションを実行するときに人々に表示できるカスタムインターフェイスを簡単に見てみましょう。

私たちはこれらを「スニペット」と呼んでいます。

たとえば、スターバックスの注文コーヒーアクションを実行すると、配置される注文をプレビューするためのスニペットが表示されます。

削除や順序付けなどの永続的なアクションについては、アクションが完了した後に表示されるものと比較して、アクションが完了する前に別のスニペットを表示することを強く検討する必要があります。

事前に表示するスニペットは、人々がアクションが何をするかを理解するのに役立つはずです。

これは、彼らがそれをやり遂げることの利害関係を理解するのに役立ちます。

マルチモーダルアクションの設計には多くのことがありますが、プロンプトを質問として表現し、適切なパラメータを選択し、パラメータを充填するためのビジュアルを作成し、優れたスニペットを設計することで、順調に進んでいきます。

アクションに関するこのすべての話にもかかわらず、私たちは実際にアクションがエディタでどのように表現されるかを議論していません。

このセクションはすべてそれについてです。

iOS 13では、自然言語を使用してタスクを記述する新しいビジュアルフォーマットであるパラメータサマリーの概念を導入しました。

今年は、パラメータの要約に焦点を当てるために、ショートカットエディタのアクションの外観を再設計しました。

特に、アプリ名がアクションから削除され、アプリアイコンが「Show More」コントロールとともにインラインで統合されました。

これらの変更は、マルチステップのショートカットでアクションをさらに良く表示し、スペースを節約して、一度にさらに多くのアクションが画面に収まるようにしました。

ショートカットは、人々に新しい機能を作成し、他の人と共有する機能を与えるために存在するため、人々がエディタ自体であなたの行動で持つ経験を考慮するためにアクションを設計することが重要です。

すべてのショートカットはオープンソースであり、誰でもその中を見てどのように機能するかを確認できることを忘れないでください。

アクション自体の詳細に入る前に、パラメータの要約はアクションのタイトルとは異なることを覚えておいてください。

アクションタイトルは、ショートカットアクションリストでアクションを簡単に識別するために使用されます。

アクションタイトルは、パラメータの要約と同じ動詞で始まり、ここのようにメッセージの送信アクションでできるだけ多くの単語を共有することが重要です。

別の例を見てみましょう。 もう一度見てみましょう。

これは、Awebreathと呼ばれる私の朝の呼吸法を支援するための新しいアプリです。

このアプリは、呼吸したい長さを選択し、オプションで音楽を再生できるシンプルで焦点を絞ったUIを備えています。

アクションを設計するときは、パラメータの概要から始めます。

要約は、最も重要なパラメータを含む、実行されるアクションを簡潔に説明しています。

要約も動詞で始まり、文のように書く必要がありますが、ピリオドはありません。

Awebreathアクションには、呼吸中に再生する音楽のパラメータが含まれていますが、必須ではないため、要約には含まれません。

セミコロン、カンマ、ピリオドなどの句読点は、パラメータサマリーにも決して含まれてはいけません。

人々は、シェブロンをタップすることで展開できるオプションUIから、再生する音楽であるこのパラメータを引き続き使用できます。

必要なパラメータが空のままにされている場合、それが解決されたとき、アクションは値を要求する必要があります。

アクションに最適なエクスペリエンスに強い傾向がある場合は、パラメータのデフォルト値を提供することを検討してください。

これを行うと、実行時に質問をスキップできる場合があります。

この例では、Awebreathアプリは15分のデフォルトの呼吸時間を提供します。

パラメータが必要かどうか、またはデフォルト値があるかどうかにかかわらず、特別な変数「Ask Each Time」を使用して、任意のパラメータを質問にすることを選択できます。

これを使用すると、ショートカットは実行時にパラメータ値の入力を求めます。

このため、すべてのアクションのパラメータについて、該当する場合は、常にプロンプトおよび/または視覚的なリストを含める必要があります。

パラメータサマリーを設計するときは、動詞から始めて要約し、デフォルト値を提供することを検討し、誰かがAsk Each Timeを使用している場合に任意のパラメータを求めることができることを覚えて、オプションUIにすべてのオプションパラメータを配置してください。

最後になりましたが、自分の行動を発見し、人々の前でそれらを得る方法を理解することが重要です。

iOS 15とmacOS Monterreyでは、アクションを含むマルチステップのショートカットを簡単に共有できるショートカットの新しい共有方法を導入しました。更新されたダウンロードUIには、ショートカットを実行できる場所も表示されるので、人々は何を期待するかを知っています。アプリの作成者として、あなたのウェブサイト、ソーシャルメディアチャンネル、またはアプリのヘルプセクションでアクションを使用するマルチステップショートカットへのリンクを配置して、アクションを一緒に使用する方法について人々にアイデアを与えることができます。また、誰かが「Siriに追加」をタップすると、提案された呼び出しフレーズを使用して、ショートカットが即座に追加されます。この新しいUIは、提案された呼び出しフレーズを強調するので、人々はあなたのショートカットを実行するためにSiriに何を言うべきかを知っています。また、追加した直後にショートカットのオーディションを受けることを奨励します。推奨される呼び出しフレーズを提供しない場合、誰かが「Siriに追加」をタップした直後にショートカットは追加されません。代わりに、彼らは独自のショートカット名を提供するように求められますが、これは経験ほどシームレスではなく、誰かがあなたのショートカットを正常に追加して使用する可能性を減らします。

これは、ショートカットを共有し、人々の前で行動を起こすための変更のラップです。

そして、ショートカット、Siri、提案のアクションを設計する方法について話し合いました。

素晴らしいアクションは、有用で、モジュール式で、マルチモーダルで、明確で、発見可能です。

アクションをデザインする幸運を祈ります。

あなたが何を構築し、それがショートカットの世界にどのように貢献するかを見るのが待ちきれません。素晴らしいWWDCをお過ごしください。

[明るい音楽]。