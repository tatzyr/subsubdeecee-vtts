10142

♪ベース音楽の演奏♪

♪

サイモン・ゴールドレイ:こんにちは。

このセッションでは、HLSでメディアをギャップレスに移行する方法についてです。

私はサイモンで、ここアップルのストリーミングメディアチームのメンバーです!

AVQueuePlayerを使用していますか、それともアプリケーションでHLSアイテムのシームレスで次のスタイルの再生を顧客に提供したいですか?

プロデューサーが意図した継続性をメディアに提示したいですか？

メディアをより長く楽しむ体験を提供することで、お客様をサポートできますか?

はいの場合、最高のセッションにチューニングして、HLSアイテムをギャップレスに移行する方法を学びました。

これが私たちの議題です。

この新機能で提供できる魅力的なメディア体験のいくつかを調査し、メディアオーサリングの要件を詳述し、ベストプラクティスを強調するいくつかのプレイリストの例をステップスルーし、デモで締めくくります。

AVQueuePlayerでHLSに裏打ちされたAVPlayerItemsを移行する利点は簡単です。

今まで、移行のポイントは少し不快になる可能性があります。可聴的な不具合から瞬間的な視覚的なしゃっくり、さらには不確定なバッファリングの兆候まで何でも。

ギャップレスアイテムの移行は、アプリケーションが顧客とコンテンツの間に提供する絆を維持します。

「そのダイヤルに触らないで」というフレーズを思い出すかもしれません。

あるエピソードの終わりから別のエピソードの始まりにシームレスに移行するエピソード治療を構築できます。

ギャップレストランジションは、私たちが長い間楽しんできたシームレスなトラックツートラックアルバム体験を再現することを可能にします。

これを行うとき、私たちはライブまたは意図的に作成された可能性のあるもののより正しい複製を提供しています。

私たちは、途切れることのない、途切れることのない体験を提供することができます。

線形プログラミングを複製できます。

しかし、私たちはまた、あるタスクやシーンから視聴者を連れて行き、次のタスクに直接進む、ダイナミックでおそらくインタラクティブな体験を提供することができます。

一連のトレーニングまたは他の教育メディアの間の移行を検討してください。

ギャップレストランジションにより、正確な連続性を維持しながら、プログラムで視聴覚シーケンスのシーンをステッチできるようになりました。

担当者を追加できます...

...または、ワークアウトにクールダウンを追加します。

HTTPを介したアダプティブビットレートメディアストリーミングのすべての利点を備えたメディアを提供しながら、これらすべてを達成することができます。

もちろん、私たちもこれを使います!

Apple Musicの新機能は、HLSを介してコンテンツを配信し、各曲間のギャップのない移行を実現します。

私たちはこれをお客様にお届けすることに非常に興奮しており、お客様のお客様にも提供したいと考えています。

それでは、HLSコンテンツの同じアイテムの遷移に影響を与えるために組み込む必要があるオーサリング要件を詳しく見てみましょう。

HLSマニフェストで、シーケンシャルアイテム間のオーディオフォーマットの連続性を提供するバリアントを提供することで、ギャップレストランジションを可能にします。

コンテンツは、次のオーディオメディア特性に一致するバリアントを提供する必要があります。FairPlayストリーミングの使用、ストリームタグのコーデック属性で指定されたオーディオコーデック、およびメディアタグのチャンネル属性で指定されたチャンネル数。

異なるサンプルレートとビット深度でオーディオレンディションを提供することにした場合、ギャップレス遷移を阻害する可能性があることに注意してください。

マッチを提供し、継続性を維持するための同じアドバイスは、これらの特性にも当てはまります。

つまり、ギャップレストランジションを達成するために、連続してキューに入れられたアイテムに対して、各バリアントで同等のオーディオメディアを提供するようにしてください。

最後に、メディアをオーサリングするときは、CMAFオーサリングガイダンスに従ってください。

CMAFは「一般的なメディアアプリケーションフォーマット」の略です。

このMPEG仕様では、プライミングフレームと残りのフレームの存在を知らせるために編集リストを使用する特定の推奨事項があります。

次に、2つの候補アイテムのマスターバリアントプレイリストを調べて、簡単な例を見てみましょう。

このHLSマニフェストでは、720pバリアントと1080pバリアントのペアの4つの視聴覚バリアントを提供しました。

各ペア内で、高効率高度なオーディオコーデック、HE_AAC、およびAAC Low Complexity、またはAAC_LCでエンコードされたバリアントを提供します。

この例では、再生条件がHE_AACとペアリングされた720pビデオの選択をサポートしていることを考慮してください。

再生が終わりに近づくと、AVQueuePlayerは、少なくとも最初に、後続のアイテムで提供される同様にエンコードされたバリアントを選択します。

これは、ネットワーク条件が高品質の層をサポートしている場合でも当てはまります。

ギャップレストランジションのサービスは、ギャップレストランジション時に高品質を選択するよりも優先度が高い。

再生が進むにつれて、アダプティブビットレートヒューリスティックが評価され、条件が続く場合、プレーヤーはそのより高い品質にシームレスに切り替えます。

すばらしい

さて、項目2でHE_AACを提供しなかったとします。

その場合、AVQueuePlayerはオーディオの連続性とギャップレストランジションを維持することはできませんが、再生条件に最も適した初期バリアントを自由に選択できます。

ギャップレスな移行をサポートするためにコンテンツを作成したとしましょう。

その場合は、AVQueuePlayerの使い方を思い出す必要があります。

ここに短いコードスニペットがあります。

2つのAVPlayerItemを作成し、再生前に順番にキューに入れます。

私たちのアイテムは2つの異なるURLから供給されていることに注意してください。

AVQueuePlayerを作成した後、「insert after」メソッドを使用して、キュープレーヤーに意図したシーケンスを通知できます。

残っているのは「プレイ」というメッセージだけです。

あなたと共有したい高度なテクニックは、単一の資産の使用を許可します。

このアセットから、複数のAVPlayerItemsをインスタンス化できます。

AVQueuePlayerでキューに入れる前に、それぞれの異なるAVPlayerItemで異なるインポイントとアウトポイントを定義できます。

AVPlayerItem seekToTimeメソッドを使用して、インポイントを定義できます。

次に、forwardPlaybackEndTimeでアウトポイントを定義できます。

これがこのコンセプトの実例です。

項目1、2、および3はすべて同じAVAssetから供給され、同じ3つのシーンで構成されています。

それらは、seekToTimeを使用して異なるポイントでそれぞれをキューし、forwardPlaybackEndTimeを使用して異なるアウトポイントを定義したという点で異なります。

今、私はこれら3つの同一のアイテムをAVQueuePlayerにキューに入れることができ、私が達成するのはカスタマイズされた動的シーケンスです。

では、デモでギャップレスなトランジションを見て聞いてみましょう。

このデモでは、3つのワークアウトビデオストリームをインタラクティブに縫い合わせます。

AVKitコントロールをそれぞれに表示したままにして、これらが個別のストリームリソースであることを実際に確認できるようにしました。

まず、3つすべてのシームレスな再生を表示してから、シーケンスをインタラクティブに編集します。

ソフトウェアでは、同じものを提供すること、またはおそらく並べ替えを実行することをプログラムで想像することができます。

そうだね！ウォームアップをしましょう。

♪エネルギッシュなエレクトロニックミュージック♪

♪

準備ができているかどうか?丘を走りましょう。

♪賑やかなヒップホップ音楽♪

♪

それでおそれ！私たちは終わりました。クールダウンの時間です。

♪落ち着いたエレクトロニックミュージック♪

♪

それを見ているだけで汗をかくことができます。

「それでおやおや、私たちは終わった」にまっすぐスキップして、丘のランをスキップしたくなります。

ここサンフランシスコにはそれがたくさんあります。 

これを行うには、エクササイズセットの順序を編集しましょう。

丘の運動を一番上に移動します。

これにより、ウォームアップを行い、すぐに隙間なくクールダウンに進むことができます。

次に、最初のトレーニングとして、2番目の位置にあるウォームアップを選択することから始めます。

そうだね！ウォームアップをしましょう。

♪エネルギッシュなエレクトロニックミュージック♪

♪

それでおそれ！私たちは終わりました。クールダウンの時間です。

♪落ち着いたエレクトロニックミュージック♪

♪

このセッションで学んだ重要なポイントをまとめましょう。

HLSを使用してギャップレストランジションを実現するには、オーディオフォーマットが一致する各アイテムにバリアントを提供する必要があることを学びました。

次に、アイテムを順番にキューに入れるだけで、ギャップレストランジションを実行するようにAVQueuePlayerに指示するのがいかに簡単かを見ました。

バリアント発見のための新しいAPIを紹介する関連セッションが1つあります。

ソフトウェアやサービスが一致するオーディオフォーマットの項目を保証できない場合、そのセッションが役に立つかもしれません。

このセッションを楽しんで、このWWDC 2021の残りの部分を楽しんでいただければ幸いです。

ありがとうございます。

♪