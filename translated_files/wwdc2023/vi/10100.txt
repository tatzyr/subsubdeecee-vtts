10100

♪ Hip-hop nhạc cụ êm dịu ♪

♪

Xin chào, tên tôi là Roy, và tôi là một kỹ sư trong nhóm Hiệu suất.

Hôm nay, chúng ta sẽ tìm hiểu cách bạn có thể tối ưu hóa ứng dụng của mình cho điện toán không gian.

Đầu tiên chúng ta sẽ xem xét các khía cạnh độc đáo của nền tảng mới này về hiệu suất và sức mạnh.

Sau đó chúng tôi sẽ xem xét việc xây dựng một kế hoạch hiệu suất, bắt đầu bằng việc lập hồ sơ ứng dụng của bạn.

Và cuối cùng, chúng ta sẽ tham quan những cách tốt nhất để tối ưu hóa các vấn đề về hiệu suất cho nền tảng này.

Vậy điều gì làm cho tính toán không gian khác biệt về sức mạnh và hiệu suất?

Đối với một người, nội dung trên màn hình luôn được cập nhật, bất kể cập nhật ứng dụng.

Bất cứ khi nào mọi người di chuyển cơ thể, bàn tay hoặc mắt của họ, nội dung cần được cập nhật.

Điều này có nghĩa là hệ thống luôn hiển thị mọi khung hình mọi lúc.

Nền tảng cũng luôn chạy các thuật toán không gian để tạo hình ảnh và tương tác trên mọi ứng dụng và có thể chạy nhiều ứng dụng cùng một lúc.

Mọi người sẽ sử dụng ứng dụng của bạn với các ứng dụng khác.

Để xử lý đa nhiệm và hệ thống bổ sung hoạt động, hãy tối ưu hóa việc sử dụng tài nguyên ứng dụng của riêng bạn nhiều nhất có thể.

Để mang lại trải nghiệm người dùng tuyệt vời, hiệu suất trong ứng dụng của bạn là điều cần thiết.

Mọi người muốn các ứng dụng phản hồi ngay lập tức với đầu vào và cung cấp các bản cập nhật trực quan mượt mà để có cảm giác đắm chìm và thoải mái.

Hãy nói về cách lập hồ sơ và phân tích ứng dụng của bạn cho các vấn đề về hiệu suất.

Bạn có thể đã quen thuộc với các chỉ số hiệu suất từ các nền tảng khác của Apple.

Trên bất kỳ nền tảng nào, mọi người muốn các ứng dụng khởi chạy nhanh chóng, tránh hao mòn đĩa và không sử dụng quá nhiều pin.

Họ cũng muốn các ứng dụng tránh chấm dứt do sử dụng bộ nhớ không hiệu quả.

Với tính toán không gian, một số chỉ số này mang ý nghĩa mới.

Nắm quyền lực.

Người dùng muốn các ứng dụng được tối ưu hóa về năng lượng, không phải cho thời lượng pin, mà vì áp suất nhiệt.

Để duy trì hiệu suất tuyệt vời, các ứng dụng cần được tối ưu hóa cho việc sử dụng năng lượng của hệ thống, để giảm khả năng gặp phải áp suất nhiệt.

Treo cổ là một ví dụ khác.

Chúng xảy ra khi luồng chính của ứng dụng bị đình trệ khi làm việc trong một khoảng thời gian.

Nhưng trên nền tảng này, ngay cả những gian hàng nhỏ, nhất thời cũng làm gián đoạn khả năng phản hồi.

Bây giờ hãy xem xét kết xuất.

Trên các nền tảng khác, bạn có thể tối ưu hóa hiệu suất kết xuất chủ yếu để cung cấp giao diện người dùng mượt mà và hoạt ảnh 3D.

Nhưng ở đây, hiệu suất kết xuất cũng rất cần thiết cho nội dung tĩnh, vì hệ thống luôn kết xuất.

Tất cả các nền tảng của Apple đều cung cấp các công cụ để lập hồ sơ các chỉ số này.

Hôm nay, chúng tôi sẽ đề cập đến việc tìm kiếm các vấn đề về hiệu suất dành riêng cho các ứng dụng điện toán không gian.

Nhưng để tìm hiểu thêm về việc tối ưu hóa các chỉ số này trên bất kỳ nền tảng nào của Apple, hãy xem phiên "Hướng dẫn sinh tồn hiệu suất ứng dụng tối ưu".

Để tối ưu hóa ứng dụng của bạn, hãy lập hồ sơ trong quá trình phát triển bằng cách sử dụng các công cụ như Công cụ và Máy đo Xcode.

Khi ứng dụng của bạn được phát hành, hãy thu thập thêm dữ liệu từ hiện trường để giúp bạn tối ưu hóa hơn nữa ứng dụng của mình.

Hãy nói nhiều hơn về hồ sơ trong quá trình phát triển.

RealityKit Trace là một mẫu hoàn toàn mới trong Instruments để giúp lập hồ sơ bất kỳ ứng dụng điện toán không gian nào về hiệu suất và sức mạnh.

Đây là một công cụ đáng kinh ngạc có thể giúp xác định khi nào ứng dụng của bạn có hiệu suất kết xuất kém hoặc khi nào nó gây ra việc sử dụng năng lượng hệ thống cao.

Có rất nhiều mẫu nhạc cụ khác mà bạn cũng có thể sử dụng.

Để tìm hiểu thêm và khám phá mẫu mới này đang hoạt động, hãy xem phiên "Gặp gỡ RealityKit Trace".

Hiệu suất và sức mạnh của ứng dụng của bạn phụ thuộc vào cách ai đó tương tác với nó.

Trình mô phỏng không thực hiện công việc giống như một thiết bị thực, vì vậy dữ liệu hiệu suất của nó có thể không chính xác.

Hồ sơ trong thiết bị.

Hồ sơ sử dụng các tương tác khác nhau trong ứng dụng của bạn khi phát âm thanh hoặc video hoặc khi sử dụng các công nghệ như FaceTime và Personas.

Đảm bảo kiểm tra hiệu suất tốt và công suất hệ thống thấp trong vài phút sử dụng.

Cuối cùng, hãy thử lập hồ sơ trong khi các ứng dụng khác cũng đang chạy và sử dụng tài nguyên.

Nếu bạn đang mang đến các ứng dụng iPad và iPhone tương thích, hãy đảm bảo lập hồ sơ chúng trên thiết bị để xác định các tối ưu hóa cần thiết hơn nữa.

Sau khi phát triển, mọi người có thể chạy ứng dụng của bạn trong nhiều điều kiện khác nhau.

Dữ liệu từ hiện trường là một cách tuyệt vời để tìm ra các vấn đề mà mọi người đang thực sự gặp phải.

Khi ứng dụng của bạn đang trong giai đoạn thử nghiệm hoặc được phát hành công khai, hãy sử dụng MetricKit để nhận báo cáo chẩn đoán từ người dùng.

Xcode Organizer cung cấp dữ liệu hiệu suất tổng hợp từ các thiết bị của người dùng đồng ý, bao gồm chẩn đoán năng lượng để giúp tìm ra bất kỳ vấn đề năng lượng nào.

Tất cả dữ liệu bạn thu thập này giúp bạn tìm ra các nút thắt cổ chai và ưu tiên công việc hiệu suất cho ứng dụng của mình.

Bây giờ, hãy nói về việc tối ưu hóa ứng dụng điện toán không gian của bạn.

Các vấn đề về hiệu suất có thể phát sinh từ nhiều lĩnh vực.

Hôm nay, chúng tôi sẽ đề cập đến các chiến lược để tối ưu hóa một số lĩnh vực cốt lõi: kết xuất, đầu vào của người dùng, ARKit, phát lại âm thanh và video, SharePlay và chấm dứt ứng dụng do áp lực hệ thống.

Hiệu suất kết xuất tuyệt vời là một trong những ưu tiên hàng đầu cho trải nghiệm người dùng tuyệt vời.

Hãy đi sâu vào.

Trong nền tảng này, đường ống kết xuất bắt đầu với ứng dụng của bạn, ứng dụng này chịu trách nhiệm cập nhật nội dung ứng dụng của bạn.

Giống như tất cả các nền tảng của Apple, giao diện ứng dụng của bạn được cập nhật trên luồng chính và phải cung cấp các bản cập nhật kịp thời.

Vì ứng dụng của bạn được hiển thị trong không gian 3D cùng với các ứng dụng khác, các bản cập nhật của nó sẽ được gửi đến máy chủ kết xuất hệ thống.

Máy chủ kết xuất liên tục chạy để xử lý các bản cập nhật từ các ứng dụng, đầu vào của người dùng và từ không gian và môi trường xung quanh họ.

Nó hiển thị một khung mới với tất cả các bản cập nhật này và gửi nó đến bộ tổng hợp.

Bộ tổng hợp luôn hiển thị.

Nó cung cấp các khung hình mới cho màn hình với tốc độ phù hợp với tốc độ làm mới của màn hình.

Điều này giúp mang lại trải nghiệm thoải mái.

Tốc độ này thường là 90 khung hình một giây, nhưng có thể cao hơn.

Trong khi bộ tổng hợp cập nhật màn hình một cách nhất quán, trải nghiệm người dùng tuyệt vời vẫn cần cập nhật trực quan nhanh chóng từ ứng dụng của bạn.

Nếu ứng dụng của bạn có nội dung hoặc cập nhật mất quá nhiều thời gian để kết xuất, máy chủ kết xuất có thể bỏ lỡ thời hạn kết xuất để có độ trễ kết xuất tối ưu.

Điều này có nghĩa là hình ảnh ứng dụng có thể đã đến trình tổng hợp trên khung Y, nhưng thay vào đó lại xuất hiện trên khung Y+1.

Điều này làm trì hoãn các cập nhật trực quan mà mọi người nhìn thấy trên màn hình và làm cho ứng dụng của bạn cảm thấy ít phản hồi hơn.

Các gian hàng kết xuất đặc biệt nghiêm trọng thậm chí có thể khiến ứng dụng của bạn bị chấm dứt.

Cho dù ứng dụng của bạn được xây dựng trên SwiftUI, UIKit, RealityKit hay Metal, bạn muốn tối ưu hóa nội dung và cập nhật của nó để giảm giảm tải khung hình và công việc được thực hiện trong máy chủ kết xuất.

Hãy bắt đầu với việc tối ưu hóa việc sử dụng SwiftUI và UIKit.

Trên nền tảng này, hệ thống hiển thị hoạt động cho nội dung giao diện người dùng tĩnh, ngay cả khi không có bản cập nhật ứng dụng.

Công việc kết xuất này có thể tăng lên từ việc thấu chi.

Sự thấu chi xảy ra khi bạn có nội dung mờ trước nội dung ảo khác.

GPU phải làm việc để hiển thị cả hai nội dung, nhưng nếu nội dung mờ đó hoàn toàn mờ đục, GPU sẽ không cần hiển thị bất kỳ giao diện người dùng nào đằng sau nó.

Nếu bạn có bất kỳ chế độ xem giao diện người dùng chồng chéo nào với độ lệch Z, hãy tránh thêm độ trong mờ cho chúng.

Ngoài ra, càng có nhiều điểm ảnh trên màn hình mà giao diện người dùng ứng dụng của bạn chiếm, càng có nhiều công việc được thực hiện để hiển thị cửa sổ.

Cân nhắc giảm kích thước mặc định của chúng.

Các bản vẽ lại giao diện người dùng trong máy chủ kết xuất thường được kích hoạt bởi các bản cập nhật ứng dụng, nhưng trên nền tảng này, chúng cũng được kích hoạt bởi sự mở rộng nội dung động của các lớp hoạt hình cốt lõi.

Với hành vi này, độ phân giải của văn bản hoặc nội dung giao diện người dùng dựa trên vectơ thay đổi dựa trên nơi người dùng đang tìm kiếm để cho phép hình ảnh sắc nét hơn.

Điều này cũng có thể dẫn đến việc vẽ lại nội dung giao diện người dùng thường xuyên hơn ở quy mô cao hơn, ngay cả khi không có bản cập nhật ứng dụng.

SwiftUI và UIKit cho phép hành vi này theo mặc định, nhưng các ứng dụng thực hiện kết xuất Core Animation hoặc Core Graphics tùy chỉnh có thể chọn tham gia hành vi này.

Để tìm hiểu thêm về lợi ích thị giác và sự đánh đổi của nó, hãy xem phiên "Khám phá kết xuất cho điện toán không gian".

Chi phí của những bản vẽ lại này bị ảnh hưởng nặng nề bởi các đường chuyền kết xuất ngoài màn hình.

Điều này có thể được gây ra bởi các hiệu ứng hình ảnh như bóng, mờ và mặt nạ.

Giảm các hiệu ứng này để giúp hệ thống hiển thị ứng dụng của bạn dễ dàng hơn.

Để giảm thiểu việc vẽ lại trong ứng dụng của bạn, hãy tránh các bản cập nhật xem không cần thiết bất cứ khi nào có thể.

Ví dụ, với SwiftUI, sử dụng @Observable.

@Observable cung cấp theo dõi thay đổi chi tiết hơn và giảm các cập nhật bố cục không cần thiết.

Tiếp theo, hãy nói về việc tối ưu hóa kết xuất 3D với RealityKit.

SwiftUI đã thêm RealityView trong năm nay cho điện toán không gian.

Nó có thể hiển thị nguyên bản các cảnh RealityKit 3D trong hệ thống phân cấp SwiftUI.

Ứng dụng của bạn phải là một công dân tốt trên nền tảng bằng cách tối ưu hóa các cảnh 3D của bạn cho tất cả các tính năng RealityKit này.

Trong những cảnh 3D này, sự phức tạp của các tài sản mà chúng chứa có thể làm tăng đáng kể số lượng công việc máy chủ kết xuất được thực hiện mỗi khung hình.

Vì vậy, hãy bắt đầu bằng cách tối ưu hóa các tài sản này.

Reality Composer Pro giúp bạn tạo các cảnh RealityKit từ tài sản.

Từ kết xuất lưới, hạt, hoạt ảnh, vật lý và công việc âm thanh, công cụ này cung cấp số liệu thống kê về toàn bộ cảnh có thể giúp bạn hiểu tác động hiệu suất của nó.

Khi kiểm tra các số liệu thống kê này, những con số thấp hơn thường có nghĩa là ít công việc hơn, điều này có thể cải thiện hiệu suất kết xuất.

Xem phiên "Tạo mô hình 3D cho trải nghiệm không gian Quick Look" để tìm hiểu thêm về các phương pháp hay nhất cho hình ảnh và sử dụng năng lượng của tài sản 3D.

Kết xuất lưới nói riêng là một phần cốt lõi của kết xuất 3D.

Các mắt lưới và vật liệu phức tạp có thể nhanh chóng trở thành tắc nghẽn hiệu suất.

Tối ưu hóa hình dạng của tài sản lưới của bạn.

Giảm số lượng các bộ phận lưới riêng biệt bằng cách kết hợp các bộ phận có chung vật liệu.

Hình học lưới với số lượng tam giác và đỉnh cao cũng có thể tốn kém.

Sử dụng tài sản với số lượng nhỏ hơn khi cần thiết.

Giảm thiểu tác động của việc thấu chi bằng lưới 3D của bạn.

Để làm điều này, hãy sử dụng tính minh bạch một cách tiết kiệm giống như với nội dung giao diện người dùng.

Vật liệu "Dựa trên vật lý" trong Reality Composer Pro có ánh sáng môi trường, được tối ưu hóa tốt và hoạt động tốt nhất cho các mắt lưới có độ trong suốt tối thiểu.

Nhưng đối với nội dung mờ hoặc rất lớn, hãy cân nhắc sử dụng vật liệu Tùy chỉnh với bề mặt không sáng, Sử dụng kết cấu ánh sáng nướng hoặc hình ảnh rẻ hơn khác.

Điều này giúp tránh các tắc nghẽn tiềm ẩn với các tính toán ánh sáng đắt tiền hơn.

Để được hướng dẫn thêm về việc xây dựng và sử dụng vật liệu trong RealityKit, hãy xem hai phiên này.

Có nội dung được tối ưu hóa để kết xuất thời gian chạy là một khởi đầu tuyệt vời.

Nhưng bạn thậm chí còn có thể làm nhiều hơn để tối ưu hóa ứng dụng của mình với RealityKit.

Khi ứng dụng của bạn cập nhật nội dung RealityKit, các bản cập nhật sẽ được gửi đến máy chủ kết xuất, máy chủ này sẽ áp dụng và hiển thị chúng.

Nhưng quá nhiều bản cập nhật trong một khoảng thời gian ngắn có thể trở thành nút thắt cổ chai cho máy chủ kết xuất.

Ví dụ, ứng dụng của bạn có thể đang nhanh chóng tạo và phá hủy các thực thể RealityKit.

Nó có thể có quá nhiều hình ảnh động phức tạp, đang cập nhật quá nhiều chế độ xem SwiftUI hoặc nó có thể đang tải nhiều nội dung trong một khung hình duy nhất.

Tạo các thực thể trước, và ẩn hoặc hiển thị chúng khi cần thiết.

Bạn có thể xóa và thêm chúng vào hệ thống phân cấp cảnh hoặc sử dụng cờ isEnabled.

Giảm thiểu số lượng thực thể được cập nhật bằng cách làm phẳng hệ thống phân cấp thực thể lưới của bạn.

Đối với hoạt ảnh dựa trên mã, hãy xem xét tỷ lệ cập nhật thấp hơn hoặc giảm số lượng thực thể mà hoạt ảnh cập nhật.

Và khi cập nhật các thực thể RealityKit, tránh vô tình kích hoạt vẽ lại SwiftUI quá mức.

Khi sử dụng tệp đính kèm, hãy đảm bảo tối ưu hóa kết xuất của chúng giống như cách bạn tối ưu hóa cho tất cả nội dung SwiftUI.

Tải các nội dung phức tạp cũng có thể kích hoạt các bản cập nhật kết xuất đắt tiền.

Các tài sản phức tạp cũng có thể góp phần vào thời gian khởi chạy ứng dụng và tải nội dung cao.

Sử dụng API tải không đồng bộ trong thời gian chạy để tránh chặn luồng chính và tải tài sản tốt trước khi chúng cần thiết.

Các thực thể sử dụng cùng một tài sản cũng có thể chia sẻ tài sản đó và chỉ tải nó một lần.

Sử dụng các tệp đã xuất từ Reality Composer Pro vì các tệp này được tối ưu hóa cho thời gian tải và chi phí bộ nhớ.

Bạn cũng được nén kết cấu miễn phí.

Giảm kích thước tài sản thường tăng tốc độ tải, nhưng hãy nhớ rằng việc nén kết cấu đã xảy ra với các tệp Reality Composer Pro, vì vậy bạn có thể không cần phải tự làm điều đó.

Cuối cùng, hãy nói về những trải nghiệm nhập vai với RealityKit.

Khi ứng dụng của bạn yêu cầu chuyển sang một không gian đầy đủ chuyên dụng, nó sẽ trở thành trải nghiệm tiền cảnh duy nhất đang chạy.

Khi sử dụng cổng thông tin hoặc chuyển sang trải nghiệm nhập vai hoàn toàn, hệ thống cũng ẩn một phần hoặc toàn bộ môi trường xung quanh của người đó.

Ứng dụng của bạn có thể tạo ra một môi trường với nội dung RealityKit để lấp đầy không gian của họ.

Nội dung nhập vai hoàn toàn của bạn cần được hiển thị với nhiều điểm ảnh hơn trên màn hình so với các cảnh trong không gian chung hoặc không gian đầy đủ.

Điều này có nghĩa là có thể thực hiện nhiều công việc hơn trên GPU để hiển thị nội dung đó.

Tối ưu hóa loại nội dung này để sử dụng năng lượng GPU.

Bắt đầu với vật liệu "Tùy chỉnh" với bề mặt không sáng trong Reality Composer Pro để sử dụng năng lượng tối ưu.

Cân nhắc thêm kết cấu ánh sáng nướng hoặc sử dụng hình ảnh động dựa trên thời gian để có cảm giác ánh sáng năng động thay thế.

Lập hồ sơ tài liệu của bạn về sức mạnh hệ thống và hiệu suất kết xuất.

Bạn cũng có thể tạo ra những trải nghiệm hoàn toàn nhập vai với Metal.

Đối với những người bạn xây dựng công cụ 3D hoặc trải nghiệm sử dụng Metal, hãy nói về một số điều cần tối ưu hóa.

Bạn có thể sử dụng Metal với khung CompositorServices để bỏ qua máy chủ kết xuất và gửi một bề mặt kết xuất trực tiếp đến bộ tổng hợp.

Xem phiên "Khám phá kim loại cho các ứng dụng nhập vai" để tìm hiểu cách thực hiện điều này đúng cách.

Khi sử dụng CompositorServices, hãy tăng tốc độ gửi khung Kim loại của bạn để bộ tổng hợp nhận được một khung mới trên mỗi bản cập nhật của nó.

Đảm bảo truy vấn bản đồ tìm kiếm mới và đăng dự đoán từng khung.

Và truy vấn dữ liệu đầu vào này vào giây phút cuối cùng trước khi bạn bắt đầu sử dụng nó để mã hóa công việc GPU.

Làm cả ba điều này giúp đảm bảo nội dung ảo đáp ứng liên quan đến chuyển động và đầu vào của người dùng.

Nếu ứng dụng mất quá nhiều thời gian để gửi một khung mới, hệ thống sẽ chấm dứt nó.

Tránh bất kỳ gian hàng khung dài nào.

Đảm bảo lập hồ sơ hiệu suất GPU bằng cách sử dụng mẫu Metal System Trace Instruments trong khi chạy ứng dụng của bạn.

Việc thực thi đổ bóng phân đoạn và đỉnh dài từ ứng dụng Metal của bạn hoặc từ các vật liệu tùy chỉnh với Reality Composer Pro có thể ảnh hưởng nặng nề đến thời gian kết xuất hệ thống.

Để giảm thời gian phân mảnh và đỉnh, hãy bắt đầu bằng cách giảm các hướng dẫn ALU và truy cập kết cấu bằng bộ đổ bóng.

Đối với Kim loại, hãy sử dụng bộ đổ bóng tính toán thay thế bất cứ khi nào có thể.

Xem lại các cuộc nói chuyện này để tìm hiểu thêm về việc tối ưu hóa hiệu suất GPU của bạn.

Hãy nhớ rằng, tối ưu hóa ứng dụng của bạn cho giao diện người dùng và hiệu suất kết xuất 3D mang lại lợi ích cho trải nghiệm người dùng tổng thể.

Bây giờ chúng ta hãy chuyển sang hiệu suất đầu vào.

Mọi người có thể sử dụng mắt, tay, giọng nói và đầu vào phần cứng của họ trên nền tảng này.

Các bản cập nhật ứng dụng cho đầu vào được xử lý trên luồng chính.

Nếu những thứ này mất quá nhiều thời gian, nó sẽ khiến ứng dụng của bạn cảm thấy chậm và không phản hồi.

Các cập nhật đầu vào trên chuỗi chính cần hoàn thành trong thời hạn nhất định dựa trên tốc độ làm mới màn hình.

Phần cứng cho nền tảng này thường có tốc độ làm mới từ 90 hertz trở lên.

Đối với tốc độ làm mới 90 hertz, hãy giữ các bản cập nhật đầu vào dưới tám mili giây để có độ trễ tối ưu.

Khi tương tác với nội dung không gian, hệ thống sẽ thực hiện công việc thử nghiệm để kiểm tra giao diện người dùng hoặc đối tượng 3D mà người dùng đang cố gắng tương tác.

Đối với nội dung RealityKit, bạn sẽ thêm các máy va chạm vật lý để tương tác với chúng.

Khi thêm các máy va chạm này, hãy sử dụng máy va chạm tĩnh thay vì máy va chạm động bất cứ khi nào có thể, vì máy va chạm tĩnh rẻ hơn.

Để giảm công việc kiểm tra lượt truy cập dư thừa trong ứng dụng của bạn, hãy giảm thiểu sự chồng chéo bất kỳ nội dung tương tác nào.

Bây giờ, hãy chuyển sang ARKit.

Trên nền tảng này, các thuật toán ARKit luôn chạy để tạo hình ảnh và tương tác trên mọi ứng dụng.

Ứng dụng của bạn có thể tác động đến sức mạnh hệ thống và sự mượt mà của hình ảnh dựa trên cách nó sử dụng dữ liệu ARKit và neo nội dung ảo.

Ví dụ: ứng dụng của bạn có thể sử dụng ARKit hoặc RealityKit để đặt nội dung neo vào môi trường xung quanh, đầu hoặc tay của người dùng.

Mỗi neo bổ sung thêm công việc bổ sung cho hệ thống.

Khi neo nội dung, hãy xem xét liệu các neo có cần được theo dõi liên tục trong không gian của người dùng hay không.

Khi sử dụng AnchorComponent trong RealityKit, hãy sử dụng chế độ theo dõi "một lần" để tránh chi phí theo dõi liên tục.

Giảm thiểu tổng số lượng neo liên tục và thoáng qua từ ứng dụng của bạn.

Đặc biệt đối với các neo liên tục, mọi ứng dụng đều có thể thêm chúng, vì vậy hãy cố gắng không thêm quá nhiều từ ứng dụng của riêng bạn.

Thậm chí còn có nhiều tối ưu hóa hơn mà bạn có thể thực hiện trong khi sử dụng dữ liệu ARKit.

Nếu bạn áp dụng dữ liệu ARKit quá cũ cho nội dung ứng dụng, hình ảnh ứng dụng có thể không đồng bộ với đầu vào.

Truy vấn dữ liệu ARKit ngay trước khi nó cần được sử dụng và áp dụng nó để cập nhật kịp thời.

Dự đoán bài đăng rất tốn kém để tính toán.

Nói chung, chỉ các công cụ kết xuất Kim loại tùy chỉnh mới cần dữ liệu này.

Nếu bạn chỉ muốn đặt nội dung ứng dụng trong cảnh, RealityKit là một lựa chọn tuyệt vời thay thế.

Tạo dữ liệu va chạm cho các mắt lưới hiểu cảnh cũng rất tốn kém.

Nếu bạn sử dụng dữ liệu này, hãy tắt nó khi ứng dụng của bạn không cần nó nữa.

Bây giờ, hãy nói về việc tối ưu hóa phát lại âm thanh và video cho điện toán không gian.

Âm thanh không gian được sử dụng theo mặc định trên nền tảng này.

Hệ thống xử lý thông tin trong thời gian thực về vị trí của người dùng, môi trường xung quanh và nguồn âm thanh để xuất ra âm thanh.

Nếu ứng dụng của bạn gây ra quá nhiều công việc âm thanh không gian, nó có thể gây ra sự cố với việc sử dụng năng lượng hệ thống hoặc dẫn đến sự chậm trễ trong đầu ra âm thanh.

Nếu bạn thấy những vấn đề này, có ba điều chính cần xem xét để giảm hoạt động âm thanh không gian: phát đồng thời các nguồn âm thanh, số lượng nguồn âm thanh chuyển động và kích thước của âm trường.

Tất cả những điều này là các biến số có thể làm tăng công việc tính toán.

Bây giờ, hãy xem xét video.

Trong một không gian chung, mọi người có thể phát nhiều video cùng một lúc.

Đối với mỗi video, hệ thống cần giải mã nó và hiển thị nó trong máy chủ kết xuất.

Mỗi khung hình video được kết xuất mới cần hiển thị trong khoảng thời gian nhất quán để có trải nghiệm xem video tuyệt vời.

Để cung cấp cho máy chủ kết xuất nhiều năng lượng và thời gian để đáp ứng thời hạn kết xuất, ứng dụng của bạn nên giảm thiểu cập nhật cho giao diện người dùng hoặc nội dung 3D trong quá trình phát lại video.

Tốc độ khung hình video cũng ảnh hưởng đến công việc đã hoàn thành.

Cân nhắc sử dụng video 24 hoặc 30 hertz để có hiệu suất và sức mạnh tối ưu.

Cuối cùng, giảm số lượng video đồng thời cần được phát và hiển thị trên thiết bị từ ứng dụng của bạn tại bất kỳ thời điểm nào.

Khi lựa chọn giữa các phương pháp trình bày video, hãy xem xét cách bạn muốn tối ưu hóa cho các tính năng và hiệu suất khác nhau.

Xem phiên "Tạo trải nghiệm phát lại không gian tuyệt vời" để tìm hiểu thêm.

Bây giờ, hãy nói về SharePlay.

Nền tảng này mở ra một bộ trải nghiệm hoàn toàn mới để cộng tác và kết nối với mọi người.

Để tạo ra trải nghiệm nhóm SharePlay thực sự tuyệt vời, bạn sẽ muốn đảm bảo ứng dụng của mình có thể duy trì hiệu suất tuyệt vời trong thời gian dài.

Và hiệu suất tính toán không gian tuyệt vời với SharePlay bắt đầu với những điều cơ bản.

Lập hồ sơ và tối ưu hóa ứng dụng của bạn cho hiệu suất cục bộ trước tiên.

Sau đó kiểm tra hiệu suất ứng dụng của bạn trong SharePlay để tránh các bản cập nhật kết xuất đắt tiền được đồng bộ hóa trên các thiết bị.

Lập hồ sơ ứng dụng của bạn về nguồn điện để đảm bảo nhu cầu năng lượng của hệ thống không tạo ra áp suất nhiệt, điều này có thể ngăn ứng dụng của bạn duy trì hiệu suất tuyệt vời của nó.

Để giải quyết vấn đề này, hãy xem xét cẩn thận những công việc và tính năng nào trong ứng dụng của bạn là cần thiết cho trải nghiệm SharePlay của ứng dụng và tắt bất kỳ thứ gì không cần thiết.

Cuối cùng, hãy xem xét việc chấm dứt ứng dụng do nhiệt hoặc áp suất bộ nhớ.

Mọi người có thể sử dụng thiết bị này ở nơi ấm áp.

Giống như tất cả các nền tảng của Apple, hệ thống quản lý các tài nguyên tính toán có sẵn dưới áp suất nhiệt để giữ cho thiết bị mát mẻ và thoải mái khi sử dụng.

Có tài nguyên tính toán thấp hơn có thể ảnh hưởng đến hiệu suất ứng dụng của bạn.

Hệ thống thậm chí có thể chấm dứt ứng dụng của bạn do áp suất nhiệt tới hạn hoặc do thời hạn kết xuất không còn được đáp ứng nữa.

Khi chịu áp suất nhiệt, hãy làm ít việc hơn trong ứng dụng của bạn để duy trì hiệu suất tốt và giữ cho áp suất nhiệt không tăng thêm nữa.

Làm điều này bằng cách đăng ký nhận thông báo thermalStateDidChange.

Khi áp lực tăng cao hơn, hãy điều chỉnh nội dung và cập nhật ứng dụng của bạn để đáp ứng với nó.

Để xem ứng dụng của bạn hoạt động như thế nào dưới áp suất nhiệt, hãy sử dụng bộ cảm ứng nhiệt trong Xcode để mô phỏng trạng thái nhiệt cao hơn cho thiết bị của bạn.

Để tìm hiểu thêm về áp suất nhiệt, hãy xem phiên "Thiết kế cho các điều kiện nhiệt độ và mạng bất lợi."

Tiếp theo, hãy nói về áp lực bộ nhớ.

Các thiết bị có dung lượng bộ nhớ hạn chế được chia sẻ giữa hệ thống và tất cả các ứng dụng đang chạy.

Khi thiết bị gần đến giới hạn này, hệ thống bắt đầu chấm dứt các ứng dụng, bắt đầu với các ứng dụng không được sử dụng tích cực.

Một ứng dụng sử dụng quá nhiều bộ nhớ cũng có thể bị chấm dứt, ngay cả khi nó đang được sử dụng.

Bạn không muốn điều này xảy ra cho ứng dụng của bạn.

Bạn có thể tránh điều này bằng cách giảm mức sử dụng bộ nhớ của ứng dụng càng nhiều càng tốt.

Trên nền tảng này, các ứng dụng có nhiều khả năng có một lượng lớn bộ nhớ được phân bổ cho giao diện người dùng và kết xuất 3D, và phát lại âm thanh và video.

Nếu ứng dụng của bạn có nội dung giao diện người dùng, hãy giảm phân bổ bộ nhớ kết xuất bằng cách giảm thiểu kết xuất ngoài màn hình, tổng số lượng cửa sổ và nội dung phương tiện.

Đối với bộ nhớ 3D với RealityKit, độ phân giải của kết cấu và bộ định cỡ hình học của bạn cho các mắt lưới và hạt có thể đóng góp đáng kể vào việc sử dụng bộ nhớ.

Giảm thiểu chúng bất cứ nơi nào bạn có thể.

Khi phát âm thanh và video, hãy đánh giá tổng tải bộ nhớ từ tất cả các tệp âm thanh và video trong ứng dụng của bạn.

Khi thay đổi độ phân giải, tốc độ bit, định dạng tệp và thời lượng, hãy xem xét sự đánh đổi cho trải nghiệm người dùng và hiệu suất so với bất kỳ khoản tiết kiệm bộ nhớ nào.

Xem lại các cuộc nói chuyện này để tìm hiểu thêm các mẹo để giảm dung lượng bộ nhớ của bạn trên tất cả các nền tảng của Apple.

Hãy nhớ rằng, hiệu suất là điều cần thiết cho trải nghiệm người dùng tuyệt vời trên nền tảng này.

Để bắt đầu, hãy lập hồ sơ các ứng dụng của bạn một cách tích cực trong quá trình phát triển để tìm ra các vấn đề về hiệu suất và nguồn điện.

Xây dựng một kế hoạch hiệu suất xung quanh các chỉ số quan trọng cho điện toán không gian.

Và tối ưu hóa ứng dụng của bạn để kết xuất, cấp nguồn và tất cả các lĩnh vực khác mà chúng tôi đã đề cập ngày hôm nay.

Và cuối cùng, thu thập dữ liệu trường hiệu suất bằng các công cụ như MetricKit và Xcode Organizer.

Tôi nóng lòng muốn xem tất cả các ứng dụng và trải nghiệm tuyệt vời mà bạn nghĩ ra trên nền tảng này.

Cảm ơn vì đã xem.

♪