10140

♪ ♪

Ricky: Xin chào, tôi là Ricky, và chào mừng đến với "Có gì mới trong StoreKit 2 và StoreKit Testing trong Xcode."

Trong phiên này, tôi sẽ nói về các tính năng mới mà chúng tôi sẽ mang đến StoreKit trong năm nay, cũng như những cải tiến cho trải nghiệm thử nghiệm trong Xcode.

StoreKit 2 lần đầu tiên được giới thiệu tại WWDC vào năm 2021, với các API mới và linh hoạt hơn sử dụng Swift.

Năm nay, tôi rất vui được giới thiệu cho bạn các tính năng mới giúp StoreKit 2 trở nên tốt hơn.

Đầu tiên, tôi sẽ xem xét các tính năng khung StoreKit mới, sau đó, tôi sẽ chia sẻ một số cập nhật để xây dựng các ứng dụng SwiftUI bằng StoreKit và cuối cùng, tôi sẽ đề cập đến những gì mới trong Kiểm tra StoreKit trong Xcode.

Tôi rất vui mừng được giới thiệu một Swift API mới để quản lý các giao dịch mua trong ứng dụng được quảng cáo, có sẵn bắt đầu từ iOS 16.4.

Mua hàng trong ứng dụng được quảng cáo là một tính năng cho phép bạn bán sản phẩm của mình trên trang sản phẩm App Store, mỗi sản phẩm đều có một hình ảnh quảng cáo chuyên dụng.

Quảng bá các giao dịch mua trong ứng dụng của bạn là một cách tuyệt vời để tăng khả năng hiển thị sản phẩm của bạn và bạn có thể dễ dàng thiết lập các giao dịch mua được quảng cáo trong App Store Connect.

Để tìm hiểu thêm về cách định cấu hình mua hàng trong ứng dụng được quảng cáo, hãy xem "Có gì mới trong App Store Connect."

Vì các giao dịch mua trong ứng dụng được quảng cáo được liệt kê trên App Store, khi khách hàng mua một sản phẩm được quảng cáo, sự tương tác của họ bắt đầu ở đây bằng cách nhấn vào nút mua hàng.

Sau đó, App Store sẽ gửi dữ liệu mua hàng đến ứng dụng của bạn, nơi bạn có thể lắng nghe thông tin này và nhắc họ hoàn tất giao dịch mua.

Để lắng nghe các giao dịch mua được quảng cáo, hãy sử dụng trình tự không đồng bộ Swift nhận được ý định mua hàng mới mỗi khi khách hàng bắt đầu mua sản phẩm được quảng cáo trong App Store.

Đầu tiên, tạo một trình nghe để nhận ý định mua hàng bằng cách sử dụng PurchaseIntent.intents.

Mỗi khi chuỗi nhận được một đối tượng mới, nó chứa Sản phẩm StoreKit được liên kết với giao dịch mua.

Bạn có thể nhắc khách hàng của mình mua các sản phẩm này như bình thường bằng cách gọi purchase(), hiển thị bảng thanh toán quen thuộc và cho phép họ hoàn thành tương tác ở đó.

Nếu ứng dụng của bạn chưa sẵn sàng để hoàn tất giao dịch mua, bạn cũng có thể lưu ý định cục bộ và trì hoãn nó.

Bạn luôn có thể xử lý nó sau.

Một tính năng khác của việc quảng bá mua hàng trong ứng dụng là có thể tùy chỉnh cách sản phẩm của bạn được hiển thị cục bộ trên thiết bị hiện tại.

Ví dụ: nếu khách hàng mua một trong những sản phẩm này, bạn có thể ẩn nó, vì vậy App Store không hiển thị lại khi họ duyệt hoặc tìm kiếm.

Bạn cũng có thể thay đổi thứ tự sản phẩm hoặc tập hợp con các sản phẩm nổi bật, dựa trên trạng thái hiện tại trong ứng dụng của bạn, ví dụ: tiến bộ cấp độ trong trò chơi.

Để bao gồm tất cả các trường hợp này, tôi rất vui được giới thiệu cho bạn một số API Swift mới mà bạn có thể sử dụng để tùy chỉnh đơn đặt hàng và khả năng hiển thị các giao dịch mua trong ứng dụng được quảng cáo của mình.

Hãy xem một cuộc trình diễn nhanh.

Sau khi nhập StoreKit, bạn có thể kiểm tra đơn hàng khuyến mãi hiện tại với Product.PromotionInfo.currentOrder.

Điều này trả về một chuỗi các đối tượng PromotionInfo, theo thứ tự hiện đang được đặt.

Nếu danh sách này trống, điều đó có nghĩa là không có ghi đè cục bộ nào được đặt cho thiết bị này và các sản phẩm mà mọi người nhìn thấy trong App Store theo cùng thứ tự mà bạn đã định cấu hình trong App Store Connect.

Mỗi đối tượng trong chuỗi này chứa thông tin liên quan đến một sản phẩm được quảng cáo trong ứng dụng của bạn.

Để đặt thứ tự khuyến mãi tùy chỉnh, bạn có thể sử dụng API Product.PromotionInfo.updateProductOrder và chuyển danh sách số nhận dạng sản phẩm theo thứ tự bạn muốn chúng xuất hiện trong App Store cho thiết bị này.

Bạn cũng có thể ẩn và hiển thị sản phẩm mà không cần phải đặt hàng hoàn toàn mới.

Điều này có thể được thực hiện bằng cách thay đổi thuộc tính hiển thị liên quan đến các giao dịch mua trong ứng dụng được quảng cáo.

Trạng thái hiển thị có thể hiển thị, ẩn hoặc mặc định, tuân theo các cài đặt bạn định cấu hình trong App Store Connect và áp dụng cho tất cả các thiết bị không có ghi đè cục bộ do ứng dụng của bạn đặt.

Hãy xem làm thế nào chúng ta có thể thay đổi điều này trong mã.

Giá trị khả năng hiển thị có thể được thay đổi theo một vài cách khác nhau.

Ứng dụng của bạn có thể gọi Product.PromotionInfo. updateProductVisibility API và thay đổi giá trị cho một sản phẩm duy nhất bằng cách chuyển cả trạng thái hiển thị mới và số nhận dạng của giao dịch mua trong ứng dụng đó.

Ngoài ra, bạn cũng có thể thay đổi giá trị hiển thị bằng cách đặt thuộc tính thành viên trên mỗi đối tượng PromotionInfo.

Sau đó, để lưu các thay đổi, hãy gọi update() trên cùng một đối tượng mà bạn vừa sửa đổi.

Và đó là mọi thứ bạn cần để bắt đầu sử dụng các giao dịch mua trong ứng dụng được quảng cáo với StoreKit 2.

Bây giờ, tôi muốn cho bạn thấy một số cải tiến mà chúng tôi đã thực hiện đối với mô hình dữ liệu cốt lõi trong StoreKit 2.

Những mô hình này rất hữu ích cho việc quản lý các giao dịch mua trong ứng dụng của bạn và thông tin liên quan, ví dụ: ngày mua và trạng thái đăng ký.

Hãy đi sâu vào các lĩnh vực mới mà chúng tôi đang thêm vào mô hình dữ liệu Giao dịch và Thông tin Gia hạn, mang lại những cải tiến tuyệt vời mà nhiều bạn yêu cầu.

Trường mới đầu tiên là storefront, và nó xuất hiện trong mô hình Giao dịch cùng với storefrontCountryCode.

Lĩnh vực mới tiếp theo được gọi là lý do.

Nó cho bạn biết liệu một khách hàng đã bắt đầu mua hàng hay giao dịch là gia hạn đăng ký tự động.

Trong mô hình RenewalInfo bên dưới Product.SubscriptionInfo, có một thành viên mới được gọi là nextRenewalDate.

Điều này cho bạn biết khi nào việc gia hạn đăng ký này sẽ được xử lý.

Tất cả các trường mới này đều có sẵn cho các ứng dụng bạn xây dựng bằng Xcode 15 và mặc dù ban đầu được phát hành với iOS 17, hầu hết chúng cũng hoạt động hồi tố với các phiên bản iOS trước cũng như khi bạn đang sử dụng StoreKit 2.

Tiếp theo, tôi muốn nói về Tin nhắn StoreKit và tính năng mới tuyệt vời mà chúng tôi vừa thêm vào.

Chúng tôi đã giới thiệu API Tin nhắn vào năm ngoái tại WWDC 2022 như một cách để App Store thông báo cho khách hàng của bạn về thông tin quan trọng.

Tin nhắn có giá trị Lý do cho bạn biết mục đích của tin nhắn.

Ứng dụng của bạn có thể chọn trì hoãn hay chặn tin nhắn.

Ví dụ, bạn có thể muốn trì hoãn một tin nhắn nếu việc hiển thị nó sẽ làm gián đoạn khách hàng của bạn trong quá trình tương tác.

Nếu không, StoreKit sẽ tự động hiển thị bất kỳ tin nhắn đang hoạt động nào khi ứng dụng của bạn khởi chạy.

Năm nay, chúng tôi đã thêm một lý do tin nhắn mới được gọi là billingIssue.

Thông báo này có sẵn bắt đầu từ iOS 16.4.

App Store gửi thông báo này khi đăng ký không gia hạn do sự cố thanh toán.

StoreKit hiển thị bảng Vấn đề Thanh toán và khách hàng có thể giải quyết vấn đề mà không cần rời khỏi ứng dụng của bạn.

Thuộc tính mới này đã được bật trong hộp cát để cho bạn thời gian kiểm tra nó.

Vui lòng kiểm tra lại trên trang web Nhà phát triển Apple vào cuối năm nay để cập nhật về thời điểm điều này sẽ được bật cho tất cả khách hàng.

Khi App Store không gia hạn đăng ký, đăng ký sẽ chuyển sang trạng thái Thử lại thanh toán.

Để tìm hiểu về cách kiểm tra tính năng này trong hộp cát, vui lòng tham khảo phiên WWDC về kiểm tra mua hàng trong ứng dụng.

Bây giờ, hãy xem lại một số cập nhật liên quan đến bảo mật.

Để cập nhật StoreKit với các phương pháp bảo mật hiện đại, chúng tôi đang di chuyển chứng chỉ ký biên lai của mình từ sử dụng SHA-1 sang SHA-256 cho biên lai " StoreKit gốc".

Các phiên bản hiện đại của thư viện mật mã, như OpenSSL, đã hỗ trợ SHA-256, nhưng nếu ứng dụng của bạn thực hiện xác thực hóa đơn trên thiết bị, điều quan trọng là bạn phải xác minh rằng nó xử lý chứng chỉ mới đúng cách.

Chứng chỉ ký SHA-256 mới sẽ được sử dụng để ký biên lai trong hộp cát bắt đầu từ ngày 20 tháng 6 và bạn sẽ có thể kiểm tra trên các thiết bị chạy iOS 16.6 và macOS 13.5 trở lên.

Sau ngày 14 tháng 8, chứng chỉ mới sẽ được sử dụng để ký biên lai cho tất cả các ứng dụng mới và cập nhật ứng dụng được gửi đến App Store.

Để biết thêm chi tiết về dòng thời gian này, bạn có thể kiểm tra trang web Nhà phát triển Apple.

Nếu ứng dụng của bạn sử dụng StoreKit 2, bạn không cần phải làm gì cả.

Giao dịch đã ký, Thông tin gia hạn và Giao dịch ứng dụng của StoreKit 2 đã sử dụng SHA-256 ngày hôm nay.

Và nếu bạn sử dụng API máy chủ App Store để xác thực hóa đơn, bạn cũng không cần thực hiện bất kỳ thay đổi nào, vì chúng tôi tự động xử lý định dạng mới.

Tiếp theo, tôi rất vui được giới thiệu cho bạn một bộ tính năng hoàn toàn mới cho StoreKit giúp việc mua hàng trong ứng dụng trong ứng dụng của bạn trở nên rất dễ dàng và nhanh chóng, sử dụng SwiftUI.

Có các API mới để tạo chế độ xem SwiftUI cho các giao dịch mua trong ứng dụng đơn lẻ, toàn bộ cửa hàng sản phẩm và thậm chí một số tùy chỉnh dành riêng cho đăng ký.

Những chức năng này giống như chế độ xem SwiftUI bình thường và yêu cầu mã tối thiểu để triển khai, cho phép bạn bắt đầu và chạy với ứng dụng của mình nhanh nhất có thể.

Hãy cùng xem những quan điểm mới này.

Với chế độ xem sản phẩm này, bạn có thể đại diện cho một giao dịch mua trong ứng dụng duy nhất, hoàn chỉnh với tiêu đề, mô tả được bản địa hóa và thậm chí cả hình ảnh quảng cáo tùy chọn.

Bạn có thể tạo nó bằng cách chuyển mã định danh sản phẩm cho ProductView.

Và cũng không cần tải sản phẩm StoreKit.

Bạn chỉ có thể sử dụng chuỗi productID.

StoreKit và SwiftUI sẽ lo phần còn lại.

Ngoài ra còn có một chế độ xem mới để hiển thị toàn bộ bộ sưu tập sản phẩm, như một cửa hàng ngay trong ứng dụng của bạn.

Thay vì chuyển một mã định danh sản phẩm duy nhất, bạn có thể sử dụng bộ sưu tập ID sản phẩm kết hợp với StoreView để tạo danh sách các sản phẩm thành hàng hóa, sau đó bạn có thể tùy chỉnh thêm bằng cách sử dụng các thành phần SwiftUI.

StoreView là một cách tuyệt vời để bắt đầu ứng dụng hoặc trò chơi của bạn và hỗ trợ mua hàng trong ứng dụng, vì nó chỉ yêu cầu một vài dòng mã để thiết lập, như được hiển thị ở đây.

Cuối cùng nhưng không kém phần quan trọng, cũng có một cái nhìn mới về đăng ký hàng hóa với tất cả các cấp độ dịch vụ có sẵn của chúng.

Sử dụng SubscriptionStoreView để nhanh chóng tạo một trang tùy chỉnh cho một nhóm đăng ký, như thế này.

Tất cả những gì bạn cần là subscriptionGroupID, mà bạn thường có thể tìm thấy trong App Store Connect, nhưng bây giờ nó cũng có sẵn trong cấu hình StoreKit, ngay trong Xcode.

Có rất nhiều tùy chỉnh có thể dễ dàng thêm vào bất kỳ loại chế độ xem mới nào trong số này.

Ví dụ, hãy xem cách thay đổi một vài dòng mã để tạo nền tùy chỉnh có thể thay đổi đáng kể giao diện của SubscriptionStoreView này.

Để đi cùng với những thay đổi đăng ký mới này, chúng tôi cũng đang thêm một bảng quản lý đăng ký bổ sung để cung cấp trải nghiệm mới về cách mọi người có thể tương tác và chọn đăng ký của họ trong ứng dụng StoreKit.

Hãy cùng xem nó.

Tại đây, bạn có thể thấy quy trình quen thuộc để quản lý đăng ký, hiển thị cho khách hàng một trang tính với các tầng đang hoạt động hiện tại của họ và cung cấp tùy chọn để truy cập vào từng trang để xem danh sách các trang khác có sẵn trong nhóm đăng ký đó.

Để làm cho quá trình này nhanh hơn và cung cấp nhiều tùy chỉnh hơn, bây giờ có một chế độ xem khác cho phép bạn bỏ qua một bước và nhảy ngay vào nhóm đăng ký mà bạn muốn hiển thị.

Bạn có thể chọn nhóm đăng ký có liên quan trong ngữ cảnh ứng dụng của mình, ví dụ: nếu bạn có nhiều hơn một nhóm và hiển thị những cấp độ dịch vụ khác có sẵn cho khách hàng của bạn lựa chọn.

Trang tính này có thể được sử dụng với cùng một API như trang thông thường: .manageSubscriptionsSheet.

Lần này, bổ sung chuyển tham số subscriptionGroupID.

Có rất nhiều thứ để cho bạn thấy về chủ đề tạo ứng dụng SwiftUI với StoreKit, với rất nhiều chế độ xem và tùy chỉnh khác mà bạn có thể áp dụng để làm cho nó phù hợp với thẩm mỹ của ứng dụng của mình.

Nếu bạn muốn tìm hiểu thêm, Greg sẽ cho bạn biết về nó trong "Gặp gỡ StoreKit cho SwiftUI."

Sau khi xem xét các tính năng mới để mua hàng trong ứng dụng trong StoreKit, hãy xem cách chúng ta có thể kiểm tra chúng bằng cách sử dụng các công cụ mới trong Kiểm tra StoreKit trong Xcode, bắt đầu với Xcode 15.

Với Thử nghiệm StoreKit trong Xcode, bạn có thể đảm bảo ứng dụng của mình sử dụng StoreKit cung cấp trải nghiệm tuyệt vời ngay từ khi bạn bắt đầu xây dựng nó, ngay cả trước khi bạn thiết lập bất kỳ thứ gì trong App Store Connect.

Điều này cho phép bạn kiểm tra, quản lý, chỉnh sửa và thậm chí tạo các hành động liên quan đến StoreKit trong khi kiểm tra trên máy Mac của bạn và nó được hỗ trợ trên cả trình giả lập và thiết bị.

Bắt đầu với trình quản lý giao dịch, có chức năng mới để gỡ lỗi và kiểm tra các ứng dụng của bạn.

Bây giờ nó tổ chức tất cả các ứng dụng thử nghiệm của bạn.

Trong trình điều hướng, bạn có thể thấy tất cả các thiết bị và trình mô phỏng được kết nối hiện tại đã cài đặt các ứng dụng StoreKit hiện tại của bạn bằng cách sử dụng cấu hình StoreKit để thử nghiệm.

Điều này cho phép bạn kiểm tra trên nhiều thiết bị cùng một lúc dễ dàng và nhanh chóng hơn nhiều, và bạn không bắt buộc phải chạy ứng dụng của mình để xem lịch sử mua hàng.

Hãy nhảy vào và xem nó trông như thế nào.

Tôi có cả iPhone được kết nối với máy Mac của mình và một trình giả lập đang chạy.

Và tôi đang sử dụng trò chơi đang phát triển mới, Backyard Birds.

Khi bạn mở Xcode, bất kể bạn có mở dự án hay không, bạn có thể vào Debug, StoreKit, Manage Transactions và được trình bày với chế độ xem trình quản lý giao dịch mà bạn đã quen thuộc.

Trong trình duyệt, bạn có thể thấy tất cả các thiết bị hiện tại được kết nối với máy Mac của mình.

Trong trường hợp của tôi, đây là iPhone vật lý và trình giả lập.

Chú ý cách cả hai đều có một vài ứng dụng hiển thị trong danh sách này, bao gồm cả Backyard Birds.

Đây là tất cả các ứng dụng sử dụng Kiểm tra StoreKit trong Xcode mà bạn có thể kiểm tra bên ngoài phiên gỡ lỗi.

Nhấp vào một ứng dụng trên một trong hai thiết bị này, bạn có thể xem danh sách các giao dịch StoreKit cho ứng dụng đó và với thanh bên chi tiết mà chúng tôi đã chỉ cho bạn vào năm ngoái, bạn có thể kiểm tra từng ứng dụng riêng lẻ.

Ví dụ, điều này cũng hoạt động nếu tôi mở dự án Xcode cho Backyard Birds và chạy nó trên trình giả lập.

Trong trường hợp này, tôi cũng có thể thấy ứng dụng nào đang được gỡ lỗi tích cực vì nó sẽ có chỉ báo nhỏ này bên cạnh tên ứng dụng.

Đây không phải là tất cả những gì mới mẻ với người quản lý giao dịch.

Tôi rất vui được cho bạn thấy rằng bây giờ bạn có khả năng mua hàng trong ứng dụng cho ứng dụng của mình ngay từ máy Mac của bạn bằng Xcode.

Thêm vào đó, khi tạo một giao dịch mua mới, bạn cũng có thể tùy chỉnh các thông số mua hàng khác nhau, chẳng hạn như số lượng cho một sản phẩm tiêu hao hoặc bạn có thể chọn mã ưu đãi cho đăng ký của mình.

Hãy xem điều này hoạt động như thế nào trong thực tế khi sử dụng Backyard Birds.

Trước tiên bạn cần chọn ứng dụng bạn muốn kiểm tra.

Sau đó, nhấp vào nút dấu cộng ở bên trái thanh lọc để tạo giao dịch mua mới.

Cửa sổ bật lên mà tôi được trình bày liệt kê tất cả các giao dịch mua trong ứng dụng có sẵn cho ứng dụng này.

Đây là những sản phẩm tương tự mà chúng tôi đã định cấu hình trong cấu hình StoreKit.

Tôi sẽ mua một vật tư tiêu hao trước, vì vậy tôi có thể chọn Viên Dinh dưỡng và nhấp vào Tiếp theo.

Bây giờ, tôi có cơ hội định cấu hình giao dịch mua mới này, nhưng các tùy chọn mặc định cũng hợp lệ nếu tôi muốn bỏ qua.

Tôi hài lòng với các cài đặt này, vì vậy hãy nhấp vào Xong để hoàn tất giao dịch mua bằng cách sử dụng các thông số này.

Mặc dù ứng dụng không chạy trong trình giả lập, StoreKit đã nhận và xử lý giao dịch mua mới.

Nếu tôi nhìn vào danh sách giao dịch, bây giờ có một mục mới ở trên cùng.

Nhấp vào nó, tôi có thể kiểm tra chi tiết cho giao dịch mới này.

Tuy nhiên, đăng ký khác nhau, vì vậy hãy thực hiện một giao dịch mua khác.

Tôi sẽ nhấp lại vào nút dấu cộng để tạo giao dịch mua mới và lần này, tôi sẽ tìm kiếm tên của đăng ký trong ứng dụng này, sau đó, chọn đăng ký tôi đang tìm kiếm và nhấp vào tiếp theo.

Các tùy chọn để định cấu hình giao dịch mua hiện đã thay đổi, bởi vì đây là một loại giao dịch mua trong ứng dụng khác.

Một số giống nhau, giống như ngày mua, nhưng cũng có một số cái mới, vì vậy hãy xem lại những gì họ làm.

Nhân tiện, các thuộc tính mặc định cũng hợp lệ ở đây.

Tôi có tùy chọn để chọn mã ưu đãi cho đăng ký này, nếu nó có bất kỳ thiết lập nào trong cấu hình StoreKit.

Khách hàng phải nhập mã ưu đãi và khuyến mãi, nhưng để thử nghiệm dễ dàng hơn, chúng tôi cung cấp danh sách các ưu đãi có sẵn cho ID sản phẩm này.

Tôi muốn thay đổi ngày mua trong trường hợp này và đặt nó thành chính xác một năm trước, như thể lần đầu tiên tôi đăng ký dịch vụ này trong WWDC năm ngoái.

Tiếp theo, tôi có thể chọn xem đăng ký này nên tự động gia hạn hay chỉ duy trì đăng ký trong chính xác một khoảng thời gian đăng ký, trong trường hợp của sản phẩm này, sẽ là một tháng.

Tôi muốn bật gia hạn tự động để tôi có thể kiểm tra cách ứng dụng của mình xử lý các đăng ký đang hoạt động trước khi tôi bắt đầu sử dụng nó.

Hãy nhấp vào Xong để hoàn tất giao dịch mua và xem kết quả bằng cách lọc danh sách giao dịch.

Đúng như dự đoán, tôi có một lần gia hạn cho mỗi tháng kể từ năm ngoái.

Tất cả những thứ này hiện được đánh dấu là chưa hoàn thành, bởi vì ứng dụng không chạy và không có cơ hội nhận chúng, vì vậy tôi sẽ chạy nó trong trình giả lập và thấy rằng bây giờ tôi có quyền truy cập vào Backyard Birds Pass.

Các tính năng mới trong trình quản lý giao dịch hoạt động với tất cả các thiết bị và nền tảng đã hỗ trợ Kiểm tra StoreKit trong Xcode, bắt đầu với iOS 17 và macOS 14.

Và chúng cũng được hỗ trợ trên các nền tảng khác, bao gồm iPadOS, watchOS và tvOS.

Nếu bạn đang chạy phiên bản cũ hơn của hệ điều hành, không có gì thay đổi đối với bạn: trình quản lý giao dịch vẫn tương thích với tất cả các tính năng giống như trước đây khi sử dụng phiên gỡ lỗi đang hoạt động.

Tiếp theo, tôi muốn giới thiệu một tính năng mới trong cấu hình StoreKit cho phép kiểm tra chuyên sâu hơn về cách ứng dụng StoreKit của bạn hoạt động trong các tình huống khác nhau.

Để chứng minh điều này, tôi sẽ mở dự án Xcode cho Backyard Birds và chuyển đến cấu hình StoreKit.

Hiện tại có một mục mới phía trên các giao dịch mua trong ứng dụng được định cấu hình được gọi là Cài đặt cấu hình.

Đây là một menu mới mà chúng tôi đã thêm vào để cung cấp các tùy chọn có thể định cấu hình cho môi trường thử nghiệm ứng dụng của bạn, một số mà bạn có thể đã quen thuộc và một số tùy chọn mới bắt đầu bằng Xcode 15.

Phần đầu tiên và phần thứ hai này bao gồm tất cả các tùy chọn hiện có, như mặt tiền cửa hàng mặc định và ngôn ngữ mà ứng dụng của bạn nên sử dụng để định giá và tính khả dụng, và các phần khác như tốc độ gia hạn đăng ký hoặc khả năng buộc yêu cầu mua chẳng hạn.

Trong các phiên bản trước của Xcode, bạn có thể tìm thấy những thứ này trong menu Trình chỉnh sửa khi cấu hình StoreKit của bạn được mở và chúng vẫn ở đó và có thể được sử dụng thay thế cho nhau.

Trong khi chúng ta đang nói về các tùy chọn Thử nghiệm StoreKit, có tỷ lệ gia hạn đăng ký mới mà chúng tôi đã thêm vào trong năm nay trong iOS 16.4.

Chúng được thiết kế để thay đổi thời hạn đăng ký trên cơ sở mỗi lần gia hạn, giúp bạn tạo ra các gia hạn nhất quán nhanh hơn thời lượng thực tế của đăng ký.

Điều này thực sự hữu ích cho việc kiểm tra nhanh chóng và đáng tin cậy về trạng thái đăng ký dài hạn của bạn.

Bạn có thể tìm thấy các tỷ lệ cấu hình mới này trong cả menu Trình chỉnh sửa và trong cài đặt cấu hình StoreKit trong Xcode 15.

Phần thứ ba trong cài đặt cấu hình StoreKit bao gồm các tùy chọn bạn có thể sử dụng để mô phỏng lỗi StoreKit trong ứng dụng của mình, đây là một tính năng được nhiều bạn yêu cầu cao.

Nó mở rộng trên menu con Giao dịch thất bại từng có trong menu Trình chỉnh sửa và nó mang lại sự hỗ trợ cho nhiều API StoreKit hơn và các loại lỗi.

Mỗi tùy chọn đại diện cho một API StoreKit 2 mà ứng dụng của bạn có thể đang sử dụng và cho phép bạn chọn một lỗi mà API sẽ ném mỗi khi nó được ứng dụng của bạn gọi.

Nhiều API được hỗ trợ bởi tính năng này.

Bạn có thể kiểm tra các vấn đề tải sản phẩm, lỗi mua hàng, các vấn đề xác minh hóa đơn và giao dịch, yêu cầu hoàn tiền và nhiều hơn nữa.

Hãy xem điều này trông như thế nào trong thực tế.

Tôi đã mở dự án Xcode cho Backyard Birds ở bên trái và ứng dụng đang chạy trong trình giả lập ở bên phải.

Trong cấu hình StoreKit, tôi có thể bật lỗi mua hàng bằng cách sử dụng hộp kiểm bên cạnh tên API mua hàng và chọn lỗi mà nó sẽ gây ra.

Tôi muốn kiểm tra cách ứng dụng xử lý các giao dịch mua khi khách hàng thay đổi mặt tiền cửa hàng, vì vậy tôi sẽ chọn Sản phẩm không khả dụng.

Tệp này tự động lưu khi chỉnh sửa và nó cũng đồng bộ hóa với thiết bị của bạn khi ứng dụng đang chạy, vì vậy bạn có thể kiểm tra thay đổi ngay lập tức mà không cần phải chạy lại ứng dụng của mình.

Hãy thử mua một sản phẩm và xem điều gì sẽ xảy ra.

Đúng như dự đoán, nó thất bại.

Nó nói với tôi rằng tôi không thể mua sản phẩm này và tôi nên liên hệ với nhà phát triển để biết thêm thông tin.

Bây giờ chúng ta hãy vô hiệu hóa lỗi mua hàng và thử lại lần này để đảm bảo lần này nó hoàn thành thành công.

Với các bước này, bây giờ tôi đã kiểm tra hiệu quả rằng mã của ứng dụng này có thể xử lý các loại lỗi này khi mua hàng, nếu chúng xảy ra.

Phương pháp này có thể được áp dụng cho bất kỳ API và tùy chọn lỗi nào trong cài đặt cấu hình StoreKit để bao gồm nhiều tình huống và đảm bảo ứng dụng của bạn mạnh mẽ.

Những lỗi này đều là một phần của StoreKit và bạn có thể đã gặp phải chúng rồi.

Mỗi người trong số họ đại diện cho một trường hợp rõ ràng về sự thất bại trong ứng dụng của bạn.

Và đó là tất cả các tính năng mới cho Thử nghiệm StoreKit trong Xcode.

Hôm nay, tôi đã chỉ ra cách kiểm tra và quản lý các giao dịch trên nhiều thiết bị bên ngoài phiên gỡ lỗi, cách mua sản phẩm từ trình quản lý giao dịch để kiểm tra cách ứng dụng của bạn xử lý các giao dịch mua hiện có và cách mô phỏng lỗi StoreKit để bao gồm nhiều tình huống lỗi có thể xảy ra.

Tất cả các tính năng mới này trong Xcode cũng có sẵn trong mã sử dụng khung Kiểm tra StoreKit để viết các bài kiểm tra đơn vị cho ứng dụng của bạn, vì vậy bạn có thể viết tự động hóa thực hiện tất cả các tác vụ giống nhau.

Chúng ta hãy xem xét các API mới để tạo các giao dịch mua ngoài thiết bị và đặt lỗi mô phỏng trong phiên XCTest.

Để tạo các giao dịch mua trong ứng dụng mới, có một API Swift mới trong StoreKitTest hoạt động giống như API mua StoreKit(_:), với các tùy chọn mua hàng giống nhau.

Để hỗ trợ các tính năng mua hàng mới, như thay đổi ngày mua, chúng tôi cũng đã thêm các tùy chọn mua mới chỉ để thử nghiệm.

Hãy xem xét một ví dụ.

Sau khi thiết lập SKTestSession, tôi đang mua hàng ngoài thiết bị để đăng ký và ghi đè ngày mua đến một năm trước kể từ hôm nay.

Đây là giao dịch mua tương tự mà tôi đã thực hiện trong trình quản lý giao dịch và nó hoạt động giống hệt nhau, cho phép bạn tạo kết quả có thể lặp lại và tự động hóa thử nghiệm cho ứng dụng của mình.

Ngoài ra còn có một số API mới trong StoreKitTest để mô phỏng lỗi StoreKit trong SKTestSession và chúng hoạt động giống như các lỗi mô phỏng trong cài đặt cấu hình StoreKit.

Sau khi tạo phiên kiểm tra của mình, bạn có thể gọi setSimulatedError với loại lỗi bạn muốn kiểm tra và StoreKit API mà nó nên được mô phỏng.

Trong ví dụ này, tôi đang chọn mô phỏng lỗi mạng cho loadProducts API.

Bất cứ khi nào tôi gọi loadProducts API trong bài kiểm tra này, nó sẽ luôn ném cùng một lỗi.

Để vô hiệu hóa lỗi mô phỏng, hãy sử dụng cùng một API setter và chuyển nil thay cho loại lỗi.

Cuối cùng, cũng có các API cho tỷ lệ gia hạn đăng ký mới.

Những thứ này có thể được truy cập theo cách tương tự như những thứ hiện có, thông qua một thành viên trong SKTestSession được gọi là timeRate.

Trong bài kiểm tra ví dụ này để mua đăng ký, tôi đã thêm một dòng mã bổ sung để đặt tỷ lệ gia hạn nhanh hơn và tạo nhiều lần gia hạn một cách nhanh chóng.

Rất nhiều Thử nghiệm StoreKit và StoreKit mới trong các tính năng Xcode đã được đề cập ngày hôm nay.

Trong StoreKit, có các API mới để hỗ trợ quảng bá mua hàng trong ứng dụng, mô hình dữ liệu cho Giao dịch và RenewalInfo có một số cải tiến để cung cấp cho bạn nhiều thông tin có giá trị hơn và có một loại tin nhắn mới mà bạn có thể lắng nghe để xử lý các vấn đề về thanh toán.

Các chế độ xem StoreKit mới trong SwiftUI là một công cụ tuyệt vời để nhanh chóng xây dựng các ứng dụng hỗ trợ bán sản phẩm và chúng không yêu cầu bất kỳ mã bổ sung nào để hoạt động trên tất cả các thiết bị.

Và cuối cùng, bạn có thể xác thực tất cả các tính năng StoreKit trong ứng dụng của mình bằng cách sử dụng các công cụ tuyệt vời được cung cấp với Kiểm tra StoreKit trong Xcode.

StoreKit 2 được đóng gói với nhiều tính năng tuyệt vời cho phép bạn xây dựng các ứng dụng tuyệt vời và phát triển doanh nghiệp của mình.

Chúng tôi đã thêm nhiều công cụ tận dụng tối đa Swift và với các API mới đơn giản nhưng mạnh mẽ, bạn có cơ hội tập trung nhiều hơn vào trải nghiệm mà bạn đang xây dựng cho khách hàng của mình.

Bất kỳ ứng dụng nào muốn bán sản phẩm và đăng ký hiện có thể được xây dựng bằng StoreKit 2.

Nếu bạn chưa sử dụng StoreKit 2, hãy dùng thử và nếu có, hãy cho chúng tôi biết suy nghĩ của bạn về các tính năng mới mà tôi đã chỉ cho bạn hôm nay.

Sử dụng chế độ xem bán hàng mua hàng trong ứng dụng mới trong ứng dụng hiện tại của bạn để tùy chỉnh thêm trải nghiệm hoặc tạo một trải nghiệm mới chỉ bằng cách sử dụng các API mới này.

Và với Kiểm tra StoreKit trong Xcode, bạn có thể đưa mã của mình vào thử nghiệm và đảm bảo mọi thứ hoạt động tốt và như mong đợi để cung cấp cho khách hàng của bạn trải nghiệm tốt nhất trong mọi điều kiện.

Để biết thêm thông tin về các tính năng StoreKit khác, hãy xem các phiên này được liên kết bên dưới.

Chúng tôi mong muốn được xem những gì bạn tạo ra bằng StoreKit 2.

Cảm ơn bạn đã xem.