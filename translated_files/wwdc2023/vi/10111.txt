10111

♪ Hip-hop nhạc cụ êm dịu ♪

♪

Raffael Hannemann: Xin chào, và chào mừng đến với Go Beyond the Window với SwiftUI.

Tôi là Raffa, và tôi là một kỹ sư tại Apple, và sau đó tôi được đồng nghiệp Mark tham gia.

Hôm nay, chúng tôi sẽ cho bạn thấy việc tận dụng toàn bộ sức mạnh của xrOS dễ dàng như thế nào để tạo ra những trải nghiệm thực sự nhập vai với các công cụ và khuôn khổ mà bạn đã biết.

Bạn có thể đã quen thuộc với thực tế tăng cường từ việc phát triển các ứng dụng AR cho iOS.

Trong vài năm qua, chúng tôi đã giới thiệu và mở rộng một số công cụ và khuôn khổ, bao gồm ARKit và RealityKit, để tạo ra các ứng dụng AR phong phú cho iPhone và iPad.

Những ứng dụng này cho phép bạn làm mờ ranh giới giữa thế giới thực và trí tưởng tượng của mình bằng cách tăng cường môi trường xung quanh người dùng với giao diện người dùng tương tác và các đối tượng ảo.

Năm nay, với sự ra mắt của xrOS, chúng tôi đang đưa AR lên một tầm cao mới, bắt đầu với những trải nghiệm nhập vai.

Trong những trải nghiệm này, ứng dụng của bạn hiển thị giao diện người dùng, bao gồm các cửa sổ và nội dung ba chiều ở bất kỳ đâu xung quanh bạn.

Môi trường xung quanh vẫn có thể nhìn thấy được và trên thực tế, thậm chí trở thành một phần của trải nghiệm.

Bạn có thể neo các yếu tố của ứng dụng của mình vào các bề mặt và tăng cường và làm phong phú thêm thế giới thực với các đối tượng và hiệu ứng ảo.

Và sau đó là những trải nghiệm hoàn toàn nhập vai, tiến thêm một bước nữa và bao phủ toàn bộ không gian của bạn.

Ứng dụng của bạn kiểm soát hoàn toàn những gì bạn thấy.

Hãy suy nghĩ về tất cả các khả năng mà điều này sẽ mở ra.

Và điều tuyệt vời nhất, tất cả những điều này đều có thể thực hiện được với các công cụ, khuôn khổ và mẫu mà bạn đã quen thuộc.

Và cốt lõi của điều này là Không gian nhập vai của SwiftUI.

Hãy bắt đầu nào.

Trong các phiên khác, bạn đã học được rằng năm nay, chúng tôi sẽ thêm chiều thứ ba vào SwiftUI.

Bạn có thể trình bày các cửa sổ và khối lượng trên xrOS và hiển thị các yếu tố giao diện người dùng ba chiều với các mẫu khai báo dễ sử dụng của SwiftUI.

Cả cửa sổ và khối lượng đều cho phép bạn hiển thị nội dung trong giới hạn của chúng.

Vậy điều gì sẽ xảy ra nếu bạn muốn tận dụng tối đa không gian vô hạn mà xrOS cung cấp và tạo ra một trải nghiệm thực sự nhập vai?

Bạn có thể muốn đặt các vật dụng của mình vượt ra ngoài giới hạn của cửa sổ xung quanh đầu và ở ngay giữa nó.

Và đây là những gì chúng tôi đã thiết kế Space cho.

Bên cạnh các cửa sổ và khối lượng, không gian là một loại vùng chứa để trình bày giao diện người dùng của bạn trên xrOS.

Trong phiên này, chúng tôi sẽ tập trung vào Không gian và cách bạn có thể sử dụng chúng để tạo ra những trải nghiệm nhập vai.

Trước tiên hãy bắt đầu với Space và học cách hiển thị nội dung của bạn.

Mark sau đó sẽ chỉ cho bạn cách bạn quản lý Không gian của mình, phóng trực tiếp vào Không gian và giải thích tất cả các tùy chỉnh mà Không gian cho phép.

Vì vậy, hãy bắt đầu và kiểm tra một số mã.

Tôi thực sự hào hứng với việc khám phá không gian.

Để tiếp tục ứng dụng Thế giới mà chúng tôi đang làm việc trong các phiên khác, chúng tôi sẽ mở rộng ứng dụng từng bước với một không gian cho phép chúng tôi khám phá hệ mặt trời của mình.

Không gian là một loại cảnh mới trong SwiftUI được gọi là Không gian nhập vai.

Như bạn sẽ làm với các loại cảnh khác, bạn xác định một Không gian Nhập vai trong ứng dụng của mình và sau đó có thể mở và loại bỏ nó bất cứ lúc nào.

Bạn có thể làm cho toàn bộ ứng dụng của mình chỉ bao gồm một Không gian duy nhất, nhưng bạn cũng có thể mở rộng ứng dụng hiện có của mình bằng cách thêm một hoặc nhiều Không gian bên cạnh cửa sổ và khối lượng của bạn.

Ứng dụng của bạn có thể mở một Không gian tại thời điểm đó.

Trước khi mở một Không gian khác, trước tiên bạn bỏ qua không gian hiện tại.

Và một lần nữa, tương tự như các loại cảnh khác, bạn đặt hệ thống phân cấp chế độ xem của mình trong phần thân của cảnh.

Bằng cách đặt Hệ Mặt trời của chúng ta vào ImmersiveSpace, nó sẽ được hiển thị mà không có bất kỳ ranh giới cắt nào.

Hãy dành một chút thời gian và chỉ ra điều này dễ dàng như thế nào.

Chỉ với ba dòng này, chúng tôi đã đưa chế độ xem hệ mặt trời của mình vào một trải nghiệm phong phú, nhập vai.

Hãy đi sâu vào chi tiết.

Mở một Không gian cho phép một vài hành vi đặc biệt làm cho cảnh này nổi bật so với các loại cảnh khác.

Khi nhiều ứng dụng đang chạy cạnh nhau, tất cả chúng đều được hiển thị cùng nhau trong cùng một không gian, đó là lý do tại sao chúng tôi gọi đây là không gian được chia sẻ.

Khi ứng dụng của bạn hiển thị cảnh Không gian nhập vai, ứng dụng của bạn sẽ vào cái mà chúng tôi gọi là Không gian đầy đủ.

Ứng dụng của bạn sau đó sẽ là ứng dụng duy nhất hiển thị cho người dùng.

Tất cả các ứng dụng khác sẽ biến mất để nhường chỗ cho nội dung của bạn xuất hiện mà không bị phân tâm.

Sau đó, một khi bạn bỏ qua không gian của mình, các ứng dụng khác sẽ xuất hiện trở lại.

Vì Không gian nhập vai là một cảnh, nó ngầm định nghĩa hệ tọa độ của chính nó.

Vì vậy, mọi thứ bạn đặt trong một Không gian đều được định vị tương đối với nguồn gốc của chính không gian.

Và nguồn gốc của một Không gian nằm dưới người dùng, gần chân người dùng khi Không gian được mở lần đầu tiên.

Vậy bây giờ bạn đã biết những điều cơ bản.

Hãy tiếp tục và nói về cách bạn hiển thị nội dung của Không gian của mình.

ImmersiveSpace là một loại cảnh, vì vậy bạn đặt hệ thống phân cấp chế độ xem của mình ngay trong đó.

ImmersiveSpace có thể thực hiện bất kỳ chế độ xem giao diện người dùng Swift nào và trong khi nó không có bất kỳ giới hạn cắt nào, một Space vẫn trình bày nội dung của nó trong giới hạn bố cục của nó.

Bất cứ thứ gì bạn đặt trong Không gian đều sử dụng cùng một hệ thống bố cục mà bạn đã quen thuộc.

Nhưng vì nguồn gốc của Không gian của bạn nằm gần chân người dùng, có lẽ bạn không chỉ muốn đặt nội dung của mình xuống đó.

Hãy nói về RealityView.

Nếu bạn muốn tận dụng tối đa SwiftUI, ARKit và RealityKit, chúng tôi khuyến khích bạn sử dụng ImmersiveSpace cùng với các tính năng mạnh mẽ của RealityView mới.

ImmersiveSpace và RealityView đi đôi với nhau và được thiết kế đặc biệt cùng nhau để cung cấp tất cả các tính năng bạn cần để xây dựng trải nghiệm nhập vai tuyệt vời.

Ví dụ, RealityView đi kèm với hỗ trợ tích hợp để tải tài sản không đồng bộ, như được hiển thị ở đây, để tải và hiển thị trường sao.

Nhưng bên cạnh việc tải không đồng bộ, việc đưa RealityView vào cảnh Không gian Nhập vai cho phép nhiều hơn thế.

Đặt các yếu tố trong RealityView của bạn trên các neo ARKit.

Và vì ứng dụng của bạn có quyền truy cập vào dữ liệu tay và tư thế đầu, trong khi Không gian đang mở, bạn có thể sử dụng dữ liệu đó để định vị các thực thể của mình trong Chế độ xem thực tế.

Mark sẽ cho bạn xem thứ gì đó thú vị sau.

Một lưu ý về tọa độ Không gian.

RealityView sử dụng RealityKit để hiển thị nội dung của nó.

Vì vậy, khi định vị các thực thể trong Chế độ xem thực tế, hãy nhớ rằng hướng không gian tọa độ khác với trong hệ thống bố cục của SwiftUI.

Trong SwiftUI, trục y hướng xuống dưới và trục z hướng về phía bạn.

Điều này áp dụng cho các cửa sổ, khối lượng và Không gian nhập vai, trong khi trong RealityKit, trục y hướng lên trên.

Có rất nhiều điều để đề cập về RealityView.

Đảm bảo rằng bạn thêm "Xây dựng trải nghiệm không gian với RealityKit" vào danh sách theo dõi của mình để biết tất cả các chi tiết.

Bây giờ hãy viết một số mã.

Chúng ta sẽ sử dụng WorldApp, hoặc ít nhất là một phiên bản đơn giản của nó, và thêm một hệ mặt trời nhập vai vào nó từng bước một.

Chúng tôi bắt đầu bằng cách xác định một ImmersiveSpace.

Tương tự như WindowGroup, bạn có thể gán một mã định danh, một loại giá trị hoặc cả hai.

Trong trường hợp này, chúng tôi chỉ định mã định danh năng lượng mặt trời.

Chúng tôi sẽ sử dụng mã định danh này sau để mở Space.

Sau đó chúng tôi đặt chế độ xem Hệ Mặt trời vào Không gian.

Chúng ta cũng hãy xác định một cửa sổ tiêu chuẩn đơn giản cho ứng dụng của chúng ta, mà chúng ta muốn hiển thị khi ứng dụng khởi chạy với một điều khiển để xem hệ mặt trời của chúng ta.

Điều này tương tự như những gì ứng dụng Thế giới làm.

Vì vậy, chúng tôi xác định một cửa sổ khởi chạy mới bằng cách sử dụng WindowGroup và chúng tôi thêm một số thông tin cùng với một điều khiển cho phép chúng tôi mở Không gian của mình.

Điều khiển đó chỉ là một cái nút.

Khi nhấp vào nó, chúng tôi muốn thay đổi tiêu đề của nó và mở Space của chúng tôi.

Để kiểm soát các cửa sổ, SwiftUI cung cấp các hành động môi trường openWindow và dismissWindow.

Và đối với Immersive Space, chúng tôi đang thêm openImmersiveSpace mới và loại bỏ các hành động ImmersiveSpace.

Chúng tôi có được hai hành động từ môi trường.

Sau đó chúng ta có thể sử dụng những hành động này khi nút được gọi.

Khi mở Space, chúng tôi chuyển mã định danh mà chúng tôi đã xác định trước đó.

Vì chỉ có một Space có thể được mở tại một thời điểm, hành động dismissImmersiveSpace không cần bất kỳ tranh luận nào.

Hệ thống làm sinh động Không gian của bạn vào và ra với một khoảng thời gian nhất định.

Những hành động môi trường này không đồng bộ để bạn có thể phản ứng với việc hoàn thành hoạt ảnh.

Mở một Immersive Space có thể thất bại và openImmersiveSpace sẽ cho bạn biết kết quả của nó liệu cuộc gọi thất bại hay thành công.

Đảm bảo xử lý lỗi thích hợp.

Quay trở lại ứng dụng của chúng tôi mà chúng tôi đã xác định ngay từ đầu, bây giờ chúng tôi có thể thêm LaunchWindow của mình ngay tại đây.

Chú ý thứ tự của hai cảnh của chúng tôi.

LaunchWindow là cảnh đầu tiên trong danh sách các cảnh của chúng tôi, vì vậy SwiftUI sẽ hiển thị cửa sổ khởi chạy khi ứng dụng khởi động.

Không gian nhập vai sẽ không hiển thị khi ra mắt, nhưng sẽ chỉ hiển thị khi người dùng nhấp vào nút của chúng tôi.

Hãy chạy cái này trên trình giả lập.

Khi ứng dụng của chúng tôi khởi chạy, chúng tôi sẽ thấy cửa sổ khởi chạy.

Và sau đó chỉ với một cú nhấp chuột vào nút của chúng tôi, hệ mặt trời xuất hiện ngay trong phòng khách của chúng tôi.

Vì vậy, bây giờ chúng tôi đã xác định một ứng dụng đa cảnh bao gồm một cửa sổ tiêu chuẩn và một Không gian hiển thị hệ mặt trời của chúng tôi.

Bạn đã thấy các mô hình được sử dụng trong ứng dụng Thế giới.

Khi xây dựng ứng dụng nhập vai của mình, bạn chắc chắn sẽ muốn hiển thị một số nội dung 3D với nhiều chi tiết trong Không gian của mình.

Hãy nhớ rằng có thể mất một thời gian để tài sản của bạn được tải đầy đủ và sẵn sàng được hiển thị bởi ứng dụng của bạn.

Để có trải nghiệm người dùng tốt nhất, hãy đảm bảo tận dụng các API Model3D và RealityView mới, tải tài sản 3D của bạn không đồng bộ.

Trong mã này ở đây, chúng tôi hiển thị một văn bản trong khi mô hình vẫn đang tải và một lỗi trong trường hợp có sự cố xảy ra.

Và bây giờ, Mark sẽ cho bạn biết cách quản lý Không gian của bạn và thậm chí tốt hơn, cách phóng vào Không gian.

Mark Ma: Cảm Ơn, Raffa.

Như chúng tôi vừa chứng minh, thật dễ dàng để tích hợp Immersive Spaces vào ứng dụng World của chúng tôi chỉ với một vài dòng mã.

Chuyển đổi ứng dụng của bạn thành một trải nghiệm nhập vai cũng liên quan đến việc quản lý Không gian của bạn cùng với hệ thống với các giai đoạn cảnh, phối hợp hội tụ giữa Không gian của bạn và các cảnh khác và trình bày nó với các phong cách khác nhau.

Tương tự như các loại cảnh SwiftUI khác, Immersive Space hỗ trợ các giai đoạn cảnh tương tự được xử lý bởi hệ thống.

Điều này cũng có nghĩa là Không gian của bạn luôn ở trong một trong những giai đoạn cảnh của SwiftUI.

Bằng cách mở Space, nó di chuyển nó đến giai đoạn hoạt động.

Và tại bất kỳ thời điểm nào, nó có thể thay đổi nó thành giai đoạn không hoạt động.

Ví dụ: nếu chúng ta bước ra khỏi ranh giới do hệ thống xác định hoặc cảnh báo hệ thống hiển thị, Không gian và cửa sổ của bạn sẽ bị ẩn tạm thời, di chuyển chúng sang giai đoạn không hoạt động.

Khi người dùng nhập lại trải nghiệm, Không gian và cửa sổ của bạn sẽ được hiển thị, cập nhật giai đoạn cảnh của họ để hoạt động trở lại.

Đối với ứng dụng World của chúng tôi, chúng tôi có thể thêm một vài dòng mã nhanh để xử lý giai đoạn cảnh không hoạt động.

Hãy giảm quy mô hình Trái đất của chúng ta xuống một nửa kích thước để giúp chỉ ra rằng trạng thái của Không gian đã thay đổi.

Hãy đảm bảo rằng chúng tôi xử lý giai đoạn hoạt động để khôi phục nội dung.

Và hãy nhớ rằng, Không gian có thể bị loại bỏ bất cứ lúc nào bằng cách sử dụng các phương tiện phần cứng hoặc phần mềm.

Vì vậy, hãy kiểm tra điều này trong Trình mô phỏng.

Chúng tôi sẽ mở Space của mình và chứng minh cách ứng dụng của chúng tôi xử lý giai đoạn không hoạt động.

Ví dụ, điều này có thể được kích hoạt khi một cảnh báo xuất hiện.

Khi cảnh báo bật lên, lưu ý rằng nội dung Không gian đã thay đổi theo tỷ lệ do mã mẫu trước đây của chúng tôi.

Và khi chúng tôi loại bỏ cảnh báo, Space đã thu nhỏ lại, phản ứng với giai đoạn hiện đang hoạt động.

SwiftUI giúp việc xử lý và tạo hoạt ảnh cho các quá trình chuyển đổi này thực sự dễ dàng và thuận tiện.

Một cách tuyệt vời khác để quản lý Không gian của bạn là tích hợp nội dung từ các cửa sổ khác với Không gian của bạn.

Ví dụ, nếu bạn muốn định vị lại mô hình trái đất bên cạnh cửa sổ chính, chúng ta sẽ cần biết vị trí của cửa sổ trong hệ tọa độ Không gian Nhập vai của chúng ta, nhưng cả hai đối tượng đều xác định hệ tọa độ của riêng chúng.

Vì vậy, để giúp giải quyết vấn đề này, SwiftUI cung cấp một Không gian tọa độ mới có tên là Không gian nhập vai.

Và điều đó đại diện cho một hệ tọa độ của một Không gian Nhập vai.

Để truy cập hệ tọa độ này, chúng tôi gói gọn cửa sổ bên trong trình đọc hình học vào ngữ cảnh 3D.

Sau đó, bằng cách sử dụng API hiện có nhận một không gian tọa độ, như biến đổi và truyền vào loại Không gian nhập vai, chúng ta có thể lấy proxy.transform trong hệ tọa độ mới.

Sử dụng biến đổi này, chúng tôi sẽ cập nhật vị trí của Trái đất khi chạm.

Hãy chạy cái này trên trình giả lập.

Chúng tôi sẽ mở lại Không gian của mình để chúng tôi có thể nhìn thấy trái đất và cửa sổ chính.

Chúng tôi đã dịch chuyển cửa sổ một chút và chúng tôi muốn định vị lại trái đất ngay trước mặt nó.

Bây giờ khi trái đất được khai thác, nó sẽ được định vị ở nơi chúng ta mong đợi.

Và với chuyển đổi tọa độ, thật dễ dàng để định vị nội dung của chúng tôi chính xác ở nơi chúng tôi muốn và di chuyển nội dung giữa Không gian và cửa sổ.

Những lần khác để sử dụng chuyển đổi tọa độ sẽ bao gồm Không gian nhập vai trong SharePlay, nơi chúng tôi có thể quản lý vị trí nội dung của mình không chỉ trên Không gian nhập vai riêng tư mà còn cả Không gian nhập vai nhóm.

Nếu ứng dụng của bạn hỗ trợ SharePlay và nhóm Immersive Spaces, khi những người tham gia khác tham gia, hệ thống có thể di chuyển nguồn gốc của không gian đến một vị trí được chia sẻ được xác định bởi các mẫu không gian.

Để biết thêm thông tin, vui lòng xem phiên, "Xây dựng trải nghiệm SharePlay không gian."

Ứng dụng World của chúng tôi hiện xử lý các giai đoạn cảnh và có thể kết hợp nội dung từ các cửa sổ khác, nhưng chúng tôi vẫn chưa sử dụng đầy đủ các khả năng mà Space cung cấp.

Chúng ta sẽ khám phá các phong cách đắm chìm bên cạnh để chúng trở nên tuyệt vời hơn.

Các phong cách đắm chìm cung cấp các bài thuyết trình khác nhau về cách nội dung không gian của bạn có thể chiếm lĩnh môi trường xung quanh bạn.

Bạn có thể trình bày nội dung của mình cùng với phong cách hỗn hợp, phong cách tiến bộ trực tuyến trước mặt bạn hoặc phong cách đầy đủ bao quanh bạn theo mọi hướng.

Hãy cập nhật ứng dụng của chúng tôi để tận dụng tất cả các phong cách này.

Hãy mở lại ứng dụng của chúng tôi một lần nữa và quay trở lại nơi chúng tôi đã xác định một Không gian Nhập vai.

Ngay bây giờ, không gian trình bày hệ mặt trời theo phong cách ngâm hỗn hợp, đây là kiểu mặc định.

Thật dễ dàng để thay đổi phong cách và cũng có nó năng động.

Đầu tiên, hãy thêm một biến trạng thái mới thuộc loại ImmersionStyle và gán một giá trị mặc định mà chúng tôi muốn Space bắt đầu.

Hãy giữ phong cách hỗn hợp ở đây.

Sau đó, chúng tôi sử dụng công cụ sửa đổi cảnh immersionStyle và xác định danh sách các kiểu mà chúng tôi muốn Space của mình hỗ trợ.

Để có một tham chiếu đến kiểu hiện tại, chúng tôi chuyển biến trạng thái của mình dưới dạng ràng buộc.

Nếu chúng ta chuyển ràng buộc đến hệ mặt trời của mình, chúng ta cũng có thể đọc kiểu hiện tại và kiểm soát nó để chuyển sang bất kỳ kiểu bản đồ nào.

Trong mẫu này, chúng ta sẽ chuyển đổi bằng cử chỉ phóng đại để khi chúng ta mở rộng quy mô hệ mặt trời, chúng ta sẽ chuyển sang một phong cách khác.

Cho đến nay, chúng tôi đã chạy ứng dụng Thế giới của mình trên trình giả lập để cho bạn thấy việc mang một Không gian Nhập vai vào đó dễ dàng như thế nào.

Nhưng để có được cảm giác thực sự tuyệt vời về cách những phong cách này hoạt động với môi trường xung quanh chúng ta, hãy chạy trải nghiệm của chúng ta trên một thiết bị.

Và sau đó, chúng tôi sẽ cho bạn thấy nhiều tùy chỉnh hơn nữa để thực sự nâng cao trải nghiệm trên thiết bị của bạn.

Bạn mở Space theo kiểu mặc định, kết quả là kiểu ngâm hỗn hợp.

Phong cách này thật tuyệt, nhưng bạn có thể muốn đắm chìm hơn một chút trong nội dung và có thể nhìn thấy một số ngôi sao.

Vì vậy, bạn có thể thực hiện cử chỉ phóng đại.

Và khi nội dung phát triển lớn hơn, cuối cùng Space chuyển sang phong cách tiến bộ.

Phong cách này là cầu nối giữa trải nghiệm vượt qua và trải nghiệm hoàn toàn nhập vai.

Nó cho phép bạn xem nội dung Không gian Nhập vai trong cổng thông tin trước mặt bạn, cùng với môi trường xung quanh bạn.

Phong cách này cảm thấy khá đắm chìm, nhưng cũng cho phép bạn nhận thức được những gì xung quanh bạn.

Điều này cũng có nghĩa là bạn có thể trò chuyện với những người gần đó, biết nơi ngồi thoải mái và thậm chí tương tác với môi trường xung quanh.

Và một khi bạn cảm thấy thoải mái, bằng cách xoay Digital Crown, bạn sẽ tăng sự đắm chìm của phong cách.

Điều đó không thực sự tuyệt sao?

Bây giờ bạn đang trôi nổi như một phi hành gia trong thiên hà.

Và nếu bạn muốn nhìn thấy nhiều hơn môi trường xung quanh mình một lần nữa, chỉ cần xoay Digital Crown trở lại để giảm sự đắm chìm.

Điều này cho phép bạn nhanh chóng và dễ dàng kiểm soát mức độ nhập vai của nội dung trong phong cách tiến bộ.

Nhưng có lẽ bạn thích đắm chìm hoàn toàn mọi lúc.

Điều này thật tuyệt vời cho những trải nghiệm xung quanh bạn hoặc ngay lập tức đưa bạn đến một thế giới hoàn toàn khác.

Cho đến nay, bạn đã học được việc chuyển đổi sang các phong cách khác nhau dựa trên cử chỉ dễ dàng như thế nào.

Đắm chìm hoàn toàn cũng không khác gì, và bạn sẽ trải nghiệm điều đó khi bạn mở rộng quy mô Trái đất một lần nữa để cập nhật ràng buộc phong cách.

Chú ý việc chuyển đổi giữa các phong cách khác nhau dễ dàng và dường như thế nào.

Bây giờ Không gian đã trở nên hoàn toàn nhập vai.

Và với SwiftUI, chỉ mất một vài dòng mã.

Và bằng cách nhấn Digital Crown, bạn có thể quay lại passthrough bất cứ khi nào bạn sẵn sàng rời khỏi trải nghiệm.

Chúng tôi vừa trình bày những cách khác nhau để quản lý Không gian của bạn bằng cách phản ứng với sự thay đổi giai đoạn cảnh và kiểm soát phong cách.

Bây giờ hãy thêm một số cải tiến cuối cùng để đưa Không gian của chúng ta lên một tầm cao mới.

Khả năng tính toán không gian trên thiết bị cho phép Không gian của bạn dễ dàng được nâng cao để làm cho nó cảm thấy thú vị hơn.

Vì vậy, chúng ta hãy xem xét một vài lựa chọn, như phóng trực tiếp vào Không gian, thêm hiệu ứng cho môi trường xung quanh và kim ảo.

Cho đến nay, ứng dụng của chúng tôi cho phép chúng tôi mở một Không gian chỉ bằng một cú nhấp chuột.

Nhưng điều gì sẽ xảy ra nếu bạn muốn khởi chạy trải nghiệm nhập vai ngay khi ứng dụng của bạn khởi động, chẳng hạn như nếu bạn có một trò chơi nhập vai hoàn toàn?

Để khởi chạy trực tiếp vào Không gian Nhập vai, bạn sẽ cần định cấu hình bản kê khai cảnh cho ứng dụng của mình.

Chỉ cần đặt vai trò ứng dụng ImmersiveSpace và phong cách ngâm mình.

Đính kèm nội dung Không gian của bạn như bình thường và nó sẽ mở ngay lập tức.

Bạn cũng có thể yêu cầu ứng dụng của mình quay lại cửa sổ nếu người dùng chọn loại bỏ Không gian.

Tiếp theo, các tùy chọn hiệu ứng xung quanh cho phép tôi làm mờ đường chuyền để nội dung Không gian được lấy nét nhiều hơn.

Chúng tôi muốn môi trường xung quanh bị mờ đi khi Không gian chuyển sang phong cách tiến bộ.

Chúng tôi đặt công cụ sửa đổi Hiệu ứng xung quanh ưa thích là tối, vì vậy khi hệ mặt trời xuất hiện, môi trường xung quanh chúng ta sẽ tự động bị mờ đi.

Công cụ sửa đổi UpperLimbVisibility cho phép chúng ta giấu tay khi ở trong một Không gian hoàn toàn nhập vai vì không có đường chuyền nào khả dụng.

Đối với trải nghiệm thế giới của chúng tôi, chúng tôi sẽ chỉ đơn giản đặt sở thích của mình là sai khi chúng tôi mở Không gian của mình.

Và cứ như vậy, chúng ta có thể thay đổi tùy chọn UpperLimbVisibility.

Giấu bàn tay của bạn trong khi ở phong cách xuất hiện đầy đủ có nghĩa là chúng tôi có thể hiển thị bàn tay ảo thay thế và chúng tôi sẽ hiển thị một số găng tay không gian trong ứng dụng Thế giới của chúng tôi.

Hãy bắt đầu bằng cách tạo một chế độ xem mới gọi là SpaceGloves.

Tiếp theo, chúng tôi sẽ thêm Chế độ xem thực tế để chúng tôi có thể hiển thị găng tay trong Không gian của mình.

Sau đó, chúng tôi sẽ tạo một thực thể gốc trong RealityView của mình để thêm các thực thể vào để chúng cũng có thể được hiển thị.

Sau đó, chúng tôi sẽ tải một tài sản vào một thực thể và thêm nó như một con của gốc của chúng tôi.

Để đặt chính xác các thực thể, chúng tôi sẽ cần sử dụng ARKit và API theo dõi tay của nó, và chúng tôi cũng sẽ cần khởi động hệ thống theo dõi tay.

Bước tiếp theo của chúng tôi là đảm bảo tài sản được neo chính xác vào tay chúng tôi.

Chúng ta sẽ cần kiểm tra các bản cập nhật neo theo dõi bằng tay.

Và tiếp theo, kiểm tra tính chirality của bàn tay.

Sau đó, chúng tôi sẽ đảm bảo rằng sự biến đổi của tài sản tay giống như các mỏ neo.

Trong ví dụ này, chúng tôi cũng đảm bảo rằng tài sản của chúng tôi có cùng tên chung như ARKit cung cấp.

Bằng cách này, chúng ta có thể lập bản đồ tên khớp bộ xương neo một cách chính xác và thực thể găng tay sẽ tự động được neo cho chúng ta.

Vì vậy, hãy quay lại nơi Không gian của chúng ta được xác định và đảm bảo bao gồm chế độ xem SpaceGloves.

Đó là tất cả những gì chúng ta cần cho bàn tay ảo.

Để biết thêm tùy chỉnh ARKit và chi tiết chuyên sâu, hãy xem "Tiến hóa ứng dụng ARKit của bạn để có trải nghiệm không gian."

Bây giờ hãy thử những tùy chỉnh này trên thiết bị.

Trải nghiệm Thế giới bắt đầu lại và Không gian sẽ mở cửa trở lại theo phong cách đắm chìm mặc định.

Bằng cách sử dụng cử chỉ phóng đại trên trái đất, ứng dụng sẽ chuyển sang phong cách tiến bộ.

Khi Space mở ra, mã sẽ sửa đổi môi trường xung quanh thành tối.

Bạn khiến bản thân cảm thấy đắm chìm hơn bằng cách sử dụng API Hiệu ứng Xung quanh để làm mờ đường chuyền.

Nó rất dễ áp dụng và đó là một cách tuyệt vời để tập trung vào trải nghiệm.

Điều này khá nhập vai ngay bây giờ, nhưng bạn có thể tiến thêm một bước nữa với tùy chỉnh tiếp theo của chúng tôi.

Như mã trước đây của chúng tôi đã chứng minh, khi bạn chuyển sang ngâm hoàn toàn, bàn tay của bạn sẽ biến mất và găng tay không gian ảo sẽ xuất hiện ở nơi bàn tay của bạn nhờ theo dõi bàn tay.

Bằng cách sử dụng RealityView với ARKit và cho phép theo dõi bằng tay, bạn có thể phóng vào không gian như một phi hành gia ảo và cảm giác thực sự tuyệt vời.

Chỉ với một vài cải tiến và tùy chỉnh, chúng tôi đã có thể biến ứng dụng Thế giới của mình thành một trải nghiệm hoàn toàn nhập vai đưa chúng tôi vượt ra ngoài Không gian chia sẻ.

Và bây giờ tùy thuộc vào bạn để sử dụng API Không gian Nhập vai mới để tạo trải nghiệm dễ dàng, thể hiện chúng với các phong cách khác nhau và sáng tạo với các tùy chỉnh có thể có.

Đó là một API mạnh mẽ và dễ sử dụng cung cấp cho bạn tất cả các công cụ cần thiết để biến đổi môi trường xung quanh và tạo ra những trải nghiệm mới và nhập vai.

Cảm ơn bạn đã tham gia cùng chúng tôi.

♪