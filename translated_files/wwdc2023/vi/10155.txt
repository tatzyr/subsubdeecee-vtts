10155

♪ ♪

Bến du thuyền: Xin chào và chào mừng đến với WWDC.

Tên tôi là Marina, và sau đó, tôi sẽ được tham gia bởi đồng nghiệp Matt của tôi.

Chúng tôi đến từ nhóm bản địa hóa tại Apple, và hôm nay, chúng tôi rất vui được giới thiệu cho bạn Danh mục Chuỗi.

Tại Apple, chúng tôi tin tưởng mạnh mẽ vào khả năng tiếp cận và tính toàn diện.

Bản địa hóa ứng dụng của bạn là một cách để đảm bảo nội dung của bạn tiếp cận nhiều người hơn trên khắp thế giới.

Trên thực tế, ngày nay chúng tôi vận chuyển hệ điều hành của mình bằng hơn 40 ngôn ngữ và liên tục mở rộng con số này để mọi người có thể sử dụng sản phẩm của chúng tôi bằng ngôn ngữ mẹ đẻ của họ.

Nhóm của chúng tôi cam kết cung cấp các công cụ trong Xcode để bản địa hóa dễ dàng nhất có thể và hôm nay chúng tôi rất vui mừng được giới thiệu những cải tiến và quy trình làm việc mới để quản lý nội dung được bản địa hóa trong dự án của bạn.

Trước đây, nếu bạn muốn bản địa hóa ứng dụng của mình, bạn phải duy trì các chuỗi và tệp stringsdict.

Điều này yêu cầu bạn phải giữ tất cả các chuỗi đồng bộ hóa với mã của mình theo cách thủ công và đôi khi, bạn có thể bỏ lỡ việc bản địa hóa nội dung.

Điều này có thể dẫn đến các chuỗi không được bản địa hóa cho người dùng của bạn.

Các dự án của chúng tôi đã dựa vào quy trình này trong nhiều năm, nhưng trong Xcode 15, chúng tôi đang giới thiệu Danh mục Chuỗi.

Theo thời gian, định dạng mới này sẽ thay thế cả chuỗi và tệp stringsdict trong Xcode.

Danh mục chuỗi giúp bạn dễ dàng quản lý tất cả các chuỗi của mình ở một nơi và tự tin rằng nội dung của bạn được bản địa hóa hoàn toàn trước khi vận chuyển.

Hãy xem nó hoạt động như thế nào.

Ở đây trong mã, tôi đang sử dụng các điều khiển SwiftUI để xây dựng lượt xem của mình và điền nội dung.

Và đây là một Danh mục Chuỗi.

Tất cả các chuỗi mà chúng tôi vừa thấy trong mã Swift của tôi đã được Xcode tự động trích xuất.

Tôi không cần phải tự thêm chúng.

Tôi muốn đảm bảo rằng bạn bè của tôi ở Brazil sẽ có thể sử dụng ứng dụng này, vì vậy tôi đã dịch nó sang tiếng Bồ Đào Nha.

Tôi có khung cảnh này, trong đó tôi trưng bày những chú chim gần đây đã đến thăm sân sau này.

Ở đây, tôi muốn đảm bảo rằng chúng tôi sẽ hiển thị số lượng chim thực tế đã đến thăm sân sau, vì vậy hãy để tôi thêm một biến để đại diện cho con số này.

Và đây là bản xem trước.

Bây giờ chúng ta có thể thấy số lượng chim.

Tôi sẽ xây dựng dự án và quay lại danh mục.

Điều đó thật dễ dàng. Đây là chuỗi mới.

Và chúng ta có thể thấy rằng tiến độ dịch thuật của tôi đã giảm xuống.

Danh mục chuỗi cũng đi kèm với khả năng chỉnh sửa mạnh mẽ cho phép các hoạt động phức tạp được thực hiện dễ dàng.

Ví dụ, chuỗi này có từ nhấn, nhưng đây là một ứng dụng đa nền tảng, vì vậy đối với các thiết bị Mac, tôi muốn đảm bảo rằng chúng tôi sử dụng đúng từ.

Vì vậy, hãy để tôi quay lại chuỗi tiếng Anh của mình, tìm chuỗi "chạm để tìm hiểu thêm".

Đây rồi.

Tôi sẽ nhấp chuột phải vào nó.

Chọn thay đổi theo thiết bị. Chọn Mac.

Và điều chỉnh văn bản một cách chính xác.

Và thế là xong.

Bây giờ nếu tôi quay lại chế độ xem của mình và thay đổi điểm đến chạy của mình thành Mac...

Chúng ta có thể sử dụng các bản xem trước để kiểm tra công việc của tôi.

Điều đó thật dễ dàng.

Có rất nhiều thứ bạn có thể làm với String Catalogs.

Chúng ta hãy xem xét kỹ hơn cách mọi thứ hoạt động.

Chúng ta sẽ bắt đầu với những nơi mà các chuỗi có thể được trích xuất, khám phá trình chỉnh sửa gốc của Xcode để tương tác với Danh mục chuỗi và xem lại quy trình xuất bản địa hóa.

Sau đó, chúng ta sẽ xem xét cách Danh mục Chuỗi được xây dựng và cách bạn có thể áp dụng chúng trong các dự án hiện có của mình.

Để bắt đầu, tôi sẽ giao nó cho Matt để thảo luận về các chuỗi có thể định vị và chúng đến từ đâu.

Matt: Cảm ơn Marina!

Chuỗi có thể bản địa hóa chỉ đơn giản là một chuỗi văn bản sẽ được trình bày cho người dùng trong thời gian chạy và do đó cần được dịch sang tất cả các ngôn ngữ mà ứng dụng của bạn hỗ trợ.

Các chuỗi có thể bản địa hóa có bốn thành phần: Khóa là một mã định danh duy nhất cho chuỗi, thường tương đương với chính chuỗi đó.

Đây là những gì sẽ được sử dụng trong thời gian chạy để tra cứu giá trị thích hợp để hiển thị.

Giá trị mặc định có thể được chỉ định rõ ràng nếu muốn, nhưng nếu không sẽ quay trở lại khóa trong bản địa hóa mặc định.

Xcode 14.3 đã giới thiệu khả năng thay đổi bản địa hóa mặc định của dự án của bạn bằng Trình chỉnh sửa dự án.

Điều này rất hữu ích nếu các chuỗi trong mã nguồn của bạn không bằng tiếng Anh.

Tiếp theo, nhận xét chuỗi cung cấp một cách để cung cấp ngữ cảnh trình dịch về vị trí và cách chuỗi đang được sử dụng trong giao diện người dùng.

Chúng tôi khuyên bạn nên thêm nhận xét vào chuỗi để giúp giải quyết sự mơ hồ cho người dịch.

Cuối cùng, mỗi chuỗi có thể định vị thuộc về một bảng chuỗi, tương ứng với một hoặc nhiều tệp trong đó các bản dịch sẽ được lưu trữ.

Theo mặc định, các chuỗi từ mã được đặt trong bảng "Có thể định vị", nhưng điều đó có thể được tùy chỉnh nếu bạn muốn sắp xếp các chuỗi của mình theo cách khác.

Chúng ta hãy xem xét kỹ hơn các Bảng Chuỗi.

Đối với một ứng dụng hiện có sử dụng các tệp .strings, một bảng chuỗi duy nhất thực sự chứa các tệp .strings và có thể là .stringsdict trong thư mục lproj của mỗi ngôn ngữ được hỗ trợ.

Tất cả các tệp được hiển thị ở đây tạo thành bảng chuỗi "Có thể định vị".

Mặt khác, Danh mục Chuỗi chứa toàn bộ bảng chuỗi trong một tệp duy nhất.

Điều này bao gồm tất cả các bản dịch và siêu dữ liệu bổ sung cho mỗi chuỗi có thể định vị trong bảng đó.

Nếu bạn muốn sắp xếp các chuỗi của mình thành nhiều bảng chuỗi, bạn có thể tạo nhiều Danh mục chuỗi.

Mỗi Danh mục chứa các khóa chuỗi thuộc bảng đó, cùng với các bản dịch của chúng bằng mọi ngôn ngữ mà ứng dụng của bạn hỗ trợ.

Mặc dù các khóa luôn là duy nhất trong bảng chứa của chúng, nhưng không có yêu cầu các khóa phải là duy nhất trên các bảng.

Ví dụ, "Chào mừng đến với WWDC!" Chuỗi có mặt trong cả hai tệp ở đây, vì nó có thể được hiển thị trong các ngữ cảnh khác nhau trong ứng dụng.

Như Marina đã đề cập trước đó, Xcode 15 sẽ tự động điền vào Danh mục chuỗi của bạn và nỗ lực hết sức để giữ chúng đồng bộ với các chuỗi có thể định vị được tìm thấy trong dự án của bạn.

Nhưng Xcode tìm thấy những chuỗi có thể định vị này ở đâu?

Chà, có rất nhiều nơi mà các chuỗi có thể định vị có thể tồn tại.

Xcode có thể tìm thấy các chuỗi trong mã nguồn, các tệp xây dựng giao diện và thậm chí cả danh sách thông tin để đưa vào Danh mục chuỗi của bạn.

Nếu bạn đã bản địa hóa ứng dụng của mình trong một thời gian, nhiều ứng dụng trong số này sẽ cảm thấy quen thuộc.

Chúng ta hãy xem xét kỹ hơn một vài trong số chúng.

Chúng ta sẽ bắt đầu với SwiftUI.

SwiftUI làm cho bản địa hóa liền mạch bởi vì bất cứ khi nào bạn chỉ định một chuỗi theo nghĩa đen trong chế độ xem, chuỗi đó sẽ tự động được coi là có thể định vị được.

Tất cả các chuỗi này được coi là có thể định vị và sẽ được trích xuất vào Danh mục Chuỗi có tên Localizable.xcstrings nếu nó tồn tại.

Điều này hoạt động cho bất kỳ tham số nào chấp nhận một loại LocalizedStringKey.

Chuỗi SwiftUI có thể sử dụng chế độ xem văn bản để chỉ định nhận xét, tên bảng tùy chỉnh hoặc gói để tra cứu chuỗi.

Bạn cũng có thể xác định các chế độ xem tùy chỉnh của riêng mình chấp nhận các chuỗi được coi là có thể định vị cho khách hàng.

Lưu ý rằng chúng tôi đang sử dụng LocalizedStringResource làm loại Chuỗi ở đây.

Khi Xcode thấy một chuỗi ký tự được sử dụng để khởi tạo LocalizedStringResource tại trang web cuộc gọi, nó sẽ biết rằng chuỗi đó có thể định vị được.

LocalizedStringResource là loại được đề xuất để biểu diễn và truyền xung quanh các chuỗi có thể định vị.

Nó không chỉ hỗ trợ khởi tạo bằng cách sử dụng chuỗi theo nghĩa đen, mà còn có thể được cung cấp với nhận xét, tên bảng hoặc thậm chí là giá trị mặc định khác với khóa chuỗi.

Bây giờ chúng ta hãy chuyển sự chú ý của chúng ta sang mã Swift nói chung hơn.

Ở đây tôi có một số mã mô hình bao gồm các chuỗi sẽ được trình bày sau.

Tôi đang sử dụng bản địa hóa: trình khởi tạo trên Chuỗi và AttributedString để chỉ định các chuỗi mà tôi biết sẽ được hiển thị cho người dùng trong thời gian chạy.

Bạn cũng có thể sử dụng LocalizedStringResource trực tiếp ở bất kỳ đâu bạn đã nhập Foundation.

Danh mục chuỗi sử dụng công nghệ mạnh mẽ trong trình biên dịch Swift để trích xuất các chuỗi Swift có thể định vị.

Vì lý do này, hãy đảm bảo bật cài đặt xây dựng Sử dụng Trình biên dịch để Trích xuất Chuỗi Swift.

Nhưng String Catalogs có thể trích xuất các chuỗi không chỉ từ mã Swift.

Đây là một ví dụ về một số mã Objective-C sử dụng NSLocalizedString.

Bất kỳ chuỗi ký tự nào được nhúng trong macro NSLocalizedString đều tự động được coi là có thể định vị được và thậm chí bạn có thể xác định các macro tương tự của riêng mình cũng có thể được phát hiện.

Các khái niệm tương tự cũng có thể được sử dụng trong mã C bằng cách sử dụng CFCopyLocalizedString.

Để chỉ định bất kỳ macro chuỗi được bản địa hóa tùy chỉnh nào trong C hoặc Objective-C, hãy sử dụng cài đặt xây dựng Tên Macro Chuỗi được bản địa hóa.

Bây giờ chúng ta đã thấy cách thức hoạt động của mã nguồn, hãy khám phá các chuỗi có thể định vị trong Trình tạo giao diện.

Các chuỗi được chỉ định trong Trình tạo giao diện được tự động coi là có thể định vị được.

Sử dụng trình kiểm tra, bạn cũng có thể chỉ định nhận xét cho các chuỗi này để cung cấp cho người dịch ngữ cảnh về nơi nó sẽ xuất hiện.

Khi một Danh mục Chuỗi được ghép nối với Bảng phân cảnh hoặc xib, tất cả các chuỗi có thể định vị từ trình tạo giao diện sẽ có mặt trong Danh mục.

Cũng giống như mã nguồn, Xcode cập nhật Danh mục mỗi khi dự án được xây dựng.

Quá trình này hoạt động tương tự đối với các tệp danh sách thông tin.

Đối với điều này, chỉ cần thêm tệp InfoPlist.xcstrings vào dự án của bạn và thêm nó vào mục tiêu mong muốn.

Mỗi khi bạn xây dựng, Xcode sẽ thêm một bộ khóa plist thông tin có thể định vị đã biết vào Danh mục và nhiều khóa khác có thể được thêm thủ công nếu cần.

Cuối cùng, Xcode bao gồm một số cải tiến lớn trong năm nay đối với cách các cụm từ Phím tắt Ứng dụng được bản địa hóa.

Để tìm hiểu thêm, hãy chắc chắn xem bài nói chuyện năm nay, "Hãy làm nổi bật ứng dụng của bạn với các phím tắt ứng dụng."

Bây giờ chúng ta đã tham quan các địa điểm khác nhau Xcode có thể tìm thấy các chuỗi có thể định vị được, hãy nói thêm một chút về cách các chuỗi này tìm đường đến Danh mục Chuỗi.

Mỗi khi bạn xây dựng, Xcode sẽ khám phá các chuỗi có thể định vị trong sơ đồ và nền tảng hiện tại.

Các chuỗi từ mã nguồn đóng vai trò là nguồn sự thật cho các chuỗi có thể định vị, trong khi các chuỗi nguồn trong Danh mục chuỗi được giữ đồng bộ.

Khi các chuỗi mới được phát hiện trong mã, Xcode sẽ thêm chúng vào Danh mục Chuỗi của bạn.

Tại thời điểm này, chuỗi đã sẵn sàng để được dịch.

Như chúng ta đã thảo luận trước đó, các chuỗi có thể định vị có thể có giá trị nguồn mặc định được chỉ định trong mã.

Trong trường hợp đó, Danh mục sẽ được cập nhật với bất kỳ giá trị mới nào từ mã.

Xcode cũng có thể khám phá khi bạn đã xóa một chuỗi khỏi mã.

Nếu chuỗi chưa được dịch, Xcode sẽ xóa nó cho bạn.

Tuy nhiên, nếu bạn đã cung cấp bản dịch cho một chuỗi và sau đó xóa nó, thay vào đó Xcode sẽ để nó yên và đánh dấu nó là Cũ.

Điều này chỉ ra rằng chuỗi không còn có thể được tìm thấy trong mã.

Bạn có thể xóa chuỗi và bản dịch của nó nếu bạn có thể xác nhận rằng nó không còn cần thiết nữa.

Ngoài ra, bạn có thể sử dụng trình kiểm tra để nói với Xcode rằng bạn muốn quản lý chuỗi cụ thể đó theo cách thủ công.

Các chuỗi được quản lý thủ công sẽ không bao giờ được cập nhật hoặc xóa bởi Xcode khi đồng bộ hóa các bản địa hóa sau khi xây dựng.

Điều này có thể hữu ích cho các chuỗi có khóa được xây dựng động trong mã hoặc có thể bắt nguồn từ cơ sở dữ liệu.

Bây giờ chúng ta đã trích xuất tất cả các chuỗi của mình thành Danh mục Chuỗi, chúng ta hãy xem xét kỹ hơn cách Trình chỉnh sửa Danh mục Chuỗi giúp dễ dàng quản lý các bản dịch.

Danh mục chuỗi đi kèm với hỗ trợ hạng nhất để theo dõi trạng thái và tiến trình dịch khi bạn bản địa hóa ứng dụng của mình.

Chúng ta đã nói về cách Xcode sẽ hiển thị các chuỗi là Cũ khi chúng không còn được tìm thấy trong mã.

Nhưng có ba trạng thái bản địa hóa khác mà bạn nên biết.

"Mới" chỉ ra rằng một chuỗi chưa được dịch sang ngôn ngữ đã chọn.

Bạn sẽ thấy điều này sau khi thêm một chuỗi mới vào mã.

"Đánh giá nhu cầu" chỉ ra rằng chuỗi yêu cầu sự chú ý của người bản địa hóa vì giá trị có thể cần được thay đổi.

Nếu bạn muốn sử dụng giá trị hiện tại, chỉ cần chọn "Đánh dấu là Đã đánh giá" từ trình đơn ngữ cảnh.

Bạn cũng có thể sử dụng menu này để đánh dấu một chuỗi để trình bản địa hóa xem xét.

Điều này có thể hữu ích nếu bạn nhận được báo cáo lỗi về bản dịch bị lỗi.

Cuối cùng, các chuỗi đã được dịch sang ngôn ngữ đã chọn sẽ hiển thị dấu kiểm màu xanh lá cây.

Điều này chỉ ra rằng không cần thêm hành động nào nữa.

Là một nhà phát triển, một thách thức nội địa hóa phổ biến khác là số nhiều.

Ví dụ, đây là chuỗi Marina trước đây đã được thêm vào Backyard Birds, hiển thị số lượng khách truy cập gần đây.

Trong tiếng Anh, chúng ta sẽ cần thay đổi ngữ pháp của chuỗi tùy thuộc vào việc số đó là một hay một số số khác.

Tuy nhiên, trong một ngôn ngữ như tiếng Ukraina, có thể có nhiều trường hợp hơn để xem xét.

Để giải quyết vấn đề này, chúng ta cần một cách để thay đổi chuỗi dựa trên giá trị của số được truyền.

Trước đây, việc giải quyết vấn đề này cho một số lượng lớn ngôn ngữ sẽ yêu cầu một tệp stringsdict.

Định dạng plist này có thể khó sử dụng một cách chính xác và tạo ra một rào cản khá cao cho một nhiệm vụ đơn giản, như số nhiều một chuỗi.

Bây giờ Trình chỉnh sửa danh mục chuỗi bao gồm hỗ trợ tích hợp cho quy trình làm việc biến đổi chuỗi.

Bằng cách tiết lộ trình đơn ngữ cảnh trên một chuỗi, tôi được trình bày với các tùy chọn để thay đổi chuỗi.

Và khi tôi thay đổi chuỗi trong bản địa hóa mặc định, các bản dịch cũng sẽ tự động thay đổi.

Đây là một ví dụ phức tạp hơn về một chuỗi cần sử dụng biến thể số nhiều với hai biến.

Trong thời gian chạy, chúng ta có thể kết thúc với một vài kịch bản khác nhau.

Chúng ta có thể có một con chim duy nhất ở một sân sau, nhiều con chim ở một sân sau duy nhất, nhiều con chim ở nhiều sân sau hoặc một con chim duy nhất mặc dù có nhiều sân sau.

Trong mỗi trường hợp, chuỗi xung quanh các con số cần được dịch hơi khác một chút để duy trì sự phù hợp về ngữ pháp.

Trình chỉnh sửa Danh mục Chuỗi cũng giúp bạn dễ dàng thực hiện việc này.

Đây là nơi mà sự thay thế xuất hiện.

Ở đây, chúng tôi đã thay đổi cả hai đối số trong chuỗi theo số nhiều.

Mỗi sự thay thế, có tiền tố là dấu @, lưu trữ một từ điển các trường hợp số nhiều và giá trị của chúng.

Ví dụ này bao gồm thay thế "chim" để định dạng số lượng chim và thay thế "yard" để định dạng số lượng sân sau.

Trong thời gian chạy, chuỗi cấp cao nhất được hiển thị ở đây sẽ được sử dụng, thay thế trong trường hợp số nhiều thích hợp từ mỗi thay thế được tham chiếu.

Vì vậy, trong ví dụ này, bất kỳ chuỗi nào trong số này đều có thể được tạo ra, tạo ra sự hoán vị hiệu quả của các trường hợp số nhiều có thể có cho mỗi lần thay thế.

Sự thay thế thường tương ứng với các đối số được truyền vào chuỗi, thường sử dụng phép nội suy chuỗi.

Trong trình kiểm tra, Xcode hiển thị thông tin về vị trí của đối số để sử dụng cho số, cũng như chỉ định định dạng kiểu C của loại được truyền.

Sự thay thế yard được hiển thị ở đây tương ứng với đối số hai vì nó là phép nội suy chuỗi thứ hai được sử dụng trong mã nguồn.

Giá trị của backyards.count sau đó sẽ được sử dụng để xác định xem cuối cùng chúng ta có sử dụng trường hợp này hay trường hợp khác trong sự thay thế này hay không.

Bằng cách này, String Catalogs cung cấp một giao diện người dùng đơn giản cho các chuỗi khác nhau, trong khi vẫn hỗ trợ các trường hợp sử dụng nâng cao như thế này.

Bây giờ hãy quay lại Marina để đưa những kỹ thuật này vào hoạt động.

Marina: Cảm ơn, Matt.

Quay trở lại ứng dụng Backyard Birds, Trình chỉnh sửa danh mục chuỗi giúp tôi dễ dàng tìm thấy các chuỗi mà tôi đang tìm kiếm.

Tôi có thể lọc để tìm tất cả các chuỗi chứa từ "học" hoặc sắp xếp theo trạng thái để xem các trạng thái quan trọng nhất ở trên cùng.

Như Matt đã chỉ ra, có thể có một số chuỗi không có trong mã nhưng sẽ được hiển thị trong ứng dụng.

Ví dụ, tôi biết rằng ứng dụng của tôi có thể hiển thị một loại chim đặc biệt đến từ đám mây cho người đăng ký ứng dụng.

Trong trường hợp này, tôi có thể sử dụng nút dấu cộng ở đây để xác định một chuỗi thủ công, cung cấp cho nó một phím... và một nhận xét.

Hãy nhớ rằng các chuỗi được quản lý thủ công sẽ không được cập nhật hoặc xóa bởi Xcode.

Nếu bạn muốn Xcode bắt đầu trích xuất chuỗi của mình từ mã, hãy mở rộng trình kiểm tra...

Và đặt chuỗi được quản lý tự động.

Xcode cũng giúp dễ dàng theo dõi tiến trình bản địa hóa của tôi.

Bên cạnh mỗi chuỗi, bạn có thể thấy một huy hiệu đại diện cho trạng thái dịch.

Khi một chuỗi vừa được thêm vào từ mã hoặc thủ công, như chúng tôi vừa làm, bạn sẽ thấy nó được đánh dấu là "MỚI", có nghĩa là nó chưa được dịch.

Bất cứ khi nào chuỗi nguồn thay đổi, các bản dịch sẽ được đánh dấu để xem xét.

Trước đó, tôi đã thay đổi chuỗi này bằng tiếng Anh, vì vậy các bản dịch hiện có đã được đánh dấu để xem xét.

Nếu chuỗi này ổn, tôi có thể nhấp chuột phải vào chuỗi và chọn "đánh dấu là đã đánh giá".

Vì tôi nói tiếng Bồ Đào Nha, tôi biết rằng tôi cần cập nhật bản dịch này.

Với sự thay đổi này, chúng ta có thể thấy ở đây trên thanh bên rằng tỷ lệ bản địa hóa của chúng ta đã tăng lên.

Khi một ngôn ngữ được bản địa hóa hoàn toàn, bạn sẽ thấy một dấu kiểm màu xanh lá cây ở đây trong thanh bên.

Đây là lần đầu tiên bạn có thể theo dõi tiến trình bản địa hóa của mình trong Xcode và tự tin rằng ứng dụng của bạn đã được bản địa hóa hoàn toàn trước khi gửi nó đến App Store.

Tôi cũng muốn chuẩn bị ứng dụng này được bản địa hóa bằng tiếng Ukraina.

Tôi có thể làm điều này ngay từ Trình chỉnh sửa danh mục chuỗi bằng cách nhấn nút dấu cộng và chọn một ngôn ngữ mới từ danh sách này.

Và đây là danh mục tiếng Ukraina của tôi chưa có bản dịch nào.

Đây là chuỗi chúng tôi đã thêm trước đó, và có vẻ như nó cần được thay đổi theo số nhiều.

Vì điều đó, chúng ta hãy quay lại với tiếng Anh.

Tôi sẽ nhấp chuột phải vào chuỗi này và chọn " thay đổi theo số nhiều."

Đối với tiếng Anh, tôi biết rằng tôi cần phân biệt giữa số nhiều và số ít, vì vậy hãy khắc phục điều đó.

Trong tiếng Bồ Đào Nha, các trường hợp số nhiều giống như tiếng Anh.

Tuy nhiên, nếu chúng ta nhìn vào tiếng Ukraina, bạn có thể thấy rằng một tập hợp các trường hợp số nhiều khác đã được thêm vào cho tôi.

Người phiên dịch tiếng Ukraina của tôi sẽ biết chính xác phải làm gì với điều này.

Theo quan điểm của tôi, tôi muốn thêm một nhãn khác cho biết số lượng chim có trong mỗi sân sau của tôi.

Vậy hãy để tôi thêm nó...

Xây dựng...

Và quay lại Danh mục của tôi.

Và nó ở đây trong Danh mục của tôi.

Tôi cũng muốn thay đổi chuỗi theo số nhiều, nhưng nó chứa nhiều đối số.

Lần này, khi tôi nhấp chuột phải vào chuỗi và chọn thay đổi theo số nhiều, tôi có thể chọn đối số nào tôi muốn thay đổi.

Hãy thay đổi theo cả hai.

Tiếp theo, tôi sẽ thiết lập các thay thế của mình để chúng có thể được số nhiều hóa trong thời gian chạy.

Hãy chuyển ra những từ cần đồng ý với lập luận.

Vì vậy, "chim" vào sự thay thế "chim" và "sân sau" thành sự thay thế "sân".

Để dễ đọc, tôi muốn đổi tên các thay thế của mình để tôi biết các biến tương ứng với những đối số nào.

Điều đó dễ hiểu hơn.

Bây giờ Matt sẽ chỉ cho chúng tôi cách chúng tôi có thể xuất các chuỗi của mình để gửi chúng đi dịch sang tiếng Ukraina.

Matt: Cảm ơn, Marina.

Như bạn đã thấy, Xcode giúp dễ dàng cung cấp và chỉnh sửa bản dịch trực tiếp trong Danh mục Chuỗi, nhưng đôi khi, bạn sẽ cần làm việc với các dịch giả để bản địa hóa các chuỗi trong ứng dụng của mình bên ngoài Xcode.

Đối với kịch bản này, Xcode cung cấp tùy chọn Bản địa hóa Xuất khẩu.

Điều này tạo ra một Danh mục Bản địa hóa cho mỗi ngôn ngữ, có thể được gửi đi để dịch.

Danh mục bản địa hóa, lần đầu tiên được giới thiệu trong Xcode 10, là một định dạng gói chứa tất cả nội dung có thể bản địa hóa trong một dự án hoặc không gian làm việc.

Hiện tại, chúng tôi sẽ tập trung vào tệp XLIFF bên trong, chứa tất cả các chuỗi có thể định vị và bản dịch của chúng.

XLIFF là một định dạng tiêu chuẩn công nghiệp để lưu trữ và vận chuyển các bản địa hóa.

Nếu bạn hoặc các công cụ bạn duy trì làm việc trực tiếp với các tệp XLIFF, bạn sẽ muốn biết một số thay đổi về cách các chuỗi đa dạng được thể hiện cho các dự án sử dụng Danh mục chuỗi.

Đây là một ví dụ biểu diễn XLIFF của chuỗi số nhiều ban đầu được xác định trong tệp .stringsdict.

Các số nhận dạng đơn vị chuyển đổi được hiển thị ở đây hoạt động như các đường dẫn vào định dạng plist stringsdict.

Khi các chuỗi khác nhau thay vào đó bắt nguồn từ Danh mục Chuỗi, thay vào đó chúng sẽ trông như thế này.

Chúng chứa khóa chuỗi, một chuỗi phân cách và cuối cùng, một chuỗi cấu hình được phân tách bằng dấu chấm.

Chuỗi cấu hình này có thể là một chỉ định số nhiều đơn giản, một chỉ định thiết bị, một chuỗi nhiều điều kiện hoặc một đường dẫn đến một trường hợp số nhiều bên trong một sự thay thế.

Công cụ tự động hóa không chỉ dễ dàng đọc các phím này mà còn thiết kế chúng để con người dễ đọc và hiểu trong nháy mắt.

Các công cụ dịch thuật cũng có thể thay đổi một chuỗi mà trước đây không thay đổi bằng cách thay thế các đơn vị dịch trong XLIFF bằng cấu trúc biến thể mong muốn.

Ví dụ, đây là một chuỗi hiện không thay đổi chút nào.

Nhưng bằng tiếng Bồ Đào Nha, tôi muốn cung cấp một chuỗi ngắn hơn trên Apple Watch một cách cụ thể.

Bằng cách thay thế đơn vị đó bằng device.applewatch và device.các biến thể khác trong XLIFF, chúng ta có thể ảnh hưởng đến cấu trúc biến thể sẽ có mặt cho ngôn ngữ này trong lần nhập tiếp theo.

Để đảm bảo rằng XLIFF mặc định sử dụng định dạng Danh mục Chuỗi khi xuất bản địa hóa, hãy đảm bảo đặt Danh mục Chuỗi Ưu tiên Bản địa hóa thành Có.

Khi bạn nhận được Danh mục bản địa hóa đã dịch từ một dịch giả, bạn có thể nhập lại vào dự án.

Đối với các chuỗi đến từ Danh mục chuỗi, các bản dịch được chỉ định trong các tệp đã nhập sẽ được tự động thêm vào Danh mục chuỗi thích hợp.

Hãy thử cái này ở Backyard Birds.

Marina: Vì tôi nói tiếng Bồ Đào Nha, tôi đã lo việc dịch ứng dụng của mình sang tiếng Bồ Đào Nha, nhưng tôi cần gửi danh mục bản địa hóa tiếng Ukraina của mình cho một dịch giả để cung cấp nội dung bản địa hóa.

Tôi sẽ bắt đầu bằng cách nhấp vào đây trong Menu Sản phẩm, chọn Xuất bản địa hóa và chọn ngôn ngữ tôi muốn xuất.

Trong trường hợp này, chỉ có tiếng Ukraina.

Bây giờ tôi có thể nhấp vào Xuất.

Khi họ gửi lại cho tôi bản dịch, tôi có thể nhập chúng vào ứng dụng của mình.

Ồ, họ đây rồi.

Bây giờ với các bản dịch đã sẵn sàng, tôi sẽ quay lại ứng dụng của mình, nhấp vào menu Sản phẩm, lần này, chọn Nhập bản địa hóa và chọn danh mục bản địa hóa tiếng Ukraina của tôi.

Được rồi, hãy xem mọi thứ trông như thế nào.

Hoàn hảo, các bản dịch tiếng Ukraina của tôi đã sẵn sàng và bây giờ tôi đã có ứng dụng của mình được bản địa hóa hoàn toàn bằng cả hai ngôn ngữ.

Hãy xem nó trông như thế nào trong tiếng Bồ Đào Nha.

Tôi sẽ nhấp vào bộ chọn sơ đồ và chọn Chỉnh sửa sơ đồ.

Trong các tùy chọn, tôi có thể thay đổi ngôn ngữ ứng dụng từ hệ thống sang tiếng Bồ Đào Nha.

Và tôi sẽ chạy ứng dụng.

Tuyệt, đây là một số dây mà chúng tôi đã làm việc cùng.

Bây giờ chúng ta đã dịch xong, hãy tiếp quản nó, Matt.

Matt: Bây giờ nội dung ứng dụng của chúng tôi đã được dịch đầy đủ, hãy thảo luận ngắn gọn về những gì xảy ra trong quá trình xây dựng.

Danh mục chuỗi được thiết kế đặc biệt để tương tác trong một dự án Xcode.

Vì các tệp JSON dưới mui xe, chúng cũng có thể dễ dàng phân biệt trong kiểm soát nguồn.

Sau đó, tại thời điểm xây dựng, các tệp này biên dịch thành các tệp .strings và .stringsdict.

Bởi vì các định dạng tệp này đã được hỗ trợ trong hệ điều hành của chúng tôi trong nhiều năm nay, tôi rất vui khi nói rằng bạn có thể bắt đầu sử dụng Danh mục Chuỗi ngay lập tức mà không cần phải cập nhật mục tiêu triển khai tối thiểu của mình.

Cũng cần lưu ý rằng các chuỗi nguồn được trích xuất từ mã không được bao gồm trong bản dựng cuối cùng.

Điều này sẽ tiết kiệm dung lượng đĩa mà không ảnh hưởng đến các chuỗi được hiển thị trong thời gian chạy.

Bây giờ chúng ta đã thấy tất cả những lợi ích này trong hành động, Marina sẽ chỉ cho bạn cách bắt đầu với String Catalogs trong các dự án hiện tại của bạn.

Marina: Xcode giúp bạn dễ dàng di chuyển các dự án hiện có của mình để sử dụng Danh mục Chuỗi.

Và bạn có thể làm điều này theo tốc độ của riêng bạn.

Bất cứ khi nào bạn sẵn sàng, bạn có thể chọn chuỗi tệp và mục tiêu nào để di chuyển.

Đây là một ứng dụng hiện có mà chúng tôi đã bản địa hóa vào năm ngoái, FoodTruck.

Bạn có thể thấy ở đây rằng nó có một chuỗi và tệp stringsdict.

Danh mục chuỗi có thể cùng tồn tại với các định dạng kế thừa, vì vậy tôi có thể chọn di chuyển bảng Localizable bất cứ khi nào tôi sẵn sàng.

Hãy làm điều này ngay bây giờ.

Tôi sẽ nhấp chuột phải vào tệp và chọn "Di chuyển vào Danh mục Chuỗi".

Xcode bao gồm một Trợ lý Di chuyển tích hợp liệt kê tất cả các tệp có thể di chuyển trong dự án của tôi.

Ở đây tôi có thể thấy bảng Localizable là một phần của mục tiêu FoodTruck.

Tôi sẽ tiếp tục và di chuyển cái này ngay bây giờ.

Tuyệt vời! Sau khi di chuyển, Xcode sẽ xây dựng dự án của tôi để trích xuất các chuỗi.

Hãy xem Danh mục trông như thế nào sau khi xây dựng.

Ở đây chúng ta có thể thấy rằng tất cả các chuỗi từ tệp chuỗi của tôi và thậm chí cả số nhiều từ tệp stringsdict đã được di chuyển.

Tất cả các bản dịch tiếng Ả Rập của tôi đều được áp dụng, nhưng chúng ta có thể thấy ở đây rằng tiến độ dịch thuật không phải là 100% đối với tiếng Pháp.

Danh mục chuỗi đã giúp tôi tìm các chuỗi chưa được bản địa hóa trong dự án của mình.

FoodTruck cũng có một gói nhanh chóng, FoodTruckKit, vẫn chưa được bản địa hóa.

Bắt đầu bản địa hóa một gói hoặc dự án mới cực kỳ dễ dàng với String Catalogs.

Tôi sẽ bắt đầu bằng cách thêm bản địa hóa mặc định vào bản kê khai gói và đảm bảo rằng tôi đang sử dụng Swift Tools phiên bản 5.9.

Sau đó, tôi sẽ thêm một Danh mục Chuỗi mới vào gói với tên bảng mặc định "Có thể định vị".

Sau khi xây dựng dự án của mình, tôi có thể thấy tất cả các chuỗi từ khắp gói hàng của mình.

Thật dễ dàng để bắt đầu bản địa hóa một dự án hoặc gói mới.

Danh mục chuỗi là nền tảng mới của bản địa hóa trong Xcode và đơn giản hóa quá trình quản lý các bản dịch trong dự án của bạn.

Chúng tôi hy vọng bạn sẽ bắt đầu ngay hôm nay bằng cách di chuyển các chuỗi hiện có của mình.

Và nếu bạn chưa bao giờ bản địa hóa một ứng dụng trước đây, chúng tôi hy vọng bạn sẽ được truyền cảm hứng bởi việc bắt đầu dễ dàng như thế nào.

Obrigada pela companhia hoje.

Cảm ơn vì đã tham gia cùng chúng tôi, và vui vẻ ngắm chim.

♪ ♪