10122

♪ ♪

Jean-Yves: Chào mừng đến với "Khám phá các định dạng phương tiện truyền thông cho web."

Tôi là Jean-Yves Avenard, một kỹ sư WebKit, và hôm nay tôi sẽ xem xét các định dạng phương tiện được hỗ trợ trong Safari, tập trung vào hình ảnh và video, và giới thiệu cho bạn một số công nghệ mới mà chúng tôi đã cung cấp trong Safari 17.

Chúng tôi đang thêm hỗ trợ cho một số định dạng hình ảnh mới và tôi sẽ giúp bạn chọn định dạng phù hợp cho trang web của mình sau một bài thuyết trình nhỏ về những định dạng thường thấy nhất.

Sau đó, tôi sẽ hướng dẫn bạn tối ưu hóa MSE bằng một công nghệ hoàn toàn mới mà chúng tôi đã triển khai trong Safari 17.

Cuối cùng, tôi sẽ trình bày cách bạn có thể thêm hỗ trợ AirPlay vào video của mình bằng cách sử dụng Tiện ích mở rộng nguồn phương tiện Trong những năm qua, ba định dạng đã được sử dụng rộng rãi nhất.

Chúng được hỗ trợ bởi tất cả các trình duyệt và dễ dàng tạo và triển khai, nhưng công nghệ đã đạt được tiến bộ to lớn trong thập kỷ qua và các định dạng tuyệt vời mới hiện đã có sẵn.

Các định dạng đương nhiệm là GIF, JPEG và PNG.

Hãy xem xét chúng chi tiết hơn.

GIF, hay như chúng ta đã nói đúng ở đất nước tôi sinh ra, "jeef", một định dạng được giới thiệu cách đây 36 năm phù hợp nhất cho các hình ảnh động đơn giản, meme và nội dung truyền thông xã hội.

Nó không hỗ trợ bảng màu đầy đủ bị giới hạn ở 8 bit màu cùng một lúc.

Vì nó là định dạng không mất dữ liệu, kích thước tệp có thể khá lớn, khiến nó ít phù hợp hơn với các hình ảnh động lớn hơn.

Sau đó chúng tôi có JPEG, được giới thiệu hơn 30 năm trước.

Một tính năng tuyệt vời là tải liên tục, nơi bạn có thể xem một số hình ảnh trước khi tải đầy đủ, đặc biệt thuận tiện vào thời điểm tốc độ mạng không đặc biệt nhanh.

Nó phù hợp nhất cho các bức ảnh và các hình ảnh khác với nhiều màu sắc và chi tiết.

Đó là một định dạng mất mát.

Điều đó có nghĩa là một số dữ liệu hình ảnh bị mất trong quá trình nén.

Việc nén cũng cho phép kích thước tệp nhỏ hơn và thời gian tải nhanh hơn.

Với GIF có rất nhiều hạn chế, PNG đã được tạo ra cách đây 26 năm.

PNG hỗ trợ độ trong suốt, điều này làm cho chúng hữu ích cho việc phủ lên nhau.

Thật tuyệt vời cho những hình ảnh có diện tích lớn có màu đồng nhất hoặc văn bản sắc nét như logo hoặc hình minh họa như cá sóc của WebKit Javascript.

Nó không mất dữ liệu và không nén tốt như JPEG, vì vậy nó không phù hợp lắm với những hình ảnh lớn với nhiều màu sắc.

Giống như GIF, nó được thiết kế để thay thế, nó hỗ trợ hình ảnh động, mặc dù tôi hiếm khi thấy chúng trong tự nhiên.

Bằng cách sử dụng các định dạng này, bạn có thể tiếp cận tất cả người dùng của mình, bất kể họ đang sử dụng trình duyệt web nào.

Safari 17 hỗ trợ thêm bốn định dạng hiện đại bổ sung, mà bạn sẽ muốn sử dụng ngoài những định dạng kế thừa và tôi nghĩ điều đó có ý nghĩa nhất.

Mặc dù chúng tuyệt vời và hầu như đều có thể hoán đổi cho nhau, nhưng mỗi người đều có những lợi thế chính so với những người khác.

WebP đã được thêm vào Safari 14 và macOS Big Sur.

Đây là một định dạng hình ảnh hiện đại sử dụng các thuật toán nén nâng cao để đạt được kích thước tệp nhỏ hơn mà không làm giảm chất lượng hình ảnh.

Các tệp WebP thường nhỏ hơn các định dạng hình ảnh trước đó, điều này có thể giúp cải thiện hiệu suất trang web và thời gian tải.

WebP cho phép bạn thực hiện hoạt ảnh với chất lượng giống như video và vì vậy hãy sử dụng nó khi sử dụng GIF do kích thước hoặc thiếu màu sắc của chúng là một ý tưởng tồi.

Một bổ sung thú vị cho Safari 17 là JPEG-XL, một định dạng hình ảnh mới được thiết kế để cung cấp tốc độ nén và chất lượng hình ảnh cao.

JPEG-XL sử dụng một thuật toán nén mới được gọi là "Mật hóa Entropy mô-đun" cho phép linh hoạt hơn trong việc điều chỉnh tỷ lệ nén.

Nó rất phù hợp với hình ảnh có thể được phục vụ qua các kết nối chậm, như JPEG, vì vậy người dùng có thể nhìn thấy thứ gì đó trước khi toàn bộ hình ảnh được tải đầy đủ.

Một tính năng chính của JPEG-XL là bạn có thể chuyển đổi không mất dữ liệu, nghĩa là không xảy ra bất kỳ mất dữ liệu nào từ các tệp JPEG hiện có của bạn sang JPEG-XL, đồng thời giảm đáng kể kích thước của chúng lên đến 60%.

Đó là một định dạng tương đối mới, và do đó có thể không được hỗ trợ rộng rãi bởi tất cả các thiết bị và trình duyệt.

AVIF là một định dạng hình ảnh hiện đại khác sử dụng codec video AV1 để đạt được tốc độ nén cao mà không làm giảm chất lượng hình ảnh.

Được hỗ trợ rộng rãi trên tất cả các trình duyệt, nó rất phù hợp cho ảnh trực tiếp và hỗ trợ độ sâu màu lên đến 12 bit.

Nó cũng có sự hỗ trợ rộng rãi nhất, và bạn nên bao gồm nó như dự phòng.

AVIF có thể nhỏ hơn JPEG tới mười lần.

Trong Safari 17, chúng tôi đã thêm hỗ trợ cho HEIC, còn được gọi là HEIF.

Đó là một định dạng hình ảnh sử dụng thuật toán nén codec video HEVC để đạt được kích thước tệp nhỏ.

Nhưng vì nó không được hỗ trợ rộng rãi trên các nền tảng khác, có lẽ bạn sẽ chỉ muốn sử dụng nó như một định dạng thay thế.

Đây là định dạng được iPhone và iPad sử dụng để lưu ảnh, vì vậy bạn có thể xử lý trực tiếp ảnh được tải lên từ iPhone của mình mà không cần chuyển đổi.

Nếu bạn có ý định hiển thị hình ảnh bằng WKWebView bên trong ứng dụng của mình, đây là định dạng bạn nên sử dụng, vì nó được tăng tốc phần cứng và có thể được hiển thị nhanh chóng và hiệu quả.

Tuy nhiên, một trong những ưu điểm chính của JPEG-XL, AVIF và HEIC là chúng hỗ trợ cả gam màu rộng và HDR.

Hỗ trợ hàng tỷ màu sắc, gam màu lớn cho phép nhiều màu hơn được bảo quản trên tệp và được thể hiện trên màn hình.

HDR cho phép bạn xác định rõ hơn bóng tối có thể tối như thế nào và độ sáng của độ sáng và lượng ánh sáng có thể được hấp thụ.

Cùng nhau, bạn sẽ có được sự sống động hơn với phong cảnh ngoài trời, hoặc những cảnh rất tươi sáng với nhiều độ tương phản, hoặc có kết xuất hoàn hảo những tông màu da đẹp, phức tạp đó.

Vì bạn muốn trang web của mình tiếp tục hỗ trợ tất cả các trình duyệt web được triển khai rộng rãi, bạn có thể vẫn sẽ cần cung cấp GIF, JPEG và PNG trong những năm tới.

Tuy nhiên, bằng cách cung cấp các định dạng bổ sung này, bạn có thể làm cho trang web của mình tải nhanh hơn và sử dụng ít băng thông hơn, trong khi vẫn tương thích.

Bạn thực sự không cần phải lựa chọn.

Để tôi chỉ cho bạn cách làm.

Khai báo một phần tử hình ảnh với hình ảnh JPEG-XL có nghĩa là các trình duyệt và trình duyệt cũ hơn không hỗ trợ nó sẽ nhận được hình ảnh bị hỏng.

Phần tử hình ảnh trong HTML cho phép bạn chỉ định các nguồn thay thế, cho phép trình duyệt chọn định dạng mà nó hỗ trợ.

Bạn thậm chí có thể cung cấp nhiều nguồn thay thế, ưu tiên định dạng mang lại hiệu suất tốt nhất.

Trình duyệt sẽ xem qua danh sách các định dạng có sẵn từ trên xuống dưới.

Vì vậy, ở đây, nó sẽ sử dụng HEIC trước nếu được hỗ trợ.

Nếu không tìm thấy kết quả khớp hoặc nếu giải mã không thành công trên đường đi, URL của nguồn của phần tử hình ảnh sẽ được chọn.

Đó là cách dễ dàng để cung cấp định dạng phù hợp cho mọi người bất kể hỗ trợ thiết bị mà không cần xem chuỗi User-Agent hoặc lo lắng về trình duyệt mà người dùng sẽ sử dụng.

Bạn không cần phải lựa chọn. Hãy để trình duyệt làm điều đó cho bạn.

Bây giờ chúng ta đã biết các định dạng hình ảnh hiện đại mà chúng ta có thể sử dụng và khi nào nên sử dụng chúng, chúng ta hãy xem video và cụ thể, hãy đi sâu vào video phát trực tuyến thích ứng.

Sự phát triển của việc trình bày video trên các trang web là một điều hấp dẫn và nó đã đi một chặng đường dài kể từ những ngày đầu của web.

Dưới đây là một số cột mốc quan trọng trong sự phát triển của việc trình bày video trên các trang web.

Trong những ngày đầu của web, video không được sử dụng phổ biến trên các trang web do những hạn chế về kỹ thuật.

Các trang web chủ yếu được tạo thành từ văn bản và hình ảnh tĩnh.

Vào đầu những năm 2000, các plugin trình duyệt như Flash và QuickTime nổi lên như một cách phổ biến để thêm video vào các trang web.

Và vào năm 2010, HTML5 đã được giới thiệu, giúp bạn có thể nhúng video trực tiếp vào các trang web mà không cần các plugin đó.

Điều này giúp việc thêm video vào các trang web trở nên dễ dàng hơn và cũng cho phép linh hoạt hơn và kiểm soát cách hiển thị và phát nội dung video.

Và WebKit đã đi đầu trong cuộc cách mạng này.

Với sự phát triển của các thiết bị di động, việc các trang web có thể hiển thị nội dung video trên màn hình nhỏ hơn ngày càng trở nên quan trọng.

Điều này dẫn đến sự phát triển của các kỹ thuật mới để cho phép các trang web thích ứng với các kích thước và hướng màn hình khác nhau.

HTTP Live Streaming được Apple giới thiệu vào năm 2009.

Một trong những tính năng chính của HLS là hỗ trợ phát trực tuyến tốc độ bit thích ứng, cho phép cung cấp chất lượng video tốt nhất có thể dựa trên tốc độ kết nối internet của người dùng và khả năng của thiết bị.

Phát trực tuyến thích ứng trong HLS hoạt động bằng cách chia nội dung video thành các đoạn hoặc phân đoạn nhỏ, thường có độ dài từ hai đến mười giây.

Mỗi phân đoạn được mã hóa ở nhiều tốc độ bit và các phiên bản tốc độ bit khác nhau này được cung cấp cho khách hàng thông qua tệp kê khai dưới dạng danh sách phát đa biến thể M3U8.

HLS thực hiện một công việc tuyệt vời trong việc lựa chọn biến thể phù hợp nhất.

Nó rất đơn giản để sử dụng và là giải pháp tốt nhất cho người dùng cuối.

Thật không may, trên máy tính để bàn, không phải tất cả các trình duyệt đều hỗ trợ HLS và thậm chí ngày nay, chỉ có Safari hỗ trợ nó.

Các nhà phát triển web muốn kiểm soát nhiều hơn và linh hoạt hơn, chẳng hạn như lựa chọn và chuyển dữ liệu phương tiện hoặc khả năng phát nội dung DRMed trên máy tính để bàn.

Và vì vậy vào năm 2013, Phần mở rộng nguồn truyền thông đã được xuất bản bởi cơ quan W3C.

Safari 8 cùng với các trình duyệt khác nhanh chóng bổ sung hỗ trợ cho Media Source Extension, hay MSE, là một bộ công cụ cấp thấp cho phép phát trực tuyến thích ứng bằng cách cung cấp cho trang web nhiều quyền kiểm soát và trách nhiệm hơn trong việc quản lý bộ đệm và độ phân giải.

Nhìn chung, MSE đã thay đổi cuộc chơi cho các nhà phát triển web.

Nó đã cho phép phát triển trải nghiệm phát trực tuyến chất lượng cao trên web và hiện là công nghệ video web được sử dụng nhiều nhất.

MSE có một số nhược điểm.

Nó không đặc biệt tốt trong việc quản lý mức bộ đệm, thời gian và lượng truy cập mạng, và lựa chọn biến thể phương tiện.

Những thiếu hiệu quả này phần lớn không quan trọng đối với các thiết bị tương đối mạnh như máy tính đa năng hiện đại.

Mức sử dụng năng lượng trên các thiết bị di động cao hơn nhiều so với trình phát gốc HLS và vì vậy MSE không bao giờ có sẵn trên iPhone vì chúng tôi không thể đạt được mức tiết kiệm pin cần thiết với MSE.

Tất cả các thử nghiệm của chúng tôi đối với các trang web khác nhau đã chứng minh rằng việc kích hoạt MSE sẽ dẫn đến sự hồi quy về thời lượng pin.

Trên các thiết bị có khả năng hẹp hơn hoặc nơi kết nối tốt nhất là không ổn định, cũng có thể khó đạt được chất lượng phát lại với MediaSource API tương tự như có thể với HLS.

Một trong những lý do cho điều này là MSE đã chuyển hầu hết quyền kiểm soát đối với việc truyền dữ liệu phương tiện từ User Agent sang ứng dụng đang chạy trong trang.

Việc chuyển giao quyền kiểm soát này đã thêm các điểm kém hiệu quả, trang không có cùng mức độ kiến thức hoặc thậm chí mục tiêu như Tác nhân người dùng, giống như họ có thể tìm kiếm đường dẫn kết nối mạng rẻ nhất và điều này thường dẫn đến việc sử dụng năng lượng cao hơn nhiều.

Và năm nay, chúng tôi muốn giải quyết những hạn chế đó và chúng tôi đã làm việc chăm chỉ để tìm cách kết hợp tính linh hoạt do MSE cung cấp với hiệu quả của HLS.

Và vì vậy tôi rất vui mừng được giới thiệu công nghệ mới này kết hợp những gì tốt nhất của MSE với các yếu tố làm cho HLS trở nên tuyệt vời, API nguồn phương tiện được quản lý.

MediaSource "được quản lý" là nơi mà nhiều quyền kiểm soát hơn đối với MediaSource và các đối tượng liên quan của nó đã được trao cho trình duyệt.

Nó giúp các tác giả trang web phương tiện dễ dàng hơn trong việc hỗ trợ phát lại phương tiện truyền phát trực tuyến trên các thiết bị có khả năng bị hạn chế, đồng thời cho phép Đại lý người dùng phản ứng với những thay đổi về bộ nhớ khả dụng và khả năng kết nối mạng.

Hãy xem xét một số khác biệt so với MSE cũ.

Nguồn phương tiện được quản lý có thể giảm mức sử dụng năng lượng bằng cách thông báo cho trang web khi nào là thời điểm tốt để đệm nhiều dữ liệu phương tiện hơn.

Khi không đệm, nó cho phép modem di động chuyển sang trạng thái năng lượng thấp trong thời gian dài hơn, tăng tuổi thọ pin.

Khi hệ thống chuyển sang trạng thái bộ nhớ thấp, Nguồn phương tiện được quản lý sẽ xóa bộ nhớ đệm không sử dụng hoặc bị bỏ rơi một cách thông minh, giúp các trang hiệu quả hơn.

Bởi vì Nguồn phương tiện được quản lý theo dõi khi bộ đệm nên bắt đầu và dừng lại, công việc phát hiện trạng thái bộ đệm thấp và bộ đệm đầy đủ của trang trở nên dễ dàng hơn nhiều.

Trình duyệt làm điều đó cho bạn.

Với những cải tiến này, Safari có thể gửi yêu cầu phương tiện qua modem 5G.

Điều này cho phép trang web của bạn sử dụng mạng 5G cực nhanh để tải dữ liệu phương tiện cực kỳ nhanh chóng, đồng thời có tác động tối thiểu đến việc sử dụng năng lượng.

Và nếu bạn cần phát một chương trình trực tiếp, Managed Media Source sẽ tự động phát hiện ra nó và chuyển sang LTE hoặc 4G, nếu có, để kéo dài tuổi thọ pin của bạn.

Bạn vẫn đang ngồi ở ghế lái.

Bạn vẫn kiểm soát độ phân giải nào để tìm nạp, cách bạn tải xuống từng phân đoạn và từ đâu.

Nguồn phương tiện được quản lý chỉ cung cấp gợi ý và cung cấp cho bạn phiên bản MSE hiệu quả hơn.

Bằng cách sử dụng ManagedMediaSource, bạn sẽ tiết kiệm băng thông và thời lượng pin, cho phép người dùng xem video của bạn lâu hơn, không chỉ trên iPhone mà còn trên iPad và Mac của họ.

Hãy để tôi chỉ cho bạn cách di chuyển từ MSE sang Nguồn phương tiện được quản lý dễ dàng như thế nào.

Việc chuyển đổi trình phát video của bạn từ MSE sang Nguồn phương tiện được quản lý rất dễ dàng và chỉ cần một vài bước.

Ở đây, tôi sẽ mở một trang HTML rất đơn giản mà tôi đã sử dụng nhiều lần trong quá khứ để kiểm tra sự phát triển MSE.

Nó tạo ra một phần tử video và tải 12 giây dữ liệu, và sau đó phát nó.

Tất cả logic thực sự xảy ra trong một tệp tiện ích mediasource.js được bao gồm.

Hãy xem xét nó, và đặc biệt, phương thức runWithMSE.

RunwithMSE đợi trang tải, tạo một phần tử video và đính kèm nó vào đối tượng MediaSource và thêm nó vào nội dung HTML của chúng tôi.

Đầu tiên, bạn cần đảm bảo rằng Nguồn phương tiện được quản lý có sẵn.

Điều này được thực hiện dễ dàng bằng cách kiểm tra tài liệu mà đối tượng ManagedMediaSource được xác định và nếu không, hãy quay lại sử dụng MSE.

Sau đó thay thế bất kỳ cuộc gọi nào đến MediaSource bằng chính ManagedMediaSource.

Một cách khác, và theo ý kiến của tôi dễ dàng hơn, là ghi đè lên chính MediaSource như sau: Bạn xác định một phương thức getMediaSource() và đặt một miếng chêm MediaSource.

Và bây giờ, bất cứ khi nào bạn đề cập đến MediaSource, bạn sẽ thực sự sử dụng ManagedMediaSource thay thế.

Nguồn phương tiện được quản lý phải luôn là lựa chọn đầu tiên của bạn so với MSE cũ hơn.

Bây giờ, quay lại trang HTML của tôi.

Sau khi tạo SourceBuffer, bây giờ là ManagedSourceBuffer, bạn thêm hai trình xử lý sự kiện.

Startstreaming sẽ thông báo cho người chơi khi nào nó nên bắt đầu tìm nạp nội dung mới và thêm nó vào sourceBuffer được quản lý.

Và một để xử lý sự kiện "phát trực tuyến cuối" để cho biết khi nào người chơi cần ngừng tìm nạp dữ liệu mới.

Tác nhân người dùng hiện đã xác định rằng nó có đủ dữ liệu và bây giờ nó có thể chuyển sang chế độ năng lượng thấp.

Đối với cuộc trình diễn này, trình xử lý sự kiện cuối luồng chỉ là một trình giữ chỗ.

Không giống như MSE, sourceBuffer của bạn có thể trục xuất nội dung bất cứ lúc nào và không chỉ khi thêm dữ liệu.

Với MSE, không bao giờ nên cho rằng phạm vi đệm của bạn chỉ tăng lên khi thêm dữ liệu mới, điều này sẽ khiến việc phát lại bị đình trệ và thông số kỹ thuật MSE khuyến khích bạn thường xuyên kiểm tra.

Vì vậy, bạn cũng cần thêm một trình xử lý sự kiện cho sự kiện thay đổi bộ đệm, nơi bạn sẽ cần kiểm tra dữ liệu nào đã bị loại bỏ.

Nếu bạn làm theo hướng dẫn của các sự kiện Nguồn phương tiện được quản lý và chỉ thêm dữ liệu khi phần tử yêu cầu bạn làm như vậy, bạn sẽ có quyền truy cập vào tốc độ 5G trên iPhone và iPad, cho phép người dùng của bạn truy cập vào độ phân giải cao hơn, thời gian đệm lại ngắn hơn và thời lượng pin tốt nhất có thể.

Bây giờ bạn đã sẵn sàng xử lý phát trực tuyến thích ứng bằng cách sử dụng ManagedMediaSource mới có sẵn trong Safari 17.

Mặc dù nếu tất cả những gì bạn quan tâm là các thiết bị của Apple, nhưng việc sử dụng HLS thay vào đó có thể sẽ có ý nghĩa hơn.

Có một điều nữa mà người dùng của bạn sẽ muốn tiếp tục làm: Khả năng AirPlay đến TV yêu thích của họ.

Một trong những lợi ích tuyệt vời của việc sử dụng HLS gốc là hỗ trợ tự động cho AirPlay.

Với AirPlay, trong khi ngồi trên ghế dài, bạn có thể di chuyển video từ điện thoại sang thiết bị AirPlay lớn của mình.

Airplay yêu cầu một URL mà bạn có thể gửi, URL này không tồn tại trong MSE và điều này đã tạo ra một vấn đề mà chúng tôi cũng muốn giải quyết.

Trong việc chọn định dạng hình ảnh phù hợp trước đó, tôi đã chỉ cho bạn với phần tử hình ảnh cách bạn có thể thêm các nguồn thay thế.

Yếu tố video cung cấp cùng một cơ chế.

Chỉ cần thêm danh sách phát HTTP Live Streaming của bạn vào phần tử nguồn con cho video và khi người dùng AirPlay nội dung của bạn, Safari sẽ chuyển khỏi Nguồn phương tiện được quản lý của bạn và phát luồng HLS trên thiết bị AirPlay.

Safari sẽ tự động thêm biểu tượng AirPlay vào các điều khiển trình phát video và cho phép người dùng AirPlay video.

Nếu tất cả điều này nghe có vẻ quá phức tạp, bạn có thể sử dụng các khuôn khổ, chẳng hạn như HLS.js, sẽ tự động hỗ trợ Nguồn phương tiện được quản lý khi có sẵn và sẽ làm tất cả công việc khó khăn cho bạn.

Việc sử dụng HLS.js để xử lý video của bạn khá dễ dàng và có thể sử dụng được trên tất cả các trình duyệt web, ngay cả những trình duyệt không hỗ trợ HLS nguyên bản.

Đầu tiên, bạn sẽ cần tạo một phần tử video trong tệp HTML của mình như bình thường.

Trước tiên chúng tôi kiểm tra xem HLS có được trình duyệt hỗ trợ nguyên bản hay không.

Nếu có, chúng ta có thể trực tiếp đặt thuộc tính nguồn video thành URL kê khai.

Nếu không, chúng tôi kiểm tra xem HLS.js có thể chạy hay không, và nếu có, hãy tạo một phiên bản mới của thư viện HLS.js và đính kèm nó vào phần tử video với ID "my-video".

Sau đó chúng tôi tải tệp danh sách phát HLS, trong trường hợp này là my-video.m3u8.

Thế là xong.

Với các bước này, bạn sẽ có thể phát video HLS trên hầu hết các trình duyệt.

Khi thiết kế Managed MSE, chúng tôi muốn đảm bảo rằng không có gì bị bỏ sót một cách tình cờ và người dùng tiếp tục nhận được mức độ tính năng giống như trước đây.

Vì vậy, để kích hoạt MSE được quản lý trên Mac, iPad và iPhone, trình phát của bạn phải cung cấp một giải pháp thay thế nguồn AirPlay.

Bạn vẫn có thể có quyền truy cập vào MSE được quản lý mà không cần nó, nhưng bạn phải vô hiệu hóa AirPlay một cách rõ ràng bằng cách gọi disableRemotePlayback trên phần tử phương tiện của bạn từ Remote Playback API.

Và thế là xong.

MSE được quản lý hỗ trợ tất cả các công nghệ tuyệt vời mà chúng tôi đã thêm vào năm ngoái, chẳng hạn như SharePlay, âm thanh không gian hóa hoặc HDR.

MSE được quản lý có sẵn trong Safari 17 trên hệ điều hành macOS và iPad và đằng sau cờ thử nghiệm trên iPhone.

Chúng tôi rất vui mừng vì điều này cuối cùng cũng đến với iPhone.

Tôi hy vọng bạn sẽ thử các định dạng hình ảnh mới và thử nghiệm với Nguồn phương tiện được quản lý.

Vui lòng đảm bảo kiểm tra trang web của bạn với Safari.

Ngoài ra, chúng tôi phát hành Bản xem trước công nghệ Safari hai tuần một lần, nơi bạn có thể kiểm tra các tính năng mới nhất khi chúng có sẵn và trước khi nó đến tay người dùng cuối.

Giống như tất cả các chương trình được phát triển tích cực, các trục trặc và lỗi xảy ra theo thời gian và chúng tôi sẽ vô cùng biết ơn nếu bạn báo cáo chúng cho bugs.webkit.org nếu bạn gặp phải chúng.

Bạn cũng có thể gửi nhận xét hoặc đề xuất.

Chúng tôi luôn lắng nghe.

Bạn có thể tìm hiểu về các tính năng CSS mới trong Safari trong "Có gì mới trong CSS."

Và kiểm tra "Khám phá lại các tính năng của nhà phát triển Safari" để tìm hiểu về cách bật cờ tính năng để dùng thử Nguồn phương tiện được quản lý.

Cảm ơn bạn đã xem.

♪ ♪