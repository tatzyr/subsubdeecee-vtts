10165

♪ Hip-hop nhạc cụ êm dịu ♪

♪

Shilpa Chirackel: Xin chào, tên tôi là Shilpa.

Ryan Golbeck: Và Tôi Là Ryan.

Shilpa: Hôm nay, chúng tôi rất vui mừng được cho bạn thấy mọi thứ chúng tôi đang làm trong Xcode 15.

Ryan: Xcode là trung tâm trải nghiệm phát triển của bạn.

Trong Xcode, chúng tôi tập hợp tất cả các khía cạnh của quy trình phát triển của bạn vào một nơi, giúp việc xây dựng ứng dụng trở nên dễ dàng và thú vị trong khi vẫn giúp bạn tập trung vào một công cụ duy nhất.

Hôm nay chúng ta sẽ đề cập đến nhiều cải tiến trong năm nay với Xcode 15, bắt đầu bằng việc chỉnh sửa, điều hướng và chia sẻ, thông qua việc kiểm tra, gỡ lỗi và phân phối ứng dụng của bạn.

Shilpa: Trước khi cho bạn thấy có gì mới trong Xcode, chúng tôi cần tải xuống.

Và cách tốt nhất để có được các phiên bản Xcode đã phát hành là từ Mac App Store.

Điều này đảm bảo bạn sẽ luôn sử dụng phiên bản mới nhất của các công cụ và có thể tận dụng các tính năng mới nhất.

Năm ngoái, chúng tôi đã giúp việc bắt đầu dễ dàng hơn bằng cách tải xuống tùy chọn trình mô phỏng đồng hồ và TV.

Năm nay, chúng tôi sẽ tiến xa hơn nữa bằng cách làm cho tất cả các trình mô phỏng có thể tải xuống, bao gồm iOS và nền tảng điện toán không gian mới của Apple, cho phép bạn định cấu hình Xcode để phù hợp với nhu cầu của mình.

Bây giờ, khi bạn nhận được Xcode, nó sẽ nhỏ hơn, giúp việc viết mã dễ dàng hơn ngay cả trước khi bạn nhận được tất cả các trình mô phỏng.

Ngoài ra, nếu bạn cần tải xuống Xcode từ trang web của Nhà phát triển, chẳng hạn như bản beta mới nhất, bạn có thể chọn trước trình mô phỏng nào để bao gồm.

Bây giờ chúng ta đã có Xcode, hãy nhảy ngay vào và xem có gì mới trong trình chỉnh sửa nguồn.

Hoàn thành mã giúp bạn truy cập mã bạn muốn nhanh hơn và ít lỗi hơn.

Trong Xcode 15, nó trở nên thông minh hơn rất nhiều.

Hãy cùng xem nào.

Việc hoàn thành tận dụng các nguồn thông tin mới.

Ở đây tôi có những chú chim ở sân sau.

Tôi sẽ bắt đầu bằng cách tạo một tệp mới và đặt tên nó là PlantSummaryRow.

Tôi sẽ thêm các báo cáo nhập khẩu bắt buộc.

Bây giờ khi tôi tạo một cấu trúc mới, việc hoàn thành đề xuất PlantSummaryRow cho tên loại và đó là vì đó là tên của tệp tôi đã tạo.

Hãy để tôi hoàn thành việc triển khai tệp này.

Tôi đã hoàn thành việc triển khai.

Cách trình bày một số hoàn thành cũng đã được cải thiện.

Khi bạn đang gọi một hàm có các đối số mặc định, có thể khó để có được chính xác các tham số bạn muốn.

Bạn có thể thấy tất cả các hoán vị có thể có của các đối số mặc định để giúp bạn chọn đối số bạn muốn.

Tôi sẽ thêm một công cụ sửa đổi khung vào VStack này và nhấn mũi tên phải trên bàn phím.

Tôi sẽ chọn cái tôi cần, trong trường hợp này là chiều rộng.

Và việc hoàn thành giờ đây có nhận thức về ngữ cảnh nhiều hơn, cung cấp cho bạn những đề xuất tốt hơn cho mã bạn đang viết.

Quay trở lại VStack, khi tôi nhập một dấu chấm để thêm công cụ sửa đổi, đệm là gợi ý hàng đầu vì Xcode biết đó là một trong những công cụ sửa đổi được sử dụng thường xuyên nhất cho chế độ xem này.

Nhưng khi tôi thêm một công cụ sửa đổi vào Văn bản, tôi nhận được phông chữ là gợi ý hàng đầu.

Những đề xuất của biên tập viên này cũng xem xét mã xung quanh.

Tôi đã thay đổi phông chữ trên văn bản này.

Khi tôi muốn thêm một công cụ sửa đổi khác, đề xuất hàng đầu là in đậm, vì tôi sẽ không muốn sử dụng cùng một công cụ sửa đổi hai lần khi làm việc trên văn bản.

Đây là một ví dụ khác.

Trong tệp này, tôi đang sử dụng CLLocation để tìm vị trí của những con chim của tôi.

Như tôi đã gõ vĩ độ, bây giờ nó sẽ đề xuất kinh độ, vì hai di sản này thường được ghép nối với nhau.

Tất cả điều này có nghĩa là bạn sẽ có những đề xuất hàng đầu tốt hơn, dẫn bạn nhập mã an toàn hơn nhanh hơn.

Này Ryan, tôi nghe nói rằng chúng tôi cũng đang đưa việc hoàn thành năng lượng vào danh mục tài sản.

Bạn có thể cho tôi biết thêm được không?

Ryan: Chắc chắn rồi, Shilpa.

Nội dung màu sắc và hình ảnh hiện được hỗ trợ bởi các biểu tượng Swift.

Điều này có nghĩa là bây giờ chúng có thể được hoàn thành mã.

Trong danh mục tài sản của tôi, tôi có một số màu sắc và hình ảnh tùy chỉnh.

Xcode 15 tự động tạo các ký hiệu cho mỗi biểu tượng và tôi có thể tham chiếu chúng trong mã của mình thay vì sử dụng tên chuỗi.

Nếu tôi thay đổi tên của hình ảnh này thành MultipleClouds và xây dựng dự án của mình, tôi sẽ gặp sự cố trong một tệp khác mà chúng tôi sử dụng nội dung này.

Và tôi có thể sửa nó bằng cách sử dụng CodeComplete.

Những biểu tượng này mang lại cho tôi sự an toàn cho loại, vì vậy tôi không phải lo lắng về việc thiếu màu sắc hoặc hình ảnh một cách bí ẩn trong thời gian chạy.

Và Xcode 15 cũng mang lại sức mạnh và tính linh hoạt của các danh mục cho trải nghiệm bản địa hóa của bạn.

Danh mục chuỗi tập hợp các bản địa hóa của bạn vào một nơi duy nhất, cung cấp cho bạn một cách tập trung để xem xét và cập nhật chúng.

Để bắt đầu, bạn có thể chuyển đổi một dự án để sử dụng danh mục chuỗi bằng cách chọn Chỉnh sửa > Chuyển đổi sang danh mục chuỗi.

Điều này hiển thị một trang tính hiển thị tất cả các tệp bảng phân cảnh, .strings và .stringsdict có thể được di chuyển.

Và sau khi di chuyển, tất cả các bản dịch của bạn được sắp xếp thành một trình soạn thảo duy nhất.

Trong thanh bên trái, bạn có thể xem lại tiến trình dịch cho từng ngôn ngữ mà bạn hỗ trợ.

Và việc cập nhật thật dễ dàng.

Tất cả các chuỗi được kéo trực tiếp từ nguồn mỗi khi bạn xây dựng.

Khi các chuỗi mới được thêm hoặc xóa, trình chỉnh sửa sẽ chú thích các ngôn ngữ bị ảnh hưởng và gắn huy hiệu cho các chuỗi có liên quan.

Bắt đầu di chuyển ngay hôm nay bằng cách chuyển sang phiên "Khám phá Danh mục Chuỗi".

Shilpa, có gì mới trong Xcode cho tài liệu năm nay?

Shilpa: Rất nhiều.

Mã rõ ràng, súc tích thậm chí còn tốt hơn với tài liệu.

Cho dù bạn đang giải thích điều gì đó cho bản thân trong tương lai hay một trong những người tiêu dùng API của bạn, viết tài liệu tuyệt vời là chìa khóa.

Và tài liệu tuyệt vời xứng đáng được trình bày tuyệt vời.

Xcode 15 có kiểu dáng và khoảng cách mới tuyệt đẹp, giúp tài liệu dễ đọc hơn.

Nhưng cải tiến lớn nhất là một trợ lý mới hiển thị bản xem trước tài liệu của bạn theo thời gian thực.

Trong khi tạo tài liệu, tôi có thể hiển thị trợ lý bằng cách chọn Trình chỉnh sửa> Trợ lý> và sau đó Xem trước tài liệu trong thanh nhảy.

Khi tôi nhập trình chỉnh sửa nguồn, bản xem trước được cập nhật theo thời gian thực.

Điều này sẽ cho tôi thấy chính xác tài liệu của tôi sẽ trông như thế nào trong kho lưu trữ tài liệu được xây dựng đầy đủ.

Tôi sẽ thêm một ví dụ mã để cho thấy nó có thể được sử dụng như thế nào trong thực tế.

Tôi sẽ bắt đầu bằng cách viết "Sử dụng trình khởi tạo này để hiển thị hình ảnh của một con chim nhất định."

Sau đó tôi sẽ dán vào ví dụ mã của mình.

Vì ví dụ này liên quan đến giao diện người dùng, tôi sẽ thêm ảnh chụp màn hình về chế độ xem kết quả sẽ trông như thế nào.

Tôi có thể tham khảo hình ảnh có tên BirdIcon vì tôi đã đưa nó vào danh mục tài liệu của mình.

Bản xem trước tài liệu mới là một trợ giúp rất lớn để đảm bảo tài liệu của bạn được trình bày chính xác theo cách bạn muốn.

Nếu bạn đam mê viết tài liệu, giống như tôi, hãy xem phiên "Tạo tài liệu phong phú với Swift-DocC" để tìm hiểu thêm.

Cũng quan trọng như tài liệu là mã của bạn phải ngắn gọn và dễ hiểu.

Tính năng mới trong Swift năm nay là một tính năng ngôn ngữ mới mạnh mẽ, macro Swift.

Macros tạo ra các API biểu cảm hơn và giúp loại bỏ mã lặp lại.

Và sự tích hợp của Xcode cung cấp cho bạn khả năng hiển thị đầy đủ các macro, cho phép bạn xử lý mã do macro tạo như tất cả các mã khác trong ứng dụng của mình.

Macro là một phần của các gói Swift trong SDK.

Bây giờ chúng tôi đang sử dụng sức mạnh của macro trong một số khuôn khổ riêng của Apple, như thư viện tiêu chuẩn Swift, nền tảng và khung dữ liệu Swift mới.

Tôi cũng có thể tạo gói macro của riêng mình để chia sẻ với những người khác.

Để tạo một gói, tôi sẽ sử dụng các hành động nhanh, một tính năng mới cho phép tôi truy cập tất cả các tùy chọn menu của Xcode chỉ bằng cách nhấn Command-Shift-A.

Gói macro mới sẽ đi kèm với các ví dụ tuyệt vời để giúp tôi bắt đầu.

Tôi đã tạo một gói macro, EnumHelper.

Bên trong EnumHelper, tôi đã triển khai CaseDetection dưới dạng macro.

Vẻ đẹp của macro là chúng tạo ra mã Swift bình thường.

Nó kết thúc và cất gọn gàng mã mà họ cung cấp.

Nhưng khi bạn muốn xem macro đang làm gì hoặc khi bạn muốn gỡ lỗi trong mã do macro tạo, bạn có thể mở rộng macro phù hợp với sự trợ giúp từ các hành động nhanh chóng.

Bạn thậm chí có thể đặt điểm dừng trên mã bên trong macro nếu bạn cần gỡ lỗi nó.

Xem phiên "Mở rộng trên macro Swift" để hiểu sâu hơn về macro Swift.

Được trang bị kiến thức mới này, bạn có thể viết mã để viết một vài macro từ đầu trong phiên "Viết macro Swift".

Hãy cùng khám phá một lĩnh vực khác của Xcode đang tận dụng các macro, bản xem trước.

Với sự trợ giúp của macro, API Xem trước mới rất đơn giản và dễ nhớ.

Tôi sẽ thêm bản xem trước bằng cách gõ #Preview.

Tôi muốn xem trước màn hình tài khoản.

Cột chi tiết ứng dụng có nhiều trạng thái khác nhau, mà tôi có thể hiển thị bằng cách tạo một bản xem trước khác.

Tôi có thể thấy cả hai kịch bản này.

Nhưng bây giờ tôi có hai bản xem trước trong giao diện người dùng.

Để phân biệt chúng, tôi sẽ thêm một tiêu đề, "Chế độ xem trình giữ chỗ".

Nhưng chờ đã, có nhiều cải tiến hơn.

Chúng tôi đang mang bản xem trước đến UIKit và AppKit.

Vì vậy, ngay cả trong ứng dụng Food Truck cũ của tôi, tôi có thể thêm bản xem trước cho UIViewController của mình và lặp lại nhanh như tôi có trong SwiftUI.

Bây giờ hãy xem xét việc phát triển các tiện ích có bản xem trước.

API cũng giới thiệu quy trình làm việc mới để xây dựng các tiện ích dựa trên thời gian.

Khung vẽ có một khu vực mới hiển thị tất cả các mục nhập.

Và khi tôi điều hướng qua chúng, tôi có thể thấy quá trình chuyển đổi của tiện ích hoạt hình như thế nào.

Kiểm tra phiên "Xây dựng giao diện người dùng có lập trình với Bản xem trước Xcode" để tìm hiểu cách áp dụng các tính năng xem trước mới và thú vị trong dự án của bạn.

Tôi sẽ đưa nó lại cho Ryan để nói về những cải tiến trong điều hướng.

Ryan: Cảm ơn, Shilpa.

Khi dự án của bạn phát triển, nó trở nên phức tạp hơn, gây khó khăn cho việc theo dõi các mốc mà bạn muốn tham khảo trong một nhiệm vụ.

Để giúp đỡ, Xcode 15 giới thiệu trình điều hướng dấu trang.

Tôi sẽ mở nó bằng cách nhấp chuột ngay bên cạnh trình điều hướng điều khiển nguồn.

Tôi đã thêm dấu trang vào các vị trí trong mã của mình mà tôi cần thêm tài liệu.

Tôi muốn thêm một cái khác vào tệp này, và nó rất dễ thực hiện.

Tôi sẽ chỉ cần nhấp chuột phải vào vị trí này và chọn Đánh dấu trang.

Dấu trang hiển thị trong trình duyệt với bản xem trước vị trí của nó, nhưng tôi có thể thay đổi màn hình này nếu tôi muốn bằng cách nhấp vào nó và nhập một mô tả khác.

Xcode chú thích một dòng mã với mô tả của tôi, giúp bạn dễ dàng xem và nhớ những gì tôi muốn nó làm.

Danh sách dấu trang của tôi đang bắt đầu phát triển, nhưng tôi có thể quản lý chúng bằng cách sắp xếp và nhóm chúng theo cách tôi muốn.

Tôi muốn nhóm tất cả các dấu trang liên quan đến tài liệu của mình lại với nhau.

Tôi sẽ chọn những cái tôi quan tâm, và với một cú nhấp chuột thứ cấp, mở menu ngữ cảnh để chọn Nhóm mới từ lựa chọn.

Điều này tạo ra một nhóm mới mà tôi sẽ gọi là Địa điểm để Thêm Tài liệu.

Dấu trang là những lời nhắc nhở tuyệt vời trong mã của tôi, nhưng chúng cũng có thể được sử dụng làm danh sách việc cần làm.

Tôi có thể đánh dấu một cái là hoàn thành bằng cách nhấp vào bên trái của nó.

Hoặc tôi có thể xóa nó hoàn toàn bằng cách chọn Xóa Dấu trang trong menu ngữ cảnh.

Điều này loại bỏ chú thích dấu trang trong trình chỉnh sửa.

Tuy nhiên, các dòng mã không phải là thứ duy nhất tôi có thể đánh dấu.

Dấu trang cũng là một cách tuyệt vời để theo dõi các truy vấn Tìm.

Trước Xcode 15, tôi đã thêm việc cần làm vào mã của mình, nhưng chúng rất khó tìm, vì vậy tôi đã đánh dấu một truy vấn để tìm tất cả chúng.

Nhưng tôi có thể đánh dấu bất kỳ truy vấn Tìm kiếm nào.

Tôi muốn giữ một danh sách tiện dụng của tất cả các công cụ sửa đổi chế độ xem trong mã của mình.

Tôi sẽ sử dụng truy vấn Loại Phù hợp mới để tìm tất cả các sự phù hợp với giao thức viewModifier.

Sau đó, tôi có thể đánh dấu truy vấn này bằng cách nhấp chuột phải vào kết quả và chọn Đánh dấu Tìm "viewModifier".

Truy vấn của tôi có sẵn trong trình duyệt dấu trang.

Nếu kết quả truy vấn của tôi thay đổi, tôi có thể làm mới danh sách chỉ bằng một cú nhấp chuột vào nút làm mới bên cạnh dấu trang.

Trình điều hướng dấu trang mới của Xcode 15 theo dõi công việc của bạn để bạn không phải làm vậy, hãy tập trung vào nhiệm vụ trong tầm tay.

Một phần quan trọng khác của sự phát triển là chia sẻ công việc của bạn.

Kết hợp các thay đổi của bạn lại với nhau, đặc biệt là khi tạo ra một cam kết để chia sẻ với đồng nghiệp của bạn, có thể quan trọng như chính những thay đổi đó.

Xcode 15 giới thiệu một trình điều hướng thay đổi mới và trình chỉnh sửa cam kết, cùng nhau là một cách tuyệt vời để xem lại tất cả các thay đổi của bạn.

Tôi đang làm việc để thêm tài liệu vào dự án của mình.

Tôi có thể xem lại những thay đổi này trong trình điều hướng điều khiển nguồn.

Điều đầu tiên bạn sẽ nhận thấy là báo cáo và trình bày được cải thiện về trạng thái của từng tệp.

Các sửa đổi giai đoạn của tôi hiển thị dưới dạng biểu tượng bên cạnh tên tệp.

Tôi muốn bắt đầu xem xét những thay đổi này, vì vậy tôi sẽ nhấp vào mục thay đổi chưa được cam kết để hiển thị trình chỉnh sửa cam kết.

Bây giờ tôi có thể xem lại tất cả các sửa đổi của mình trong một chế độ xem cuộn duy nhất.

Mỗi phần hiển thị ngữ cảnh vừa đủ để hiểu mã xung quanh.

Và nếu tôi muốn xem nhiều hơn, tôi có thể sử dụng tay cầm kéo để hiển thị nhiều tệp hơn.

Mỗi thay đổi cũng được trình bày trong một trình chỉnh sửa nguồn, cho phép tôi truy cập vào các chú thích và điều khiển mà tôi đã quen.

Trong quá trình xem xét của tôi, tôi nhận thấy rằng có một vấn đề trong tệp BirdsNavigationStack.

Có vẻ như tôi đã mắc lỗi đánh máy trong tài liệu của mình, nhưng tôi có thể sửa lỗi này mà không cần rời khỏi chế độ xem.

Xcode xử lý thay đổi của tôi và loại bỏ vấn đề.

Chỉnh sửa của tôi cũng ngay lập tức được chỉ định là không được dàn dựng trong thanh thay đổi.

Chỉ báo trạng thái nhấn mạnh rằng BirdsNavigationStack hiện có cả thay đổi được dàn dựng và không được dàn dựng.

Tôi muốn đưa bản sửa lỗi của mình vào cam kết tiếp theo, vì vậy tôi sẽ dàn dựng nó bằng cách nhấp vào thanh thay đổi bên cạnh bản sửa lỗi và chọn Thay đổi giai đoạn.

Tôi cũng nhận thấy rằng tôi đã vô tình dàn dựng một câu lệnh nhật ký mà tôi đang sử dụng để gỡ lỗi.

Tôi sẽ sử dụng thanh thay đổi một lần nữa để hủy thực hiện thay đổi này.

Các điều khiển dàn dựng này rất dễ sử dụng và chúng được tích hợp trong toàn bộ Xcode.

Tôi đã sẵn sàng để kiểm tra các thay đổi của mình.

Tôi sẽ bắt đầu bằng cách thêm mô tả vào hộp thông báo cam kết, và sau đó nhấp vào nút Cam kết.

Xcode tạo cam kết của tôi và mở nó ngay lập tức trong trình xem cam kết, tóm tắt những gì đã được bao gồm.

Và cuối cùng, tôi có thể chia sẻ cam kết của mình với các đồng đội.

Tôi sẽ nhấp vào chỉ báo trạng thái bên cạnh cam kết của mình, chọn Đẩy và làm theo lời nhắc.

Các tính năng kiểm soát nguồn này là một cải tiến tuyệt vời để giúp bạn tập trung vào Xcode 15.

Nhưng này, Shilpa, tôi nghĩ chúng ta cũng có một số tính năng mới giúp kiểm tra.

Bạn có thể cho chúng tôi biết về những thứ đó không?

Shilpa: Chắc chắn rồi, Ryan, thử nghiệm là một phần quan trọng trong việc vận chuyển một ứng dụng chất lượng cao.

Nó cho phép bạn nắm bắt hồi quy một cách nhanh chóng và duy trì chất lượng ứng dụng của bạn khi nó phát triển phức tạp.

Thử nghiệm nhận được một số cải tiến lớn trong năm nay, bắt đầu với trình duyệt thử nghiệm được cập nhật, được viết lại từ đầu bằng Swift để hiệu quả hơn.

Khi chạy hoặc báo cáo kết quả kiểm tra của bạn trong thời gian thực, Xcode hiện nhanh hơn 45 phần trăm.

Trình điều hướng bài kiểm tra được tổ chức xung quanh kế hoạch kiểm tra của bạn, giúp bạn dễ dàng tìm thấy bài kiểm tra mà bạn quan tâm.

Bạn cũng có thể sử dụng các bộ lọc để tìm các bài kiểm tra dựa trên bất kỳ loại kết quả nào, chẳng hạn như thất bại dự kiến.

Khi bạn chạy thử nghiệm của mình trong Xcode hoặc Xcode Cloud, các báo cáo thử nghiệm sẽ giúp bạn khám phá kết quả, chỉ cho bạn nơi tập trung tiếp theo.

Nó bắt đầu với một bản tóm tắt cấp cao của toàn bộ quá trình chạy thử nghiệm.

Điều này bao gồm Insights, một phân tích dựa trên mô hình về kết quả.

Trong phần Kiểm tra, bạn có thể hiểu bài kiểm tra được thực hiện như thế nào.

Thật dễ dàng để tìm ra có bao nhiêu bài kiểm tra đã vượt qua và thất bại trên các thiết bị và cấu hình khác nhau.

Thông tin chi tiết phân tích kết quả kiểm tra để xác định các lỗi có khả năng liên quan mà trước đây có thể khó nhìn thấy.

Nó cũng cảnh báo chúng tôi về các lần chạy thử nghiệm có thể khiến toàn bộ bộ mất nhiều thời gian hơn để trả về kết quả.

Cái nhìn sâu sắc thứ hai nổi bật với tôi.

Bài kiểm tra thất bại trong khi cố gắng nhấn vào nút Tài khoản.

Tôi muốn điều tra thêm về điều này.

Từ tổng quan, tôi có thể điều hướng đến danh sách kiểm tra, hiển thị tất cả các lần chạy thử nghiệm, với các bộ lọc cho loại kết quả, điểm đến chạy và cấu hình kế hoạch thử nghiệm.

Tôi thấy bài kiểm tra không thể nhấn vào nút Tài khoản trên nhiều ngôn ngữ với cùng một thông báo lỗi.

Để tìm hiểu thêm, tôi có thể xem lớp học cá nhân hoặc điều hướng đến chế độ xem Chi tiết bài kiểm tra chuyên dụng mới cho các phương pháp kiểm tra riêng lẻ.

Chế độ xem Chi tiết Kiểm tra chứa các tab cho các cách khác nhau để khám phá dữ liệu kết quả, bao gồm phân tích tất cả các lần chạy và tab số liệu hiệu suất chuyên dụng.

Gỡ lỗi kiểm tra giao diện người dùng thất bại thú vị hơn bao giờ hết với trình khám phá tự động hóa mới.

Trình thám hiểm có tính tương tác, vì vậy bạn có thể xem phát lại bài kiểm tra của mình hoặc có thể lướt qua dòng thời gian.

Các sự kiện chạm hoặc chuột được phủ lên video.

Tại thời điểm thất bại, như khi bài kiểm tra của tôi không thể nhấn vào nút Tài khoản, tôi có thể kiểm tra hệ thống phân cấp giao diện người dùng của ứng dụng của mình.

Điều này sẽ giúp việc sửa lỗi kiểm tra giao diện người dùng dễ dàng hơn rất nhiều.

Để có một nghiên cứu chuyên sâu, hãy xem phiên "Sửa lỗi nhanh hơn với các báo cáo kiểm tra Xcode" để tìm hiểu thêm.

Bây giờ hãy quay lại với Ryan để chúng ta có thể nói về việc gỡ lỗi.

Ryan: Thử nghiệm và gỡ lỗi đi đôi với nhau.

Cả hai đều là về việc tạo ra một ứng dụng chất lượng cao.

Và gỡ lỗi cũng nhận được một số cải tiến tuyệt vời trong năm nay, bắt đầu với việc tích hợp OSLog vào Xcode.

OSLog là một công cụ tuyệt vời để nắm bắt thông tin thời gian chạy.

Nó cung cấp một cơ chế ghi nhật ký có cấu trúc và có thể tùy chỉnh để giữ cho đầu ra nhật ký của bạn được tổ chức.

Và bảng điều khiển của Xcode 15 giới thiệu hỗ trợ đầy đủ cho OSLog, bao gồm khả năng thực hiện lọc phức tạp trên dữ liệu nhật ký, như danh mục hệ thống con và mức độ nghiêm trọng.

Việc trình bày các bản ghi rõ ràng hơn bao giờ hết.

Trọng tâm là nội dung nhật ký của bạn, với dữ liệu bổ sung được ẩn gọn gàng.

Màu nền của mỗi mục nhật ký cho thấy mức độ nghiêm trọng của nó, giúp dễ dàng quét các luồng đầu ra nhật ký dài cho các tin nhắn quan trọng.

Và trong khi các trường siêu dữ liệu bị ẩn theo mặc định, chúng chỉ cách một vài cú nhấp chuột.

Bạn chỉ có thể chọn những trường bạn muốn xem.

Và khi bạn đang tìm kiếm thứ gì đó cụ thể, trường bộ lọc cho phép bạn thu hẹp tìm kiếm của mình.

Bạn có thể lọc trên siêu dữ liệu hoặc trên toàn bộ văn bản của nhật ký.

Và một tính năng mà tôi thực sự thích, bạn có thể nhảy từ mục nhật ký trực tiếp trở lại dòng mã đã tạo ra nó.

Chúng tôi đi sâu vào các tính năng ghi nhật ký này trong phiên "Gỡ lỗi với ghi nhật ký có cấu trúc".

Cuối cùng, hãy nói về phân phối.

Phân phối là đưa ứng dụng của bạn ra thế giới, cho đồng đội của bạn, cho những người thử nghiệm beta của bạn và cho người dùng của bạn.

Và Xcode 15 có một số cải tiến để làm cho quá trình này dễ dàng và an toàn hơn.

Hãy bắt đầu với Xcode Cloud.

Xcode Cloud là một cách tuyệt vời để phân phối ứng dụng của bạn.

Nó tự động quản lý những thứ như xây dựng phiên bản, ký ứng dụng và hồ sơ phân phối cho bạn.

Năm nay, Xcode Cloud xử lý thêm hai chi tiết cho bạn.

Đầu tiên, chi tiết kiểm tra TestFlight.

Xcode Cloud bổ sung hỗ trợ bao gồm các ghi chú kiểm tra ngay bên cạnh mã nguồn của bạn.

Những thứ này sẽ được tự động đính kèm vào bản dựng TestFlight để phân phối và vì vậy các ghi chú sẽ xuất hiện cho người kiểm tra của bạn ngay bên cạnh ứng dụng của bạn.

Và thứ hai, Xcode Cloud hiện hỗ trợ công chứng cho các ứng dụng Mac của bạn.

Tất cả những gì bạn cần làm là thêm hành động đăng bài công chứng vào quy trình làm việc của mình và Xcode Cloud sẽ làm phần còn lại.

Khi quá trình xây dựng của bạn hoàn tất, ứng dụng của bạn sẽ được tự động công chứng và ghim, và sẵn sàng tải xuống.

Công chứng ứng dụng của bạn rất quan trọng đối với người dùng của bạn.

Nó cho họ biết rằng ứng dụng của bạn đã không bị giả mạo.

Nhưng điều quan trọng không kém là bạn có thể tin tưởng vào tính toàn vẹn của SDK và khuôn khổ mà bạn phụ thuộc vào.

Để cung cấp sự đảm bảo này, Xcode giới thiệu xác minh chữ ký cho XCFrameworks.

Các tác giả có thể ký điện tử nội dung của khuôn khổ của họ và bạn có thể xác minh các chữ ký này ngay trong Xcode.

Trình kiểm tra khung có một lát chữ ký mới.

Nó cho bạn biết chính xác ai đã sản xuất và ký vào khuôn khổ.

Và Xcode sẽ nhớ danh tính này.

Vì vậy, nếu nó thay đổi khi cập nhật khung, bạn sẽ nhận được cảnh báo rõ ràng về vấn đề, nhưng còn nhiều điều hơn thế.

Các tác giả hiện có thể bao gồm một bản kê khai quyền riêng tư trong khuôn khổ của họ.

Bản kê khai này trình bày chi tiết chính xác cách khung sử dụng và bảo vệ dữ liệu nhạy cảm.

Vì bản kê khai quyền riêng tư đi kèm với khuôn khổ, nó cũng là một phần của gói đã ký và bạn có thể tin tưởng rằng nội dung của nó đến trực tiếp từ tác giả.

Tôi có thể sử dụng Xcode để tóm tắt tất cả các bản kê khai thành một báo cáo bảo mật hoàn chỉnh cho ứng dụng của mình.

Đây là một báo cáo mà tôi đã tạo ra.

Báo cáo này được thiết kế để giúp dễ dàng điền vào nhãn dinh dưỡng riêng tư trong App Store Connect, đảm bảo tôi cung cấp thông tin chính xác cho người dùng của mình.

Và Apple đang làm việc với SDK tác động đến quyền riêng tư để đảm bảo rằng tất cả các phụ thuộc quan trọng của bạn cung cấp thông tin có giá trị này.

Chúng tôi đề cập đến các chủ đề này sâu hơn rất nhiều trong các phiên "Xác minh sự phụ thuộc của ứng dụng bằng chữ ký số" và "Bắt đầu với các bản kê khai về quyền riêng tư".

Bản kê khai quyền riêng tư là một công cụ tuyệt vời khi phân phối ứng dụng của bạn cho người dùng.

Khi bạn đang sửa lỗi hoặc một nhánh tính năng mới, bạn muốn phân phối ứng dụng của mình cho đồng đội và chỉ đồng đội của bạn.

Vì vậy Xcode 15 hiện hỗ trợ tùy chọn phân phối thử nghiệm nội bộ TestFlight.

Các bản dựng nội bộ của TestFlight chỉ có sẵn cho nhóm của bạn, vì vậy bạn không bao giờ có thể vô tình phát hành chúng cho khách hàng.

Chúng rất dễ tạo.

Chỉ cần chọn tùy chọn "Kiểm tra nội bộ Chuyến bay thử nghiệm" khi phân phối ứng dụng của bạn thông qua App Store Connect.

Nhưng nó thực sự thậm chí còn dễ dàng hơn thế này.

Xcode hiện bao gồm một tập hợp các phương pháp phân phối phổ biến nhất và các cài đặt được đề xuất.

Bước một, chọn bất kỳ tùy chọn mới nào trong số này, bao gồm chỉ nội bộ TestFlight.

Bước hai, nhấp vào Phân phối và bạn đã hoàn tất.

Không có bước ba.

Và nếu bạn đang phân phối thông qua App Store Connect, bây giờ bạn cũng sẽ nhận được thông báo trên máy tính để bàn về trạng thái xây dựng của mình.

Vì vậy, khi ứng dụng của bạn đã sẵn sàng để kiểm tra, bạn sẽ được thông báo ngay lập tức.

Những cập nhật này giúp bạn dễ dàng lặp lại và phân phối ứng dụng của mình một cách nhanh chóng, điều này giúp việc làm việc chặt chẽ với đồng đội, người thử nghiệm và người dùng của bạn diễn ra suôn sẻ và nhanh chóng.

Bắt đầu khám phá các tính năng này bằng cách xem phiên "Đơn giản hóa phân phối với Xcode và Xcode Cloud".

Chà, đó là một cái nhìn tổng quan nhanh về những gì mới trong Xcode 15.

Nó dễ lấy hơn, sử dụng nhanh hơn và có rất nhiều cải tiến để làm cho sự phát triển của bạn tập trung, trơn tru và thú vị hơn.

Shilpa: Tải xuống Xcode 15 để bạn có thể bắt đầu thử những tính năng mới thú vị này.

Cảm ơn vì đã xem.

♪