10007

♪ ♪

Scott: Xin chào, tôi là Scott Mionis từ Nhóm Ảo hóa, và hôm nay chúng ta sẽ đề cập đến cách các tính năng trong macOS Sonoma cho phép bạn tạo ra trải nghiệm liền mạch với Ảo hóa.

Khung ảo hóa cho phép bạn cấu hình, quản lý và chạy các máy ảo.

Trong macOS Sonoma, máy ảo Mac và máy ảo Linux mạnh hơn bao giờ hết.

Chúng dễ sử dụng hơn và với các tùy chọn cấu hình mới, chúng có khả năng tùy biến cao.

Có một loạt các tính năng làm cho điều này trở nên khả thi.

Trong phiên này, hãy khám phá một vài mục chính và cách tận dụng chúng trong các ứng dụng của bạn.

Đầu tiên, quy trình làm việc mới trong máy ảo và cải tiến trải nghiệm người dùng.

Tiếp theo, các tùy chọn lưu trữ và cấu hình bàn phím mới.

Và cuối cùng, Rosetta 2 đang làm cho các ứng dụng x86_64 chạy nhanh hơn trong các máy ảo Linux như thế nào.

Hãy đi sâu vào một số cách mới để làm việc với các máy ảo.

Chúng ta sẽ xem xét hai tính năng mới mạnh mẽ.

Đầu tiên là màn hình có thể thay đổi kích thước.

Một tùy chọn hiển thị mới cho các máy ảo thay đổi kích thước trong thời gian chạy để lấp đầy cửa sổ.

Và tiếp theo, lưu và khôi phục một máy ảo.

Một cơ chế để tuần tự hóa một máy ảo đang chạy vào đĩa để nó có thể được nối lại sau.

Hãy bắt đầu với màn hình có thể thay đổi kích thước.

Kích thước màn hình là một phần quan trọng khi làm việc trên máy Mac ảo.

Với màn hình có thể thay đổi kích thước, máy ảo tự động điều chỉnh độ phân giải màn hình để lấp đầy cửa sổ, tận dụng không gian của bạn hiệu quả nhất.

Hãy đưa cái này vào mã.

Để sử dụng màn hình có thể thay đổi kích thước trong ứng dụng của riêng bạn, Trước tiên, khởi tạo VZVirtualMachineView.

Để làm cho màn hình có thể thay đổi kích thước, hãy đặt thuộc tính "automaticallyReconfiguresDisplay" mới thành true.

Và thế là xong!

Thay đổi kích thước VZVirtualMachineView giờ đây sẽ tự động yêu cầu máy ảo điều chỉnh kích thước hiển thị của nó.

Và nếu bạn muốn giữ màn hình cố định, thuộc tính này có thể vẫn là giá trị mặc định của nó.

Tiếp theo, hãy thảo luận về việc lưu và khôi phục một máy ảo.

Dừng máy ảo có nghĩa là tắt máy ảo.

Khởi động một máy ảo có nghĩa là khởi động lạnh.

Nhưng khi làm việc trên máy Mac, hầu hết các ứng dụng sẽ lưu tiến trình của bạn khi bạn làm việc.

Điều tương tự cũng nên xảy ra đối với các máy ảo.

Giả sử tôi đang chạy một máy ảo, và tôi muốn đóng nó mà không làm mất tiến trình của mình.

Tôi có thể lưu máy ảo của mình vào một tệp và tiếp tục chạy nó sau.

Hoặc, giả sử tôi muốn sao lưu công việc của mình.

Tôi có thể lưu máy ảo của mình bất cứ lúc nào, đảm bảo sao chép các tài nguyên bên ngoài như đĩa và bộ nhớ phụ trợ.

Và nếu tôi muốn quay ngược thời gian, tôi có thể tua lại máy ảo, ngay về trạng thái trước đó của tôi.

Rất nhiều điều có thể xảy ra với tính năng này.

Vậy bây giờ hãy đưa nó vào hành động.

Tôi đang chạy macOS Sonoma, và trên máy tính để bàn của tôi là một máy Mac ảo, cũng đang chạy macOS Sonoma, trong ứng dụng mẫu Ảo hóa.

Và tôi đang thực hiện một số nghiên cứu cho chuyến đi thú vị tiếp theo của mình đến Apple Store.

Tất nhiên, tôi đã mở Bản đồ và tôi đang duyệt trang web của Apple để biết thêm thông tin về AirPods.

Bây giờ, tôi muốn nghỉ ngơi mà không cần tắt máy ảo.

Vì vậy, tôi lưu máy ảo của mình khi tôi thoát khỏi ứng dụng.

Sau đó, tôi khởi chạy lại ứng dụng và máy ảo của tôi tiếp tục chạy ngay tại nơi tôi đã dừng lại, với tất cả các tab của tôi đang mở.

Hãy cùng khám phá cách xây dựng cái này vào ứng dụng của riêng bạn.

Trước khi lưu máy ảo, hãy tạm dừng máy ảo.

Điều này đặt máy ảo vào trạng thái ổn định, với việc thực thi bị đình chỉ.

Sau đó, gọi saveMachineState API mới, ghi tệp vào URL bạn chỉ định, chứa tất cả trạng thái thời gian chạy của máy ảo.

Mọi thứ bạn cần để tiếp tục chạy nó sau này.

Các tài nguyên bên ngoài, như hình ảnh đĩa, nên được sao chép riêng.

Bây giờ chúng ta đã lưu máy ảo, hãy khôi phục nó.

Để khôi phục trạng thái của máy ảo, hãy bắt đầu bằng cách tạo một VZVirtualMachine mới từ cùng một cấu hình.

Thay vì khởi động trực tiếp máy ảo, khởi động máy ảo, hãy gọi restoreMachineState API mới, chuyển URL của tệp đã được lưu trước đó.

Và bây giờ, máy ảo đang ở trạng thái giống hệt như trước đây.

Bạn có thể tiếp tục chạy nó ngay tại nơi nó đã dừng lại.

Khi khôi phục một máy ảo từ lần lưu trước đó, có một vài điều cần ghi nhớ.

Đầu tiên, một tệp lưu chứa dữ liệu của máy ảo.

Nó cần được bảo vệ.

Những tệp này được mã hóa phần cứng để cung cấp sự đảm bảo mạnh mẽ nhất có thể.

Không có tài khoản Mac hoặc người dùng nào khác có thể đọc tệp lưu của người khác hoặc khôi phục máy ảo.

Ngoài ra, các tệp được lưu hôm nay đã được lập phiên bản, vì vậy các khả năng mới có thể được thêm vào trong tương lai.

Nếu định dạng tệp thay đổi và tệp lưu không thể được khôi phục, khung sẽ trả về các mã lỗi cụ thể để ứng dụng của bạn có thể xử lý nó.

Khi điều này xảy ra, hãy loại bỏ tệp, khởi động lại máy ảo và bạn sẽ trở lại đúng hướng.

Tiếp theo, hãy khám phá một số cách mới để xây dựng một máy ảo.

Đầu tiên là thiết bị chặn mạng.

Điều này cho phép một thiết bị lưu trữ được gắn vào một máy ảo từ qua mạng.

Tiếp theo là hỗ trợ cho các thiết bị điều khiển NVMe, một giải pháp thay thế cho thiết bị khối virtio.

Và cuối cùng, bàn phím Mac, giúp làm việc trong máy Mac ảo trực quan hơn bằng cách ánh xạ các phím dành riêng cho Apple, như phím Globe, trực tiếp đến máy ảo.

Hãy bắt đầu, với thiết bị chặn mạng.

Trong khuôn khổ Ảo hóa, lưu trữ thường được phục vụ cục bộ, đọc và ghi hình ảnh đĩa trên cùng một máy Mac.

Nhưng trong macOS Sonoma, khung Ảo hóa có thể phục vụ lưu trữ từ xa từ máy chủ.

Giao thức cho phép điều này là thiết bị khối mạng, hoặc NBD.

Hãy đi sâu vào cách nó hoạt động.

Khung ảo hóa triển khai phía máy khách của giao thức NBD.

Khi một máy ảo truy cập vào đĩa, yêu cầu được chuyển tiếp đến Máy chủ NBD tuân thủ cùng một thông số kỹ thuật.

Sau khi làm bất cứ điều gì I/O nó cần, máy chủ NBD phản hồi bằng dữ liệu.

Điều này cực kỳ linh hoạt vì hai lý do.

Đầu tiên, bộ nhớ bây giờ có thể nằm ở bất cứ đâu; trên cùng một máy Mac hoặc trên một máy chủ từ xa qua mạng.

Và thứ hai, vì bộ nhớ được quản lý bởi máy chủ của riêng bạn, bạn có thể triển khai bất kỳ I/O tùy chỉnh nào bạn cần, cho dù đó là định dạng hình ảnh tùy chỉnh hay thậm chí là ổ đĩa vật lý.

Tất cả những điều này hoàn toàn minh bạch với máy ảo.

Hãy xem cách thiết lập cái này.

Trong API khung Ảo hóa, có hai phần để khởi tạo một thiết bị lưu trữ.

Đầu tiên bạn chọn một loại thiết bị.

Điều này xác định giao diện được trình bày cho máy ảo.

Và sau đó bạn chọn một tệp đính kèm, Điều này chọn cách dữ liệu thực sự được thể hiện trên máy Mac của bạn.

Trong các máy ảo, bạn có thể trộn và kết hợp.

Khung ảo hóa hỗ trợ các thiết bị ảo như thiết bị khối virtio và thiết bị lưu trữ khối lượng lớn USB.

Và với bất kỳ thiết bị nào trong số này, bạn có thể sử dụng các tệp đính kèm như tệp đính kèm hình ảnh đĩa, đọc và ghi dữ liệu trên hình ảnh đĩa hoặc tệp đính kèm Thiết bị Khối mạng mới, đọc và ghi dữ liệu trên máy chủ NBD.

Hãy thiết lập tệp đính kèm NBD này trong mã.

Để sử dụng điều này trong ứng dụng của bạn, trước tiên hãy chỉ định một URL trỏ đến máy chủ NBD.

Đây là một URL đặc biệt xác định một đĩa cụ thể trên một máy chủ cụ thể.

Sau đó khởi tạo tệp đính kèm lưu trữ NBD mới với URL này.

Cuối cùng, khởi tạo một thiết bị lưu trữ với tệp đính kèm này.

Ví dụ này sử dụng thiết bị chặn virtio.

Đối với hầu hết các trường hợp sử dụng, đây có thể là lựa chọn hiệu quả nhất.

Vì bộ nhớ đang được phục vụ qua mạng, kết nối có thể bị mất bất cứ lúc nào.

Bạn có thể muốn thực hiện hành động khi điều này xảy ra, tạm dừng máy ảo hoặc thiết lập lại kết nối.

Nếu đúng như vậy, bạn có thể đính kèm một lớp đại diện tùy chỉnh, lớp này sẽ được thông báo khi trạng thái kết nối thay đổi, vì vậy bạn có thể chạy bất kỳ mã nào bạn cần.

Thêm vào các tùy chọn lưu trữ của khung Ảo hóa là Non-Volatile Memory express, hoặc NVMe.

NVMe là một công nghệ tiêu chuẩn được kích hoạt trong nhiều nhân Linux và các ứng dụng của nó cụ thể hơn, vì vậy hãy bắt đầu với lý do tại sao bạn có thể muốn sử dụng nó.

Đối với phần lớn các trường hợp sử dụng, giao diện ảo hóa được cung cấp bởi lưu trữ khối virtio là dễ sử dụng và nhanh nhất.

Đây chắc chắn là trường hợp của máy Mac ảo.

Nhưng một số máy ảo Linux không có trình điều khiển virtio.

Đây có thể là những hạt nhân không được xây dựng để chạy trong môi trường ảo.

Những gì các hạt nhân này thường có là trình điều khiển cho các thiết bị điều khiển NVMe.

Trong macOS Sonoma, các thiết bị điều khiển NVMe được mô phỏng bởi khung Ảo hóa, cho phép chạy nhiều hệ điều hành hơn trong các máy ảo.

Để cấu hình NVMe, hãy sử dụng loại thiết bị mới khi xây dựng máy ảo của bạn.

NVMe chỉ dành cho các máy ảo Linux, và, tất nhiên, cũng hỗ trợ NBD.

Và bây giờ, với bàn phím Mac, các lần nhấn phím dành riêng cho Apple được chụp bởi một máy Mac ảo.

Có nghĩa là bạn có thể sử dụng phím Globe cho các tính năng như chuyển đổi ngôn ngữ hoặc thậm chí làm nổi bật trong máy Mac ảo.

Bây giờ hãy nói về Rosetta 2.

Rosetta 2, trong máy ảo Linux, là công nghệ tương tự được sử dụng trên macOS, Và trong macOS Sonoma, cải thiện hiệu suất có nghĩa là Rosetta 2 chạy nhanh hơn trong môi trường Linux ảo.

Hãy đi sâu vào cách điều này có thể xảy ra.

Rosetta 2 dịch các trang thực thi theo yêu cầu, cho phép nó khởi chạy tệp thực thi nhanh hơn nhiều so với khi phải đợi để dịch toàn bộ ứng dụng x86_64.

Nhưng điều này cũng có nghĩa là trong khi ứng dụng đang chạy, Rosetta 2 phải ngừng thực thi định kỳ để dịch các vùng mã mới.

Chi phí này có thể đáng chú ý nhất khi ứng dụng mới bắt đầu chạy, vì mã cần được dịch lần đầu tiên.

Nhưng nếu tôi khởi chạy một ứng dụng khác được liên kết với cùng một thư viện hoặc chạy cùng một tệp thực thi, Rosetta 2 phải làm lại tất cả công việc đó, mặc dù mã đó đã được dịch.

Vấn đề này có thể được giải quyết bằng bộ nhớ đệm.

Bất cứ khi nào một thư viện hoặc tệp nhị phân thực thi được dịch, Rosetta 2 sẽ lưu kết quả trong bộ nhớ cache trên đĩa và chia sẻ kết quả đó với bất kỳ ứng dụng nào khác cần nó, tránh chi phí dịch lại không cần thiết.

Trong macOS Sonoma, khung Ảo hóa mang lại sự tối ưu hóa này cho các máy ảo Linux với trình nền thời gian chạy mới.

Có hai bước bạn sẽ cần thực hiện, để thiết lập điều này.

Đầu tiên, có một API mới để định cấu hình kênh giao tiếp giữa thời gian chạy Rosetta 2 và trình nền bộ nhớ đệm mới.

Và sau đó, bạn sẽ cần khởi chạy trình nền trong máy ảo.

Thời gian chạy Rosetta 2 và trình nền mới giờ đây sẽ chạy cùng nhau trong máy ảo.

Hai chương trình giao tiếp với khung Ảo hóa để thiết lập kết nối.

Các yêu cầu liên kết động, trong số những yêu cầu khác, sẽ được chuyển tiếp đến trình nền, nơi quản lý bộ nhớ cache và thời gian chạy Rosetta 2 sẽ tìm nạp các tệp nhị phân được dịch trước trực tiếp từ trình nền, loại bỏ chi phí dịch lại.

Bạn sẽ thấy tác động lớn nhất đến các tác vụ nặng nề như biên dịch hoặc cài đặt gói.

Khung ảo hóa cho phép bạn mang lại rất nhiều tùy chọn tuyệt vời cho các ứng dụng của mình.

Hãy nói về những cách để bắt đầu.

Cân nhắc sử dụng màn hình có thể thay đổi kích thước cho cả máy Mac ảo và máy ảo Linux.

Nó cải thiện đáng kể trải nghiệm người dùng chỉ với một dòng mã duy nhất.

Bàn phím Mac được thiết kế đặc biệt để hoạt động liền mạch với các máy Mac ảo mới nhất, Cấu hình máy Mac ảo với thiết bị này là một cách dễ dàng để tăng trải nghiệm người dùng.

Một vài trong số các tính năng này là các khối xây dựng mà bạn có thể sử dụng để xây dựng những trải nghiệm mạnh mẽ.

Khả năng lưu một máy ảo là một ví dụ.

Bắt đầu điều tra xem việc tua lại hoặc lưu tiến độ phù hợp với ứng dụng của bạn như thế nào.

Và sự linh hoạt được cung cấp bởi NBD thật đáng kinh ngạc.

NBD có thể mở khóa rất nhiều khả năng cho các ứng dụng cần IO tùy chỉnh.

Đây mới chỉ là sự khởi đầu của những gì máy ảo có thể làm trong macOS Sonoma.

Cảm ơn bạn.

Nhóm Ảo hóa nóng lòng muốn xem những gì bạn xây dựng.

♪ ♪