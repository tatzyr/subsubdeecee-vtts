10250

♪ ♪

Dariusz: Xin chào, tôi là Dariusz, và tôi là một kỹ sư trong nhóm Xcode Playgrounds.

Tôi muốn chỉ cho bạn cách những cải tiến trong Xcode Playgrounds giúp việc tạo mẫu các tính năng mới trong dự án của bạn dễ dàng hơn.

Có nhiều tình huống mà Xcode Playgrounds có thể cải thiện quy trình làm việc của bạn.

Trước hết, chúng cho phép bạn bỏ qua việc xây dựng lại và khởi chạy lại dự án bất cứ khi nào bạn muốn tạo mẫu một tính năng mới hoặc đơn giản là thử một thay đổi nhỏ trong mã của bạn.

Chúng cũng giúp việc thực thi mã dễ dàng hơn nhiều mà nếu không sẽ khá khó tiếp cận, như logic chịu trách nhiệm tạo bản tóm tắt đơn hàng trong ứng dụng mua sắm.

Tất nhiên, mã như vậy có thể và nên được xác minh bằng các bài kiểm tra, nhưng Playgrounds cũng có thể là một điểm khởi đầu tuyệt vời để phát triển chúng.

Đây cũng là một môi trường hoàn hảo để thử mã trước khi giới thiệu các phụ thuộc mới cho dự án của bạn.

Tôi muốn cho bạn thấy Xcode Playgrounds đang giúp tôi như thế nào trong dự án của mình.

Tôi đang làm việc trên một ứng dụng nhỏ nhằm giúp tôi chụp ảnh động vật hoang dã.

Hiện tại, ứng dụng của tôi giúp tôi theo dõi các loài mà tôi đã tìm thấy và chụp ảnh.

Bây giờ, tôi muốn ứng dụng này giúp tôi với một khía cạnh khá quan trọng của nhiếp ảnh động vật hoang dã, đó là thực sự là tìm kiếm các loài động vật ngay từ đầu.

Tôi muốn giới thiệu một tab mới để xem danh sách kiểm tra.

Tôi đã bắt đầu triển khai chế độ xem và tôi khá hài lòng với giao diện người dùng này.

Mỗi con chim có một hộp kiểm, điều này sẽ cho phép tôi theo dõi tiến trình của mình.

Tuy nhiên, với hơn 2.000 con chim trong danh sách, có lẽ tôi sẽ không cảm thấy mình đang tiến bộ nhiều.

Sẽ thật tuyệt nếu thu hẹp danh sách này xuống một chút.

Để làm điều đó, tôi sẽ phải điều chỉnh thuộc tính tính toán birdsToShow trong Chế độ xem danh sách kiểm tra tùy chỉnh của mình.

Hiện tại, nó chỉ đơn giản là tạo ra loại BirdProvider của tôi được cấu hình cho Bắc Mỹ và trả lại tất cả các loài chim được tìm thấy trên toàn lục địa.

Để tránh việc xây dựng lại và khởi chạy lại dự án thường xuyên và sau đó điều hướng đến Chế độ xem danh sách kiểm tra để xem các thay đổi của tôi, tôi sẽ cố gắng điều chỉnh mã này trong Sân chơi Xcode.

Tôi sẽ bắt đầu bằng cách thêm một sân chơi mới vào dự án của mình.

Đây là một ứng dụng iOS, vì vậy tôi sẽ gắn bó với các mẫu iOS.

Tôi sẽ gõ "sân chơi" vào thanh lọc và chọn một sân chơi trống.

Trong trường hợp này, tôi có thể sẽ thoát khỏi sân chơi khi tôi thử một vài thứ, vì vậy tôi có thể giữ tên "MyPlayground" mặc định.

Tôi sẽ loại bỏ nội dung mặc định của sân chơi.

Để lặp lại nhanh hơn nữa, tôi sẽ chuyển sang "Tự động chạy" trong menu hiển thị khi tôi nhấp lâu vào nút chạy trên thanh dưới cùng.

Điều này khiến sân chơi tự động thực thi toàn bộ mã bất cứ khi nào tôi ngừng thực hiện thay đổi.

Lưu ý rằng các sân chơi được thêm vào các dự án có hai cài đặt được bật theo mặc định: Xây dựng sơ đồ hoạt động và Nhập các loại ứng dụng.

Họ sẽ đảm bảo rằng sơ đồ hoạt động được xây dựng trước mỗi lần thực thi sân chơi và các mô-đun mục tiêu của ứng dụng được nhập tự động.

Điều này giúp việc làm việc với các loại được xác định trong dự án của bạn dễ dàng hơn nhiều.

Tôi có thể đóng thanh tra để có thêm chỗ cho sân chơi.

Hãy bắt đầu bằng cách khai báo một phiên bản BirdProvider như chúng ta đã thấy trong thuộc tính birdsToShow của ChecklistView của tôi.

Thanh bên kết quả ở bên phải của trình chỉnh sửa cho tôi thấy rằng tuyên bố này đã tạo ra một kết quả sân chơi.

Tôi có thể sử dụng nút chuyển đổi kết quả nội tuyến để xem thêm chi tiết.

Kết quả nội tuyến hiển thị chi tiết của phiên bản BirdProvider này cùng với hai thuộc tính của nó: mảng chim và vùng được cung cấp.

Bây giờ trong Xcode 15, mỗi hàng cũng có một nhãn thông tin loại, hiển thị một bản tóm tắt ngắn về loại và tôi có thể sử dụng chú giải công cụ cho mỗi hàng để xem thêm chi tiết.

Ví dụ, chú giải công cụ cho tôi biết rằng loại BirdProvider đến từ mô-đun ứng dụng của tôi và enum khu vực được xác định trong cấu trúc đó.

Hãy mở rộng hàng mảng để xem thêm chi tiết về các loài chim.

Lưu ý rằng khi tôi bắt đầu tương tác với chế độ xem kết quả nội tuyến, Xcode 15 sẽ làm nổi bật mã nguồn tạo ra kết quả.

Trong trường hợp này, chế độ xem hiển thị giá trị được gán cho hằng số birdProvider.

Điều này giúp việc hiểu các giá trị được hiển thị dễ dàng hơn nhiều.

Chúng ta hãy xem xét kỹ hơn các phần tử mảng.

Chúng tôi đã xem các bản tóm tắt đẹp cho các thuộc tính mảng khu vực và chim, nhưng theo mặc định, các hàng đại diện cho mỗi con chim chỉ cho chúng tôi biết về các chỉ mục mảng.

Đó là bởi vì loại Chim tùy chỉnh không có mô tả được xác định.

Chúng tôi có thể cải thiện điều này bằng cách làm cho loại Bird phù hợp với giao thức CustomStringConvertible.

Tôi có thể thêm một tiện ích mở rộng ở đây trong một sân chơi hoặc trong thư mục Nguồn của nó.

Cả hai tùy chọn này sẽ chỉ ảnh hưởng đến loại Chim trong phạm vi của sân chơi và chúng tôi sẽ không nhận được những mô tả mới đẹp ở những nơi khác dựa vào chúng, như trình gỡ lỗi.

Đó là lý do tại sao tôi sẽ thêm phần mở rộng vào tệp xác định loại Bird.

Với định nghĩa mô tả mới, mỗi hàng sẽ cho tôi thấy tên chung và khoa học của con chim.

Hãy quay lại sân chơi và xem mô tả mới đang hoạt động.

Trong chế độ tự động thực hiện sân chơi, sân chơi sẽ tự động thực hiện lại khi bạn mở lại.

Hãy mở rộng hàng mảng chim một lần nữa để kiểm tra mô tả.

Điều này tốt hơn nhiều.

Bây giờ rõ ràng các hàng đại diện cho điều gì mà không cần mở rộng chúng, nhưng chúng ta hãy xem xét các thuộc tính khác của loại Chim.

Tôi đã tìm thấy và chụp ảnh một số loài chim này, và bạn có thể thấy rằng một số trong số chúng đã có tài sản chụp ảnh, như loài chim chích Đại Tây Dương này.

Khi tôi nhấp vào hàng của nó, ảnh sẽ được hiển thị trong giao diện người dùng dựa trên chế độ xem phân chia mới, cho phép tôi xem cấu trúc của đối tượng cùng với bản xem trước.

Theo mặc định, không có bản xem trước nào như vậy cho loại Bird tùy chỉnh của tôi khi tôi nhấp vào hàng của nó.

Thật tuyệt khi được xem bức ảnh ở đây, vì tôi không quen thuộc với tất cả các tên loài.

Để đạt được điều đó, tôi có thể sử dụng giao thức CustomPlaygroundDisplayConvertible.

Như tên của giao thức gợi ý, sự phù hợp này chỉ ảnh hưởng đến biểu diễn sân chơi, vì vậy lần này, tôi sẽ thêm tiện ích mở rộng vào thư mục Nguồn của sân chơi.

Tôi sẽ nhập mô-đun ứng dụng để truy cập loại Bird và thêm một tiện ích mở rộng đơn giản trả về thuộc tính ảnh dưới dạng Mô tả sân chơi.

Lưu ý rằng tôi đang truyền ảnh một cách rõ ràng cho Bất kỳ ai trong câu trả về.

Nếu không có nó, trình biên dịch sẽ cảnh báo tôi rằng chúng ta đang mất một phần thông tin quan trọng về giá trị là một tùy chọn.

Điều này là tốt trong trường hợp này, vì Xcode Playgrounds xử lý các tùy chọn bằng cách chỉ tạo mô tả tùy chỉnh cho các đối tượng không trả về số không trong thuộc tính playgroundDescription.

Hãy quay lại sân chơi một lần nữa để kiểm tra các mô tả mới.

Trong Xcode 15, playgroundDescription được trả về bởi các loại phù hợp với CustomPlaygroundDisplayConvertible sẽ được hiển thị trong chế độ xem phân chia dọc theo cấu trúc của đối tượng.

Bây giờ, những con chim đã có một bức ảnh sẽ nhanh chóng hiển thị nó mà không cần mở rộng hàng.

Điều này sẽ giúp việc làm việc với các bộ sưu tập lớn thuộc loại tùy chỉnh này dễ dàng hơn nhiều.

Nhưng hôm nay, tôi muốn tập trung vào những con chim chưa có ảnh.

Hãy đóng kết quả nội tuyến này và lọc ra tất cả những con chim đã có ảnh.

Bạn có thể thấy rằng hai chú thích thanh bên đó trông hơi khác một chút.

Đó là bởi vì có nhiều biểu thức trên dòng mới.

Tôi có thể nhấp vào điều khiển mới để xem các bản tóm tắt quen thuộc cho mỗi biểu thức.

Di chuột qua các nút chuyển đổi kết quả nội tuyến làm nổi bật phạm vi mã nguồn của chúng.

Điều này cho thấy rõ ràng rằng mảng là kết quả được gán cho hằng số birdsToFind và true là giá trị mới nhất được tạo ra bởi việc đóng được chuyển đến hàm bộ lọc.

Thanh bên kết quả cho tôi biết rằng số lượng tất cả các loài chim mà tôi chưa chụp ảnh vẫn còn hơn 1.800, điều này khá đáng sợ.

Mặc dù đây cuối cùng có thể là mục tiêu, nhưng tôi muốn làm cho nó thấp hơn bằng cách tập trung vào một nhóm chim nhỏ hơn, ví dụ như cú.

Tháng Sáu là một tháng tuyệt vời để chèo thuyền, nhưng đó là một chủ đề cho một hoặc hai phiên nữa.

Hãy lọc ra những con chim từ các gia đình khác.

Mảng hiện chỉ có năm phần tử, điều này đáng khích lệ hơn nhiều.

Tôi muốn thử Chế độ xem danh sách kiểm tra tùy chỉnh của mình với nhóm chim nhỏ này.

Để làm điều đó, tôi sẽ tạo một ví dụ ChecklistView và thêm từng con chim một.

Hãy mở kết quả nội tuyến cho ChecklistView.

Là một lớp con UIView, bây giờ nó cũng hiển thị một vài thuộc tính cùng với ảnh chụp nhanh.

Tôi có thể chuyển sang chế độ lịch sử Giá trị, hiện cũng sử dụng giao diện người dùng dựa trên chế độ xem phân chia mới.

Điều này cho phép tôi xem ChecklistView trông như thế nào trong mỗi lần lặp vòng lặp.

Nó thực sự đã giúp tôi tìm ra vấn đề với tầm nhìn của mình, điều này nói không chính xác "chim" trong tiêu đề chỉ cho một con chim.

Tôi có thể khắc phục điều này bằng cách điều chỉnh các chuỗi được xác định trong Danh mục chuỗi mới.

Hàng đầu tiên dường như là hàng được sử dụng trong tiêu đề của Chế độ xem danh sách kiểm tra của tôi.

Tôi sẽ hiển thị menu ngữ cảnh và chọn Vary By Plural.

Khi tôi làm điều đó, các hàng bị ảnh hưởng sẽ thay đổi trạng thái của chúng thành "Cần xem xét".

Tôi sẽ điều chỉnh dạng số ít của chuỗi này.

Để tìm hiểu thêm về Danh mục Chuỗi mới, hãy đảm bảo kiểm tra phiên "Khám phá Danh mục Chuỗi".

Hãy quay lại sân chơi và xem danh sách kiểm tra bây giờ trông như thế nào với sự thay đổi này.

Các tiêu đề trông chính xác trong mỗi lần lặp vòng lặp.

Tôi có thể đóng kết quả nội tuyến này ngay bây giờ.

Tôi nghĩ ChecklistView của tôi đã sẵn sàng để sử dụng.

Tôi sẽ nhanh chóng mang mã mà chúng tôi đã sử dụng để thu hẹp danh sách các loài chim vào dự án của tôi.

Tôi sẽ sao chép ba dòng này vào thuộc tính birdsToShow trong Chế độ xem danh sách kiểm tra của tôi.

Tôi cũng sẽ thêm một tuyên bố trả về với mảng chim mới, nhỏ hơn nhiều.

Trước khi tôi chạy lại dự án của mình, tôi muốn tạo mẫu thêm một tính năng nữa.

Bạn có thể thấy rằng mỗi hàng trong Chế độ xem danh sách kiểm tra tùy chỉnh của tôi đều có một chỉ báo tiết lộ.

Khi tôi chọn một hàng trong danh sách, nó sẽ mở ra một chế độ xem bản đồ đơn giản.

Nó chưa hữu ích lắm, nhưng tôi muốn lấy dữ liệu về lần nhìn thấy con chim được chọn gần đây nhất và hiển thị nó trên bản đồ.

Để đạt được điều đó, tôi sẽ phải điều chỉnh chức năng nhìn thấy ToShow (cho chim:) trong Chế độ xem danh sách kiểm tra của mình.

Để giúp với điều đó, tôi đã thêm một phụ thuộc vào dự án của mình.

Gói BirdSightings giúp dễ dàng lấy dữ liệu từ một trong những trang web khoa học công dân, nơi mọi người báo cáo việc nhìn thấy họ.

Tôi chưa từng sử dụng gói đó trước đây, vì vậy tôi chưa quen thuộc với API của nó.

May mắn thay, gói này bao gồm tài liệu dưới dạng một sân chơi cho thấy một vài ví dụ.

Đây là một cách tuyệt vời để cho phép khách hàng của gói của bạn dùng thử API được cung cấp.

Có vẻ như chúng ta sẽ cần cung cấp hai đối số cho hàm fetchSightings: mã của con chim cần tìm và vị trí để nhìn xung quanh.

Tôi có thể thực hiện sân chơi này để tìm hiểu thêm về kết quả mong đợi.

Hãy quay lại sân chơi của chúng ta và thử sử dụng nó.

Tôi có thể đóng trình điều hướng để cho tôi thêm chỗ trong khu vực biên tập.

Trước khi chúng ta gọi hàm, tôi cần thêm hai câu lệnh nhập.

Tôi sẽ nhập khung CoreLocation để có thể làm việc với tọa độ và khung BirdSighting để sử dụng API của nó.

Đối với các đối số hàm, chúng ta có thể chỉ cần bắt đầu với con chim đầu tiên từ danh sách.

Có vẻ như chúng ta sẽ tìm kiếm con cú tai ngắn.

Lưu ý rằng tôi đã sử dụng lựcunwrapping ở đây.

Tôi không phải lo lắng nhiều về việc xử lý lỗi trong môi trường Sân chơi, nhưng điều quan trọng là phải ghi nhớ điều đó khi đưa mã vào dự án của bạn.

Đối với vị trí, tôi có thể sẽ sử dụng vị trí hiện tại của mình hầu hết thời gian, nhưng khả năng cung cấp tọa độ cụ thể sẽ rất tuyệt vời cho hai điều: kiểm tra mã của tôi và lên kế hoạch cho tất cả các chuyến đi đường bộ.

Hãy thử xem chúng ta có thể tìm thấy gì xung quanh Apple Park.

Trước khi tôi giới thiệu một cuộc gọi mạng, tôi sẽ chuyển sang chế độ thực thi sân chơi thủ công để đảm bảo rằng tôi có thể tránh các cuộc gọi không cần thiết.

Những yêu cầu như vậy có thể mất một lúc và tôi muốn lặp lại tính năng mới của mình càng nhanh càng tốt.

Để làm điều đó, tôi sẽ một lần nữa đưa menu lên thanh dưới cùng và chọn Chạy thủ công.

Bây giờ, tôi có toàn quyền kiểm soát các phần của mã cần được thực thi.

Hãy thêm mã tìm nạp.

Điều khiển trong máng xối trình chỉnh sửa nguồn cho tôi thấy rằng việc thực hiện hai dòng đó sẽ không thực thi lại tất cả các dòng mà chúng tôi đã thực hiện ở trên.

Hãy thực hiện các dòng mới và xem liệu chúng ta có nhận được bất kỳ dữ liệu nào không.

May mắn thay, có một số lần nhìn thấy.

Chúng ta hãy xem cái đầu tiên, cái nào nên là cái gần đây nhất.

Có vẻ như những con cú tai ngắn được nhìn thấy gần đây nhất tại Khu bảo tồn Changmen Cliffs.

Tôi chưa quen thuộc với tất cả các điểm nóng ngắm chim trong khu vực, vì vậy sẽ rất tuyệt khi xem dữ liệu về việc nhìn thấy trong SightingMapView của tôi.

Hãy khởi tạo nó với dữ liệu tìm nạp.

Đối với các yếu tố giao diện người dùng phức tạp như chế độ xem bản đồ, chúng ta có thể sử dụng chế độ xem trực tiếp của sân chơi để xem bản xem trước lớn, tương tác đầy đủ.

Để sử dụng nó, trước tiên tôi cần nhập khung PlaygroundSupport.

Bây giờ, tôi đã sẵn sàng để thiết lập chế độ xem trực tiếp và thực hiện sân chơi.

Tôi đã sửa đổi phần đã được thực thi của sân chơi bằng cách thêm câu lệnh nhập ở đầu tệp, vì vậy điều khiển trong máng xối trình chỉnh sửa nguồn cho tôi biết rằng nó sẽ cần phải thực thi lại toàn bộ tệp.

Tôi sẽ mất kết quả từ lần thực hiện cuối cùng, nhưng đó không phải là vấn đề trong trường hợp này, vì vậy tôi sẽ tiếp tục và thực hiện sân chơi.

Tôi không nhớ bất kỳ hòn đảo nào quá gần Apple Park.

Vì chế độ xem trực tiếp hoàn toàn tương tác, tôi có thể thu nhỏ một chút giống như trong trình mô phỏng iPhone để xem chúng ta đang ở đâu.

Có vẻ như chúng ta đang ở quá xa về phía đông.

Hãy đóng chế độ xem trực tiếp trong Tùy chọn Trình chỉnh sửa và thử xem vấn đề được giới thiệu ở đâu.

SightingMapView của tôi đã được khởi tạo với hằng số MostRecentSighting, vì vậy hãy kiểm tra giá trị của nó.

Thay vì mở kết quả nội tuyến, tôi có thể xem nhanh giá trị bằng cách nhấp vào biểu tượng mắt trong thanh bên.

Trong Xcode 15, chúng tôi đã cải thiện kết quả sân chơi cho một số loại MapKit và CoreLocation.

Sân chơi hiện có thể hiển thị bản xem trước cho CLLocationCoordinate2D, vì vậy chúng ta hãy xem tài sản vị trí.

Điều này dường như đang chỉ vào cùng một vị trí, vì vậy điều này dường như không phải do SightingMapView của tôi gây ra.

Chúng tôi đã nhận sai vị trí từ gói BirdSightings, vì vậy nó có thể được gây ra bởi một vấn đề trong gói hàng, hoặc tôi đã vượt qua một vị trí sai để bắt đầu.

Hãy xác minh cái sau.

Điều này dường như cũng không gần với Apple Park.

Vì chúng ta ở quá xa về phía đông, tôi nghĩ đây có thể chỉ là vấn đề trộn lẫn phía tây với phía đông.

Hãy cố gắng khắc phục điều này bằng cách thêm dấu trừ trước kinh độ và thực hiện lại sân chơi.

Bây giờ đây chắc chắn là Apple Park.

Hãy thực hiện phần còn lại của sân chơi với vị trí được cập nhật và mở lại chế độ xem trực tiếp trong Tùy chọn Trình chỉnh sửa.

Điều đó giống nó hơn.

Bây giờ tôi biết rằng Coyote Hills có thể là nơi tốt nhất để chụp ảnh các loài mới.

Hãy nhanh chóng đưa mã tìm nạp vào ChecklistView của tôi.

Tôi sẽ sao chép ba dòng này vào chức năng sightingsToShow.

Thay vì luôn sử dụng vị trí Apple Park được mã hóa cứng ở đây, tôi sẽ thay thế nó bằng Vị trí hiện tại cuối cùng mà tôi nhận được từ CLLocationManager.

Tôi cũng sẽ thêm tuyên bố hoàn trả với mostRecentSighting mới.

Đã đến lúc cuối cùng cũng chạy dự án với những thay đổi của chúng tôi.

Danh sách kiểm tra bây giờ trông thực tế hơn nhiều khi chúng tôi tập trung vào một nhóm nhỏ các loài chim.

Hãy xem điều gì sẽ xảy ra khi tôi nhấp vào một hàng ngay bây giờ.

Điều đó thật tuyệt.

Ứng dụng của tôi bây giờ có thể hiển thị cho tôi lần nhìn thấy gần đây nhất đối với con chim được chọn.

Tất nhiên vẫn còn rất nhiều chỗ để cải thiện.

Ví dụ, tôi nên hiển thị một chỉ báo tiến độ trong khi các lần nhìn thấy được tìm nạp trong nền, nhưng đây là một điểm khởi đầu tuyệt vời.

Ứng dụng này sẽ giúp tôi rất nhiều, và Xcode Playgrounds đã làm cho những cải tiến này dễ thực hiện hơn rất nhiều.

Trong phiên này, chúng tôi đã sử dụng Xcode Playgrounds để nhanh chóng tạo mẫu các tính năng mới của một dự án.

Chúng tôi đã sử dụng các giao thức CustomStringConvertible và CustomPlaygroundDisplayConvertible để tùy chỉnh các biểu diễn của các loại tùy chỉnh của chúng tôi.

Chúng tôi đã thấy cách điều chỉnh chế độ thực hiện sân chơi có thể tăng tốc quy trình làm việc của bạn.

Sử dụng chế độ Lịch sử Giá trị cho phép chúng tôi nhanh chóng xem các lớp của chúng tôi phản ứng như thế nào với nhiều đầu vào.

Cuối cùng, chúng tôi đã sử dụng chế độ xem trực tiếp của sân chơi để xem xét kỹ hơn các yếu tố giao diện người dùng phức tạp.

Cảm ơn bạn đã xem.