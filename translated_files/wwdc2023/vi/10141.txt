10141

♪ ♪

Ian: Xin chào mọi người.

Tôi là Ian, và tôi là một kỹ sư trong nhóm máy chủ App Store.

Hôm nay tôi sẽ chia sẻ một số cập nhật thú vị về API máy chủ của chúng tôi để mua trong ứng dụng, bao gồm các tính năng mới và cập nhật quan trọng.

Nếu bạn không quen thuộc, chúng tôi cung cấp hai API chính giúp bạn tận dụng tối đa các giao dịch mua trong ứng dụng trên máy chủ của mình.

Đầu tiên là API Máy chủ App Store.

Bạn gọi App Store Server API theo yêu cầu từ máy chủ của mình và nó trả về tất cả dữ liệu bạn cần để quản lý hiệu quả các giao dịch mua trong ứng dụng được thực hiện trong ứng dụng của bạn.

API cung cấp nhiều điểm cuối mạnh mẽ để truy xuất và thậm chí sửa đổi dữ liệu mua hàng trong ứng dụng.

API chính khác mà chúng tôi cung cấp là App Store Server Notifications V2.

Với App Store Server Notifications V2, máy chủ App Store chủ động gửi các bản cập nhật đến máy chủ của bạn về các giao dịch mua trong ứng dụng được thực hiện trong ứng dụng của bạn.

Điều đó có nghĩa là bạn có thể nhận được các bản cập nhật từng phút mà không cần phải thăm dò API Máy chủ App Store.

Thông báo bao gồm một tập hợp toàn diện các sự kiện, bao gồm gia hạn đăng ký, hết hạn, hoàn tiền và hơn thế nữa.

Những sự kiện này cho phép bạn theo dõi toàn bộ vòng đời của các giao dịch mua trong ứng dụng, vì vậy bạn có thể hiểu rõ hơn và phản hồi với hành vi của người dùng.

API Máy chủ App Store và Thông báo Máy chủ App Store V2 chia sẻ rất nhiều tính năng tuyệt vời.

Cả hai đều cung cấp dữ liệu giao dịch ở định dạng JSON quen thuộc và dữ liệu được ký, vì vậy bạn có thể tự tin rằng nó đến từ Apple.

Bạn cũng có thể sử dụng cả hai API để hỗ trợ các ứng dụng của mình sử dụng StoreKit 2 hoặc StoreKit API ban đầu.

Và chúng tôi tích cực hỗ trợ các API này với các tính năng mới dựa trên phản hồi của bạn.

Hôm nay tôi vui mừng thông báo bộ sưu tập cập nhật mới nhất sắp ra mắt cho App Store Server API và App Store Server Notifications V2.

Chúng tôi có rất nhiều tính năng mới, tôi chỉ có thời gian để đề cập đến một vài tính năng trong phiên hôm nay.

Vui lòng xem tài liệu dành cho nhà phát triển của chúng tôi để biết chi tiết đầy đủ về tất cả các tính năng mới này.

Bây giờ chúng ta hãy đi sâu vào lựa chọn tuyệt vời này về các bản cập nhật máy chủ App Store.

Tôi sẽ chia sẻ những cập nhật của ngày hôm nay trong ba phần.

Đầu tiên, tôi sẽ trình bày chi tiết một số tính năng mới giúp làm việc với các giao dịch trên máy chủ của bạn dễ dàng hơn.

Tiếp theo, tôi sẽ đề cập đến các cải tiến đối với Thông báo Máy chủ App Store sẽ giúp bạn xác định trạng thái đăng ký của người dùng một cách đáng tin cậy.

Và cuối cùng, tôi sẽ cung cấp các cập nhật quan trọng về việc di chuyển khỏi các API cũ của chúng tôi.

Hãy bắt đầu với các giao dịch.

Giao dịch là một đối tượng dữ liệu cốt lõi để mua hàng trong ứng dụng.

Chúng đại diện cho giao dịch mua trong ứng dụng trên thiết bị và chứa thông tin quan trọng về giao dịch mua đó, chẳng hạn như số nhận dạng sản phẩm, loại, ngày mua và hơn thế nữa.

Máy chủ App Store đại diện cho một giao dịch thông qua một đối tượng JSON được ký bằng JWS.

Đây là một định dạng an toàn, được tiêu chuẩn hóa mà bạn sẽ thấy trên App Store Server API và App Store Server Notifications V2.

Cách chính để truy xuất các giao dịch đã ký này là sử dụng điểm cuối Nhận Lịch sử Giao dịch của API Máy chủ App Store.

Điểm cuối này trả về lịch sử giao dịch đầy đủ cho một người dùng nhất định của ứng dụng của bạn, vì vậy bạn có thể sử dụng nó để cập nhật tất cả các giao dịch mua của người dùng, từ quá khứ đến hiện tại.

Nhưng đôi khi, máy chủ của bạn đã biết về một giao dịch, ví dụ, do một cuộc gọi được thực hiện từ ứng dụng của bạn đến máy chủ của bạn.

Phía máy chủ, bạn có thể muốn xác thực thêm giao dịch đó và đảm bảo bạn có thông tin cập nhật nhất cho nó.

Trước đây, trường hợp sử dụng này yêu cầu gọi Nhận Lịch sử Giao dịch và sàng lọc phản hồi cho giao dịch phù hợp.

Sau khi tìm thấy, bạn có thể làm mới hồ sơ giao dịch của mình với dữ liệu trong phản hồi.

Quá trình này có thể cảm thấy tẻ nhạt, đặc biệt nếu lịch sử giao dịch của người dùng của bạn kéo dài nhiều trang, yêu cầu nhiều cuộc gọi đến điểm cuối.

Và nó cũng không hoạt động nếu bạn đang tìm kiếm một giao dịch tiêu hao đã hoàn thành, vì những giao dịch đó không xuất hiện trong phản hồi Nhận Lịch sử Giao dịch.

Trường hợp sử dụng này đơn giản đòi hỏi một giải pháp cụ thể hơn.

Đó là lý do tại sao hôm nay, chúng tôi giới thiệu một điểm cuối mới sẽ trực tiếp giải quyết trường hợp sử dụng này.

Với điểm cuối Nhận Thông tin Giao dịch mới, bạn có thể yêu cầu thông tin giao dịch đã ký cho một lần mua và tất cả những gì bạn cần cung cấp là một transactionId.

Tất cả các transactionIds đều được hỗ trợ, bất kể loại sản phẩm hay trạng thái hoàn thành của giao dịch trên thiết bị của người dùng.

Đúng vậy, bạn thậm chí có thể lấy các vật tư tiêu hao đã hoàn thành từ điểm cuối này.

Chúng ta hãy xem nhanh cách thức hoạt động của điểm cuối mới.

Bạn sẽ gửi yêu cầu GET đến điểm cuối mới này trên máy chủ App Store, bao gồm transactionId như một tham số đường dẫn.

Bạn sẽ nhận được phản hồi có chứa chuỗi Thông tin Giao dịch đã ký.

Bằng cách giải mã signedTransactionInfo, bạn có thể xem thông tin giao dịch cho ID bạn đã cung cấp trong yêu cầu.

Và thế là xong.

Điểm cuối Nhận Thông tin Giao dịch mới khá đơn giản, nhưng giúp linh hoạt hơn khi làm việc với các giao dịch trên máy chủ của bạn.

Tôi nghĩ bạn sẽ thấy nó hữu ích cho nhiều trường hợp sử dụng khác nhau.

Bây giờ, hãy lấy chủ đề linh hoạt đó và mở rộng nó hơn nữa.

Bạn có thể quen thuộc với các điểm cuối phổ biến này của App Store Server API.

Mỗi điểm cuối này yêu cầu một originalTransactionId làm tham số đường dẫn.

ID này cho máy chủ biết bạn đang yêu cầu hoặc gửi dữ liệu cho người dùng nào.

Nhưng bạn có thể không phải lúc nào cũng có sẵn một bản gốcTransactionId.

Điều gì sẽ xảy ra nếu tất cả những gì bạn có là một transactionId?

Bạn có thể gửi nó đến điểm cuối Nhận Thông tin Giao dịch mới để truy xuất OriginalTransactionId, nhưng tại sao lại gọi một điểm cuối chỉ để gọi một điểm cuối khác?

Thay vào đó, bắt đầu từ hôm nay, bạn có thể gọi các điểm cuối này với bất kỳ transactionId nào.

Chỉ cần cung cấp ID trong đường dẫn yêu cầu của bạn, giống như bạn đã làm trước đây.

Chúng tôi hy vọng sự linh hoạt hơn này sẽ giúp việc gọi các điểm cuối cốt lõi này của API Máy chủ App Store trở nên dễ dàng hơn bao giờ hết.

Và nếu bạn đã gọi các điểm cuối này bằng originalTransactionIds, đừng lo lắng, chúng cũng sẽ tiếp tục hoạt động.

Bây giờ chúng ta hãy chuyển sang các bản cập nhật sắp tới cho Thông báo Máy chủ App Store.

Nếu ứng dụng của bạn cung cấp đăng ký tự động gia hạn, điều quan trọng là bạn phải theo dõi trạng thái của các đăng ký đó và cách nó thay đổi theo thời gian.

Tại đây bạn có thể thấy năm trạng thái có thể có của một đăng ký.

Với App Store Server Notifications V2, bạn nhận được thông báo nhanh chóng cho các sự kiện dẫn đến thay đổi trạng thái này, vì vậy bạn có thể nhanh chóng bật và tắt nội dung vào thời điểm thích hợp và duy trì trải nghiệm người dùng mượt mà.

Hãy cùng xem cách các thông báo có thể thông báo cho kiến thức của bạn về trạng thái đăng ký.

Nhiều sự kiện thông báo trực tiếp chỉ ra trạng thái của đăng ký thông qua loại và loại phụ của chúng.

Lấy ví dụ thông báo ĐÃ ĐĂNG KÝ này với loại phụ INITIAL_BUY.

Thông báo này cho biết đăng ký mới cho sản phẩm của bạn, vì vậy bạn biết trạng thái đăng ký đang hoạt động.

Đây là một ví dụ thậm chí còn đơn giản hơn, trong đó loại thông báo đã hết hạn.

Điều này chỉ ra rõ ràng rằng trạng thái của đăng ký liên quan hiện đã hết hạn.

Nhưng đối với một số thông báo, trạng thái đăng ký có thể không quá rõ ràng.

Lấy ví dụ thông báo HOÀN TIỀN này.

Loại thông báo này được gửi khi được hoàn lại tiền cho giao dịch mua trong ứng dụng được thực hiện trong ứng dụng của bạn.

Kiểm tra Thông tin giao dịch đã ký của thông báo này sẽ cho chúng tôi biết giao dịch mua nào đã được hoàn lại.

Trong trường hợp này, chúng tôi thấy khoản hoàn lại là cho đăng ký tự động gia hạn, vì vậy chúng tôi muốn cập nhật hồ sơ của mình về trạng thái đăng ký.

Có thể rất hấp dẫn khi cho rằng trạng thái hiện đã bị "Thu hồi", nhưng điều đó không nhất thiết phải như vậy.

Nếu có giao dịch gia hạn đăng ký gần đây hơn với cùng một originalTransactionId, trạng thái của đăng ký vẫn có thể đang hoạt động.

Nếu đúng như vậy, bạn không nên vô hiệu hóa quyền truy cập vào nội dung đăng ký.

Trong tình huống này, trạng thái của đăng ký đơn giản là không rõ ràng và chỉ riêng dữ liệu trong thông báo là không đủ để cập nhật nó.

Điều này không lý tưởng.

Khi bạn nhận được thông báo máy chủ App Store cho đăng ký, chúng tôi muốn nó chỉ rõ trạng thái mới nhất của đăng ký, vì vậy bạn có thể cập nhật thông tin quan trọng này trên máy chủ của mình.

Đó là lý do tại sao hôm nay, chúng tôi giới thiệu một trường trạng thái mới cho đối tượng dữ liệu của App Store Server Notifications V2.

Trường này là một số nguyên đơn giản chỉ ra một trong năm trạng thái cốt lõi của đăng ký mà tôi đã trình bày chi tiết trước đó.

Trường mới này sẽ được bao gồm trong mọi thông báo chúng tôi gửi cho các đăng ký tự động gia hạn.

Bây giờ bạn có thể nhận được trạng thái đăng ký mà không cần phải gọi điểm cuối Nhận tất cả trạng thái đăng ký của API máy chủ App Store.

Hãy xem lĩnh vực mới này cải thiện kịch bản mà tôi đã mô tả trước đó như thế nào.

Bây giờ khi bạn nhận được thông báo HOÀN TIỀN cho đăng ký, bạn có thể chỉ cần kiểm tra trường trạng thái để hiểu trạng thái của đăng ký.

Trong trường hợp này là 1, vì vậy bạn biết đăng ký liên quan đang Hoạt động.

Trường trạng thái mới làm cho Thông báo Máy chủ App Store trở nên hữu ích hơn bao giờ hết, rất hữu ích, bạn sẽ muốn đảm bảo rằng bạn không bỏ lỡ một thông báo nào.

Nhưng nếu máy chủ của bạn gặp sự cố ngừng hoạt động, máy chủ App Store có thể không liên hệ được để gửi thông báo.

Đó là lý do tại sao chúng tôi cung cấp điểm cuối Nhận Lịch sử Thông báo của API Máy chủ App Store.

Điểm cuối này cho phép bạn yêu cầu tối đa sáu tháng cuối cùng của thông báo phiên bản 2 máy chủ App Store được tạo cho ứng dụng của bạn.

Bằng cách đó khi máy chủ của bạn bị ngừng hoạt động đã biết, bạn có thể gọi điểm cuối này trong khoảng thời gian ngừng hoạt động và truy xuất bất kỳ thông báo nào mà máy chủ của bạn đã bỏ lỡ.

Tuy nhiên, đối với một số trường hợp sử dụng, quá trình này có thể không hiệu quả lắm.

Thỉnh thoảng, máy chủ của bạn có thể bỏ lỡ thông báo ngay cả bên ngoài sự cố ngừng hoạt động, ví dụ, do sự cố mạng tạm thời.

Trong tình huống này, bạn có thể không có khoảng thời gian rõ ràng để truy vấn điểm cuối, khiến bạn phải sàng lọc qua các trang thông báo mà máy chủ của bạn phần lớn đã nhận được.

Để giải quyết trường hợp sử dụng này, chúng tôi đang giới thiệu một trường yêu cầu mới để Nhận Lịch sử Thông báo được gọi là "onlyFailures".

Trường tùy chọn này sẽ giới hạn các thông báo được trả về chỉ những thông báo không đến được máy chủ của bạn.

Phản hồi thậm chí sẽ chứa các thông báo hiện đang trong quá trình thử lại.

Giờ đây, bạn có thể khôi phục sự cố ngừng hoạt động và các sự cố mạng không thường xuyên nhanh hơn nhiều, vì bạn chỉ cần phân tích cú pháp các thông báo mà máy chủ của bạn chưa thấy.

Hãy cùng xem lĩnh vực mới này hoạt động như thế nào.

Bạn gửi yêu cầu đến điểm cuối Nhận Lịch sử Thông báo và bạn bao gồm trường mới, onlyFailures, trong nội dung yêu cầu.

Đây là câu trả lời.

Mỗi mục nhập trong mảng notificationHistory đại diện cho một thông báo và vì bạn đã bao gồm trường onlyFailures mới trong yêu cầu của mình, mọi thông báo được liệt kê ở đây đều không đến được máy chủ của bạn.

Hãy phóng to một mục thông báo duy nhất.

Ở đây chúng tôi có Payload đã ký.

Chúng tôi có thể giải mã chuỗi này để xem nội dung của thông báo, giống như ban đầu nó được gửi đến máy chủ của bạn.

Nhìn vào mảng sendAttempts cho thông báo này, bây giờ chúng ta có thể thấy kết quả của mỗi lần thử gửi.

Mảng này có thể chứa tối đa sáu mục nhập, với một mục cho lần thử gửi ban đầu và tối đa năm mục cho các lần thử lại.

Ở đây chúng tôi chỉ thấy hai mục nhập và cả hai đều thất bại, vì vậy thông báo vẫn phải trong quá trình thử lại.

Nếu thử lại sau thành công, thông báo này sẽ không còn xuất hiện cho các yêu cầu tiếp theo bao gồm trường onlyFailures.

Vì vậy, đó là cách hoạt động của trường onlyFailures mới.

Tôi nghĩ bạn sẽ thấy rằng nó làm cho Get Notification History trở nên hữu ích hơn.

Cuối cùng, một bản cập nhật quan trọng về việc di chuyển khỏi các API cũ của chúng tôi.

Nếu ứng dụng của bạn đã cung cấp dịch mua hàng trong ứng dụng trong một thời gian, bạn có thể đã quen thuộc với API verifyReceipt.

Vào năm 2021, chúng tôi đã phát hành App Store Server API như một cách mới để lấy dữ liệu mua hàng trong ứng dụng từ App Store Server.

Hãy so sánh hai API này.

Với verifyReceipt, bạn có thể xác minh và giải mã các biên lai bạn nhận được từ các khách hàng đang chạy phiên bản gốc của StoreKit.

Với App Store Server API, bạn có thể tìm nạp tất cả cùng một dữ liệu mà bạn tìm thấy trong biên lai và hơn thế nữa bằng cách sử dụng ba điểm cuối này.

Và App Store Server API cũng cung cấp nhiều điểm cuối bổ sung cung cấp dữ liệu hữu ích và chức năng mạnh mẽ mà bạn sẽ không tìm thấy ở bất kỳ nơi nào khác.

Chuyển sang API thông báo của chúng tôi, chúng tôi vẫn hỗ trợ Thông báo Máy chủ App Store cũ hơn V1.

Nhưng vào năm 2021, chúng tôi đã giới thiệu App Store Server Notifications V2.

Bây giờ hãy so sánh các API này.

Thông báo Máy chủ App Store V1 và V2 đều cung cấp các sự kiện mua hàng trong ứng dụng theo thời gian thực được gửi trực tiếp đến máy chủ của bạn.

Nhưng V2 cung cấp sự rõ ràng hơn bằng cách xác định các sự kiện bằng cách sử dụng cả loại và loại phụ.

Và sự khác biệt không dừng lại ở đó.

V2 cũng cung cấp thông báo cho các sự kiện bổ sung, khả năng yêu cầu thông báo thử nghiệm, quyền truy cập vào lịch sử thông báo và trường trạng thái hoàn toàn mới để theo dõi trạng thái đăng ký của người dùng của bạn.

Bằng cách áp dụng API Máy chủ App Store và Thông báo Máy chủ App Store V2, bạn sẽ mở khóa một loạt các tính năng mới để quản lý dữ liệu mua hàng trong ứng dụng trên máy chủ của mình một cách an toàn và hiệu quả.

Cuối cùng, điều đó có nghĩa là trải nghiệm mua hàng trong ứng dụng tốt hơn cho khách hàng của bạn.

Đó là lý do tại sao hôm nay, chúng tôi thông báo ngừng sử dụng verifyReceipt và App Store Server Notifications V1.

Bắt đầu từ hôm nay, các API này được coi là không dùng nữa và sẽ không còn nhận được các bản cập nhật tính năng nữa.

Bắt đầu lập kế hoạch di chuyển của bạn ngay bây giờ để tận hưởng tất cả các lợi ích của các API mới hơn.

Di chuyển chỉ cần một vài bước ngắn.

Để di chuyển từ verifyReceipt sang App Store Server API, trước tiên bạn sẽ cần ký JWT để đại diện cho ứng dụng của mình, đây là một quy trình đơn giản được nêu trong tài liệu của chúng tôi.

Bất cứ khi nào bạn gọi App Store Server API, bạn sẽ cung cấp JWT này dưới dạng tiêu đề.

Nó sẽ chứng minh rằng bạn sở hữu dữ liệu ứng dụng được yêu cầu.

Tiếp theo, bạn sẽ cần lưu một transactionId cho mỗi người dùng của mình.

Bạn sẽ cung cấp transactionId này như một tham số đường dẫn bất cứ khi nào bạn gọi các điểm cuối cốt lõi, như Nhận Lịch sử Giao dịch và Nhận Tất cả Trạng thái Đăng ký.

Bất kỳ transactionId nào cũng sẽ hoạt động.

Nếu bạn duy trì một cơ sở dữ liệu, bạn có thể đã lưu một cơ sở dữ liệu.

Nếu không, bạn có thể trích xuất một từ biên lai cho mỗi người dùng của mình.

Và thế là xong.

Sau đó, bạn sẽ có quyền truy cập vào tất cả cùng một dữ liệu mà bạn đã sử dụng để nhận được từ verifyReceipt và hơn thế nữa.

Việc di chuyển từ App Store Server Notifications V1 sang V2 thậm chí còn đơn giản hơn.

Đầu tiên, chuẩn bị máy chủ của bạn để phân tích định dạng V2 mới.

Nếu bạn đã sử dụng App Store Server API, bước này phải đơn giản, vì App Store Server Notifications V2 sử dụng cùng một định dạng giao dịch JWS.

Khi máy chủ của bạn đã sẵn sàng, hãy truy cập App Store Connect để thay đổi tùy chọn của bạn từ thông báo V1 sang V2.

Để kiểm tra việc triển khai của bạn, bạn có thể bắt đầu bằng cách chỉ nhận thông báo phiên bản 2 trong hộp cát.

Sau khi thay đổi tùy chọn của bạn, máy chủ App Store sẽ bắt đầu gửi thông báo mới ở định dạng V2.

Nếu bạn có bất kỳ thông báo V1 nào trong quá trình thử lại, bạn có thể tiếp tục nhận chúng trong tối đa ba ngày.

Để được hỗ trợ thêm về di chuyển, chúng tôi có sẵn các tài nguyên bổ sung.

API Máy chủ App Store và Thông báo Máy chủ App Store V2 có sẵn trong môi trường hộp cát, vì vậy bạn có thể kiểm tra việc triển khai của mình trước khi đưa nó ra sản xuất.

Và tuần này, chúng tôi sẽ phát hành Thư viện Máy chủ App Store, một thư viện mã nguồn mở mới để gọi API Máy chủ App Store và phân tích cú pháp Thông báo Máy chủ App Store V2.

Nó có thể giúp bạn dễ dàng gọi các điểm cuối của chúng tôi, xác minh dữ liệu đã ký mà bạn nhận được và thậm chí trích xuất transactionIds từ biên lai để giúp việc di chuyển dễ dàng hơn.

Tôi hy vọng bạn sẽ xem phiên chuyên dụng của nó tại WWDC năm nay có tiêu đề "Gặp gỡ Thư viện Máy chủ App Store".

Và để biết thêm các mẹo về cách di chuyển, hãy xem phiên WWDC22 có tiêu đề, "Khám phá tích hợp và di chuyển mua hàng trong ứng dụng".

Điều đó kết thúc các bản cập nhật Máy chủ App Store của chúng tôi cho phiên này.

Tôi hy vọng bạn sẽ sử dụng các khả năng mới tuyệt vời mà chúng tôi đã công bố hôm nay và xem tài liệu của chúng tôi để biết thêm các tính năng mà chúng tôi không có thời gian để xem xét.

Mọi tính năng hiện có sẵn trong cả hộp cát và sản xuất, vì vậy trước tiên bạn có thể thử nghiệm trong hộp cát, sau đó triển khai đến máy chủ sản xuất của mình bất cứ khi nào bạn sẵn sàng.

Và chúng tôi rất muốn nghe ý kiến của bạn.

Nếu bạn có yêu cầu tính năng cho máy chủ App Store, vui lòng cho chúng tôi biết thông qua Trợ lý phản hồi của Apple.

Cảm ơn vì đã tham gia cùng tôi tại WWDC23!

♪ ♪