10120

♪ ♪

Xin chào, tôi là Rachel. Tôi là một kỹ sư trong nhóm Safari.

Hôm nay, tôi rất vui được chia sẻ những gì mới trong các ứng dụng web.

Chúng tôi đã có một hành trình với các ứng dụng web kể từ khi phát hành chiếc iPhone đầu tiên và chúng tiếp tục trở nên tốt hơn.

Trong iOS và iPadOS 16.4, chúng tôi đã thêm thông báo vào các ứng dụng web Màn hình chính, sử dụng tiêu chuẩn Web Push với hỗ trợ huy hiệu.

Chúng tôi cũng đã thêm API cho các trình duyệt iOS và iPadOS để áp dụng Thêm vào Màn hình chính.

Mới trong iOS và iPadOS 17, Thêm vào Màn hình chính hiện có sẵn trong Bộ điều khiển Chế độ xem Safari.

Vì vậy, bây giờ người dùng có thể thêm các ứng dụng web Màn hình chính trong trình duyệt iOS và nhiều trình duyệt trong ứng dụng.

Mới trong macOS Sonoma, bây giờ chúng tôi có các ứng dụng web trên Mac.

Các ứng dụng web trên Mac cho phép tôi tập trung vào các trang web mà tôi sử dụng mọi lúc theo cách chuyên dụng tách biệt với phần còn lại của quá trình duyệt.

Tương tự như iOS, cách tôi có thể tạo một ứng dụng web là thêm một trang web vào Dock.

Tôi đang duyệt Wikipedia và tôi muốn thêm nó vào Dock.

Tôi sẽ mở menu Tệp và chọn "Thêm vào Dock..."

Bây giờ tôi có thể thấy biểu tượng, tên và URL của trang web này.

Tôi sẽ đơn giản hóa cái tên.

Tôi cũng có thể sửa đổi biểu tượng nếu muốn, nhưng cái này có vẻ tốt.

Tôi sẽ nhấn "Thêm", và bây giờ có một biểu tượng mới trong Dock của tôi.

Tôi sẽ đóng Safari ngay bây giờ và mở ứng dụng web Wikipedia.

Bây giờ khi tôi đã khởi chạy ứng dụng web này, tôi có thể sử dụng trang web này theo cách giống như một ứng dụng hơn.

Tôi vẫn đăng nhập vào tài khoản của mình.

Đó là bởi vì Safari sao chép cookie trang web khi nó được thêm vào Dock.

Có một thanh công cụ đơn giản với các nút điều hướng.

Và màu chủ đề cho trang web hòa quyện vào thanh công cụ.

Là một nhà phát triển, bạn có thể kiểm soát xem các nút điều hướng có được hiển thị hay không.

Hôm nay, trước tiên chúng ta sẽ đề cập đến cách các ứng dụng web trên Mac hoạt động ngay lập tức cho tất cả các trang web.

Sau đó, tôi sẽ cho bạn biết về cách bạn có thể tùy chỉnh hành vi của ứng dụng web của mình để tạo ra trải nghiệm tốt nhất cho người dùng của mình.

Cuối cùng, tôi sẽ thảo luận về các thông báo, bao gồm âm thanh và huy hiệu, cho bạn cách tiếp cận người dùng ngay cả khi họ không chủ động sử dụng ứng dụng web của bạn.

Hãy bắt đầu với cách các ứng dụng web hoạt động ngay lập tức.

Các ứng dụng web trên Mac hoạt động tốt mà không cần các nhà phát triển chấp nhận.

Bất kỳ trang web nào cũng có thể trở thành một ứng dụng web.

Các ứng dụng web trên Mac được tích hợp đầy đủ với nhiều tính năng mà bạn mong đợi từ một ứng dụng gốc trên macOS.

Hãy cùng xem ứng dụng web mà tôi đã thêm vào Dock của mình.

Trang web này không có bất kỳ tính năng cụ thể nào của ứng dụng web, chẳng hạn như bản kê khai ứng dụng web, và nó trông tuyệt vời và hoạt động như một ứng dụng web độc lập.

Giống như tất cả các ứng dụng Mac, các ứng dụng web hoạt động tốt với Trình quản lý sân khấu, Điều khiển nhiệm vụ và các phím tắt, chẳng hạn như lệnh + tab.

Các ứng dụng web có thể được mở từ Dock, Launchpad và Spotlight Search.

Các ứng dụng web hoạt động với thông tin đăng nhập Tự động từ Chuỗi khóa iCloud và từ các ứng dụng của bên thứ ba đã áp dụng API Mở rộng Nhà cung cấp Thông tin xác thực.

Chúng tôi đặt mọi người kiểm soát quyền riêng tư của họ, vì vậy họ có thể cấp quyền truy cập máy ảnh, micrô và vị trí vào ứng dụng web của bạn theo những cách tương tự như các ứng dụng gốc, thông qua lời nhắc cấp phép hệ thống và trong phần Quyền riêng tư & Bảo mật của Cài đặt hệ thống.

Đó là hành vi mặc định, nhưng bạn có thể muốn tùy chỉnh trải nghiệm cho những người sử dụng trang web của bạn.

Khi một trang web được thêm vào Dock trên macOS, nó luôn được coi là một ứng dụng web.

Là một nhà phát triển, bạn có thể kiểm soát hành vi ban đầu của thanh công cụ cho cửa sổ của ứng dụng web.

Hành vi mặc định hiển thị một thanh công cụ với các điều khiển điều hướng.

Điều này rất hữu ích cho việc điều hướng xung quanh các trang web không có điều khiển điều hướng riêng.

Bạn có thể không muốn hiển thị thanh công cụ nếu trang web của bạn có các điều khiển điều hướng riêng hoặc các điều khiển điều hướng không cần thiết trong ngữ cảnh trang web của bạn.

Đây được gọi là chế độ hiển thị độc lập.

Hành vi mặc định trên iOS khác với macOS.

Một trang web đã được thêm vào Màn hình chính sẽ mở trong trình duyệt mặc định.

Điều này cung cấp một cách nhanh chóng để người dùng truy cập vào một trang web thường được sử dụng ngay từ Màn hình chính.

Các trang web đã được thêm vào Màn hình chính trên iOS và iPadOS, với chế độ hiển thị độc lập, sẽ trở thành một ứng dụng web Màn hình chính.

Các ứng dụng web Màn hình chính có trải nghiệm độc lập, giống như ứng dụng trên iOS, với các cookie và bộ nhớ riêng biệt từ trình duyệt.

Không có giao diện người dùng do trình duyệt cung cấp, chẳng hạn như thanh công cụ và tất cả nội dung đều từ trang web.

Nếu bạn muốn trang web của mình có thể sử dụng Web Push và huy hiệu trên iOS, thì bạn nên sử dụng chế độ hiển thị độc lập.

Để thiết lập chế độ hiển thị. Tôi sẽ thêm một bản kê khai ứng dụng web vào trang web của mình.

Bản kê khai ứng dụng web là một cách để một trang web truyền đạt hành vi dự định của nó cho các tính năng liên quan đến ứng dụng web với hệ thống.

Để thêm bản kê khai ứng dụng web vào trang web của bạn, chỉ cần thêm một liên kết với rel="manifest" vào tệp JSON ở đầu HTML của bạn.

Tôi gọi tôi là "manifest.json".

Trong tệp kê khai tương ứng, hãy thêm các khóa và giá trị áp dụng cho trang web của bạn.

Đầu tiên tôi sẽ đặt tên vì đây là những gì tôi muốn được sử dụng làm tên ứng dụng web, không phải tiêu đề trang web, vì tên của tôi khá dài.

Để thay đổi chế độ hiển thị, tôi sẽ đặt màn hình thành "độc lập".

Trên macOS, ứng dụng web sẽ không có thanh công cụ.

Trên iOS và iPadOS, trang web sẽ mở trong ứng dụng web Màn hình chính, thay vì trong trình duyệt mặc định.

Bây giờ, hãy đề cập đến nơi các liên kết được nhấp vào trong ứng dụng web đang mở.

Tất cả các ứng dụng web đều có phạm vi liên quan.

Các liên kết trong phạm vi mở trong ứng dụng web.

Phạm vi mặc định là máy chủ của trang web được sử dụng để tạo ứng dụng web.

Bạn có thể tinh chỉnh thêm phạm vi bằng cách sử dụng bản kê khai ứng dụng web để giới hạn nó trong một đường dẫn cụ thể trên trang web của bạn.

Ví dụ: khi tôi nhấp vào liên kết này trong ứng dụng web Browser Pets để chuyển đến một trang khác "webkittens", bạn sẽ nhận thấy rằng chúng tôi ở trong ứng dụng web vì Web Kittens chỉ là một trang khác trên trang web của chúng tôi trong example.com.

Bây giờ khi tôi nhấp vào liên kết đến apple.com sẽ mở trong trình duyệt mặc định của tôi, vì điều đó nằm ngoài phạm vi của example.com.

Nếu tôi muốn các liên kết đến Web Kittens mở trong trình duyệt mặc định, như liên kết đó đến apple.com, thì tôi có thể điều chỉnh phạm vi trong bản kê khai ứng dụng web.

Để điều chỉnh phạm vi, trước tiên tôi sẽ bắt đầu bằng cách thêm "start_url".

Start_url là URL được tải khi ứng dụng web được mở lần đầu tiên.

Điều này sẽ mở trang chủ cho Browser Pets.

Bây giờ tôi sẽ thêm phạm vi.

Giả sử tôi muốn tách Browser Pets và Web Kittens thành các ứng dụng web khác nhau, sau đó tôi có thể giới hạn phạm vi chỉ ở Browser Pets.

Phạm vi là một thư mục con của URL kê khai.

Trong trường hợp này, phạm vi sẽ là example.com/browserpets.

Bất kỳ liên kết nào trong phạm vi sẽ nằm trong ứng dụng web và bất kỳ liên kết nào ngoài phạm vi sẽ mở trong trình duyệt mặc định.

Trong các ứng dụng web Màn hình chính trên iOS, các liên kết bên ngoài phạm vi sẽ mở trong Bộ điều khiển Chế độ xem Safari.

Vì vậy, khi tôi nhấn vào liên kết này trong ứng dụng web Màn hình chính này, nó sẽ mở ra trong Bộ điều khiển Chế độ xem Safari.

Chúng tôi cần đăng nhập để tận dụng tối đa nhiều trang web mà chúng tôi sử dụng hàng ngày.

Như tôi đã đề cập trước đó, để làm cho các ứng dụng web hoạt động tốt ngay lập tức cho hầu hết người dùng, chúng tôi sao chép cookie trang web khi một ứng dụng web trên Mac được thêm vào Dock.

Trong nhiều trường hợp, người dùng vẫn đăng nhập khi ứng dụng web được mở để có trải nghiệm liền mạch.

Kể từ thời điểm đó, cookie được tách biệt giữa Safari và ứng dụng web.

Nếu trạng thái xác thực chỉ được lưu trữ trong cookie cho trang web của bạn, thì người dùng của bạn sẽ được tự động đăng nhập vào ứng dụng web khi họ thêm nó vào Dock của họ vì Safari sao chép cookie của trang web vào ứng dụng web khi nó được thêm vào Dock.

Một số trang web phân chia trạng thái xác thực giữa cookie và lưu trữ cục bộ.

Vì bộ nhớ cục bộ không được sao chép khi một ứng dụng web được tạo, người dùng sẽ phải xác thực lại để tiếp tục sử dụng trang web của bạn dưới dạng ứng dụng web.

Để tạo ra trải nghiệm mượt mà cho người dùng của bạn, hãy giữ trạng thái xác thực được lưu trong cookie.

Như tôi đã đề cập trước đây, các liên kết vượt ra ngoài phạm vi của ứng dụng web sẽ mở trong trình duyệt mặc định.

Nếu người dùng đăng nhập vào trang web của bạn trong trình duyệt mặc định của họ, họ sẽ không đăng nhập vào ứng dụng web đã được thêm vào Dock, vì cookie và bộ nhớ được tách biệt sau khi ứng dụng web được thêm vào.

Xác thực thông qua OAuth trên miền của bên thứ ba vẫn sẽ mở trong ứng dụng web của bạn.

Điều này được thực hiện thông qua heuristics.

Nếu bạn kiểm tra và thấy rằng luồng OAuth của bạn mở trải nghiệm xác thực trong trình duyệt mặc định của người dùng, vui lòng gửi phản hồi cho chúng tôi bằng apple.com/feedback.

Nếu bạn muốn đảm bảo các luồng OAuth của mình không mở trong trình duyệt mặc định của người dùng, bạn có thể sử dụng window.open.

Các liên kết được tải qua window.open sẽ luôn mở trong ứng dụng web bất kể phạm vi.

Apple đang tham gia với các cơ quan tiêu chuẩn để cung cấp cho các nhà phát triển một cách để chỉ ra rằng các liên kết đến các miền xác thực nên nằm trong ngữ cảnh của ứng dụng web.

Một số trang web sử dụng liên kết email để tự động đăng nhập người dùng bằng cách mở liên kết.

Vì các liên kết từ email sẽ mở trong trình duyệt mặc định, điều này sẽ không tự động đăng nhập người dùng vào ứng dụng web mà họ đã có.

Bạn có thể muốn cung cấp mã một lần thay thế trong email mà người dùng của bạn có thể dễ dàng nhập vào quy trình đăng nhập trên trang web của bạn.

Để có trải nghiệm xác thực thuận tiện và an toàn hơn, hãy cân nhắc áp dụng mật khẩu để xác thực trên trang web của bạn.

Kiểm tra "Gặp gỡ mật khẩu" từ WWDC22 để biết thêm thông tin.

Thông báo trong các ứng dụng web trên Mac là một bổ sung thú vị cho hỗ trợ Web Push dựa trên tiêu chuẩn hiện có của chúng tôi cho Safari trong macOS Ventura và trong các ứng dụng web Màn hình chính trong iOS 16.4.

Bây giờ tôi sẽ cho bạn biết cách bạn có thể tích hợp các thông báo, bao gồm huy hiệu và âm thanh, vào các ứng dụng web của mình.

Nếu bạn đã triển khai Web Push theo tiêu chuẩn web, thì thông báo đẩy sẽ hoạt động cho trang web của bạn dưới dạng ứng dụng web trên Mac mà không cần làm việc bổ sung.

Thông báo cho các ứng dụng web trên Mac sử dụng biểu tượng ứng dụng của ứng dụng web trong thông báo.

Thông báo Web Push có nguồn gốc từ Safari hiển thị biểu tượng Safari, trong khi thông báo từ các ứng dụng web trên Mac sử dụng biểu tượng của ứng dụng web trong thông báo, cung cấp ngữ cảnh cho người dùng.

Bạn có thể muốn phát âm thanh trên thiết bị của người dùng khi họ nhận được thông báo để thu hút sự chú ý của họ, vì vậy bây giờ tôi sẽ cho bạn biết cách hoạt động của nó trên macOS, iOS và iPadOS.

Sử dụng API thông báo, bạn có thể chỉ định xem thông báo của bạn có âm thanh hay không.

Theo quy ước nền tảng, âm thanh được bật theo mặc định trên iOS và iPadOS, và âm thanh bị tắt theo mặc định trên macOS.

Để ghi đè mặc định nền tảng, hãy chỉ định rõ ràng một giá trị im lặng.

Nếu thông báo im lặng, hãy đặt im lặng thành true trong các tùy chọn khi yêu cầu thông báo của bạn.

Nếu thông báo phát ra âm thanh, thì hãy đặt im lặng thành sai.

Cũng giống như đối với thông báo ứng dụng gốc, người dùng có thể kiểm soát âm thanh thông báo bằng cách sử dụng cài đặt thông báo.

Badging rất hữu ích để cảnh báo người dùng rằng có điều gì đó cần giải quyết trong ứng dụng web.

Cũng giống như các ứng dụng web Màn hình chính trong iOS 16.4, các ứng dụng web trên Mac hỗ trợ huy hiệu.

Vì huy hiệu và thông báo đẩy được liên kết chặt chẽ trên macOS, iOS và iPadOS, khi người dùng cho phép ứng dụng web gửi thông báo, điều đó bao gồm quyền cho ứng dụng web sử dụng huy hiệu.

Huy hiệu có thể được cập nhật khi ứng dụng web được mở và khi các sự kiện đẩy đang được xử lý trong nền.

Người dùng luôn có thể định cấu hình huy hiệu trong Cài đặt.

Để biết thêm thông tin về việc áp dụng Badging API, hãy xem "Badging for Home Screen Web Apps" trên webkit.org.

Để biết thêm thông tin về việc áp dụng Web Push dựa trên tiêu chuẩn, hãy xem "Gặp gỡ Web Push for Safari" từ WWDC22.

Các ứng dụng web Màn hình chính trên iOS và các ứng dụng web trên Mac tích hợp với Focus để cung cấp cho người dùng quyền kiểm soát các thông báo của họ.

Người dùng có thể đặt thông báo nào họ muốn xem ở các chế độ Lấy nét khác nhau và tùy chọn của họ được áp dụng cho các chế độ Lấy nét trên tất cả các thiết bị của họ.

Hãy cùng xem lại bản kê khai ứng dụng web của chúng tôi.

Khóa kê khai "id" xác định các ứng dụng web duy nhất trong cùng một miền.

Điều này được sử dụng để đồng bộ hóa các chế độ Tiêu điểm và có thể hữu ích nếu bạn có nhiều phần của trang web của mình nên được coi là các ứng dụng web riêng biệt trong cùng một miền.

Nếu bạn chỉ có một ứng dụng web cho một miền nhất định, thì bạn không cần phải đặt id.

Dự phòng nếu không có id được cung cấp là start_url.

Một trong những phần tuyệt vời của Focus là cách các chế độ Focus đồng bộ hóa trên tất cả các thiết bị của người dùng.

Cả bạn và người dùng của bạn đều kiểm soát cách cài đặt chế độ Lấy nét được đồng bộ hóa.

Bạn với tư cách là nhà phát triển có thể có các ứng dụng web riêng biệt cho các phần khác nhau trên trang web của bạn.

Ví dụ, bạn có thể có một ứng dụng web cho cửa hàng của mình và một ứng dụng web cho các diễn đàn.

Ở đây, cột "Tên" là tên ứng dụng web của bạn trên iPhone hoặc Mac của người dùng.

Khóa id của bản kê khai ứng dụng web có thể được sử dụng để chỉ ra rằng một ứng dụng web được tạo bằng id "cửa hàng" là dành cho cửa hàng của bạn và ứng dụng web được tạo bằng id "diễn đàn" dành cho các diễn đàn cho cộng đồng của bạn.

Bằng cách này, người dùng của bạn có thể đặt các tùy chọn thông báo khác nhau cho các ứng dụng web Cửa hàng và Diễn đàn của bạn.

Các chế độ lấy nét đồng bộ hóa trên thiết bị của người dùng khi tên và id được căn chỉnh.

Người dùng có thể tạo nhiều phiên bản của một ứng dụng web cho một trang web nhất định trên thiết bị của họ.

Điều này có thể hữu ích cho việc tách các tài khoản công việc và cá nhân.

Người dùng có thể chọn các tên khác nhau cho mỗi trường hợp.

Trong ví dụ này "Diễn đàn" và "Diễn đàn - Công việc".

Bằng cách này, người dùng có thể đặt các cài đặt thông báo và Tiêu điểm khác nhau cho từng ứng dụng web Diễn đàn của họ đồng bộ hóa trên tất cả các thiết bị của họ.

Có một số API mà chúng tôi đã thêm vào WebKit trong năm nay có thể hữu ích cho bạn khi tạo trang web của mình.

Chúng tôi có hỗ trợ cho API Kích hoạt Người dùng, cho trang web biết khi nào xảy ra kích hoạt người dùng tạm thời hoặc gắn bó.

Điều này rất hữu ích cho bạn để xác định xem có ổn không khi gọi một chức năng phụ thuộc vào kích hoạt của người dùng, chẳng hạn như yêu cầu quyền gửi thông báo.

Chúng tôi đã vận chuyển API Toàn màn hình được cập nhật và không có tiền tố trong Safari 16.4 cho macOS và iPadOS.

Chúng tôi cũng đã thêm hỗ trợ sơ bộ cho API Định hướng Màn hình, bao gồm các thuộc tính loại và góc và trình xử lý sự kiện onChange.

Để biết thêm thông tin, hãy xem "Tính năng WebKit trong Safari 16.4" trên webkit.org.

Các ứng dụng web trên Mac hoạt động ngay lập tức cho tất cả các trang web.

Bạn có thể sử dụng bản kê khai ứng dụng web để tùy chỉnh hành vi khi trang web của bạn được thêm vào Dock.

Bạn có thể triển khai các tính năng được thiết kế riêng cho các ứng dụng web, chẳng hạn như Web Push và huy hiệu.

Để biết thêm thông tin về việc phát triển và gỡ lỗi trang web của bạn trong Safari, hãy xem "Khám phá lại các tính năng của nhà phát triển Safari" và "Có gì mới trong Trình kiểm tra web" từ WWDC23.

Cảm ơn bạn đã xem.

Tận hưởng WWDC23.

♪ ♪