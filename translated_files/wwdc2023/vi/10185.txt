10185

♪ ♪

Jeff: Xin chào, tôi là Jeff, một kỹ sư trong nhóm Hoạt động Trực tiếp.

Tôi rất vui khi có thể chia sẻ với bạn cập nhật Hoạt động Trực tiếp với các thông báo đẩy.

Hoạt động trực tiếp là một cách tuyệt vời để hiển thị thông tin thoáng qua cho ai đó về một hoạt động đang diễn ra.

ActivityKit cho phép ứng dụng của bạn bắt đầu, cập nhật và kết thúc Hoạt động Trực tiếp.

Sau đó, bằng cách sử dụng WidgetKit và SwiftUI, bạn có thể xây dựng giao diện người dùng hiển thị thông tin cho người dùng.

Nếu bạn muốn tìm hiểu thêm về những công nghệ này, hãy xem phiên "Meet ActivityKit" của Can.

Trong phiên "Gặp gỡ ActivityKit", Có thể thêm Hoạt động Trực tiếp mới vào Emoji Rangers để hiển thị trạng thái cuộc phiêu lưu của một anh hùng.

Nhưng tôi nghĩ sẽ vui hơn nếu anh hùng có một số người bạn đồng hành.

Vì vậy, tôi muốn thêm một tính năng mới cho phép nhiều người dùng thành lập các bữa tiệc với các anh hùng của họ và đưa họ vào các cuộc phiêu lưu cùng nhau.

Để cung cấp trải nghiệm người dùng tốt nhất, tôi sẽ cập nhật Hoạt động Trực tiếp để hiển thị các sự kiện cho tất cả các anh hùng trong bữa tiệc.

Để đạt được điều này, tôi sẽ giới thiệu một máy chủ để theo dõi cuộc phiêu lưu, thay vì thực hiện nó trên thiết bị.

Máy chủ sẽ chịu trách nhiệm cập nhật các Hoạt động Trực tiếp.

Và vì các tính toán được thực hiện trên máy chủ, ứng dụng sẽ không cần thời gian chạy tiền cảnh để cập nhật Hoạt động Trực tiếp.

Điều này sẽ làm giảm mức độ ảnh hưởng đến thời lượng pin của người dùng.

Tôi nghĩ cập nhật Hoạt động Trực tiếp với thông báo đẩy ActivityKit là một cách tuyệt vời để triển khai tính năng này.

Trong phiên này, điều đầu tiên tôi sẽ đề cập đến là sự chuẩn bị bạn cần thực hiện để cho phép cập nhật Hoạt động Trực tiếp của mình với các bản cập nhật đẩy.

Sau đó, tôi sẽ đưa bạn qua việc gửi bản cập nhật đẩy đầu tiên từ máy tính của bạn.

Thứ ba, chúng tôi sẽ thảo luận về sự khác biệt giữa các ưu tiên cập nhật và cách cảnh báo người dùng của bạn.

Cuối cùng, tôi sẽ trải qua các cải tiến bổ sung mà bạn có thể thực hiện cho các bản cập nhật đẩy của mình để đưa chúng lên cấp độ tiếp theo.

Hãy bắt đầu với việc chuẩn bị.

Trước khi bạn bắt đầu cập nhật Hoạt động Trực tiếp của mình với các bản cập nhật đẩy, thật hữu ích khi hiểu cách ứng dụng và máy chủ của bạn tương tác với dịch vụ Thông báo Đẩy của Apple.

Tất cả bắt đầu với ứng dụng của bạn.

Khi một Hoạt động Trực tiếp mới được bắt đầu, ActivityKit sẽ nhận được mã thông báo đẩy từ dịch vụ Thông báo Đẩy của Apple hay viết tắt là APN.

Mã thông báo đẩy này là duy nhất cho mỗi Hoạt động Trực tiếp mà bạn yêu cầu.

Đó là lý do tại sao ứng dụng của bạn cần gửi nó đến máy chủ của bạn trước khi nó có thể bắt đầu gửi các bản cập nhật đẩy.

Sau đó, bất cứ khi nào bạn cần cập nhật Hoạt động Trực tiếp, máy chủ của bạn sẽ gửi yêu cầu đẩy bằng mã thông báo đến APNs.

Cuối cùng, APN sẽ gửi tải trọng đến thiết bị và nó sẽ đánh thức tiện ích mở rộng tiện ích của bạn để hiển thị giao diện người dùng.

Để hỗ trợ tính năng mới này, APNs đã giới thiệu một loại đẩy liveactivity mới.

Loại đẩy này chỉ có sẵn cho các máy chủ có kết nối dựa trên mã thông báo với APN.

Để tìm hiểu thêm về việc gửi yêu cầu đẩy, hãy tham khảo tài liệu "Gửi yêu cầu thông báo đến APNs".

Để biết thêm thông tin về các kết nối dựa trên mã thông báo, hãy tham khảo "Thiết lập kết nối dựa trên mã thông báo với APN."

Bước tiếp theo là sửa đổi ứng dụng của bạn để các Hoạt động Trực tiếp của bạn được định cấu hình để nhận các bản cập nhật đẩy.

Trong Xcode, đi đến mục tiêu ứng dụng của bạn.

Trong tab "Đăng nhập & Khả năng", thêm khả năng thông báo đẩy.

Điều này sẽ cho phép ActivityKit yêu cầu mã thông báo đẩy thay mặt cho ứng dụng của bạn.

Bây giờ tôi sẽ đi sâu vào mã.

Đây là đoạn mã trong Emoji Rangers yêu cầu Hoạt động Trực tiếp.

Tôi cung cấp cho phương thức yêu cầu Hoạt động các thuộc tính của cuộc phiêu lưu và trạng thái nội dung ban đầu.

Để hỗ trợ nhận các bản cập nhật đẩy, hãy thêm tham số pushType vào phương thức và đặt giá trị của nó thành "mã thông báo".

Điều này sẽ cho ActivityKit biết để yêu cầu mã thông báo đẩy cho Hoạt động Trực tiếp của bạn khi nó được tạo.

Khi hoạt động đã được tạo, ứng dụng của bạn cần gửi mã thông báo đẩy đến máy chủ của bạn.

Có một thuộc tính pushToken trên loại Hoạt động sẽ cho phép bạn truy cập mã thông báo đẩy một cách đồng bộ.

Tuy nhiên, đừng truy cập nó ngay lập tức sau khi tạo hoạt động.

Giá trị bạn nhận được sẽ bằng không trong hầu hết thời gian.

Điều này là do yêu cầu mã thông báo đẩy là một quá trình không đồng bộ.

Ngoài ra, hệ thống có thể cập nhật mã thông báo đẩy trong suốt vòng đời của hoạt động.

Vì vậy, ứng dụng của bạn cần xử lý điều đó cho phù hợp.

Cách để xử lý đúng mã thông báo đẩy là trước tiên tạo một Nhiệm vụ không đồng bộ.

Sau đó bắt đầu một vòng lặp chờ đợi quan sát các giá trị từ chuỗi không đồng bộ pushTokenUpdates của hoạt động.

Mã bên trong vòng lặp for sẽ được thực thi bất cứ khi nào có mã thông báo đẩy mới cho Hoạt động Trực tiếp.

Điều quan trọng là sử dụng vòng lặp không đồng bộ ở đây vì nó sẽ có thể xử lý không chỉ mã thông báo đẩy đầu tiên mà còn các bản cập nhật mã thông báo đẩy tiếp theo.

Khi bạn nhận được mã thông báo, hãy chuyển đổi nó thành chuỗi thập lục phân và đăng nhập vào bảng điều khiển gỡ lỗi.

Điều này sẽ có ích trong quá trình thử nghiệm trong phần tiếp theo.

Sau đó, cuối cùng, gửi mã thông báo đẩy đến máy chủ của bạn cùng với bất kỳ dữ liệu nào khác được yêu cầu cho ứng dụng của bạn.

Mã thông báo đẩy là duy nhất cho mỗi hoạt động, vì vậy điều quan trọng là phải theo dõi chúng cho mỗi Hoạt động Trực tiếp mà người dùng bắt đầu.

Ngoài ra, khi hệ thống yêu cầu mã thông báo đẩy mới cho một hoạt động hiện có, ứng dụng của bạn sẽ được cung cấp thời gian chạy tiền cảnh để xử lý nó cho phù hợp.

Điều quan trọng là gửi mã thông báo đẩy mới đến máy chủ của bạn và vô hiệu hóa mã thông báo cũ, vì vậy các bản cập nhật đẩy tiếp theo sẽ được gửi chính xác.

Bây giờ việc chuẩn bị đã hoàn tất, đã đến lúc gửi bản cập nhật đẩy đầu tiên của bạn.

Để gửi bản cập nhật đẩy, bạn phải gửi yêu cầu HTTP đến APNs.

Yêu cầu bao gồm hai phần, tiêu đề APNs và tải trọng APNs.

Có ba tiêu đề bạn cần cung cấp ngoài các tiêu đề HTTP thông thường.

Đầu tiên là apns-push-type. Giá trị là hoạt động sống động.

Tiếp theo là apns-topic, là ID gói ứng dụng của bạn, tiếp theo là .push-type.liveactivity.

Thứ ba là apns-priority, có thể là giá trị 5 hoặc 10.

5 chỉ ra rằng yêu cầu đẩy này là mức độ ưu tiên thấp, trong khi 10 chỉ ra mức độ ưu tiên cao.

Tôi sẽ sử dụng mức độ ưu tiên cao trong quá trình thử nghiệm vì nó làm cho Hoạt động Trực tiếp cập nhật ngay lập tức.

Đối với tải trọng APN đầu tiên, bạn sẽ gửi một tải bao gồm ba trường.

Đầu tiên là "dấu thời gian", là khoảng thời gian tính bằng giây kể từ năm 1970.

Hệ thống sử dụng dấu thời gian để đảm bảo nó luôn hiển thị trạng thái nội dung mới nhất.

Thứ hai là "sự kiện."

Đó là hành động bạn muốn thực hiện trong Hoạt động Trực tiếp.

Giá trị của nó là "cập nhật" hoặc "kết thúc".

Nó nên được đặt thành "cập nhật" cho yêu cầu APNs ban đầu này.

Trường thứ ba là "trạng thái nội dung".

Đây là đối tượng JSON có thể được giải mã thành loại trạng thái nội dung hoạt động của bạn.

Để đảm bảo bạn có được trạng thái nội dung ở định dạng chính xác, bạn có thể sử dụng loại JSONEncoder của Foundation từ bên trong ứng dụng của mình.

Ở đây, tôi tạo một ví dụ về Trạng thái Nội dung của Hoạt động Trực tiếp.

Sau đó tôi khởi tạo một JSONEncoder.

Cuối cùng, tôi mã hóa trạng thái nội dung thành dữ liệu JSON và ghi lại biểu diễn chuỗi của nó vào bảng điều khiển.

Đầu ra JSON này với các phím vỏ lạc đà trông giống như những gì tôi mong đợi.

Trạng thái nội dung JSON của bạn sẽ luôn được giải mã bằng cách sử dụng JSONDecoder với các chiến lược giải mã mặc định.

Vì vậy, khi mã hóa trạng thái nội dung của bạn, đừng đặt bất kỳ chiến lược mã hóa tùy chỉnh nào.

Nếu không, JSON của bạn sẽ không khớp và hệ thống sẽ không cập nhật Hoạt động Trực tiếp của bạn.

Bây giờ bạn đã biết những gì được yêu cầu trong yêu cầu đẩy, bước tiếp theo là kiểm tra việc gửi một yêu cầu.

Tôi là một fan hâm mộ lớn của việc có thể lặp lại nhanh chóng trong quá trình phát triển.

Vì vậy, tôi thích kiểm tra thông báo đẩy Hoạt động Trực tiếp mà không cần sửa đổi máy chủ của mình.

Tôi có thể đạt được điều này bằng cách gửi yêu cầu đẩy đến APNs trực tiếp từ thiết bị đầu cuối của tôi.

Để thiết lập dòng lệnh của bạn để thực hiện việc này, hãy tham khảo bài viết "Gửi thông báo đẩy bằng các công cụ dòng lệnh".

Đảm bảo rằng bạn đang làm theo hướng dẫn trong phần có tên "Gửi thông báo đẩy bằng mã thông báo".

Bạn có thể nhanh chóng xác minh rằng bạn đã thiết lập mọi thứ một cách chính xác bằng cách in biến mã thông báo xác thực.

Thông tin tiếp theo bạn cần là mã thông báo đẩy.

Trong phần trước, tôi đã thêm mã để ghi lại mã thông báo đẩy vào bảng điều khiển.

Vì vậy, đó là nơi tôi sẽ lấy nó từ.

Nếu bạn có cách tiếp cận tương tự, hãy tiếp tục và triển khai ứng dụng của bạn lên thiết bị và bắt đầu Hoạt động Trực tiếp của bạn.

Ứng dụng của bạn sẽ ghi lại mã thông báo đẩy ngay sau khi hoạt động bắt đầu.

Sao chép mã thông báo đẩy và đặt nó làm biến mã thông báo đẩy hoạt động trong thiết bị đầu cuối của bạn.

Để gửi yêu cầu APNs, bạn sẽ thực hiện một lệnh curl.

Đây là một cái mà tôi đã xây dựng cho Hoạt động Trực tiếp phiêu lưu.

Tiêu đề "apns-topic" được đặt thành ID gói của ứng dụng theo sau là hậu tố loại đẩy.

Sau đó, tiêu đề "apns-push-type" được đặt thành liveactivity.

Thứ ba, "apns-priority" được đặt thành 10, vì vậy yêu cầu của tôi sẽ được gửi ngay lập tức.

Tiêu đề HTTP cuối cùng, "ủy quyền", được đặt thành "người mang" theo sau là biến mã thông báo xác thực.

Đối với dữ liệu, nó chứa toàn bộ tải trọng APNs.

Tôi đang sử dụng lệnh ngày tháng để tự động tạo dấu thời gian để đảm bảo con số chính xác đến giây.

Cuối cùng, đối với URL, hãy đảm bảo rằng bạn đang sử dụng HTTP2.

Và ở cuối URL, tôi tham khảo biến mã thông báo đẩy hoạt động được thiết lập ở bước trước.

Và thế là xong.

Khi bạn thực hiện lệnh curl này, Live Activity của bạn sẽ được cập nhật với trạng thái nội dung mới được cung cấp trong tải trọng.

Đôi khi, bạn có thể thấy các tình huống mà Hoạt động Trực tiếp của bạn không cập nhật khi bạn mong đợi.

Điều đầu tiên cần đảm bảo là không có phản hồi lỗi khi thực hiện lệnh curl.

Một lỗi có thể chỉ ra một trường không chính xác trong yêu cầu hoặc đã xảy ra sự cố khi thiết lập môi trường của bạn.

Nếu APNs trả về phản hồi thành công, nhưng Hoạt động Trực tiếp của bạn vẫn không cập nhật, thì bạn có thể sử dụng ứng dụng Bảng điều khiển để xem nhật ký thiết bị và cố gắng phân loại vấn đề.

Các quy trình có thể có nhật ký liên quan là liveactivitiesd, apsd và chronod.

Khi bạn hài lòng với cách hoạt động trực tiếp của mình được cập nhật với thông báo đẩy, sẽ đến lúc bạn sửa đổi máy chủ của mình để bắt đầu gửi các bản cập nhật đẩy thực sự.

Và điều đó đưa tôi đến một phần quan trọng trong việc thiết kế trải nghiệm người dùng, mức độ ưu tiên và cảnh báo của bạn.

Để đảm bảo trải nghiệm người dùng tốt nhất, điều quan trọng là bạn phải chọn mức độ ưu tiên đẩy chính xác cho mỗi bản cập nhật.

Ưu tiên bạn nên luôn cân nhắc sử dụng trước tiên là ưu tiên thấp.

Các bản cập nhật ưu tiên thấp được cung cấp một cách cơ hội, điều này làm giảm tác động đến thời lượng pin của người dùng.

Tuy nhiên, điều này có nghĩa là Hoạt động Trực tiếp có thể không được cập nhật ngay lập tức khi yêu cầu đẩy được gửi đi.

Vì vậy, bạn nên sử dụng mức độ ưu tiên thấp cho các bản cập nhật ít nhạy cảm hơn về thời gian.

Đối với Hoạt động Trực tiếp phiêu lưu của tôi, các cập nhật như tìm kiếm chiến lợi phẩm phổ biến hoặc anh hùng chữa lành một vài điểm máu không đòi hỏi sự chú ý ngay lập tức của người dùng.

Đó là lý do tại sao họ là những ứng cử viên tuyệt vời cho việc sử dụng các bản cập nhật có mức độ ưu tiên thấp.

Một lợi ích khác của việc sử dụng mức độ ưu tiên thấp là không có giới hạn về số lượng bản cập nhật bạn có thể gửi.

Để tận dụng điều này, bạn nên sử dụng mức độ ưu tiên thấp cho phần lớn các bản cập nhật Hoạt động Trực tiếp của mình.

Mặt khác, một số bản cập nhật nhất định đòi hỏi sự chú ý ngay lập tức của người dùng, chẳng hạn như khi một anh hùng bị hạ gục hoặc khi một con trùm chính bị đánh bại.

Trong những trường hợp này, tôi sẽ chọn các bản cập nhật ưu tiên cao.

Các bản cập nhật ưu tiên cao được gửi ngay lập tức.

Đó là lý do tại sao chúng hoàn hảo cho các bản cập nhật nhạy cảm về thời gian.

Tuy nhiên, do tác động của chúng đến thời lượng pin của người dùng, hệ thống áp đặt ngân sách tùy thuộc vào tình trạng thiết bị.

Nếu ứng dụng của bạn vượt quá ngân sách, hệ thống sẽ điều chỉnh các bản cập nhật đẩy của bạn và nó sẽ ảnh hưởng đáng kể đến trải nghiệm người dùng của bạn.

Bạn biết rõ nhất về ứng dụng của mình, vì vậy điều quan trọng là bạn phải cân nhắc cẩn thận mức độ ưu tiên nào bạn nên sử dụng cho bản cập nhật nào.

Trong Emoji Rangers, tôi đang giới thiệu một kiểu phiêu lưu đặc biệt, nơi cả nhóm chiến đấu với từng con trùm chính.

Để cung cấp trải nghiệm người dùng tốt nhất cho Hoạt động Trực tiếp chuyên sâu này, tôi cần máy chủ gửi các lần đẩy ưu tiên cao thường xuyên để cập nhật.

Để hỗ trợ điều này, tôi sẽ bật tính năng cập nhật thường xuyên Hoạt động Trực tiếp cho ứng dụng.

Bật tính năng này sẽ cho phép ứng dụng của tôi nhận được ngân sách cập nhật cao hơn, vì vậy các bản cập nhật Hoạt động Trực tiếp của tôi ít có khả năng bị điều chỉnh hơn.

Để áp dụng tính năng này, tất cả những gì tôi phải làm là thêm một khóa mới vào danh sách Thông tin có tên NSSupportsLiveActivitiesFrequentUpdates và đặt giá trị của nó thành CÓ.

Người dùng có thể vô hiệu hóa cập nhật thường xuyên độc lập với Hoạt động Trực tiếp trong Cài đặt.

Vì vậy, bạn có thể phát hiện trạng thái của tính năng cập nhật thường xuyên bằng cách truy cập thuộc tính ActivityAuthorizationInfo frequentPushesEnabled.

Máy chủ của bạn nên điều chỉnh tần suất cập nhật của nó theo giá trị này, vì vậy hãy đảm bảo rằng bạn đang gửi nó đến máy chủ của mình trước khi nó bắt đầu gửi các bản cập nhật đẩy.

Bạn chỉ cần kiểm tra giá trị này một lần sau khi một hoạt động đã bắt đầu.

Nếu giá trị này thay đổi, hệ thống sẽ kết thúc tất cả các hoạt động đang diễn ra, vì vậy máy chủ của bạn không cần phải lo lắng về việc các bản cập nhật thường xuyên bị chuyển đổi trong suốt vòng đời của hoạt động.

Trong hoạt động trực tiếp phiêu lưu, khi một anh hùng bị hạ gục, ngoài việc cập nhật ngay lập tức, tôi cũng muốn thu hút sự chú ý của người dùng, để họ có thể nhanh chóng vào ứng dụng và sử dụng một lọ thuốc chữa bệnh.

Để làm điều này, tôi sẽ thêm một đối tượng "cảnh báo" bổ sung với ba trường vào tải trọng.

"Tiêu đề" sẽ là tiêu đề của thông báo.

"Cơ thể" sẽ là một thông điệp ngắn về bản cập nhật.

"Âm thanh" sẽ cho biết âm thanh được phát khi cảnh báo được kích hoạt.

Emoji Rangers có hỗ trợ nhiều ngôn ngữ, vì vậy chỉ gửi cảnh báo bằng tiếng Anh là không lý tưởng, nhưng việc xử lý bản địa hóa trên máy chủ của tôi rất khó khăn.

Rất may, có một cách khác để đặt các trường "tiêu đề" và "cơ thể" của đối tượng cảnh báo.

Thay vì truyền một chuỗi, tôi có thể đặt nó làm đối tượng chuỗi được bản địa hóa.

Trường "loc-key" sẽ là khóa bản địa hóa có thể được tìm thấy trong các tệp bản địa hóa ứng dụng của bạn.

Trường "loc-args" sẽ là một danh sách các giá trị sẽ được chèn vào chuỗi cục bộ.

Bây giờ thiết bị sẽ tự động bản địa hóa thông báo của bạn tùy thuộc vào ngôn ngữ của người dùng.

Để thêm dấu ấn cuối cùng vào cảnh báo, tôi muốn thêm âm thanh tùy chỉnh cho các bản cập nhật khác nhau.

Để đạt được điều này, trước tiên, tôi cần thêm các tệp âm thanh vào mục tiêu ứng dụng của mình làm tài nguyên.

Sau đó đặt trường "âm thanh" của đối tượng cảnh báo thành tên tệp âm thanh của tôi.

Và thế là xong. Bây giờ cảnh báo của tôi trông và nghe rất tuyệt.

Bây giờ tôi sẽ thực hiện các cải tiến để thực sự đánh bóng trải nghiệm người dùng Live Activity.

Khi cuộc phiêu lưu kết thúc, tôi muốn kết thúc Hoạt động Trực tiếp và loại bỏ nó sau một khoảng thời gian nhất định.

Tôi sẽ làm điều này bằng cách gửi một tải trọng đẩy với sự kiện được thiết lập để kết thúc.

Tôi cung cấp "ngày sa thải" tùy chỉnh vì tôi muốn kiểm soát khi nào Hoạt động Trực tiếp nên được xóa khỏi màn hình khóa.

Bạn có thể bỏ qua trường này để hệ thống quyết định khi nào nên loại bỏ Hoạt động Trực tiếp của bạn.

Giá trị cho "ngày sa thải" phải là khoảng thời gian tính bằng giây kể từ năm 1970.

Tôi cũng đang cung cấp trạng thái nội dung cuối cùng để cung cấp bản cập nhật cuối cùng cho Hoạt động Trực tiếp.

Đây cũng là tùy chọn và nếu bị bỏ qua, hoạt động sẽ tiếp tục hiển thị trạng thái nội dung trước đó cho đến khi nó bị loại bỏ.

Đôi khi, thiết bị của người dùng có thể không nhận được thông báo đẩy.

Và Cuộc phiêu lưu Hoạt động Trực tiếp có thể vẫn đang hiển thị giá trị sức khỏe lỗi thời.

Trong những tình huống này, tôi muốn cảnh báo người dùng trong giao diện người dùng Hoạt động Trực tiếp rằng nó có thể đang hiển thị thông tin không chính xác.

Để đạt được điều này, tôi thêm một trường "stale-date" vào tải trọng.

Hệ thống sẽ sử dụng ngày này để quyết định khi nào hiển thị chế độ xem cũ của bạn.

Tôi có thể cung cấp chế độ xem cũ của mình từ Cấu hình Hoạt động được khai báo trong tiện ích mở rộng.

Tất cả những gì tôi phải làm là làm cho chế độ xem của mình phản ứng với giá trị của thuộc tính isStale trên ActivityViewContext.

Khi có nhiều Hoạt động Trực tiếp phiêu lưu cùng một lúc, tôi muốn đảm bảo rằng chúng được sắp xếp chính xác trên Màn hình Khóa.

Những cái có cập nhật quan trọng hơn nên ở gần đầu và cái quan trọng nhất nên ở Đảo Động.

Tôi có thể sắp xếp điều này bằng cách cung cấp trường "điểm liên quan" tùy chọn.

Con số cao hơn cho thấy mức độ liên quan cao hơn.

Bây giờ bạn đã biết cách cập nhật Hoạt động Trực tiếp của mình bằng thông báo đẩy, đã đến lúc thêm nó vào ứng dụng của bạn.

Điều đầu tiên cần làm là định cấu hình máy chủ và ứng dụng của bạn để hỗ trợ thông báo đẩy ActivityKit.

Sau đó kiểm tra việc gửi các bản cập nhật đẩy từ thiết bị đầu cuối của bạn để lặp lại một cách nhanh chóng.

Khi bạn hài lòng với điều đó, hãy bắt đầu triển khai hỗ trợ từ đầu đến cuối trên máy chủ của bạn.

Trong khi đó, bạn nên ghi nhớ trải nghiệm người dùng của mình, sử dụng các ưu tiên thích hợp và cảnh báo người dùng nếu cần thiết.

Tôi hy vọng bạn thích tìm hiểu về các Hoạt động Trực tiếp với tôi.

Tôi nóng lòng muốn xem tất cả những ý tưởng sáng tạo mà bạn sẽ mang đến Dynamic Island và Lock Screen.

Cảm ơn vì đã xem.

♪ ♪