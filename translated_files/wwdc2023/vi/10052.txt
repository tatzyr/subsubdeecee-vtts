10052

♪ ♪

Adam: Xin chào, tôi là Adam.

Trong video này, tôi sẽ đề cập đến cách ứng dụng của bạn có thể giúp mọi người quản lý thời gian của họ với Lịch và EventKit.

Đầu tiên, tôi sẽ xem xét một số cách mà các ứng dụng có thể tích hợp với Lịch và đưa ra cái nhìn tổng quan về các khuôn khổ liên quan.

Sau đó, tôi sẽ xem qua một số ví dụ cụ thể về cách sử dụng các khuôn khổ này để triển khai các tính năng phổ biến, như thêm sự kiện, tìm nạp các sự kiện với toàn quyền truy cập và triển khai tiện ích mở rộng hội nghị ảo.

Mọi người dựa vào lịch của họ để theo dõi thời gian và kế hoạch cho tương lai của họ, nhưng Lịch không chỉ là một ứng dụng.

Có những vai trò khác nhau mà các ứng dụng có thể lấp đầy khi tích hợp với Lịch và khi kết hợp với nhau, những vai trò khác nhau này cung cấp trải nghiệm Lịch phong phú hơn.

Một số ứng dụng hỗ trợ đặt chỗ, mua vé hoặc sắp xếp các cuộc gặp gỡ.

Họ tham gia bằng cách thêm các sự kiện.

Một số ứng dụng tham gia bằng cách hiển thị các sự kiện, có thể cho tiện ích lịch tùy chỉnh hoặc kế hoạch.

Các ứng dụng khác đóng góp theo cả hai hướng.

Họ giúp mọi người quản lý lịch trình của họ bằng cách xem và chỉnh sửa các sự kiện.

Các ứng dụng hỗ trợ cuộc gọi thoại hoặc video cũng có thể tham gia.

Tiện ích mở rộng hội nghị ảo không chỉ cải thiện trải nghiệm trong ứng dụng Lịch mà còn cung cấp lối tắt quay lại ứng dụng của bạn.

Tất cả những thứ này khớp với nhau để cung cấp trải nghiệm gắn kết để quản lý thời gian.

Sau đó, tôi sẽ xem qua một số ví dụ cụ thể để bắt đầu trong từng lĩnh vực này.

Có hai khuôn khổ mà bạn có thể sử dụng để tích hợp với Lịch.

Khung EventKit được sử dụng để làm việc trực tiếp với dữ liệu lịch.

EventKitUI là một khung iOS và Mac Catalyst cung cấp bộ điều khiển chế độ xem để hiển thị giao diện người dùng lịch trong ứng dụng của bạn.

Chúng ta hãy xem xét kỹ hơn từng...

Bắt đầu với một số loại cơ bản trong EventKit.

EKEventStore là đầu mối liên hệ chính cho dữ liệu lịch của bạn.

Bạn sử dụng một cửa hàng sự kiện để yêu cầu quyền truy cập và để tìm nạp hoặc lưu.

Bạn chỉ nên có một trong những thứ này cho đơn đăng ký của mình.

Lớp EKEvent đại diện cho một sự kiện cụ thể và nó có các thuộc tính như tiêu đề, ngày bắt đầu, ngày kết thúc và địa điểm.

Mỗi sự kiện thuộc về một lịch, được đại diện bởi lớp EKCalendar.

Lịch có tiêu đề và màu sắc, có thể hữu ích cho việc tô màu các sự kiện.

Cuối cùng, mỗi tài khoản lịch được đại diện bởi một EKSource, là một tập hợp các lịch.

Các nguồn rất hữu ích cho việc nhóm lịch trong giao diện người dùng của bạn.

EventKit là một khuôn khổ nền tảng để tương tác với dữ liệu lịch.

EventKitUI được xây dựng dựa trên EventKit để cung cấp một số chế độ xem tích hợp hữu ích.

Có ba bộ điều khiển chế độ xem được cung cấp bởi EventKitUI.

EKEventEditViewController hiển thị một trình chỉnh sửa sự kiện.

Sử dụng cái này để thêm một sự kiện mới hoặc thay đổi một sự kiện hiện có.

EKEventViewController hiển thị chi tiết sự kiện.

Sử dụng cái này để hiển thị thông tin trong ứng dụng của bạn về một sự kiện hiện có.

Và EKCalendarChooser hiển thị danh sách lịch và hỗ trợ lựa chọn đơn hoặc nhiều lựa chọn.

Sử dụng điều này để cho phép mọi người chọn lịch để thêm sự kiện hoặc chọn lịch nào sẽ hiển thị trong ứng dụng của bạn.

Lịch là riêng tư, vì vậy hệ thống ngăn các ứng dụng đọc hoặc ghi các sự kiện Lịch mà không được phép.

Có ba cấp độ truy cập mà một ứng dụng có thể có cho Lịch: Không có quyền truy cập, quyền truy cập chỉ ghi hoặc quyền truy cập đầy đủ.

Các ứng dụng không có quyền truy cập lịch có thể thêm các sự kiện bằng cách sử dụng EventKitUI hoặc Siri Event Suggestions.

Các ứng dụng có quyền truy cập chỉ ghi có thể thêm các sự kiện trực tiếp bằng EventKit.

Và các ứng dụng có toàn quyền truy cập có thể tìm nạp hoặc sửa đổi các sự kiện hiện có, truy cập lịch hiện có và tạo lịch mới.

Một trong những cách phổ biến nhất để tích hợp với Lịch là thêm các sự kiện mới.

Các sự kiện có thể được thêm vào lịch theo một vài cách khác nhau.

Sử dụng EventKitUI hoặc Siri Event Suggestions để thêm một sự kiện tại một thời điểm.

Hoặc, để lưu trực tiếp các sự kiện, hãy sử dụng EventKit.

Cách đơn giản nhất để thêm một sự kiện vào lịch là để EventKitUI thực hiện hầu hết công việc.

Trình bày một EKEventEditViewController để hiển thị một biên tập viên với các chi tiết sự kiện được điền đầy đủ.

Điều này cho mọi người cơ hội chọn lịch hoặc thực hiện các thay đổi khác trước khi quyết định có lưu sự kiện hay không.

Trong iOS 17, giao diện người dùng này chạy trong một quy trình riêng biệt, có nghĩa là bạn không cần yêu cầu quyền truy cập Lịch.

Thêm một sự kiện với EventKitUI là một quá trình gồm bốn bước.

Đầu tiên, tạo một cửa hàng sự kiện.

Tiếp theo, tạo một sự kiện và điền thông tin chi tiết.

Sau đó tạo một bộ điều khiển chế độ xem được cấu hình để chỉnh sửa sự kiện.

Và cuối cùng, trình bày bộ điều khiển chế độ xem.

Hãy xem qua điều này chi tiết hơn với một số mã.

Bắt đầu bằng cách tạo một eventStore.

Tiếp theo, tạo một sự kiện và điền thông tin chi tiết.

Các chi tiết bạn đặt ở đây sẽ được sử dụng trong giao diện người dùng của trình chỉnh sửa.

Khi trình chỉnh sửa được trình bày, mọi người sẽ có cơ hội thực hiện các thay đổi, nhưng lý tưởng nhất, họ chỉ cần nhấn vào nút thêm để xác nhận, vì vậy việc điền đúng chi tiết giúp họ tiết kiệm thời gian.

Mọi sự kiện đều cần một tiêu đề.

Tiêu đề được sử dụng ở nhiều nơi bao gồm các tiện ích và thông báo, vì vậy hãy giữ nó đơn giản.

Các thuộc tính quan trọng nhất là ngày bắt đầu và ngày kết thúc.

Sử dụng các thành phần ngày để tạo ngày bắt đầu.

Khi bạn đã có ngày bắt đầu, hãy tính ngày kết thúc bằng cách thêm thời lượng.

Sử dụng các loại Lịch và Thành phần Ngày của Foundation để tính toán ngày, nếu không, bạn sẽ đạt được kết quả đáng ngạc nhiên xung quanh Giờ tiết kiệm ánh sáng ban ngày.

Ở đây mẫu thêm hai giờ vào ngày bắt đầu của chúng tôi.

Nếu sự kiện diễn ra trong một múi giờ cụ thể, thì hãy đảm bảo đặt nó.

Múi giờ mặc định sẽ là múi giờ hệ thống hiện tại.

Đặt một địa điểm để cho mọi người biết sự kiện diễn ra ở đâu.

Bao gồm địa chỉ đầy đủ hoặc sử dụng tay cầm MapKit sẽ kích hoạt các tính năng như đề xuất Bản đồ và Cảnh báo Thời gian để lại.

Cuối cùng, thêm một số ghi chú để cung cấp thêm một số chi tiết.

Khi bạn đã thiết lập các thuộc tính sự kiện, bước tiếp theo là tạo EKEventEditViewController.

Chỉ định các thuộc tính của cửa hàng sự kiện và sự kiện.

Trong trình chỉnh sửa, mọi người có thể thêm sự kiện hoặc hủy.

Nếu bạn muốn biết liệu họ có thêm sự kiện hay không, thì hãy sử dụng thuộc tính đại diện và triển khai giao thức EKEventEditViewDelegate.

Cuối cùng, trình bày biên tập viên.

Tại thời điểm này, sự kiện vẫn chưa có trong lịch.

Nhấn vào nút Thêm sẽ lưu nó, trong khi nhấn vào hủy sẽ loại bỏ trình chỉnh sửa mà không lưu bất cứ thứ gì.

Để có ví dụ đầy đủ hơn về việc thêm các sự kiện với EventKitUI, hãy xem mục tiêu "DropInLessons" trong mã mẫu "Truy cập Lịch bằng EventKit và EventKitUI".

Một cách khác để thêm các sự kiện vào lịch là sử dụng Đề xuất Sự kiện Siri để đặt chỗ trong ứng dụng của bạn.

API Đề xuất Sự kiện Siri là một phần của Khung Ý định.

Nó không yêu cầu nhắc nhở truy cập Lịch và nó không hiển thị bất kỳ giao diện người dùng nào trong ứng dụng của bạn.

Thay vào đó, những sự kiện này sẽ xuất hiện trong hộp thư đến Lịch như một lời mời.

Sau đó chúng có thể được thêm vào lịch hoặc bỏ qua.

Đề xuất sự kiện Siri hỗ trợ đặt chỗ cho nhà hàng hoặc khách sạn, đặt chỗ du lịch như chuyến bay hoặc xe hơi cho thuê và các sự kiện có vé như buổi hòa nhạc hoặc sự kiện thể thao.

Nếu đặt chỗ sau đó bị hủy hoặc sửa đổi, các sự kiện có thể được cập nhật.

Sử dụng Siri Event Suggestions API là một quá trình gồm bốn bước.

Đầu tiên, tạo một INReservation.

Sau đó, gói đặt chỗ trong một ý định và phản hồi.

Tiếp theo, tạo một INInteraction.

Cuối cùng, quyên góp sự tương tác cho hệ thống.

Hãy đi sâu vào một số mã mẫu.

Đặt chỗ yêu cầu một tài liệu tham khảo duy nhất mà hệ thống sẽ sử dụng để xác định nó.

Tạo tham chiếu đó bằng cách tạo một phiên bản của INSpeakableString với một mã định danh từ vựng duy nhất và một cụm từ được nói.

Cụm từ này có thể được sử dụng để chỉ đặt chỗ này khi nói chuyện với Siri.

Sử dụng INDateComponentsRange để đặt thời gian bắt đầu và kết thúc đặt chỗ.

Cung cấp cho sự kiện một địa điểm bằng cách sử dụng loại CLPlacemark.

Sau đó, kết hợp tất cả lại với nhau bằng cách tạo một thể hiện của một trong các lớp con của INReservation.

Để đặt chỗ nhà hàng, hãy sử dụng INRestaurantReservation.

Trình khởi tạo này có thêm một vài đối số tùy chọn không được hiển thị và mỗi lớp con có các tùy chọn cụ thể riêng.

Kiểm tra tài liệu để tìm hiểu thêm.

Bước tiếp theo là tạo một INGetReservationDetailsIntent với tham chiếu đặt chỗ.

Sau đó tạo một INGetReservationDetailsIntentResponse với đối tượng đặt trước.

Tiếp theo, tạo một INInteraction với ý định và phản hồi.

Cuối cùng, gọi phương thức quyên góp của tương tác.

Ví dụ này chỉ làm trầy xước bề mặt của những gì có thể được thực hiện với Đề xuất Sự kiện Siri.

Để biết thêm thông tin về việc tạo Đề xuất Sự kiện Siri, hãy xem video "Tối rộng phạm vi tiếp cận của bạn với Đề xuất Sự kiện Siri" từ WWDC20.

Đề xuất sự kiện EventKitUI hoặc Siri cung cấp trải nghiệm tốt nhất để thêm các sự kiện.

Chỉ sử dụng quyền truy cập chỉ ghi nếu ứng dụng của bạn cần hiển thị giao diện người dùng chỉnh sửa tùy chỉnh, thêm nhiều sự kiện cùng một lúc hoặc thêm sự kiện vào lịch mà không cần người dùng tương tác.

Để yêu cầu quyền truy cập chỉ ghi, hãy bao gồm khóa NSCalendarsWriteOnlyAccess UsageDescription trong Info.plist của bạn để giải thích lý do tại sao ứng dụng của bạn cần truy cập.

Chuỗi này sẽ được hiển thị trong lời nhắc yêu cầu.

Đây là lời nhắc cho ứng dụng mẫu của chúng tôi: "Lưu các bài học lặp lại vào lịch mà bạn chọn."

Truy cập chỉ ghi cũng có một số hạn chế.

Đối với một người, mọi người có thể chọn không cho phép truy cập.

Nếu quyền truy cập được cấp, thì ứng dụng vẫn không thể đọc bất kỳ sự kiện hiện có nào từ lịch, bao gồm các sự kiện được thêm vào bởi cùng một ứng dụng.

Ứng dụng cũng không thể đọc danh sách lịch hoặc tạo lịch mới.

Quyền truy cập chỉ ghi là mới trong iOS 17 và macOS Sonoma.

Để tìm hiểu thêm về cách điều này ảnh hưởng đến các ứng dụng hiện có, hãy xem video "Có gì mới trong Quyền riêng tư".

Thêm một sự kiện mới với quyền truy cập chỉ ghi sẽ trông tương tự như thêm một sự kiện mới bằng EventKitUI.

Nó bắt đầu giống nhau: Tạo một cửa hàng sự kiện.

Sau đó yêu cầu quyền truy cập chỉ ghi.

Nếu quyền truy cập được cấp, hãy tạo một sự kiện mới và điền thông tin chi tiết.

Cuối cùng, hãy lưu sự kiện.

Hãy kiểm tra điều đó chi tiết hơn.

Bắt đầu bằng cách tạo một cửa hàng sự kiện.

Sau đó, yêu cầu quyền truy cập chỉ ghi bằng cách gọi phương thức requestWriteOnlyAccessToEvents.

Giá trị trả về cho biết liệu quyền truy cập có được cấp hay không.

Mọi người có thể chọn từ chối quyền truy cập, vì vậy hãy đảm bảo xử lý điều đó một cách duyên dáng.

Yêu cầu truy cập rất có thể sẽ được chấp thuận khi mọi người hiểu tại sao ứng dụng của bạn cần quyền truy cập, vì vậy bạn nên yêu cầu quyền truy cập khi ai đó lần đầu tiên tương tác với một tính năng yêu cầu nó.

Tiếp theo, tạo một sự kiện và điền thông tin chi tiết.

Có một sự khác biệt quan trọng khác ở đây.

Khi sử dụng EventKitUI, các chi tiết bạn điền sẽ hiển thị trong trình chỉnh sửa và mọi thứ không được điền đều có giá trị mặc định.

Khi lưu một sự kiện trực tiếp bằng EventKit, sẽ không có gì được điền cho bạn.

Những gì bạn đặt là những gì sẽ được lưu lại.

Có một số thuộc tính phải được điền vào, nếu không việc lưu sẽ thất bại.

Một tài sản bắt buộc là lịch.

Sử dụng thuộc tính defaultCalendarForNewEvents của cửa hàng sự kiện để sử dụng lịch được định cấu hình làm mặc định trong cài đặt.

Các thuộc tính bắt buộc khác là tiêu đề, ngày bắt đầu và ngày kết thúc.

Mọi thứ khác là tùy chọn, nhưng tốt nhất là điền càng nhiều càng tốt.

Khi các chi tiết được điền vào, hãy lưu sự kiện bằng phương pháp lưu của cửa hàng sự kiện.

Để xem ví dụ đầy đủ về việc thêm các sự kiện với EventKit, hãy xem mục tiêu "Lặp lại bài học" trong dự án mẫu "Truy cập Lịch bằng EventKit và EventKitUI".

Các ứng dụng muốn thêm sự kiện vào lịch nên sử dụng EventKitUI, Đề xuất sự kiện Siri hoặc quyền truy cập chỉ ghi.

Đối với rất ít ứng dụng cần đọc dữ liệu lịch, có toàn quyền truy cập.

Chỉ yêu cầu quyền truy cập đầy đủ nếu ứng dụng của bạn có tính năng cốt lõi yêu cầu hiển thị, cập nhật hoặc xóa các sự kiện hiện có.

Để yêu cầu quyền truy cập đầy đủ, hãy bao gồm khóa NSCalendars FullAccessUsageDescription trong Info.plist của bạn.

Chuỗi này sẽ được hiển thị trong lời nhắc yêu cầu.

Lịch chứa thông tin nhạy cảm và lời nhắc truy cập đầy đủ mô tả lượng dữ liệu được bao gồm.

Mọi người cần rất nhiều sự tin tưởng để cho phép một ứng dụng đọc lịch của họ.

Nếu mọi người chưa tin tưởng ứng dụng của bạn, thì yêu cầu có thể bị từ chối.

Chỉ yêu cầu quyền truy cập đầy đủ nếu nó cần thiết cho trải nghiệm cốt lõi của ứng dụng của bạn và chỉ yêu cầu tại thời điểm rõ ràng lý do tại sao cần truy cập.

Nếu ứng dụng của bạn cần quyền truy cập đầy đủ cho một tính năng cốt lõi, thì có lẽ nó sẽ cần tìm nạp các sự kiện.

Để làm điều này, trước tiên hãy tạo một cửa hàng sự kiện.

Tiếp theo, yêu cầu quyền truy cập đầy đủ.

Sau đó, tạo một vị ngữ.

Và cuối cùng, lấy các sự kiện từ cửa hàng sự kiện.

Hãy kiểm tra mã cho điều đó.

Cũng như các ví dụ khác của chúng tôi, hãy bắt đầu bằng cách tạo một cửa hàng sự kiện.

Các ứng dụng chỉ nên có một cửa hàng sự kiện, vì vậy hãy đảm bảo sử dụng lại cái này.

Tiếp theo, yêu cầu quyền truy cập đầy đủ bằng cách gọi phương thức requestFullAccessToEvents.

Điều này sẽ hiển thị lời nhắc và trả về xem quyền truy cập có được cho phép hay không.

Lời nhắc truy cập đầy đủ sẽ bị từ chối thường xuyên hơn, vì vậy hãy đảm bảo xử lý điều đó.

Khi bạn có toàn quyền truy cập, hãy tạo một vị ngữ bằng cách gọi phương thức predicateForEvents của cửa hàng sự kiện.

Vị ngữ mô tả sự kiện nào bạn muốn tìm nạp với phạm vi ngày và danh sách lịch tùy chọn.

Mã này sử dụng một phạm vi cho tháng hiện tại.

Sử dụng phạm vi ngắn nhất có thể để có hiệu suất tốt nhất.

Nếu đối số lịch bị bỏ lại bằng không, kết quả sẽ bao gồm các sự kiện từ tất cả các lịch.

Cuối cùng, tìm nạp các sự kiện bằng cách chuyển vị ngữ cho phương thức events(matching:) của cửa hàng sự kiện, phương thức này trả về một mảng các sự kiện phù hợp.

Các sự kiện trong mảng này không nhất thiết phải được sắp xếp theo thứ tự, vì vậy hãy sắp xếp kết quả nếu cần.

Nếu bạn muốn tìm hiểu ví dụ đầy đủ về việc tìm nạp các sự kiện, hãy xem mục tiêu "Sự kiện hàng tháng" trong dự án mẫu "Truy cập Lịch bằng EventKit và EventKitUI".

Để hỗ trợ các bản phát hành sớm hơn iOS 17 và macOS Sonoma, hãy thực hiện kiểm tra tính khả dụng trong thời gian chạy.

Gọi các phương thức requestAccess mới trên iOS 17 và macOS Sonoma và hơn thế nữa.

Trên các hệ điều hành trước đó, hãy gọi phương thức requestAccess kế thừa.

Các chuỗi sử dụng bổ sung được yêu cầu trước iOS 17 hoặc macOS Sonoma.

Bao gồm khóa NSCalendarsUsageDescription để yêu cầu quyền truy cập lịch.

Các ứng dụng sử dụng EventKitUI cũng cần bao gồm khóa NSContactsUsageDescription vì EventKitUI sẽ yêu cầu quyền truy cập danh bạ cho ứng dụng.

Nếu một ứng dụng thiếu các chuỗi này khi yêu cầu quyền truy cập, thì nó sẽ gặp sự cố.

Cho đến nay, chúng tôi đã đề cập đến một số cách để thêm sự kiện và cách tìm nạp sự kiện, nhưng làm việc với các sự kiện không phải là cách duy nhất để tích hợp với Lịch.

Nếu ứng dụng của bạn hỗ trợ cuộc gọi thoại hoặc video, hãy sử dụng tiện ích mở rộng hội nghị ảo để cho phép mọi người thêm cuộc gọi của bạn trực tiếp vào sự kiện của họ.

Có hai cách mà các tiện ích mở rộng này được sử dụng.

Khi thêm một địa điểm vào một sự kiện, các tùy chọn hội nghị ảo tùy chỉnh sẽ xuất hiện trong bộ chọn vị trí.

Ví dụ này có các tùy chọn được cung cấp bởi các tiện ích mở rộng hội nghị ảo FaceTime và Skype.

Nhấn vào một trong những thứ này sẽ thêm hội nghị ảo đó vào sự kiện.

Một sự kiện có hội nghị ảo sẽ hiển thị tùy chọn tham gia tùy chỉnh trong chi tiết sự kiện.

Tạo một phần mở rộng hội nghị ảo chỉ mất vài bước.

Đầu tiên, tạo một mục tiêu Mở rộng Hội nghị Ảo mới trong Xcode.

Sau đó, có hai phương pháp trong giao thức mở rộng để thực hiện.

Triển khai fetchAvailableRoomTypes để cung cấp các loại phòng có sẵn của bạn, và sau đó triển khai fetchVirtualConference để cung cấp một đối tượng hội nghị ảo cho một loại phòng đã chọn.

Hãy xem qua một ví dụ.

Đầu tiên, tạo một mục tiêu mở rộng Hội nghị Ảo trong Xcode.

Mục tiêu mới sẽ có một lớp con bị bỏ rơi của EKVirtualConferenceProvider.

Phương pháp đầu tiên để ghi đè là fetchAvailableRoomTypes.

Các loại phòng được hiển thị trong bộ chọn vị trí.

Chọn một tiêu đề cho mỗi loại phòng.

Điều này sẽ được hiển thị trong giao diện người dùng bên cạnh biểu tượng ứng dụng của bạn.

Cũng chọn một mã định danh duy nhất cho mỗi loại phòng.

Mã định danh được sử dụng để cho tiện ích mở rộng của bạn biết loại phòng nào đã được chọn.

Tạo một phiên bản của EKVirtualConferenceRoomTypeDescriptor bằng cách sử dụng tiêu đề và mã định danh.

Nếu ứng dụng của bạn hỗ trợ nhiều loại phòng, thì hãy tạo một ví dụ cho mỗi loại.

Cuối cùng, trả lại một loạt các loại phòng của bạn.

Phương pháp tiếp theo để thực hiện là fetchVirtualConference.

Điều này được gọi khi một trong các loại phòng được chọn.

Đối số định danh cho bạn biết phòng nào đã được chọn.

Các hội nghị ảo có một hoặc nhiều bộ mô tả URL, cho Lịch biết cách tham gia.

Tạo một EKVirtualConferenceURLDescriptor với URL để mở và một tiêu đề tùy chọn.

Sử dụng Liên kết chung cho URL của bạn để cho phép ứng dụng của bạn được mở trực tiếp.

Tiêu đề giúp phân biệt giữa nhiều tùy chọn tham gia.

Ở đây nó không cần thiết bởi vì chỉ có một cách để tham gia.

Cung cấp bất kỳ thông tin bổ sung nào trong một chuỗi chi tiết.

Văn bản này sẽ được bao gồm trong phần hội nghị ảo đặc biệt của giao diện người dùng chi tiết sự kiện.

Cuối cùng, kết hợp tất cả những điều này lại với nhau để tạo và trả lại một EKVirtualConferenceDescriptor.

Tiêu đề ở đây giúp phân biệt giữa nhiều loại phòng.

Ví dụ này chỉ có một loại phòng, vì vậy tiêu đề còn lại là số không.

Chỉ với hai phương pháp này, ứng dụng của bạn sẽ xuất hiện trong bộ chọn vị trí của ứng dụng Lịch như một tùy chọn cho các hội nghị ảo.

Bây giờ chúng tôi đã đề cập đến một vài cách khác nhau để tích hợp với Lịch, hãy nghĩ về cách ứng dụng của bạn có thể đóng góp.

Sử dụng EventKitUI hoặc Siri Event Suggestions để thêm các sự kiện mà không cần yêu cầu quyền truy cập.

Nếu bạn cần yêu cầu quyền truy cập, hãy yêu cầu quyền truy cập tối thiểu cần thiết và chỉ khi cần thiết.

Và nếu bạn có ứng dụng cuộc gọi thoại hoặc video, thì hãy triển khai tiện ích mở rộng hội nghị ảo.

Tôi nóng lòng muốn xem ứng dụng của bạn tích hợp với Lịch như thế nào.

Cảm ơn vì đã xem.

♪ ♪