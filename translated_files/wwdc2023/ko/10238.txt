10238

♪ ♪

켈리: 안녕하세요, 제 이름은 켈리이고, 저는 에어플레이 팀의 엔지니어입니다.

세션에 오신 것을 환영합니다.

오늘, 우리는 최신 버전의 AirPlay의 일부 기능을 다루고 앱에서 놀라운 AirPlay 경험을 제공할 수 있도록 몇 가지 팁을 제공할 것입니다.

이것이 우리가 오늘 당신을 위한 의제입니다.

AirPlay의 개요부터 시작하겠습니다.

그런 다음 AirPlay 향상된 오디오 버퍼링이 제공하는 몇 가지 기능을 살펴보세요.

그리고 마지막으로, 향상된 오디오 버퍼링을 앱에 통합하는 방법을 다루겠습니다.

AirPlay는 Apple 장치에서 주변 스피커와 화면으로 비디오, 사진, 음악 등을 공유하는 가장 쉬운 방법입니다.

오늘날 가정에 에어플레이 호환 장치가 너무 많아서, 에어플레이는 그 어느 때보다 인기가 있다.

다음 방법 중 하나로 AirPlay를 사용할 수 있습니다: AirPlay Audio를 사용하면 하나 이상의 HomePod와 AirPlay 호환 스피커로 스트리밍하여 좋아하는 음악이나 팟캐스트를 완벽하게 동기화할 수 있습니다.

AirPlay Video를 사용하면 Apple 기기에서 좋아하는 영화와 프로그램을 Apple TV 또는 AirPlay 호환 스마트 TV로 고품질로 스트리밍할 수 있으며 최대 4K HDR을 지원합니다.

그리고 미러링을 사용하면 사진, 개인 비디오, 게임, 웹 페이지 또는 스프레드시트 등 Apple 장치에 있는 것을 Apple TV 또는 AirPlay 호환 스마트 TV와 공유할 수 있습니다.

당신의 친구와 가족도 Apple 기기에 있는 것을 쉽게 공유할 수 있습니다.

오늘의 비디오를 위해, 나는 AirPlay의 오디오 스트리밍 측면에 초점을 맞출 것이다.

AirPlay는 하나 이상의 장치에 원활한 오디오 스트리밍 경험을 제공합니다.

HomePod, Mac 및 Apple TV와 같은 Apple 장치에서 수억 개의 스마트 TV를 포함한 세계 최고의 브랜드의 오디오 및 비디오 제품에 이르기까지 오늘날 AirPlay 오디오를 지원하는 장치의 전체 생태계가 있습니다.

에어플레이는 매우 편리하며, 저는 개인적으로 매일 그것을 사용하는 것을 좋아합니다.

에어플레이가 계속 성장함에 따라, 개발자와 고객의 기대도 커지고 있다.

AirPlay를 한 단계 끌어올리기 위해, 더 나은 홈 시어터와 멀티 채널 경험을 제공하기 위해 새롭고 개선된 프로토콜인 AirPlay 향상된 오디오 버퍼링이 있습니다.

향상된 오디오 버퍼링은 전체 홈 오디오를 염두에 두고 처음부터 구축됩니다.

그건 튼튼해.

오디오는 재생 중단을 최소화하기 위해 실시간 재생 속도보다 빠르게 스트리밍됩니다.

반응이 좋기 때문에, 앱은 HomePod의 탭이나 iPhone을 리모컨으로 사용할 때 즉시 반응합니다.

Apple TV의 Dolby ATMOS와 같은 멀티 채널 오디오 포맷과 올해 신제품, iOS용 무손실 재생의 지능적인 사용을 지원합니다.

향상된 오디오 버퍼링은 광고를 지원하기 위해 HLS 인터스티셜에 대한 최상의 지원을 제공합니다.

제 동료 Amit의 비디오 "Explore AirPlay with Interstitials"에서 HLS 인터스티셜에 대해 더 많이 배울 수 있습니다.

보시다시피, 우리는 미래를 위한 향상된 오디오 버퍼링으로 훌륭한 기반을 구축했습니다.

이것을 통합하면 앱과 함께 놀라운 AirPlay 경험을 만들 수 있습니다.

향상된 오디오 버퍼링의 이점을 어떻게 활용할 수 있는지 봅시다.

나는 내 핸드폰에서 홈팟으로 오디오를 스트리밍하고 있어.

내가 쓰레기를 버리고 있다고 상상해봐, 그리고 나는 지금 내 Wi-Fi 범위를 벗어났어.

♪ ♪

HomePod가 계속 재생되는 것을 주목하세요.

네트워크에 다시 연결하려고 할 때, 내 음악은 비트를 건너뛰지 않고, 내 휴대폰은 HomePod에 원활하게 다시 연결된다.

♪ ♪

나는 내 핸드폰에서 재생을 다시 제어할 수 있다.

이것은 사람들이 AirPlay를 사용하여 HomePod와 같은 AirPlay 호환 스피커에서 음악을 재생할 때 기대하는 성능 유형입니다.

이제 향상된 오디오 버퍼링이 제공하는 모든 훌륭한 것들과 함께, 그것을 당신의 앱에 통합해 봅시다.

앱에 AirPlay 지원을 추가하는 방법을 검토해 봅시다.

앱의 올바른 믹싱 및 중단 동작을 위해 오디오 세션을 올바르게 구성하는 것이 중요합니다.

미디어 재생이 앱의 중심이라면, 오디오 세션의 카테고리를 재생으로 설정하세요.

이렇게 하면 앱이 백그라운드에 있을 때 앱의 미디어가 계속 재생됩니다.

일반적으로 모드를 기본값으로 설정할 수 있지만, 팟캐스트나 오디오북과 같은 음성 오디오의 경우 모드를 음성 오디오로 설정하는 것이 좋습니다.

마지막으로, 오디오 세션의 라우팅 정책을 longFormAudio로 설정하세요.

롱폼 오디오는 음악이나 팟캐스트와 같은 시스템 사운드 이외의 모든 것이다.

올해, 우리는 AirPlay를 그 어느 때보다 원활하게 만들고 있습니다.

iPhone과 iPad는 이제 온디바이스 인텔리전스를 사용하여 AirPlay 기본 설정을 학습합니다.

그래서 당신은 보통 저녁을 요리할 때 음악을 듣기 때문에, 부엌에 있는 근처의 홈팟이 자동으로 나타나서 사람들이 원하는 곳에서 앱의 콘텐츠를 매우 쉽게 재생할 수 있습니다.

만약 당신이 긴 형식의 오디오 콘텐츠를 제공한다면, 당신은 이것을 지원하고 싶습니다.

그리고 앱에서 지능형 AirPlay 제안에 대한 지원을 추가하는 것은 간단합니다.

우리가 이미 논의한 AVAudioSession 구성 외에도, 유일한 새로운 단계는 앱의 Info Plist, AVInitialRouteSharingPolicy 키로 이동하여 LongFormAudio로 설정하는 것입니다.

Xcode에서 이 키는 드롭다운 메뉴에서 "에어플레이 최적화 정책"이라고 불린다.

그리고 그게 다야.

iOS는 나머지를 처리하고, 온디바이스 학습을 사용하여 사람들에게 앱을 열 때 사용하는 주변 스피커를 현명하게 제공합니다.

다음으로, AVRoutePickerView를 보기 계층에 추가하여 앱에 AirPlay 선택기를 포함하세요.

피커는 사람들에게 당신의 앱과 함께 사용할 수 있는 잠재적인 AirPlay 장치 목록을 제공합니다.

마지막으로, MPNowPlayingInfoCenter를 사용하여 현재 재생 항목에 대해 시스템에 알리고 MPRemoteCommandCenter를 사용하여 재생, 일시 정지 또는 건너뛰기와 같은 원격 명령을 수신하십시오.

그것은 AirPlay를 위한 앱의 설정을 다룹니다.

이제 향상된 오디오 버퍼링을 지원하려면 AVPlayer 및 AVQueuePlayer 또는 AVSampleBufferAudioRenderer 및 AVSampleBufferRenderSynchronizer의 두 가지 API 세트 중 하나를 채택해야 합니다.

두 API 모두 로컬 또는 블루투스를 포함한 비AirPlay 재생에서 작동합니다.

그러나, 일부 개발자들은 AirPlay와 비AirPlay 재생을 위한 다른 API를 원할 수 있습니다.

이 경우, 앱은 routeChangeNotification에 등록하고 현재 경로에 따라 행동할 수 있습니다.

AVPlayer와 AVQueuePlayer는 앱에 대한 향상된 오디오 버퍼링을 지원하는 가장 간단한 방법을 제공합니다.

대다수의 앱 개발자의 경우, AVQueuePlayer를 채택하는 것이 좋습니다.

AVQueuePlayer는 항목 관리, 재생 제어, 미디어 검색과 같은 재생에 필요한 대부분의 것을 처리합니다.

대부분의 애플 자체 미디어 앱은 AVQueuePlayer를 사용한다.

시작하려면, 대기열 플레이어를 만드세요.

재생하고 싶은 로컬 또는 클라우드 콘텐츠를 가리키는 URL을 식별하세요.

그런 다음 URL로 AVAsset 인스턴스를 만들고, 그 자산으로 AVPlayerItem 인스턴스를 만드세요.

마지막으로, AVPlayerItem을 플레이어에게 주고 재생을 시작하세요.

그렇게 간단해.

당신은 "그것은 단지 플레이어에게 플레이 아이템을 줄이게 하는 것"이라고 생각할 수도 있습니다.

에어플레이 부분은 어디 있어?"

그리고 맞아.

AVPlayer와 AVQueuePlayer를 사용하면 AirPlay로 라우팅될 때 자동으로 향상된 오디오 버퍼링을 얻을 수 있습니다.

AVPlayer 기능에 대한 자세한 내용은 설명의 링크를 참조하십시오.

미디어 데이터에 대한 전처리를 수행해야 하는 고유한 앱이 있거나 AVPlayer가 지원하지 않는 DRM 모델이 있는 경우, AVSampleBufferAudioRenderer와 AVSampleBufferRenderSynchronizer를 사용할 수 있습니다.

API를 사용하여 여러 개의 대기열 샘플 버퍼를 단일 타임라인에 동기화할 것입니다.

여기서 나는 오디오 데이터를 대기열에 켬하는 방법에 대한 기본 사항을 살펴볼 것이다.

먼저, 모든 재생 작업을 수행하기 위해 직렬 대기열을 만들어야 합니다.

오디오 렌더러와 렌더링 동기화기를 만드세요.

동기화기는 미디어 타임라인을 설정하는 데 사용된다.

그런 다음, 오디오 렌더러를 렌더링 동기화기에 추가하세요.

이것은 오디오 렌더러에게 미디어 타임라인을 따르라고 말할 것이다.

오디오 데이터를 대기열에 추가하려면, 더 많은 데이터가 필요하다는 것을 알려주는 콜백을 설치하세요.

콜백에서 오디오 데이터를 대기열에 치기 시작하세요.

그리고 더 이상 오디오 데이터가 없을 때, 렌더러에게 데이터 요청을 중단하라고 말하세요.

이것은 인터페이스의 기본일 뿐이다.

자세한 내용은 사용자 지정 플레이어를 구축하기 위한 샘플 프로젝트와 함께 이 API를 사용하는 방법에 대해 자세히 설명하는 설명의 링크된 문서를 참조하십시오.

그것은 AirPlay 호환 장치에 대한 향상된 오디오 버퍼링을 활용하는 데 사용할 수 있는 두 가지 API를 다룹니다.

그리고 그게 전부가 아니야.

자동차 제조업체는 이제 CarPlay 구현에서 향상된 버퍼링을 지원할 수 있습니다.

이게 왜 중요해?

점점 더 많은 차량이 무선 CarPlay를 지원합니다.

강력한 재생과 반응형 제어는 도로에서 최고의 오디오 경험을 하는 데 매우 중요합니다.

좋은 소식은 우리가 이전에 이야기한 두 API 중 하나로 앱에 향상된 오디오 버퍼링을 추가함으로써 CarPlay에서도 작동한다는 것입니다.

당신의 앱을 사용하는 사람들은 여행이 어디로 가든 최고의 오디오 스트리밍 경험을 할 수 있습니다.

요약하자면, AirPlay 지원을 위한 오디오 세션을 구성하고, 앱에 AirPlay 선택기를 추가하고, Media Player를 앱에 통합하고, 향상된 오디오 버퍼링을 위해 AVQueuePlayer 또는 사용자 지정 렌더링 및 동기화 API를 채택해야 합니다.

이건 시작에 불과해.

우리는 이 기술에 더 많은 기능을 제공하기 위해 지속적으로 개선하고 노력하고 있습니다.

네가 그 세션을 즐겼길 바라. 고마워.

♪ ♪