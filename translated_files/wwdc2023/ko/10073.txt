10073

♪ 부드러운 기악 힙합 ♪

♪

이스라엘 파스트라나 비센테: 안녕하세요, "공간 입력을 위한 디자인"에 오신 것을 환영합니다.

제 이름은 이스라엘이고, 저는 여기 유진과 함께 있습니다.

우리는 애플 디자인 팀의 디자이너입니다.

유진 크리보루치코: 오늘, 우리는 눈과 손을 위한 상호 작용을 디자인하는 것에 대해 이야기할 것이다.

우리는 이러한 새로운 입력 방법의 특별한 점은 무엇인지, 그리고 우리 플랫폼에서 그것들을 최대한 활용하는 방법을 다룰 것입니다.

이스라엘: 사용 가능한 모든 입력 방식을 빠르게 살펴봅시다.

공간 입력을 사용하면 버튼을 보고 손가락을 함께 탭하여 선택할 수 있으며, 팔을 무릎에 편안하게 유지할 수 있습니다.

우리의 시스템은 멀리서 UI와 편안하게 상호 작용하도록 설계되었습니다.

어떤 경우에는 요소와 직접 상호 작용할 수도 있습니다.

예를 들어, 손끝을 사용하여 가상 키보드로 타이핑하세요.

공중에서 손을 잡는 것은 피로를 유발할 수 있지만, 우리는 일부 작업이 직접 상호 작용하는 데 더 적합하다는 것을 알게 될 것입니다.

이제, 눈과 손은 새로운 공간 입력이지만, 입력할 필요 없이 음성과 같은 다른 친숙한 입력을 사용하여 검색할 수도 있습니다.

또는 일을 끝내기에 좋은 키보드와 트랙패드.

마지막으로, 게임 컨트롤러를 연결하여 좋아하는 게임을 할 수도 있습니다.

우리는 가장 새롭고 흥미진진한 공간 입력에 집중할 것이다: 눈과 손.

눈과 손을 사용하여 상호 작용하는 것은 몇 가지 면에서 뚜렷하다.

먼저, 그건 개인적인 거야.

당신의 눈의 움직임과 손 제스처는 당신에게 독특합니다.

장치 안팎의 다양한 카메라는 사생활을 존중하는 방식으로 자연스러운 움직임의 모든 세부 사항을 캡처합니다.

다음으로, 편안해.

장치가 당신 주변의 넓은 영역을 보기 때문에 손을 옆에 둘 수 있습니다.

마지막으로, 그것은 공간적 상호 작용을 정확하게 만든다.

이 장치는 모든 데이터를 필터링하고 앱에서 사용할 수 있는 정확한 상호 작용으로 변환합니다.

따라서 공간 입력은 상호 작용을 제어할 수 있는 뛰어난 정밀도를 제공하면서 믿을 수 없을 정도로 편안하게 느껴지는 개인적인 입력입니다.

오늘, 우리는 당신의 눈과 손을 사용하여 앱과 자연스럽게 상호 작용하는 방법을 살펴볼 것입니다.

눈으로 시작하자.

눈은 공간 경험을 위한 주요 타겟팅 메커니즘이다.

시스템의 모든 인터페이스는 당신이 보는 곳에 반응합니다.

그리고 우리는 그들이 아무리 멀리 떨어져 있더라도, 그것들을 보는 것만으로도 쉽게 어떤 요소를 목표로 삼을 수 있다.

이제, 저는 상호 작용하기 편한 앱을 만드는 방법, 눈으로 쉽게 타겟팅할 수 있는 방법, 프라이버시를 존중하면서 보이는 곳에 반응하는 인터페이스를 만드는 방법, 그리고 마지막으로, 눈 의도가 레이아웃을 단순화하고 독특한 보조 옵션을 제공하는 방법에 대해 이야기하겠습니다.

눈에 편안한 앱을 만들기 위해, 우리는 당신의 콘텐츠가 장치에 어떻게 표시되는지 고려해야 합니다.

여기 가장 먼저 고려해야 할 것이 있습니다.

앱을 위한 무한한 캔버스가 있지만, 시야 내에서만 콘텐츠를 볼 수 있습니다.

시야 내에서, 중앙을 보는 것이 가장 편안하며, 가장자리를 보는 것은 덜 편안하다.

그래서, 시야에 맞는 앱을 디자인하여 목과 몸의 움직임을 최소화하세요.

앱의 주요 콘텐츠를 시야의 중앙에, 눈에 가장 편안한 영역으로 유지하세요.

시야의 가장자리를 보는 것은 눈에 지칠 수 있으므로, 접근 가능하고 주요 콘텐츠를 방해하지 않는 2차 행동과 같이 항상 필요하지 않은 콘텐츠에 이 영역을 사용하세요.

시야 안에 콘텐츠를 배치하여 항상 앱에서 눈과 목의 편안함을 극대화하려고 노력하세요.

이제, 우리는 또한 눈의 편안함을 생각할 때 깊이를 고려해야 한다.

깊이는 공간 경험의 독특한 특징이다.

콘텐츠를 가깝거나 멀리 두는 것은 프로젝트에서 다른 감정을 불러일으킨다.

하지만 우리의 눈은 한 번에 한 거리에 초점을 맞추고, 초점 깊이를 자주 바꾸는 것은 눈의 피로를 유발할 수 있다.

UI 간에 쉽게 전환할 수 있도록 대화형 콘텐츠를 같은 깊이로 유지하세요.

예를 들어, 모달 뷰를 제시하면 z축의 메인 뷰를 밀고, 모달은 원래 거리에 배치됩니다.

같은 Z 위치를 유지함으로써, 당신의 눈은 새로운 거리에 적응할 필요가 없습니다.

이제, 이 예에서와 같이 왼쪽에 탭 표시줄과 하단에 분할된 컨트롤을 사용하여 계층 구조를 전달하기 위해 미묘한 변화를 사용할 수 있습니다.

이렇게 하면, 눈의 불편함을 피하면서 깊이를 의미 있게 사용할 수 있습니다.

이제 우리는 앱을 편안하게 만드는 방법을 보았으므로, 우리는 또한 당신의 눈으로 쉽게 사용할 수 있도록 해야 합니다.

눈은 매우 정확하지만, 우리의 눈이 UI 요소를 성공적으로 타겟팅하는 데 도움이 되는 특정 특성이 있습니다.

우리의 눈은 자연스럽게 물체의 중앙으로 주의를 기울이는 모양에 초점을 맞춘다.

우리의 눈을 돕기 위해, 원, 알약, 둥근 직사각형과 같은 둥근 모양을 사용하세요.

날카로운 모서리를 가진 모양을 사용하지 마세요.

날카로운 모서리를 사용할 때, 당신의 눈은 외부에 초점을 맞추는 경향이 있어 눈의 정밀도가 줄어듭니다.

또한, 모양을 평평하게 유지하고 가장자리에 주의를 환기시키는 두꺼운 윤곽이나 효과를 피하세요.

그리고 마지막으로, 넉넉한 패딩을 사용하여 요소의 텍스트와 글리프를 중앙에 두세요.

따라서, 항상 UI가 눈을 요소의 중심으로 안내하도록 설계되었는지 확인하세요.

이제 우리의 관심이 요소의 한가운데에 있으니, 당신의 컨트롤에 적합한 크기를 살펴봅시다.

당신의 요소가 눈 표적에 필요한 최소 영역은 60점입니다.

하지만 그 요소는 60점보다 작을 수 있다.

크기와 간격을 결합한 최소 목표 영역을 달성할 수 있습니다.

레이아웃의 요소 사이에 넉넉한 간격을 사용하세요.

이것은 당신이 눈으로 빠르고 정확하게 목표로 삼는 데 도움이 될 것입니다.

다시 말하지만, 최소 목표 영역인 60점을 존중하고, 크기와 간격을 결합하여 UI를 눈으로 멋지고 사용하기 쉽게 만드는 것이 매우 중요합니다.

즉시, 표준 구성 요소는 타겟팅하기 쉬운 크기를 가지고 있다.

이 구성 요소들을 가능한 한 많이 사용하세요.

그리고 만약 당신이 당신의 것을 사용한다면, 사이즈 측정에 대한 우리의 지침을 따르세요.

포인트와 레이아웃에 대해 자세히 알아보려면, "공간 사용자 인터페이스 디자인" 세션을 확인하세요.

이제 우리는 목표 영역이 당신의 눈에 얼마나 중요한지에 대해 배웠으므로, 우리는 공간의 어떤 위치에서든 이 목표 영역을 유지해야 합니다.

그것을 위해, 우리는 당신의 UI를 확장하는 방법을 이해해야 합니다.

두 가지 다른 규모의 메커니즘을 살펴봅시다.

이 시스템은 앱 윈도우를 위한 동적 스케일을 제공한다.

창문이 멀어질수록 더 커지고, 가까이 움직일수록 더 작아지는 것을 볼 수 있습니다.

동적 스케일은 UI가 동일한 시야를 채우고 창이 어디에 있든 대상 영역의 크기를 보존하게 합니다.

대신 고정 스케일을 사용하면, UI가 멀어질수록 더 작아집니다.

고정 스케일은 인터페이스의 크기를 변경하고 앱을 눈으로 사용하기 어렵게 만듭니다.

이걸 나란히 보자.

동적 스케일은 UI와 대상 영역을 같은 크기로 유지하는 반면, 고정 스케일은 크기를 변경하고 대상 영역을 너무 작게 만듭니다.

사용자 지정 UI를 만들 때, 동적 스케일을 사용하여 눈이 항상 모든 컨트롤을 타겟팅할 수 있도록 하세요.

규모 외에도, 방향은 앱의 유용성에도 영향을 미칩니다.

인터페이스가 기울어져 있다면, 읽기 어렵고 사용하기 어렵다.

그것이 시스템 윈도우가 항상 사람들을 마주하도록 하는 이유이다.

하지만 앱에서 사용자 지정 창을 만드는 경우, 항상 UI가 뷰어를 향하도록 하십시오.

방금 보았듯이, 창과 UI의 정확한 규모와 방향은 눈의 정확성을 보장하기 위한 기본입니다.

이 플랫폼의 창이 어떻게 작동하는지에 대해 자세히 알아보려면, "공간 디자인의 원칙" 세션을 확인하세요.

눈은 매우 새로운 입력입니다. 그리고 인터페이스가 눈에 반응하도록 하는 것이 정말 중요합니다.

상호 작용 요소가 강조될 때, 당신은 당신의 눈이 상호 작용을 주도하고 있다는 것을 이해합니다.

버튼 그룹을 볼 때 무슨 일이 일어나는지 봅시다.

각각을 볼 때 그들이 어떻게 강조하는지 보세요.

모든 대화형 요소는 강조되어야 하며, 우리는 호버 효과로 이것을 한다.

하지만 당신의 눈이 빠르게 움직이기 때문에, 그 효과는 미묘하고 당신이 가장 좋아하는 사진을 볼 때와 같이 모든 콘텐츠 위에 작용해야 하며, 눈에 띄지 않고 의도를 강화해야 합니다.

호버 효과 덕분에, 시스템이 제공하는 모든 컨트롤은 당신이 그것들을 볼 때 강조 표시됩니다.

앱에 대한 사용자 지정 요소를 만드는 경우, 호버 효과를 사용하여 눈 피드백을 추가하고 요소가 반응적으로 느껴지도록 하세요.

이제, 눈의 의도는 매우 민감한 정보이다.

개인 정보 보호는 눈 데이터를 다룰 때 우리의 최우선 과제입니다.

호버 효과는 앱의 프로세스에서 발생하므로, 제스처에 의해 트리거된 요소에 대한 상호 작용이 있을 때만 초점을 맞춘 요소에 대한 정보를 얻을 수 있습니다.

눈으로 요소에 마우스를 올려놓는 것은 의도의 신호이다.

당신이 오랫동안 무언가를 볼 때, 우리는 당신이 그것에 관심이 있다는 것을 알고 있습니다.

그것은 당신에게 그것에 대한 더 많은 정보를 보여줄 수 있는 좋은 기회입니다.

예를 들어, 버튼은 당신이 볼 때 드러내는 툴팁을 가질 수 있습니다.

또한, 탭 바에 초점을 맞추면 확장되어 각 탭에 대한 라벨을 보여줍니다.

마지막으로, 시스템 제공 검색 필드 내부의 마이크 글리프에 초점을 맞추면 Speak to Search가 트리거되어 이 레이어를 드러내고 눈과 음성만으로 검색을 수행할 수 있습니다.

이러한 모든 시스템 요소는 필요할 때 추가 정보를 제공하며, 초점을 맞추지 않을 때 깨끗한 UI를 유지합니다.

앱을 만들 때 그것들을 활용하세요.

그들은 또한 초점 정보가 앱으로 전송되지 않도록 개인 정보 보호를 염두에 두고 만들어졌습니다.

눈의 의도는 또한 보조 기술을 위한 좋은 기회를 제공한다.

예를 들어, Dwell Control 기능을 사용하면 눈으로만 콘텐츠를 선택할 수 있습니다.

이 예에서, 짧은 시간 동안 버튼에 초점을 맞추면 Dwell Control UI가 표시되고 손으로 탭 제스처를 수행할 필요 없이 버튼을 선택합니다.

그래서, 우리는 눈을 위한 상호 작용을 디자인하는 것에 대해 무엇을 배웠나요?

우리는 시청자 앞에, 시야 안에 콘텐츠를 배치하고, 깊이를 책임감 있게 사용하여 앱을 눈에 편안하게 만드는 방법에 대해 배웠습니다.

그런 다음 우리는 사용하기 쉬운 인터페이스를 디자인하는 방법과 당신의 눈을 요소의 중심으로 안내하는 방법을 살펴보았습니다.

우리는 또한 당신의 통제에서 60점의 최소 목표 영역을 존중하는 것이 얼마나 중요한지 강화했습니다.

요소에 호버 효과를 추가하여 항상 상호 작용을 전달하고 타겟팅을 강화해야 하는 방법.

그리고 마지막으로, 눈의 의도에 대한 추가 정보를 드러내는 UI 요소를 어떻게 활용할 수 있을까요?

나는 이것이 훌륭했고, 훨씬 더 많은 것이 있다고 생각한다.

우리는 눈이 환상적인 표적 메커니즘이라는 것을 보았고, 손으로 결합하면 훨씬 더 강력해진다.

이제, 나는 그것에 대해 이야기하기 위해 유진에게 넘길 것이다.

유진: 고마워, 이스라엘.

손에 대해 얘기하자.

타겟팅을 위한 눈과 결합된 손 제스처는 시스템 전반에 걸쳐 상호 작용하는 주요 방법이다.

손가락을 함께 꼬집는 것은 휴대폰 화면을 누르는 것과 같습니다.

그 시스템은 다른 친숙한 제스처를 지원한다.

예를 들어, 꼬집고 드래그하여 스크롤하고, 줌 및 회전과 같은 양손 제스처를 수행할 수 있습니다.

이 모든 경우에 UI 피드백이 어떻게 손의 움직임을 계속하는지 주목하세요, 이는 제스처와 연결되어 있다고 느끼는 데 정말 도움이 됩니다.

제스처는 시스템 전반에 걸쳐 같은 방식으로 작동하며 멀티 터치 제스처와 유사한 논리를 따른다.

이것은 사람들이 상호 작용을 수행하는 방법에 대해 생각하는 대신 경험에 정말로 집중할 수 있다는 것을 의미한다.

이것이 당신이 경험을 디자인할 때 이러한 친숙한 패턴에 의지하고, 사람들의 기대에 맞는 방식으로 제스처에 반응해야 하는 이유입니다.

어떤 경우에는, 당신의 경험의 일부는 표준 제스처로 쉽게 표현할 수 없는 독특한 행동일 수 있습니다.

이 경우, 사용자 지정을 정의하고 싶을 수도 있습니다.

다음은 성공적인 사용자 지정 제스처를 만드는 방법에 대한 몇 가지 팁입니다.

먼저, 사람들이 제스처를 빠르게 사용하는 방법을 배울 수 있도록 제스처를 설명하고 수행하기 쉬운지 확인하세요.

제스처 충돌을 피하는 것도 중요하다.

사용자 지정 제스처는 사람들이 대화에서 사용할 수 있는 표준 시스템 세트 또는 일반적인 손 움직임과 뚜렷하게 달라야 합니다.

이것은 사람들이 긴장이나 피로 없이 지속적으로 반복할 수 있는 제스처여야 하며, 잘못된 활성화 비율이 낮다.

보조 기술을 사용하여 시스템 전반에 걸쳐 상호 작용하는 사람들을 염두에 두고 그러한 경우에 당신의 제스처가 어떻게 작동하는지 고려하십시오.

접근성에 대해 자세히 알아보려면, "접근 가능한 공간 경험 만들기" 세션을 확인하세요.

제스처는 또한 다른 사람들에게 다른 것을 의미할 수 있으므로, 사용자 지정 제스처가 의도하지 않은 메시지를 보내지 않도록 하세요.

이 모든 것은 까다로운 균형일 수 있으므로, 항상 UI 어포던스의 형태로 대체를 고려할 가치가 있다.

우리의 입력 모델의 가장 흥미로운 측면 중 하나는 눈을 의도의 신호로 사용할 수 있는 기회이다.

손 제스처와 결합된 눈 방향을 사용하여, 우리는 다른 플랫폼에서는 불가능한 정확하고 만족스러운 상호 작용을 만들 수 있습니다.

내 말이 무슨 뜻인지 보기 위해 줌 제스처를 다시 살펴봅시다.

제스처가 시작될 때, 줌의 원점은 이미지 내에서 당신의 눈이 그 순간에 집중되는 위치에 따라 결정됩니다.

이것은 당신이 확대할 때 그 특정 영역이 확대되고 중심이 되는 결과를 초래합니다.

결과적으로, 주위를 둘러보고 이 간단한 제스처를 수행하는 것만으로도 이미지를 쉽게 탐색할 수 있습니다.

이것은 정말 마법처럼 느껴지고 동시에 100% 기대된다.

당신이 보고 있는 점은 자연스럽게 그 상호 작용의 의도를 나타냅니다.

이 행동의 또 다른 예는 마크업의 포인터 움직임이다.

그리기 위해, 마우스 포인터와 비슷하게 손으로 브러시 커서를 제어하지만, 캔버스의 다른 쪽을 보고 탭하면 커서가 당신이 보고 있는 바로 착륙합니다.

이것은 정확성을 만들고 큰 캔버스를 빠르게 덮는 데 도움을 준다.

이것들은 간단한 행동을 더 정확하고 만족스럽게 만들기 위해 눈 방향을 사용하는 상호 작용의 예입니다.

눈은 요소를 표적으로 삼을 뿐만 아니라, 그 상호 작용을 위한 더 세분화된 위치를 암묵적으로 제공하기 위해 사용된다.

이것은 우리가 훨씬 더 지능적인 방식으로 상호 작용에 대응할 수 있게 해주는 입력 모델의 정말 강력한 측면이다.

이제 직접 접촉에 대해 이야기해 봅시다.

시스템 전반에 걸쳐, 우리는 당신의 손끝을 사용하여 상호 작용할 수 있도록 지원합니다.

예를 들어, 사파리를 가까이 가져오고 페이지를 직접 스크롤할 수 있습니다.

또한 양손을 사용하여 가상 키보드에 입력하고 더 많은 공간 경험을 할 수 있으며, 손이 닿는 범위 내에서 3D 콘텐츠를 조작할 수 있습니다.

원거리에서의 상호 작용은 눈으로 컨트롤을 목표로 삼는 것이 쉽고, 최소한의 제스처를 수행하는 동안 손을 쉴 수 있기 때문에 오랫동안 편안하게 유지됩니다.

직접적인 상호 작용을 위해 설계할 때, 우리는 공중에서 손을 잡는 것이 잠시 후에 피로를 유발할 것이라는 것을 명심해야 한다.

그럼에도 불구하고, 특정 앱은 면밀한 검사나 물체 조작을 초대하는 경험, 또는 실제 경험에서 근육 기억 위에 구축되는 대화형 메카닉, 그리고 일반적으로 신체 활동이 경험의 중심에 있을 때마다 직접 터치를 위해 팔의 손이 닿는 곳에 콘텐츠를 배치함으로써 이익을 얻을 것이다.

촉각 반응의 부족은 직접적인 상호 작용을 위해 설계할 때 고려해야 할 또 다른 사항이다.

우리가 물리적 세계에서 무언가를 만질 때마다, 우리의 손은 우리의 인식에 필수적인 많은 다감각적 피드백을 받는다.

우리가 손을 뻗어 가상 콘텐츠를 만질 때 이 중 어느 것도 일어나지 않는다.

그리고 그 상호 작용이 작동하도록 하기 위해, 우리는 누락된 감각 정보를 다른 유형의 피드백으로 보상해야 한다.

우리가 키보드 버튼으로 이 도전에 어떻게 접근했는지 봅시다.

버튼은 실제로 플래터 위에 올려져 직접 밀도록 초대한다.

손가락이 키보드 위에 있는 동안, 버튼은 버튼 표면에 접근할 때 더 밝아지는 호버 상태와 하이라이트를 표시합니다.

그것은 근접 신호를 제공하고 손가락을 목표로 안내하는 데 도움을 준다.

접촉하는 순간, 상태 변화는 빠르고 반응하며, 일치하는 공간 음향 효과를 동반한다.

이러한 추가 피드백 계층은 누락된 촉각 정보를 보상하고 직접적인 상호 작용을 신뢰할 수 있고 만족스럽게 만드는 데 정말 중요합니다.

오디오는 시스템 전반에 걸쳐 가상 콘텐츠와 입력을 연결하는 데 특별한 역할을 한다.

그것에 대해 더 알아보려면, "몰입형 사운드 디자인 탐색"이라는 세션을 확인하세요.

요약하자면, 여기 손과의 상호 작용을 설계하기 위한 테이크아웃이 있습니다.

사람들이 상호 작용 대신 콘텐츠에 집중할 수 있도록 시스템과 일치하는 제스처 언어를 사용하세요.

표준 세트로 원하는 동작을 달성할 수 없을 때만 사용자 지정 제스처를 도입하도록 주의하세요.

의도의 신호로 눈을 사용하여 상호 작용을 개선하는 방법을 찾으세요.

그것이 당신의 경험의 핵심일 때만 직접적인 상호 작용을 사용하세요.

그리고 만약 그렇다면, 누락된 감각 정보를 보상하기 위해 광범위한 피드백을 제공하세요.

오늘, 우리는 눈과 손과의 공간적 상호 작용을 위한 몇 가지 디자인 원칙에 대해 이야기했습니다.

우리는 편안함과 인체 공학에 대해 많이 이야기했다.

소프트웨어가 이 플랫폼의 입력에 어떻게 보이고, 행동하고, 반응할 수 있는지에 대한 많은 방법으로, 디자이너와 개발자는 이러한 경험이 편안하고 접근할 수 있도록 더 많은 책임이 있습니다.

장치에서 앱을 실행함으로써, 사람들은 당신의 작업을 그들의 공간으로 환영하고 모든 관심을 기울입니다.

소프트웨어는 더 이상 화면에 포함되지 않습니다.

대신, 그것은 사람들의 물리적 환경의 더 중요한 부분을 차지하고 그들의 자연스러운 신체 움직임에 반응할 수 있다.

가상 콘텐츠와 상호 작용하기 위해 손을 사용하는 것도 대부분의 사람들에게 매우 새로운 것이다.

그렇기 때문에 명확한 피드백을 제공하여 그들을 안내하고 가능한 경우 친숙한 상호 작용 패턴에 의존하는 것이 매우 중요합니다.

우리가 다른 플랫폼을 위한 설계에서 알 수 있듯이, 훌륭한 입력 경험은 당신이 생각할 필요가 없는 것입니다.

소프트웨어 반응은 신체 움직임의 자연스러운 연속이 되며 상호 작용 의도와 완벽하게 일치합니다.

입력 모델의 기초로 눈을 사용하는 우리의 능력은 마법의 정밀도로 상호 작용에 대응할 수 있는 기회를 열어줍니다.

우리는 그것이 정말 강력하다고 생각하며, 공간 매체를 위한 즐겁고 참신한 상호 작용을 만드는 데 사용하기를 바랍니다.

우리가 강연 내내 참조한 세션을 꼭 확인해 주세요.

봐줘서 고마워!

이스라엘: 안녕!

♪