10275

♪ ♪

아미트: 안녕하세요, 여러분. 내 이름은 아미트야.

저는 에어플레이 팀의 엔지니어입니다.

Apple 장치에서 AirPlay 지원 수신기로 비디오, 사진, 음악 등을 무선으로 공유할 수 있도록 AirPlay를 만들었습니다.

광고 재생, 다가오는 릴리스의 예고편 및 애플리케이션의 기본 콘텐츠와 같은 여러 소스의 보조 콘텐츠를 재생하고 싶을 때가 있습니다.

이 2차 콘텐츠는 간질이라고 불린다.

애플리케이션이 전면에 대한 훌륭한 AirPlay 사용자 경험을 보장하는 데 관심이 있다면, 올바른 세션을 조정했습니다.

이 강연에서, 우리는 AirPlay와 HLS Interstitials에 대한 간략한 개요로 시작할 것입니다.

그 후, 우리는 중간 재생에 대한 내비게이션 제한을 AirPlay 수신기로 전달하는 방법에 대해 논의할 것입니다.

그런 다음 모든 장치에서 AirPlay 재생을 최적화하기 위한 모범 사례를 살펴볼 것입니다.

우리는 틈새 현지화와 AirPlay 테스트에 대해 간략하게 논의할 것입니다.

마지막으로, 우리는 HLS 인터스티셜을 사용하여 VOD 서비스 계획 제공의 예를 제시할 것입니다.

다음 방법 중 하나로 AirPlay를 사용할 수 있습니다: AirPlay 오디오.

HomePod 또는 AirPlay 지원 스피커가 두 개 이상 있는 경우, 집 전체에서 좋아하는 음악이나 팟캐스트를 완벽하게 동기화하여 즐길 수 있습니다.

에어플레이 오디오에 대한 자세한 내용은 제 동료 켈리의 "에어플레이 오디오 경험 조정" 세션을 확인할 수 있습니다.

AirPlay 미러링을 사용하면 웹사이트, 프레젠테이션 및 스프레드시트와 같은 iOS 또는 macOS 화면에서 AirPlay 수신기로 모든 것을 공유할 수 있습니다.

AirPlay Video를 사용하면 AirPlay 지원 TV, 즉 Apple TV 또는 Mac 수신기 또는 AirPlay 지원 스마트 TV에서 시청할 비디오를 무선으로 보낼 수 있습니다.

이것은 서라운드 사운드로 최대 4K HDR 비디오를 지원할 수 있는 Apple TV 또는 AirPlay 지원 TV 모두에서 고품질 비디오 경험입니다.

HLS Interstitials를 사용하면, 광고는 주요 미디어 자산의 타임라인에 정의된 별도의 자산으로 취급됩니다.

미디어 플레이어의 타임라인이 마커에 부딪히면, 우리는 중간 광고를 재생하기 시작할 것이다.

HLS 인터스티셜은 기본 콘텐츠에 대한 수정 없이 VOD 또는 라이브 기본 콘텐츠에 대해 예약할 수 있습니다.

인터스티셜은 재생 중에 동적으로 예약되거나 예약되지 않을 수 있습니다.

HLS Interstitials를 사용하면 기본 콘텐츠가 광고 마커에 접근하고 심지어 다시 바인딩됨에 따라 광고가 결정되기를 원하는 광고 자산의 늦은 바인딩을 허용합니다.

예를 들어, 사람들이 HLS 인터스티셜을 사용하여 이미 본 비디오의 일부로 이동할 때, 같은 광고를 다시 보지 않도록 할 수 있습니다.

HLS 인터스티셜은 AirPlay와 Picture in Picture에 대한 내장 지원을 제공합니다.

예정된 모든 광고와 전면 광고는 에어플레이 세션으로 옮겨져야 한다.

HLS 인터스티셜은 오디오 및 비디오 스트리밍 서비스에 사용할 수 있습니다.

HLS 인터스티셜은 두 가지 방법 중 하나로 예약할 수 있습니다: 서버 중심, 클라이언트 중심.

두 방법 모두 중간의 프레젠테이션을 예약하고 제어하기 위한 속성을 설정하는 측면에서 유사하다.

서버는 EXT-X-DATERANGE 태그를 주요 자산의 미디어 재생 목록에 배치하여 중간을 예약할 수 있습니다.

애플리케이션 코드는 AVPlayerInterstitialEventMonitor 객체를 사용하여 인터스티셜의 일정과 진행 상황을 모니터링할 수 있습니다.

애플리케이션 코드는 AVFoundation API를 사용하여 프로그래밍 방식으로 인터스티셜을 예약할 수 있습니다.

AVPlayerInterstitialEvent의 객체를 만들어 광고 이벤트를 만들 수 있습니다.

AVPlayerInterstitialEvent 객체에는 플레이어의 아이템 타임라인에 광고를 게재하는 데 필요한 모든 정보가 포함되어 있습니다.

AVPlayerInterstitialEventController에서 AVPlayerInterstitialEvent의 모든 객체를 설정할 수 있습니다.

AVPlayerInterstitialEventController는 주 플레이어가 플레이하는 항목에 대한 중간 이벤트를 예약합니다.

다음은 VOD 및 라이브 콘텐츠의 재생 흐름의 예입니다.

보시다시피, 우리는 VOD와 라이브 사용 사례 모두에 대한 연속 광고 자산, 즉 ad1과 ad2를 가지고 있습니다.

VOD 사용 사례의 경우, 재생은 중단된 지점에서 재개됩니다.

라이브 사용 사례의 경우, 재생은 광고에 의해 소비되는 시간까지 앞으로 점프한다.

기본 콘텐츠의 재개 오프셋은 서버 기반 또는 클라이언트 기반 방법으로 설정할 수 있습니다.

서버 방법의 경우, HLS 재생 목록의 EXT-DATERANGE 태그 내에서 X-RESUME-OFFSET 속성을 설정하여 기본 콘텐츠에 대한 재개 오프셋을 달성할 수 있습니다.

클라이언트 방법의 경우, 재개 오프셋은 AVPlayerInterstitialEvent에 resumptionOffset 속성을 설정하여 AVFoundation API를 사용하여 설정할 수 있습니다.

HLS 재생 목록 속성과 HLS 인터스티셜을 위한 AVFoundation API에 대한 자세한 내용은 이 세션 아래의 참조 링크를 참조하십시오.

AirPlay 비디오는 앱, 잠금 화면 및 제어 센터에서 iPhone에 나타나는 내장 컨트롤을 제공하므로 TV의 볼륨을 쉽게 재생, 일시 정지, 빨리 감기, 되감기 및 조정할 수 있습니다.

AirPlay를 사용하면, 사용자는 AirPlay 수신기의 리모컨을 사용하여 동일한 원격 제어 작업을 수행할 수도 있습니다.

인터스티셜을 사용하면, 종종 계약상의 이유로, 구독자가 광고를 건너뛰거나 건너뛰는 것을 방지하고 싶을 것입니다.

HLS 인터스티셜은 사용자 탐색 제한에 대한 지원이 내장되어 있다.

두 가지 제한이 정의되어 있다.

건너뛰기: 건너뛰기 제한은 원하는 것과 다른 속도로 광고를 재생하는 것을 방지할 수 있습니다.

점프 제한은 현재 광고에서 점프하는 것을 방지합니다.

이것의 예는, 시청자가 하나 이상의 틈새를 가로질러 찾으려고 시도한다면, 추구가 완료되도록 허용하기 전에 적어도 하나의 틈새가 재생되어야 한다.

내비게이션 제한은 AirPlay가 활성화된 동안 장치 또는 AirPlay 수신기에서 재생하는 동안 AVKit 또는 사용자 지정 응용 프로그램 코드인 플레이어 UI 수준에서 시행됩니다.

내비게이션 제한은 다음과 같은 조합으로 적용될 수 있습니다: 건너뛰기, 점프, 건너뛰기 및 점프.

다른 모든 속성과 마찬가지로, 간질 탐색 제한은 두 가지 방법을 사용하여 구성할 수 있습니다.

서버 기반: 서버 방법을 사용하여 탐색 제한을 구성하려면, HLS 재생 목록은 EXT-X-DATERANGE 태그 아래에 X-RESTRICT 속성을 설정해야 합니다.

클라이언트 기반: 이 방법에서, 애플리케이션 코드는 AVPlayerInterstitial 객체의 속성 제한을 설정해야 합니다.

위의 방법 중 하나를 사용하면, Apple 장치의 로컬 재생과 AirPlay 수신기의 AirPlay 세션에 대한 전면 재생에 대한 탐색 제한이 시행되도록 할 수 있습니다.

에어플레이 수신기는 별도의 하드웨어이다.

수신기는 Apple 또는 Apple이 아닌 기기일 수 있습니다.

그것은 모든 타사 수신기가 AVFoundation 코드를 실행하지 않는다는 것을 의미합니다.

마음에 떠오를 수 있는 질문 중 하나는 응용 프로그램이 에어플레이 수신기에 의해 인터스티셜에 대한 탐색 제한을 보장하기 위해 특정 속성을 구성하는 것과 같은 코드를 변경해야 합니까?

애플리케이션 코드에서 AVPlayerInterstitialEvent 객체의 제한 속성을 설정하여 클라이언트 중심의 재생 목록에서 X-RESTRICT 속성을 설정하여 탐색 제한을 구성하는 경우 코드 변경이 필요하지 않습니다.

서버 방법, 즉 HLS 재생 목록을 사용하여 건너뛰기 제한이 어떻게 적용되는지 보여주기 위해 재생 목록을 만들기 시작합시다.

우리는 10초 동안의 주요 자산을 가진 재생 목록을 가지고 있다.

우리는 이 재생 목록을 연달아 광고로 업데이트할 것입니다.

이 업데이트는 재생 목록에 10초 길이의 두 개의 광고를 추가할 것이며, 이는 기본 자산으로 5초에 재생되기 시작할 것이다.

두 광고 모두에서 시작 날짜가 동일하기 때문에, 이 광고들은 재생 목록에 나타난 순서대로 표시될 것이다.

즉, 이 경우, ad1이 먼저 플레이할 것이다.

Ad2를 재생한 후, 플레이어는 중단된 주요 자산의 재생을 재개할 것이다.

X-RESTRICT 속성은 첫 번째 중간 ID, ad1을 건너뛰도록 설정되어 있습니다.

따라서 건너뛰기 탐색 제한은 첫 번째 중간, 즉 ad1의 재생에 적용되어야 합니다.

그러나, X-RESTRICT 속성인 탐색 제한이 없다는 것을 알아차렸다면, 두 번째 인터스티셜 ID, 즉 ad2에 존재합니다.

이 설정은 광고 제공에 유연성을 제공합니다.

이제 고객 중심의 방법을 살펴봅시다.

여기서 예시를 단순화하기 위해, 우리는 하나의 광고 이벤트, 즉 ad1을 추가할 것입니다.

우리는 기본 항목과 이벤트 시작 시간으로 AVPlayerInterstitialEvent를 만듭니다.

그런 다음 다른 구성 옵션을 설정하고 ad1event에 대한 건너뛰기 제한을 설정합니다.

마지막으로, 우리는 컨트롤러에 ad1event를 설정했다.

수신기에서 AirPlay 재생을 최적화하는 방법에 대해 이야기해 봅시다.

AirPlay는 다양한 수신기에서 지원됩니다.

이 수신기에는 Apple TV, 셋톱 박스, 미디어 스틱, 사운드바, 스마트 스피커 및 스마트 TV가 포함됩니다.

AirPlay 수신기는 다양한 하드웨어, 소프트웨어 및 미디어 처리 기능을 가질 수 있습니다.

미디어 처리 기능의 차이로 인해, 일부 AirPlay 수신기는 미디어 자산 간에 전환할 때 전환이 지연될 수 있습니다.

일부 AirPlay 수신기에서 전환 지연의 일반적인 이유 중 하나는 디코더를 한 비디오 형식에서 다른 비디오 형식으로 전환하는 데 걸리는 시간이다.

일부 수신기의 미디어 처리 기능의 차이로 인해, 디코더 간의 전환은 시간이 걸릴 수 있으며, 이는 전환 지연을 초래할 수 있습니다.

중간 사용 사례의 경우, 이것의 예는 주요 자산은 AVC로 인코딩되고 중간 자산은 HEVC로 인코딩됩니다.

AirPlay 수신기의 기본 및 중간 미디어 자산 간의 전환 지연을 줄이려면, 기본 및 중간 미디어 자산 간의 미디어 작동 매개 변수를 계속 일치시키는 것이 좋습니다.

비디오 자산의 경우, 여기에는 비디오 코덱, 프레임 속도, 종횡비가 포함됩니다.

오디오 자산의 경우, 여기에는 오디오 코덱, 샘플링 주파수, 해상도, 채널 레이아웃이 포함됩니다.

기본 또는 틈새 콘텐츠 내에서 동기화를 보장하기 위해, 미디어 구성 요소의 모든 프레젠테이션 단위, 즉 오디오, 비디오, 자막은 정확하게 타임스탬프되고 서로의 사양 내에서 정렬되어야 합니다.

인터스티셜 또는 광고의 언어에 따라 구독자 참여를 늘려야 하는 고객의 경우, 인터스티셜과 일치하는 오디오 및 자막 트랙을 지정할 수 있습니다.

인터스티셜과 기본 자산이 유사한 오디오/자막 트랙을 가지고 있다면, 인터스티셜을 재생하는 동안 자동 트랙 선택이 적용됩니다.

이 자동 선택은 로컬 재생과 에어플레이 세션에 적용됩니다.

이를 위해 코드 변경이 필요하지 않습니다.

스트리밍 애플리케이션에서 AirPlay를 테스트할 때 고려해야 할 고려 사항에 대해 간략하게 논의해 봅시다.

스트리밍 애플리케이션에서 AirPlay 비디오를 테스트하려면, AirPlay 발신자 및 AirPlay 수신기 장치로 테스트 스위트를 구축해야 합니다.

AirPlay 비디오 발신자 장치에는 iPhone, iPad 및 Mac이 포함됩니다.

AirPlay 비디오 수신기에는 Apple TV, Mac 및 수백 개 이상의 비 Apple TV 수신기와 스마트 TV가 포함됩니다.

이러한 각 수신기는 하드웨어, 소프트웨어 및 재생 기능과 관련하여 다릅니다.

스트리밍 애플리케이션으로 AirPlay를 테스트할 때, Apple TV를 선택한 수신기로 시작하는 것이 좋지만, Apple이 아닌 AirPlay 수신기의 각 클래스에서 적어도 하나의 장치를 선택하는 것이 좋습니다.

미디어 처리 기능, 즉 하이엔드 및 로우엔드 수신기에 따라 수신기 장치를 더 나눌 수 있습니다.

예를 들어, 스트리밍 서비스가 Dolby Vision을 지원하는 경우, 애플리케이션에서 AirPlay 재생을 검증할 때 테스트 제품군에 Dolby Vision이 가능한 AirPlay 수신기를 포함하십시오.

또한, SDR과 스테레오 AAC 오디오만 지원하는 로우엔드 AirPlay 수신기를 포함해야 합니다.

스트리밍 애플리케이션이 iPhone과 같은 한 범위의 발신자 장치만을 대상으로 하는 경우에도 하이엔드 및 로우엔드 수신기를 포함하는 테스트 제품군을 구축하는 것이 좋습니다.

테스트할 AirPlay 수신기를 선택할 때, 이 프레젠테이션의 참조 링크에서 Apple의 증가하는 상업적으로 이용 가능한 장치 목록을 참조하십시오.

우리는 예시 VOD 계획을 살펴볼 것이다.

이 예시의 서비스 제공자는 세 가지 서비스 계획을 제공하고자 한다.

계획 A: 광고를 재생하는 동안 재생/일시 정지가 허용되는 유일한 사용자 작업인 광고가 포함된 VOD 서비스 계획.

플랜 B: 광고가 없는 VOD 서비스 플랜.

플랜 C: 이 플랜에 등록된 구독자는 초기 광고가 끝나면 광고를 건너뛸 수 있습니다.

이 예에서, 서비스 제공 업체는 서버의 재생 목록에서 중간 지원을 위한 최대 구성을 원합니다.

또한, 서비스 제공 업체는 모든 계획에 동일한 재생 목록을 사용하고 싶어 한다.

우리는 사소한 변경으로 건너뛰기 제한을 보여주기 위해 사용했던 것과 유사한 재생 목록을 사용할 것입니다.

이 재생 목록에서 EXT-X-DATERANGE 태그는 각각 10초 동안 ad1과 ad2라는 두 개의 광고를 예약합니다.

광고는 주요 자산에서 5초 후에 재생되기 시작할 것이다.

플레이어는 광고를 모두 재생한 다음 중단된 주요 자산의 재생을 재개할 것이다.

두 광고 이벤트 모두에서 건너뛰기 제한이 설정됩니다.

광고가 있는 VOD 서비스인 플랜 A에 가입한 구독자를 지원하기 위해, 재생 목록에는 이미 중간 지원에 대한 모든 규칙이 있으므로 애플리케이션 코드를 변경할 필요가 없습니다.

플랜 B를 지원하기 위해, 광고가 재생되지 않습니다. 애플리케이션 코드에서 다음 AVPlayerItem 속성을 사용할 수 있습니다: false로 설정된 automaticallyHandlesInterstitialEvents.

이 속성을 false로 설정하면 EXT-X-DATERANGE 태그에서 서버가 지정한 AVPlayerInterstitialEvents가 무시됩니다.

플랜 C를 지원하기 위해, 즉, 이 특정 플랜에 등록된 구독자는 초기 광고가 끝나면 광고를 건너뛸 수 있으며, 첫 번째 광고, 즉 ad1에 대한 제한이 유지되도록 해야 합니다.

Ad2인 두 번째 인터스티셜에 설정된 제한 속성을 재정의하려면 클라이언트 응용 프로그램 코드에서 수정을 수행해야 하며, 제한을 건너뛰고 제거해야 합니다.

여기에 있는 예제 코드는 응용 프로그램 코드를 사용하여 HLS 재생 목록의 ad2에 설정된 탐색 제한을 재정의하는 방법을 보여줍니다.

이를 위해, 우리는 먼저 ad1과 ad2에 대한 AVPlayerInterstitialEvent를 추출합니다.

그런 다음 ad2 이벤트의 복사본을 만든 다음 복사본에 대한 탐색 제한을 지웁니다.

우리는 마침내 모든 중간 이벤트의 일정, 즉 원래 ad1Event와 ad2Event의 수정된 복사본으로 컨트롤러를 업데이트합니다.

이제 모든 계획에 대한 구독자 경험을 매핑하기 위해 데모 비디오를 살펴봅시다.

각 데모는 동일한 HLS 재생 목록을 가리키고 있으며, 하나의 주요 콘텐츠, 즉 "셰프 장식 쿠키"와 주요 콘텐츠에 5초에 예정된 두 개의 광고가 있습니다.

우리는 예시 플랜 A의 데모로 시작할 것이다.

우리는 AirPlay 비디오를 트리거합니다.

이게 주요 내용이야.

이것은 10초 동안 지속되는 ad1입니다.

HLS 재생 목록의 서버에 의해 건너뛰기 제한이 설정되기 때문에, 구독자는 이 광고를 건너뛰거나 빨리 감기할 수 없습니다.

이것은 ad2이며, 이 구독자가 광고를 건너뛰거나 빨리 감기할 수 없기 때문에 건너뛰기 제한이 설정되어 있습니다.

오프셋 광고1의 주요 콘텐츠 재개가 예정되어 있다.

참고로, 이제 구독자는 앞으로 점프할 수 있습니다.

두 번째 데모의 경우, 우리는 이전 데모, 즉 TV에 AirPlay와 유사한 단계를 수행하며, 광고가 재생되지 않는 플랜 B에 대한 구독자 경험을 시연할 것입니다.

우리는 이전 데모에 사용한 것과 동일한 HLS 재생 목록을 사용하고 있지만, 애플리케이션 코드에서와 같이 5초에 예정된 광고를 볼 수 없습니다. 기본 항목에 대한 속성을 자동으로 HandlelesInterstitialEvents를 false로 설정했습니다.

우리는 이제 플랜 C에 대한 구독자 경험을 보여주기 위해 최종 데모로 이동합니다. 즉, 구독자는 초기 광고가 끝나면 광고를 건너뛸 수 있습니다.

우리는 주요 내용으로 시작한다.

이것은 일반 요금으로 재생되는 ad1이며, 구독자는 이 광고를 건너뛰거나 빨리 감기할 수 없습니다.

우리가 두 번째 광고에 설정된 제한을 프로그래밍 방식으로 제거했기 때문에, 구독자는 이제 로스앤젤레스의 드론 샷인 ad2를 건너뛸 수 있습니다.

이 예시를 요약하자면, 우리는 클라이언트 애플리케이션 코드가 서버 측 인터스티셜의 속성과 구성을 어떻게 재정의할 수 있는지 시연했다.

구독 계획에 따라, 동일한 앱의 클라이언트 애플리케이션 코드는 AVPlayer가 인터스티셜을 예약하고 HLS 재생 목록에서 서버가 설정한 속성을 시행하고, 서버의 HLS 재생 목록에 구성된 모든 인터스티셜을 비활성화하여 완전히 재정의하고, 인터스티셜의 특정 속성을 업데이트하여 부분 재정의를 수행할 수 있습니다.

마무리하기 위해, 서버 메소드를 사용하거나 AVFoundation API를 사용하여 클라이언트 애플리케이션 코드에서 HLS 인터스티셜을 예약할 수 있습니다.

애플리케이션 코드는 또한 서버 측 전면의 속성과 구성을 재정의할 수 있다.

로컬 재생과 AirPlay 세션에 대한 탐색 제한을 적용하기 위해, HLS 재생 목록은 EXT-X-DATERANGE 태그에서 X-RESTRICT 속성을 설정해야 하며, AVPlayerInterstitialEvent 객체의 제한 속성을 설정하여 애플리케이션 코드에서 동일한 것을 얻을 수 있습니다.

AirPlay 수신기의 기본 미디어 자산과 중간 미디어 자산 간의 전환 지연을 줄이려면, 미디어 자산 간의 미디어 작동 매개 변수를 계속 일치시키는 것이 좋습니다.

스트리밍 애플리케이션에서 AirPlay를 테스트하려면, 테스트 제품군에 다양한 수신기를 포함하세요.

이 세션이 유익하길 바라.

고마워.