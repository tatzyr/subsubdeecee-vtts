10032

♪ ♪

앨런: 안녕하세요, 여러분!

저는 접근성 팀의 엔지니어인 Allen입니다. WWDC의 "Meet Assistive Access"에 오신 것을 환영합니다.

애플에서, 우리는 우리의 제품이 모든 사람에게 접근 가능하고 포용적일 수 있도록 노력합니다.

우리는 인지 장애가 사람들이 우리의 기술과 상호 작용하는 방식에 그들만의 독특한 도전 과제를 제시할 수 있다는 것을 이해합니다.

보조 접근은 장애가 있는 사람들의 인지 부하를 완화하기 위해 앱과 경험을 핵심으로 추출하는 모드이다.

부모, 보호자 또는 보호자와 같은 신뢰할 수 있는 후원자의 도움으로, 보조 액세스 설정의 사용자 지정을 통해 iPhone 및 iPad에서 이전보다 더 독립적으로 앱을 쉽게 탐색하고 사용할 수 있습니다.

오늘, 우리는 보조 액세스를 설정하고 켜는 방법을 발견하고, 그것이 어떻게 작동하는지 탐구할 것입니다.

다음으로, 우리는 보조 접근의 목표와 핵심 가치 중 일부를 탐구할 것이다.

우리는 보조 접근이 켜져 있을 때 당신의 애플리케이션이 어떻게 작동할지 논의할 것입니다.

그리고 마지막으로, 우리는 Assistive Access에서 앱의 프레젠테이션에 대해 고려해야 할 추가 사항에 대해 논의할 것입니다.

그걸로, 시작하자.

보조 접근을 설정하는 것은 간단하다.

언급했듯이, 신뢰할 수 있는 지지자들은 설정 앱을 사용하여 장치를 사용하는 사람의 요구에 맞게 보조 액세스를 사용자 정의할 수 있습니다.

설정을 통해 이 모드에 처음 액세스할 때, 신뢰할 수 있는 지지자들은 초기 설정 과정을 통해 안내될 것입니다.

그들은 실행할 수 있는 선호하는 앱을 선택하는 것부터 배터리 표시기가 있는지 여부를 선택하는 것까지 보조 액세스의 많은 측면을 사용자 정의할 수 있습니다.

보조 접근은 설정에서 또는 접근성 단축키를 사용하여 켤 수 있습니다.

보조 액세스에 들어가면, 시스템은 설정에서 배경 화면을 변경할 수 있는 기능과 사람들에게 알림을 알리는 인터페이스가 있는 새로운 잠금 화면을 표시합니다.

잠금 화면을 지나서 탐색하면, 새로운 홈 화면이 더 큰 앱 아이콘과 더 큰 텍스트로 표시됩니다.

저는 이 모드를 위해 특별히 설계된 다섯 개의 Apple 앱을 포함하도록 Assistive Access를 설정했습니다: 친구와 가족의 전화를 걸거나 받기 위한 "전화", 메시지를 보내고 받기 위한 "메시지", 좋아하는 재생 목록에 액세스할 수 있는 "음악", 사진, 비디오 및 셀카를 찍을 수 있는 "카메라", 저장된 사진과 비디오를 보기 위한 "사진".

보조 접근은 인지 부담을 줄이기 위한 효과적인 경험을 창출하기 위한 일련의 설계 및 개발 목표로 만들어졌습니다.

iOS와 iPadOS의 많은 앱에는 버튼, 아이콘, 메뉴, 이미지 등을 포함한 많은 사용자 인터페이스 항목이 있습니다.

어떤 사람들에게는, 이러한 수준의 기능과 완전성은 운영에 어려움이 될 수 있다.

사람들은 산만함 없이 일을 완수할 수 있어야 한다.

보조 접근은 사용 가능한 옵션을 줄여 사람들이 관심 있는 항목을 찾고 탐색할 수 있도록 합니다.

더 적은 단계와 더 적은 옵션은 작업을 완료하는 데 성공할 수 있는 명확한 길을 제공하는 데 도움이 될 수 있다.

오류를 인식하고 회복하는 것은 어려울 수 있다.

사람들이 파일을 삭제하는 것과 같은 중요한 행동에 직면할 때, 그들은 명확한 지시를 받아야 하고 계속하기 전에 무슨 일이 일어나고 있는지 이해할 수 있는 기회가 주어져야 한다.

이것은 또한 시간에 의존하는 행동을 줄이고 언제든지 쉽게 돌아갈 수 있도록 하는 것을 포함한다.

익숙한 상호 작용과 패턴을 만드는 것은 보조 접근에 매우 중요하다.

그것은 예측 가능성과 편안함을 확립하는 동시에 텍스트와 이미지를 모두 보는 것과 같은 다중 모드 경험에 참여한다.

이것은 인지적 부담을 줄이고, 인터페이스를 친숙하게 만들고, 인터페이스가 이해될 가능성을 높인다.

복잡성을 줄이고, 사람들이 오류를 방지할 수 있도록 돕고, 친숙한 상호 작용을 만들어, 사람들은 iPhone과 iPad를 더 적은 어려움으로 사용할 수 있다.

이제, 보조 액세스가 켜져 있을 때 앱이 어떻게 작동하는지 살펴봅시다.

보조 접근에서, 제3자 앱은 그냥 작동할 것이다.

이 설정에서, 나는 내 앱을 추가했어. 어떻게 보이는지 보자.

앱을 열면, Assistive Access는 화면 하단에 눈에 띄게 표시된 큰 뒤로 버튼을 추가합니다.

뒤로 버튼을 위한 공간을 만들기 위해, 앱은 기본적으로 축소된 프레임으로 표시됩니다.

이것은 개별 장치 화면 크기에 따라 앱을 디자인한 경우 앱이 여전히 멋지게 보이도록 하기 위한 것입니다.

또한, 뒤로 버튼을 탭하여 홈 화면으로 돌아갈 수 있습니다.

일부 앱은 다양한 장치와 화면 크기에 적응할 수 있도록 특별히 설계되었습니다.

뒤로 버튼을 제외하고 앱을 전체 화면으로 실행할 수 있는 새로운 info.plist 키를 만들었습니다.

Info.plist 파일에 UISupportsFullScreenInAssistiveAccess를 추가하고 값을 yes로 설정하세요.

이 키를 사용하여 Assistive Access가 임의의 화면 크기에 적응할 수 있도록 앱을 설계했다는 것을 알리세요.

내 앱은 내 청중과 적응형 레이아웃을 위해 설계되었으므로, 이 키는 내 앱과 관련이 있다.

이 키를 추가한 후 내 앱이 어떻게 작동하는지 살펴봅시다.

좋아요, 제 앱은 보조 액세스에서 사용 가능한 모든 공간을 사용합니다.

당신의 앱이 똑같이 할 수 있도록 하는 방법을 살펴봅시다.

iPhone과 iPad의 훌륭한 앱은 사용자의 장치에 관계없이 적응하는 일관된 레이아웃을 갖도록 설계되었습니다.

이것은 앱이 장치나 화면 크기에 따라 하드 코드 레이아웃을 하지 않는다는 것을 의미합니다.

SwiftUI에서 개발자는 스택 및 그리드와 같은 레이아웃 컨테이너를 활용하여 뷰를 정렬하고 레이아웃 수정자를 사용하여 뷰의 크기, 위치 및 정렬을 조정하거나 제한할 수 있습니다.

앱에 더 많은 맞춤형 레이아웃이 필요하다면, "SwiftUI로 사용자 지정 레이아웃 구성" 세션을 확인하세요.

UIKit에서, 우리는 AutoLayout을 사용하고 두 가지 중요한 기능을 활용할 수 있습니다.

첫 번째는 안전 영역으로, 다이나믹 아일랜드 또는 홈 표시기와 같은 시스템 하드웨어 또는 소프트웨어 요소에 의해 방해되지 않는 화면의 부분입니다.

safeAreaInsets 속성을 사용하여 인터페이스의 보이는 부분 내에 뷰를 배치하십시오.

레이아웃 가이드는 화면에서 콘텐츠를 배치하고 정렬하는 데 도움이 되는 직사각형 영역을 정의하는 두 번째 기능입니다.

safeAreaLayoutGuide 속성을 사용하여 요소를 조정하고 콘텐츠 주변에 표준 여백을 적용하십시오.

앱을 적응력 있게 만드는 것에 대해 자세히 알아보려면, "UIKit: 모든 크기와 모양에 맞는 앱" 세션을 확인하세요.

SwiftUI를 사용하든 UIKit을 사용하든, 이 새로운 Info.plist 키는 적응형 레이아웃과 함께 Assistive Access의 모든 사용자가 앱에서 훌륭한 경험을 할 수 있도록 할 수 있습니다.

보조 액세스에서도 모든 사람이 앱을 즐기고 사용할 수 있도록 합시다.

봐줘서 고마워.

♪ ♪