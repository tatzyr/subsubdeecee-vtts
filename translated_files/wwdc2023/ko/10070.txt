10070

♪ 부드러운 기악 힙합 ♪

♪

안녕하세요, 제 이름은 제레미이고, 저는 미디어 경험 소프트웨어 엔지니어입니다.

이 강연은 앱에서 비디오 재생을 위한 훌륭한 공간 경험을 만드는 방법을 설명할 것입니다.

훌륭한 경험은 플랫폼에 최적화되고, 강력한 미디어 기능을 활용하며, 전체 시스템과 통합됩니다.

먼저, 우리는 최소한의 앱으로 미디어 경험을 탐구할 것이다.

다음으로, 몇 가지 고급 UI 기능을 살펴볼 것입니다.

그런 다음, 비디오를 표시하는 다른 방법을 살펴볼게.

마지막으로, 나는 옵션을 비교할 것이다.

iOS 또는 tvOS에서 미디어 API를 사용했다면, 친숙하게 느껴질 수 있습니다.

이 플랫폼은 동일한 API를 기반으로 하며 고유한 기능을 위해 확장합니다.

AVFoundation은 스트리밍, 구문 분석, 디코딩, 동기화 등 영화 재생의 모든 작업을 처리합니다.

그리고 AVKit은 AVFoundation과 UI 프레임워크를 기반으로 하여 각 플랫폼에 맞게 사용자 정의되고 통합된 재생 경험을 만듭니다.

이 플랫폼에서 AVFoundation은 3D 비디오와 같은 고유한 기능을 활용하는 새로운 미디어 형식을 지원하도록 향상되었습니다.

이러한 형식에 대한 자세한 내용은 이 세션을 참조하십시오.

AVFoundation은 또한 RealityKit을 사용하여 성능과 고품질로 렌더링하도록 향상되어 비디오가 주변 세계로 원활하게 합성될 수 있으며 오디오가 주변 세계에도 반응할 수 있도록 합니다.

그리고 AVKit의 AVPlayerViewController는 RealityKit의 힘과 플랫폼의 고유한 기능을 사용하여 매우 세련된 경험을 만들 수 있도록 확장되었습니다.

여기에는 당신이 기대하는 모든 재생 컨트롤이 포함되어 있지만, 많은 독특한 기능도 있습니다.

앱에서 이것을 활용하려면 무엇이 필요한가요?

먼저, Xcode 대상은 이 플랫폼의 SDK로 구축해야 합니다.

iOS SDK로 구축된 호환 가능한 iOS 앱은 iOS 호환 경험을 얻을 것이다.

iOS나 tvOS에서처럼 AVPlayerViewController를 사용하세요.

그리고 마지막으로, 뷰 컨트롤러를 제시하여 창을 채우세요.

이것을 몇 가지 코드로 시연해 봅시다.

먼저, 우리는 AVFoundation과 AVKit을 가져올 것이다.

다음으로, AVPlayerViewController를 만들고 AVPlayer를 연결하세요.

그런 다음, 콘텐츠 URL로 새 플레이어 아이템을 만들고 플레이어에 설정하세요.

뷰 컨트롤러에 플레이어를 설정한 후 항목을 추가하면 플레이어가 미디어 로딩을 시작하기 전에 어떻게 표시되는지 이해할 수 있기 때문에 성능을 향상시킬 수 있습니다.

그런 다음, SwiftUI에서 사용하려면, 그 코드를 UIViewControllerRepresentable로 래핑하세요.

우리는 이것을 PlayerView라고 부를 것이다.

그런 다음, 우리는 MoviePlayingApp이라고 부르는 앱을 만들 것입니다.

방금 정의한 뷰 컨트롤러를 추가하면 창을 채웁니다.

그렇게, 당신은 영화 재생 앱을 가지고 있습니다.

이 코드가 다른 Apple 플랫폼에서 쓸 것과 매우 유사해 보인다고 생각한다면, 그것은 그것이기 때문입니다.

AVPlayerViewController와 AVPlayer는 많은 무거운 일을 하고 있으므로 그럴 필요가 없습니다.

이와 같은 간단한 앱의 미디어 경험을 보여드리겠습니다.

앱이 출시되기 전에, 방만 보입니다.

앱이 실행되면, 큰 화면이 바로 앞에 나타나고 방이 어두워져 멋진 분위기를 조성한다.

움직일 때, 화면은 제자리에 유지되고, 오디오는 화면에 고정되어 있다.

재생 컨트롤을 표시하려면, 화면을 보고 탭하세요.

컨트롤은 비디오 바로 앞에 떠 있다.

노는 동안, 아무것도 하지 않으면 그들은 스스로 사라질 것이다.

아니면 화면을 보고 다시 탭하여 사라지게 하세요.

화면 아래의 창 막대를 잡고 위치를 바꾸세요.

화면 모서리를 잡고 크기를 조정하세요.

화면 크기가 조정됨에 따라 부드럽게 애니메이션되고 비디오의 종횡비와 일치한다는 점에 유의하십시오.

디지털 크라운을 돌려 볼륨을 조정하세요.

또는 디지털 크라운을 사용하여 이와 같은 환경을 여세요.

난 이런 식으로 영화 보는 걸 좋아해.

당신은 이것을 직접 경험해야 합니다.

이제, 그들이 제공하는 기능을 보기 위해 재생 컨트롤을 더 면밀히 살펴봅시다.

여기 우리의 플레이어 인터페이스가 있습니다.

오른쪽 상단에는 빠르게 조정하거나 음소거할 수 있는 볼륨 컨트롤이 있습니다.

내가 언급했듯이, 볼륨은 디지털 크라운으로도 조정할 수 있다.

왼쪽 하단에는 친숙한 재생/일시 정지 및 뒤로/앞으로 버튼이 있습니다.

하단 중앙에는 영화에서 다른 시간으로 점프할 수 있는 스크러버가 있다.

그리고 오른쪽 하단에는 더 많은 옵션이 있는 이 버튼이 있습니다.

재생 속도를 조정하는 옵션이 있습니다.

영화에 여러 개의 오디오 트랙이나 캡션 트랙이 포함된 경우, 이 옵션을 사용하여 오디오 트랙의 언어를 선택하거나 선호하는 언어로 캡션을 활성화하십시오.

이 마지막 옵션은 디밍 효과이다.

나는 그들에게 집중하기 위해 어둠 속에서 영화를 보는 것을 좋아하지만, 가끔은 비디오가 내 유일한 초점이 아니다.

여기서, 나는 내 주변에 무엇이 있는지 더 잘 보기 위해 디밍 효과를 끌 수 있다.

우리는 내장된 기본 사항을 다루었다.

이제, 좀 더 발전된 기능을 살펴봅시다.

썸네일 스크러빙은 스크러빙하는 동안 비디오의 작은 이미지를 보여주며, 콘텐츠를 원활하게 탐색할 수 있습니다.

트릭 플레이 트랙으로도 알려진 I-프레임 전용 재생 목록이 있는 HLS 스트림을 스크러빙할 때 컨트롤은 자동으로 썸네일을 표시합니다.

폭이 145픽셀인 작은 트릭 플레이 트랙이 선호됩니다.

자세한 내용은 이 문서를 참조하십시오.

때때로 미디어는 로고, 요약 또는 광고를 위해 타임라인에 삽입되어야 한다.

틈새 지원은 이 능력을 가능하게 한다.

인터스티셜이 존재할 때, 컨트롤은 타임라인의 지표와 함께 자동으로 반영될 것이다.

이러한 인터스티셜은 AVPlayerInterstital EventController로 프로그래밍 방식으로 구성하거나 HLS 스트림 내에서 설명할 수 있습니다.

자세한 내용은 이 세션을 참조하십시오.

비디오 재생 앱에서 일반적으로 사용되는 몇 가지 추가 UI 옵션이 있습니다.

문맥 작업을 통해 인트로 건너뛰기 또는 다음 에피소드 재생과 같은 버튼을 추가할 수 있습니다.

그들은 제목과 선택적 이미지를 가질 수 있다.

사용자 지정 정보 보기 컨트롤러는 콘텐츠에 대한 메타데이터를 표시하거나 관련 콘텐츠를 제안하는 데 사용할 수 있습니다.

이 API는 다른 Apple 플랫폼과 동일하게 작동합니다.

자세한 내용은 이 세션을 참조하십시오.

당신의 앱은 또한 몰입형 공간이라는 기능으로 당신을 다른 장소로 옮길 수 있습니다.

앱이 몰입형 공간을 만들 때, 당신은 그 공간이 어떻게 생겼는지 결정할 수 있습니다.

그리고 더 좋은 것은, 비디오 화면이 자동으로 그 공간으로 이동하고 매번 우수한 시야각을 보장하기 위해 예측 가능한 크기와 위치에 고정된다는 것입니다.

그리고 컨트롤은 더 쉽게 상호 작용할 수 있도록 분리되고 더 가까이 이동한다.

코드 좀 확인해 보자.

여기 이전의 MoviePlayingApp이 있습니다.

먼저, 우리는 몰입형 공간을 추가할 것이다.

3D 콘텐츠는 RealityKit 엔티티에 의해 설명될 것이다.

그런 다음 우리는 PlayerView에서 onAppear를 사용하여 공간을 열 것입니다.

몰입형 공간이 도킹될 때 영화 플레이어를 수용할 수 있도록 설계되었는지 확인하세요.

공간을 만들고 제시하는 방법에 대한 자세한 내용은 이 세션을 참조하십시오.

AVPlayerViewController는 이 플랫폼에서 훌륭한 경험을 위해 철저히 개선되고 설계되었습니다.

우리는 AVPlayerViewController가 당신을 위해 작동하기를 정말로 바랍니다.

따라서, 제안하고 싶은 기능이나 행동이 있다면, 사용 사례에 대해 계속 개선할 수 있도록 피드백을 제공하십시오.

이제, 누군가가 사용자 지정 재생 컨트롤을 구축해야 하는 드문 상황이 여전히 있을 수 있다.

이 경우, 피드백을 제공해 주세요.

그리고 AVPlayerViewController를 사용하는 것이 좋습니다.

컨트롤을 숨기고 사용자 지정 UI를 위한 오버레이를 제공할 수 있습니다.

이것은 낮은 수준의 API를 사용하는 것보다 선호됩니다. 왜냐하면, 우리가 시연했듯이, AVPlayerViewController는 재생 제어를 넘어 많은 시스템 통합 기능을 제공하기 때문입니다.

그리고 당신은 계속해서 훌륭한 시스템 통합 기능을 얻을 것입니다.

우리는 AVPlayerViewController의 전체 화면 경험을 탐구했습니다.

이제 비디오 재생을 위한 다른 사용 사례를 살펴봅시다.

가끔 당신은 영화가 창문에서 인라인으로 재생되기를 원합니다.

그것은 문서의 일부이거나 미리보기를 할 수 있다.

AVPlayerViewController 인라인은 이 상황에도 좋습니다.

인라인 뷰를 어떻게 얻나요?

창을 채우지 않고 표시될 때마다 이 모드를 자동으로 사용합니다.

인라인 컨트롤도 OS용으로 재설계되었다.

참고로, 비디오는 AVPlayerLayer를 사용하여 창 내에서 합성되기 때문에 3D 비디오를 표시할 수 없습니다.

때때로 당신의 앱은 3D 장면의 실체로 비디오를 재생하고 싶을 수도 있습니다.

그것은 스플래시 화면이나 비디오 전환일 수 있다.

이러한 경우, 당신은 재생 제어를 원하지 않으며 도킹과 같은 시스템 통합을 원하지 않습니다.

이러한 경우, RealityKit의 VideoPlayerComponent를 사용하세요.

VideoPlayerComponent는 RealityKit 엔티티를 AVPlayer에 연결합니다.

다른 개체와 마찬가지로 RealityKit 장면에 배치할 수 있습니다.

그것은 비디오에 대한 종횡비 올바른 메쉬를 만들고, 캡션 표시를 지원합니다.

가능하다면, AVPlayerLayer보다 그것을 선호하세요.

RealityKit의 비디오 최적화를 활용하기 때문에 AVPlayerLayer보다 성능이 향상되며, 새로운 3D 비디오 형식을 지원합니다.

자세한 내용은 이 세션을 참조하십시오.

때로는 비디오가 효과로 사용되는 3D 장면에서 비디오를 사용하고 싶을 수도 있습니다.

이 경우, 자신만의 기하학을 만들고 비디오가 표시되는 방식을 더 잘 제어할 수 있습니다.

VideoMaterial은 임의의 지오메트리에 비디오를 표시하는 낮은 수준의 API입니다.

이것은 원래의 종횡비를 보장할 수 없고 캡션을 표시할 수 없다는 것을 의미합니다.

자세한 내용은 이 관련 강연을 확인하세요.

우리는 몇 가지 추가 UI 기능과 다른 사용 사례에 대해 이야기했습니다.

DestinationVideo 샘플 앱은 이러한 기능 중 일부를 보여줍니다.

비디오를 선택할 수 있는 비디오 브라우저가 있으며 몰입형 공간에서 재생합니다.

여기 있어.

정보 페이지를 보여줄 비디오를 선택하면 몰입형 공간이 열립니다.

미리보기를 위해 사용자 지정 UI 컨트롤이 있는 인라인 플레이어의 사용에 주목하세요.

그럼, 그 영화를 틀어.

플레이어 UI가 나타나고 최적의 보기를 위해 고정된 크기와 위치에서 몰입형 공간에 즉시 도킹됩니다.

또 다른 좋은 세부 사항은 화면이 이와 같은 몰입형 공간에 도킹될 때, 재생 컨트롤이 분리되고 조금 더 가까워져 상호 작용하기 더 편리하다는 것입니다.

목록 버튼을 누르세요.

이 앱은 비디오를 보는 동안 콘텐츠 및 관련 콘텐츠에 대한 더 많은 정보를 표시할 수 있는 사용자 지정 정보 보기 컨트롤러를 제공했습니다.

비디오의 끝 근처에, 다음 재생이라고 표시된 문맥 액션 버튼이 오른쪽 하단 모서리에 나타납니다.

우리는 비디오 재생을 위한 공간 경험을 다루었습니다.

아름다운 영상과 훌륭한 공간 오디오로 당신 앞에 떠 있는 큰 화면이 있습니다.

그것은 당신이 해야 할 모든 것에 대한 재생 컨트롤을 포함하고 있으며, 우리는 다른 재생 사용 사례에 대해 이야기했습니다.

앱에 비디오를 표시하는 방법에는 여러 가지가 있습니다.

그것들을 비교해 보자.

이것들은 비디오를 보여주기 위한 API이다.

각각 다른 능력을 가지고 있다.

필요한 미디어 경험을 위해 올바른 API를 사용하세요.

미디어가 정확하게 표시되고 접근할 수 있는지 확인하세요.

플랫폼에 최적화되어 있고 RealityKit으로 렌더링하여 3D 비디오 포맷을 활성화하세요.

그리고 플랫폼에 맞게 조정된 강력한 재생 컨트롤이 있는지 확인하세요.

그리고 훌륭한 경험을 하기 위해 전체 시스템과 통합되었는지 확인하세요.

AVPlayerViewController를 사용하면 앱이 다른 Apple 플랫폼에서 사용했던 기능과 이 플랫폼의 새롭고 독특한 기능을 최대한 활용할 수 있습니다.

사용자에게 훌륭한 영화 재생 경험을 제공할 수 있습니다.

공간 미디어 기능은 사람들이 완전히 새로운 방식으로 비디오를 경험할 수 있는 기회를 나타낸다.

시작하려면, DestinationVideo 샘플 프로젝트를 확인하세요.

그것은 여기서 논의된 많은 특징을 보여준다.

그리고 이 관련 회담을 확인해 보세요.

나는 사람들이 당신이 이 강력한 도구로 무엇을 만드는지 보기를 기다릴 수 없다.

하지만 이제, 나는 쇼를 다시 봐야 해.

즐겨!

♪