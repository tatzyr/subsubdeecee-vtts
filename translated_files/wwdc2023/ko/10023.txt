10023

♪ 부드러운 기악 힙합 ♪

♪

안녕 그리고 환영해.

제 이름은 시리샤이고, 저는 헬스킷 팀의 엔지니어입니다.

오늘날, App Store에는 사용자가 건강을 유지하고 건강을 유지하는 데 도움이 되는 수백 개의 건강 및 피트니스 앱이 있습니다.

그리고 그들 모두를 위해, HealthKit은 중앙 집중식 암호화된 데이터베이스를 제공하므로, 놀라운 앱은 사용자에게 건강 데이터에 대한 응집력 있는 보기를 보여줄 수 있습니다.

이제, 운동 API는 HealthKit이 제공하는 가장 강력한 것 중 하나이며, 나는 그것들을 좋아한다.

오늘의 비디오를 위해, 저는 사이클링 운동을 추적하기 위해 Apple Watch용 샘플 사이클링 앱을 만들었습니다.

그리고 더 쉽게 접근할 수 있도록, 저는 사이클링 컴퓨터로 사용하기 위해 핸들바에 iPhone을 장착하고 싶습니다.

그렇게 하면 핸들바에서 손을 떼지 않고도 Apple Watch에 표시된 실시간 메트릭을 빠르고 쉽게 볼 수 있습니다.

HealthKit은 Apple Watch와 iPhone 간의 활성 운동 세션을 제어하고 미러링하는 새로운 운동 API를 도입하고 있습니다.

사이클링 속도, 전력, 케이던스 및 기능적 임계 전력 또는 FTP를 추적하기 위한 새로운 데이터 유형을 추가하여 사이클링 운동에 대한 지원을 업데이트합니다.

그리고 그것으로 충분하지 않다면, 건강 앱과 함께 HealthKit은 이제 iPad에 있습니다.

이제 iPad에서 iCloud 계정에 로그인한 고객은 HealthKit을 통해 iPad에 동기화된 건강 데이터를 볼 수 있습니다.

당신이 제공할 수 있는 더 풍부한 건강과 운동 후 경험을 상상해 보세요.

오늘, 저는 샘플 앱을 사용하여 페어링된 iPhone으로 Apple Watch에서 실행되는 운동을 미러링하는 방법을 시연할 것입니다.

그런 다음, 새로운 사이클링 메트릭을 수집하고 장치 간에 동기화하는 방법을 보여주는 코드를 추가하겠습니다.

그리고 iPad에서 운동을 표시하는 데 필요한 인증 세부 사항으로 마무리하겠습니다.

그래서 Apple Watch, iPhone 및 iPad가 어떻게 함께 작동하여 훌륭한 운동 경험을 제공할 수 있는지 확인해 봅시다.

내 예에서, 나는 Apple Watch에서 운동을 하고 있다.

나는 운동 세션을 수명 주기, 시작, 일시 정지 및 중지를 관리하기 위해 중앙 집중식 객체로 사용하고 있다.

아직 운동 세션에 익숙하지 않다면, 이전 강연, "운동으로 작업하는 새로운 방법", "Apple Watch용 운동 앱 만들기"를 보고 싶을 수도 있습니다.

이제, iPhone에서 운동을 제어하려면, Apple Watch에서 iPhone으로 이 운동 세션을 가져와야 합니다.

그리고 그렇게 하기 위해, 나는 HealthKit의 새로운 미러링된 세션 API를 사용할 것이다.

내 Apple Watch에서 미러링된 세션이 시작되면, 내 iPhone 앱이 실행되지 않으면, 백그라운드에서 실행되고 운동 세션이 넘겨질 것이다.

세션을 받으려면, 내 아이폰 앱이 준비되어야 한다.

그래서, 먼저 HealthStore를 사용하여 iPhone 앱 실행 시퀀스에서 핸들러를 설정할 것입니다.

그렇게 하면, 내 Apple Watch에서 세션을 받을 준비가 될 것이다.

내 iPhone 앱이 전경이나 백그라운드에서 실행될 때마다, 나는 내 Apple Watch에서 전달된 활성 운동 세션을 받기 위해 미러링 시작 핸들러를 구현할 것이다.

다음으로, 나는 사이클링의 활동 유형으로 운동 구성을 만들 것이다.

그런 다음 iPhone 앱의 기존 Start Watch App API를 호출하여 페어링된 Apple Watch에서 앱을 실행하고 운동 구성을 통과할 것입니다.

iPhone에서 구성을 받으면, Apple Watch 앱에서 운동 세션을 만들 수 있습니다.

내 Apple Watch의 운동 세션은 기본 세션이라고 불린다.

그리고 내 아이폰의 운동 세션은 미러링된 세션이라고 불린다.

그래서 그게 어떻게 생겼는지 여기 있어.

iPhone 앱에서 운동을 시작하면, Apple Watch의 앱이 iPhone에서 보낸 구성으로 실행됩니다.

지금까지는, 아주 좋아.

이제 이 API를 매우 편리하게 만드는 것은 HealthKit이 기본 세션 상태와 미러링된 세션 상태를 모두 동기화하도록 관리한다는 것입니다.

예를 들어, 내 Apple Watch에서 기본 세션이 일시 중지되면, 내 iPhone의 미러링된 세션도 일시 중지됩니다.

내 iPhone에 활성 운동 세션의 복사본을 얻는 것 외에도, HealthKit은 두 장치 간에 관련 운동 데이터를 교환할 수 있는 새로운 API를 제공하며, 활동을 시작하고 종료하고 이벤트를 생성할 수 있는 기능을 제공합니다.

좋아요, 이제 기본 세션이 준비되었고 iPhone이 핸들러를 받을 준비가 되었으니, startMirroringToCompanionDevice에 전화하여 Apple Watch에서 미러링을 시작하고 기본 세션을 시작할 것입니다.

Apple Watch에서 startMirroring을 호출하면, HealthKit은 백그라운드에서 내 동반자 iPhone 앱을 실행하고, 내 앱에 10초를 제공하여 라이브 활동을 시작하고 핸들러를 호출하여 미러링을 시작합니다.

좋아요, 그래서 우리는 Apple Watch에서 세션을 시작했고 iPhone에서 복사본을 받았습니다.

이제, 세션 상태가 장치 간에 어떻게 전달되는지 보여드리겠습니다.

내 예제 앱에서, 나는 사용자에게 세션이 실행 중인지, 일시 중지되었는지 등과 같은 운동 세션의 상태를 보여주고 싶다.

그래서 나는 세션 상태 업데이트와 생성된 이벤트를 모니터링하기 위해 Apple Watch와 iPhone에서 세션 대리인을 설정할 것이다.

iPhone 앱에서 검색된 미러링된 세션에 대한 참조를 유지하는 것이 중요하다는 것을 명심하세요.

Apple Watch에서 startActivity를 호출하면 기본 세션이 시작되고 세션 상태가 실행으로 변경됩니다.

이 상태 업데이트는 기본 세션의 세션 대리인으로 설정되어 있기 때문에 내 Apple Watch 앱으로 전달됩니다.

내 아이폰의 내 앱은 또한 미러링된 세션 대리인을 통해 상태 업데이트를 받는다.

활동적인 운동 세션을 iPhone으로 가져오고 세션의 변경 사항을 모니터링하는 것은 매우 쉽습니다.

그래서 이게 어떻게 생겼는지야.

Apple Watch에서 운동 세션이 시작되면, iPhone과 Apple Watch의 일시 정지 버튼이 활성화되어 운동 세션이 실행 중임을 나타냅니다.

기본 세션과 미러링된 세션 간의 세션 상태를 동기화하는 것 외에도 일시 중지 및 재개와 같은 이벤트를 생성하고 보낼 수도 있습니다.

Apple Watch에서 운동 세션을 일시 중지하면, Apple Watch 앱과 iPhone의 미러링된 세션 모두 세션 대리인을 통해 일시 중지 이벤트에 대한 알림을 받습니다.

그리고 그건 이렇게 생겼어.

Apple Watch에서 운동 세션을 일시 중지하면, 두 장치의 재개 버튼이 활성화됩니다.

이제 iPhone에서 운동 세션이 있으므로, iPhone에서도 운동을 제어할 수 있습니다.

iPhone에서 미러링된 세션을 재개하면, Apple Watch의 기본 세션 대리인은 상태 변경에 대한 알림을 받고 미러링된 세션 대리인은 이력서 이벤트를 받습니다.

다음으로, 사이클링 속도, 전원, 케이던스와 같은 새로운 데이터 유형을 포함하여 HealthKit이 올해 도입하는 새로운 사이클링 기능을 활용하는 방법을 보여주고 싶습니다. 심박수 모니터가 심장 박동 데이터를 수집하고 건강 데이터베이스에 기록하는 방법과 유사한 이러한 데이터 유형을 제공하도록 설계된 블루투스 장치에 직접 연결할 수 있는 새로운 기능; 그리고 마지막으로, Apple Watch의 HealthKit이 이러한 블루투스 장치에서 수집된 데이터를 기반으로 FTP를 자동으로 계산하고

내 자전거에는 전력과 케이던스를 모으는 파워 미터가 있는데, 나는 그것을 내 애플 워치와 페어링했다.

센서는 내 Apple Watch에 데이터를 기록하고, 내가 탈 때 디스플레이를 위해 그 데이터를 내 iPhone으로 보내기 위해 앱을 확장하고 싶다.

이를 위해, 저는 먼저 권장 운동 빌더 API beginCollection을 사용하여 사이클링 메트릭을 수집하기 시작할 것입니다.

그리고 나서 나는 sendData(toRemoteWorkoutSession) API를 사용하여 데이터를 보낼 것이다.

사이클링 메트릭을 보내려면, Apple Watch의 블루투스 센서에서 받은 속도, 케이던스 및 전력 데이터를 패키징하고 기본 세션에서 sendData(toRemoteWorkoutSession)를 호출할 것입니다.

결과적으로, 내 iPhone의 미러링된 세션 대리인은 패키지 데이터와 함께 didReceiveDataFromRemoteDevice 통화를 받게 되며, 이는 내 iPhone에서 압축을 풀고 표시할 수 있습니다.

Apple Watch에서 사이클링 메트릭을 보내는 예제 앱의 모습과 iPhone 앱에 표시되는 방법은 다음과 같습니다.

sendData(toRemoteWorkoutSession)를 사용하여 iPhone에서 Apple Watch로 반대 방향으로 데이터를 보낼 수도 있습니다.

제 예에서, 저는 운동 중에 물 섭취량을 추적하여 다음 라이딩을 위한 더 나은 수분 공급 계획을 세우기 위해 나중에 분석할 수 있도록 하고 싶습니다.

이를 위해, 나는 iPhone에서 Apple Watch로 미러링된 세션에서 소비하는 물의 양을 포장하고 보낼 것이다.

기본 세션의 위임 방법 didReceiveDataFromRemoteDevice는 포장을 풀고 Apple Watch에 저장할 패키지 데이터로 호출됩니다.

그래서 여기 내 예시 앱에서 어떻게 보이는지 보여줘.

내가 가져가는 물의 각 온스를 계산하기 위해 버튼을 탭하면, 그것은 그것을 내 Apple Watch로 보내며, 그곳에서 소비된 물의 총량을 표시합니다.

이제 stopMirroringToCompanionDevice API를 호출하여 운동 중 언제든지 세션 미러링을 중지할 수 있습니다.

이 메소드를 호출하면 컴패니언 장치로 데이터 전송이 중단되고 미러링된 세션의 didDisconnectFromRemoteDevice WithError 위임 메소드가 호출됩니다.

그리고 사이클링이 끝나면, 기본 세션을 끝내고 빌더를 완료하여 Apple Watch에 저장할 것입니다.

Apple Watch에 운동 샘플을 저장한 후, 다른 장치와 동기화되며, 이제 더 자세한 차트와 시각화로 운동 후 요약을 보여줄 수 있습니다.

좋아! 내 다음 단계는 iPad에서 실행되는 앱에서 운동 후 요약을 제시하는 것이다.

방금 Apple Watch에 저장한 운동이 iPad와 자동으로 동기화되기 때문에, 운동 데이터를 시각화하기 위해 몇 가지 변경만 하면 됩니다.

HealthKit 데이터에 액세스하는 모든 앱과 마찬가지로, iPad의 내 앱은 먼저 사용자 인증을 받아야 합니다.

앱이 승인을 요청할 때, 필요한 경우 인증 시트가 표시됩니다.

iPad에서는 앱에 여러 창 장면이 있을 수 있으므로, 인증 시트가 적절한 장면 위에 표시되는지 확인하는 것이 중요합니다.

내 앱에서 이것을 하기 위해, 나는 먼저 HealthKitUI 프레임워크를 가져올 것이다.

읽기에 관심이 있는 데이터 유형, 특히 활성 에너지, 사이클링 속도, 전력, 케이던스, 심박수 및 운동 샘플을 지정할 것입니다.

그런 다음, SwiftUI 앱을 만들었기 때문에, HealthKitUI 프레임워크의 새로운 healthDataAccessRequest 보기 수정자를 사용하고 공유하고 읽고 싶은 데이터 유형과 트리거를 전달할 것입니다.

트리거를 true로 설정하면 내 앱에 인증 시트가 표시됩니다.

UIKit 앱의 경우, healthStores.authorizationView ControllerPresenter 속성을 설정한 다음, 공유하고 읽을 유형으로 승인을 요청합니다.

이제, 승인이 처리되면, iPad에서 내 운동을 확인해 봅시다.

굉장해!

이제 운동 데이터에 액세스하고 iPad의 화면 크기를 활용하여 앱에 더 풍부한 경험을 제공할 수 있습니다.

정말 쉽지 않아?

이제 iPhone에서 운동을 시작하고 제어하고, Apple Watch에서 풍부한 사이클링 데이터를 수집 및 동기화하고, 마지막으로 iPad에서 운동 세부 사항을 볼 수 있습니다.

마무리하려면, iPad에서 인증을 지원하도록 앱을 업데이트해야 합니다.

피트니스 앱에 사이클링이 포함된 경우, 새로운 데이터 유형에 대한 지원을 추가할 수 있습니다.

iPhone과 Apple Watch에서 운동 앱을 구축하는 경우, 새로운 미러링된 세션 API를 확인하여 데이터를 미러링하고 두 장치 간의 상태를 제어하십시오.

앱에 필요한 경우, 동기화 식별자와 버전 번호를 사용하여 서버와 사용자의 장치에서 데이터를 일관되게 유지하십시오.

그리고 마지막으로, 우리에게 당신의 피드백을 주세요.

우리는 세상을 건강하게 유지하기 위해 놀라운 앱을 계속 구축하는 데 필요한 기능을 지원하고 싶습니다.

봐줘서 고마워.

♪