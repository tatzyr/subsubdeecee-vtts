10146

♪ 부드러운 기악 힙합 ♪

♪

안녕!

저는 Core Location의 엔지니어인 Ilya Veygman입니다.

저는 오늘 공간 컴퓨팅을 위한 핵심 위치에 대해 이야기하기 위해 왔습니다.

Apple의 생태계를 처음 접하든 오랜 App Store 개발자이든, 이 시스템이 할 수 있는 일의 종류에 대해 많은 질문이 있을 것입니다.

xrOS는 당신의 상상력의 결실을 보여주는 데 훌륭하며, Core Location은 당신이 현실 세계에 닻을 내릴 수 있도록 도와줍니다.

오늘, 저는 Core Location으로 그것을 하는 방법에 대해 말씀드리기 위해 왔습니다.

Apple 개발자 생태계를 처음 접하는 분들을 위해, 환영합니다!

앱에 위치를 추가하는 것이 얼마나 간단한지 보여주는 간단한 예시로 시작하고 싶습니다.

경험 많은 개발자들에게, 기본 사항을 검토하는 것은 결코 나쁘지 않다.

그래서 제 동료의 세션과 관련된 이 데모 애플리케이션의 샘플 코드인 "정절한 위치 업데이트 발견"부터 시작합시다.

이 액터에서, 우리는 CLLocationUpdate에서 실시간 업데이트를 요청하며, 사용할 수 있게 되면 여기에 비동기적으로 가져올 것입니다.

위치 업데이트 API에 대한 자세한 내용은 이 데모와 관련된 세션을 참조하십시오.

앱은 위치와 같은 민감한 정보에 액세스하기 전에 사용자의 권한을 요청해야 하므로, 여기에서는 이 API를 호출합니다.

이 간단한 예에서, 우리는 뷰가 있을 때 그것을 한다.

우리는 또한 빌드 설정 아래의 앱 정보에서 이 문자열을 설정해야 합니다.

다시 말하지만, 앱은 위치와 같은 민감한 정보를 얻기 전에 사용자의 허가를 받아야 하며, 이 문자열은 사용자에게 이유를 설명하기 위해 존재합니다.

그것은 나중에 이 접근을 요청하는 사용자에게 표시되는 프롬프트에 표시될 것이다.

그래서 우리가 시뮬레이터에서 실행할 때 이것이 어떻게 보이는지 봅시다.

다시 말하지만, 이 응용 프로그램에서, 우리는 간단한 예이기 때문에 바로 위치 접근을 요청합니다.

이것은 당신의 앱에서 항상 그런 것은 아닙니다.

당신은 우리가 사용자에게 그들의 개인 정보에 대한 접근 권한을 부여할 것인지 묻는 프롬프트를 받는다는 것을 알 수 있습니다.

이제 넘어가기 전에, Core Location이 이 시스템에서 사용자 개인 정보를 어떻게 취급하는지에 대해 조금 더 이야기해 봅시다.

개발자 생태계를 처음 접하더라도, Apple이 사용자 경험에서 개인 정보 보호에 중점을 두고 있다는 것을 이미 알고 있을 것입니다.

위치 접근은 이 격언의 예외가 아니다.

지리적 위치에 대한 업데이트를 받기 전에, 먼저 사용자에게 위치 정보에 접근할 수 있는 권한을 요청해야 합니다.

사용자의 동의 없이는 위치 업데이트를 받을 수 없습니다.

앱의 Info.plist에서 사용 설명 문자열을 설정하여 위치 관리자를 만들고 requestWhenInUseAuthorization을 호출하여 이 시스템에 대한 동의를 요청할 수 있습니다.

이것은, 다시, 사용자에게 왜 당신의 앱이 그들의 위치를 알아야 하는지 알려줍니다.

마지막으로, 애플리케이션이 실제로 필요할 때만 이 액세스를 요청해야 합니다.

이것은 개인 정보 보호 관점에서 더 나을 뿐만 아니라, 사용자가 접근을 허용할 가능성이 더 높다는 것을 보장한다.

매우 간단한 예였고 즉시 위치 업데이트를 요청하기 시작했기 때문에 샘플 코드에서 이것을 했다는 것을 기억하세요.

그래서 이 프롬프트는 어떻게 생겼고 무엇을 보여주나요?

사용자는 여기와 비슷한 애플리케이션의 프롬프트를 보게 될 것입니다.

이것은 이미 iOS 개발 경험이 있는 사람들에게 친숙해 보일 수 있습니다.

사용자는 앱을 사용하는 동안 이 세션에 대한 위치 액세스 권한을 부여하거나 완전히 거부할 수 있습니다.

사용자는 또한 iOS와 마찬가지로 강조 표시된 버튼을 사용하여 정확하거나 대략적인 위치에 대한 애플리케이션 지식을 부여하도록 선택할 수 있습니다.

이 정확한 위치와 대략적인 위치가 정확히 어떻게 작동하는지에 대한 자세한 내용은 젊은 버전의 제가 주최하는 WWDC20의 "위치의 새로운 기능"을 참조하십시오.

그래서 데모로 돌아가.

이 애플리케이션에 정확한 위치에 대한 액세스 권한을 부여하고 사용하는 동안 승인한 후, 이제 위치 업데이트를 시작하고 앱이 위치 업데이트를 받는 것을 볼 수 있습니다.

그래서 "정확한 위치"가 정확히 무슨 뜻이야?

즉, 헤드셋이 사용자의 위치를 얼마나 정확하게 알 수 있나요?

장치 자체의 경우, Mac과 비슷한 정확도를 기대해야 하므로, 약 100미터입니다.

이것은 인근 레스토랑, 공원 및 기타 명소를 찾는 데 사용되는 것과 같은 응용 프로그램에 충분할 것이다.

그러나, iPhone이 근처에 있다면, 이 장치는 이 두 장치 간의 기존 연결을 활용하여 헤드셋에서 얻을 수 있는 위치 정확도를 iPhone과 같은 수준으로 향상시킬 수 있습니다.

당신의 장치는 다른 Apple 하드웨어와 함께 더 잘 작동합니다.

이것은 정확한 날씨 업데이트, 지오태깅 등과 같은 공간 컴퓨팅 시스템에서 실행할 수 있는 완전히 새로운 범위의 애플리케이션을 엽니다.

이제 신규 이민자와 숙련된 개발자 모두를 위해, 당신은 또한 사용자가 사용하는 동안 앱이 위치 업데이트를 받을 수 있다고 말하는 것을 들었습니다.

이것이 의미하는 바는 아이폰이나 시계에서 꽤 간단하지만, 우리에게 어떤 의미가 있나요?

결국 사용자 경험은 아이폰이나 시계와 매우 다르다.

그래서, 그것에 대해 이야기하자.

포그라운드 앱이 iOS에서 어떻게 그리고 언제 사용되는 것으로 간주되는지 논의한 2019년의 "핵심 위치의 새로운 기능"으로 다시 전화합시다.

아이폰과 같은 플랫폼의 경우, 이것은 꽤 명백하다.

주어진 시간에 단 하나의 앱만 전면에 있을 수 있다.

또한 앱이 백그라운드된 후 위치 업데이트를 받을 수 있는 짧은 유예 기간이 있습니다.

그래서 여기는 어때?

이 플랫폼의 애플리케이션은 완전히 몰입할 수 있거나, 창과 같은 곳에서 앱을 실행할 수 있습니다.

"핵심 위치는 이것을 어떻게 처리하나요?"

넌 아마 궁금해하고 있을 거야.

완전히 몰입할 수 있는 경험을 위해, 이것은 간단하다.

사용자가 애플리케이션을 실행하는 한, 우리는 사용자가 앱이 자신의 위치를 얻는 데 동의했다고 가정하면, 사용 중이며 위치 업데이트를 받을 자격이 있다고 간주합니다.

이 시스템에서 Core Location은 사용자가 최근에 앱을 본 한 앱에 위치 정보를 제공합니다.

즉, 이 플랫폼에서, 우리는 사용자가 자신의 위치를 제공하는 데 동의한 경우, 그리고 사용자가 최근에 앱을 본 경우 창에서 실행되는 앱이 위치 업데이트를 받을 수 있는 것으로 간주합니다.

이것을 좀 더 구체적으로 살펴봅시다.

이 두 앱 모두 사용 중에 사용자의 위치에 액세스할 수 있는 권한이 있다고 상상해 보세요.

사용자가 두 앱과 상호 작용하거나 보고 있지 않는 한, 어느 누구도 위치 업데이트를 받을 수 없을 것이다.

사용자가 왼쪽에 있는 앱과 상호 작용하기 시작하면, 그 앱은 이제 위치 업데이트를 받을 수 있지만, 오른쪽 앱은 사용자의 주변 시야에 있더라도 여전히 할 수 없습니다.

그리고 이것은 사용자가 오른쪽의 앱과 같은 다른 곳을 보거나 두 앱을 동시에 볼 수 있도록 두 앱을 함께 이동할 때까지 사실로 유지됩니다.

iOS와 마찬가지로, Core Location이 앱을 더 이상 사용하지 않는 것으로 간주하기 전에 유예 기간이 있습니다.

즉, 사용자가 왼쪽에 있는 앱을 본 다음, 다른 곳을 찾기 전에 오른쪽에 있는 앱에서, Core Location이 이러한 앱을 사용하지 않는다고 간주하기 전에 두 앱 모두 여전히 위치를 얻을 수 있는 짧은 시간(몇 초)이 있을 것입니다.

우리는 그러한 위치 액세스 모델이 사용자 개인 정보를 존중하면서 이 플랫폼에서 좋은 경험을 제공한다고 생각합니다. 왜냐하면 사용자는 허가나 지식 없이는 자신의 위치를 추적할 수 없기 때문입니다. 특히 이 장치는 배낭과 같은 어딘가에 숨겨져 있는 것이 아니라 대화식으로 사용하기 위한 것이기 때문입니다.

따라서, 앱은 실행되지 않는 동안 위치 업데이트를 받을 수 없습니다.

마찬가지로, 모니터링 API의 업데이트는 전달되지 않을 것이다.

그래서 이것은 이미 Apple 플랫폼용 위치 사용 앱을 가지고 있는 많은 개발자들이 아마도 궁금해하는 다른 것으로 나를 데려옵니다: 호환성 모드에서 실행할 때 내 앱은 어떻게 작동할까요?

그래서 xrOS를 실행하는 장치에 대한 코드 변경 없이 iPhone 또는 iPad 앱을 실행하면 어떻게 되나요?

그것에 대해 조금 이야기하자.

이미 논의한 바와 같이, "사용 중"의 "사용 중"은 사용자가 최근에 본 곳에서 파생됩니다.

그리고 앱은 사용자가 보고 있을 때만 위치를 얻을 수 있습니다.

그래서 항상 인증을 요청하는 앱은 어떤가요?

항상 프롬프트하는 앱은 사용 중에 승인을 요청하도록 요청이 리디렉션됩니다.

마찬가지로 설정에서 항상 애플리케이션에 대한 옵션이 아니라는 것을 알게 될 것입니다.

이 시스템의 위치는 앱이 사용되는 동안 싱글 샷 또는 지속적인 업데이트에 가장 적합합니다.

호환 가능한 iPhone 또는 iPad 앱이 지역 모니터링 또는 새로운 CLMonitor를 사용하는 경우, 이벤트가 제공되지 않습니다.

iOS 앱이 특정 API가 항상 지원된다고 가정하는 방식으로 설계되었는지, 예를 들어 모니터링 API가 이벤트를 제공하지 않는 경우 예상치 못한 방식으로 동작할 수 있는지 고려하십시오.

마찬가지로, 앱이 실행되지 않는 동안 백그라운드에서 위치 업데이트를 받는 것에 의존하는지 고려하십시오.

일반적으로 우리의 API, 특히 올해 새로운 것에 대해 더 알고 싶으시다면, 제 동료들의 다른 두 세션과 전년도의 다른 세션을 시청하는 것이 좋습니다. 특히 당신이 우리 생태계에 새로 온 사람이라면 더욱 그렇습니다.

"수정된 위치 업데이트 발견"은 API의 몇 가지 새로운 개발, 특히 위치 업데이트를 권장하는 방법과 API를 Swift 동시성과 더 호환되도록 만드는 방법에 대해 논의합니다.

"Meet Core Location Monitor"는 API 모니터링의 새로운 발전과 앱이 지리적 항목 및 출구와 같은 이벤트에 대한 알림을 받을 수 있는 방법을 어떻게 다시 상상했는지에 대해 자세히 설명합니다.

만약 위치가 당신의 앱에 관심이 있다면, 나는 당신이 이것들이 잘 보낸 시간이라는 것을 알게 될 것이라고 확신합니다.

xrOS는 여러분 중 많은 사람들이 꽤 오랫동안 예상했던 정말 멋진 경험을 제공합니다.

우리도 그랬고, 이 장치를 위해 특별히 설계된 앱과 호환 가능한 iPhone 또는 iPad 앱 모두에 대해 최상의 사용자 경험을 제공할 수 있도록 열심히 노력했습니다.

우리는 또한 사용자 개인 정보 보호가 가능한 최선의 방법으로 존중되고, 이 플랫폼으로의 전환이 우리 매장에 기존 앱이 있는 사람들을 위해 가능한 한 원활하다는 것을 확실히 하고 싶습니다.

이제, 호환 가능한 앱이 지역 변경이나 방문과 같은 이벤트에 대한 알림을 받지 못할 때 시나리오에서 어떻게 동작할지 고려하십시오.

나는 당신이 당신의 흥미를 불러일으킬 수 있는 핵심 위치와 일반적으로 공간 컴퓨팅에 특화된 다른 세션을 보는 것을 확실히 권장합니다.

감사합니다 그리고 나머지 WWDC를 즐기세요.

♪