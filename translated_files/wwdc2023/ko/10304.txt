10304

♪ ♪

오누르 타킨: 안녕. 제 이름은 오누르 타킨입니다.

저는 엔지니어링 매니저이며, 오늘 DockKit을 사용하는 전동 iPhone 스탠드와의 통합을 소개할 것입니다.

이 비디오에서, 저는 DockKit이 무엇인지에 대해 이야기한 다음, 상자에서 꺼내서 어떻게 작동하는지 살펴보고, DockKit을 사용하여 앱을 사용자 정의할 수 있는 방법을 살펴본 다음, 마지막으로 장치 애니메이션을 사용하여 어포던스로서 움직이게 될 것입니다.

그래서, DockKit이 뭐야?

DockKit은 iPhone이 전동 카메라 스탠드의 중앙 컴퓨팅 역할을 할 수 있는 프레임워크입니다.

DockKit 스탠드는 Pitch and Yaw 모션 모델과 자동 시스템 추적기를 지원하여 모든 iPhone 카메라의 시야를 360도 팬과 90도 기울기로 확장합니다.

이를 통해 사용자는 카메라 앱에서 프레임에 있는 것에 대해 걱정하지 않고 콘텐츠에 집중할 수 있습니다.

이 스탠드에는 전원을 켜고 추적을 비활성화하기 위한 간단한 버튼과 추적이 활성화되어 있고 프레임에 있는지 알려주는 LED 표시기가 포함될 수 있습니다.

전화기를 스탠드와 페어링한 다음 가는 것이 좋습니다.

모든 마법은 iPhone 자체의 응용 프로그램 및 시스템 서비스에서 일어난다.

시스템 수준에서 처리되는 모터 제어 및 피사체 추적으로 인해 iOS 카메라 API를 사용하는 모든 앱은 DockKit을 활용할 수 있습니다.

그것은 비디오 캡처, 라이브 스트리밍, 화상 회의, 피트니스, 기업, 교육, 의료 등을 위한 앱에서 더 나은 경험과 새로운 기능을 위한 기회를 창출합니다.

DockKit에 대해 이야기하는 대신, 제가 당신에게 보여드리겠습니다.

내 앞에는 프로토타입 DockKit 스탠드가 있다.

나는 이미 그것을 아이폰과 페어링했다.

스탠드에 있을 때, 전화기는 DockKit을 통해 페어링된 독과 통신할 것이다.

이제, 한 번 시도해 보자.

내장 카메라 앱을 실행하고 여기서 이 버튼을 누르면 추적이 시작됩니다.

내가 테이블 주위를 움직일 때, 부두는 나를 추적한다.

내가 프레임 안에 있다는 것을 나타내기 위해 녹색 LED가 깜박이는 것을 주목하세요.

이제, 후면 카메라로 전환하겠습니다.

나를 시야로 데려가기 위해 180도 회전하여 부두가 어떻게 반응하는지 주목하세요.

정말 멋져.

하지만 이것은 내장된 카메라 앱에서만 작동하지 않습니다.

카메라 API를 사용하는 모든 앱은 독과 함께 사용할 수 있습니다.

예를 들어, FILMICPRO를 시도해 봅시다.

이것은 오늘 App Store에서 다운로드할 수 있는 것과 동일한 FILMICPRO입니다.

앱을 실행하면, 후면 카메라로 기본 설정됩니다.

그리고 이 모든 것은 상자 밖에서 작동한다.

DockKit 스탠드를 사용하면 주변의 공간과 물체와 상호 작용할 수 있습니다.

예를 들어, 나는 여기 책 더미에 가서 내 책에 대해 이야기하거나, 내 공간을 재배치하여 물체와 상호 작용할 수 있다.

보세요, DockKit 애플리케이션은 이야기꾼이 시야에 대해 걱정하는 대신 이야기에 집중할 수 있게 해준다.

아이폰의 내장된 이미지 인텔리전스와 부드러운 모터로, 이 스탠드들은 진정으로 살아난다.

이것이 어떻게 작동하는지 알아봅시다.

DockKit 시스템 추적기는 카메라 처리 파이프라인 내부에서 실행되며, 내장 추론을 통해 카메라 프레임을 분석하고, 추적할 피사체를 결정하고, 피사체 궤적을 추정하고, 모터를 구동하여 피사체를 적절하게 프레임합니다.

촬영 감독이 실제 사건을 관찰하고 카메라 관점을 조정하는 것과 마찬가지로, DockKit은 카메라 프레임에서 물체를 추론하고 작동 명령을 통해 모터를 도크로 조정합니다.

모터 제어는 DockKit 스탠드를 관리하고 통신하는 DockKit 데몬을 통해 이루어집니다.

작동 명령은 DockKit 프로토콜을 통해 스탠드로 전송되며 센서 피드백은 모터 제어 루프를 닫는 데 사용됩니다.

추적을 처리하기 위해, 카메라 프레임은 ISP 추론을 통해 분석되고 초당 30프레임으로 DockKit으로 전달됩니다.

다인 시나리오에 도움이 되는 시각적 이해 프레임워크가 있습니다.

얼굴과 몸 경계 상자가 생성되어 다중 모델 시스템 레벨 추적기에 공급됩니다.

추적기는 추적된 각 사람이나 물체에 대한 트랙을 생성하고 추론의 간격과 오류를 부드럽게 하기 위해 통계적 EKF 필터를 실행합니다.

결국, 현실 세계의 신호가 항상 완벽한 것은 아니다.

피사체에 대한 추적기 추정치는 모터 위치 및 속도 피드백뿐만 아니라 전화 IMU와 결합하여 최종 궤적과 액추에이터 명령에 도달합니다.

종종, 여러 주제가 프레임에 존재할 수 있다.

기본적으로, DockKit은 중앙 프레임으로 주요 피사체를 추적합니다.

만약 그들이 두 번째 사람이나 물체를 참여시킨다면, DockKit은 또한 그 사람이나 물체를 프레임하려고 시도할 것이다.

예를 들어, 여기에는 Mahmut, Steve, Dhruv, Vamsi가 있다.

마흐무트는 녹색 경계 상자로 표시된 주요 주제이다.

신체와 감지된 얼굴을 위한 경계 상자가 있다는 것을 주목하세요.

다른 팀원들이 마흐무트를 방해하고 길을 건너더라도, 추적기는 주요 주제를 계속 추적한다.

인식이나 추론이 방해로 인해 잘못된 결과를 줄 때, 통계 추적기는 오류를 수정하고 Mahmut를 계속 추적할 수 있다.

그것이 앱에 추가 코드를 추가하지 않고도 DockKit이 작동하는 방식입니다.

그러나, 고객이 좋아할 새로운 기능을 제공하기 위해 DockKit과 통합하면 상황이 정말 흥미로워집니다.

DockKit 액세서리를 제어할 수 있는 방법을 살펴봅시다.

이것은 부두에 대한 참조를 얻는 것을 포함할 것이다.

거기에서 프레임을 변경하거나, 추적되는 것을 지정하거나, 시스템 추적을 중지한 후 모터를 직접 제어할 수 있습니다.

먼저, 도크 액세서리 상태 변경 사항을 등록하고 싶을 것입니다.

도킹 또는 도킹 해제 알림은 사람이 호환 가능한 도크 액세서리에서 iPhone을 도킹하거나 제거할 때 발생합니다.

알림은 추적 동작을 수정하기 위한 전제 조건이다.

DockAccessoryManager 상태 이벤트를 통해 독의 상태를 쿼리할 수 있습니다.

유일한 관련 상태는 도킹되고 도킹되지 않은 상태이다.

연결성은 DockKit 자체에 의해 관리된다.

도킹 상태는 또한 iPhone이 DockKit 프로토콜을 통해 도크에 연결되어 있음을 의미합니다.

상태 이벤트를 통해, 당신의 애플리케이션은 또한 추적 버튼의 상태를 얻을 수 있습니다.

아이폰이 도킹되어 있다는 것을 알게 되면, 액세서리의 다른 측면을 제어할 수 있습니다.

가장 유용한 것 중 하나는 앱이 비디오가 잘린 방식을 관리하는 것입니다.

카메라 시야의 자르기를 제어할 수 있는 두 가지 방법이 있습니다.

먼저, 자동 프레임의 왼쪽, 중앙 또는 오른쪽 정렬을 선택하거나 특정 관심 영역을 지정할 수 있습니다.

둘 중 하나를 선택하고 싶을 수도 있는 경우를 살펴봅시다.

기본적으로, DockKit은 피사체를 프레임 중앙에 유지합니다.

이것은 비디오 스트리밍과 같은 간단한 것들에 잘 작동하지만, 이것이 이상적이지 않을 수 있는 사용 사례가 있다.

예를 들어, 앱이 이 로고와 같은 사용자 지정 그래픽 오버레이를 비디오 프레임에 삽입하면 어떨까요?

이 경우, 당신은 당신의 주제가 작품에 의해 가려지지 않았는지 확인하고 싶을 것입니다.

프레이밍 모드를 변경하기만 하면 이것을 수정할 수 있습니다.

여기서, 저는 프레임의 왼쪽 3분의 1에 정렬된 그래픽과 균형을 맞추기 위해 "오른쪽"을 지정하고 있습니다.

그리고 그 간단한 코드로, 구성은 이 비디오의 오프닝 시퀀스에 완벽하다.

자르기를 제어하는 또 다른 방법은 비디오 프레임의 특정 관심 영역을 지정하는 것이다.

예를 들어, 이 화상 회의 앱을 가져가세요.

모든 비디오 프레임은 정사각형 종횡비로 자르기 위한 것입니다.

그러나, DockKit의 기본 프레임으로 인해 누군가의 얼굴이 잘릴 수 있다.

DockKit 액세서리에 관심 영역을 설정하여 이 문제를 해결할 수 있습니다.

iPhone 디스플레이의 왼쪽 상단 모서리는 원점으로 간주됩니다.

관심 영역은 정규화된 좌표로 정의된다.

이 예에서, 나는 DockKit 액세서리에 관심 영역이 중심 사각형이라고 말하고 있다.

관심 지역에 대한 조정으로, 주제는 프레임 내에서 완벽하게 잘린다.

DockKit을 사용하면 유틸리티 또는 어포던스를 위해 앱에서 사용자 지정 모터 제어를 할 수도 있습니다.

이것은 많은 새로운 기능 기회를 열 수 있다.

DockKit은 기본적으로 시스템 추적을 활성화하기 때문에, 모터를 제어하거나 사용자 지정 추적을 수행하기 전에 이 값을 false로 설정해야 합니다.

DockKit 스탠드는 두 개의 회전 축에서 작동합니다: X와 Y.

기울기 또는 특히 피치 회전은 자석 도크 포인트 뒤의 모터와 정렬된 X축 주변이다.

요로 알려진 팬의 경우, 회전은 스탠드 바닥의 모터와 정렬된 Y축을 중심으로 한다.

코드에서 이것을 제어하는 예를 살펴봅시다.

초당 0.2 라디안의 저속으로 모터를 오른쪽으로 움직이면서 초당 0.1 라디안을 낮추고 싶다고 가정해 봅시다.

먼저 초기 속도 벡터를 정의한 다음, 그 벡터를 독으로 보내세요.

작업을 숙면하여 2초 동안 동작을 유지할 수 있습니다.

그리고 0.2 rad/s에서 왼쪽으로 이동하고 0.1 rad/s로 투구하기 위해 다른 벡터로 방향을 바꾸세요.

이제, 앱이 DockKit과 통합될 때 그것이 가능한 전부는 아닙니다.

모터를 직접 제어하는 것 외에도, 추론을 제어할 수도 있습니다.

비전 프레임워크, 사용자 지정 ML 모델 또는 애플리케이션에 필요한 인식 알고리즘을 사용할 수 있습니다.

사용자 지정 추론 출력에서, 당신은 객체를 추적하기 위해 DockKit에 공급할 관찰을 구성합니다.

그래서, 관찰이 뭐야?

관찰은 카메라 프레임에서 관심 있는 주제를 나타내는 직사각형 경계 상자이다.

그게 바로, 네가 추적하고 싶은 거야.

그것은 얼굴일 수도, 동물일 수도, 심지어 손일 수도 있다.

솔직히, 시간이 지남에 따라 관찰할 수 있는 모든 물건이나 지점.

경계 상자는 원점의 왼쪽 하단을 기반으로 정규화된 좌표로 정의됩니다.

예를 들어, 이 감지된 얼굴에 대한 관찰을 만들기 위해, 나는 너비와 높이가 전체 이미지 프레임의 백분율인 약 0.25, 0.5의 경계 상자를 사용할 것이다.

관측을 만들기 위해, 당신은 정규화된 좌표에서 CGRect를 구성하고 그것으로부터 관측을 구성합니다.

그렇게 할 때, 관찰 유형이 "인간의 얼굴" 또는 "객체"라고 지정하고 싶습니다.

"humanFace" 옵션을 사용하면 시스템 수준의 다인 추적 및 프레이밍 최적화가 여전히 유효한지 확인할 수 있습니다.

일단 관찰이 생성되면, 그것들은 추적기에 공급될 수 있다.

당신은 현재 카메라 정보를 얻는 것으로 시작합니다.

이 경우, DockKit에게 좌표가 화면의 왼쪽 하단 모서리에 상대적이며 변환이 필요하지 않다는 것을 알리기 위해 방향이 "수정"되었다고 지정한 다음, 관찰 배열과 카메라 정보를 도크 액세서리에 전달합니다.

이제, 좋은 소식은, 당신이 손으로 완전히 관찰하고 추적하고 싶은 많은 것들의 경계 상자를 계산할 필요가 없다는 것입니다.

비전 프레임워크는 이미 신체 자세 감지, 동물 신체 자세 감지, 심지어 바코드 인식을 포함하여 추적 가능한 관찰로 쉽게 변환할 수 있는 경계 상자를 반환하는 많은 내장 요청이 포함되어 있기 때문에 사용자 지정 추론에 적합합니다.

그리고 Vision의 좌표계는 DockKit과 동일하므로 변환 없이 직접 전달할 수 있습니다.

DockKit에게 장치 방향이 무엇인지 알려주기만 하면 됩니다.

이제, 코드에서 사용자 지정 관찰을 구현하는 과정을 살펴봅시다.

이 경우, 손 포즈 감지 요청을 사용하여 기본 얼굴 및 신체 추적을 손 추적으로 바꾸고 싶습니다.

비전 요청과 요청 핸들러를 만드는 것으로 시작하세요-- 이 사용 사례에 대해, 저는 VNDetectHumanHandPoseRequest를 사용하고 있습니다-- 그런 다음, 요청을 수행합니다.

인식된 점을 기반으로 관찰을 구성할 수 있습니다.

단순함을 위해, 나는 엄지손가락 끝의 요점에 집중하고 있지만, 관찰을 구성하기 위해 다른 손가락 관절이나 손 전체를 사용할 수 있다.

그리고 마지막으로, 당신은 추적하기 위해 관찰을 DockKit에 전달합니다.

그것으로, 그것이 작동하는 것을 보자!

나는 내 커스텀 카메라 앱을 실행하고 추적을 시작할 것이다.

내가 손을 움직일 때, 왼쪽으로 움직이면서, 스탠드가 왼쪽으로 따라가는 것을 주목하세요.

그리고 나서, 내가 손을 오른쪽으로 움직일 때, 스탠드는 반대 방향으로 따라간다.

내가 손을 위로 쓸어 올리면, 스탠드는 내 손을 프레임에 유지하기 위해 기울어질 것이고, 내가 손을 다시 쓸어 쓸 때 다시 따라갈 것이다.

완벽해.

DockKit API를 통해 모터를 직접 제어할 수 있는 기능으로, 애니메이션을 통해 장치에 생명을 불어넣을 수 있습니다!

부두의 움직임은 확인을 위한 어포던스 또는 감정을 전달하는 방법으로 사용될 수 있다.

직접 모터 제어를 통해 자신만의 사용자 지정 애니메이션을 만들어 푸시나 풀과 같은 휴대폰과의 물리적 상호 작용을 에뮬레이트하거나 내장 애니메이션 중 하나를 활용할 수 있습니다.

내장 애니메이션은 예, 아니오, 웨이크업, 그리고 카포우입니다.

장치 시동이 발생할 때마다 웨이크업 애니메이션이 작동하는 것을 볼 수 있습니다.

방금 시연한 사용자 지정 손 추적 앱으로 돌아가면, 특정 손 제스처가 발생할 때마다 내장 애니메이션을 트리거할 수 있습니다.

이렇게 하려면, 먼저 사용자 지정 핸드 액션 분류 모델을 훈련해야 합니다.

이것은 Create ML 앱을 사용하여 쉽게 할 수 있습니다.

이 모델 중 하나를 만드는 것에 대한 자세한 내용은 2021년의 "손 포즈와 행동 분류" 비디오를 시청하세요.

사용자 지정 모델이 손 제스처가 발생했다고 예측할 때마다 애니메이션을 트리거할 수 있습니다.

먼저 시스템 추적을 비활성화한 다음 애니메이션을 시작하세요. 이 경우 Kapow입니다.

애니메이션은 스탠드의 현재 위치에서 시작하여 비동기적으로 실행될 것이다.

애니메이션이 실행되면, 시스템 추적을 다시 활성화하고 싶을 것입니다.

이제, 그것이 작동하는 것을 보기 위해 데모로 돌아가세요.

그 앱은 내가 조금 뒤로 물러서면서 내 손을 계속 추적할 것이다.

내가 카메라를 밀고 있다는 몸짓을 하면, kapow!

카메라는 진자 동작으로 앞뒤로 흔들린다.

그거 한 번 더 하자 왜냐하면 그건 정말 재미있거든.

그리고 카포!

이와 같은 애니메이션을 사용하여 경험을 끝내거나 무언가를 표현할 수 있습니다.

나는 당신이 이것을 실험하고, 반드시 사용자 지정 모터 컨트롤을 사용하여 자신만의 애니메이션을 만드는 것을 고려하는 것이 좋습니다.

DockKit을 사용하면 전동 스탠드를 사용하여 물체를 추적할 수 있는 기능이 도입되어 애플리케이션에 360도 시야각을 제공합니다.

객체는 시스템 수준이나 사용자 지정 추론을 사용하는 응용 프로그램에 의해 추적될 수 있다.

그리고 당신은 감정이나 유용성을 전달하기 위한 여유로 응용 프로그램에서 기계적 움직임을 사용할 수 있습니다.

DockKit에서 사용자 지정 추적을 위해 Vision 프레임워크를 사용할 수 있는 방법에 대해 자세히 알아보려면, 동물 포즈 감지에 대한 비디오를 확인하십시오.

나는 당신이 이 놀라운 액세서리를 손에 넣고 당신이 그것을 사용할 때 앱에 가져올 경험을 보기를 기다릴 수 없습니다.