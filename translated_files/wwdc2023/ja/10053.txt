10053

♪まろやかなインストゥルメンタルヒップホップ♪

♪

こんにちは！

私はプライバシーエンジニアリングのマイケルです。「プライバシーの新機能」へようこそ。

アップルでは、プライバシーは基本的人権であると信じています。

それを尊重し、保護することは、私たちの共通の責任のすべてです。

このため、プライバシーは、Appleで新しく改良された機能の設計にどのようにアプローチするかの中心的な要素です。

多くの製品やサービスが私たちのすべての生活の中心的な主力となっているので、あなたは人々を保護する上で重要なパートナーとなっています。

人々がどのデータにアクセスし、どのような目的でアクセスされているかを理解し、制御するアプリで優れたプライバシー体験を提供することは、特に人生の敏感な部分でアプリを信頼するのに役立ちます。

プライバシーの柱は、アプリにプライバシーを組み込む際の素晴らしいガイドです。

これらはAppleで製品やサービスのプライバシーについて考えるために使用する4つの中心的なアイデアであるため、以前にそれらについて話すのを聞いたことがあるかもしれません。

最初の柱はデータの最小化です。機能を構築するために必要なデータのみを使用します。

これは、アクセスされたデータ機能の量から、アプリケーションサーバーと共有されるデータ、第三者と共有される可能性のあるデータまで、アプリのアーキテクチャ全体に適用されます。

2つ目は、デバイス上の処理です。デバイスのパワーを活用して、データをローカルで処理し、サーバーとの共有を避けます。

第三に、透明性と制御とは、人々がデータアクセスと処理の何を、なぜ、いつ、どこで理解していることを確認し、それが起こる前に適切な制御を与えることです。

そしてまた、彼らが後で考えを変えることを可能にします。

最後の柱はセキュリティ保護です。エンドツーエンドの暗号化など、他の柱を強化するために強力な技術的緩和策を適用します。

アプリにプライバシーの柱を実装するために、採用できるプライバシー中心のデザインの新しいツールについて説明し、プライバシーのための重要なプラットフォームの変更に関する最新情報を提供し、最後に、Appleの最新プラットフォームの空間入力モデルがプライバシーを保護するためにどのように設計されたかについて話します。

私は、優れたプライバシーを備えた優れたアプリを簡単に構築できるように、Appleのプラットフォームに搭載される新しいプライバシー強化技術から始めます。

これには、ユーザーが共有を細かく制御しながら、アプリがシームレスにコンテンツにアクセスできるようにする一連の新しいAPIと、サーバーや人とのコミュニケーションをよりよく保護するための新しいAPIが含まれます。

写真への低摩擦アクセスを提供するように設計された写真ピッカーの改善から始めます。

長年にわたり、恥ずかしい子供時代の写真から最後のハイキング旅行まで、私たちの貴重な瞬間がますます多く撮影されるにつれて、私たちの写真ライブラリは大規模に成長しました。

このため、アプリへの信頼を築くための基本的な方法は、どのデータをアプリと共有し、いつ共有するかについて、人々がきめ細かな決定を下すことができるようにすることです。

したがって、誰かがあなたのアプリを使って前回の旅行から最も風光明媚な写真を共有したい場合は、アプリにすべての写真へのアクセスを許可することなく、そうすることができます。

これは、フォトピッカーでできることです。

このAPIは、フォトライブラリ全体にアクセスする許可を必要とせずに、選択した写真やビデオへのアクセスをアプリに提供します。

また、iOS 17とmacOS Sonomaでは、ピッカーをアプリに完全に埋め込むことができ、完全にシームレスな体験ができます。

写真はアプリの一部であるように見えますが、システムによってレンダリングされ、選択した場合にのみ共有されるため、ユーザーの写真は常に管理下にあります。

新しいカスタマイズオプションを使用すると、このようなクロムなしでピッカーを表示するか、水平にスクロールできる最小限の1行の写真として表示するか、キャプションや位置情報などの写真メタデータの共有に関するコントロールを提供する新しいオプションメニューを使用して、フルピッカーのインラインバージョンとして表示するかを選択できます。

フォトピッカーは、ライブラリ全体にアクセスするための許可を得たり、フォトピッキングフローを設計および実装したりすることを心配する必要がないため、写真を取得するための優れた迅速な方法です。

フルアクセスを要求するのではなく、写真に個別にアクセスするためにピッカーを採用することを検討してください。

ピッカーの新機能の詳細な説明については、ビデオ「写真ピッカーをアプリに埋め込む」をご覧ください。

また、完全なフォトライブラリにアクセスするための強力な要件を持つアプリを開発している場合、iOS 17には、写真の数と共有されるもののサンプルを含む再設計された許可ダイアログがあります。

これは、人々が何を共有するかについて彼らにとって正しい決定を下すのに役立ちます。

好みは時間の経過とともに変化する可能性があるため、システムはアプリがフォトライブラリに完全にアクセスできるかどうかを定期的に人々に思い出させます。

次は、macOS用のScreenCaptureKitの新しいAPIであるスクリーンキャプチャピッカーで、より良い体験を提供しながら、画面共有時にアプリに必要なウィンドウや画面のみを共有できるようにします。

macOS Sonoma以前は、ユーザーが仮想ビデオ会議でプレゼンテーションを画面共有したい場合、設定アプリを介してフルスクリーンを記録する許可を会議アプリに付与する必要があり、その結果、経験が悪くなり、過剰共有のリスクが生じます。

新しいSCContentSharingPicker APIを使用すると、macOS Sonomaは、人々が共有したい画面コンテンツを選択できるウィンドウピッカーを表示します。

macOSは、選択したウィンドウまたは画面が選択されるとすぐにのみ共有するようにします。

画面を記録するための明示的なアクションのため、アプリはスクリーンキャプチャセッションの期間中、選択したコンテンツを記録することが許可されています。

これは、アプリが画面をキャプチャしたり、独自の画面コンテンツピッカーを構築したりするための個別の許可を取得する必要がないことを意味します。これはすべてSCContentSharingPickerによって処理されます。

人々が常に認識していることを確認するために、macOS Sonomaには、アプリが画面を録画していることを思い出させる新しい画面共有メニューバー項目も含まれています。

これを念頭に置いて、予想される場合にのみ画面コンテンツを録画してください。

クリックすると、メニューが展開され、共有コンテンツのプレビューが表示されます。

これにより、キャプチャセッションに画面コンテンツをすばやく追加または削除したり、完全に終了したりすることもできます。

SCContentSharingPickerは、優先選択モードやアプリケーションなど、アプリのニーズに基づいて調整するためのカスタマイズオプションも提供します。

詳細については、「ScreenCaptureKitの新機能」をご覧ください。

カレンダーは、特に新しいイベントのみを作成するアプリの場合、アプリでシームレスな体験を可能にするもう1つの領域です。

カレンダーは、医師の予約やフライト情報など、人々の生活の詳細なビューを提供します。そのため、アプリがアクセスを要求すると、人々は驚いたり、ノーと言ったりするかもしれません。

カレンダーイベントを書くためのアクセスのみを求めているアプリの場合、イベントの追加に失敗したり、欲求不満になったり、コンサートや親友の誕生日パーティーを見逃したりすることさえあります。

この問題を回避するために、カレンダーアクセスのためのAppleのプラットフォームには2つの重要な変更があります。

まず、アプリが新しいカレンダーイベントのみを作成する場合、素晴らしいニュースがあります。EventKitUIを使用すると、アプリは許可を必要としません。

これは、APIや機能を変更することなく、アプリの外部にEventKitUIビューコントローラーをレンダリングすることで可能になります。

第二に、イベントを作成するための独自のUIを提供したい場合は、新しい追加のみのカレンダー権限があり、アプリはカレンダー上の他のイベントにアクセスせずにイベントを追加できます。

これは、アプリがカレンダーのコンテンツを取得しているかどうかを心配することなく、アプリのイベントをユーザーの日に統合するもう1つの素晴らしい方法です。

また、アプリが後で完全なカレンダーアクセスが必要な場合は、一度アップグレードを依頼することができます。

ユーザーの意図にリンクされている場合は、このリクエストを行うのが最善です。

予期しない時間や予期せぬ理由で尋ねられた場合、拒否され、アプリのエクスペリエンスが低下する可能性があります。

意味のある目的の文字列を定義することで、アクセスが必要な理由を人々が理解するのに役立ちます。

すべてのアプリへの書き込み専用アクセスの利点を提供するために、覚えておくべき重要なことが2つあります。

アプリが以前にカレンダーアクセスを許可されている場合、デフォルトではiOS 17またはmacOS Sonomaへのアップグレード時に書き込み専用アクセス許可が設定されます。

同様に、古いバージョンのEventKitとリンクしていて、アプリがカレンダーへのアクセスを要求した場合、システムは書き込みのみのアクセスのみを求めます。

この場合、アプリがカレンダーイベントを取得しようとすると、システムは自動的にアプリをフルアクセスにアップグレードするように求められます。

EventKitとEventKitUIをアプリに統合する方法の詳細については、「カレンダーとEventKitを発見」をご覧ください。

次に、新しいOblivious HTTP APIです。これは、クライアントのIPアドレスをサーバーから隠し、潜在的に敏感なアプリの使用パターンをネットワークオペレーターから隠すのに役立ちます。

人々が日常的にいつ、どのアプリを使用するかを知ることは、彼らの生活に深い洞察を与えることができます。

携帯電話とWi-Fiネットワークのオペレーターは、誰かが接続しているサーバーを観察できるため、個人のアプリの使用状況や生活パターンを観察できます。

そして、一部のネットワーク事業者は、人々があなたのアプリをどのように使用しているかについて学ぶために彼らの立場を利用することに興味があるかもしれません。

これは、出会い系アプリや特定の健康状態のためのアプリなど、それらに特に敏感である可能性があります。

IPアドレスは、インターネット上での通信に不可欠な要素です。ただし、IPアドレスは、誰かの場所や身元を判断するために悪用される可能性があります。

クライアント分析など、アプリに匿名性が保証された機能を実装したい場合、IPアドレスへの露出は、さらなる課題につながる可能性があります。

Appleプラットフォームは、誰と何を分離することで、人々のアプリの使用状況とIPアドレスを保護するために、Oblivious HTTP、略してOHTTPをサポートするようになりました。

OHTTPは、軽量で、アプリケーション層で暗号化されたメッセージをプロキシし、高速なトランザクションサーバーインタラクションを可能にするように設計された標準化されたインターネットプロトコルです。

OHTTPを使用すると、ネットワークオペレータはアプリケーションサーバーではなく、リレープロバイダーへの接続のみを観察できます。

このアーキテクチャの礎石は、クライアントのIPアドレスと宛先サーバー名を知っているリレーですが、暗号化されたコンテンツはありません。

リレーは常にアプリケーションサーバーへの接続を見ると仮定されるため、リレーが得る唯一の意味のある情報はクライアントIPです。

アプリケーションサーバーへの最終的な接続はリレーによって行われます。

リレーが第三者によって運営されている場合、単一の当事者が送信元IP、宛先IP、およびコンテンツを完全に可視化することはできません。

これにより、匿名分析など、ユーザーを特定または追跡したくない機能に技術的な保証を追加することもできます。

OHTTPのサポートにより、人々に有意義な影響を与える、より強力なインターネットプライバシー保護を構築する機会があります。

iCloud Private Relayのようなサービスは、優れたパフォーマンスと強力なプライバシー保護のために、すでにOHTTPを利用しています。

たとえば、プライベートリレーはそれを使用してすべてのDNSクエリを保護します。

OHTTPを採用する方法の詳細については、ネットワークリレービデオをご覧ください。

OHTTPを採用することは、実際のユーザー検出を実行するなど、システムアーキテクチャのIPアドレスを置き換える方法を考える必要があることを意味します。

IPレピュテーションシステムをプライバシー保護の代替手段に置き換える方法については、WWDC22の「CAPTCHAをプライベートアクセストークンに置き換える」を参照してください。

DNSクエリの暗号化は、ネットワークの使用状況を保護するためのもう1つの重要な部分です。

方法については、WWDC20の「Enable Encrypted DNS」をご覧ください。

最後の新しいツールは、コミュニケーションの安全性と、アプリ内の子供を保護するためにデバイス上の処理を利用する新しい機密コンテンツ分析フレームワークです。

Appleのプラットフォームとあなたが構築するアプリは、子供たちが私たちの製品やサービスを使ってデジタル世界を探索し、家族や友人とコミュニケーションをとるにつれて、多くの家族の重要な部分となっています。

コミュニケーションの安全性は、子供たちに警告し、ヌードを含む可能性のある写真を受け取ったり共有しようとした場合に有用なリソースを提供することで、家族が子供を安全に保つのに役立ちます。

そして、これらの保護は、アプリだけでなく、Appleのプラットフォーム全体に適用されることが重要です。

この目的のために、コミュニケーションの安全性はメッセージを超えて、AirDrop経由で共有するとき、FaceTimeにメッセージを残すとき、電話アプリで連絡先ポスターを共有するとき、および写真ピッカーで機密性の高いコンテンツも検出します。

また、センシティブコンテンツ警告により、年齢に関係なく、すべての人がこれらの機能を利用できるようにします。

そして今、新しい機密コンテンツ分析フレームワークを使用すると、アプリ内の機密コンテンツも検出できます。

システムが提供するMLモデルと同じオンデバイス技術を利用するため、サーバーとコンテンツを共有する必要はありません。

そして、このフレームワークを使用すると、大規模なMLモデルをトレーニングし、アプリにパックする複雑さに対処することなく、これは可能です。

ほんの数行のコードでアプリへの統合が可能です。

開始するには、SCSensitivityAnalyzerのインスタンスを作成します。

analysisPolicy属性をチェックして、分析が必要かどうか、画像やビデオにヌードが含まれている場合にどのような介入を表示すべきかを決定できます。

次に、分析したい写真のURLまたはCGImageでanalyzeImageメソッドを呼び出します。

ビデオを分析するには、代わりにvideoAnalysisメソッドを呼び出してください。

これはハンドラを返すので、進捗状況を追跡し、必要に応じて分析をキャンセルできます。

分析結果を取得するには、ハンドラでhasSensitiveContentを呼び出します。

isSensitiveがtrueの場合、画像またはビデオにヌードが含まれている可能性があります。

この場合、アプリは、画像やビデオをぼかしたり、難読化したりする独自の介入と、コンテンツを表示するオプションを提供する必要があります。

また、分析ポリシーをチェックして、通信安全または機密コンテンツ警告が有効になっているかどうかに応じて介入を調整します。

介入に関するより詳細な設計ガイドラインは、Apple Developerのドキュメントに記載されています。

これらは、アプリで優れたプライバシーを提供するために採用する新しいAPIです。

それに加えて、Appleプラットフォームの既存の機能にいくつかのプライバシーの変更があります。

これには、アプリ内のデータを保護できる新しい方法や、SafariやSafariアプリ拡張機能のプライバシーの改善が含まれます。

まず、macOS用の新しいプライバシー保護は、同じデバイス上の他のアプリからアプリ内のデータを保護するのに役立つように設計されています。

デスクトップ、ドキュメント、ダウンロードフォルダなどのディスク上の場所には、システム管理権限があります。

これにより、アプリが個人データにアクセスできるとき、人々が制御できるようになります。

このモデルは、プロジェクトのプレゼンテーションや予算のあるスプレッドシートなど、人々が直接やり取りするファイルでうまく機能します。

一部のアプリケーションでは、送受信したメッセージのデータベースを持つメッセージングアプリや、休暇プランのメモアプリなど、さまざまな場所に個人データを保存する場合があります。

これらのファイルは、多くの場合、ライブラリフォルダやアプリサンドボックスアプリ、アプリのデータコンテナなどの場所に保存されます。

macOS Sonomaを使用すると、ユーザーは誰が自分のデータにアクセスできるかをさらに制御できます。

具体的には、macOSは、アプリが別の開発者からアプリケーションデータコンテナ内のデータにアクセスする前に、許可を与えることを保証します。

これは2つの方法でアプリケーションに影響を与える可能性があります。

まず、アプリケーションがシステム管理データストアの外部にデータを保存する場合は、この新しい保護をユーザーのデータに拡張するためにApp Sandboxを採用してください。

その後、アプリによって作成されたすべてのファイルが保護されます。

すでにApp Sandboxを使用しているアプリは、この新しい保護を自動的に受けます。

第二に、アプリが他のアプリからデータにアクセスする場合、許可を求める方法はいくつかあります。

あなたの側で変更することなく、macOS Sonomaは、アプリが別のアプリのデータコンテナ内のファイルにアクセスするときに許可を求めます。

許可は、アプリが開いている限り有効であり、アプリが終了すると、許可がリセットされます。

予想される場合にのみ、他のアプリのファイルを読み取ろうとするべきです。

プロンプトのタイミングが意外な場合、または目的が不明な場合は、アプリのアクセスが拒否される可能性があります。

意味のある目的の文字列は、アプリがアクセスを要求している理由を人々が理解するのに役立ちます。

他のアプリからファイルにアクセスするための明示的な許可を得るには、いくつかの代替方法があります。

個々のファイルやフォルダにシームレスにアクセスするには、NSOpenPanelを使用してください。

これは、プロセス外のmacOSファイルピッカーを示し、ユーザーが選択を確認すると、アプリは選択したリソースを読み書きできます。

NSOpenPanelでは、選択をさらに簡単にするために、ピッカーにデフォルトで表示されるパスを指定することもできます。

すでにフルディスクアクセスが許可されているバックアップユーティリティまたはディスク管理ツールの場合、これらのアプリのすべてのファイルへのアクセスを許可することをすでに選択しているため、アクセス時に追加のプロンプトは表示されません。

さらに、チームIDで署名されたすべてのアプリは、許可プロンプトなしで、デフォルトで他のアプリのコンテナ内のデータにアクセスできます。

したがって、アプリの以前のバージョンからデータをインポートする新しいアプリをリリースすると、これはシームレスに機能します。

ただし、より制限的なポリシーを定義したい場合があります。

たとえば、エディタ、ブラウザ、シェルなどのコードインタプリタを構築する場合、このアプリが開発したメッセージングアプリからデータにアクセスするときに、macOSに許可を求めることができます。

これを行うには、アプリのInfo.plistでNSDataAccessSecurityPolicyを指定して、デフォルトの同じチームポリシーを明示的なAllowListに置き換えることができます。

指定すると、リストされたプロセスとインストーラパッケージは、他のアプリが許可を必要とする間、追加の同意なしにアプリのデータにアクセスすることが許可されます。

高度なデータ保護は、ユーザーのデータを保護するもう1つの機会です。

高度なデータ保護は2022年に追加され、人々がiCloudに保存されているデータの大部分に対してエンドツーエンドの暗号化を有効にする方法を提供します。

CloudKitを採用することで、誰かが高度なデータ保護を有効にするたびに、アプリによってCloudKitに保存されているデータをエンドツーエンドで暗号化できます。

そして、これは、暗号化キー、暗号化操作、または複雑で危険な回復フローを管理するために、あなたの側で必要な変更なしで可能です。

高度なデータ保護の大きなプライバシーの利点をユーザーに拡張するには、いくつかの手順に従うだけです。

まず、CloudKitスキーマ内のすべてのフィールドに暗号化されたデータ型を使用するようにしてください。

これにはデフォルトでCKAssetフィールドが含まれ、CloudKitのほとんどのデータ型には、EncryptedStringなどの暗号化されたバリアントがあります。

次に、encryptedValues APIを使用して、CloudKitレコードにデータを取得または保存できます。

すべての暗号化と復号化操作は、あなたの便宜のためにこのAPIによって抽象化されます。

その結果、アプリのデータは、誰かがこの機能を有効にするたびに、高度なデータ保護から利用可能なセキュリティ侵害とプライバシー保護の完全な利益を受け取ります。

コードサンプルを含む、アプリにCloudKitを採用する方法の説明については、WWDC21の「CloudKitの新機能」をご覧ください。

次は、Safariプライベートブラウジングモードでの新しいフィンガープリントとトラッキング保護です。

Safariはプライバシーを核に設計されている。

プライベートブラウジングモードでは、タブが閉じられたときに、Safariが訪問したページ、検索履歴、または自動入力情報を記憶しないことを確認するなど、Safariで追加のプライバシー保護を可能にします。

Safari 17のプライベートブラウジングモードは、高度な追跡とフィンガープリント保護を追加します。これには、ウェブサイト間の追跡を防止するための2つの新しい保護が含まれています。

まず、Safariは既知の追跡リソースとフィンガープリントリソースが読み込まれるのを防ぎます。

ウェブサイト開発者の場合は、プライベートブラウジングモードでウェブサイトの機能をテストしてください。ログインフロー、ウェブサイトからのクロスサイトナビゲーション、および画面、オーディオ、グラフィックスに関連するブラウザAPIの使用に焦点を当てます。

高度な追跡と指紋保護なしでリロードして、ウェブサイトの動作の変化が新しい保護によるものかどうかを確認できます。

これを行うには、macOSのリロードボタンを右クリックするか、iOSのページ設定ボタン、または通常のブラウジングモードでSafariでテストします。

Webインスペクタを開いて、JavaScriptコンソールへの出力を調べることもできます。

既知のトラッカーに連絡した結果としてブロックされたネットワーク要求は、「既知のトラッカーへの接続がブロックされました」で始まるメッセージとして表示されます。

クロスウェブサイトトラッキングのもう1つの一般的な方法は、クエリパラメータなど、URLに埋め込まれた一意の識別子です。

人々が追跡できる場所を制御できるようにするために、もう1つの新しい保護は、ブラウザのナビゲーションの一部として、およびリンクをコピーするときに追跡パラメータを削除することです。

トラッキングパラメータが検出されると、SafariはURLの識別コンポーネントを削除し、識別不可能な部分はそのままにします。

広告アトリビューションは、ウェブサイト全体で個人を特定せずに行うことができることを忘れないでください。

たとえば、プライベートクリック測定は、広告アトリビューションの追跡パラメータに代わるプライバシーを保護する代替手段です。

また、ダイレクトレスポンス広告のプライベートブラウジングモードでも利用できるようになりました。ここでは、ディスクにデータが書き込まれず、アトリビューションは単一のタブに基づいて単一のブラウジングコンテキストに制限されます。

これは、プライベートブラウジングでの一時的なブラウジングとタブの分離のSafariの既存の厳格なモデルに従います。

詳細については、WWDC21のビデオ「プライバシーを保護する広告アトリビューションを満たす」をご覧ください。

最後のプラットフォームの変更は、Safariのアプリ拡張機能の新しい許可モデルです。

Safari 17では、Appleがウェブ拡張機能のために開拓した許可モデルがアプリ拡張機能にも登場します。

これは、拡張機能がサイトごとにアクセスできるWebページを選択できることを意味します。

また、プライベートブラウジングモードで実行できる拡張機能を制御できるようにしています。

これらの拡張機能の変更と、サイトごとに拡張機能の権限を付与する方法の詳細については、ビデオ「Safari拡張機能の新機能」をご覧ください。

開発者向けの新しいツールとプラットフォームの変更の背後にあるプライバシーの原則は、新しい空間コンピューティングプラットフォームの入力モデルを含む、Appleで構築するすべての機能に広がっています。

システムは本当に使いやすいです。周りを見回し、やり取りしたいものを決めて、タップするだけです。

新しい許可はなく、すべてのアプリ開発者のための余分な作業はなく、アプリがどこを見ているかを追跡する心配もありません。

結果は、優れたプライバシーを備えた素晴らしい新製品です。

目と手のコントロールの開発に対するプライバシーエンジニアリングのアプローチを見てみましょう。

まず、入力モデルが達成する必要がある高レベルの目標があります。

入力エクスペリエンスは高速で流動的で、UI要素との自然な相互作用を可能にする必要があります。

あらゆる種類のUI要素と対話する自信を提供するために、人々が見ているものについてリアルタイムのフィードバックを提供する必要があります。

さらに、既存のiPhoneとiPadのアプリケーションは、箱から出してすぐに動作するはずです。

そして最後に、アプリが基本的な入力を受け取るためだけに新しいアプリの許可を必要とすべきではありません。

次に、入力モデルのプライバシー目標です。

アプリが病状を含む目に関する敏感な詳細を学習するのを防ぐために、関連するシステムコンポーネントのみがアイカメラにアクセスできる必要があります。

許可のないアクセスを有効にするには、アプリは人々の目や手の詳細を学ばずに動作できる必要があります。

そして、人々が見ているものは、彼らが考えていることを明らかにすることができるので、人々が見ているものを学ぶことなくアプリが機能し、彼らが対話するものだけを学ぶことが重要です。

これらの目標をすべて達成するためにAppleが設計したシステムを見てみましょう。

入力システムの目と手を測定する内部および外部のカメラデータは、分離されたシステムプロセスで処理されます。

これにより、目と手がどこにあるかを目とピンチ検出システムに測定し、アプリを含む他のすべてのシステムコンポーネントから複雑なカメラ処理を抽象化します。

ホバーフィードバックシステムは、画面に表示されているものと目の位置を組み合わせて、ユーザーが見ているものを判断します。

彼らがUI要素を見ている場合、システムはレンダリング時にハイライトレイヤーを追加します。

これは、アプリのプロセスの外でレンダリングエンジンによって行われ、デバイスを使用している人にのみ表示されるため、アプリに情報を明らかにすることなく、見ているものを理解します。

そして、ピンチジェスチャーが検出されるとすぐに、システムは強調表示されたUI要素の通常のタップイベントをアプリに配信します。

このシステムアーキテクチャでは、カメラデータを入力イベントに変換する複雑さはオペレーティングシステムによって処理されます。

これは、この新しいプラットフォームで入力を受信するために変更を必要としないことを意味します。

デフォルトのシステム動作に加えて、UIKit、SwiftUI、およびRealityKitを使用すると、システムが提供するUI要素と同じプライバシー保護で、これらの効果をアプリのデザインに合わせて簡単に調整できます。

タイプ、形状、およびホバー効果が適用される要素を変更できます。

採用方法の詳細については、「空間コンピューティングのためのSwiftUIに会う」と「空間コンピューティングのためのウィンドウアプリを昇格する」をご覧ください。

この空間入力モデルは、プライバシーの柱を実装することによって可能になります。

システムは、システムの各コンポーネントがアクセスする必要があるデータ量を最小限に抑えます。

すべての処理はデバイス上で行われます。

意図的なインタラクションのみがアプリと共有されるため、人々はコントロールできます。

そして、あなたが見ている場所は、オペレーティングシステムのカーネルによって強制されたプロセス分離を使用して保護されます。

プライバシーをコアデザイン目標にすることで、優れた機能と優れたプライバシーの両方を提供することが可能です。

Appleプラットフォーム全体の新しいプライバシーの変更について学ぶことが、優れたプライバシーを通じて信頼を築きやすくなるため、あなたを鼓舞するのに役立つことを願っています。 シームレスなユーザーコントロールを提供するコンテンツピッキングAPIを使用して、アプリがアクセスするデータを最小限に抑えます。 デバイス上の処理でセンシティブコンテンツ分析フレームワークを採用することで、アプリの子供を保護します。

また、アプリのユーザーデータを保護するために、macOSのApp Sandboxなどのセキュリティ保護を採用し、CloudKitでデータを暗号化するようにしてください。

このビデオをご覧いただきありがとうございます。

あなたが何を作るかを見るのが待ちきれません。

♪