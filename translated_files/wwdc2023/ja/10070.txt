10070

♪まろやかなインストゥルメンタルヒップホップ♪

♪

こんにちは、私の名前はジェレミーで、メディアエクスペリエンスソフトウェアエンジニアです。

この講演では、アプリでビデオ再生のための素晴らしい空間体験を作成する方法について説明します。

優れたエクスペリエンスは、プラットフォーム用に最適化され、強力なメディア機能を活用し、システム全体と統合されます。

まず、最小限のアプリでメディア体験を探ります。

次に、より高度なUI機能について説明します。

次に、ビデオを表示する他の方法をいくつか確認します。

最後に、オプションを比較します。

iOSまたはtvOSでメディアAPIを使用したことがある場合、これは身近に感じるかもしれません。

このプラットフォームは、これらの同じAPIに基づいて構築され、そのユニークな機能のためにそれらを拡張します。

AVFoundationは、ストリーミング、解析、デコード、同期など、映画を再生するすべての作業を処理します。

また、AVKitはAVFoundationとUIフレームワークに基づいて構築され、各プラットフォームに合わせてカスタマイズおよび統合された再生体験を作成します。

このプラットフォームでは、AVFoundationは、3Dビデオなどの独自の機能を利用する新しいメディアフォーマットをサポートするように強化されました。

これらの形式の詳細については、このセッションを参照してください。

AVFoundationはまた、RealityKitを使用して高性能で高品質でレンダリングするように強化されているため、ビデオをあなたの周りの世界にシームレスに合成することができ、オーディオもあなたの周りの世界にも反応します。

また、AVKitのAVPlayerViewControllerは、RealityKitのパワーとプラットフォームのユニークな機能を利用して、高度に洗練された体験を生み出すように拡張されました。

これには、あなたが期待するすべての再生コントロールが含まれますが、多くのユニークな機能もあります。

アプリでこれを利用するには何が必要ですか?

まず、XcodeターゲットはこのプラットフォームのSDKで構築する必要があります。

iOS SDKで構築された互換性のあるiOSアプリは、iOSと互換性のある体験を得ることができます。

iOSやtvOSと同じようにAVPlayerViewControllerを使用してください。

そして最後に、ウィンドウを埋めるようにビューコントローラーを提示します。

これをいくつかのコードで実証しましょう。

まず、AVFoundationとAVKitをインポートします。

次に、AVPlayerViewControllerを作成し、AVPlayerを接続します。

次に、コンテンツURLを使用して新しいプレーヤーアイテムを作成し、プレーヤーに設定します。

ビューコントローラーにプレーヤーを設定した後にアイテムを追加すると、プレーヤーはメディアの読み込みを開始する前に表示方法を理解するため、パフォーマンスを向上させることができます。

次に、SwiftUIで使用するには、そのコードをUIViewControllerRepresentableでラップします。

私たちはこれをPlayerViewと呼びます。

次に、MoviePlayingAppと呼ばれるアプリを作成します。

定義したばかりのビューコントローラーを追加すると、ウィンドウがいっぱいになります。

そのように、あなたは映画再生アプリを持っています。

このコードが他のAppleプラットフォームで書くものと非常によく似ていると思うなら、それはそうだからです。

AVPlayerViewControllerとAVPlayerは多くの重労働をしているので、その必要はありません。

このようなシンプルなアプリのメディア体験をお見せしましょう。

アプリが起動する前に、部屋だけが見えます。

アプリが起動すると、正面に大きな画面が表示され、部屋が暗くなり、素敵な雰囲気を作り出します。

移動中、画面は所定の位置にとどまり、オーディオは画面に固定されたままになります。

再生コントロールを表示するには、画面を見てタップします。

コントロールはビデオのすぐ前に浮かんでいます。

遊んでいる間、何もしないで、彼らは自分自身で消えます。

または、画面を見てもう一度タップして消します。

画面の下にあるウィンドウバーをつかんで位置を変更します。

画面の隅をつかんでサイズを変更します。

画面のサイズが変更されると、スムーズにアニメーション化され、ビデオのアスペクト比と一致することに注意してください。

デジタルクラウンを回して音量を調整します。

または、デジタルクラウンを使用して、このような環境を開きます。

私はこのように映画を見るのが大好きです。

あなたはこれを自分で経験しなければなりません。

さて、再生コントロールをより詳しく調べて、それらが提供する機能を見てみましょう。

これが私たちのプレイヤーインターフェースです。

右上には、すばやく調整したりミュートしたりするためのボリュームコントロールがあります。

前述したように、デジタルクラウンで音量を調整することもできます。

左下には、おなじみの再生/一時停止ボタンと戻る/前進ボタンがあります。

下の真ん中には、映画の別の時間にジャンプするスクラバーがあります。

そして、右下には、より多くのオプションを備えたこのボタンがあります。

再生速度を調整するオプションを次に示します。

ムービーに複数のオーディオトラックまたはキャプショントラックが含まれている場合は、これらのオプションを使用して、オーディオトラックの言語を選択するか、優先言語でキャプションを有効にします。

この最後のオプションは調光効果です。

私は本当にそれらに集中するために暗闇の中で映画を見るのが大好きですが、時にはビデオが私の唯一の焦点ではありません。

ここでは、私の周りにあるものをよりよく見るために、調光効果をオフにすることができます。

組み込まれている基本を取り上げました。

では、より高度な機能をいくつか探りましょう。

サムネイルスクラブは、スクラブ中にビデオの小さな画像を表示し、コンテンツのシームレスなナビゲーションを可能にします。

コントロールは、トリックプレイトラックとも呼ばれるIフレームのみのプレイリストを持つHLSストリームをスクラブすると、自動的にサムネイルを表示します。

幅145ピクセルの小さなトリックプレイトラックが好ましい。

詳細については、このドキュメントを参照してください。

ロゴ、要約、または広告のタイムラインにメディアを挿入する必要がある場合があります。

インタースティシャルサポートは、この能力を可能にします。

インタースティシャルが存在する場合、コントロールは自動的にタイムラインのインジケーターでそれらを反映します。

これらのインタースティシャルは、AVPlayerInterstital EventControllerでプログラムで設定することも、HLSストリーム内で記述することもできます。

詳細については、このセッションを参照してください。

ビデオ再生アプリで一般的に使用される追加のUIオプションがいくつかあります。

コンテキストアクションを使用すると、イントロをスキップしたり、次のエピソードを再生したりするなどのボタンを追加できます。

彼らはタイトルとオプションの画像を持つことができます。

カスタム情報ビューコントローラーは、コンテンツに関するメタデータを表示したり、関連するコンテンツを提案したりするために使用できます。

これらのAPIは、他のAppleプラットフォームと同じように機能します。

詳細については、このセッションを参照してください。

あなたのアプリは、没入型スペースと呼ばれる機能であなたを別の場所に移動させることもできます。

アプリが没入型スペースを作成すると、そのスペースがどのように見えるかを決めることができます。

さらに良いことに、ビデオ画面は自動的にその空間に移動し、予測可能なサイズと位置に固定され、毎回優れた視野角が保証されます。

そして、コントロールは切り離して近づき、操作しやすくします。

いくつかのコードをチェックしてみましょう。

これが以前のMoviePlayingAppです。

まず、没入型スペースを追加します。

3Dコンテンツは、RealityKitエンティティによって記述されます。

次に、PlayerViewのonAppearを使用してスペースを開きます。

イマーシブスペースがドッキング時にムービープレーヤーを収容するように設計されていることを確認してください。

スペースの構築と表示方法の詳細については、このセッションを参照してください。

AVPlayerViewControllerは徹底的に洗練され、このプラットフォームでの素晴らしい体験のために設計されています。

私たちは本当にAVPlayerViewControllerがあなたのために働くことを望んでいます。

したがって、提案したい機能や行動がある場合は、ユースケースに合わせて引き続き改善できるようにフィードバックを提供してください。

さて、誰かがカスタム再生コントロールを構築する必要があるまれな状況がまだある可能性があります。

その場合は、フィードバックをお寄せください。

また、AVPlayerViewControllerを使用することをお勧めします。

コントロールを非表示にして、カスタムUIのオーバーレイを指定できます。

これは、私たちが実証したように、AVPlayerViewControllerが単なる再生コントロールを超えて多くのシステム統合機能を提供するため、低レベルのAPIを使用するよりも好まれます。

そして、あなたは素晴らしいシステム統合機能を手に入れ続けるでしょう。

AVPlayerViewControllerのフルスクリーン体験を探りました。

では、ビデオ再生の他のユースケースを見てみましょう。

時々、映画がウィンドウでインラインで再生されたいことがあります。

ドキュメントの一部であるか、プレビューを再生することができます。

AVPlayerViewControllerインラインは、この状況にも最適です。

インラインビューはどうやって取得しますか?

ウィンドウを埋めることなく表示されるたびに、このモードが自動的に使用されます。

そのインラインコントロールもOS用に再設計されています。

注：ビデオはAVPlayerLayerを使用してウィンドウ内で合成されるため、3Dビデオを表示することはできません。

アプリが3Dシーンのエンティティとしてビデオを再生したい場合があります。

スプラッシュスクリーンやビデオトランジションである可能性があります。

このような場合、再生コントロールは望まなく、ドッキングのようなシステム統合も望まいません。

そのような場合は、RealityKitのVideoPlayerComponentを使用してください。

VideoPlayerComponentは、RealityKitエンティティをAVPlayerに接続します。

他のエンティティと同じように、RealityKitのシーンに配置できます。

ビデオのアスペクト比の正しいメッシュを作成し、キャプションの表示をサポートします。

可能な限り、AVPlayerLayerよりもそれを好む。

RealityKitのビデオの最適化を利用するため、AVPlayerLayerよりも優れたパフォーマンスを発揮し、新しい3Dビデオフォーマットをサポートしています。

詳細については、このセッションを参照してください。

時には、ビデオがエフェクトとして使用される3Dシーンでビデオを使用したいと思うかもしれません。

この場合、独自のジオメトリを作成し、ビデオの表示方法をより詳細に制御できます。

VideoMaterialは、任意のジオメトリにビデオを表示する低レベルのAPIです。

これは、元のアスペクト比を確保できず、キャプションを表示する機能がないことを意味します。

詳細については、この関連講演をチェックしてください。

私たちは、いくつかの追加のUI機能と他のいくつかのユースケースについて話しました。

DestinationVideoサンプルアプリは、これらの機能のいくつかを示しています。

ビデオを選択するためのビデオブラウザがあり、没入型スペースで再生します。

ここにあります。

情報ページを表示するビデオを選択すると、没入型スペースが開きます。

プレビュー用のカスタムUIコントロールを備えたインラインプレーヤーの使用に注目してください。

では、映画を再生します。

プレイヤーUIが表示され、最適な表示のために固定サイズと場所で没入型スペースにすぐにドッキングします。

もう1つの素晴らしいディテールは、画面がこのような没入型スペースにドッキングされると、再生コントロールが切り離され、少し近づき、対話がより便利になるということです。

リストボタンをタップします。

このアプリは、ビデオを見ながらコンテンツや関連コンテンツに関する詳細情報を表示するためのカスタム情報ビューコントローラーを提供しています。

ビデオの終わり近くで、右下隅に「次に再生」というラベルの付いたコンテキストアクションボタンが表示されます。

ビデオ再生の空間体験を取り上げました。

それは美しいビジュアルと素晴らしい空間オーディオで、あなたの目の前に浮かぶ大きなスクリーンを持っています。

それはあなたがする必要があるすべての再生コントロールが含まれており、他のいくつかの再生ユースケースについて話しました。

アプリにビデオを表示する方法はいくつかあります。

それらを比較しましょう。

これらはビデオを表示するためのAPIです。

それぞれが異なる能力を持っています。

必要なメディア体験に正しいAPIを使用してください。

メディアが正確に表示され、アクセス可能であることを確認してください。

RealityKitでレンダリングすることで、プラットフォームに最適化され、3Dビデオフォーマットを有効にしていることを確認してください。

そして、プラットフォームに合わせて調整された強力な再生コントロールがあることを確認してください。

そして、素晴らしい経験を得るために、システム全体と統合されていることを確認してください。

AVPlayerViewControllerを使用すると、アプリは他のAppleプラットフォームで使用している機能や、このプラットフォームの新しいユニークな機能を最大限に活用できます。

ユーザーに素晴らしい映画再生体験を提供できます。

空間メディア機能は、人々がまったく新しい方法でビデオを体験する機会を表しています。

開始するには、DestinationVideoサンプルプロジェクトをチェックしてください。

これは、ここで議論されている機能の多くを示しています。

そして、これらの関連する講演をチェックしてください。

これらの強力なツールであなたが作るものを人々が見るのが待ちきれません。

しかし今、私はショーを見に戻らなければなりません。

楽しんで！

♪