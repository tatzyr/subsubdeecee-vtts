10090

♪まろやかなインストゥルメンタルヒップホップ♪

♪

こんにちは！

私はケリーで、プラットフォーム互換性エンジニアです。

iPadOSとiOSは強力なプラットフォームです。

あなたはすでに彼らのために構築された素晴らしいアプリを持っています、多分あなたは複数を持っています。

これで、Appleの最新のプラットフォームで同じアプリを簡単に実行できます。

iOSアプリの大半は、箱から出してすぐに見栄えが良く、気分がいいです。

たとえば、シミュレータで変更されずに実行されているiPadカレンダーアプリをチェックしてください。

iPadの見た目と感触で、すべてが期待どおりに機能します。

さまざまなタイムラインを見たり、特定のイベントの詳細を拡大したり、新しいイベントを追加したりできます。

そして、私がカバーしようとしている推奨事項に従って、iPadバージョンで実行されるマップ。

私は地球を美しく回転させることができます。

特定の目的地を調べることもできます...

...そして有名なランドマークを訪れてください。

このビデオでは、この新しいプラットフォームでiPadとiPhoneのアプリを紹介します。

あなたのアプリが無料で得られる組み込みの動作をカバーすることから始めます。

次に、アプリが知っておくべき機能の違いと、それらについて何をすべきかについて話します。

最後に、Designed for iPadエクスペリエンスがアプリのニーズに最も適しているかどうかを判断する方法を説明します。

この新しいプラットフォームは、iOSの基盤の上に構築されています。

追加のシステムサポートにより、その共有基盤を強化します。

この2つの組み合わせにより、あなたのアプリは何も変更することなく美しく実行される可能性が高くなります!

iPadとiPhoneのアプリは、ライトモードスタイルで、このデバイスにウィンドウとして表示されます。

システムは横向きのアプリのiPadバリアントを好みますが、アプリがiPhoneのみをサポートしている場合、システムはiPhoneのアスペクト比を縦向きで表示します。

アプリが複数の向きをサポートしている場合、ウィンドウの右上隅に回転ボタンが用意されているため、人々は各シーンを自分の好みに合わせて回転させることができます。

アプリの角をつかむと、システムはウィンドウを拡大し、アスペクト比を維持します。

最小サイズまたは最大サイズに達すると、コーナーが跳ね返ってそれを反映します。

スケーリングはシステムによって管理されるため、アプリはこのすべてのサポートを無料で利用できます。

人々は自然な入力を介してこのデバイス上のコンテンツと対話します。

彼らは何かを見て、一緒に指をタップしてそれを選択するか、手を差し伸べてコンテンツを直接タッチします。

また、Bluetoothトラックパッドやゲームコントローラーを使用することもできます。

これらのシステム定義のインタラクションメソッドはすべて、アプリがすでに慣れ親しんでいるイベントを送信するため、すでに使用しているのと同じイベント処理手法を引き続き活用できます。

ドキュメントマネージャーやフォトピッカーなどのシステムビューは、システムの外観と一致し、アプリがプラットフォームのルックアンドフィールに適合するのに役立ちます。

アプリがTouch IDまたはFace IDをサポートしている場合、LocalAuthenticationはOptic IDを介してこれらの実装を自動的に転送するため、アプリは追加の作業なしで最新の認証技術をサポートします。

さて、このプラットフォームはiOSと異なる点がいくつかあります。

このデバイス上のアプリは、縦向きまたは横向きで見ることができます。

それはiPadに比べれば何も新しいことではない。

しかし、iPadとは異なり、デバイス全体を回転させるという概念はありません。

デバイスの向きはアプリの向きを知らせないため、アプリが新しいシーンに好む向きを指定することをお勧めします。

人々は後でシステムの回転ボタンでシーンを回転させることができます。

新しいUIPreferredDefaultInterface OrientationキーをアプリのInfo.plistに追加することで、好みを表現できます。

提供しない場合、システムはデフォルトの向きを使用します。 システムはデフォルトの向きを使用します。

このキーはこのプラットフォームに固有のものであり、他のプラットフォームには影響しません。

新しいものではないにもかかわらず、このデバイスにも特別な意味を持つ他のいくつかのplistキーがあります。

システムはUISupportedInterfaceOrientationsを使用して、アプリのウィンドウに回転ボタンが必要かどうかを判断し、App Store ConnectはUIRequiredDeviceCapabilitiesに依存して、アプリがこの新しいデバイスと互換性があるかどうかを判断します。

すべての適切なアプリは、App Storeで自動的に利用可能になります。

アプリがこのデバイスでは利用できない特定の機能に依存している場合、またはアプリがこのプラットフォームで意味をなさない理由がある場合は、App Store Connectで可用性を管理できます。

詳細については、「Explore App Store Connect for spatial computing」をご覧ください。

必要に応じて、これらのキーをInfo.plistに追加するか、既存の値がまだ正確で最新であることを確認してください。

このデバイスのジェスチャーは、人々が目と手を使ってコンテンツと対話するため、異なる方法で機能します。

各手が別々のタッチであるため、最大2つの同時入力があります。

2回以下のタッチを期待するすべてのシステムジェスチャーはシームレスに機能します。

カスタムジェスチャーリコグナイザもサポートされていますが、自然な入力期待でスムーズに実行するために更新する必要があるかもしれません。

最も更新されたフレームワークの1つは、これまで以上に強力に大幅に進化したARKitです。

私たちは、プラットフォームアーキテクチャとプライバシーのニーズの根本的な違いを考慮して、新しいAPIとエクスペリエンスをゼロから設計しました。

つまり、既存のARViewsとARSessionsは、iPadやiPhoneのようにこのデバイスでは動作しません。

「空間体験のためにARKitアプリを再想像する」ビデオをチェックして、このプラットフォーム用にアプリを再構築することで活用できるすべての新しいARKit機能について学んでください。

このデバイスの位置情報サポートは、iPadによく似ています。位置情報はWi-Fi経由で近似することも、iPhone経由で共有することもできます。

詳細については、「空間コンピューティングのコアロケーションを満たす」ビデオに記載されています。

Look to Dictateは、人々が目と声だけを使ってアプリをすばやくナビゲートできる便利な新しい入力テクニックです。

有効にすると、検索フィールドの虫眼鏡がマイクアイコンに取って代わり、マイクを見て検索に話すことができます。

このAPIは検索バーで提供されています。

このプラットフォームで実行されているiPadおよびiPhoneアプリでは、デフォルトで無効になっています。これにより、動作を確認し、有効にする場所を決定できます。

また、iOSとiPadOSではノー操作なので、プラットフォームごとにサポートを条件付ける必要はありません。

検索可能なビューに.searchDictationBehavior()修飾子を追加することで、SwiftUIでLook to Dictateを有効にすることができます。

UIKit検索バーの場合、isLookToDictateEnabledをtrueに設定します。

これらの変更をすべて処理する最善の方法は、常に同じ方法です。可用性チェックを使用します。

フレームワークを呼び出す前に、フレームワークがサポートされていることを確認してください。

多くのフレームワークには、あなたの便宜のためにこれらの機能が組み込まれています。

特定のハードウェアの存在に依存する構成にアクセスするときは、同じことをすることを忘れないでください。

たとえば、ヘッドセットにはiOSデバイスのフロントカメラとバックカメラよりも多くのカメラがありますが、それらのすべてがアプリが使用できるわけではありません。

カメラを使用する前に、カメラが存在し、サポートされていることを確認してください。

これらの慣行は、このデバイスだけでなく、すべてのデバイスでアプリをより堅牢にします。

これは、このプラットフォームでのフレームワークの進化のサンプルにすぎません。

いくつかのフレームワークは大きく成長し、SwiftUI、ARKit、RealityKitなど、このデバイスに特化したビデオがあります。

残りのフレームワークのほとんどは、それらを採用する方法にいくつかの調整をしながら、常にそうであるように機能します。

変更されたすべてのフレームワークに関する詳細情報は、開発者ドキュメントに記載されています。

アプリにどのようなコード変更が必要かがわかったので、行動を起こす準備が整いました。

xrOS SDKがインストールされると、XcodeはiOS SDKを使用するプロジェクトのサポート対象先にxrOSデバイス(iPad用に設計)を自動的に追加します。

スキームがSDKに別のプラットフォームまたは自動を設定している場合は、Designed for iPadターゲットを手動で追加できます。

それが設定されると、一致する名前の実行先が宛先ピッカーに表示されます。

そのターゲットを選択し、ビルドし、実行します。

それがすべてです! 

iPadとiPhoneのアプリは、このデバイスで素晴らしい体験を提供します。

広範なシステムサポートのおかげで、ほとんどのアプリはまったく変更を必要としません。

iOS SDKに対してアプリを構築するか、xrOS SDKに対して再構築するかは、目標によって異なります。

先に説明したように、各SDKで利用可能なフレームワークと、各フレームワーク内でサポートされている機能の違いがあります。

iOS SDKでのみ利用可能な2つの大きなことがあります。SpriteKitとストーリーボードです。

これらの技術のいずれかがアプリに不可欠な場合は、iPad用のデザインに固執する必要があります。

iPadとiPhoneのアプリは、ライトモードスタイルでiPadのように感じるウィンドウに表示されます。

シドニー・オペラハウスにズームインしたときのマップはこんな感じです。

コンテンツがウィンドウの端までいっぱいになるが、それを超えて拡張せず、すべての色がマップがiPadやiPhoneで使用しているのと同じライトモードスタイルと一致していることに注目してください。

xrOS用に設計されたアプリは、別のレベルの没入型空間体験のロックを解除します。

ARKitやRealityKitのようないくつかのフレームワークは、このプラットフォーム用に設計されたアプリでのみ利用可能な機能を進化させました。

これらのアップデートのおかげで可能なすべての新しい体験については、他のビデオやドキュメントを参照してください。

Windowsに加えて、このデバイス用に設計されたアプリは、コンテンツに合わせて成長するコンテナ内の3Dオブジェクトを表示するボリュームや、没入型体験のための没入型スペースもサポートしています。

基調講演のリハーサルスペースは、ヘッドセットで次のようになります。

パススルーやその他のアプリを隠すことで、Keynoteはプレゼンテーションに完全に没頭し、集中できるようにします。

ヘッドセットとシミュレータの両方で、このプラットフォーム用に設計されたアプリはシステムのルックアンドフィールを使用します。

彼らの背景は、周囲の人々を接地し、読みやすさを促進するためにカラーバランスとコントラストを動的に調整するガラス素材です。

また、新しいオーナメントAPIを利用することもできます。

左側のタブバーや写真の下部にあるボタンのように、装飾品はウィンドウの側面に固定して機能を強化します。

そして、彼らはアプリに窓の中に絵を描くためのより多くのスペースを残します。

ほとんどの場合、装飾品はナビゲーションやツールバーに使用されます。

xrOSの設計は、没入型体験を作成したり、新しいフレームワーク機能を採用したり、システムのルックアンドフィールに合わせたいアプリに最適です。

アプリの既存の体験を維持したい場合は、iPad用のデザインがあなたのための道です。

このプラットフォームはiOSとiPadOSと共通の基盤を共有しているので、どのSDKを選択しても、これらのプラットフォームで行う作業は、このプラットフォームでのあなたの経験に引き続き役立ちます。

この新しいプラットフォームの設計がアプリに最も適していると判断した場合、「空間コンピューティングのためのSwiftUIに会う」と「空間コンピューティングのためのUIKitに会う」ビデオは、始めるのに最適な場所です。

あなたの次のステップは、このエキサイティングな新しいプラットフォームであなたのアプリを試すことです!

大多数のアプリは、コードの変更をまったくせずに動作します。

私がカバーした互換性領域に特に注意してください。Info.plistキーが最新であることを確認し、興味のある新しいプラットフォームエクスペリエンスを選択し、使用する前にフレームワークの依存関係が利用可能であることを確認してください。

すべて完了したら、「共有スペースのiPadとiPhoneアプリを強化する」を見て、このデバイスでiOSアプリを自宅にいるように感じさせる方法を学びましょう。

ご覧いただきありがとうございます。この新しいプラットフォームであなたのアプリを試すのを楽しみにしています。

♪