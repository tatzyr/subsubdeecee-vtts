10032

♪ ♪

アレン：みなさん、こんにちは！

私はアクセシビリティチームのエンジニアであるアレンで、WWDCの「Meet Assistive Access」へようこそ。

Appleでは、当社の製品が誰にとってもアクセスしやすく、包括的であることを保証するよう努めています。

私たちは、認知障害は、人々が私たちの技術とどのように相互作用するかにおいて、独自の課題を提示することができることを理解しています。

支援アクセスは、障害を持つ人々の認知負荷を軽減するために、アプリや経験をコアに抽出するモードです。

親、保護者、保護者などの信頼できるサポーターの助けを借りて、Assistive Accessの設定でカスタマイズすると、iPhoneやiPadで以前よりも独立してアプリを簡単にナビゲートして使用できるようになります。

今日は、支援アクセスを設定してオンにする方法を発見し、それがどのように機能するかを探ります。

次に、支援アクセスの目標とコアバリューのいくつかを探ります。

Assistive Accessがオンになっているときにアプリケーションがどのように動作するかについて説明します。

そして最後に、Assistive Accessでのアプリのプレゼンテーションについて考慮すべき追加事項について説明します。

では、始めましょう。

支援アクセスの設定は簡単です。

前述のように、信頼できるサポーターは、設定アプリを使用して、デバイスを使用している人のニーズに合わせて支援アクセスをカスタマイズできます。

設定を通じてこのモードに最初にアクセスすると、信頼できるサポーターが初期設定プロセスに案内されます。

彼らは、実行が許可される優先アプリの選択から、バッテリーインジケーターが存在するかどうかの選択まで、支援アクセスの多くの側面をカスタマイズすることができます。

支援アクセスは、その設定から、またはアクセシビリティショートカットを使用してオンにすることができます。

支援アクセスに入ると、システムは設定で壁紙を変更する機能と通知を知らせるインターフェースを備えた新しいロック画面を表示します。

ロック画面を通り過ぎると、新しいホーム画面が大きなアプリのアイコンと大きなテキストで表示されます。

このモード用に特別に設計された5つのAppleアプリを含むように支援アクセスを設定しました。友人や家族からの電話を発信または受信するための「通話」、メッセージを送受信するための「メッセージ」、お気に入りのプレイリストにアクセスするための「音楽」、写真、ビデオ、セルフィーを撮るための「カメラ」、保存された写真やビデオを表示するための「写真」です。

支援アクセスは、認知障害を軽減するための効果的な経験を生み出すことを目的とした一連の設計および開発目標で作られています。

iOSとiPadOSの多くのアプリには、ボタン、アイコン、メニュー、画像など、たくさんのユーザーインターフェイスアイテムがあります。

一部の人にとっては、このレベルの機能性と完全性は、操作が困難になる可能性があります。

人々は気を散らすことなくタスクを完了できるはずです。

支援アクセスは利用可能なオプションを減らすので、人々は興味のあるアイテムを見つけてナビゲートすることができます。

より少ないステップとより少ないオプションは、タスクを完了するための明確な道筋を提供するのに役立ちます。

エラーの認識と回復は難しい場合があります。

人々がファイルを削除するなどの重要な行動に遭遇した場合、明確な指示を与えられ、継続する前に何が起こっているのかを理解する機会を与えられるべきです。

これには、時間に依存するアクションを減らし、いつでも簡単に戻ることも含まれます。

使い慣れたインタラクションやパターンを作成することは、支援アクセスにとって非常に重要です。

予測可能性と快適さの感覚を確立し、テキストと画像の両方を見るようなマルチモーダル体験にも従事します。

これは、認知の緊張を軽減し、インターフェイスを身近にし、インターフェイスが理解される可能性を高めます。

複雑さを軽減し、人々がエラーを防ぐのを助け、使い慣れたインタラクションを作成することで、人々はより少ない難易度でiPhoneとiPadを使うことができます。

それでは、Assistive Accessがオンになっているときにアプリがどのように動作するかを見てみましょう。

支援アクセスでは、サードパーティのアプリが機能します。

この設定では、アプリを追加しました。どのように見えるか見てみましょう。

アプリを開くと、Assistive Accessは画面の下部に目立つように表示される大きな戻るボタンを追加します。

戻るボタンのためのスペースを作るために、アプリはデフォルトで縮小されたフレームで表示されます。

これは、個々のデバイスの画面サイズに基づいてアプリを設計した場合に備えて、アプリがまだ素晴らしく見えるようにするためです。

さらに、ホーム画面に戻るには、戻るボタンをタップすることで実行できます。

一部のアプリは、さまざまなデバイスや画面サイズに適応するように特別に設計されています。

戻るボタンを除いて、アプリをフルスクリーンで実行できるようにする新しいinfo.plistキーを作成しました。

UISupportsFullScreenInAssistiveAccessをinfo.plistファイルに追加し、その値をyesに設定します。

このキーを使用して、任意の画面サイズに適応するようにアプリを設計したことをAssistive Accessに知らせます。

私のアプリはオーディエンスのために設計されており、アダプティブなレイアウトを持っているので、このキーは私のアプリに関連しています。

このキーを追加した後、私のアプリがどのように動作するかを見てみましょう。

素晴らしい、私のアプリはAssistive Accessで利用可能なすべてのスペースを使用しています。

アプリが同じことをできるようにする方法を見てみましょう。

iPhoneとiPadの優れたアプリは、ユーザーのデバイスに関係なく適応する一貫したレイアウトを持つように設計されています。

これは、アプリがデバイスや画面サイズに基づいてハードコードレイアウトをしないことを意味します。

SwiftUIでは、開発者はスタックやグリッドなどのレイアウトコンテナを利用してビューを配置し、レイアウト修飾子を利用してビューのサイズ、位置、配置を調整または制限することができます。

アプリにもっとカスタマイズされたレイアウトが必要な場合は、「SwiftUIでカスタムレイアウトを作成する」セッションをチェックしてください。

UIKitでは、AutoLayoutを使用し、2つの重要な機能を利用できます。

1つ目はセーフエリアです。これは、ダイナミックアイランドやホームインジケーターなどのシステムハードウェアやソフトウェア要素によって妨げられていない画面の部分です。

safeAreaInsetsプロパティを使用して、インターフェイスの目に見える部分内にビューを配置します。

レイアウトガイドは、画面上のコンテンツの配置と整列に役立つ長方形の領域を定義する2番目の機能です。

safeAreaLayoutGuideプロパティを使用して、要素を調整し、コンテンツの周りに標準マージンを適用します。

アプリを適応させる方法の詳細については、セッション「UIKit：あらゆるサイズと形状のアプリ」をチェックしてください。

SwiftUIまたはUIKitを使用するかどうかにかかわらず、この新しいInfo.plistキーは、アダプティブレイアウトとともに、支援アクセスのすべてのユーザーがあなたのアプリで素晴らしい経験を持つことを保証することができます。

支援アクセスでも、誰もがあなたのアプリを楽しんで使えるようにしましょう。

見てくれてありがとう。

♪ ♪