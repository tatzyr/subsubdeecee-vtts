10061

♪ ♪

ケイ：こんにちは、プライバシーエンジニアリングのケイです。

依存関係の整合性を自動的に検証するのに役立つ、Xcodeの新しいエキサイティングなプライバシーとセキュリティ機能を紹介するためにここにいます。

Appleでは、プライバシーは、当社の製品の中核であるのと同じくらい、すべての人の開発プロセスの中核であるべきだと考えています。

Xcode内の依存関係署名検証は、アプリ開発者がアプリを保護し、依存関係作成者が配布するSDKを保護するのに役立ちます。

アプリは、さまざまなSDKを使用して開発されています。

例えば、iOS SDK。

Appleによって作られたものもあれば、アプリ開発者がすべてのアプリで使用するものもあれば、アプリ開発者が他のソースから入手したものもあります。

これらはアプリのサプライチェーンを形成し、フレームワーク、Swiftソースファイル、およびその他の種類の依存関係を含めることができます。

サードパーティのSDKを使用すると、アプリ開発が大幅に簡単になり、拡張機能を提供できます。

しかし、これはリスクをもたらします。

サプライチェーンのセキュリティは、これらのリスクを軽減するプロセスです。

含める依存関係を選択し、悪意を持って変更されたバージョンを誤って使用しないようにすることで、ユーザーを保護する責任があります。

この責任は、開発の一環として他のSDKを含むSDK作成者にも及びます。

これらのリスクを軽減するために利用可能なプロセスとツールは、手動で行うには負担または複雑になる可能性があります。

依存関係署名の検証は、このタスクを簡単かつ自動化できる新しいXcode機能です。

サプライチェーンのセキュリティが何であるかがわかったので、開発者を保護し、この負担を軽減する上でデジタル署名が果たす役割について話します。

まず、Appleのコード署名技術がどのように機能し、Xcodeが依存関係の署名を検証するために現在何をしているかの概要を説明します。

そして、アプリ開発者がこの機能を使用して、依存関係が損なわれていないことを確認する方法について話します。

そして最後に、SDK作成者がエコシステムのセキュリティを向上させるために何ができるかについて説明します。

Appleのコード署名技術がどのように機能するかから始めます。

アプリ開発者が使用するSDKを開発するときは、SDKクライアントへの配布中に誰もそれを変更したり改ざんしたりできないようにしたい。

コード署名は、最終的な準拠したバイナリと、Info.plistやフレームワークのプライバシーマニフェストなどの関連するメタデータ、または特定の種類の配布の場合、ソースコード自体を開発者IDと暗号的にリンクするメカニズムです。

高レベルでは、コード署名は、最初にコンパイルされたバイナリのコードディレクトリハッシュ（CDHashとも呼ばれる）を生成することによって機能します。

次に、このハッシュに署名するには、開発者IDを使用します。

このIDは、開発者証明書で表されます。

コード署名に使用される秘密鍵と、署名の一部として配布される公開鍵で構成されています。

この署名は、あなたの身元に結びつけることができます。

このアイデンティティは、ハッシュに署名するために使用され、署名が特定の時点で生成されたことを検証するために使用される安全なタイムスタンプと組み合わせることができます。

これにより、誰かがあなたのSDKを改ざんした場合、署名が無効になります。

また、アプリ開発者は、署名に埋め込まれた証明書を使用して、署名したのはあなたであることを確認することもできます。

アプリで使用できる一般的なタイプの依存関係は、xcframeworkです。

xcframeworksでは、署名は_CodeSignatureディレクトリ内に存在します。

コード署名は、WWDC23のビデオ「プライバシーマニフェストを使い始める」で言及されているプライバシーマニフェストファイルを含む、最終的なxcframework内のすべてのファイルの整合性を保護します。

アプリに含めるすべてのxcframeworkのすべてのバージョンについて、これらのコード署名を手動で検証することは可能ですが、これは時間のかかるプロセスであり、セキュリティ上の利点を得るためにあなたに負担をかけます。

署名検証は、アプリの依存関係の検証を自動的に処理し、問題が検出された場合に警告することでサプライチェーンの整合性を保護するXcodeの新機能です。

Xcode 15には、プロジェクトに含めるxcframeworksに署名するために使用されるIDを自動的に追跡するのに役立つツールがあります。

Xcodeは、アプリに含めるxcframeworksの署名ステータスを表示するインスペクタに新しいセクションを表示するようになりました。

このセクションには、著者の身元など、署名に関する情報が含まれています。

xcframeworkがApple Developer ProgramのIDによって署名されているか、自己署名証明書によって署名されているか、または現在署名されていないかを示します。

さらに、Xcodeは、xcframeworkを初めて使用する際にIDを記録し、後のビルド中に変更がないことを確認します。

開発者のアイデンティティによって、Xcodeは特定のxcframeworkに使用されたアイデンティティへの信頼に基づいて、異なるレベルの機能を提供します。

Apple Developer ProgramのIDの場合、Appleは、取り消されたかどうかを含め、使用された証明書の有効性を確認し、複数の開発者が同じ名前で登録できないことを確認することができます。

使用される証明書が自己署名されている場合、アプリ開発者は、その有効性と信頼性を依存関係の作成者に直接確認する必要があります。

xcframework作成者の署名証明書の有効期限が切れると、XcodeはApple Developer ProgramのIDの新しい証明書が同じ開発者からのものであることを自動的に検証できます。

自己署名証明書の場合、Appleのような信頼できる当事者による証明書の証明がないため、この変更が正当であることを手動で確認する必要があります。

依存関係がApple Developer ProgramのIDによって署名されている場合、Xcodeはビルド時にそれを検証し、署名が有効でない場合、IDが変更された場合、または証明書の有効期限が切れた後にxcframeworkが署名された場合にアラートを表示します。

Apple Developer Programの証明書がAppleによって取り消された場合も、Xcodeは警告します。

これは、Appleが開発者アカウントが悪意があると判断した場合に発生する可能性があります。

これらのアラートはまれであり、問題を解決するまでアプリをビルドしないことを自動的に保証します。

これが起こった場合、Xcodeはプロジェクトからxcframeworkを削除できるように提案します。

自己署名IDの場合、Xcodeは証明書のSHA-256フィンガープリントを以前にプロジェクトに追加されたものと比較します。

アイデンティティが変更された場合、または依存関係の内容が変更された場合は、アラートが表示されます。

指紋が使用したものと一致することを確認するために、xcframework作成者に連絡する必要があるか、xcframework作成者がこの情報を公開することができます。

そして、それがデジタル署名がxcframeworksでどのように機能するかです。

次に、アプリ開発者がXcodeでこの機能を使用する方法を紹介します。

実演するために、私はBackyard Birdsのサンプルアプリを使うつもりです。

複数の裏庭を所有し、鳥の餌や水を出し、鳥の訪問者がいつ現れるかを確認できるデジタルバードウォッチング体験を提供します。

BirdFeederと呼ばれるxcframeworkを使用して、食品と水の補充プロセスを自動化する予定です。

BirdFeeder xcframeworkの著者は、最新のリリースに署名しました。

ここで、私はBirdFeederをプロジェクトに追加しました。

xcframeworksの場合、Xcode 15はインスペクタに「署名」ビューを持ちます。

これにより、証明書の署名情報が表示され、チームの詳細が表示されます。

xcframework開発者のIDは、最初に見たときにプロジェクトに保存されます。

ビルド中、XcodeはBirdFeeder xcframeworkの署名に使用されたIDがプロジェクトで期待されるIDと一致することを検証します。

それは成功裏に構築されました。

サプライチェーンの攻撃をシミュレートするために、私は誰かが私に多くの新しいエキサイティングな機能を追加し、より良いパフォーマンスを与えたと言ったBirdFeeder xcframeworkの更新バージョンをくれたふりをします。

これは、完全に信頼していないウェブサイトからxcframeworkをダウンロードするときにも発生する可能性があります。

ここでは、以前のバージョンをこの更新されたバージョンに置き換えました。

アプリを構築すると、Xcodeはアプリ内のすべてのxcframeworksの署名を検証します。

ビルドは失敗し、BirdFeeder開発者のアイデンティティが以前にプロジェクトに記録されたものと一致しないことを指摘しました。

エラーを選択すると、開発者のアイデンティティが変更されたことを説明するアラートが提供され、期待されるアイデンティティが新しいバージョンに存在するものとどのように比較されるかを示します。

この場合、予想される証明書がApple Developer Program証明書であったことを示していますが、プロジェクト内の証明書は自己署名証明書を使用しています。

これは、xcframeworkが侵害されたか、変更が正当であったことを意味する可能性があります。

たとえば、xcframeworkの所有権を別の開発者に譲渡した可能性があります。

確信が持てない場合は、いつでもキャンセルしても安全です。

これにより、変更が本物かどうかを調査する時間が与えられます。

Xcodeは、この変更が発生した場合、自動的に通知されるようにすることで、あなたとあなたのアプリを保護します。

この場合、変更は予想されていなかったので、この新しいバージョンをXcodeのゴミ箱に移動します。

ただし、変更が正当であることがわかっている場合は、たとえば、開発者が検証済みのパブリックチャネルを介してこれを通知した場合、変更を受け入れることができます。

最後に、この機能がSDK作成者にとって何を意味するのかについて話します。

SDK作成者は、アプリ開発者が身元を確認し、署名後に変更または改ざんされていないことを保証するため、SDK作成者がSDKに暗号署名することが重要です。

これらのプロパティは両方とも、信頼を築き、SDKを安全に配布するために非常に重要です。

先に説明したように、使用できるアイデンティティには、Apple Developer Programと自己署名の2種類があります。

Apple Developer Programのメンバーは、SDKクライアントの信頼を確保するために、このプログラムの一部として含まれている証明書を使用する必要があります。

SDKを公開する場合はApple Distribution証明書を使用し、テストバージョンを配布する場合はApple Development証明書を使用する必要があります。

エンタープライズプログラムのメンバーは、iOSディストリビューションまたはアプリ開発証明書を使用する必要があります。

Appleがあなたに証明書を発行するとき、AppleはあなたがApple Developer Programの正当なメンバーであり、証明書を取得するために必要なすべての要件を満たしているという事実を証明しています。

これには、お客様の身元を確認し、プライバシーとセキュリティに関するAppleのポリシーとガイドラインを遵守することが含まれます。

SDKの署名に使用された証明書を手動で取り消すと、開発者がアプリを構築しようとするとXcodeが署名を検証できなくなるため、有効な証明書を使用して署名された更新されたバージョンをリリースする必要があります。

Apple Developer Program証明書で署名されたSDKは、ベースラインレベルの信頼を持ち、SDKが改ざんされていないことを保証します。

さらに、Appleは信頼できる機関であるため、新しい証明書が生成されると証明書の検証が自動的に処理されます。

このビデオの冒頭で、コード署名の仕組みと、開発者IDを使用してSDK内に署名を含める方法について議論しました。

それでは、コデザインツールを使用してこれを行う方法を見てみましょう。

ここのコマンドとApple Developer ProgramのIDを使用して、xcframeworksに署名できます。

タイムスタンプフラグは、署名にAppleによって証明された安全なタイムスタンプが含まれていることを確認するために含まれています。

ただし、Apple Developer Programのメンバーでない場合は、自己署名証明書を生成し、共同設計コマンドで使用できます。

あなたは、xcframeworkがあなたによって署名されたことを確認できるように、この証明書の指紋をSDKクライアントと共有する責任があります。

アプリにSDKを含む開発者は、Xcodeに含まれる新機能を使用して、xcframeworkがあなたによって署名されたことを確認できます。

常に配布するSDKに署名する場合、Xcodeのこの新機能は、SDKクライアントがサプライチェーンに自信を持つのに役立ちます。

これを行うのは簡単です。

新しいビルドを必要とせず、すでに公開したフレームワークのバージョンからすぐに始めることができます。

これは、現在Apple Developer Programのメンバーでない場合でも、自己署名証明書を使用しても機能します。

その後、ビルドスクリプトに共同設計コマンドを含めることで、xcframeworksのすべての新しいバージョンでこれを行うことができるので、心配する必要がなくなります。

アプリ開発者にとって、Xcode 15は、アプリの基盤となるSDKの整合性とセキュリティを自動的に保証するのに役立ちます。

すべてのSDK署名が検証されていることを確認することは、責任あるアプリ開発とユーザー保護の重要な側面です。

サプライチェーンの開発者が公開するSDKへの署名を開始するよう奨励することで、支援することができます。

SDK作成者の場合は、セキュリティと信頼性を確保するためにSDKの署名を開始してください。

コードに署名することで、SDKクライアントとの信頼を確立し、セキュリティとプライバシーを真剣に受け止めていることを示すことができます。

ハッピーアプリ開発!

こちらはケイ、サインオフです。

♪ ♪