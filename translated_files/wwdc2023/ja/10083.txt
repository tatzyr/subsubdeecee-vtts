10083

♪まろやかなインストゥルメンタルヒップホップ♪

♪

エリック・チウ:こんにちは。私の名前はエリックで、今日はReality Composer Proのウォークスルーを行います。

2019年に、拡張現実で足を濡らすためにReality Composerを導入したことを覚えているかもしれません。

現在、xrOSのリリースに伴い、3Dコンテンツの作成、編集、プレビューに役立つプロの開発者ツールであるReality Composer Proを導入しています。

Reality Composer Proを使用すると、没入型の3D体験を作成できます。

このインタラクティブなジオラマアプリを例に挙げてみましょう。

私たちは、いくつかの興味のあるポイントとともに、部屋規模で素晴らしい国立公園をチェックすることができます。

このセッションでは、このシーンを構築するために活用できるReality Composer Proのさまざまな機能について説明します。

新鮮なプロジェクトから始めて、Reality Composer Proの一般的なUIを通過し、3D地形とロケーションピンを使用してメインシーンを構成し、地形の上に雲を追加し、オーディオ付きの鳥を数羽追加します。

統計を活用してパフォーマンスを最適化し、最後にシーンのデバイス上のプレビューをチェックします。

始めましょう。

まず、私たちのプロジェクトを設定します。

セットアップには2つの方法があります。

1つの方法は、Xcode>Open Developer Toolに移動し、そこからReality Composer Proを開くことです。

これは、スタンドアロンのReality Composer Proプロジェクトを作成する場合に推奨されます。

もう1つの方法は、xrOSアプリテンプレートを使用して新しいXcodeプロジェクトを作成することです。

テンプレートは自動的に生成し、Reality Composer ProプロジェクトをXcodeプロジェクトにリンクします。

これは、XcodeアプリでReality Composer Proプロジェクトを使用する場合に推奨されます。

ジオラマアプリをこのように構築します。

Reality Composer Proプロジェクトは、このSwiftパッケージです。

Swiftパッケージは、Reality Composer Proでの作業を容易にするだけでなく、ビルドプロセス中に、Xcodeアプリが使用するフレームワークにコンテンツをパッケージ化します。

FinderのReality Composer Proプロジェクトの構造を見てみましょう。

ここでは、3Dコンテンツの編集に使用するファイルはUSDであり、ユニバーサルシーンの説明として知られています。

これはAppleが推奨する3Dコンテンツ用のファイル形式です。

詳細については、以下にリストされているUSDファイル形式のWWDCセッションをチェックしてください。

ファイルを整理するとき、.rkassetsフォルダに配置されたUSDはフレームワークにコンパイルされ、Xcodeプロジェクトですぐに使用できます。

Xcodeに戻り、パッケージを選択すると、デフォルトのシーンの3Dプレビューが表示されます。

シーンをさらに調査または編集したい場合は、Reality Composer Proで開くをクリックするだけです。

では、Reality Composer Proをナビゲートし、UIの感覚を得る方法について説明します。

中央にはビューポートがあります。

ビューポートを使用すると、シーン内の3Dオブジェクトを視覚化、ナビゲート、プレビューできます。

W、A、S、Dキーと矢印キーを使用してビューポートを移動することをサポートしています。

ビューポートをさらに制御したい場合は、Mac互換のゲームコントローラーを接続して、そのようにビューポートを飛ぶことができます。

先頭側には、階層パネルがあります。

階層パネルは、シーン内の3Dオブジェクトを検索、選択、整理する簡単な方法を提供します。

後続側には、検査官パネルがあります。

インスペクタパネルは、位置、回転、スケールなど、選択したオブジェクトのプロパティを簡単に編集する方法を提供します。

インスペクタパネルの下部にある[コンポーネントの追加]ボタンでは、オブジェクトで設定できる組み込みのRealityKitコンポーネントを表示することもできます。

下にエディターパネルがあります。

エディタパネルの最初のタブはプロジェクトブラウザです。

プロジェクトブラウザは、Reality Composer Proプロジェクトに含まれるファイルをナビゲートするためのユーザーフレンドリーな方法です。

このパネルには、シェーダーグラフ、オーディオミキサー、統計など、高度な編集用の他のタブも含まれています。

Reality Composer Proプロジェクトを設定し、UIをナビゲートする方法がわかったので、シーンの作成を始めましょう。

Reality Composer Proプロジェクトにアセットを追加するには、3つの方法があります。

1つ目は、コンピューターに既に存在するプロジェクトブラウザにアセットをインポートすることです。

ジオラマアプリに使用する予定のアセットをインポートしましょう。

プロジェクトブラウザのインポートボタンを押すことで、これを行うことができます。

すごい！私たちは今、プロジェクトブラウザにすべての資産を持っています。

2つ目は、Reality Composer Proが提供するアセットのキュレーションされたライブラリであるコンテンツライブラリです。

3つ目は、現実世界のオブジェクトの写真を3Dモデルに変えるオブジェクトキャプチャーです。

詳細については、「Meet Object Capture for iOS」WWDCセッションをチェックしてください。

資産をプロジェクトにインポートしたので、シーンの構築を始めましょう。

まず、ビューポートでオブジェクトを選択し、削除を押して、テンプレートによって作成された球体を削除しましょう。

プロジェクトブラウザには、ヨセミテの3Dモデルと、それを保持するための素敵なジオラマベースがあります。

これら2つのアセットを階層パネルにドラッグし、シーン内のそれらのアセットへの参照を追加します。

ジオラマベースには材料がないようです。

コンテンツライブラリをチェックして、使したい資料があるかどうか見てみましょう。そして、私たちが使いたい資料があるかどうか見てみましょう。

ツールバーのプラスボタンをクリックしてコンテンツライブラリを開き、使用できる素材を探しましょう。

この具体的な材料は有望に見えるので、私たちはそれを私たちのシーンに引きずり込みます。

アセットは自動的にプロジェクトにインポートされ、シーンで参照されます。

それでは、階層内のジオラマベースの材料を選択し、具体的な材料を使用するように更新しましょう。

すごい！次に、いくつかのロケーションピンを配置します。

ロケーションピンをビューポートにドラッグアンドドロップし、El Capitanに配置します。

次に、Command-Dを使用して位置ピンをさらに2回複製し、3つのピンの名前をEl Capitan、Cathedral Rocks、Merced Riverに変更します。

カテドラルロックスとマーセドリバーの場所のピンを正しい場所に移動しましょう。

ロケーションピンを適切な場所に配置したので、組織的な目的でロケーションピンをグループ化し、グループの名前を「Yosemite_Location_Pins」に変更しましょう。

ロケーションピンを新しいバージョンに更新したい場合はどうなりますか?

さて、これらの位置ピンはすべて、以前にインポートした位置ピンファイルを参照しています。

USDの力を活用して、Location_Pinアセットを更新したい場合は、新しいLocation_Pinアセットをプロジェクトにインポートし、既存のアセットを置き換えることができます。

では、粒子エミッタについて行きましょう。

粒子エミッターは、私たちのシーンでこの炎のような効果を作り出すことを可能にします。

粒子エミッタは、粒子とエミッタの2つの部分で構成されています。

粒子とエミッタの両方には、微調整および変更するための変数の複数のセクションがあります。

粒子には、色、プロパティ、力場、レンダリングセクションがあります。

エミッタには、タイミング、形状、および産卵セクションがあります。

では、粒子エミッタを使用して雲を追加して、シーンをより面白くてダイナミックにしましょう。

どうやってやるの？

さて、私たちのReality Composer Proプロジェクトには、任意の量のシーンを含めることができます。

シーンは、Xcodeアプリですぐに使用できる完成品、または再利用可能なコンテンツのいずれかを表すことができます。

この場合、雲は小さな雲で構成されています。

まず、再利用可能なクラウドチャンクシーンを構築します。

次に、3D空間の異なる位置に配置された複数のクラウドチャンクを組み合わせた完全なクラウドシーンを作成します。

完全な雲の3つの異なるバリエーションを作り、最後に、これらの3つの雲をメインシーンに入れます。

Reality Composer Proに戻って、「ファイル」>「新規」>「シーン」に移動して、新しいシーンを作成しましょう。

シーンに「Cloud_Chunk」という名前を付けます。

新しいシーンが作成されると、ウィンドウに新しいタブとして表示されます。

シーンにパーティクルエミッタを追加するには2つの方法があります。

1つ目は、階層パネルの下部にあるプラスボタンです。

2つ目は、インスペクタパネルの下部にある[コンポーネントの追加]ボタンをクリックして、シーン内の任意のオブジェクトにパーティクルエミッタコンポーネントを追加することです。

インスペクタパネルの上部にある再生コントロールを使用して、パーティクルエミッタをプレビューできます。

少し見づらいので、設定に移動し、ビューポートの背景を変更して、パーティクルエミッタをより見やすくしましょう。

それはずっと良いです。

粒子で遊ぶのは本当に楽しいです。

あちこちでプロパティを試すだけで、探している結果が得られることがよくあります。

粒子エミッタをあなたを喜ばせる状態にする限り、粒子エミッタを作るのに正しいアプローチや間違ったアプローチはありません。

しかし、考慮すべきことの1つは、シーン内の粒子の数が多いとパフォーマンスに影響を及ぼす可能性があるため、使用されている粒子の数に細心の注意を払うことをお勧めします。

現在、パーティクルエミッタコンポーネントには、パーティクルとエミッタの2つのセクションがあります。

粒子セクションでは、個々の粒子の外観を制御します。

エミッタセクションでは、粒子が原点からどのように出てくるかを制御します。

また、上に構築するためのプリセットもいくつかあります。

だから、ゼロから始める必要はありません。

クラウドはインパクトプリセットに最も近いので、インパクトプリセットを選択して開始しましょう。

私の典型的なワークフローは、まず[エミッター]タブに焦点を当て、次に[パーティクル]タブに進みます。

送信者タブを見ると、タイミングが最初のセクションです。

粒子のすべての放出の間にわずかな一時停止があります。

これはアイドル期間の変数によるものです。

これをゼロに設定すると、粒子が一定に放出されるはずです。

形状セクションに移動すると、雲は円柱形状よりも球形状なので、エミッタ形状を球体に切り替えましょう。

次に、雲はその体積内に粒子があるはずですので、出生場所を表面から体積に変更しましょう。

雲も高さよりも平らになる傾向があるので、x軸とz軸のスケールをy軸のスケールよりも大きく調整しましょう。

それは素晴らしく見えます。

最後に、パーティクルエミッタの親の将来の翻訳、回転、スケーリングがパーティクルエミッタ自体にも適用されるように、isLocalSpaceをチェックする必要があります。

[パーティクル]タブに移動し、個々のパーティクルの外観を調整します。

出生率は、一度に存在する粒子の数を定義します。

パフォーマンスを警戒して、これを2000から500に下げて、それが違いを生むかどうか見てみましょう。

外観にわずかな変化がありますが、それでもかなり良さそうなので、500に保ちましょう。

インパクトプリセットを使用するおかげで、パーティクルの色とテクスチャはすでに私たちが望むものなので、これらのセクションの変数の変更をスキップして、プロパティセクションに進むことができます。

粒子はあまりにも短い時間のために存在するようです。

寿命を2秒から5秒に延ばして、何が起こるか見てみましょう。

これは素晴らしく見えます。

モーション、フォースフィールド、レンダリングのセクションでは、より多くの変数で遊ぶことができますが、これまでの効果は私たちが望むものに近いので、今のところそれらのセクションを変更しないようにしましょう。

ショートカットCommand-Sを使用してシーンを保存し、次のステップに進みます。

かっこいい！再利用するクラウドチャンクを構築したばかりです。

それでは、複数のクラウドチャンクを組み合わせて完全なクラウドを作る新しいシーンを作りましょう。

ショートカットCommand-Nを使用して新しいシーンを作成します。

このシーンを「Cloud_A」と名付けましょう。

プロジェクトブラウザからCloud_Chunkアセットを階層パネルにドラッグして、クラウドチャンクを3回参照します。

これら3つのクラウドチャンクの親を選択し、インスペクタパネルの上部にある再生コントロールで再生を押してクラウドをプレビューできます。

では、マニピュレーターを使用して、これら3つのクラウドチャンクを3D空間の異なる位置に移動しましょう。

すごい。

これは1つのまとまりのある完全な雲のように見えます。

Command-Sを使用してシーンを再度保存できます。

さまざまなクラウドを得るために、Cloud_Aの作成と同様のプロセスを使用してさらに2つのクラウドを作成しましたが、クラウドチャンクの配置が異なります。

私はこれらのシーンをCloud_BとCloud_Cと名付けました。

では、メインシーンに戻りましょう。

「Clouds」というグループを作り、このグループの下にCloud_A、Cloud_B、Cloud_Cをインポートしました。

私はまた、私たちの地形の上にそれらをうまく配置しました。

パーティクルエミッタを一度にプレビューするには、グループ「クラウド」をクリックし、インスペクタパネルの上部にある再生コントロールで再生を押すだけです。

素晴らしい、物事は一緒に来ています。

次に、シーンにオーディオを組み込む方法について説明します。

オーディオファイル、オーディオファイルグループ、およびオーディオソースを使用してオーディオを追加できます。

プロジェクトブラウザからシーンにインポートされたオーディオファイルは、ループする必要がある場合など、さまざまな方法で設定できます。

オーディオファイルは1つ以上のオブジェクトで再生でき、オブジェクトは1つ以上のオーディオファイルを再生できます。

オーディオファイルグループは、シーン内のオーディオファイルから構築できます。

オブジェクトがオーディオファイルグループを再生するたびに、グループからランダムなオーディオファイルが再生用に選択されます。

オーディオソースは、オーディオファイルとオーディオファイルグループがシーンに放出される方法を定義します。

オーディオソースには、空間、アンビエント、チャンネルの3種類があります。

空間オーディオソースは、オーディオ再生のための3D空間の位置と方向を提供します。

テーブルの上に座っているラジオアセットに空間オーディオを使用することを想像してみてください。

アンビエントオーディオソースは、オーディオ再生のための3D空間の方向以外の位置を提供します。

東から来る風の音にアンビエントオーディオを使用することを想像してみてください。東に向かってどんなに遠くまで歩いても、風の音は常にその方向から来ています。

最後に、チャンネルオーディオソースは、オーディオ再生のための3D空間の位置も方向も提供しません。

環境でバックグラウンドミュージックにチャンネルオーディオを使用することを想像してみてください。

オーディオオーサリングのコンセプトを取り上げたので、ジオラマプロジェクトで実際に見てみましょう。

鳥の3Dモデルとオーディオファイルとオーディオソースを組み合わせた再利用可能なアセットとして新しいシーンを作成します。

Command-N、このシーンに「Bird_With_Audio」という名前を付けます。

以前、アニメーション付きの鳥と2つのバードコールオーディオファイルをプロジェクトブラウザにインポートしました。

これらのアセットを階層パネルにドラッグして、このシーンに参照として追加しましょう。

これで、シーン内の任意のオーディオソースは、これら2つのバードコールオーディオファイルを利用することができます。

次に、階層パネルの下部にあるプラスボタンを使用して、空間オーディオソースを追加します。

また、インスペクタパネルの下部にある[コンポーネントの追加]ボタンをクリックし、メニューで[空間オーディオ]を選択することで、シーン内の任意のオブジェクトに空間オーディオソースを追加することもできます。

繰り返しますが、空間オーディオソースには位置と方向があるので、より現実的に聞こえるように鳥のくちばしの近くに配置する必要があります。

インスペクタパネルの上部にある再生コントロールを使用して、空間オーディオソースをプレビューできます。

フォーカスやプレビューするバードコールオーディオファイルなど、調整できる空間オーディオコンポーネントの追加プロパティがあります。

さて、空間オーディオソースが再生するように指示されるたびに、これら2つの鳥の呼び出しのうちの1つをランダムに選択したい場合はどうなりますか?

まあ、それがオーディオファイルグループのためです。

階層パネルの下部にある同じプラスボタンを使用して、オーディオファイルグループを作成できます。

これらのオーディオファイルをオーディオファイルグループにドラッグして、グループに「Bird_Calls」という名前を付けましょう。

空間オーディオソースをプレビューするたびに、オーディオファイルグループ内のバードコールの1つがランダムに選択され、再生されます。

再利用可能なアセットの作成が終わったので、このBird_With_Audioシーンを保存して閉じて、メインシーンを開きましょう。

私は「Birds」と呼ばれるグループの下でV字型のパターンでBirds_With_Audioの5つの参照を配置しました。

グループ「鳥」を選択し、インスペクタパネルの再生コントロールを押して、すべての鳥のアニメーションとオーディオを同時にプレビューできます。

今、それはかなり素敵に見え、聞こえます!

この同じ手順を使用して、「Nature _Ambience」という名前のアンビエントオーディオソースとともに、Forest_Soundsオーディオファイルをメインシーンに追加しました。

Xcodeアプリでオーディオを再生するには、「XcodeでReality Composer Proコンテンツと作業する」WWDCセッションで説明する追加のコードが必要です。

メインシーンのコンテンツが設定されたので、統計の使い方について学んでみましょう。

統計は、シーンのパフォーマンスを最適化するのに役立つ専用のエディタです。

カテゴリは、一般、物理学、アニメーション、粒子エミッタ、オーディオ、材料、ジオメトリ、テクスチャに分かれています。

メインシーンで統計を試してみましょう。

エディタパネルの[統計]タブをクリックすると、カテゴリのコレクションが表示されます。

すべてのカテゴリの右上隅にある展開ボタンは、より詳細なビューにカテゴリを開きます。

ジオメトリの展開ボタンをクリックすると、シーンで約464,000個の三角形が使用され、Diorama_Baseは256,000という最も多くの三角形を使用していることがわかります。

私たちはここで何かを捕まえた。

ジオラマベースは、その視覚的な形状が私たちの地形よりも複雑ではないにもかかわらず、私たちの3D地形よりもはるかに多くの三角形を持っています。

これは、3Dモデリングソフトウェアでジオラマベースのジオメトリを簡素化するのに最適な時期です。

幸いなことに、ジオラマアプリのアセットを作成した同僚のスコット・ウェイドが私を助けてくれました。

プロジェクトブラウザのインポートボタンを使用して、ジオラマのベースの新しい簡略化されたバージョンをプロジェクトにインポートできます。

新しいDiorama_Baseを選択し、既存のものを置き換えてください。

では、統計学に戻り、ジオメトリのカテゴリを見てみましょう。

Diorama_Baseは現在、2,500の三角形しか使用していません。

シーン内の三角形の数を464,000から210,000に減らしました。これは半分以上です!

そして、私たちのシーンは、変更前に同じ外観を維持します。

先ほど見たように、統計はシーンのパフォーマンスを最適化するのに役立つ素晴らしいツールです。

もう一つあります。

デバイスでシーンをプレビューする方法を見てみましょう。 シーンをプレビューする方法を見てみましょう。

ヘッドセットをコンピュータに接続したら、ツールバーのオンデバイスプレビューボタンの横にあるドロップダウンで選択し、オンデバイスプレビューボタンを切り替えます。

私たちは、ARで私たちのシーンが私たちの目の前に現れるのを見るべきです。

ピンチしてドラッグしてシーンを回転させ、ズームしてシーンを拡大縮小できます。

これにより、意図したxrOSプラットフォームで3Dコンテンツがどのように見えるかを簡単に理解できます。

時間のために、私は別の国立公園、カタリナ島のためにこのセッションで経験したことの同様の手順を実行しました。

この同じワークフローを使用して、メインシーンにカタリナ島の3D地形を追加しました。

また、カタリナ島のツーハーバー、パーソンズランディング、リボンビーチをマークするために、いくつかのロケーションピンを追加しました。

最後に、Nature_Ambienceオーディオソース用のOcean_Soundsオーディオファイルを追加しました。

今日見たのは、3Dシーンを組み立てるのに役立つ強力なツールであるReality Composer Proのウォークスルーです。

パーティクルエミッタやオーディオソースなど、興味深いRealityKitコンポーネントを追加できます。

また、シーンを最適化し、ヘッドセットでプレビューするのにも役立ちます。

シェーダーグラフを使用してヨセミテ島とカタリナ島の地形を移行する方法の詳細については、ニールのセッション「Explore naterials in Reality Composer Pro」をご覧ください。

また、アマンダのセッション「XcodeでReality Composer Proのコンテンツで作業する」で、この体験をインタラクティブにする方法を学ぶこともできます。

私はあなたがReality Composer Proで構築するものを見て興奮しています。

このセッションを楽しんでいただけたでしょうか、ご覧いただきありがとうございます！

♪