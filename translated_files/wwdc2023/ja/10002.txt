10002

♪ ♪

キース・ホレマン：こんにちは、私の名前はキース・ホレマンで、アップルのインターネットテクノロジーチームの一員です。

今日は、ネットワークリレーを使用してアプリのプライバシーとセキュリティを強化する方法について話します。

このセッションは、ネットワークリレーに使用される技術を探ることから始めます。

リレーは、Appleの多くのプライバシー機能で使用されています。

私たちは、この技術が効果的で使いやすい方法が大好きで、今ではアプリでリレーを使用する2つの方法があります。

まず、アプリ内のリレーを設定して、アプリのネットワークトラフィックを保護できます。

第二に、VPNの代替手段として、企業内のプライベートリソースにアクセスするためのデバイスにリレーを拡張することができます。

飛び込んで始めましょう。

リレーは、iCloudプライベートリレー、メールプライバシー保護、SafariのトラッカーからのIPアドレスの非表示などの優れた機能の基礎を形成します。

アプリは、非公開にしたいユーザーに関する機密情報を処理する場合があり、自分のサーバーがその情報をクライアントのIPアドレスに関連付けることができないようにしたい場合があります。

これで、アプリは選択したリレーを使用して、すべてのユーザーに強力なプライバシー保護を提供できます。

リレーは、パフォーマンスに最適化され、最新のトランスポートおよびセキュリティプロトコルを使用し、Appleプラットフォームで利用可能な最新のネットワークスタックにネイティブに組み込まれている特別なタイプのプロキシです。

これらのリレーが使用するIETFによって定義された2つの標準プロトコルがあります。MASQUEとOblivious HTTPです。

MASQUEリレーは、アプリのプライバシーを強化したり、プライベートリソースにアクセスしたりするのに最適な方法です。

バックエンドサーバーを変更することなく、リレーを介して任意のTCPまたはUDP接続を送信できます。

リレーサーバーをチェーン接続して、単一のエンティティがIPアドレスとブラウジングアクティビティをユーザーの詳細なプロファイルにまとめることはできません。

これは、iCloudプライベートリレーの背後にある基盤技術です。

リレーは、エンタープライズリソースにアクセスするための素晴らしい方法でもあります。

リレーは、より良いユーザーエクスペリエンスを提供し、より高性能で、VPNよりも管理が簡単です。

MASQUEリレーは、レガシープロキシプロトコルとは異なり、TLS 1.3を使用してプロキシへのすべてのトラフィックを保護します。

MASQUEは、最新のトランスポートプロトコルであるQUICとHTTP/3を使用して、1つのトンネルで多くの接続を効率的にプロキシおよび多重化します。

また、QUICがネットワークによってブロックされている場合は、HTTP/2の使用にフォールバックできます。

アプリがプライベートであり、匿名メトリクスレポート、データベースルックアップ、DNSクエリなどの他のリクエストにリンクされていないことを確認したいHTTPリクエストを送信する場合は、Oblivious HTTPを使用することもできます。

Oblivious HTTPを使用すると、1つのリレーホップで優れたパフォーマンスとプライバシーを得ることができます。

MASQUEリレーとは異なり、Oblivious HTTPは任意のサーバーでは動作しません。サーバーはそれを明示的にサポートする必要があります。

Oblivious HTTPの詳細については、「プライバシーの新機能」セッションをご覧ください。

アプリによって作成されたプロキシ接続に、これらのリレータイプの両方を使用できます。

これにより、アプリのプライバシーを高めるために、選択した特定のリレーサーバーを使用できます。

新しいProxyConfigurationクラスでは、ネットワークフレームワーク、URLSession、およびWebKitでリレーを定義できます。

3つのAPIはすべて、この共通のクラスを同様の方法で使用し、アプリ全体または特定の接続のリレーを定義できます。

ProxyConfigurationオブジェクト内では、5つの異なるプロトコルに基づいてプロキシを定義できます。

これは、MASQUEとOblivious HTTPの両方に新しいリレータイプを指定できる場所です。

同じオブジェクトを使用して、レガシープロキシタイプの設定にも使用できます。

以前に辞書を使用してURLSessionまたはWebKitでプロキシを設定していた場合、今はこの新しいオブジェクトの使用に切り替えるのに最適な時期です。

レガシープロキシタイプの場合、プロキシへのTLSのサポートとSOCKSv5が新たに追加されたHTTP CONNECTを設定できます。

HTTP/3経由でMASQUEリレーに接続するために使用されるProxyConfigurationを定義する方法は次のとおりです。

まず、NWEndpointを使用してサーバー名またはURLを指定し、それを使用してリレーホップを定義します。

これらのリレーホップには、HTTP/3、HTTP/2、またはその両方のサポートを指定できます。

HTTP/2サーバーは、QUICプロトコルを使用したHTTP/3へのアクセスがネットワークによってブロックされた場合のバックアップとして使用されます。

次に、リレーを「relayHops」配列パラメータに渡して、プロキシ設定を作成します。

マルチホップリレー構成を定義したい場合は、ここで2つのリレーを渡すことができます。

ネットワークフレームワークのNWConnectionでProxyConfigurationを使用するには、PrivacyContextを作成するか、デフォルトのコンテキストを使用して、そのコンテキストにプロキシ設定を追加します。

NWParametersにコンテキストを設定し、接続を作成して開始するときにこれらのパラメータを渡します。

今、この接続はプロキシを介してすべてのトラフィックを送信しています。

URLSessionですでに定義したのと同じプロキシ設定を使用することもできます。

これを行うには、URLSessionConfigurationのproxyConfigurations配列に設定を追加します。

次に、通常どおりURLSessionでタスクを実行すると、プロキシも使用されます。

同じプロキシ設定オブジェクトは、WebKitビューで行われた接続のプロキシにも使用できます!

まず、Webビュー設定を初期化し、データストアを追加し、プロキシ設定をデータストアに追加します。

次に、設定でウェブビューを初期化します。

それが完了したら、要求されたURLをロードし、通常どおりWebKitビューを使用できます。

現在、このWebkitビューもリレーを介してトラフィックを送信しています。

独自のアプリにリレーを追加するだけでなく、iOS 17では、デバイス全体にリレーを設定できます。

プライバシー機能を構築できるだけでなく、リレーを使用してプライベートエンタープライズネットワークリソースへのアクセスを提供するのに最適な方法です。

エンタープライズリソースへのアクセスを提供するためにVPNを使用している可能性があります。

リレーは、より良いユーザーエクスペリエンスを提供し、管理が簡単なVPNの代替手段です。

ネットワークリレーは複雑なセッションネゴシエーションを必要とせず、実際のユーザーデータが転送される前により少ない往復を必要とすることがよくあります。

これにより、ユーザーのプライベートリソースの最初のロードは、可能な限り最も応答性の高いインタラクションであることを保証します。

リレーは、VPNに関連付けられているトンネル、仮想インターフェイス、および追加のIPアドレスの使用も回避します。

複数のリレーを同時に設定できるため、異なるネットワークにある異なるプライベートドメインにアクセスする方が簡単です。

VPNの代替としてリレーサーバーを使用したいエンタープライズ企業には、独自のインフラストラクチャで使用するオプションがあります。

シスコは、Cisco Secure Edge製品の一部としてエンタープライズリレーサービスを提供しています。

企業がユーザーにリモートアクセスを提供するためにこのオプションを採用することに興奮しています。

デバイスにMASQUEリレー構成をインストールするには、2つの方法があります。

エンタープライズ組織は、モバイルデバイス管理（MDM）を介して構成をプッシュして、新しいリレーペイロードタイプを使用してリレーを定義できます。

これらのペイロードは、管理対象のアプリ、ドメイン、またはデバイス全体に適用できます。

次に、NERelayManager APIを使用してリレーを定義するアプリを書くことができます。

これらの構成は、特定のドメインまたはデバイス全体に適用できます。

これらは両方とも、macOS、iOS、iPadOS、tvOSで利用できます。

そして、ネットワーク拡張サポートがtvOSに追加された今、VPNもtvOS 17で新たにサポートされています。

構成プロファイルを使用してリレーを設定する方法は次のとおりです。

アプリのProxyConfiguration APIと同様に、リレーURLを定義します。

VPNプロファイルと同様に、同じプロファイル内の証明書ペイロードを参照することで、エンタープライズサーバーへの認証にクライアント証明書を使用できます。

ペイロードのMatchDomains部分に追加することで、リレーを特定のドメインに適用させることができます。

次に、アプリがNERelayManager APIを使用してプログラムでデバイスにリレーを追加する方法を見ていきます。

リレーを定義するには、NERelayオブジェクトを初期化してから、リレーのURLを設定する必要があります。

ここでは、HTTP/2とHTTP/3の両方で同じリレーを使用しています。

リレーで追加のHTTPヘッダーが必要な場合は、NERelayオブジェクトに追加してください。

また、作成したばかりのNERelayオブジェクトを保存する場所であるため、共有NERelayManagerオブジェクトにアクセスする必要があります。

リレーをデバイス全体ではなく特定のドメインのみに適用する場合は、それらのドメインをmatchDomains配列に追加します。

最後のステップは、リレーが有効になっていることを確認し、NERelayManagerオブジェクトをシステム環境設定にインストールすることです。

リレーの動作を見てみましょう。

私はマウンテンバイクが大好きで、自分の自転車店もオープンしました。

私の店には、オンラインストアと、すべての注文を追跡できる内部ウェブサイトがあります。

そのウェブサイトは私の内部ネットワーク上にあり、従業員のみが利用できます。

Safariを開いて、未完了の注文を確認しようとすると、内部ネットワーク上にいないため、表示されません。

リレー構成をインストールすると、どこからでも内部ネットワークにアクセスできるようになります。

先ほどのコードでサンプルリレーアプリを開くと、内部ドメインにアクセスしながらショップのリレーを使用するようにデバイス全体を設定できます。

この設定は設定にも表示され、internal.example.comにアクセスするとリレーが使用されていることがわかります。

さて、Safariに戻り、再び未処理の注文を見ようとすると、それらと、出荷に必要な注文の数を見ることができます。

それは最初のロードで、シンプルで、速く、応答性があります。

リレーは、パフォーマンスを損なうことなく、アプリのセキュリティとプライバシーを向上させることができる最新の標準ベースのプロキシです。

アプリのMASQUEリレーとOblivious HTTPリレーを直接採用して、ユーザーのプライバシーを強化します。

また、企業にとっては、VPNの使用を、管理が簡単で、よりシームレスなユーザーエクスペリエンスを提供するリレーに置き換え始めます。

今日はお時間を割いていただきありがとうございます。

あなたがリレーをどのように使うかを見るのが待ちきれません。