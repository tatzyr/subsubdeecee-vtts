10031

♪ ♪

ニーナ:こんにちは。

私の名前はニーナ・パリポヴィッチで、watchOSのソフトウェアエンジニアです。

このコード付きセッションでは、watchOS 9 SDKで構築された既存のアプリを取り、watchOS 10用に更新します。

システム全体の再設計とともに、アプリを美しく見せるために使用できる新しいデザインパラダイムとSwiftUI APIについて説明します。

サンプルプロジェクトは、このセッションに関連付けられたリソースリストにリンクされています。

watchOS 10を一緒に構築する準備が整うように、今すぐダウンロードを開始することをお勧めします。

飛び込む前に、既存のプロジェクトを見てみましょう。

私たちが更新するアプリはBackyard Birdsで、美しい裏庭の庭とその好奇心旺盛な訪問者を作成して管理できるアプリです。

今日のアプリには、裏庭のリストがあります。

各裏庭には、その活動と状態を示す詳細なビューがあります。

食べ物や水が不足している場合は、補充することができます。

また、各裏庭ですべての鳥の訪問者を見ることができます。

watchOS 10は、ウォッチアプリにエキサイティングで新鮮な新しい外観をもたらします。

まだ確認していない場合は、「Meet watchOS 10」と「Design and build apps for watchOS 10」をチェックして、このセッションで適用する設計原則に関する詳細情報を入手してください。

では、Xcodeを開いて、アプリのアップデートを始めましょう。

これは、watchOS 9用に構築され、実行されている現在のBackyard Birdsアプリです。

裏庭の詳細に移行する裏庭のリストが表示されます。

まず、watchOS10 SDKに対して構築しましょう。

そのアプリはすでに見栄えがいいです。

スクロールすると遷移する大きなタイトルや、ナビゲーションバーの下のコンテンツをぼかにする新しい素材など、新しいシステム機能が見られます。

裏庭をタップするとセルがアニメーション化し、左上にあるシステム全体のツールバーボタンのスタイリングを自動的に採用しました。

スクロールしてリフィルをタップすると、新しいぼやけた背景素材のモーダルが表示されます。

Backyard Birdsを使用する人々は、自分の裏庭で何が起こっているかを最も気にかけています。

現在、アプリを起動すると、最初に行うことは、リストの裏庭をタップして、詳細ビューで何が起こっているかを確認することです。

watchOS 10では、NavigationSplitViewでアプリの構造を変更することで、物事を簡単にすることができます。

これにより、人々は裏庭の詳細ビューに直接起動し、友人の庭を訪れたいときにリストにポップアップすることができます。

詳細ビューはアプリの最も重要な部分であるため、NavigationSplitViewを実装することで強調することができます。

NavigationSplitViewは、この強力なソースリストと詳細の関係がある場合に最適です。

これにより、ソースリストから別のヤードに簡単に切り替えることができながら、直接起動することで詳細に集中できます。

私たちはすでにiOSとiPadOSのBackyard Birdsにそれを使用しています。

NavigationSplitViewは私たちのアプリにぴったりのようです。

ContentViewでは、NavigationStackをNavigationSplitViewに交換します。

次に、navigationDestinationの内容をNavigationSplitViewの詳細に移動します。

最後に、NavigationSplitViewによって提示される詳細ビューを推進する、watchOS 10で利用可能な新しいリスト選択APIを採用します。

まず、NavigationStackをNavigationSplitViewに交換しましょう。

裏庭リストは、NavigationSplitViewのルートにあるままにしておくことができます。

navigationDestination修飾子を削除して、BackyardViewを詳細ビュービルダーに移動しましょう。

selectedBackyardはオプションなので、必ず開封してフォールバックビューを提供しましょう。

最後に、選択バインディングを取るリスト初期化子を使用しましょう。

リストの選択パラメータの値を指定すると、選択バインディングは、NavigationSplitView内に表示する詳細ビューを駆動します。

いいね。

選択したヤードの詳細ビューがデフォルトで表示されます。

詳細に直接起動するので、navigationTitleを削除できます。

ソースリストボタンを使用して、戻って裏庭の残りの部分を見ることができます。

そして、詳細ビューに戻ると、美しいフルスクリーンアニメーションが得られます。

現在、裏庭のビューはスクロール可能なコンテンツの長いリストです。

私たちのリストはすでに、今日のビュー、生息地ビュー、訪問者ビューなど、異なる機能セットを持つ3つの異なるセクションに分かれています。

代わりにTabViewを使用し、各セクションのタブを作成することで、アプリの視覚的な明瞭さを向上させることができます。

TabViewは、コンテンツをフルスクリーンビューに分割する方法を提供し、各タブには明確で明確な目的があります。

ビューをすばやくスクロールするために、デジタルクラウンの機能を維持したい。

新しい垂直ページスタイルにより、TabViewでこれを行うことができます。

人々はタブ間をすばやく移動したり、1つのタブ内でスクロールしたりできます。

Xcodeに戻り、詳細ビューを更新してTabViewを使用しましょう。

BackyardViewでは、各セクションを独自のビューに移動し、リストをTabViewに置き換えましょう。

TabViewの各ページは画面のフルサイズを占めるため、セクションや仕切りは必要ありません。

セクションヘッダーをナビゲーションタイトルとして追加し直しましょう。

最後に、tabViewStyle修飾子を使用して、verticalPageを指定しましょう。

もうすぐ着きます。

ページ分割すると、ビューが各タブに定着します。

人々がすべての訪問者をすばやく表示しやすくするために、VisitorViewをリストにまとめることができます。

これで、TabViewは子リストビューに1つのタブを指定します。

リストが画面の高さを超えると、ビューはスクロール可能になります。

垂直タブビュー内にスクロール可能なコンテンツがある場合は、可能な限り最後のタブに配置してください。

また、人々が食料と水位を簡単に区別できるように、生息地ビューを2つの別々のタブに分割します。

このために、私はTabViewによりよく収まる独自のゲージを作成しました。

TabViewでは、食品のインスタンスと水のインスタンスを作成することで、HabitatViewを新しいGaugeViewに置き換えましょう。

それは素晴らしく見えます。

今、私たちがする必要があるのは、補充機能を追加することだけです。

このために、私はツールバーを使うつもりです。

ツールバーは、すべての画面サイズで一貫した、まったく新しい配置オプションを備えたwatchOS 10で上昇しました。

新しいボトムバーの配置は、コントロールを置くのに最適な場所です。

下のバーに詰め替えボタンを追加して、この配置オプションを利用します。

新しいHabitatGaugeViewに戻って、ツールバーを追加し、ToolbarGroupを使用してボトムバーの配置を指定します。

スペーサーを使用して、ツールバーの後隅にボタンを追加します。

私たちは今、より多くのスペースを持っており、ハビタットの要約に焦点を当てる方が簡単です。

人々がタブビューをナビゲートする際に、より多くのことをしてオリエンテーションをしたいと思います。

さらに、裏庭の食料と水が少ない場合は、これに注意を喚起したいと思います。

背景グラデーションを適用することで、これを達成できます。

各タブのタイトルは役に立ちますが、色は目を見やすさを高め、詳細ビュー内の場所を強化する素晴らしい方法です。

また、食べ物や水が不足している場合は、裏庭の状態を強調するためにも使用できます。

システムグラデーションは、前景要素とのコントラストを維持しながら、これを中継する良い方法です。

これを達成するために、色のグラデーションを持つコンテナの背景修飾子を使用しましょう。

まず、元の背景を削除しましょう。

現在の食料と水位に基づいて背景色を決定する機能をBackyardViewに追加できます。

レベルが低い場合、背景は赤になり、補充の時間であることを示しています。

また、いくつかの有用な計算変数を追加します。

これで、この計算されたプロパティをcontainerBackground修飾子に渡すことができます。

修飾子は、色のグラデーションとContainerBackgroundPlacementを渡すShapeStyleを取ります。

ここでは、TabView用を指定します。

背景が変わったらゲージの色も変えたいです。

同じ計算された色変数を渡しましょう。

アプリのアクセントカラーを使用して、TabView内の他のビューにcontainerBackground修飾子を適用しましょう。

スクロールすると、グラデーションが前景の要素とうまく対照的であることがわかります。

また、ツールバーのボタンをタップすると、背景のグラデーションがどのように変化するかを確認できます。

最後の仕上げとして、重要な情報を強調するために資料を活用したいと思います。

資料はプラットフォーム間で入手でき、watchOS10でアプリを見るのは初めてです。

それらは、視覚的な華やかさを加えながら、前景と背景の要素を区別する良い方法です。

最後に、彼らは画面上の情報を表面化または強化することができます。

アプリには、素材と活気を使用できる場所がいくつかあります。

見てみましょう。 

まず、裏庭のタイトルから影の背景を置き換えて、代わりに素材の背景を使いたいです。

セルの背景はカラフルで、素材を追加すると、タイトルを明確にするのに役立ちます。

人々は、各裏庭の鳥の訪問者の数を本当に気にしており、要約ビューで見ることができます。

人々が裏庭の詳細ビューに入ることなくそれを見ることができるように、リストビューでそれを表面化するのは素晴らしいことです。

別のオーバーレイとして追加し、番号に材料の背景を提供します。

watchOSアプリは暗い背景を使用する傾向があるため、素材のデフォルトは暗いバリアントになります。

裏庭は軽くてカラフルなので、これらをライトバリアントに切り替えます。

そして、私たちのBackyard BirdsアプリはwatchOS 10用に更新されました。

私たちが今行ったすべての大きな変更を見直しましょう。

NavigationSplitViewをリストに追加しました。

次に、リストを垂直タブビューに置き換えました。

各裏庭のツールバーに機能を追加し、いくつかの美しいグラデーションを追加しました。

最後に、私たちは有用な情報を表面化するために材料を使用しました。

私と一緒にコーディングしてくれてありがとう。

今年はApple Watchにとって大きな年であり、より多くのセッションを探索することをお勧めします。

Backyard Birdsをさらに進めるには、「Apple Watchでスマートスタックのウィジェットを構築する」に進んでください。

あなたのアプリがwatchOS 10で輝くように、あなたが行うアップデートを見るのが待ちきれません。