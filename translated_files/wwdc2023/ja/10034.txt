10034

♪まろやかなインストゥルメンタルヒップホップ♪

♪

ダン・ゴールデン：こんにちは、アクセシビリティチームのダンです。

同僚のドリューと一緒に、空間コンピューティングのアクセシビリティについて話すことに興奮しています。

この講演では、このプラットフォームで利用可能なアクセシビリティ機能の概要を説明します。

次に、視覚障害者や弱視の人をサポートするために、アプリでできることの詳細をいくつか掘り下げます。

その後、空間コンピューティングにおける運動、認知、聴覚のアクセシビリティについて議論するためにドリューに渡します。

始めましょう！

私たちは、すべての人のためにこの没入型プラットフォームを設計しました。

空間コンピューティングの経験は、多くの場合、見事な視覚的機能とさまざまな手の入力で構築されていますが、それはそれらに従事するために視覚や物理的な動きが必要であるという意味ではありません。

実際、これらの経験は、盲目または低視力、可動性が限られている、または手足の違いを持つ人々に信じられないほど影響を与える可能性があります。

例えば、目が見えない人は、ディスプレイに表示されているものを見ることなく、現実世界と対話することができます。

したがって、アプリを構築するときは、誰もが楽しんで恩恵を受けることができるように、あらゆる能力を持つ人々を心に留めておくことが重要です。

Appleでは、テクノロジーへのアクセスが基本的人権であることを認識しており、このプラットフォームには、第1世代の製品に含めたアクセシビリティ機能の最大のリストが含まれています。

ダイナミックタイプのサポート、コントラストの増加、スポークンコンテンツ機能など、すでに知っていて愛している多くの機能に気づくでしょう。

そして、私たちは空間コンピューティングに特化した主力支援技術を再考しました。

私たちはこれらの機能にとても興奮しており、開発者として、あなたが構築している経験にすべての人が含まれていることを確認することで助けることができます。

まず、アプリで目の不自由な人や弱視の人をサポートする方法について話しましょう。

ビジョンのアクセシビリティについて議論する際に考慮すべきことがいくつかあります。VoiceOverのサポート、ビジュアルデザイン、モーションです。

VoiceOverのサポートについて話すことから始めましょう。

VoiceOverは、すべてのAppleプラットフォームで利用可能な内蔵スクリーンリーダーであり、これも持ち込んだと言えることを嬉しく思います。

ドリューと私は、ARKitとRealityKitを利用するHappy Beamという本当に楽しいアプリに取り組んできました。

アプリでは、不機嫌な雲を幸せにするために、手でハートのジェスチャーをします。

このアプリでVoiceOver体験を向上させる方法をいくつか見てみましょう。 いくつか見てみましょう。

先に進み、設定>アクセシビリティ>アクセシビリティショートカットのアクセシビリティショートカットにVoiceOverを追加し、Digital Crownをトリプル押すたびにVoiceOverがオンまたはオフを切り替えるようにしました。

これは、アプリのアクセシビリティをテストする際の素晴らしいツールです。

アプリを開いて、Digital CrownをトリプルプレスしてVoiceOverをオンにしましょう。

♪エーテルのインストゥルメンタル音楽♪

ボイスオーバー:ハッピービーム。

不機嫌な雲を元気づける方法を選んでください。

ダン：このプラットフォームでは、VoiceOverは異なる手で異なる指のピンチを使用して、異なるアクションを実行します。

デフォルトでは、右の人差し指をつまむことで、次の項目にフォーカスを移動できます。

♪

ボイスオーバー:両手でハートを作る、ボタン。

ピンチジェスチャーまたは互換性のあるデバイス、ボタンを使用してください。

ダン：前の項目にフォーカスを移動するには、右中指をつまみます。

ボイスオーバー:両手でハートを作る、ボタン。

ダン：アイテムを有効にするには、右の薬指または左の人差し指をつまみます。

VoiceOverの基本的なコントロールのいくつかに精通したので、アプリの残りの部分を調べてみましょう。

ボイスオーバー：3つ、2つ、1つ。

ハッピービーム。戻るボタン。スコアゼロ。

音楽を止めて、ボタン。残り29秒。

一時停止、ボタン。

ダン：ここはかなり良さそうです。

このアプリはSwiftUIを使用して構築されているため、使用している標準コントロールの多くはすでにアクセス可能であり、適切なアクセシビリティ情報がVoiceOverに提供されていることを確認するために、残りのビューにSwiftUIのアクセシビリティ修飾子を採用するように注意を払っています。

詳細については、SwiftUIアクセシビリティに関する講演をご覧ください。

アプリの残りの部分を見て、クラウドとどのようにやり取りできるかを見てみましょう。

VoiceOver: 閉じる、ボタン。ポップアップ。アプリの配置バー。

アプリの配置 -- アプリの配置 -- アプリの配置バー。

ダン：あなたが聞くその音は、VoiceOverが対話する他のアイテムを見つけることができないことを示しているので、クラウドはVoiceOverにアクセスできません。

クラウドはRealityKitを使用して生成されるため、RealityKitで利用可能な新しいアクセシビリティコンポーネントを使用してこれを修正できます。

アクセシビリティコンポーネントを使用すると、RealityKitエンティティのアクセシビリティプロパティを指定できます。

アクセシビリティラベル、値、特性、カスタムローター、カスタムコンテンツ、カスタムアクションを設定できます。

アクティブ化アクションや調整可能なアクションなど、システムアクセシビリティアクションを設定することもできます。

クラウドにアクセスできるようにするには、まず新しいアクセシビリティコンポーネントを作成し、isAccessibilityElementをtrueに設定して、クラウドがナビゲート可能である必要があることを支援技術に示しましょう。

次に、スイッチコントロールやボイスコントロールなどの技術が、このクラウドがユーザーインタラクティブアイテムであることを理解できるように、クラウドにボタン特性を与えます。

雲が幸せになったときに音を鳴らすので、playsSound特性も与えます。

次に、ラベルプロパティを介してクラウドに名前と、その不機嫌な状態や幸せな状態を説明する値を与えることができます。

アプリの状態が更新されるときはいつでも、アクセシビリティコンポーネントの関連プロパティを更新してください。

ここでは、isHappy変数のdidSetハンドラで、便利なプロパティの1つを使用して、クラウド上のaccessibilityValueを更新しています。

便利なプロパティを使用するときはいつでも、アクセシビリティコンポーネントの対応するプロパティがそれに応じて更新されます。

ラベルと値はLocalizedStringResourcesとして保存され、文字列リテラルを使用して作成できますが、実行時に提供したローカライズされた値に自動的に解決されます。

最後に、エンティティコンポーネントリストにコンポーネントを設定します。

クラウドにアクセスできるはずなので、私たちのアプリを見てみましょう。

♪

VoiceOver: App pl-- クラウド、不機嫌。ボタン。

ダン：すごい！私たちは雲にナビゲートすることができ、その状態は私たちに伝達されます。

VoiceOverは、空間オーディオを使用して、オブジェクトがどこにあるかの手がかりを提供します。

だから、それを幸せにするために、私たちの雲の1つでハートのジェスチャーをしましょう。

♪

どうなってるの?

私たちはその雲にたくさんの愛を見せましたが、それでも幸せにはならませんでした。

これは、VoiceOverが有効になっている場合、アプリはデフォルトでハンド入力を受信しないためです。

これは、誰かがVoiceOverジェスチャーを実行している間、アプリが誤ってアクションを実行しないようにし、安全に探索できるようにするためです。

このプラットフォームでは、VoiceOverには新しいダイレクトジェスチャーモードが含まれており、有効になっている場合、VoiceOverは標準のジェスチャーを処理せず、代わりにアプリがハンド入力を直接処理できるようにします。

ユーザーは、ダイレクトジェスチャーモードとVoiceOverのデフォルトのインタラクションモードの両方でアプリを実行することを選択できます。また、それぞれのケースで留意すべきアクセシビリティの考慮事項があります。

まず、VoiceOverのデフォルトのインタラクションモードについて話しましょう。

VoiceOverを使ってクラウドを幸せにできるように、アクティベートアクションを追加しましょう。

これを行うには、accessibilityComponentのsystemActionsプロパティにアクティブアクションを追加します。

その後、RealityView内のコンテンツのアクティベートイベントを購読します。

コールバックでアクティベートイベントを受け取るときはいつでも、関連するクラウドの状態がそれに応じて更新されるようにゲームモデルを更新します。

アクションを追加して、私たちのアプリをもう一度見てみましょう。

VoiceOver: アプリの配置 -- 閉じる -- クラウド、不機嫌。

雲、不機嫌。

ダン：すごい！

これで、VoiceOverを使って雲を幸せにすることができます。

AccessibilityComponentは、カスタムアクション、カスタムローター、カスタムコンテンツなどの追加のAPIも提供しています。

これらは、アプリのアクセシビリティ体験を向上させるための素晴らしいツールです。

詳細については、対応するトピックに関する講演をご覧ください。

次に、ダイレクトジェスチャーモードについて話しましょう。

これは、このプラットフォームでVoiceOverを使用しながらアプリと対話する新しい方法です。

VoiceOverのアクティベートアクションはダイレクトジェスチャーモードでは利用できないため、代わりに使用するハンド入力インタラクションにフィードバックを提供する必要があります。

まず、雲が現れたときにアナウンスを投稿し、雲とその世界での配置を説明しましょう。

これを行うには、アナウンスタイプで新しいAccessibilityNotificationを作成し、話したい文字列を渡してから、アナウンスの投稿関数を呼び出します。

空間体験では、利用可能なアイテムと場所に関する情報を提供することが重要であるため、これは私たちのアプリで重要な発表になります。

また、ハートのジェスチャーが認識されたときや、雲が不機嫌から幸せになったときにはいつでもアナウンスを投稿しましょう。

何が起こっているのか、どのようなインタラクションが行われているのかを明確にするために、意味のあるイベントを常にVoiceOverに発表してください。

たとえば、完全に没入型のアプリでは、新しい部屋や環境に入るときはいつでも、そのコンテキストの変更をVoiceOverに発表し、世界で利用可能な新しいアイテムを説明してください。

また、アクションを実行するときに音を利用することも検討してください。

クラウドが幸せに変わったときにハッピービームで再生される音は、クラウドの視覚的な変換を見ることができなくても、アプリを楽しく空間的に保つための素晴らしい方法です。

最後にもう一度、いくつかのお知らせを追加して、私たちのアプリを見てみましょう。

ゲームが始まったら、左の人差し指をトリプルピンチして長押ししてダイレクトジェスチャーモードを有効にします。

その後、私たちは心のジェスチャーをして雲を幸せにし、すべての相互作用についてのフィードバックを得ることができます。

ボイスオーバー：3つ、2つ、1つ。

ハッピービーム。

右上と前の3つの雲。

ダイレクトジェスチャーが有効になっています。

クラウンをACに押します - キャスティングビーム。

♪

不機嫌な雲が襲った。

隠しビーム。

ダン：すごい！

私たちは、それらが実行されていたすべての相互作用について、そこでいくつかの素晴らしいフィードバックを受け取りました。

私たちのアプリは、いくつかの素晴らしいVoiceOverサポートを持つように形成されています。

しかし、特にカスタムコンポーネントやコントロールを構築している場合は、VoiceOverでアプリを使用していない弱視の人をサポートするためにできることはまだたくさんあります。

他のすべてのAppleプラットフォームと同様に、特にアクセシビリティ設定で利用可能な最大サイズで、アプリがダイナミックタイプの変更に反応することを確認してください。

これらの大きなサイズで水平にレイアウトされるのではなく、垂直にレイアウトされることで恩恵を受ける可能性のあるUIについて、アプリを監査します。

また、前景色と背景色の間に少なくとも4対1のコントラスト比を使用していることを確認してください。

詳細については、「アプリを視覚的にアクセスできるようにする」をチェックしてください。

空間体験では、アンカーを使用して、手や世界の特定の位置など、異なるアンカーポイントに関連してコンテンツを配置できます。

また、コンテンツを仮想カメラに固定するように設定して、ディスプレイ上の同じ場所に表示されるようにすることもできます。

他のAppleプラットフォームのReality Kitのカメラアンカーに精通しているかもしれませんが、このプラットフォームでは、周りを見回すときにコンテンツがあなたの頭をたどり、弱視の人々に異なる影響を与える可能性があります。

ヘッドアンカーは、弱視の人がコンテンツに近づき、読んだり、詳細を表示したりできるように、避け、控えめに使用する必要があります。

さらに、アクセシビリティズーム機能を使用している人は、ズームレンズもヘッドアンカーされているため、ズームレンズ内にヘッドアンカーコンテンツを簡単に配置することはできません。

代わりに、ワールドアンカーを使用するか、遅延後にコンテンツを怠惰に移動することを検討してください。

ヘッドアンカーを使用することが絶対に必要なまれなケースでは、コンテンツを装飾的に保ちます。

重要な情報は、ヘッドアンカーされたコンテンツを通じてアクセスできるべきではありません。

アプリで最高の主流体験であっても、ヘッドアンカーの代替手段を常に提供してください。

SwiftUIの新しいaccessibilityPrefers HeadAnchorAlternative Environment変数と、AccessibilityフレームワークのAX PrefersHeadAnchor Alternative APIは、代替アンカーを使用するタイミングをお知らせします。

アプリがヘッドアンカーを採用している場所ならどこでも、これらのAPIを観察してください。

私たちは、このAPIをシステムに採用するように注意しました。

デフォルトでは、コントロールセンターは崩壊した状態でヘッドアンカーされています。

ここでは、周りを見回すと、コントロールセンターがあなたについてくることがわかります。

この設計により、どこからでもコントロールセンターに簡単にアクセスできますが、一部の人にとっては難しいかもしれないことを知っていました。

先ほど、Zoomもヘッドアンカーされていると述べました。

これは、弱視の人のためのコンテンツを拡大する機能です。

ズームが有効になっている場合、または誰かがヘッドアンカーよりも代替手段を好むことを示した場合、コントロールセンターはY軸の周りを自由に移動します。

ここでは、頭を上に傾けると、ズームレンズが頭を追うことがわかりますが、コントロールセンターはそうではありません。

ズームレンズの内側にコントロールセンターを配置し、それと対話できるようにします。

また、アプリでの動きの使用に留意することも重要です。

動きは一部の人にとってめまいがする可能性があり、ヘッドセットを着用することは、微妙なモーション効果が使用されている場合でも、特に不快な経験になる可能性があります。

アプリを通じて人を急速に動かしたり、跳ねたり、波のような動きを伴う動きは避けてください。

ズームアニメーション、複数の軸に沿った動きを伴うアニメーション、回転または回転効果、および永続的な背景効果もすべて避けるべきです。

Reduce Motionが有効になっている場合は、これらのタイプのアニメーションの代替手段を常に提供してください。

Reduce Motionがアクティブかどうかは、SwiftUIのaccessibilityReduceMotion環境変数で確認できます。

UIKitでは、UIAccessibility. isReduceMotionEnabledを照会し、対応する通知で設定の変更を観察できます。

アプリでモーションに適した代替品を見つけるのに問題がある場合は、クロスフェードの使用を検討してください。

以下は、システムでReduce Motionを採用した方法の例です。

水がバックグラウンドでしつこく波打つので、ここマウントフッド環境の水をチェックしてください。

Reduce Motionをオンに切り替えると、水は静的にリップル効果を示すように変更され、モーションの使用を必要とせずに同様の視覚効果が得られます。

これは、アプリの視覚アクセシビリティを向上させる方法の概要ですが、運動、認知、聴覚のアクセシビリティについて議論する際には、まだ考慮すべきことがたくさんあります。

そして、そのために、ここにドリューがあなたにもっと話します。

ドリュー・ハース:ありがとう、ダン。本当に素晴らしい仕事!

私の名前はドリュー・ハースで、アクセシビリティチームのエンジニアです。

空間体験の視覚的アクセシビリティを向上させる有意義な方法について学んだので、身体機能や運動機能、認知、聴覚に影響を与える障害を持つ人々にインクルーシブになるようにアプリを作成する方法について、共有したいことがたくさんあります。

まずはモーターから始めましょう!

デフォルトの入力システムは、目と手の組み合わせによって駆動されます。

たとえば、目でボタンを見て、手でつまむと、ボタンをアクティブにするための選択イベントが送信されます。

しかし、誰もがこれらの物理的な行動を実行できるわけではありません。

当社のアクセシビリティ機能は、目、手、またはその両方の使用に影響を与える障害を持つ人々に代替入力方法を提供します。

ドウェルコントロールのアクセシビリティ機能により、人々は手を使わずにUIを選択して操作することができます。

ドウェルコントロールは、タップ、スクロール、長押し、ドラッグなどのジェスチャーをサポートしています。

Dwell Controlを使用している人が除外されないように、このジェスチャーセットで完全な機能を持つようにアプリを設計する必要があります。

滞留コントロールメニューを使用してジェスチャーモードを切り替えるのは簡単です。これにより、効率を犠牲にすることなく宿泊施設を使用してデバイスを操作できます。

これは設計によるものです。デフォルト以外の入力を使用していても、人々に摩擦のない体験を提供します。

Happy Beamアプリがさまざまな入力をサポートするように設計されているため、Dwell Controlを使用して完全に再生可能になります。

ハッピービームが発売されると、プレイヤーは最初にそれらの不機嫌な雲を元気づける方法を選択します。

あなたはこのセッションの前半で最初の選択肢を見ました:心臓の形をした両手を使用し、それを雲に向けます。

2番目のオプションは、キーボードやゲームコントローラーなどのBluetoothアクセサリーをサポートしています。

これらの入力で遊ぶとき、ハッピービームはこのハートタレットを使用して発射されます。

砲塔はタップアンドドラッグのジェスチャーにも反応します。つまり、片手で遊ぶことができます。

そして、ドウェルコントロールで遊んでいる人々は、砲塔の上に完全な機能を持っています。

だから、ハッピービームのように、さまざまな入力をサポートするためにあなたのアプリを計画し、設計してください。

これは、誤って人を排除しないようにするための最良の方法です。

Dwellで本当にうまく機能する別のアクセシビリティ機能があります。

私のお気に入りのアクセシビリティ機能の1つであるポインターコントロールを入力してください。

この機能は入力体験を変換し、目を使用する代わりに、さまざまな入力ソースを使用してシステムのフォーカスを制御できるようにします。

目はデフォルトですが、ここでは、頭の位置、手首の位置、または人差し指によって駆動されるシステムの焦点を変更することができます。

ポインターコントロールは、ヘッド位置に従うように入力信号を変更できるため、カメラに固定されたコンテンツを控えめに使用することを忘れないでください。

これは、ワールドアンカーを使用するか、カメラアンカーされたコンテンツに代わるものを提供することを好むべきもう一つの理由です。

ドウェルコントロールとポインターコントロールの両方は、単独で、または機能セットを組み合わせて利用することで、人々がデバイスとどのように対話するかに多くの柔軟性を提供します。

これらの機能は、システムを使用するための物理的な要件に対応します。

あなたのアプリを使用している人がどのような障害を持っているかわからないので、物理的な相互作用のための複数の手段を許可します。

空間体験は、コンテンツと対話する新しい次元的な方法を可能にします。

スイッチコントロールには、世界空間でのカメラの位置を調整するための新しいメニューオプションがあります。

ここでは、スイッチコントロール付きのキーボードを使用して、新しいカメラ位置修飾子をアクティブにしています。

これは、あなたが物理的に体を動かすことなく、あなたの空間的な位置を下向きに動かします。

誰もが自分の環境で快適または自由に移動できるわけではありません。

これらのカメラ位置オプションはスイッチコントロールで利用できますが、人々が特定の方法で自分自身を配置する必要がある経験がある場合は、それらをバイパスするオプションを提供してください。

次に、認知アクセシビリティと、情報の学習、記憶、処理方法に影響を与える障害を持つ人々をどのようにサポートできるかについて話したいと思います。

ガイド付きアクセスは、システムを単一のアプリに制限することで集中力を促進する認知アクセシビリティ機能です。

これは、他のアプリをバックグラウンド化し、気を散らす可能性のある装飾的なUIを削除し、誰かを経験から外す可能性のあるハードウェアボタンイベントを抑制することで、気晴らしを最小限に抑えることを目的としています。

このようにシステムを調整できるため、気を散らしたり、脱線したりする簡単な方法なしに、現在のタスクに集中しやすくなります。

ガイド付きアクセスの使用方法とカスタム制限APIの実装方法の詳細については、昨年の私の講演「アクセス可能なシングルアプリモードエクスペリエンスを作成する」をチェックしてください。

認知アクセシビリティのためのいくつかのベストプラクティスに従うだけで、すべての人、特に障害のある人にとってアプリが使いやすくなります。

アプリの複雑さを打破するために、もう少し助けが必要な人もいます。

複雑な手のジェスチャーを必要とする相互作用は、人々が拾って保持するのが難しい場合があります。

SwiftUIのようなAppleのUIフレームワークを使用することで、一貫性のある使い慣れたビジュアルエクスペリエンスの作成を支援できます。

これにより、同じUIフレームワークを使用して構築された他のアプリを使用した可能性が高いため、誰かがアプリを快適に使用する必要がある時間が短縮されます。

そして最後に、人々が時間をかけて没頭し、あなたが提供しなければならないすべてを体験できるようにします。

経験を通して人々を急がせる必要はありません。

没入型コンテンツは、集中力と注意を促進することができます。これは、感覚処理障害を持つ人にとって快適な環境を作り出す素晴らしい方法です。

誰もが同じ速度で情報を処理するわけではないので、経験を通して働くために少し余分な時間を好むか、または必要とする人もいることを忘れないでください。

最後に、聴覚障害者や難聴者にアクセスと宿泊施設を提供する最良の方法のいくつかを共有したいと思います。

人々を空間体験に没頭させる方法として、音声と音声を使用することが一般的です。

難聴や聴覚処理障害を持つ人々にとって、あなたができる最も影響力のあることの1つは、彼らがあなたのコンテンツにアクセスできるように質の高いキャプションを提供することです。

快適な読書体験は、単語ごとに表示され、長期間読むときに読書疲労や吐き気を引き起こす可能性のあるロールアップキャプションを使用する代わりに、フレーズを一度にレンダリングし、読みやすいポップオンキャプションを使用して簡単に作成できます。

人々は自分のデバイスでキャプションの視覚的な外観をカスタマイズできることを知っていましたか?

キャプションは広くカスタマイズでき、テキストサイズ、フォント、色、ストロークアウトラインや背景などを変更できます。

これらのオプションを使用すると、キャプションをカスタマイズして、見やすく、読みやすくすることができます。

AVKitとAVFoundationは、アプリにキャプションを提供するための組み込みサポートを提供します。

これらのフレームワークは、キャプションの外観とビジュアルスタイルを自動的に処理します。

独自のキャプションシステムを実装しているため、AVFoundationを使用していない場合は、知っておくべきAPIが2つあります。

まず、isClosedCaptioningEnabled API。

これを使用して、誰かがすでにアクセシビリティ設定でクローズドキャプションをオンにしているかどうかを確認します。

アプリに別のキャプション設定がある場合は、このAPIを使用してキャプションのデフォルト状態を通知する必要があります。

このようにして、キャプションに依存している人々はすぐにアクセスできます。

2つ目は、各スタイル属性に個別にアクセスするためのAPIを持つメディアアクセシビリティフレームワークにあります。

システム全体で一貫した読書体験を維持するために、これらのスタイルを確認し、キャプションに適用する必要があります。

どちらの方法でキャプションを提供しても、その品質には高い基準が必要です。

キャプションは、音楽や効果音を含むすべてのオーディオコンテンツを表す必要があります。

また、方向性があなたの経験にとって重要な場合、オーディオが宇宙のどこから来ているのかを示すことも有益であり、基本的にユーザーに「最も近いオーディオソースがあなたの後ろにあるかもしれないことを覚えておいてください」と伝えます。

印象的なアクセシビリティ体験は、すべての人々とそのニーズを考慮することから来ています。

エンティティにアクセシビリティプロパティを設定することで、豊富なRealityKitエクスペリエンスを提供します。

これは、VoiceOver、音声コントロール、スイッチコントロールなどの技術に対するアプリのアクセシビリティの基礎です。

柔軟に、すべてのプレイヤーとそのプレイスタイルを含むように、ハッピービームで見たような物理的な相互作用のためのオプションを提供します。

曖昧さを取り除き、認知障害を持つ人々に明快さと焦点を提供するよう努め、聴覚障害者や難聴者があなたの創造を楽しむことができるように、オーディオ体験のためのキャプション付きコンテンツに時間と注意を払います。

どこから始めたらいいのかわからない場合は、これらのアクセシビリティ機能のいくつかをオンにして、アプリを開いてください!

これらの機能を自分で試してみることは、すぐに飛び込むのに最適な方法です。

このプラットフォームはすべての人のために設計されており、ダンと私が今日共有したすべての考慮事項で、あなたはアクセス可能で包括的な空間体験を作成するために装備されています。

ありがとう！

♪