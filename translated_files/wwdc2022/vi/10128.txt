10128

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Hao Tang: Xin chào, tên tôi là Hao.

Tôi là một kỹ sư trong nhóm Object Capture.

Hôm nay, đồng nghiệp Risa của tôi và tôi sẽ chỉ cho bạn cách sử dụng Object Capture API và RealityKit để tạo các mô hình 3D của các đối tượng trong thế giới thực và đưa chúng vào AR.

Hãy bắt đầu nào.

Đầu tiên, tôi sẽ cung cấp cho bạn bản tóm tắt về Object Capture, mà chúng tôi đã khởi chạy dưới dạng RealityKit API trên macOS vào năm ngoái.

Sau đó, tôi sẽ giới thiệu cho bạn một vài cải tiến về máy ảnh trong ARKit, cho phép bạn chụp ảnh độ phân giải cao của đối tượng và có thể giúp bạn tích hợp Object Capture tốt hơn vào các ứng dụng AR của mình.

Sau đó, tôi sẽ xem xét các hướng dẫn thực hành tốt nhất của Object Capture để bạn có thể tiếp tục tận dụng tốt nhất công nghệ này.

Trong phần cuối cùng, Risa sẽ đưa bạn qua quy trình làm việc đầu cuối với Object Capture trong RealityKit và trình bày cách bạn có thể đưa các đối tượng trong thế giới thực vào trải nghiệm AR.

Hãy bắt đầu với bản tóm tắt nhanh về Object Capture.

Object Capture là một công nghệ thị giác máy tính mà bạn có thể tận dụng để dễ dàng biến hình ảnh của các đối tượng trong thế giới thực thành các mô hình 3D chi tiết.

Bạn bắt đầu bằng cách chụp ảnh đối tượng của mình từ nhiều góc độ khác nhau bằng iPhone, iPad hoặc DSLR.

Sau đó, bạn sao chép những bức ảnh đó vào máy Mac hỗ trợ Object Capture.

Sử dụng Photogrammetry API, RealityKit có thể biến ảnh của bạn thành mô hình 3D chỉ trong vài phút.

Mô hình đầu ra bao gồm cả lưới hình học cũng như các bản đồ vật liệu khác nhau, bao gồm cả kết cấu, được tự động áp dụng cho mô hình của bạn.

Để biết thêm chi tiết về Object Capture API, tôi thực sự khuyên bạn nên xem phiên WWDC năm ngoái trên Object Capture.

Nhiều nhà phát triển đã tạo ra các ứng dụng chụp 3D tuyệt vời bằng cách sử dụng Object Capture: Unity, Cinema4D, Qlone, PolyCam, PhotoCatch, chỉ để kể tên một vài ứng dụng.

Thêm vào đó, chúng tôi có các mô hình đẹp mắt được tạo ra bằng API này.

Đây là một vài mô hình được tạo ra bởi Ethan Saadia sử dụng sức mạnh của Object Capture trong ứng dụng PhotoCatch.

Và người bạn Mikko Haapoja của chúng tôi từ Shopify cũng đã tạo ra một loạt các mô hình 3D tuyệt đẹp bằng API này.

Chất lượng chi tiết của các mô hình 3D đầu ra mà bạn nhận được với Object Capture rất có lợi trong thương mại điện tử.

Ví dụ, đây là ứng dụng GOAT cho phép bạn thử nhiều loại giày trên đôi chân của mình.

Tất cả các mẫu giày này đã được tạo ra với Object Capture API được thiết kế để nắm bắt mức độ chi tiết tốt nhất trên chúng.

Điều này có thể giúp bạn đưa ra quyết định mua sản phẩm hoặc thậm chí thử sự phù hợp chính xác với một đối tượng trong không gian của bạn.

Ví dụ, ứng dụng Plant Story cho phép bạn xem trước các mô hình 3D trông thật của các loài thực vật khác nhau trong không gian của bạn, tất cả đều đã được tạo bằng Object Capture.

Điều này có thể giúp bạn cảm nhận được bạn có thể cần bao nhiêu không gian cho một cái cây, hoặc đơn giản là nhìn thấy chúng trong không gian của bạn một cách chi tiết thực tế.

Nói về chủ nghĩa hiện thực, bạn có thể phát hiện ra cây thật trong video này không?

Vâng, đó là cái trong chậu cây màu trắng ở góc ngoài cùng bên trái của bàn.

Chúng tôi rất vui mừng khi thấy việc sử dụng Object Capture API tuyệt vời và rộng rãi như vậy kể từ khi ra mắt vào năm 2021.

Bây giờ, hãy nói về một số cải tiến máy ảnh trong ARKit, điều này sẽ giúp ích rất nhiều cho chất lượng tái tạo với Object Capture.

Trải nghiệm Chụp Đối tượng tuyệt vời bắt đầu bằng việc chụp những bức ảnh đẹp về các vật thể từ mọi phía.

Cuối cùng, bạn có thể sử dụng bất kỳ máy ảnh độ phân giải cao nào, như iPhone hoặc iPad, hoặc thậm chí là máy ảnh DSLR hoặc máy ảnh không gương lật.

Nếu bạn sử dụng ứng dụng Máy ảnh trên iPhone hoặc iPad của mình, bạn có thể chụp ảnh chất lượng cao với thông tin về độ sâu và trọng lực cho phép API Chụp Đối tượng tự động khôi phục quy mô và hướng trong thế giới thực của đối tượng.

Thêm vào đó, nếu bạn sử dụng iPhone hoặc iPad, bạn có thể tận dụng khả năng theo dõi của ARKit để phủ lên giao diện người dùng hướng dẫn 3D lên trên mô hình để có được độ phủ sóng tốt của đối tượng từ mọi phía.

Một điều quan trọng khác cần lưu ý là độ phân giải hình ảnh từ ảnh chụp của bạn càng cao, chất lượng của mô hình 3D mà Object Capture có thể tạo ra càng tốt.

Cuối cùng, với bản phát hành ARKit năm nay, chúng tôi đang giới thiệu một API ảnh nền có độ phân giải cao hoàn toàn mới.

API này cho phép bạn chụp ảnh ở độ phân giải máy ảnh gốc trong khi bạn vẫn đang chạy ARSession.

Nó cho phép bạn sử dụng lớp phủ giao diện người dùng 3D của mình trên đối tượng trong khi tận dụng tối đa cảm biến máy ảnh trên thiết bị.

Trên iPhone 13, điều đó có nghĩa là độ phân giải gốc 12 megapixel đầy đủ của máy ảnh Wide.

API này không xâm phạm.

Nó không làm gián đoạn luồng video liên tục của ARSession hiện tại, vì vậy ứng dụng của bạn sẽ tiếp tục cung cấp trải nghiệm AR mượt mà cho người dùng của bạn.

Ngoài ra, ARKit làm cho siêu dữ liệu EXIF có sẵn trong ảnh, cho phép ứng dụng của bạn đọc thông tin hữu ích về cân bằng trắng, độ phơi sáng và các cài đặt khác có thể có giá trị để xử lý hậu kỳ.

ARKit giúp việc sử dụng API mới này trong ứng dụng của bạn cực kỳ dễ dàng.

Bạn có thể chỉ cần truy vấn định dạng video hỗ trợ chụp khung hình có độ phân giải cao trên ARWorldTrackingConfguration và nếu thành công, hãy đặt định dạng video mới và chạy ARSession.

Khi nói đến việc chụp ảnh độ phân giải cao, chỉ cần gọi hàm API captureHighResolutionFrame mới của ARSession, chức năng này sẽ trả lại cho bạn ảnh độ phân giải cao thông qua trình xử lý hoàn thành không đồng bộ.

Nó đơn giản như vậy.

Chúng tôi cũng đã nhận ra rằng có những trường hợp sử dụng mà bạn có thể thích điều khiển thủ công đối với các cài đặt máy ảnh như lấy nét, phơi sáng hoặc cân bằng trắng.

Vì vậy, chúng tôi đang cung cấp cho bạn một cách thuận tiện để truy cập trực tiếp vào AVCaptureDevice cơ bản và thay đổi các thuộc tính của nó để điều khiển máy ảnh chi tiết.

Như được hiển thị trong ví dụ mã này, chỉ cần gọi configurableCaptureDevice ForPrimaryCamera trên ARWorldTrackingConfiguration của bạn để có quyền truy cập vào AVCaptureDevice cơ bản.

Để biết thêm chi tiết về những cải tiến này, tôi thực sự khuyên bạn nên xem "Khám phá phiên ARKit 6" từ WWDC năm nay.

Bây giờ, hãy xem qua một số hướng dẫn thực hành tốt nhất với Object Capture.

Điều đầu tiên trước tiên; chúng ta cần chọn một đối tượng có các đặc điểm phù hợp để Chụp đối tượng.

Một vật thể tốt có kết cấu thích hợp trên bề mặt của nó.

Nếu một số vùng của đối tượng không có kết cấu hoặc trong suốt, các chi tiết trong các vùng đó có thể không được tái tạo tốt.

Một vật thể tốt cũng không có ánh sáng chói và phản xạ.

Nếu vật thể không có bề mặt mờ, bạn có thể cố gắng giảm gương trên đó bằng cách sử dụng ánh sáng khuếch tán.

Nếu bạn muốn lật đối tượng để chụp đáy của nó, vui lòng đảm bảo rằng đối tượng của bạn vẫn cứng nhắc.

Nói cách khác, nó không nên thay đổi hình dạng khi lật.

Và cuối cùng, một vật thể tốt có thể chứa cấu trúc tốt ở một mức độ nào đó, nhưng bạn sẽ cần sử dụng máy ảnh có độ phân giải cao và chụp ảnh cận cảnh để khôi phục chi tiết tốt của vật thể.

Điều quan trọng tiếp theo là thiết lập một môi trường chụp lý tưởng.

Bạn sẽ muốn đảm bảo rằng môi trường chụp của bạn có ánh sáng tốt, đồng đều và khuếch tán.

Điều quan trọng là phải đảm bảo nền ổn định và có đủ không gian xung quanh vật thể.

Nếu phòng của bạn tối, bạn có thể sử dụng bàn xoay đủ ánh sáng.

Tiếp theo, chúng tôi sẽ xem xét một số hướng dẫn để chụp những bức ảnh đẹp về đối tượng của bạn, từ đó, sẽ đảm bảo rằng bạn có được một mô hình 3D chất lượng tốt từ Object Capture.

Ví dụ, tôi sẽ chỉ cho bạn cách đồng nghiệp Maunesh của tôi sử dụng iPhone của anh ấy để chụp ảnh một con tàu cướp biển tuyệt đẹp được tạo ra bởi kỹ sư ARKit yêu quý của chúng tôi, Christian Lipski.

Maunesh bắt đầu bằng cách đặt con tàu cướp biển vào giữa một chiếc bàn sạch sẽ.

Điều này làm cho con tàu rõ ràng nổi bật trong các bức ảnh.

Anh ấy cầm chiếc iPhone của mình đều đặn bằng hai tay.

Khi anh ấy đi vòng quanh con tàu từ từ, anh ấy chụp ảnh ở nhiều độ cao khác nhau.

Anh ấy đảm bảo rằng con tàu đủ lớn ở trung tâm trường nhìn của máy ảnh để anh ấy có thể chụp được số lượng chi tiết tối đa.

Anh ấy cũng đảm bảo rằng anh ấy luôn duy trì mức độ chồng chéo cao giữa hai bức ảnh liền kề bất kỳ.

Sau khi anh ấy chụp một số lượng lớn ảnh - khoảng 80 trong trường hợp này - anh ấy lật con tàu về phía nó, để anh ấy cũng có thể tái tạo lại đáy của nó.

Anh ấy tiếp tục chụp thêm khoảng 20 bức ảnh về con tàu theo hướng lật.

Một điều cần lưu ý là anh ấy đang cầm iPhone ở chế độ ngang.

Điều này là do anh ta đang chụp một vật thể dài, và trong trường hợp này, chế độ ngang giúp anh ta chụp được lượng chi tiết tối đa của vật thể.

Tuy nhiên, anh ta có thể cần sử dụng iPhone ở chế độ dọc nếu thay vào đó anh ta chụp một vật thể cao.

Thế là xong!

Bước cuối cùng trong quy trình là sao chép những bức ảnh đó vào máy Mac và xử lý chúng bằng API Object Capture.

Bạn có thể chọn từ bốn cấp độ chi tiết khác nhau, được tối ưu hóa cho các trường hợp sử dụng khác nhau.

Các mức chi tiết giảm và trung bình được tối ưu hóa để sử dụng trong trải nghiệm dựa trên web và di động, chẳng hạn như xem nội dung 3D trong AR QuickLook.

Các mô hình được xây dựng lại cho các cấp độ chi tiết đó có ít hình tam giác và kênh vật chất hơn, do đó tiêu tốn ít bộ nhớ hơn.

Các cấp độ chi tiết đầy đủ và thô được dành cho các trường hợp sử dụng tương tác cao cấp, chẳng hạn như trong các trò chơi máy tính hoặc quy trình làm việc hậu kỳ.

Những mô hình này chứa chi tiết hình học cao nhất và cung cấp cho bạn sự linh hoạt để lựa chọn giữa vật liệu nướng và chưa nướng, nhưng chúng đòi hỏi nhiều bộ nhớ hơn để tái tạo lại.

Điều quan trọng là chọn đúng mức đầu ra tùy thuộc vào trường hợp sử dụng của bạn.

Đối với tàu cướp biển của chúng tôi, chúng tôi đã chọn mức độ chi tiết trung bình, chỉ mất vài phút để xử lý nó trên máy Mac M1.

Mô hình 3D đầu ra trông tuyệt đẹp đến mức chúng tôi thực sự đã tập hợp một đoạn phim hoạt hình về con tàu cướp biển đang đi trên biển khơi.

Và đó là sức mạnh của Object Capture dành cho bạn!

Ahoy!

Bây giờ tôi sẽ giao nó cho Risa, người sẽ hướng dẫn bạn qua quy trình làm việc đầu cuối với Object Capture trong RealityKit.

Risa Yoneyama: Cảm ơn, Hao.

Bây giờ chúng ta đã xem qua API Object Capture, tôi rất vui khi xem qua quy trình làm việc của nhà phát triển từ đầu đến cuối, để đưa đối tượng thực tế của bạn vào AR bằng RealityKit.

Chúng ta sẽ đi qua từng bước một cách chi tiết với quy trình làm việc ví dụ, vì vậy hãy đi sâu vào bản demo.

Đồng nghiệp Zach của tôi là một thợ mộc không thường xuyên và gần đây đã chế tạo sáu quân cờ bằng gỗ quá khổ - một cho mỗi quân cờ độc đáo.

Nhìn vào những quân cờ này, tôi được truyền cảm hứng để tạo ra một trò chơi cờ vua AR tương tác.

Trước đây, bạn cần một người lập mô hình 3D và chuyên gia vật liệu để tạo ra các mô hình 3D chất lượng cao của các đối tượng trong thế giới thực.

Bây giờ, với Object Capture API, chúng ta có thể chỉ cần nắm bắt trực tiếp những quân cờ này và đưa chúng vào thực tế tăng cường.

Hãy bắt đầu bằng cách bắt quân xe.

Đồng nghiệp Bryan của tôi sẽ sử dụng thiết lập chuyên nghiệp này, ghi nhớ các phương pháp hay nhất mà chúng tôi đã đề cập trong phần trước.

Trong trường hợp này, Bryan đang đặt xe trên bàn xoay này với một số ánh sáng chuyên nghiệp để giúp tránh bóng tối khắc nghiệt trong đầu ra cuối cùng.

Bạn cũng có thể sử dụng máy ảnh iPhone với bàn xoay, cung cấp cho bạn ước tính tỷ lệ tự động và thông tin vectơ trọng lực trong USDZ đầu ra của bạn.

Vui lòng tham khảo phiên Chụp đối tượng từ năm 2021 để biết thêm chi tiết về điều này.

Tất nhiên, nếu bạn không có thiết lập phức tạp như Bryan ở đây, bạn cũng có thể chỉ cần cầm thiết bị iOS của mình và đi bộ xung quanh đối tượng của mình để chụp ảnh.

Bây giờ chúng ta đã có tất cả các bức ảnh của quân xe của chúng ta, tôi sẽ chuyển những bức ảnh này sang Mac.

Tôi sẽ xử lý những bức ảnh này bằng cách sử dụng PhotogrammetrySession API được giới thiệu vào năm 2021.

Theo hướng dẫn thực hành tốt nhất, tôi sẽ sử dụng mức độ chi tiết giảm để tái tạo lại, vì chúng tôi muốn đảm bảo ứng dụng AR của chúng tôi hoạt động tốt.

Đầu ra cuối cùng của API sẽ là mô hình loại tệp USDZ.

Đây là kết quả cuối cùng của chúng tôi về quân cờ rook mà tôi vừa xây dựng lại.

Để tiết kiệm thời gian cho chúng tôi, tôi đã đi trước và bắt được năm mảnh còn lại trước thời hạn.

Bạn có thể tự hỏi làm thế nào chúng tôi sẽ tạo ra một trò chơi cờ vua chỉ với một bảng màu cho các quân cờ.

Hãy sao chép sáu phần độc đáo của chúng ta và kéo chúng vào Reality Converter.

Tôi đã đảo ngược màu sắc trong kết cấu ban đầu và thay thế bộ trùng lặp bằng kết cấu đảo ngược mới này.

Bằng cách này, chúng ta có thể có một phiên bản sáng hơn và một phiên bản tối hơn của quân cờ, một cho mỗi người chơi.

Tôi sẽ xuất các mô hình với tùy chọn kết cấu nén được bật trong menu Xuất.

Điều này sẽ giúp giảm dấu chân bộ nhớ của các kết cấu.

Bây giờ chúng tôi đã có bộ quân cờ đầy đủ, chúng tôi đã sẵn sàng đưa các mô hình vào dự án Xcode của mình.

Tôi đã tạo ra một bàn cờ bằng cách sử dụng RealityKit bằng cách thu nhỏ các hình khối nguyên thủy trên trục y và xen kẽ các màu giữa đen và trắng.

Đây là tất cả các quân cờ mà tôi đã xây dựng lại, đặt trên bàn cờ.

Điều này thật thú vị khi thấy các đối tượng ngoài đời thực của chúng tôi trong ứng dụng của chúng tôi, nhưng hãy bắt đầu thêm một số tính năng để biến nó thành một trò chơi tương tác thực tế.

Trong suốt phần này của bản demo, tôi muốn giới thiệu một số công nghệ hiện có khác nhau, vì vậy chúng tôi có thể cung cấp các ví dụ về cách bạn có thể muốn kết hợp các công nghệ để đạt được đầu ra mong muốn của mình.

Vì chúng ta sẽ xem xét một số trường hợp sử dụng thực tế của các chủ đề nâng cao trong RealityKit, tôi khuyên bạn nên xem các phiên RealityKit từ năm 2021 nếu bạn chưa quen thuộc với API.

Tôi muốn bắt đầu bằng cách thêm hoạt ảnh khởi động khi chúng tôi khởi chạy ứng dụng lần đầu tiên.

Tôi đang tưởng tượng một hình ảnh động trong đó các ô cờ từ từ rơi vào vị trí từ vị trí cuối cùng của nó một chút, tất cả trong khi các quân cờ cũng dịch cùng nhau.

Để tái tạo hiệu ứng này trong mã, tất cả những gì cần làm là hai bước.

Bước đầu tiên là dịch cả hai thực thể của chúng tôi lên dọc theo trục y, đồng thời giảm quy mô đồng đều quân cờ.

Bước thứ hai và bước cuối cùng là tạo hiệu ứng động cho cả hai thực thể trở lại sự biến đổi ban đầu của nó.

Mã cho việc này khá đơn giản.

Tôi sẽ bắt đầu bằng cách lặp lại thông qua các thực thể gạch kiểm tra.

Đối với mỗi thực thể, tôi sẽ lưu biến đổi hiện tại của ô kiểm tra vì đây sẽ là vị trí cuối cùng mà nó chạm vào.

Sau đó, tôi sẽ di chuyển mỗi hình vuông lên 10 cm trên trục y.

Bây giờ chúng ta có thể tận dụng chức năng di chuyển để tạo hiệu ứng động này trở lại biến đổi ban đầu của chúng ta.

Tôi cũng tình cờ biết rằng USDZ biên giới này phác thảo bàn cờ có hình ảnh động tích hợp sẵn.

Chúng ta có thể sử dụng playAnimation API để bắt đầu hoạt ảnh đồng thời.

Tôi đã thêm hình ảnh động giống hệt nhau vào các quân cờ nhưng cũng sửa đổi tỷ lệ khi chúng dịch.

Và ở đây chúng ta có nó: một hình ảnh động khởi động đơn giản chỉ với một vài dòng mã.

Tuy nhiên, chúng tôi sẽ không thực sự có thể chơi cờ nếu không có khả năng di chuyển các quân cờ.

Hãy làm việc đó tiếp theo.

Trước khi chúng ta có thể bắt đầu di chuyển các quân cờ, chúng ta sẽ cần có khả năng chọn một quân cờ.

Tôi đã thêm UITapGestureRecognizer vào ARView của mình.

Khi người dùng chạm vào một vị trí cụ thể, chúng tôi sẽ xác định một tia bắt đầu từ nguồn gốc máy ảnh và đi qua điểm 2D đó.

Sau đó, chúng ta có thể thực hiện một raycast với tia đó vào cảnh 3D để xem liệu chúng ta có tấn công bất kỳ thực thể nào không.

Tôi đã chỉ định nhóm va chạm quân cờ của mình làm mặt nạ vì tôi biết tôi chỉ muốn có thể chọn các quân cờ trong cảnh của mình.

Hãy lưu ý rằng hàm raycast sẽ bỏ qua tất cả các thực thể không có CollisionComponent.

Nếu chúng ta tìm thấy một quân cờ, cuối cùng chúng ta có thể chọn nó.

Bây giờ chúng ta đã biết tác phẩm nào được chọn, tôi muốn thêm một hiệu ứng sẽ làm cho tác phẩm trông giống như nó đang phát sáng.

Chúng ta có thể tận dụng các vật liệu tùy chỉnh để đạt được điều này; cụ thể hơn, các bộ đổ bóng bề mặt.

Bộ đổ bóng bề mặt cho phép bạn tính toán hoặc chỉ định các thông số vật liệu thông qua Kim loại, sau đó được gọi bởi bộ đổ bóng phân đoạn của RealityKit một lần cho mỗi điểm ảnh.

Chúng ta có thể viết một bộ đổ bóng bề mặt trông giống như hiệu ứng lửa này trong Metal.

Sau đó áp dụng một vật liệu tùy chỉnh, với bộ đổ bóng bề mặt này vào lăng kính hình chữ nhật của chúng tôi để bộ đổ bóng ảnh hưởng đến diện mạo của thực thể chúng tôi.

Hãy viết một số mã để đạt được hiệu quả mong muốn của chúng ta.

Tôi đã thêm kết cấu tiếng ồn vào dự án để sử dụng trong bộ đổ bóng bề mặt này.

Chúng tôi sẽ lấy mẫu kết cấu hai lần, một lần cho hình dạng tổng thể của hiệu ứng và một lần khác cho chi tiết.

Sau đó, chúng tôi lấy giá trị RGB và ánh xạ lại nó để trông giống như cách chúng tôi muốn.

Sau đó, với giá trị được xử lý mà chúng tôi vừa trích xuất, chúng tôi sẽ tính toán độ mờ của điểm mẫu bằng cách so sánh vị trí y của nó với giá trị hình ảnh.

Để tạo hiệu ứng một số chuyển động, chúng ta sẽ di chuyển qua trục y của kết cấu như một hàm của thời gian.

Ngoài ra, chúng tôi cũng sẽ sử dụng góc đối diện của mỗi điểm mẫu kết hợp với hướng xem của máy ảnh để làm mờ hiệu ứng ở hai bên.

Điều này sẽ làm mềm các cạnh và che giấu bản chất thông thường của mô hình cơ bản.

Cuối cùng, chúng tôi sẽ thiết lập màu sắc và độ mờ mà chúng tôi vừa tính toán bằng cách sử dụng các hàm tham số bề mặt.

Và đây là các quân cờ với bộ đổ bóng lựa chọn được áp dụng cho nó.

Chúng thực sự trông giống như chúng đang phát sáng từ bên trong.

Bây giờ, nếu chúng ta kết hợp điều đó với ba hình ảnh động dịch riêng biệt, điều đó sẽ dẫn đến một cái gì đó trông như thế này.

Với chức năng di chuyển quân cờ được triển khai, chúng tôi cũng sẽ có thể bắt quân cờ của đối phương.

Cũng giống như các bộ đổ bóng bề mặt, các công cụ sửa đổi hình học có thể được thực hiện bằng cách sử dụng các vật liệu tùy chỉnh.

Chúng là một công cụ rất mạnh, vì bạn có thể thay đổi dữ liệu đỉnh như vị trí, chuẩn, tọa độ kết cấu và hơn thế nữa.

Mỗi hàm Metal này sẽ được gọi một lần trên mỗi đỉnh bởi bộ đổ bóng đỉnh của RealityKit.

Những sửa đổi này hoàn toàn thoáng qua và không ảnh hưởng đến thông tin đỉnh của thực thể thực tế.

Tôi đang nghĩ rằng chúng ta có thể thêm một công cụ sửa đổi hình học thú vị để đè bẹp các mảnh khi chúng được chụp.

Tôi có thuộc tính này trên quân cờ của mình được gọi là capturedProgress để thể hiện tiến trình chụp hoạt hình từ 0 đến 1.

Vì chụp là một hành động do người dùng khởi xướng, bằng cách nào đó chúng ta cần cho công cụ sửa đổi hình học biết khi nào nên bắt đầu hoạt ảnh của nó.

Điều tốt là bạn có thể làm điều này bằng cách đặt thuộc tính tùy chỉnh trên customMaterial.

Điều này cho phép chia sẻ dữ liệu giữa CPU và GPU.

Chúng tôi sẽ đặc biệt sử dụng thuộc tính giá trị tùy chỉnh ở đây và chuyển tiến trình hoạt ảnh sang công cụ sửa đổi hình học.

Để trích xuất tiến trình hoạt hình từ phía Kim loại, chúng ta có thể sử dụng tham số tùy chỉnh trên đồng phục.

Vì tôi muốn chia tỷ lệ đối tượng theo chiều dọc, như thể nó đang bị đè bẹp bởi một mảnh khác, chúng tôi sẽ đặt trục tỷ lệ làm hướng y.

Để thêm một số phức tạp cho hoạt ảnh, chúng tôi cũng sẽ thay đổi hình học trong trục x để tạo hiệu ứng sóng.

Độ lệch của đỉnh có thể được thiết lập bằng cách sử dụng hàm offset set_model_position_.

Đây là sản phẩm cuối cùng của công cụ sửa đổi hình học của chúng tôi.

Bạn có thể thấy rằng nó mở rộng lên một chút trước khi sụp đổ, trong khi được kéo dài theo chiều dọc theo trục x.

Bản thân là một người mới chơi cờ vua, tôi nghĩ có thể hữu ích khi thêm một tính năng để chỉ ra nơi quân cờ đã chọn của bạn có thể di chuyển để giúp tôi học trò chơi.

Vì các phần kiểm tra là mỗi thực thể riêng lẻ có Thành phần Mô hình riêng của chúng, tôi có thể áp dụng hiệu ứng xung bằng cách sử dụng bộ đổ bóng bề mặt cho các di chuyển tiềm năng để phân biệt chúng với các di chuyển khác.

Tiếp theo, tôi sẽ thêm một hiệu ứng xử lý hậu kỳ được gọi là "bloom" để làm nổi bật hiệu ứng hơn nữa.

Một lần nữa, chúng tôi đang sử dụng tham số tùy chỉnh ở đây mà chúng tôi đã sử dụng trong bộ đổ bóng bề mặt cho hiệu ứng phát sáng.

Trong trường hợp này, chúng tôi đang chuyển Boolean từ phía CPU sang bộ đổ bóng bề mặt Kim loại của chúng tôi.

Nếu trình kiểm tra này là một động thái có thể xảy ra, tôi muốn thêm hiệu ứng xung bằng cách thay đổi màu sắc.

Chúng tôi sẽ đặc biệt thêm xung vào màu phát xạ ở đây.

Cuối cùng, tôi sẽ thêm hiệu ứng nở hoa vào toàn bộ chế độ xem.

Bloom là một hiệu ứng hậu xử lý tạo ra lông vũ ánh sáng từ biên giới của các khu vực sáng.

Chúng ta có thể hoàn thành hiệu ứng này bằng cách tận dụng thuộc tính render callbacks trên ARView.

Chúng tôi sẽ viết hiệu ứng nở hoa bằng cách sử dụng các chức năng đổ bóng hiệu suất Kim loại đã được tích hợp sẵn.

Tiếp theo, chúng tôi sẽ chỉ cần đặt đóng renderCallbacks.postProcess làm chức năng nở hoa mà chúng tôi vừa xác định.

Khi chúng tôi xung cờ đam của mình, chúng tôi đang chuyển sang màu trắng mà bây giờ sẽ được nhấn mạnh hơn nữa với hiệu ứng nở hoa.

Với bộ đổ bóng bề mặt và hiệu ứng nở hoa cùng nhau, chúng ta có thể thấy chính xác nơi chúng ta có thể di chuyển các mảnh của mình đến.

Cuối cùng, hãy kết hợp mọi thứ chúng ta có với nhau để xem các quân cờ ngoài đời thực của chúng ta trở nên sống động trong ứng dụng AR của chúng ta.

Chúng ta có thể thấy tất cả các tính năng mà chúng ta đã thêm trông như thế nào trong môi trường của chúng ta.

Để thuận tiện cho bạn, chúng tôi đã liên kết dự án mẫu Capture Chess với các tài nguyên phiên.

Vui lòng tải xuống và tự mình dùng thử để xem nó trong môi trường của bạn.

Và nó đơn giản như vậy.

Từ việc chụp đến tái tạo các quân cờ quá khổ, sau đó vào ứng dụng thực tế tăng cường của chúng tôi.

Chúng tôi đã đề cập rất nhiều trong phiên này hôm nay vì vậy hãy tóm tắt một số điểm chính.

Đầu tiên chúng tôi bắt đầu bằng cách tóm tắt lại API Object Capture mà chúng tôi đã công bố vào năm 2021.

Sau đó, chúng tôi đã xem qua một API mới trong ARKit cho phép chụp ảnh theo yêu cầu ở độ phân giải máy ảnh gốc trong quá trình ARSession đang hoạt động.

Để giúp bạn tận dụng tối đa công nghệ Chụp đối tượng, chúng tôi đã liệt kê các loại đối tượng phù hợp để tái tạo, môi trường lý tưởng để có được hình ảnh chất lượng cao và quy trình được đề xuất để theo dõi trong khi chụp đối tượng của bạn.

Đối với phần sau của phiên này, chúng tôi đã xem qua một ví dụ về quy trình làm việc của nhà phát triển từ đầu đến cuối.

Chúng tôi đã chụp ảnh các quân cờ quá khổ và sử dụng hình ảnh làm đầu vào cho PhotogrammetrySession API để tạo ra các mô hình 3D của chúng.

Sau đó, chúng tôi đã nhập các mô hình vào Reality Converter để thay thế một số kết cấu.

Và cuối cùng, chúng tôi từ từ xây dựng trò chơi cờ vua của mình để xem các quân cờ của chúng tôi hoạt động trong AR.

Và đó là nó cho phiên của chúng ta hôm nay.

Cảm ơn bạn rất nhiều vì đã xem.

Ahoy!

♪