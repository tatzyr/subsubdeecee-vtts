10069

David Duncan: Xin chào, tôi là David Duncan, và trong video này, tôi sẽ giới thiệu cho bạn iPad dành cho máy tính để bàn.

iOS 16 mang lại những tiến bộ cho các công cụ được sử dụng để thiết kế và xây dựng các ứng dụng tuyệt vời, các ứng dụng mang lại nhiều công cụ ngày càng tốt hơn lên hàng đầu và tận dụng tất cả phần cứng, cả được tích hợp sẵn và gắn vào.

UIKit bổ sung nhiều công cụ để giúp bạn đạt được những mục tiêu này cho các ứng dụng của mình.

Các bản cập nhật cho UINavigationBar cho phép bạn tận dụng tốt hơn bất động sản màn hình và xây dựng trải nghiệm tuyệt vời trên tất cả các nền tảng của Apple.

Giao diện người dùng Tìm và Thay thế mới chỉ trong tích tắc để bật chế độ xem tích hợp và dễ dàng thêm vào chế độ xem tùy chỉnh.

Trình đơn Chỉnh sửa đã được đại tu, với một API dựa trên tương tác mới tích hợp với hệ thống trình đơn.

Và các cải tiến chế độ xem bộ sưu tập giúp việc xây dựng giao diện cho phép người dùng của bạn chọn và hành động dựa trên nội dung của họ trở nên dễ dàng hơn bao giờ hết.

Để biết thêm thông tin về Tìm và Thay thế và Chỉnh sửa Menu, hãy xem "Áp dụng các tương tác chỉnh sửa lớp máy tính để bàn."

Và để xem tất cả các tính năng này hoạt động cùng nhau như thế nào, hãy xem "Xây dựng ứng dụng iPad cấp máy tính để bàn".

Trong video này, tôi sẽ thảo luận về những thay đổi đối với điều hướng ảnh hưởng đến cách bạn thiết kế ứng dụng của mình cho iOS 16.

Đầu tiên là các tính năng mới giúp dễ dàng xây dựng các giao diện dễ khám phá hơn.

Sau đó, các tính năng đặc biệt mạnh mẽ cho các ứng dụng dựa trên tài liệu.

Và, cuối cùng, cập nhật Tìm kiếm để giúp tăng tốc và đánh bóng trải nghiệm.

UINavigationBar được sử dụng cho nhiều mục đích khác nhau trên iOS và iOS 16 thừa nhận điều đó bằng cách cung cấp giao diện người dùng được tối ưu hóa mới cho nhiều trường hợp này.

UINavigationItem thêm một thuộc tính kiểu, được sử dụng để chọn từ các kiểu sau: trình điều hướng, trình duyệt và trình chỉnh sửa.

Tôi sẽ đi sâu vào từng phong cách này ngay bây giờ.

Kiểu mặc định, trình điều hướng, hoạt động chính xác như một UINavigationBar truyền thống.

Tiêu đề được căn giữa, có các mục nút thanh đầu và cuối, và nút quay lại xuất hiện khi có nhiều hơn 1 mục trên ngăn xếp.

Phong cách trình duyệt sắp xếp lại nội dung để được tối ưu hóa tốt hơn cho các giao diện mà lịch sử quan trọng như vị trí, như trong Tệp hoặc Safari.

Tiêu đề được chuyển đến vị trí dẫn đầu trong kiểu dáng này.

Kiểu trình chỉnh sửa được tối ưu hóa khi chức năng chính là chỉnh sửa tài liệu.

Cũng giống như phong cách trình duyệt, tiêu đề được căn chỉnh hàng đầu.

Giao diện người dùng của trình chỉnh sửa thường là một điểm đến, chẳng hạn như sau khi chọn tài liệu có bộ chọn tài liệu và do đó hiển thị nút quay lại để dễ dàng truy cập vào giao diện người dùng đó.

Các kiểu trình duyệt và trình chỉnh sửa đều giải phóng rất nhiều không gian ở trung tâm của thanh.

iOS 16 tận dụng không gian được giải phóng này bằng cách cho phép bạn đặt các điều khiển bổ sung trong khu vực này.

Các mục trung tâm là một phần của bộ thay đổi để tận dụng tốt hơn bất động sản màn hình và bao gồm hỗ trợ cho UIBarButtonItemGroup, hỗ trợ tùy chỉnh và tràn.

Hỗ trợ tràn có sẵn ở tất cả các chế độ và cho phép kiểu điều hướng cũng hỗ trợ gián tiếp các mục trung tâm.

Các điều khiển riêng lẻ tiếp tục được chỉ định là UIBarButtonItems, nhưng bây giờ được tổ chức dưới dạng UIBarButtonItemGroups.

Điều này cho phép trình bày dày đặc hơn khi không gian ở mức cao.

Trong ví dụ này, có 5 mục trong thanh, bao gồm 4 nhóm.

Nhóm đầu tiên chứa một mục nút thanh duy nhất, vì vậy ví dụ này sử dụng phương thức tiện lợi của UIBarButtonItem, creatingFixedGroup(), để tạo nó.

Nếu bạn cần một nhóm cố định với nhiều hơn 1 mục, bạn có thể sử dụng phương thức UIBarButtonItemGroup thay thế.

Các nhóm cố định luôn xuất hiện đầu tiên trong thanh và không thể xóa hoặc di chuyển bằng cách tùy chỉnh.

Nhóm vẽ chứa một mục duy nhất, vì vậy nó cũng sử dụng API tiện lợi, creatingMovableGroup (customizationIdentifier).

Giống như các nhóm cố định, các nhóm di động không thể bị xóa, nhưng có thể được di chuyển.

Bởi vì điều này, họ yêu cầu một Mã định danh tùy chỉnh để vị trí của họ có thể được theo dõi và lưu lại.

Nếu bạn cần một nhóm có nhiều hơn một mục, bạn có thể sử dụng phương thức UIBarButtonItemGroup thay thế.

Nhóm hình dạng chứa nhiều mục, và do đó sử dụng UIBarButtonItemGroup API để tạo nhóm.

Nhóm này nên có thể di chuyển trong thanh, cũng như có thể tháo rời, và do đó được tạo như một nhóm tùy chọn.

Nhóm này cũng chỉ định một mục đại diện, cho phép UIKit thu gọn nhóm để tiết kiệm dung lượng khi cần thiết.

Mục đại diện không chỉ định một hành động, tiếp tục cho phép UIKit tổng hợp một menu cho phép lựa chọn các mục trong nhóm.

Khi giao diện người dùng tùy chỉnh được gọi, UIKit sẽ tự động áp dụng các quy tắc bạn đã chỉ định dựa trên cách bạn tạo nhóm của mình.

Trong khi các nhóm cố định và có thể di chuyển phải ở trong thanh, các nhóm tùy chọn có thể được thêm hoặc xóa ở bất kỳ số nào.

UIKit sẽ cố gắng thu gọn các nhóm để giữ càng nhiều chức năng càng tốt trong thanh, nhưng nếu không gian trống, các mục bổ sung sẽ được chuyển sang tràn.

Trình đơn tràn chứa bất kỳ mục nào là một phần của tùy chỉnh nhưng không thể vừa với thanh, cũng như tùy chọn tùy chỉnh thanh.

Mặc dù UIKit sẽ tổng hợp các phần tử menu mặc định cho mỗi mục nút thanh, bạn có tùy chọn tùy chỉnh menuRepresentation nếu muốn.

Cuối cùng, ví dụ này cho phép tùy chỉnh và thêm centerItemGroups.

Bạn kích hoạt tùy chỉnh bằng cách cài đặt UINavigationItem.customizationIdentifier.

Mã định danh tùy chỉnh xác định một tùy chỉnh duy nhất của thanh, vì vậy hãy chọn một chuỗi không xung đột với các tùy chỉnh khác trong ứng dụng của bạn.

UIKit tự động lưu và khôi phục các tùy chỉnh dựa trên mã định danh này.

Tiếp theo, tự cung cấp centerItemGroups.

Bốn nhóm đầu tiên tôi đã đề cập đến.

Nhóm định dạng là một nhóm tùy chọn không nằm trong tùy chỉnh mặc định và vì vậy mã này ghi đè lên giá trị mặc định của tham số isInDefaultCustomization để loại trừ nó.

Bạn vẫn có thể sử dụng centerItemGroups mà không cần cài đặt UINavigationItem.customizationIdentifier, nhưng tùy chỉnh sẽ không khả dụng.

Trong Mac Catalyst, UINavigationBar tự động dịch nội dung của nó sang NSToolbar.

Các nhóm mục đầu, trung tâm và cuối được thêm vào theo thứ tự và các thuộc tính tùy chỉnh của các nhóm mục trung tâm được tôn trọng khi sử dụng tùy chỉnh NSToolbar.

Tất cả các hành vi NSToolbar dự kiến đều có sẵn, cũng như các thuộc tính khác như proxy tiêu đề & cửa sổ.

Tất cả điều này xảy ra theo mặc định khi bạn tối ưu hóa cho Mac.

Tiếp theo, hãy tập trung vào các tương tác mạnh mẽ, đặc biệt là khi xử lý tài liệu.

UINavigationBar hiện hỗ trợ thêm menu vào chế độ xem tiêu đề, tạo vị trí trung tâm để thêm các hành động hoạt động trên toàn bộ nội dung.

Ngoài ra, bạn có thể thêm hỗ trợ cho bảng chia sẻ và kéo và thả từ menu này.

Đầu tiên, tôi sẽ tự tập trung vào các món trong thực đơn.

Sau khi được bật, menu tiêu đề mặc định cung cấp 5 lệnh: sao chép, di chuyển, đổi tên, xuất và in.

Những mục này được lọc dựa trên các phương pháp cụ thể trong chuỗi phản hồi của bạn.

UINavigationBar có hỗ trợ cụ thể cho việc đổi tên, và vì vậy nó cũng sẽ được bao gồm nếu bạn đã triển khai renameDelegate.

Để kích hoạt menu tiêu đề, hãy đặt titleMenuProvider, một đóng trả về menu cuối cùng sẽ được hiển thị.

Việc đóng cửa được thông qua một loạt các yếu tố được đề xuất.

Bạn có thể sử dụng những thứ này nguyên trạng, lọc chúng hoặc thêm của riêng bạn.

Trong ví dụ của chúng tôi, chúng tôi đang thêm một hành động bổ sung duy nhất vào menu.

Cuối cùng, bạn trả lại UIMenu đã soạn.

Trình đơn tiêu đề cũng cho phép chia sẻ thông qua bộ điều khiển chế độ xem hoạt động và hỗ trợ kéo và thả.

Để kích hoạt các tính năng này, bạn cung cấp một phiên bản UIDocumentProperties mô tả tài liệu của bạn.

UIDocumentProperties đại diện cho siêu dữ liệu về tài liệu của bạn, bao gồm cả bản xem trước.

Ví dụ này tạo một cái có URL, cho phép UIKit tự động tìm nạp siêu dữ liệu cần thiết.

Để kích hoạt các tính năng bổ sung, ví dụ này tạo ra một NSItemProvider để đại diện cho tài liệu.

Đặt một dragItemsProvider để cho phép kéo và thả.

Việc đóng cửa này đã qua một UIDragSession và trả về một mảng các UIDragItems.

Ví dụ này trả về một mục duy nhất đại diện cho tài liệu.

Cài đặt một hoạt động ViewControllerProvider cho phép chia sẻ.

Việc đóng này cấu hình và trả về một UIActivityViewController.

Cuối cùng, gán đối tượng đã điền cho UINavigationItem.documentProperties và khi tiêu đề được nhấn, UIKit sẽ hiển bày tiêu đề cùng với các mục menu tiêu đề khác.

Trên Mac Catalyst, các mục được đề xuất sẽ được chuyển đến titleMenuProvider đã tồn tại trong menu Tệp.

Bất kỳ mục nào mà bạn đã thêm vào menu tiêu đề sẽ cần được cung cấp bằng các phương tiện khác.

Bạn có thể sử dụng UIMenuBuilder API để thêm các mục này hoặc lọc các mục hiện có khi cần thiết.

Nếu bạn chỉ định thuộc tính tài liệu, UIKit sẽ tự động sử dụng URL được cung cấp để quản lý biểu tượng proxy macOS.

Nếu bạn đặt URL đại diện cho windowScene của mình theo cách thủ công, điều đó sẽ thay thế việc quản lý của UIKit.

UIKit cung cấp hai cơ chế để bật Đổi tên.

Đổi tên nội tuyến được cung cấp bằng cách cài đặt UINavigationItem.renameDelegate và cung cấp giao diện người dùng chuyên dụng để chỉnh sửa tiêu đề trên tất cả các nền tảng.

Khi hoàn thành, tên kết quả được chuyển cho đại biểu.

Ngoài ra, bạn có thể kiểm soát hoàn toàn trải nghiệm đổi tên bằng cách triển khai UIResponder.rename(_:) và cung cấp bất kỳ giao diện người dùng nào bạn thích.

Trên iOS, UINavigationBar cung cấp giao diện người dùng đổi tên trực tiếp trong chế độ xem tiêu đề.

Trên macOS, giao diện người dùng đổi tên được cung cấp bởi tiêu đề của cửa sổ khi thanh điều hướng được lưu trữ trong NSToolbar.

Để thực hiện đổi tên nội tuyến, hãy tuân thủ giao thức UINavigationItemRenameDelegate và đặt renameDelegate của mục điều hướng.

Chỉ có một phương pháp bắt buộc, navigationItem(_:didEndRenamingWith:), được sử dụng để nhận tiêu đề được người dùng chấp nhận.

Đối với các ứng dụng dựa trên tệp, UIDocumentBrowserViewController hiện cung cấp API được đổi tên.

Tìm kiếm là số lượng người dùng tìm thấy dữ liệu quan trọng nhất của họ và những tiến bộ trong iOS 16 giúp cung cấp trải nghiệm tìm kiếm tuyệt vời dễ dàng hơn.

Điều đầu tiên cần lưu ý là tìm kiếm hiện chiếm ít dung lượng hơn bằng cách xếp hàng trong thanh điều hướng trên iPadOS và thanh công cụ trên macOS.

Trên iPadOS, bạn có thể khôi phục hành vi cũ với UINavigationItem .preferredSearchBarPlacement.

Ngoài ra, thanh tìm kiếm có thể thu gọn thành một nút để cấp thêm không gian cho các điều khiển khác.

Khi tìm kiếm được kích hoạt, các đề xuất tìm kiếm xuất hiện và chúng có thể được cập nhật cùng với truy vấn tìm kiếm cập nhật, cho phép bạn có cơ hội hỗ trợ người dùng của mình trong tìm kiếm của họ.

Tiếp theo, tôi sẽ mô tả mã cần thiết để thiết lập các đề xuất tìm kiếm.

Để quản lý các đề xuất tìm kiếm, hãy tuân thủ UISearchResultsUpdating và đặt searchResultsUpdater của searchController.

Điều này cho phép bạn cập nhật các đề xuất khi truy vấn thay đổi và hành động theo một đề xuất tìm kiếm đã chọn.

Khi truy vấn thay đổi, updateSearchResults(for:) được gọi, cho phép bạn cập nhật các đề xuất tìm kiếm.

Những đề xuất nào để cung cấp là tùy thuộc vào bạn.

Đặt một mảng trống sẽ xóa giao diện người dùng đề xuất.

UIKit cung cấp UISearchSuggestionItem để chỉ định nội dung gợi ý.

Để phản hồi việc lựa chọn một đề xuất, hãy triển khai updateSearchResults(for:selecting:).

Phương pháp này vượt qua đề xuất tìm kiếm đã chọn, vì vậy bạn có thể phản ứng với nó một cách thích hợp.

Trong ví dụ này, tôi cập nhật tìm kiếm bằng cách thay thế truy vấn hiện tại bằng truy vấn được chỉ định bởi đề xuất tìm kiếm.

UISearchTextField cũng có searchSuggestions, vì vậy nếu bạn muốn tự mình sử dụng lớp đó, bạn vẫn có thể triển khai các đề xuất tìm kiếm.

Nhưng nếu bạn đang sử dụng UISearchController, bạn nên sử dụng thuộc tính của nó thay thế.

Trong iOS 16, UIKit cung cấp API mới để giúp bạn mang lại năng suất cao hơn cho người dùng của mình.

Mang lại nhiều khả năng khám phá hơn cho các tính năng nâng cao của bạn với các mục trung tâm và menu tiêu đề.

Cải thiện hỗ trợ tài liệu của bạn bằng cách cung cấp kéo & thả và chia sẻ trực tiếp từ thanh điều hướng.

Giúp tìm kiếm dễ dàng và nhanh chóng hơn bằng cách cung cấp các đề xuất tìm kiếm và có được trải nghiệm Mac tuyệt vời ngay lập tức, mà gần như không cần nỗ lực.

Cảm ơn vì đã xem video này.

Tôi nóng lòng muốn xem cách bạn nâng cao ứng dụng của mình để trở thành lớp học máy tính để bàn!

.