10028

♪ nhạc cụ hip hop ♪

Xin chào, tôi là Neil Foley, một kỹ sư trong nhóm ShazamKit.

Vào năm 2021, chúng tôi đã giới thiệu ShazamKit, cho phép bạn kết hợp âm thanh với danh mục nhạc được ghi lại rộng lớn của Shazam.

Chúng tôi cũng đã giới thiệu kết hợp danh mục tùy chỉnh, mang đến cho các nhà phát triển khả năng kết hợp âm thanh của riêng họ và cung cấp trải nghiệm đồng bộ hóa.

Bây giờ chúng tôi có một số cập nhật quan trọng giúp hợp lý hóa việc làm việc với các danh mục tùy chỉnh trên quy mô lớn.

Trong phiên này, tôi sẽ sử dụng một số khái niệm ShazamKit hiện có như chữ ký, danh mục và các mục phương tiện.

Nếu bạn chưa quen thuộc với những thứ đó, hãy xem các cuộc nói chuyện "Khám phá ShazamKit" và "Tạo trải nghiệm âm thanh tùy chỉnh với ShazamKit" từ WWDC21.

Nhưng tổng quan nhanh, ShazamKit cho phép bạn chuyển đổi âm thanh sang một định dạng đặc biệt có thể phù hợp.

Chúng tôi gọi những chữ ký này.

Chữ ký có thể được kết hợp với các mục phương tiện chứa siêu dữ liệu để tạo thành chữ ký tham chiếu.

Và chữ ký tham chiếu có thể được lưu trữ cùng nhau trong một tệp mà chúng tôi gọi là danh mục tùy chỉnh.

Bây giờ tất cả chúng ta đã bắt kịp, tôi sẽ đưa bạn qua việc xây dựng các danh mục tùy chỉnh trên quy mô lớn, và sau đó tôi sẽ nói về một số mẹo và thủ thuật để tạo ra các danh mục tuyệt vời.

Trong quy trình làm việc danh mục tùy chỉnh ngày nay, nếu bạn có một lượng nhỏ nội dung bạn muốn được kết hợp, làm việc với các danh mục tùy chỉnh có thể là một nhiệm vụ đơn giản.

Bạn chỉ cần làm theo các bước sau.

Ghi lại âm thanh của bạn ở định dạng mà ShazamKit chấp nhận.

Sử dụng trình tạo chữ ký để biến nó thành chữ ký.

Chú thích nó với siêu dữ liệu của bạn, và sau đó lưu trữ nó trong một danh mục tùy chỉnh.

Và thế là xong, bạn có thể cung cấp trải nghiệm Shazam.

Nhưng một số bước đó có thể gây khó khăn, đặc biệt nếu bạn không quen thuộc với lập trình âm thanh.

Xử lý tỷ lệ mẫu và bộ đệm có thể khó khăn ngay cả đối với nhà phát triển có kinh nghiệm nhất.

Và điều gì sẽ xảy ra khi bạn có một lượng lớn nội dung mà bạn muốn làm Shazamable, như 10 mùa của một chương trình truyền hình?

Quy trình làm việc này có thể trở nên đau đớn.

Và nếu bạn có một lượng lớn nội dung, nó có thể nhanh chóng trở nên không thể quản lý được.

Nếu bạn đang nghĩ đến việc cải thiện quy trình làm việc này cho chính mình, có lẽ bạn sẽ cần viết mã để chuyển đổi âm thanh thành chữ ký, nhiều mã hơn để tải và liên kết các mục phương tiện và mỗi lần bạn thay đổi nội dung của mình, bạn sẽ phải lặp lại công việc.

Đây là một khoản đầu tư lớn khi bạn chỉ muốn kết hợp một số âm thanh.

Và sau đó nếu bạn muốn đồng bộ hóa nội dung với ShazamKit, bạn cần logic phức tạp để tìm ra những gì nên được hiển thị và khi nào.

Tôi sẽ giới thiệu một số cải tiến tuyệt vời cho ShazamKit để hợp lý hóa quy trình làm việc này.

Nhưng trước tiên là một bản demo nhanh.

Ở đây tôi có ứng dụng FoodMath mà Alex đã trình diễn vào năm 2021 đồng bộ hóa một bài kiểm tra toán học với một bài học trên màn hình.

Tôi đã cập nhật nó với các tính năng ShazamKit mới nhất và tôi sẽ phát lại video FoodMath để xem nó đồng bộ hóa như thế nào.

Bỏ qua 26 giây.

2, 3 quả táo xanh.

Tôi có tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu...bây giờ.

Được rồi, hết giờ rồi. Hãy xem bạn đã làm như thế nào.

Bỏ qua 56 giây.

Hôm nay, để thêm gia vị một chút, khi tôi đến cửa hàng, bắt đầu với 2 quả táo đỏ...

Và tôi đã mua 2 quả táo xanh.

Lần này tôi có tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu...bây giờ.

Được rồi, hết giờ rồi.

Có vẻ như đang hoạt động tốt.

Có nội dung phong phú được đồng bộ hóa với video và khi tôi nói "bây giờ", menu xuất hiện chính xác vào đúng thời điểm.

Ngoài ra, khi nội dung không còn phù hợp nữa, nó sẽ biến mất ngay trên gợi ý.

Nhưng nó hoạt động như thế nào?

Hãy cùng xem mã.

Chỉ có một vòng lặp đơn giản.

Nó sử dụng AsyncSequence trên phiên thay vì các lệnh gọi lại đại diện mà chúng tôi đã sử dụng trước đây.

Trình tự trả về một liệt kê đại diện cho trận đấu, không có trận đấu hoặc lỗi.

Tôi chỉ quan tâm đến các trận đấu, vì vậy tôi đã giới hạn vòng lặp chỉ trong trường hợp đó.

Và để xây dựng kết quả hiển thị, tôi giảm các mục phương tiện xuống nội dung mà tôi cần.

Thực sự không có nhiều thứ để xem trong ứng dụng, chỉ có chế độ xem SwiftUI được thúc đẩy bởi kết quả trận đấu mà chúng tôi tạo ra.

Không có logic hoặc mã thời gian phức tạp và nó đồng bộ hóa hoàn hảo.

Vì vậy, câu hỏi vẫn là, làm thế nào để nó đồng bộ hóa tốt như vậy?

Bí mật của FoodMaths là danh mục tùy chỉnh phong phú thúc đẩy trải nghiệm.

Tôi đã tạo danh mục bằng một công cụ đơn giản mà chúng tôi đã xây dựng để bổ sung cho ShazamKit và bạn cũng có thể sử dụng nó để tạo ra những trải nghiệm phong phú trong các ứng dụng của riêng mình.

Shazam CLI xuất xưởng như một phần của macOS 13 và cung cấp một cách dễ dàng để đồng bộ hóa nội dung.

Nó có thể giúp tự động hóa một số tác vụ lặp đi lặp lại liên quan đến việc tạo danh mục tùy chỉnh.

Hãy cập nhật danh mục tùy chỉnh mà tôi vừa cho bạn xem.

Đã đến lúc cho một bản demo khác.

Đây là một thư mục chứa tệp video FoodMath và đây là thiết bị đầu cuối của tôi trong cùng một thư mục.

Tôi sẽ sử dụng CLI để chuyển đổi video thành chữ ký bằng lệnh chữ ký.

Tôi chỉ chuyển tệp video làm đầu vào và chỉ định đầu ra chữ ký của chúng tôi.

Được rồi. Đây là chữ ký của chúng tôi.

Bây giờ tôi muốn kết hợp chữ ký này với các mục phương tiện để tạo một danh mục tùy chỉnh.

CLI chấp nhận một tệp được phân tách bằng dấu phẩy đơn giản để mô tả các mục phương tiện mà tôi sẽ sao chép ở đây.

Nó mô tả mọi thứ mà tôi cần để đồng bộ hóa nội dung của mình.

Đây là nơi tôi đã chỉ định tiêu đề của mình và đây là trường JSON tùy chỉnh mà tôi đã xác định cho phương trình.

Các tiêu đề ánh xạ đến các thuộc tính mục phương tiện.

Để biết chi tiết về bản đồ, hãy chạy lệnh tạo danh mục tùy chỉnh với cờ trợ giúp.

Nó mô tả mối quan hệ giữa các tiêu đề csv và các thuộc tính mục phương tiện.

Bây giờ tôi muốn kết hợp chúng lại với nhau thành một danh mục tùy chỉnh.

Vì vậy tôi sẽ chạy lệnh tạo.

Tôi chuyển tệp chữ ký và tệp csv và nó xuất ra một danh mục.

Được rồi, bây giờ chúng ta đã có danh mục của mình.

Thật thú vị, tôi có quyền truy cập sớm vào tập FoodMath mới nhất, vì vậy tôi muốn thêm nó vào tệp danh mục của chúng tôi.

Hãy để tôi sao chép các tập tin ở đây.

Đây là các mục truyền thông của chúng tôi cho tập mới của chúng tôi.

Tôi sẽ chạy lệnh cập nhật chuyển video, phương tiện mới và danh mục để cập nhật.

Được rồi, chúng tôi đã cập nhật danh mục của mình.

Đó là tổng quan nhanh về cách tạo danh mục, nhưng nếu bạn giống tôi, bạn sẽ thực sự muốn viết kịch bản này.

Ứng dụng FoodMath thực sự có khá nhiều tập mới và tôi muốn thêm tất cả chúng vào danh mục này.

Tôi đã viết một tập lệnh thực sự đơn giản lặp qua tất cả các thư mục tập và kết hợp chúng thành một danh mục tùy chỉnh.

Tôi sẽ chạy nó ngay bây giờ.

Vậy là xong.

Bây giờ chúng tôi có một danh mục đại diện cho mọi tập FoodMath và kịch bản đã sử dụng lệnh hiển thị để trình bày chi tiết những gì bên trong danh mục.

Tôi nghĩ chúng ta có mọi thứ.

Dự án foodmath đã tham khảo danh mục mới của chúng tôi.

Vì vậy, hãy xây dựng và chạy để chúng ta có thể thích làm một số phép toán.

Bỏ qua 30 giây.

Tôi có tổng cộng bao nhiêu quả táo?

Bộ đếm thời gian của bạn bắt đầu...bây giờ.

Được rồi, hết giờ rồi. Hãy xem bạn đã làm như thế nào.

Tôi thích anh chàng đó. Đó là một tập phim tuyệt vời.

Còn một tập mới thì sao? Hãy thử điều đó.

Bỏ qua 15 giây.

Trong những năm qua, tôi đã khám phá điều gì làm cho một guacamole thực sự ngon, và tôi đã viết ra công thức guacamole yêu thích của mình.

Nó yêu cầu 4 quả bơ.

Ngày mai bạn tôi sẽ đến thăm.

Vì vậy, đối với hai chúng tôi, tôi chỉ cần làm một nửa phần.

Tôi cần bao nhiêu quả bơ?

Bộ đếm thời gian bắt đầu...bây giờ.

Đúng rồi. Bạn cần hai quả bơ.

Hãy cùng nhau làm món guacamole này.

Hãy thử cái này.

Mmm. Điều đó hóa ra thật tuyệt. Tôi hy vọng bạn đã có một chút vui vẻ và hẹn gặp lại lần sau.

Ồ!

Họ có một người dẫn chương trình mới. Thú vị.

Dù sao, tôi đã tạo ra một trải nghiệm đồng bộ phong phú ngay lập tức.

Shazam CLI hỗ trợ một bộ lệnh phong phú.

Hãy xem qua chúng.

Bạn có thể tạo chữ ký từ bất kỳ tệp phương tiện nào có bản âm thanh.

Bạn có thể tạo danh mục tùy chỉnh bằng cách kết hợp chữ ký và các mục phương tiện.

Bạn có thể hiển thị nội dung của danh mục.

Thêm, xóa và xuất cả chữ ký và các mục phương tiện.

Tiếp theo, về cách CLI tạo chữ ký từ các video FoodMath.

SHSignatureGenerator hiện có một phương thức signatureFromAsset có sẵn trên tất cả các nền tảng.

Với phương pháp này, không còn việc kéo bộ đệm âm thanh từ phương tiện theo cách thủ công nữa.

Đơn giản chỉ cần chuyển một AVAsset với một đoạn âm thanh để biến nó thành một chữ ký.

Nếu bạn có nhiều bản nhạc trong tài sản của mình, chúng sẽ được trộn lẫn với nhau để đảm bảo chữ ký nắm bắt mọi thứ.

Được rồi, bây giờ tôi đã có một chữ ký đại diện cho phương tiện truyền thông, làm thế nào tôi đồng bộ hóa chính xác nội dung?

Tôi đã sử dụng Timed MediaItem API.

Đính kèm một phạm vi thời gian vào mục phương tiện giúp dễ dàng xác định khi nào nó bắt đầu và khi nào nó kết thúc.

Các mục phương tiện cũng có thể có nhiều khoảng thời gian để nhắm mục tiêu nhiều hơn một phần của chữ ký.

Hãy tưởng tượng rằng bạn có một mục truyền thông nhắm vào điệp khúc của một bài hát.

Bạn có thể thêm một khoảng thời gian cho mỗi nơi nó được hát.

Chỉ định phạm vi thời gian chỉ hữu ích nếu bạn được thông báo khi chúng bắt đầu và khi chúng kết thúc.

ShazamKit sẽ cung cấp một cuộc gọi lại phù hợp được đồng bộ hóa với phạm vi thời gian, một khi nó bắt đầu và một khi nó kết thúc.

Chữ ký có thể chứa nhiều mục phương tiện, vì vậy cuộc gọi lại này sẽ chỉ chứa các mục phương tiện nằm trong phạm vi tại thời điểm cụ thể đó.

Có một vài quy tắc đơn giản mà các mặt hàng phương tiện sẽ được trả lại trong một cuộc gọi lại và đơn đặt hàng của chúng, vì vậy hãy xem qua chúng.

Các mục truyền thông ngoài phạm vi thời gian của chúng sẽ không được trả lại.

Các mục truyền thông trong phạm vi thời gian của chúng sẽ được trả lại, với các sự kiện gần đây nhất sẽ đến trước.

Và cuối cùng, các mặt hàng truyền thông không có phạm vi thời gian sẽ luôn được trả lại cuối cùng, nhưng chúng sẽ không được đặt hàng.

Các mục truyền thông không có khoảng thời gian có thể là một nơi tuyệt vời để lưu trữ thông tin toàn cầu áp dụng cho toàn bộ chữ ký tham chiếu.

Trong ví dụ FoodMath của tôi, tôi đã sử dụng nó để lưu trữ tên của tập phim.

Nó xuất hiện khi không có mục truyền thông nào khác nằm trong phạm vi.

Một điểm cuối cùng, nếu tất cả các mục phương tiện của bạn có phạm vi thời gian và không có mục nào trong phạm vi, ShazamKit sẽ luôn trả về một mục phương tiện với thông tin đối sánh cơ bản.

Bằng cách này, bạn sẽ luôn nhận được các thuộc tính quan trọng, chẳng hạn như độ lệch CurrentMatch được dự đoán và frequencySkew.

Và trong mã, nó cũng dễ dàng.

Các mục phương tiện theo thời gian được tạo bằng cách chỉ định thuộc tính mục phương tiện timeRanges.

Đó là một mảng các dải Swift.

Nó cũng có thể được đọc lại bằng cách sử dụng thuộc tính timeRanges.

Và đối với các lập trình viên Objective-C, có một lớp SHRange mới như một sự thay thế giảm.

Bây giờ bạn đã thấy cách xây dựng chúng, hãy khám phá một số mẹo và thủ thuật để tạo các danh mục tùy chỉnh tuyệt vời.

Tránh tạo ra nhiều chữ ký nhỏ cho một phần của phương tiện truyền thông.

Chữ ký là ánh xạ 1-1 đến phương tiện mà nó đại diện, vì vậy đối với mỗi đoạn âm thanh bạn có, có thể là từ một bài hát hoặc video, hãy tạo một chữ ký trong toàn bộ thời lượng.

Chữ ký dài hơn cung cấp nhiều cơ hội hơn cho ShazamKit để phù hợp với các đỉnh âm thanh, dẫn đến độ chính xác tốt hơn.

Nó cũng tránh được các vấn đề với chữ ký truy vấn chồng chéo lên nhiều chữ ký tham chiếu.

Sử dụng Timed MediaItem API mới, bạn có thể nhắm mục tiêu nội dung được đồng bộ hóa đến các khu vực riêng lẻ.

Không cần phải chia một đoạn âm thanh thành nhiều chữ ký.

Tôi đã chỉ ra một ví dụ trong đó chúng tôi có một phần của phương tiện truyền thông, nhưng với nhiều mục phương tiện truyền thông.

Nhưng chúng ta nên làm gì nếu chúng ta có một lượng lớn nội dung mà chúng ta muốn làm Shazamable?

Chúng ta nên chia nó ra như thế nào?

Có một sự đánh đổi bạn cần thực hiện khi chia nội dung của mình giữa các danh mục tùy chỉnh.

Nếu bạn tạo các danh mục riêng lẻ cho từng tài sản phương tiện, bạn sẽ cần biết phần âm thanh nào đang được phát để bạn có thể tải đúng danh mục.

Và nếu bạn đặt tất cả chúng lại với nhau trong một danh mục, bạn sẽ có bản tải xuống lớn hơn và sử dụng nhiều bộ nhớ hơn, nhưng bạn có thể kết hợp nhiều đoạn âm thanh hơn.

Lời khuyên của chúng tôi là giữ các tệp danh mục bạn tạo tập trung chặt chẽ.

Ví dụ, một danh mục cho mỗi bản nhạc hoặc toàn bộ album, nhưng không phải toàn bộ danh sách đĩa nhạc của nghệ sĩ.

Giữ mọi thứ riêng biệt có nghĩa là bạn có thể quyết định tải gì trong thời gian chạy.

Bạn có thể làm điều đó với danh mục tùy chỉnh thêm API.

Hãy dùng thử và xem liệu có giúp ích gì cho trường hợp sử dụng của bạn không.

Nếu bạn có nhiều nội dung âm thanh giống nhau, có thể là một chương trình luôn bắt đầu bằng cùng một bản nhạc giới thiệu và bạn muốn cung cấp trải nghiệm tùy chỉnh cho mỗi tập hoặc một bài hát được lấy mẫu trong một bản nhạc khác, có thể xem xét sử dụng độ lệch tần số làm điểm khác biệt.

Âm thanh lệch đang tăng hoặc giảm tần số trong bản ghi âm.

Khi bạn làm điều này, bạn ảnh hưởng đến âm thanh, nhưng nếu bạn làm điều đó với một lượng đủ nhỏ, ShazamKit có thể nhận thấy nó nhưng không phải bởi tai người trung bình.

Vì vậy, nếu chúng ta ghi âm, tạo một danh mục tùy chỉnh từ nó và sau đó phát lại với các tần số hơi dịch chuyển: ShazamKit vẫn sẽ khớp với âm thanh và nó cũng sẽ báo cáo lượng sai lệch thông qua thuộc tính frequencySkew.

Đây là cách để làm điều đó trong mã.

Có những giới hạn về mức độ bạn có thể làm lệch âm thanh mà không có sự thay đổi trở nên đáng chú ý đối với tai người hoặc không thể nhận ra đối với ShazamKit.

Giữ độ lệch dưới 5 phần trăm phải an toàn và cung cấp đủ chỗ để phân biệt nhiều bản ghi sai lệch.

Để thực sự tận dụng điều này, hãy sử dụng phạm vi frequencySkew.

Các mục phương tiện sẽ chỉ được trả lại nếu chúng nằm trong phạm vi lệch được chỉ định.

Phạm vi chỉ định theo tỷ lệ phần trăm âm thanh khác với bản gốc bao nhiêu.

Giá trị 0 cho biết âm thanh không bị lệch và giá trị 0,01 biểu thị độ lệch 1 phần trăm.

Bạn có thể truy cập thuộc tính trên các mục phương tiện bằng cách sử dụng thuộc tính frequencySkewRanges.

Tôi sẽ xem qua các bước để làm cho ứng dụng này hoạt động trong ứng dụng của bạn: Trước tiên hãy tạo chữ ký tham chiếu cho bản ghi âm gốc của bạn.

Sau đó lấy một mục phương tiện truyền thông và hạn chế nó theo tần suất lệch từ 3 đến 4 phần trăm.

Đặt cái này bên trong danh mục tùy chỉnh của bạn.

Bây giờ phát lại âm thanh bị lệch từ 3 đến 4 phần trăm và mục phương tiện của bạn sẽ được trả lại.

Phát lại âm thanh không bị lệch hoặc bị lệch bên ngoài phạm vi sẽ không trả lại mục phương tiện của bạn.

Đó là sai lệch tần số.

Bây giờ bạn đã thấy những cập nhật thú vị cho ShazamKit năm nay, bạn đã sẵn sàng để tạo ra một số trải nghiệm đồng bộ hóa tuyệt vời.

Vì vậy, hãy nhớ những phương pháp hay nhất này: Đầu tiên, tạo một chữ ký cho mỗi tài sản truyền thông.

Bạn sẽ nhận được độ chính xác tốt hơn từ ShazamKit và quy trình tạo đơn giản hơn.

Tạo chữ ký của bạn với SHSignatureGenerators signatureFromAsset.

Nó chấp nhận nhiều phương tiện khác nhau, có nghĩa là bạn không còn phải đối phó với các chi tiết âm thanh cấp thấp nữa.

Nhắm mục tiêu nội dung được đồng bộ hóa đến các lĩnh vực quan tâm với API Timed MediaItem mới.

Nó kết hợp một API đơn giản với độ chính xác tuyệt vời.

Và cuối cùng hãy để Shazam CLI hợp lý hóa cách bạn tạo danh mục tùy chỉnh.

Nó được thiết kế để loại bỏ những rắc rối khi xử lý một lượng lớn phương tiện truyền thông và cho phép bạn tập trung vào những trải nghiệm tuyệt vời mà bạn muốn tạo ra thay thế.

Tôi hy vọng bạn thích những cập nhật mới nhất cho ShazamKit, và tôi rất vui khi thấy bạn làm mọi thứ trở nên Shazamable.

Tất cả thông tin chúng tôi đã thảo luận và các liên kết đến tài liệu đều được đính kèm với phiên này.

Cảm ơn vì đã tham gia. Tận hưởng phần còn lại của WWDC22. ♪ ♪