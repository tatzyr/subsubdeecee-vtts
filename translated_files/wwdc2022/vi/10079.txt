10079

Qiaoyu Deng: Xin chào.

Chào mừng đến với "Cải thiện bảo mật DNS cho các ứng dụng và máy chủ." Tên tôi là Qiaoyu Deng.

Trong video này, chúng ta sẽ nói về lý do tại sao DNS thường không an toàn và cách bảo vệ nó bằng DNSSEC và DNS được mã hóa với DDR.

Đầu tiên, hãy nói về lý do tại sao DNS không an toàn.

DNS là danh bạ điện thoại của internet.

Nó dịch các tên miền, có thể đọc được và dễ nhớ của con người, thành các địa chỉ IP, được tạo ra cho máy móc.

Các giao thức internet khác, chẳng hạn như TCP, TLS và QUIC, dựa vào việc có địa chỉ IP, vì vậy mọi thứ bắt đầu bằng DNS.

Ngày nay, TLS được sử dụng rộng rãi để bảo mật giao tiếp internet.

Điều đó thật tuyệt, nhưng DNS, lớp nền tảng, có một số vấn đề bảo mật.

DNS trong lịch sử không an toàn.

Nó được thiết kế vào năm 1983 với ít cân nhắc về bảo mật.

Trong những năm kể từ đó, nhiều cuộc tấn công DNS đã được tạo ra.

Một ví dụ là ngộ độc bộ nhớ cache DNS, trong đó kẻ tấn công khai thác các lỗ hổng của trình phân giải DNS và khiến chúng lưu trữ các địa chỉ IP không chính xác, khiến khách hàng kết nối với các máy chủ độc hại.

Điều này cho thấy một lỗ hổng của DNS: nó không được xác thực.

Các máy khách DNS truyền thống ngày nay không có cách nào để xác thực câu trả lời, vì vậy chúng có thể dễ dàng bị giả mạo.

Một cuộc tấn công phổ biến khác là đánh hơi DNS, trong đó kẻ tấn công theo dõi lưu lượng DNS giữa máy khách và máy chủ DNS, thu thập lịch sử của máy khách.

Đây là một vấn đề nghiêm trọng đối với quyền riêng tư của người dùng.

Lý do cuộc tấn công này có thể xảy ra là vì lưu lượng DNS ban đầu không được mã hóa.

Để trở thành điểm khởi đầu an toàn cho các giao thức được xây dựng trên nó, DNS cần được xác thực và mã hóa.

Khi chúng tôi sử dụng DNSSEC để ký phản hồi DNS, nó cung cấp xác thực.

Khi chúng tôi sử dụng TLS và HTTPS để mã hóa độ phân giải DNS, nó đảm bảo quyền riêng tư.

Tiếp theo, hãy nói về DNSSEC.

DNSSEC là một bộ thông số kỹ thuật mở rộng do IETF tạo ra.

Nhiều nhà cung cấp dịch vụ DNS đã hỗ trợ nó, nhưng hỗ trợ khách hàng vẫn đang tăng lên.

iOS 16 và macOS Ventura hiện hỗ trợ xác thực DNSSEC phía máy khách.

DNSSEC đảm bảo xác thực dữ liệu bằng cách thêm chữ ký số.

Nó bảo vệ tính toàn vẹn của dữ liệu.

Nó xác thực sự phủ nhận sự tồn tại khi câu trả lời không tồn tại.

Nó cũng cung cấp xác thực mật mã.

DNSSEC bảo vệ tính toàn vẹn của dữ liệu bằng cách đính kèm chữ ký trong phản hồi.

Nếu phản hồi bị thay đổi bởi kẻ tấn công, chữ ký của dữ liệu đã thay đổi sẽ không khớp với dữ liệu gốc.

Trong trường hợp đó, khách hàng có thể phát hiện phản hồi đã thay đổi và loại bỏ nó.

DNSSEC cũng khẳng định sự tồn tại và không tồn tại của các bản ghi trong một khu vực, bằng cách sử dụng các loại bản ghi DNS đặc biệt như bản ghi NSEC.

Bản ghi NSEC cho bạn biết tên bản ghi tiếp theo là gì, một cách an toàn, theo thứ tự bảng chữ cái.

Những cái tên được liệt kê bởi nó là những cái tên tồn tại, và bất kỳ cái tên nào không được liệt kê đều không tồn tại.

Ví dụ, chúng tôi có ba bản ghi NSEC ở đây.

Bộ kỷ lục tiết lộ rằng tổ chức vùng chỉ có ba tên bản ghi, A.org, C.org và E.org.

Bây giờ, nếu có một kẻ tấn công nói rằng A.org không tồn tại, khách hàng có thể phát hiện ra cuộc tấn công này.

A.org tồn tại vì nó được liệt kê trong bản ghi NSEC đầu tiên.

Tương tự như vậy, nếu kẻ tấn công nói rằng D.org tồn tại, khách hàng cũng có thể phát hiện ra điều đó, bởi vì theo bản ghi NSEC thứ hai, D.org nằm giữa C.org và E.org và không có tên nào tồn tại giữa hai tên.

DNSSEC xác thực các bản ghi bằng cách thiết lập một chuỗi tin cậy.

Đây là một ví dụ.

Một thiết bị muốn giải quyết www.example.org với xác thực DNSSEC được bật.

Nó gửi các truy vấn yêu cầu địa chỉ IP, chữ ký và khóa.

Với các phản hồi, mối quan hệ tin cậy có thể được xây dựng từ địa chỉ IP đến số khóa 1.

Sau đó, khách hàng gửi các truy vấn đến vùng mẹ, tổ chức, yêu cầu các bản ghi có thể được sử dụng để xác thực khóa số 1, vì vậy nó có thể xây dựng mối quan hệ tin cậy từ khóa số 1 đến khóa số 2.

Vì vậy, thiết bị lặp lại quá trình này một cách đệ quy, cho đến khi nó đạt đến gốc.

Bây giờ, nếu khóa gốc, là khóa số 3 trong sơ đồ, có thể được tin cậy, mối quan hệ tin cậy từ địa chỉ IP đến khóa số 3 có thể được xác thực.

Hàm băm của khóa gốc luôn được lưu trữ an toàn trong thiết bị.

Trong DNSSEC, nó được gọi là neo tin cậy gốc.

Nếu hàm băm của khóa số 3 khớp với neo được cài đặt sẵn, một chuỗi tin cậy có thể được thiết lập một cách an toàn.

Với chuỗi tin cậy, các địa chỉ IP của www.example.org hiện đã được xác thực.

Nếu bạn muốn yêu cầu xác thực DNSSEC trong ứng dụng của mình, đây là những điều bạn cần làm.

Hỗ trợ IPv6 cho các miền của bạn.

Trong môi trường chỉ IPv6, các địa chỉ IPv4 được dịch thành các địa chỉ IPv6 tổng hợp.

Nếu các miền được ký, các địa chỉ tổng hợp không thể vượt qua xác thực DNSSEC; chúng không thể truy cập được khi bật DNSSEC.

Vì vậy, hãy đảm bảo rằng các miền của bạn hỗ trợ IPv6.

Đảm bảo rằng nhà cung cấp dịch vụ DNS của bạn ký tên miền của bạn với DNSSEC.

Nếu bạn bật DNSSEC trong ứng dụng của mình mà không ký tên miền của mình, bạn sẽ không nhận được lợi ích gì, nhưng bạn sẽ nhận được lưu lượng DNS bổ sung và thời gian phân giải kéo dài để thử xác thực cho miền chưa ký của mình.

Khi bạn có hỗ trợ cơ sở hạ tầng tương ứng, đây là mã cần thiết để áp dụng DNSSEC cho các ứng dụng của bạn.

Nếu bạn là khách hàng NSURLSession, bạn có thể yêu cầu xác thực DNSSEC cho yêu cầu URL của mình.

Đây là một ví dụ.

Đầu tiên bạn sẽ tạo một cấu hình phiên mặc định.

Sau đó bạn sẽ yêu cầu xác thực DNSSEC.

Tiếp theo, bạn sẽ tạo phiên với cấu hình đã sửa đổi.

Nó cho phép DNSSEC cho tất cả các yêu cầu URL được tạo từ phiên này.

Nếu bạn không muốn bật DNSSEC cho toàn bộ phiên, bạn cũng có thể làm điều này ở cấp độ yêu cầu.

Đầu tiên, tạo một phiên với cấu hình mặc định trong đó xác thực DNSSEC bị vô hiệu hóa.

Sau đó kích hoạt nó trong yêu cầu.

Bây giờ, nhiệm vụ phiên này sẽ chỉ được bắt đầu khi xác thực DNSSEC hoàn tất.

Nếu bạn là khách hàng Network.framework, bạn cũng có thể yêu cầu xác thực DNSSEC cho các kết nối của mình.

Đầu tiên, khi bạn tạo một đối tượng tham số, hãy yêu cầu xác thực DNSSEC.

Sau đó tạo NWConnection với đối tượng tham số.

Bây giờ, khi bạn bắt đầu kết nối, nó sẽ chỉ chuyển sang trạng thái sẵn sàng khi quá trình xác thực DNSSEC hoàn tất và kết nối đến địa chỉ IP đã được xác thực đã được thiết lập.

Khi DNSSEC được bật, chỉ những địa chỉ được xác thực mới được sử dụng để thiết lập kết nối.

Trong HTTPS, các lỗi được báo cáo thông qua các API.

Trong DNSSEC, không có lỗi nào được trả về cho lỗi xác thực.

Nhận được phản hồi không xác thực được tương đương với việc không nhận được bất kỳ phản hồi nào.

Nếu có một nhà cung cấp DNS xáo trộn phản hồi, các địa chỉ sẽ không vượt qua kiểm tra xác thực, vì vậy chúng sẽ bị loại bỏ trực tiếp.

Khi thiết bị tham gia vào một mạng mới nơi nhà cung cấp DNS không giả mạo phản hồi, việc xác thực sẽ tiến triển trở lại và độ phân giải sẽ tự động trở lại bình thường.

Đây là một vài trường hợp có thể gây ra lỗi DNSSEC.

Khi phản hồi DNS ban đầu bị thay đổi, chữ ký không khớp sẽ không vượt qua kiểm tra DNSSEC, gây ra lỗi xác thực.

Khi thiết bị không thể tiếp cận bất kỳ neo tin cậy nào được cài đặt sẵn và không thể thiết lập chuỗi tin cậy từ nó.

Khi mạng không hỗ trợ các giao thức cần thiết theo yêu cầu của DNSSEC, chẳng hạn như tùy chọn DNS qua TCP và EDNS0, mang bit kích hoạt DNSSEC.

Khi miền đã ký không hỗ trợ IPv6, các địa chỉ IPv6 tổng hợp do nhà cung cấp dịch vụ internet cung cấp sẽ không xác thực được.

Vì vậy, đó là cách xác thực các phản hồi DNS với DNSSEC, nhưng nếu chúng vẫn chưa được mã hóa, bất kỳ ai trên mạng đều có thể nhìn thấy chúng.

Tiếp theo, chúng ta sẽ nói về cách bật mã hóa DNS tự động với DDR.

Trong iOS 14 và macOS Big Sur, chúng tôi đã giới thiệu DNS được mã hóa để giúp bảo vệ quyền riêng tư.

Bạn có thể sử dụng NEDNSSettingsManager trong một ứng dụng hoặc DNSSettings trong hồ sơ để định cấu hình thủ công DNS được mã hóa trên toàn hệ thống.

Bạn cũng có thể chọn tham gia DNS được mã hóa cho ứng dụng của mình bằng cách sử dụng PrivacyContext trên NWParameters.

Để biết thêm thông tin, vui lòng xem "Bật DNS được mã hóa".

Mới trong iOS 16 và macOS Ventura, DNS được mã hóa có thể được sử dụng tự động.

Nếu mạng của bạn hỗ trợ Discovery of Designated Resolvers, còn được gọi là DDR, các truy vấn DNS sẽ tự động sử dụng TLS hoặc HTTPS.

Để sử dụng DNS được mã hóa, thiết bị của bạn cần biết rằng trình phân giải hỗ trợ TLS hoặc HTTPS và nó cũng có thể cần tìm hiểu đường dẫn cổng hoặc URL.

Các cơ chế phổ biến như DHCP hoặc Quảng cáo Bộ định tuyến chỉ cung cấp một địa chỉ IP đơn giản.

DDR là một giao thức mới được phát triển trong IETF bởi Apple làm việc với các đối tác khác trong ngành.

Nó cung cấp một cách để các khách hàng DNS tìm hiểu thông tin cần thiết này bằng cách sử dụng một truy vấn DNS đặc biệt.

Khi thiết bị của bạn tham gia một mạng mới, nó sẽ đưa ra truy vấn Ràng buộc Dịch vụ cho "_dns.resolver.arpa".

Nếu máy chủ DNS hỗ trợ DDR, nó sẽ trả lời với một hoặc nhiều cấu hình.

Sau đó, thiết bị sử dụng thông tin này để thiết lập kết nối được mã hóa với trình phân giải được chỉ định.

Nó xác minh rằng địa chỉ IP của trình phân giải không được mã hóa được bao gồm trong chứng chỉ TLS của trình phân giải được chỉ định.

Điều này được thực hiện để đảm bảo rằng trình phân giải không được mã hóa và trình phân giải được mã hóa thuộc cùng một thực thể.

Nếu mọi thứ có vẻ ổn, thiết bị hiện sử dụng DNS được mã hóa theo mặc định.

DDR áp dụng cho một mạng duy nhất tại một thời điểm.

Thiết bị của bạn sẽ tự động sử dụng DNS được mã hóa nếu mạng hiện tại hỗ trợ nó.

Cũng cần lưu ý rằng DDR không hoạt động nếu địa chỉ IP của máy chủ DNS của bạn là địa chỉ IP riêng.

Điều này là do các địa chỉ IP như vậy không được phép trong chứng chỉ TLS, vì quyền sở hữu của chúng không thể được xác minh.

Trong iOS 16 và macOS Ventura, chúng tôi cũng hỗ trợ khả năng chỉ định xác thực khách hàng khi sử dụng DNS được mã hóa để thiết lập cấu hình, sử dụng NEDNSSettingsManager hoặc hồ sơ DNSSettings.

Xác thực máy khách cho phép các máy chủ DNS được mã hóa được sử dụng trong môi trường doanh nghiệp nơi các máy chủ cần xác thực máy khách trước khi cho phép truy cập.

Bây giờ bạn có thể định cấu hình chứng chỉ máy khách bằng cách sử dụng thuộc tính identityReference của NEDNSSettings.

Điều này hoạt động giống như chứng chỉ máy khách cho VPN.

Những thứ này có thể áp dụng cho cả DNS qua TLS và DNS qua HTTPS.

Đây là con đường để bảo mật DNS.

Ký tên miền của bạn với DNSSEC và yêu cầu xác thực DNSSEC trong các ứng dụng của bạn để xác thực địa chỉ IP của bạn.

Bật DDR trên mạng của bạn để khách hàng có thể tự động chuyển sang DNS được mã hóa để có quyền riêng tư của người dùng tốt hơn.

Áp dụng xác thực khách hàng trong các doanh nghiệp cần kiểm soát truy cập tốt hơn.

Tôi đang mong chờ một nền tảng DNS an toàn hơn mà bạn giúp xây dựng trong tương lai.

Cảm ơn vì đã xem!

.