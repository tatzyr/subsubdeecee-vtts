10008

♪ nhạc cụ hip hop ♪

♪

Xin chào, tôi là Jon Schoenberg, và tôi là một kỹ sư trong nhóm Công nghệ Vị trí tại Apple.

Trong phiên này, tôi sẽ đề cập đến các tính năng mới mà chúng tôi đã mang đến Tương tác lân cận, điều đó sẽ cho phép bạn xây dựng trải nghiệm phong phú và đa dạng hơn với nhận thức không gian.

Khung Tương tác lân cận giúp đơn giản tận dụng các khả năng của U1 - chip của Apple cho công nghệ Ultra Wideband - và cho phép tạo các tương tác chính xác và nhận biết không gian giữa các thiết bị hoặc phụ kiện của Apple gần đó tương thích với chip U1 của Apple cho Ultra Wideband.

Hãy bắt đầu với một đánh giá nhanh về những gì đã có sẵn cho bạn trong hai năm qua.

Khi Tương tác lân cận được giới thiệu tại WWDC 2020, chức năng tập trung vào việc tạo và chạy một phiên giữa hai iPhone với U1.

Tại WWDC 2021, chức năng đã được mở rộng để hỗ trợ các phiên chạy với Apple Watch và các phụ kiện tương thích Ultra Wideband của bên thứ ba.

Nếu bạn quan tâm đến việc đi sâu vào các API của khung Tương tác lân cận, vui lòng xem lại cuộc nói chuyện WWDC "Gặp gỡ Tương tác lân cận" từ năm 2020 và "Khám phá Tương tác lân cận với các phụ kiện của bên thứ ba" từ năm 2021.

Chúng tôi đã bị thổi bay bởi phản ứng của cộng đồng đối với Tương tác lân cận và trong phiên này, tôi rất vui mừng được tiết lộ những khả năng và cải tiến mới cho bạn.

Tôi sẽ tập trung vào hai chủ đề chính: tăng cường Tương tác lân cận với ARKit và các phiên nền.

Trên đường đi, tôi sẽ chia sẻ một số cải tiến giúp sử dụng khung Tương tác lân cận dễ dàng hơn và tôi sẽ kết thúc bằng bản cập nhật về hỗ trợ phần cứng của bên thứ ba đã được công bố vào năm ngoái.

Chúng tôi rất vui mừng về những gì bạn sẽ làm với các khả năng mới, vì vậy hãy đi sâu vào chi tiết.

Tôi sẽ bắt đầu với một khả năng mới thú vị tích hợp chặt chẽ ARKit với Tương tác lân cận.

Khả năng mới này tăng cường Tương tác lân cận bằng cách tận dụng quỹ đạo thiết bị được tính toán từ ARKit.

Tương tác lân cận được tăng cường ARKit tận dụng cùng một công nghệ cơ bản hỗ trợ Tìm kiếm chính xác với AirTag và chúng tôi đang cung cấp nó cho bạn thông qua Tương tác lân cận.

Các trường hợp sử dụng tốt nhất là những trải nghiệm hướng dẫn người dùng đến một đối tượng cụ thể gần đó như vật phẩm bị thất lạc, đối tượng quan tâm hoặc đối tượng mà người dùng muốn tương tác.

Bằng cách tích hợp ARKit và Tương tác lân cận, thông tin khoảng cách và hướng có sẵn nhất quán hơn là chỉ sử dụng Tương tác lân cận, mở rộng trường nhìn Ultra Wideband một cách hiệu quả.

Cuối cùng, khả năng mới này được sử dụng tốt nhất để tương tác với các thiết bị cố định.

Hãy bắt đầu trình diễn ngay về các khả năng mà sự tích hợp mới này của ARKit và Tương tác lân cận cho phép với ứng dụng của bạn.

Tôi có một ứng dụng ở đây cho Bảo tàng Jetpack của tôi có các phụ kiện Ultra Wideband để giúp hướng dẫn người dùng đến các cuộc triển lãm.

Hãy đi tìm gói máy bay phản lực tiếp theo.

Khi người dùng chọn đi đến triển lãm tiếp theo, ứng dụng sẽ phát hiện ra phụ kiện Ultra Wideband và thực hiện các trao đổi cần thiết để bắt đầu sử dụng Tương tác lân cận.

Ứng dụng sau đó hướng dẫn người dùng di chuyển điện thoại sang bên trong khi nó bắt đầu xác định vị trí vật lý của triển lãm tiếp theo, sử dụng chế độ Tương tác lân cận nâng cao với ARKit.

Bây giờ ứng dụng đã hiểu hướng tương ứng với triển lãm tiếp theo, một biểu tượng mũi tên đơn giản cho người dùng biết hướng cần đi để kiểm tra nó xuất hiện.

Thông tin phong phú, nhận thức về không gian này sử dụng kết hợp ARKit và Tương tác lân cận thậm chí có thể chỉ ra khi nào triển lãm ở phía sau người dùng và người dùng đang đi theo hướng ra khỏi triển lãm.

Cuối cùng, ứng dụng có thể hiển thị, trong thế giới AR, một lớp phủ của vị trí triển lãm tiếp theo và ứng dụng nhắc người dùng di chuyển iPhone lên xuống một chút để giải quyết vị trí của triển lãm trong thế giới AR.

Khi nội dung AR được đặt trong cảnh, sự kết hợp mạnh mẽ của Tương tác lân cận - với các phép đo băng tần siêu rộng - và ARKit, cho phép người dùng dễ dàng truy cập để xem gói phản lực tiếp theo.

Tôi có thể không tìm thấy một chiếc jetpack, nhưng tôi đã tìm thấy một nữ hoàng.

Bây giờ chúng ta hãy chuyển sang cách bạn có thể kích hoạt chế độ Tương tác lân cận nâng cao này.

Với iOS 15, bạn có thể có một phương thức trong ứng dụng của mình chấp nhận NIDiscoveryToken từ một đồng nghiệp gần đó, tạo cấu hình phiên và chạy NISession.

Bật chế độ nâng cao với ARKit rất dễ dàng khi sử dụng Tương tác lân cận mới và hiện có với thuộc tính isCameraAssistanceEnabled mới trên các lớp con của NIConfiguration.

Đặt thuộc tính isCameraAssistanceEnabled là tất cả những gì được yêu cầu để tận dụng chế độ nâng cao với ARKit.

Hỗ trợ máy ảnh có sẵn khi tương tác giữa hai thiết bị Apple và một thiết bị Apple với các phụ kiện Ultra Wideband của bên thứ ba.

Hãy xem chi tiết về những gì xảy ra khi NISession được chạy với sự hỗ trợ của máy ảnh được bật.

Khi hỗ trợ máy ảnh được bật, ARSession sẽ tự động được tạo trong khuôn khổ Tương tác lân cận.

Bạn không chịu trách nhiệm tạo ARSession này.

Chạy NISession với hỗ trợ camera được bật cũng sẽ chạy ARSession được tạo tự động trong khuôn khổ Tương tác lân cận.

ARSession đang chạy trong quá trình đăng ký.

Do đó, ứng dụng phải cung cấp khóa mô tả sử dụng máy ảnh trong Info.plist của ứng dụng.

Hãy chắc chắn làm cho điều này trở thành một chuỗi hữu ích để thông báo cho người dùng của bạn tại sao máy ảnh là cần thiết để cung cấp trải nghiệm tốt.

Chỉ một ARSession duy nhất có thể chạy cho một ứng dụng nhất định.

Điều này có nghĩa là nếu bạn đã có trải nghiệm ARKit trong ứng dụng của mình, cần phải chia sẻ ARSession mà bạn tạo với NISession.

Để chia sẻ ARSession với NISession, một phương thức setARSession mới có sẵn trên lớp NISession.

Khi setARSession được gọi, trước khi chạy, trên NISession, ARSession sẽ không được tạo tự động trong khuôn khổ Tương tác lân cận khi phiên được chạy.

Điều này đảm bảo trải nghiệm ứng dụng ARKit xảy ra đồng thời với sự hỗ trợ của máy ảnh trong Tương tác lân cận.

Trong ví dụ SwiftUI này, như một phần của hàm makeUIView, ARSession cơ bản trong ARView được chia sẻ với NISession thông qua phương thức setARSession mới.

Nếu bạn đang sử dụng ARSession trực tiếp, cần phải gọi chạy trên ARSession với ARWorldTrackingConfiguration.

Ngoài ra, một số thuộc tính phải được cấu hình theo một cách cụ thể trong ARConfiguration này để đảm bảo hiệu suất chất lượng cao từ sự hỗ trợ của máy ảnh.

WorldAlignment nên được đặt thành trọng lực, cộng tác và userFaceTracking bị vô hiệu hóa, một nil initialWorldMap và một đại biểu có phương thức sessionShouldAttempt Relocalization trả về false.

Hãy chuyển sang một số phương pháp hay nhất khi chia sẻ ARSession mà bạn đã tạo.

Trong phương thức lỗi NISessionDelegate didInvalidateWith của bạn, hãy luôn kiểm tra mã lỗi.

Nếu ARConfiguration được sử dụng để chạy ARSession được chia sẻ không phù hợp với các thuộc tính được phác thảo, NISession sẽ bị vô hiệu.

Một mã NIError mới không hợp lệ ARConfiguration sẽ được trả về.

Để nhận các cập nhật đối tượng gần đó trong ứng dụng của bạn, hãy tiếp tục sử dụng phương thức didUpdateNearbyObjects trong NISessionDelegate của bạn.

Trong phương pháp didUpdateNearbyObjects của bạn, bạn có thể kiểm tra các đối tượng gần đó cho đối tượng ngang hàng mong muốn của mình và cập nhật giao diện người dùng dựa trên các thuộc tính khoảng cách và hướng của NINearbyObject khi có sẵn, luôn cẩn thận nhớ lại những điều này có thể là số không.

Khi hỗ trợ máy ảnh được bật, hai thuộc tính mới có sẵn trong NINearbyObject.

Đầu tiên là horizontalAngle.

Đây là góc 1D tính bằng radian biểu thị hướng phương vị đến vật thể gần đó.

Khi không có sẵn, giá trị này sẽ là số không.

Thứ hai, verticalDirectionEstimate là mối quan hệ vị trí với đối tượng gần đó trong chiều dọc.

Đây là một loại VerticalDirectionEstimate mới.

Khoảng cách và hướng đại diện cho mối quan hệ không gian chính giữa thiết bị của người dùng và một vật thể gần đó.

Khoảng cách được đo bằng mét và hướng là một vectơ 3D từ thiết bị của bạn đến vật thể gần đó.

Góc ngang được định nghĩa là góc giữa thiết bị chạy NISession và vật thể gần đó trong một mặt phẳng ngang cục bộ.

Điều này giải thích cho bất kỳ độ lệch dịch chuyển dọc nào giữa hai thiết bị và bất kỳ vòng quay ngang nào của chính thiết bị.

Trong khi hướng là 3D, góc ngang là biểu diễn 1D của tiêu đề giữa hai thiết bị.

Thuộc tính góc ngang này bổ sung cho thuộc tính hướng và nếu hướng không thể được phân giải, góc ngang có thể có sẵn để giúp bạn hướng dẫn người dùng của mình đến một đối tượng gần đó.

Ước tính hướng dọc là một đánh giá định tính của thông tin vị trí dọc.

Bạn nên sử dụng nó để hướng dẫn người dùng giữa các tầng.

Bây giờ chúng ta hãy xem xét loại VerticalDirectionEstimate mới.

VerticalDirectionEstimate là một enum lồng nhau trong NINearbyObject và đại diện cho một đánh giá định tính về mối quan hệ dọc với đối tượng gần đó.

Hãy chắc chắn kiểm tra xem VerticalDirectionEstimate có phải là không xác định trước khi sử dụng thuộc tính.

Mối quan hệ dọc có thể giống nhau, trên, dưới hoặc giá trị đặc biệt trên hoặc dưới đại diện cho đối tượng gần đó không ở cùng cấp độ, nhưng không rõ ràng trên hoặc dưới thiết bị.

Các phép đo băng tần siêu rộng tùy thuộc vào trường nhìn và vật cản.

Trường nhìn cho thông tin hướng tương ứng với hình nón chiếu từ phía sau thiết bị.

Quỹ đạo thiết bị được tính toán từ ARKit khi hỗ trợ máy ảnh được bật cho phép ước tính khoảng cách, hướng, góc ngang và hướng dọc có sẵn trong nhiều tình huống hơn, mở rộng hiệu quả trường nhìn cảm biến Ultra Wideband.

Bây giờ chúng ta hãy tận dụng sự tích hợp này của ARKit và Tương tác lân cận để đặt các đối tượng AR trong cảnh của bạn.

Để giúp bạn dễ dàng phủ lên nội dung ảo 3D đại diện cho đối tượng gần đó lên trực quan hóa nguồn cấp dữ liệu máy ảnh, chúng tôi đã thêm một phương pháp trợ giúp: worldTransform trên NISession.

Phương pháp này trả về một worldTransform trong không gian tọa độ của ARKit đại diện cho vị trí của đối tượng gần đó đã cho trong môi trường vật lý khi nó có sẵn.

Khi không có sẵn, phương thức này trả về nil.

Chúng tôi đã sử dụng phương pháp này trong cuộc trình diễn để đặt các quả cầu nổi phía trên triển lãm tiếp theo.

Chúng tôi muốn giúp bạn tận dụng đầu ra vị trí Tương tác lân cận dễ dàng nhất có thể để thao tác nội dung trong thế giới AR trong ứng dụng của bạn.

Hai hệ thống mạnh mẽ trong iOS, kết hợp lại.

Người dùng của bạn phải quét thiết bị đủ theo hướng dọc và ngang để cho phép hỗ trợ máy ảnh tính toán đầy đủ sự biến đổi thế giới.

Phương pháp này có thể trả về số không khi chuyển động của người dùng không đủ để cho phép hỗ trợ máy ảnh hội tụ hoàn toàn vào một biến đổi thế giới ARKit.

Khi sự biến đổi này quan trọng đối với trải nghiệm ứng dụng của bạn, điều quan trọng là phải huấn luyện người dùng thực hiện hành động để tạo ra sự biến đổi này.

Bây giờ chúng ta hãy xem xét một số bổ sung mà chúng tôi đã thực hiện cho NISessionDelegate để giúp bạn có thể hướng dẫn người dùng tương tự như những gì bạn đã thấy trong bản trình diễn.

Để hỗ trợ hướng dẫn người dùng về phía đối tượng của bạn, một cuộc gọi lại NISessionDelegate cung cấp thông tin về sự hội tụ thuật toán Tương tác lân cận thông qua phương thức đại diện didUpdateAlgorithmConvergence mới.

Sự hội tụ thuật toán có thể giúp bạn hiểu tại sao góc ngang, ước tính hướng dọc và worldTransform không khả dụng và người dùng có thể thực hiện những hành động nào để giải quyết các thuộc tính đó.

Người đại diện cung cấp một đối tượng NIAlgorithmConvergence mới và một NINearbyObject tùy chọn.

Phương thức đại diện này chỉ được gọi khi bạn đã bật hỗ trợ máy ảnh trong NIConfiguration của mình.

Hãy xem xét loại NIAlgorithmConvergence mới.

NIAlgorithmConvergence có một thuộc tính trạng thái đơn là một loại NIAlgorithm ConvergenceStatus.

Loại NIAlgorithmConvergenceStatus là một enum đại diện cho việc thuật toán có hội tụ hay không.

Nếu thuật toán không hội tụ, một mảng các giá trị liên quan NIAlgorithmConvergenceStatus. Lý do được cung cấp.

Hãy quay lại phương thức đại diện mới và nói rằng bạn muốn cập nhật trạng thái hỗ trợ máy ảnh cho người dùng, bạn có thể bật trạng thái hội tụ và nếu không xác định hoặc hội tụ, hãy hiển thị thông tin đó cho người dùng.

Hãy chắc chắn kiểm tra NINearbyObject.

Khi đối tượng là nil, trạng thái NIAlgorithmConvergence áp dụng cho chính phiên, thay vì một NINearbyObject cụ thể.

Khi trạng thái không hội tụ, nó cũng bao gồm một giá trị liên quan mô tả lý do thuật toán không hội tụ.

Mô tả bản địa hóa có sẵn vì lý do này để giúp bạn giao tiếp tốt hơn với người dùng của mình.

Tiếp theo chúng ta hãy xem cách sử dụng những giá trị này.

Kiểm tra trường hợp notConverged chặt chẽ hơn và giá trị lý do liên quan, có thể hướng dẫn người dùng thực hiện các hành động giúp tạo ra thông tin mong muốn về một đối tượng gần đó.

Giá trị liên quan là một mảng của NIAlgorithmConvergence StatusReasons.

Lý do có thể chỉ ra rằng không đủ tổng chuyển động, không đủ chuyển động trong quét ngang hoặc dọc và không đủ ánh sáng.

Hãy lưu ý rằng nhiều lý do có thể tồn tại cùng một lúc và hướng dẫn người dùng tuần tự thông qua từng hành động dựa trên hành động nào là quan trọng nhất đối với ứng dụng của bạn.

Nhớ lại cách tôi di chuyển điện thoại trong cuộc trình diễn và cần quét theo cả hướng ngang và dọc để giải quyết sự biến đổi của thế giới.

Đó là những phần quan trọng nhất về chế độ Tương tác lân cận được nâng cao với sự hỗ trợ của máy ảnh.

Chúng tôi đã thực hiện một số thay đổi bổ sung để giúp bạn tận dụng chế độ này tốt hơn.

Trước đây, một biến lớp isSupported duy nhất trên NISession là tất cả những gì cần thiết để kiểm tra xem Tương tác lân cận có được hỗ trợ trên một thiết bị nhất định hay không.

Điều này bây giờ đã bị phản đối.

Với việc bổ sung hỗ trợ máy ảnh, chúng tôi đã làm cho các khả năng của thiết bị được hỗ trợ bởi Tương tác lân cận mô tả nhiều hơn với thành viên lớp deviceCapabilities mới trên NISession trả về một đối tượng NIDeviceCapability mới.

Tối thiểu, việc kiểm tra thuộc tính supportsPreciseDistance Measurement tương đương với biến lớp isSupported hiện không được chấp nhận.

Khi bạn đã thiết lập rằng thiết bị hỗ trợ đo khoảng cách chính xác, bạn nên sử dụng NIDeviceCapability để hiểu đầy đủ các khả năng có sẵn từ Tương tác lân cận trên thiết bị đang chạy ứng dụng của bạn.

Bạn nên điều chỉnh trải nghiệm ứng dụng của mình theo khả năng của thiết bị bằng cách kiểm tra các tính hỗ trợ bổ sungDirectionMeasurement và hỗ trợ các thuộc tính CameraAssistance của đối tượng NIDeviceCapability.

Không phải tất cả các thiết bị đều hỗ trợ đo hướng cũng như hỗ trợ camera, vì vậy hãy đảm bảo bao gồm các trải nghiệm phù hợp với khả năng của thiết bị này.

Đặc biệt, hãy chú ý bao gồm các trải nghiệm chỉ dành cho khoảng cách để hỗ trợ tốt nhất cho Apple Watch.

Đó là tất cả để hỗ trợ máy ảnh như một cách để tăng cường Tương tác lân cận với ARKit. Vì vậy, bây giờ chúng ta hãy chuyển sự chú ý của chúng ta sang các phiên nền phụ kiện.

Ngày nay, bạn có thể sử dụng Tương tác lân cận trong ứng dụng của mình để cho phép người dùng trỏ đến các thiết bị khác, tìm bạn bè và hiển thị các điều khiển hoặc giao diện người dùng khác dựa trên khoảng cách và hướng đến một phụ kiện.

Tuy nhiên, khi ứng dụng của bạn chuyển sang nền hoặc khi người dùng khóa màn hình trên iOS và watchOS, mọi NISessions đang chạy sẽ bị đình chỉ cho đến khi ứng dụng quay trở lại nền trước.

Điều này có nghĩa là bạn cần tập trung vào trải nghiệm người dùng thực hành khi tương tác với phụ kiện của mình.

Bắt đầu từ iOS 16, Tương tác lân cận đã rảnh tay.

Bây giờ bạn có thể sử dụng Tương tác lân cận để bắt đầu phát nhạc khi bạn bước vào phòng có loa thông minh, bật eBike khi bạn lên hoặc kích hoạt các hành động rảnh tay khác trên phụ kiện.

Bạn có thể làm điều này ngay cả khi người dùng không chủ động sử dụng ứng dụng của bạn thông qua các phiên nền phụ kiện.

Hãy xem cách bạn có thể hoàn thành khả năng mới thú vị này.

Hãy dành một phút để xem lại trình tự về cách định cấu hình và chạy NISession với một phụ kiện.

Bạn có thể nhận ra chuỗi này từ bài thuyết trình WWDC năm ngoái.

Phụ kiện gửi dữ liệu cấu hình phụ kiện Ultra Wideband của nó đến ứng dụng của bạn thông qua kênh dữ liệu và bạn tạo NINearbyAccessoryConfiguration từ dữ liệu này.

Bạn tạo một NISession, đặt một NISessionDelegate để nhận các phép đo Ultra Wideband từ phụ kiện.

Bạn chạy NISession với cấu hình của mình và phiên sẽ trả về dữ liệu cấu hình có thể chia sẻ để thiết lập phụ kiện để tương tác với ứng dụng của bạn.

Sau khi gửi dữ liệu cấu hình có thể chia sẻ này trở lại phụ kiện, bây giờ bạn có thể nhận được các phép đo Ultra Wideband trong ứng dụng của mình và tại phụ kiện.

Để biết tất cả các chi tiết về cấu hình và chạy Tương tác lân cận với các phụ kiện của bên thứ ba, vui lòng xem lại phiên WWDC năm ngoái.

Bây giờ chúng ta hãy xem cách bạn thiết lập các phiên nền mới.

Sơ đồ trình tự trước đó cho thấy dữ liệu chảy giữa ứng dụng của bạn và phụ kiện.

Việc có kênh liên lạc giữa một phụ kiện và ứng dụng của bạn sử dụng Bluetooth LE là rất phổ biến.

Khi được ghép nối với phụ kiện bằng Bluetooth LE, bạn có thể bật Tương tác lân cận để bắt đầu và tiếp tục các phiên trong nền.

Hãy xem xét kỹ làm thế nào điều này có thể xảy ra.

Hôm nay, bạn có thể định cấu hình ứng dụng của mình để sử dụng Core Bluetooth để khám phá, kết nối và trao đổi dữ liệu với các phụ kiện Bluetooth LE trong khi ứng dụng của bạn ở chế độ nền.

Kiểm tra Hướng dẫn Lập trình Bluetooth Cốt lõi hiện có hoặc phiên WWDC từ năm 2017 để biết thêm chi tiết.

Tận dụng các hoạt động nền mạnh mẽ từ Core Bluetooth để khám phá hiệu quả phụ kiện và chạy ứng dụng của bạn trong nền, ứng dụng của bạn có thể bắt đầu NISession với phụ kiện Bluetooth LE cũng hỗ trợ Ultra Wideband trong nền.

Bây giờ chúng ta hãy xem cách sơ đồ trình tự cập nhật để phản ánh chế độ mới này.

Để tương tác với phụ kiện này, trước tiên, hãy đảm bảo rằng nó được ghép nối Bluetooth LE.

Sau đó, kết nối với phụ kiện.

Khi phụ kiện tạo dữ liệu cấu hình Ultra Wideband phụ kiện của nó, nó sẽ vừa gửi nó đến ứng dụng của bạn vừa điền vào dịch vụ GATT Tương tác lân cận; tiếp theo.

Cuối cùng, khi ứng dụng của bạn nhận được dữ liệu cấu hình của phụ kiện, hãy xây dựng đối tượng NINearbyAccessoryConfiguration bằng cách sử dụng trình khởi tạo mới cung cấp cả dữ liệu cấu hình UWB của phụ kiện và mã định danh ngang hàng Bluetooth của nó.

Chạy NISession của bạn với cấu hình này và đảm bảo bạn hoàn thành thiết lập bằng cách nhận cấu hình có thể chia sẻ trong NISessionDelegate của bạn và gửi cấu hình có thể chia sẻ đến phụ kiện.

Để phụ kiện của bạn tạo mối quan hệ giữa mã định danh Bluetooth và cấu hình Ultra Wideband, nó phải triển khai dịch vụ GATT Tương tác lân cận mới.

Dịch vụ Tương tác lân cận chứa một đặc tính được mã hóa duy nhất được gọi là Dữ liệu Cấu hình Phụ kiện.

Nó chứa cùng một dữ liệu cấu hình UWB được sử dụng để khởi tạo đối tượng NINearbyAccessoryConfiguration.

iOS sử dụng đặc tính này để xác minh mối liên hệ giữa mã định danh ngang hàng Bluetooth và NISession của bạn.

Ứng dụng của bạn không thể đọc trực tiếp từ đặc điểm này.

Bạn có thể tìm hiểu thêm về chi tiết của dịch vụ GATT Tương tác lân cận mới này trên developer.apple.com/ nearby-interaction.

Nếu phụ kiện của bạn hỗ trợ nhiều NISessions song song, hãy tạo nhiều phiên bản Dữ liệu Cấu hình Phụ kiện, mỗi phiên bản có cấu hình UWB của NISession khác nhau.

Đó là những gì cần thiết trên phụ kiện.

Hãy chuyển sang những gì bạn cần triển khai trong ứng dụng của mình bằng cách đi sâu vào một số mã!

Các phiên nền phụ kiện yêu cầu phụ kiện được ghép nối LE với iPhone của người dùng.

Ứng dụng của bạn chịu trách nhiệm kích hoạt quá trình này.

Để làm điều này, hãy triển khai các phương pháp quét phụ kiện của bạn, kết nối với nó và khám phá các dịch vụ và đặc điểm của nó.

Sau đó, thực hiện một phương pháp để đọc một trong những đặc điểm được mã hóa của phụ kiện của bạn.

Bạn chỉ cần làm điều này một lần.

Nó sẽ hiển thị cho người dùng lời nhắc chấp nhận ghép nối.

Các phiên nền phụ kiện cũng yêu cầu kết nối Bluetooth với phụ kiện của bạn.

Ứng dụng của bạn phải có khả năng hình thành kết nối này ngay cả khi nó có nền.

Để làm điều này, hãy thực hiện một phương pháp để bắt đầu nỗ lực kết nối với phụ kiện của bạn.

Bạn nên làm điều này ngay cả khi phụ kiện không nằm trong phạm vi Bluetooth.

Sau đó, triển khai các phương pháp CBManagerDelegate để khôi phục trạng thái sau khi ứng dụng của bạn được Core Bluetooth khởi chạy lại và xử lý khi kết nối của bạn được thiết lập.

Bây giờ bạn đã sẵn sàng để chạy một phiên nền phụ kiện.

Tạo một đối tượng NINearbyAccessoryConfiguration bằng cách cung cấp cả dữ liệu cấu hình UWB của phụ kiện và mã định danh ngang hàng Bluetooth của nó từ mã định danh CBPeripheral.

Chạy một NISession với cấu hình đó và nó sẽ chạy trong khi ứng dụng của bạn được nền.

Thế là xong!

Chà, có một cài đặt nữa bạn cần cập nhật cho ứng dụng của mình trong Xcode.

Chế độ nền này yêu cầu chuỗi Tương tác lân cận trong mảng UIBackgroundModes trong Info.plist của ứng dụng của bạn.

Bạn cũng có thể sử dụng trình chỉnh sửa khả năng Xcode để thêm chế độ nền này.

Bạn cũng sẽ muốn đảm bảo rằng bạn đã bật "Sử dụng phụ kiện Bluetooth LE" để đảm bảo ứng dụng của bạn có thể kết nối với phụ kiện ở chế độ nền.

Một lưu ý quan trọng về phiên nền phụ kiện mới này.

Khi ứng dụng của bạn ở chế độ nền, NISession sẽ tiếp tục chạy và sẽ không bị đình chỉ, vì vậy các phép đo Ultra Wideband có sẵn trên phụ kiện.

Bạn phải tiêu thụ và thực hiện các phép đo Ultra Wideband trên phụ kiện.

Ứng dụng của bạn sẽ không nhận được thời gian chạy và bạn sẽ không nhận được lệnh gọi lại đại diện didUpdateNearbyObject cho đến khi ứng dụng của bạn quay trở lại nền trước.

Khi sử dụng chế độ nền mới này, hãy xem lại các phương pháp hay nhất sau đây.

Kích hoạt ghép nối LE với phụ kiện của bạn sẽ hiển thị cho người dùng lời nhắc chấp nhận việc ghép nối.

Làm điều này tại một thời điểm trực quan đối với người dùng tại sao họ muốn ghép nối phụ kiện.

Điều này có thể nằm trong quy trình thiết lập mà nó tạo ra mối quan hệ với phụ kiện hoặc khi người dùng thể hiện rõ mong muốn tương tác với phụ kiện của họ.

Trong khi ứng dụng của bạn có nền tảng, NISession của bạn sẽ không bị đình chỉ, nhưng nó sẽ không nhận được lệnh gọi lại đại diện didUpdateNearbyObject.

Tuy nhiên, phụ kiện của bạn sẽ nhận được các phép đo băng tần siêu rộng.

Xử lý các phép đo này trực tiếp trên phụ kiện của bạn để xác định hành động nào sẽ xảy ra cho người dùng.

Cuối cùng, quản lý việc sử dụng pin bằng cách chỉ gửi dữ liệu từ phụ kiện của bạn đến ứng dụng của bạn trong quá trình tương tác quan trọng của người dùng; ví dụ: để hiển thị thông báo cho người dùng.

Đó là tất cả những gì bạn cần biết về các phiên nền và dẫn tôi đến chủ đề cuối cùng về hỗ trợ phần cứng của bên thứ ba.

Hôm nay, tôi vui mừng thông báo rằng các bộ phát triển tương thích beta U1 có sẵn trước đây hiện đã hết bản beta và có sẵn để sử dụng rộng rãi hơn.

Vui lòng truy cập developer.apple.com /nearby-interaction để tìm hiểu thêm về các bộ phát triển Ultra Wideband tương thích.

Chúng tôi cũng đã cập nhật thông số kỹ thuật cho các nhà sản xuất phụ kiện để hỗ trợ các phiên nền phụ kiện mới, bao gồm dịch vụ GATT Tương tác lân cận và nó có sẵn trên cùng một trang web.

Vì vậy, hãy tóm tắt những gì chúng ta đã thảo luận trong phiên này.

Tương tác lân cận hiện bao gồm chế độ hỗ trợ máy ảnh mới tích hợp chặt chẽ ARKit và Tương tác lân cận để cung cấp trải nghiệm liền mạch để bạn tạo ra trải nghiệm nhận thức không gian hướng dẫn người dùng đến một đối tượng gần đó.

Các phiên nền phụ kiện cho phép bạn bắt đầu và mở rộng các phiên vào nền để bạn xây dựng trải nghiệm thực tế hơn cho người dùng của mình.

Chúng tôi đã công bố các bản cập nhật thú vị cho hỗ trợ phần cứng Ultra Wideband tương thích của bên thứ ba.

Đó là nó cho các bản cập nhật Tương tác lân cận trong năm nay.

Tải xuống các bản demo, tiếp cận với phản hồi về các khả năng được cập nhật, xem lại thông số kỹ thuật của bên thứ ba được cập nhật và xây dựng các ứng dụng tuyệt vời với trải nghiệm không gian.

Cảm ơn bạn.

♪