110347

♪ ♪

Xin chào, và chào mừng đến với WWDC.

Tên tôi là David, và tôi muốn nói với bạn về cách bạn có thể khám phá nhiều nội dung hơn với MusicKit.

Khung MusicKit được ra mắt vào năm 2021, cung cấp một bộ API để truy cập và phát nhạc nguyên bản trong Swift.

Khung này giúp ứng dụng của bạn dễ dàng tích hợp với Apple Music, cung cấp quyền truy cập vào toàn bộ danh mục Apple Music.

Hôm nay, tôi muốn nói về một số cải tiến lớn mà chúng tôi đã thực hiện cho MusicKit.

Tôi sẽ bắt đầu với một số bổ sung để tận dụng tối đa danh mục Apple Music, với các loại mục nhạc mới, yêu cầu mới và siêu dữ liệu mới.

Sau đó, tôi sẽ thảo luận về cách bạn có thể tìm nạp nội dung được cá nhân hóa để cung cấp trải nghiệm phù hợp cho từng người dùng của mình.

Tiếp theo, tôi sẽ vượt ra ngoài danh mục Apple Music.

Năm nay, bạn có thể đưa ứng dụng của mình lên một tầm cao mới bằng cách bao gồm nhạc từ thư viện của người dùng.

Cuối cùng, tôi sẽ thảo luận về cách tương tác tích cực với thư viện, chẳng hạn như thêm các mục vào thư viện hoặc danh sách phát, cũng như tạo và chỉnh sửa danh sách phát.

Hãy đi sâu vào các bổ sung nội dung danh mục.

Bản phát hành ban đầu của MusicKit đã giới thiệu một lớp mô hình mới cho âm nhạc, bao gồm các loại cốt lõi như Bài hát, Album và Danh sách phát.

Năm nay, chúng tôi đang giúp việc khám phá âm nhạc mới với MusicKit trở nên dễ dàng hơn với việc bổ sung hai loại mới: Curator và Radio Show.

Ngoài ra, MusicKit hiện cũng cho phép bạn xây dựng giao diện người dùng tuyệt vời để tìm kiếm thông qua danh mục, truy cập các bảng xếp hạng hàng đầu để có được các bài hát, album phổ biến nhất và hơn thế nữa và tìm nạp các thuộc tính mới như siêu dữ liệu âm thanh chất lượng cao hơn như Âm thanh không gian với Dolby Atmos.

Hãy bắt đầu với những người phụ trách và các chương trình phát thanh, đó là những nguồn tài nguyên tuyệt vời để khám phá âm nhạc.

Ở đây, chúng ta đang xem xét một ví dụ Người quản lý, Nike.

Các ví dụ khác về người phụ trách là Shazam và Beats của Tiến sĩ. Dre.

Tại đây, chúng tôi có thể dễ dàng tìm thấy tất cả danh sách phát do người phụ trách này tạo ra.

Chức năng này cho phép mọi người truy cập nhanh vào danh sách phát mà họ có thể yêu thích, tìm các bài hát mới hoặc xem lại các mục yêu thích cũ.

Bây giờ chúng ta hãy đi sâu vào các chi tiết kỹ thuật hơn.

Người phụ trách lưu trữ nhiều thuộc tính khác nhau.

Một số thuộc tính chính của loại Người quản lý mới này là tên, url, tác phẩm nghệ thuật và loại.

Thuộc tính loại là một enum có thể là "biên tập" hoặc "bên ngoài" cho biết liệu một người phụ trách nhất định là người phụ trách Apple hay người phụ trách bên thứ ba.

Người phụ trách cũng có mối quan hệ danh sách phát hiển thị danh sách phát do người phụ trách đó tạo ra, thực sự phục vụ khái niệm khám phá âm nhạc mà chúng tôi vừa thấy.

Tiếp theo, chúng tôi có loại Radio Show.

Các chương trình phát thanh như "New Music Daily của Zane Lowe" và "Pop Hits Radio của Brooke Reese" là một cách khác để khám phá âm nhạc mới thông qua các chuyên gia dày dạn kinh nghiệm.

Giống như loại Curator, các chương trình phát thanh cũng có mối quan hệ danh sách phát để tìm âm nhạc mà chương trình phát thanh có.

Giống như hai loại mới này giữ mối quan hệ với danh sách phát, chúng tôi cũng đang hiển thị hai mối quan hệ mới trên loại Danh sách phát, "Trình quản lý" và "RadioShow" cho logic đảo ngược: đưa ra một danh sách phát, chúng tôi có thể dễ dàng có được cấu trúc của thực thể đã tạo danh sách phát đã nói.

MusicKit cho phép tìm kiếm danh mục nội dung từ rất nhiều loại và bây giờ chúng tôi đang thêm hỗ trợ cho các loại mặt hàng mới của mình, như người phụ trách và chương trình phát thanh.

Danh sách tiếp tục phát triển, và kết quả là, việc xây dựng giao diện người dùng tốt ngày càng trở nên khó khăn hơn.

Đó là lý do tại sao năm nay, chúng tôi sẽ giúp bạn dễ dàng hơn nhiều thông qua các kết quả và đề xuất hàng đầu.

Chúng ta hãy xem xét tiện ích mà những cải tiến này mang lại cho giao diện người dùng.

Khi nhập để tìm kiếm nội dung, bạn có thể muốn cung cấp hỗ trợ tự động hoàn thành mạnh mẽ, liên quan đến âm nhạc.

Đó là nơi các đề xuất phát huy tác dụng, cung cấp các điều khoản mà mọi người có thể đang cố gắng đạt được.

Bạn thậm chí có thể tiến thêm một bước nữa và hiển thị các kết quả hàng đầu để truy cập nhanh vào những gì mọi người có thể đang tìm kiếm.

Để có kết quả tốt nhất, bạn có thể không quan tâm đến loại mặt hàng, mà thay vào đó muốn tập trung vào mức độ liên quan.

Đây là sức mạnh của những kết quả hàng đầu.

Bây giờ, chúng ta hãy xem việc triển khai điều này sẽ như thế nào, bắt đầu với Kết quả hàng đầu.

Ở đây chúng tôi có cách hiện có để tạo yêu cầu tìm kiếm danh mục, yêu cầu cụm từ tìm kiếm và các loại mục mà bạn muốn đại diện.

Phản hồi bao gồm các bộ sưu tập được phân loại theo các loại được yêu cầu, có nghĩa là nhiều danh sách các kết quả cụ thể của loại.

Mặc dù điều này thật tuyệt, chúng tôi muốn hiển thị một danh sách duy nhất các kết quả phù hợp nhất là loại bất khả tri.

Và yêu cầu thông tin này đơn giản như thêm một dòng.

Ở đây chúng tôi đang đặt thuộc tính includeTopResults theo yêu cầu thành true và một thuộc tính mới được điền vào phản hồi.

Thuộc tính mới này được đặt tên là topResults chứa các mục thuộc bất kỳ loại nào được yêu cầu.

Đây là đầu ra của câu lệnh in trông như thế nào.

Chúng ta có thể thấy rằng kết quả hàng đầu được trả về là sự kết hợp của các bài hát, nghệ sĩ và album trong một bộ sưu tập duy nhất và được sắp xếp theo mức độ liên quan.

Bây giờ tôi sẽ chỉ cho bạn cách giúp mọi người đến đích tìm kiếm của họ nhanh hơn với Gợi ý.

Đơn giản chỉ cần tạo một yêu cầu đề xuất với một thuật ngữ chuỗi.

Khi gọi phản hồi, bạn sẽ nhận được phản hồi đề xuất.

Phản hồi chứa một loạt các Đề xuất.

Và mỗi đề xuất bao gồm một thuật ngữ hiển thị phù hợp với giao diện người dùng của bạn, cũng như một cụm từ tìm kiếm.

Khi mọi người chọn một đề xuất, bạn có thể tìm nạp các kết quả tương ứng bằng cách thực hiện yêu cầu tìm kiếm với cụm từ tìm kiếm.

Bảng xếp hạng danh mục là một cách tuyệt vời để cập nhật những bài hát phổ biến nhất.

MusicKit cung cấp nhiều loại bảng xếp hạng khác nhau để xem những gì đang thịnh hành.

Các loại bảng xếp hạng được cung cấp là các bảng xếp hạng hàng đầu, chẳng hạn như Bài hát hàng đầu hoặc Album hàng đầu, tương ứng với âm nhạc được chơi nhiều nhất, bảng xếp hạng thành phố và top 100 hàng ngày.

Bạn cũng có thể chỉ định các biểu đồ được yêu cầu để được lọc theo một thể loại cụ thể.

Việc truy xuất các biểu đồ này thông qua mã cực kỳ đơn giản.

Yêu cầu biểu đồ danh mục tuân theo các mẫu đã được thiết lập đã được sử dụng trong yêu cầu tìm kiếm danh mục.

Đầu tiên, khởi tạo một yêu cầu biểu đồ.

Sau đó, bạn có thể chỉ định các loại biểu đồ bạn muốn.

Theo mặc định, điều này sẽ tìm nạp nội dung được chơi nhiều nhất, nhưng bạn cũng có thể bao gồm các bảng xếp hạng hàng đầu toàn cầu hàng ngày và bảng xếp hạng hàng đầu thành phố.

Cuối cùng, chỉ cần chỉ định các loại bạn muốn biểu đồ của mình chứa.

Và thế là xong.

Khi chúng tôi truy cập biểu đồ danh sách phát đầu tiên trong phản hồi, chúng tôi nhận được Biểu đồ MusicCatalog đại diện cho các bảng xếp hạng hàng đầu toàn cầu hàng ngày.

Các mục của nó là danh sách phát như "Top 100: Global" và "Top 100: USA".

Nếu bạn đã tìm nạp các biểu đồ danh mục bằng cách sử dụng MusicDataRequest trong quá khứ, bạn không còn cần nữa, vì MusicKit sẽ thực hiện công việc cho bạn, với hỗ trợ phân trang được tích hợp trong bộ sưu tập các mặt hàng.

Vào năm 2021, chúng tôi đã giới thiệu những trải nghiệm âm thanh đột phá với âm thanh đa chiều thực sự và rõ ràng: Âm thanh không gian với sự hỗ trợ cho Dolby Atmos.

Trải nghiệm nhập vai này đã có sẵn cho hàng nghìn bài hát và bây giờ bạn có thể truy cập dữ liệu này.

MusicKit hiển thị tài nguyên âm thanh nào có sẵn cho bất kỳ bài hát hoặc album nào thông qua Audio Variants, vì vậy bây giờ, bạn có thể chuyển tiếp thông tin này cho người khác.

Ví dụ về các biến thể âm thanh là Âm thanh không gian đã được đề cập trước đó với Dolby Atmos, Âm thanh không mất dữ liệu và hơn thế nữa.

Chúng tôi cũng đang giới thiệu một thuộc tính boolean mới cùng với các biến thể âm thanh, là Apple Digital Master, là bản chính chất lượng cao nhất được hỗ trợ.

Vì siêu dữ liệu này được hiển thị ở cấp độ mục, các biến thể âm thanh hoàn hảo để xem chi tiết, cho phép bạn đạt được giao diện người dùng như thế này.

Ở đây chúng tôi có một cái nhìn chi tiết của một album.

Và ở đây, chúng ta có thể thấy các huy hiệu thích hợp dựa trên thuộc tính biến thể âm thanh đã đề cập trước đó, cho người dùng biết chất lượng âm thanh mà họ có thể mong đợi.

Trong trường hợp này, âm thanh không gian và âm thanh không mất dữ liệu có sẵn cho album cụ thể này.

Bây giờ hãy xem cách chúng ta có thể viết mã để đạt được điều này.

Tải các biến thể âm thanh giống như tải bất kỳ thuộc tính mở rộng nào khác.

Lấy một album hoặc bài hát hiện có, trong trường hợp này là một album và sử dụng phương pháp with để tải thuộc tính mở rộng audioVariants.

Bây giờ album chi tiết của bạn có thuộc tính audioVariants được điền vào.

Ở đây chúng ta có thể thấy thuộc tính biến thể âm thanh, là một mảng có phần tử là AudioVariant.

Với những giá trị này, bạn có thể chỉ ra trong giao diện người dùng của mình các tài nguyên âm thanh có sẵn cho phần tử cụ thể đó, giống như chúng ta đã thấy trước đó.

Bây giờ, điều này thật tuyệt, nhưng bạn có thể muốn hiển thị các huy hiệu âm thanh này không chỉ ở chế độ xem cấp cao nhất hoặc chi tiết.

Đó là lý do tại sao chúng tôi cũng đang tiến thêm một bước nữa và phơi bày biến thể âm thanh chủ động cho trình phát nhạc.

Truy cập biến thể âm thanh đang hoạt động cho phép hiển thị trực quan về chất lượng âm thanh cho mục hiện đang phát, chẳng hạn như Dolby Atmos trong chế độ xem này.

Và API trình phát MusicKit tự động chọn chất lượng âm thanh chính xác dựa trên cài đặt người dùng và điều kiện mạng.

Để truy cập đặc điểm hoạt động từ trình phát, trước tiên, chúng tôi truy cập trạng thái phát lại của ApplicationMusicPlayer trong một đối tượng quan sát được.

Sau đó, chúng tôi có thể truy cập audioVariant đang hoạt động trực tiếp từ trạng thái phát lại Bây giờ, chúng tôi chỉ cần kiểm tra thuộc tính audioVariant để xem đó có phải là dolbyAtmos không và thêm giao diện người dùng bổ sung nếu có.

Bởi vì trạng thái phát lại là một đối tượng quan sát, chế độ xem này sẽ tự động cập nhật bất cứ khi nào mục hiện đang phát thay đổi, đảm bảo chế độ xem của bạn luôn được cập nhật.

Bây giờ chúng ta đã xem qua một số bổ sung danh mục, hãy đi sâu vào việc tìm nạp nội dung được cá nhân hóa.

Nội dung được cá nhân hóa là dữ liệu dành riêng cho người đăng ký, cung cấp trải nghiệm độc đáo và phù hợp cho mọi người dùng trong ứng dụng của bạn.

Thông thường, nội dung được cá nhân hóa yêu cầu xác thực đặc biệt và mã thông báo người dùng, nhưng trong khuôn khổ MusicKit, chúng tôi đã tự động hóa tất cả để bạn không phải đối phó với bất kỳ rắc rối nào.

Nội dung được cá nhân hóa mà chúng tôi đang mang đến cho các nhà phát triển là quyền truy cập vào các mục đã chơi gần đây và các đề xuất cá nhân.

Nội dung được phát gần đây là một phần dữ liệu có giá trị cho trải nghiệm tiêu thụ âm nhạc của một người.

Nó cho phép truy cập nhanh chóng và dễ dàng vào các mục âm nhạc mà bạn biết họ thích.

Và khi nghe nhạc mới, nó cho phép mọi người sau này quay lại và tham khảo lịch sử của họ.

Để tìm nạp các vùng chứa đã phát gần đây như album, danh sách phát và trạm, bạn có thể tạo yêu cầu vùng chứa đã phát gần đây.

Lưu ý rằng nếu bạn phát một bài hát từ danh sách phát hoặc album, loại vùng chứa sẽ được truy xuất.

Trong phản hồi, bạn sẽ tìm thấy các mục âm nhạc được phát gần đây, cung cấp các trình truy cập tiện lợi cho tiêu đề, phụ đề và tác phẩm nghệ thuật.

Bạn cũng có thể tìm nạp các mục đã chơi gần đây thuộc các loại cụ thể hơn, như bài hát hoặc đài.

Ở đây, chúng tôi tạo một yêu cầu đã chơi gần đây, chỉ định loại Bài hát thông qua tham số chung, được biểu thị bằng dấu ngoặc nhọn.

Phản hồi của chúng tôi bây giờ chỉ chứa những bài hát mà chúng tôi đã chơi.

Bây giờ, vào các đề xuất cá nhân.

Các đề xuất cá nhân cho phép trải nghiệm ứng dụng của bạn cảm thấy thân mật và hấp dẫn hơn vì chúng được tạo ra dựa trên thư viện và lịch sử nghe của người dùng.

Các đề xuất được sắp xếp độc đáo theo chủ đề, dẫn đến các nhóm theo thể loại, nghệ sĩ, bộ sưu tập như "Made for You" và hơn thế nữa.

Để tìm nạp các đề xuất cá nhân, chỉ cần tạo một yêu cầu đề xuất cá nhân.

Phản hồi là một tập hợp các khuyến nghị.

Khi chúng tôi ghi lại đề xuất đầu tiên, chúng tôi có thể thấy rằng yếu tố cụ thể này đại diện cho đề xuất "Made for You".

Các đề xuất có ID, tiêu đề và nextRefreshDate.

NextRefreshDate đại diện cho ngày giờ khi đề xuất này nên được làm mới cho các đề xuất cập nhật nhất.

Thuộc tính danh sách phát chứa tất cả các danh sách phát được tạo cho tôi.

Hãy xem xét một ví dụ khác về đề xuất.

Ở đây chúng tôi sẽ in ra yếu tố thứ hai của phản hồi đề xuất.

Tôi nghe rất nhiều nhạc thay thế, và đề xuất này bao gồm sự kết hợp của các loại khác nhau, trong trường hợp này là Album và Danh sách phát.

Chúng được nhóm lại trong một bộ sưu tập các mặt hàng duy nhất, được sắp xếp theo mức độ liên quan, giống như các kết quả hàng đầu để tìm kiếm danh mục.

Bây giờ, hãy tiến thêm một bước nữa và nói về cách bạn có thể tạo ra những trải nghiệm phù hợp hơn nữa xung quanh âm nhạc bằng cách kết hợp nội dung từ thư viện của người dùng vào ứng dụng của bạn.

Năm nay, MusicKit cho phép ứng dụng của bạn tìm nạp các mục từ thư viện với hai loại yêu cầu: yêu cầu thư viện và yêu cầu phân đoạn thư viện, tìm kiếm nội dung trong thư viện của người dùng và tải các thuộc tính và mối quan hệ mở rộng cụ thể từ thư viện.

Trước khi chúng tôi xem các chi tiết kỹ thuật, hãy xem cách chúng tôi có thể sử dụng nội dung thư viện để nâng cao ứng dụng của bạn.

Tôi đang làm việc trên một ứng dụng thể dục có tên Music Marathon sẽ theo dõi các lần chạy ngoài trời của bạn.

Bằng cách kết hợp MusicKit trong dự án, chúng tôi cho phép mọi người phát nhạc trực tiếp thông qua ứng dụng thay vì chuyển đổi ngữ cảnh giữa ứng dụng Apple Music và ứng dụng này.

Hãy bắt đầu một bài tập mới và tìm kiếm nội dung âm nhạc.

Ở đây chúng tôi thấy một số danh sách phát được đề xuất được truy xuất từ yêu cầu đề xuất cá nhân, để cung cấp cho mọi người quyền truy cập nhanh vào danh sách phát mà chúng tôi nghĩ rằng họ sẽ yêu thích.

Đi đến tab thư viện, chúng ta có thể thấy đó là một chế độ xem trống.

Thật tuyệt khi có thể xem tất cả danh sách phát cá nhân của tôi, vì vậy hãy viết tính năng đó.

Tôi đã có một số giao diện người dùng được thiết lập để xử lý những điều cơ bản của chế độ xem này và bây giờ tôi muốn tải danh sách phát từ thư viện của mình.

Đầu tiên, tôi sẽ đưa ra yêu cầu thư viện...

Chỉ định danh sách phát trong tham số chung để chỉ ra rằng chúng tôi muốn danh sách phát từ thư viện của người dùng.

Và tôi sẽ lưu trữ nó trong một biến cục bộ mà tôi sẽ đặt tên là "yêu cầu".

Tiếp theo tôi sẽ nhận yêu cầu này và gọi chức năng phản hồi.

Phương pháp này là một phương pháp ném không đồng bộ, vì vậy hãy thêm các từ khóa thử và chờ đợi.

Và một lần nữa lưu trữ nó trong một biến phản hồi.

Sau đó, tôi sẽ cập nhật đối tượng trạng thái để nhận được phản hồi này.

Bây giờ tất cả những gì còn lại cần làm là cập nhật danh sách để chúng ta có thể xem danh sách phát trong giao diện người dùng của tôi.

Tôi sẽ lặp lại các mục trong phản hồi bằng cách sử dụng ForEach...

Và truy xuất từng danh sách phát trong MusicItemCollection.

Bây giờ chúng ta đã có danh sách phát, tôi sẽ chuyển chúng vào PlaylistCell mà tôi đã tạo.

Bây giờ nếu chúng ta chạy lại...

Và điều hướng trở lại ứng dụng, chúng ta có thể xem tất cả danh sách phát cá nhân của tôi trong thư viện.

Bây giờ, tôi có thể chọn nghe các đề xuất cá nhân, bất cứ thứ gì từ danh mục Apple Music và thư viện cá nhân của riêng tôi.

Bây giờ chúng ta đã thấy việc truy cập nội dung thư viện dễ dàng như thế nào, hãy xem yêu cầu thư viện có thể làm gì khác.

Yêu cầu thư viện nhạc là một API mạnh mẽ để tìm nạp các mục từ thư viện của người dùng.

Trên iOS, không giống như các yêu cầu khác để tìm nạp nội dung từ danh mục nhạc, MusicLibraryRequest sẽ không thực sự tải dữ liệu từ mạng.

Thay vào đó, nó sẽ tải các mục từ bản sao thư viện của người dùng được lưu trữ trên thiết bị.

Những điều cơ bản của yêu cầu này chỉ yêu cầu bạn chỉ định loại mục nhạc nào được mong muốn.

Loại mục này được chuyển qua tham số chung của MusicLibraryRequest.

Bạn có thể áp dụng nhiều bộ lọc và tùy chọn sắp xếp theo yêu cầu để tinh chỉnh cuộc gọi của bạn để phù hợp với yêu cầu của bạn.

Yêu cầu này cũng có khả năng tìm nạp nội dung đã được tải xuống, hỗ trợ trải nghiệm ngoại tuyến hoàn toàn.

Hãy bắt đầu với yêu cầu đơn giản, cơ bản, cùng một yêu cầu mà chúng tôi đã viết trong ứng dụng Music Marathon, nhưng lần này, hãy yêu cầu Album trong thư viện.

Loại album được chỉ định thông qua tham số chung.

Để thực hiện yêu cầu, hãy gọi hàm phản hồi.

Nhìn vào đầu ra, chúng tôi có MusicLibraryResponse, trong đó các mục của nó là MusicItemCollection của tất cả các album được tìm thấy trong thư viện nhạc của người dùng.

Ở đây chúng tôi nhận thấy rằng những Album này có cùng cấu trúc Album mà bạn sẽ nhận được từ một trong những yêu cầu danh mục khác nhau của chúng tôi và có cùng khả năng.

Trong khi trong ví dụ này, chúng tôi đang tìm nạp mọi album trong thư viện, chúng tôi biết có những tình huống mà bạn chỉ muốn một tập hợp con cụ thể của album.

Đó là lý do tại sao MusicLibraryRequest cũng cho phép bạn cụ thể hơn về những mục bạn muốn lấy từ thư viện.

Hãy thực hiện cùng một yêu cầu mà chúng tôi đã viết trước đây và thêm một bộ lọc.

Ở đây, chúng tôi muốn tải tất cả các album trong đó thuộc tính isCompilation bằng true.

Khi bạn gọi phương thức lọc, tự động hoàn thành của Xcode sẽ chỉ cung cấp các đường dẫn khóa cụ thể được hỗ trợ cho loại mục bạn đang yêu cầu.

Bây giờ, câu trả lời chỉ có các album là tổng hợp.

Nhưng đó không phải là tất cả sức mạnh mà MusicLibraryRequest mang lại.

Bạn có thể xâu chuỗi nhiều bộ lọc, cung cấp cho bạn một yêu cầu tinh tế hơn với mỗi lần bổ sung.

Điều gì sẽ xảy ra nếu chúng ta muốn tất cả các bản tổng hợp của một thể loại cụ thể?

Chúng ta có thể thêm một bộ lọc khác vào yêu cầu.

Ví dụ, ở đây chúng ta có một ví dụ về Thể loại có tên là "Nhảy".

Bạn có thể lọc theo mối quan hệ của thể loại để hạn chế kết quả chỉ bao gồm các bản tổng hợp có chứa thể loại cụ thể này.

Bây giờ phản hồi của chúng tôi chỉ chứa các bản tổng hợp khiêu vũ.

Làm thế nào về việc chỉ bao gồm các bản tổng hợp khiêu vũ đã được tải xuống?

Để làm điều đó, chỉ cần đặt includeOnlyDownloadedContent thành true theo yêu cầu.

Và thế là xong.

Phản hồi giống nhau MusicLibraryResponse, nhưng các mục hiện chỉ chứa các yếu tố được tải xuống.

Như bạn có thể thấy, yêu cầu thư viện nhạc rất mạnh mẽ và mở ra các khả năng mới không thể thực hiện được với MusicDataRequest tùy chỉnh.

Nhưng MusicKit cung cấp nhiều tùy chọn hơn để tìm nạp dữ liệu từ thư viện của người dùng.

Đáp ứng Yêu cầu Phân đoạn Thư viện.

Yêu cầu được phân đoạn có thể tìm nạp các mục được nhóm theo các phần.

Kết quả là, yêu cầu được phân đoạn nhận hai tham số chung riêng biệt.

Đầu tiên đại diện cho loại phần, và thứ hai, loại mục.

Yêu cầu phân đoạn thư viện hỗ trợ các khả năng tương tự như yêu cầu thư viện thông thường, chẳng hạn như nhiều phương pháp lọc và sắp xếp khác nhau mà bạn có thể áp dụng cho các phần hoặc các mục.

Đây là cách bạn có thể tìm nạp tất cả các album được phân đoạn theo thể loại của chúng bằng cách sử dụng yêu cầu phân đoạn thư viện.

Phản hồi được phân đoạn chứa một thuộc tính có tên "phần" trong đó mỗi phần tử tương ứng với tham số chung đầu tiên của yêu cầu, Thể loại trong trường hợp này.

Mỗi thể loại không chỉ hiển thị các thuộc tính riêng của nó mà còn chứa một bộ sưu tập các album, có thể truy cập thông qua thuộc tính vật phẩm.

Những mục đó tương ứng với đối số chung thứ hai.

Ở đây, điểm nổi bật cho thấy các album có thể loại là Alternative.

Và như đã đề cập trước đây, khả năng lọc và sắp xếp cũng có sẵn cho yêu cầu được phân đoạn này.

Giả sử chúng ta muốn cùng một album, được phân chia theo thể loại, nhưng các album được sắp xếp theo tên nghệ sĩ của họ.

Chúng tôi thêm một bộ lọc sắp xếp.

Bằng cách chỉ định keyPath artistName trên Album và nói rằng chúng tôi muốn những thứ này tăng dần, chúng tôi đang sắp xếp phản hồi.

Lưu ý rằng phương thức là sortItems vì chúng tôi đang chỉ định sắp xếp được áp dụng cho các mục chứ không phải các phần.

Nếu chúng tôi muốn chỉ định các phần, một tập hợp các phần lọc và các phương thức sortSection có sẵn.

Hãy cùng xem phản hồi mới.

Bây giờ chúng ta có thể thấy rằng các album của chúng ta được sắp xếp theo thứ tự bảng chữ cái theo tên nghệ sĩ thay vì theo tiêu đề của chúng.

Cả yêu cầu thư viện và yêu cầu phân đoạn thư viện đều cực kỳ mạnh mẽ, nhưng bạn cũng có thể muốn bổ sung cho giao diện người dùng tìm kiếm nhạc của mình bằng cách thêm kết quả tìm kiếm từ thư viện của người dùng.

Vì vậy, chúng tôi đã thêm một yêu cầu có cấu trúc mới hoạt động gần như giống hệt với tìm kiếm danh mục, nhưng thay vì tải kết quả từ danh mục, nó tìm thấy các mục có liên quan trong thư viện của người dùng.

Cũng giống như đối tác danh mục của nó, yêu cầu tìm kiếm thư viện chỉ yêu cầu cụm từ tìm kiếm và một mảng các loại.

Bây giờ chúng ta đã thấy các cách khác nhau để truy xuất các mục từ thư viện của người dùng, còn việc tải các thuộc tính và mối quan hệ mở rộng thì sao?

Như bạn có thể đã biết, bản phát hành ban đầu của MusicKit đã giới thiệu phương thức with, tải các thuộc tính này từ Apple Music API một cách đơn giản.

Năm nay, chúng tôi đang tăng cường dòng điện bằng phương pháp để cũng lấy một tham số nguồn ưa thích.

Nguồn ưa thích này chỉ ra nơi tải dữ liệu, cho các thuộc tính và mối quan hệ mở rộng có sẵn trong cả danh mục Apple Music và thư viện của người dùng.

Và đối với các thuộc tính chỉ tồn tại trong danh mục hoặc thư viện, chúng vẫn sẽ được tìm nạp bất kể nguồn ưa thích nào để đảm bảo không có gì bị bỏ qua.

Ngoài ra, bạn có thể sử dụng chức năng này bất kể mục ban đầu đến từ đâu, cho dù đó là yêu cầu danh mục, yêu cầu thư viện hay nơi khác.

Tất cả chỉ hoạt động.

Ở đây chúng ta có cách nhận được mối quan hệ của một vật phẩm âm nhạc.

Chúng tôi đang tải các bản nhạc của một album và khi chúng tôi hiển thị đầu ra, chúng tôi có thể xem tất cả các bản nhạc cho album đó.

Tuy nhiên, với việc bổ sung mới thuộc tính preferredSource, chúng tôi có thể chỉ định rằng chúng tôi muốn tìm nạp mối quan hệ này từ thư viện.

Bây giờ đầu ra của chúng tôi chỉ chứa các bản nhạc của album được tìm thấy trong thư viện.

Với nhiều cách khác nhau mà bây giờ bạn có thể tìm nạp các mục từ thư viện của người dùng, chỉ có ý nghĩa khi cho phép người dùng có thể tương tác trực tiếp với thư viện của họ thông qua MusicKit.

Hãy quay trở lại ứng dụng mẫu của tôi, Music Marathon, để xem một số khả năng mà thư viện cung cấp.

Khi tôi đang tập luyện, tôi muốn duyệt qua một số đề xuất cá nhân của mình.

Khi tôi xem qua các bản nhạc, tôi nhận ra rằng một trong những bài hát này sẽ hoàn hảo cho danh sách phát tập luyện của tôi.

Nếu giữ một trong những ô này, một menu ngữ cảnh sẽ bật lên, cho phép tôi thêm bài hát này vào danh sách phát.

Khi chúng tôi nhấn nó, một cửa sổ bật lên của tất cả danh sách phát của tôi sẽ xuất hiện trở lại.

Hãy viết mã để thêm bản nhạc đã chọn vào bất kỳ danh sách phát nào tôi chọn.

Tôi đã chuyển mục đã chọn vào ô AddToPlaylistCell của chúng tôi, vì vậy tất cả những gì chúng tôi phải làm là truy cập MusicLibrary thông qua phiên bản được chia sẻ.

Chúng tôi sẽ gọi phương thức "thêm", chỉ định bản nhạc đã chọn của chúng tôi và danh sách phát mà chúng tôi muốn thêm vào.

Phương pháp này cũng là một chức năng ném không đồng bộ, vì vậy chúng tôi thêm một lần nữa các từ khóa thử và chờ đợi.

Cuối cùng, chúng tôi sẽ loại bỏ bộ chọn bằng cách đặt biến ràng buộc isShowingPlaylistPicker thành sai.

Bây giờ nếu chúng ta chạy lại và thêm một bản nhạc vào danh sách phát và chọn một trong các danh sách phát của chúng ta, chúng ta sẽ thấy mục này được thêm vào.

Điều hướng trở lại tab thư viện trong ứng dụng, chúng ta có thể thấy bài hát hiện đã được thêm vào danh sách phát tập luyện của chúng ta.

Và đó là cách đơn giản để thêm một mục vào danh sách phát.

Hãy xem xét một số chức năng khác mà thư viện cung cấp.

Nhiều cách khác để tương tác với thư viện là thêm nội dung vào thư viện, tạo danh sách phát và chỉnh sửa siêu dữ liệu và danh sách theo dõi của danh sách phát.

Thêm nội dung vào thư viện nhạc của người dùng cho phép mọi người tìm thấy các bài hát hoặc album cụ thể trong tab thư viện của ứng dụng Apple Music, cũng như đồng bộ hóa trên tất cả các thiết bị khi "Đồng bộ hóa Thư viện" được bật trong Cài đặt.

Cung cấp chức năng này trực tiếp trong ứng dụng của bạn giúp mọi người không chuyển đổi ngữ cảnh giữa ứng dụng Apple Music và ứng dụng của bạn, vì vậy họ có thể tiếp tục tham gia vào nội dung bạn đang cung cấp.

Ngoài ra, bằng cách tích hợp thêm vào thư viện cùng với các yêu cầu thư viện mới được giới thiệu, ứng dụng của bạn có thể hưởng lợi ngay lập tức từ những kết quả này, giúp người dùng dễ dàng truy cập vào nội dung họ yêu thích.

Ngay cả với dịch vụ mạnh mẽ này, bạn vẫn có thể muốn tạo ra những trải nghiệm âm nhạc cụ thể.

Vì vậy, năm nay, chúng tôi sẽ đưa việc tạo và chỉnh sửa danh sách phát vào MusicKit.

Bây giờ bạn có thể tạo danh sách phát thay mặt cho người dùng của mình.

Chúng tôi cũng cho phép các mục, chẳng hạn như bài hát hoặc thậm chí toàn bộ album, được thêm vào bất kỳ danh sách phát đủ điều kiện nào trong thư viện của người dùng.

Tạo danh sách phát thật tuyệt vời để nhóm nội dung mà mọi người yêu thích hoặc phù hợp với bất kỳ tâm trạng nào mà ứng dụng của bạn muốn thiết lập.

Và bằng cách thêm nội dung vào danh sách phát hiện có, bạn cho phép các công cụ khám phá âm nhạc khác nhau mà MusicKit cung cấp ảnh hưởng trực tiếp đến mọi người.

Bây giờ bạn cũng có thể chỉnh sửa danh sách phát mà bạn đã tạo, có thể chỉnh sửa danh sách bài hát và siêu dữ liệu để đảm bảo mọi thứ đều như bạn muốn.

Và đó là những cách bạn có thể tương tác với thư viện của người dùng từ bên trong ứng dụng của mình.

Để kết thúc, MusicKit đã nhận được một số nâng cấp lớn trong năm nay.

Dễ dàng kết hợp các cải tiến danh mục của chúng tôi cho các loại, thuộc tính mới và tăng cường tìm kiếm cho các ứng dụng hiện có của bạn để có trải nghiệm tốt hơn nữa.

Tích hợp nội dung và chức năng thư viện để mở khóa các khả năng hoàn toàn mới và cho phép người dùng kiểm soát trải nghiệm của họ.

Và sử dụng MusicKit có thể nâng cao nhiều loại ứng dụng khác nhau.

Các ứng dụng thể dục, trò chơi, ứng dụng truyền thông xã hội, ứng dụng lập bản đồ và hơn thế nữa đều có thể hưởng lợi từ việc chơi hoặc chia sẻ nhạc.

Để tiến xa hơn nữa, hãy đảm bảo kiểm tra một số phiên liên quan.

Đi sâu hơn vào Swift và tìm hiểu về những bổ sung mới cho ngôn ngữ để tận dụng tối đa MusicKit và các Khung Apple khác.

Kiểm tra phiên MusicKit từ năm 2021 để tìm hiểu cách thiết lập ứng dụng của bạn để sử dụng khuôn khổ, bắt đầu phát lại và trình bày các ưu đãi đăng ký.

Và nếu bạn quan tâm đến việc tích hợp với Apple Music trên Android hoặc web, chúng tôi có một phiên khác xem xét cách sử dụng Apple Music API trực tiếp.

Tôi hy vọng bạn thích phiên của chúng tôi và đảm bảo luôn cập nhật và tương tác thông qua các diễn đàn dành cho nhà phát triển của chúng tôi.

Cảm ơn bạn đã xem, và tận hưởng WWDC 2022.