10039

♪ ♪

Greg: Xin chào, tôi là Greg.

Chào mừng bạn đến với những gì mới trong Thử nghiệm StoreKit.

Trong phiên này, Peter và tôi sẽ nêu bật một số tính năng mới tuyệt vời có sẵn để thử nghiệm mua hàng trong ứng dụng trong StoreKit.

Chúng tôi sẽ bắt đầu bằng cách xem xét một số cách bạn có thể sử dụng Xcode 14 để hợp lý hóa thử nghiệm mua hàng trong ứng dụng của mình.

Tiếp theo, chúng ta sẽ xem xét một số khả năng hoàn toàn mới mà bạn có thể tận dụng để bao quát nhiều trường hợp góc hơn trong việc triển khai đăng ký trong ứng dụng của mình.

Và cuối cùng, Peter sẽ cho thấy những cải tiến mới đối với môi trường thử nghiệm hộp cát.

Chúng tôi sẽ làm việc với Food Truck, một ứng dụng cung cấp khả năng mạnh mẽ cho những người vận hành xe tải thực phẩm bán bánh rán.

Tôi đã tích hợp với StoreKit để cung cấp phiên bản đầy đủ của tính năng lịch sử bán hàng Xe tải thực phẩm và đăng ký phiên bản nâng cao của dịch vụ Nguồn cấp dữ liệu xã hội.

Trong suốt phiên, chúng tôi sẽ sử dụng Kiểm tra StoreKit trong Xcode để kiểm tra chức năng mua trong ứng dụng của ứng dụng của chúng tôi.

Trở lại WWDC 2020, chúng tôi đã giới thiệu Thử nghiệm StoreKit trong Xcode, cho phép bạn bắt đầu thử nghiệm các giao dịch mua trong ứng dụng của mình trực tiếp trong Xcode.

Năm nay, với Xcode 14, chúng tôi rất vui mừng được chia sẻ một số cập nhật cho vòng đời thử nghiệm của ứng dụng StoreKit.

Cũng giống như trước đây, bạn có thể tạo Tệp Cấu hình StoreKit trong Xcode và bắt đầu thử nghiệm triển khai mua hàng trong ứng dụng của mình mà không cần thiết lập ứng dụng trong App Store Connect.

Khi bạn đã sẵn sàng định cấu hình ứng dụng của mình trong App Store Connect, chúng tôi sẽ giới thiệu một tính năng hoàn toàn mới trong Xcode 14 để cho phép bạn sử dụng cùng một sản phẩm mua hàng trong ứng dụng mà bạn đã nhập vào App Store Connect với StoreKit Testing trong Xcode.

Nếu bạn đã có một ứng dụng trên cửa hàng, bạn có thể bắt đầu sử dụng Kiểm tra StoreKit trong Xcode ngay bây giờ mà không cần thiết lập Tệp Cấu hình StoreKit từ đầu.

Tính năng tiện lợi này cho phép bạn định cấu hình các giao dịch mua trong ứng dụng của mình một lần và sử dụng cùng một cấu hình cục bộ trong Xcode, bên trong các bài kiểm tra đơn vị của bạn, trong môi trường Sandbox và khi bạn sẵn sàng phát hành, trên App Store.

Thật dễ dàng để đồng bộ hóa các sản phẩm của bạn trong App Store Connect với Xcode.

Đầu tiên, bạn định cấu hình các sản phẩm của mình trong App Store Connect, chẳng hạn như đăng ký Social Feed+ này.

Sau đó, bạn tạo một tệp cấu hình được đồng bộ hóa trong Xcode sẽ tải dữ liệu sản phẩm vào Xcode.

Nếu bạn muốn thực hiện thay đổi, ví dụ như cập nhật tiêu đề tiếng Anh Hoa Kỳ, bạn có thể thực hiện thay đổi trong App Store Connect và đồng bộ hóa lại Cấu hình của mình trong Xcode.

Bạn cũng có thể chuyển đổi cấu hình mà bạn đã đồng bộ hóa thành tệp cục bộ, có thể chỉnh sửa để thực hiện các thay đổi nhanh chóng.

Chuyển đổi cấu hình được đồng bộ hóa sang cấu hình cục bộ là thao tác một chiều, để đồng bộ hóa lại, bạn sẽ cần tạo một tệp cấu hình mới.

Tôi đã bắt đầu bằng cách thiết lập một nhóm đăng ký cho Social Feed+, một phiên bản nâng cao của dịch vụ Social Feed mà ứng dụng Food Truck cung cấp.

Hãy nhảy vào Xcode và xem cách sử dụng các sản phẩm này với Kiểm tra StoreKit trong Xcode.

Tôi có dự án Xe tải Thực phẩm đang mở trên máy Mac của mình.

Để bắt đầu, chúng tôi sẽ tạo một Tệp Cấu hình StoreKit mới bằng cách vào Menu Tệp, tạo một tệp mới, lọc theo StoreKit và nhấp vào tiếp theo.

Trong Xcode 14, khi chúng tôi tạo một tệp cấu hình mới, chúng tôi nhận được hộp kiểm này để cho phép giữ tệp đồng bộ với một ứng dụng trong App Store Connect.

Để tạo một tệp cục bộ, hãy điền tên và bỏ chọn hộp.

Để thiết lập đồng bộ hóa, chúng ta chỉ cần chọn hộp và xác nhận rằng nhóm và ứng dụng chính xác đã được chọn.

Nếu muốn, chúng ta có thể chọn một nhóm và ứng dụng khác bằng cách sử dụng các menu chọn.

Chúng tôi nhấp vào tiếp theo và chọn một nơi nào đó để lưu tệp của chúng tôi.

Ngay sau khi chúng tôi lưu tệp, siêu dữ liệu mua hàng trong ứng dụng bắt đầu đồng bộ hóa từ App Store Connect.

Trong khi dữ liệu đang tải xuống, chúng tôi có thể tiếp tục làm việc trên ứng dụng của mình và theo dõi tiến trình của nó trong Thanh hoạt động.

Khi quá trình đồng bộ hóa kết thúc, bạn sẽ nhận thấy tệp này trông khác với Tệp Cấu hình StoreKit thông thường.

Đó là bởi vì tệp được đồng bộ hóa ở trạng thái chỉ đọc.

Chúng ta có thể xem nhanh tất cả dữ liệu trong Xcode, nhưng để thực hiện các thay đổi, chúng ta phải mở App Store Connect.

Tôi có sản phẩm Social Feed+ hàng tháng trong Safari.

Hãy cập nhật tiêu đề tiếng Anh cho sản phẩm này bằng cách thêm hậu tố để giúp phân biệt sản phẩm với kế hoạch hàng năm.

Bây giờ điều này đã được cập nhật, hãy lưu và quay lại Xcode.

Để thay đổi này phản ánh trong tệp cấu hình của chúng tôi, chúng tôi chỉ cần nhấn nút đồng bộ hóa này ở góc dưới cùng bên trái.

Khi quá trình đồng bộ hóa hoàn tất, chúng ta có thể thấy sự thay đổi được phản ánh trong Xcode.

Mặc dù tệp được đồng bộ hóa chỉ đọc, chúng tôi vẫn có thể sao chép dữ liệu sang tệp cục bộ để thực hiện các thay đổi nhanh chóng bên trong Xcode.

Ngoài việc sao chép các mục từ tệp cấu hình, chúng tôi cũng có thể chuyển đổi toàn bộ tệp được đồng bộ hóa thành tệp cục bộ, có thể chỉnh sửa.

Tất cả những gì chúng ta cần làm là mở tệp đã đồng bộ hóa của mình, vào menu trình chỉnh sửa và nhấp vào "Chuyển đổi sang Cấu hình StoreKit cục bộ".

Hãy nhớ rằng, bạn không thể hoàn tác thao tác này sau khi chuyển đổi tệp.

Để đồng bộ hóa lại với ứng dụng, bạn sẽ cần tạo một Tệp Cấu hình StoreKit mới.

Tôi muốn giữ tệp này đồng bộ với App Store Connect, vì vậy hãy hủy bỏ cảnh báo này.

Bây giờ chúng ta đã đồng bộ hóa tệp của mình, hãy định cấu hình môi trường thử nghiệm của chúng ta.

Để bắt đầu, chúng tôi sẽ mở trình chỉnh sửa sơ đồ.

Chọn hành động chạy và chọn các tùy chọn.

Trong các tùy chọn, chúng ta có thể chuyển đổi giữa các môi trường StoreKit khác nhau từ menu chọn.

Nếu chúng tôi chọn "Không có", chúng tôi sẽ kết nối với Sandbox và nếu chúng tôi chọn "Xe tải thực phẩm", chúng tôi sẽ kết nối với môi trường Xcode.

Thật dễ dàng để chuyển đổi giữa các môi trường tùy thuộc vào nhu cầu thử nghiệm hiện tại của chúng tôi và cả hai môi trường hiện sẽ sử dụng cùng một sản phẩm và siêu dữ liệu đăng ký.

Hãy chọn tệp cấu hình được đồng bộ hóa của chúng tôi ngay bây giờ.

Bây giờ chúng tôi đã thiết lập StoreKit trong Xcode, vì vậy hãy bắt đầu thử nghiệm.

Vì chúng tôi đang sử dụng ứng dụng SwiftUI, chúng tôi có thể xem trước cửa hàng đăng ký của mình ngay trong Xcode.

Bắt đầu từ Xcode 14, các sản phẩm từ các tệp cấu hình StoreKit sẽ tải ngay vào bản xem trước SwiftUI.

Điều này giúp việc xây dựng và kiểm tra giao diện người dùng cửa hàng trông tuyệt vời trở nên cực kỳ dễ dàng, sử dụng dữ liệu mua hàng trong ứng dụng thực tế.

Hãy cố gắng thêm một số chi tiết vào các tùy chọn sản phẩm bằng cách bao gồm phụ đề cho các sản phẩm của chúng tôi.

Chúng tôi sẽ chỉ thêm chế độ xem Văn bản chứa mô tả bản địa hóa của sản phẩm.

Và xem bản cập nhật xem trước ngay lập tức với mô tả mà chúng tôi đã thiết lập trong App Store Connect.

Tôi nghĩ điều này bây giờ trông tốt hơn rất nhiều.

Bây giờ giao diện người dùng của chúng tôi đang ở trạng thái tốt, hãy chạy ứng dụng trên iPhone và bắt đầu một số thử nghiệm chức năng.

Trong Xcode 14, có một số công cụ mới mạnh mẽ trong Trình quản lý giao dịch StoreKit.

Với ứng dụng của chúng tôi đang chạy, chúng tôi có thể mở trình quản lý giao dịch bằng cách nhấn vào biểu tượng mua hàng trong thanh gỡ lỗi.

Ở bên phải có một thanh tra giao dịch mới cho phép chúng tôi hình dung tất cả các chi tiết dưới mui xe về một giao dịch.

Công cụ này có thể hữu ích để hiểu trạng thái của một giao dịch trong ứng dụng.

Ví dụ: chúng ta có thể xem ngày đăng ký Social Feed+ này hết hạn và thông tin về các lần gia hạn sắp tới của nó.

Chúng tôi cũng có thể chuyển đến tệp cấu hình cho sản phẩm, nhóm đăng ký hoặc ưu đãi đăng ký.

Chúng ta chỉ cần nhấp vào nút nhảy bên cạnh nhóm đăng ký này.

Và chúng tôi được đưa thẳng đến Social Feed+ trong tệp cấu hình của mình.

Thanh tra này sẽ giúp chúng tôi vào cuối phiên khi chúng tôi xem xét các trường hợp thử nghiệm nâng cao hơn.

Chúng tôi cũng có thể lọc các giao dịch của mình ngay bây giờ, điều này thực sự hữu ích cho việc điều hướng danh sách các giao dịch với tất cả các gia hạn Nguồn cấp dữ liệu xã hội + này.

Trong ứng dụng của chúng tôi, bạn sẽ nhận thấy chúng tôi có quyền truy cập vào tính năng lịch sử bán hàng hàng năm.

Chúng tôi có tất cả các gia hạn đăng ký này, điều này gây khó khăn cho việc biết giao dịch nào cho phép chúng tôi có tính năng này.

Chúng tôi có thể dễ dàng tìm thấy giao dịch cho sản phẩm bằng cách bắt đầu nhập ID của nó...

Và chọn bộ lọc ID sản phẩm từ menu tự động hoàn thành.

Chúng tôi cũng có thể lọc theo ngày mua, vì vậy chúng tôi có thể chỉ tập trung vào các giao dịch mua mà chúng tôi đang thực hiện ngay bây giờ.

Vì đăng ký Social Feed+ của chúng tôi đã hết hạn, hãy vào ứng dụng và đăng ký lại.

Bây giờ chúng tôi đã xác nhận đăng ký, chúng tôi có thể thấy chỉ giao dịch mới xuất hiện.

Chúng tôi vừa xem xét một số cách để nâng cao thử nghiệm mua hàng trong ứng dụng của bạn trong Xcode, bằng cách đồng bộ hóa các sản phẩm và đăng ký từ App Store Connect, sử dụng Cấu hình StoreKit của bạn với SwiftUI Previews và tận dụng các công cụ mới trong Trình quản lý giao dịch.

Bây giờ, chúng tôi sẽ tiếp tục thử nghiệm chức năng mua hàng trong ứng dụng của Food Truck bằng cách sử dụng một số khả năng mới trong Xcode để bao gồm các trường hợp đăng ký nâng cao.

Đầu tiên, chúng tôi sẽ xem xét thử nghiệm các yêu cầu hoàn tiền, cho phép mọi người yêu cầu hoàn tiền cho các giao dịch mua của họ trong Food Truck.

Tiếp theo, chúng tôi sẽ kiểm tra mã ưu đãi, để cung cấp các chương trình khuyến mãi cho người đăng ký Social Feed+, sau đó chúng tôi sẽ xem xét việc xử lý việc tăng giá trong giao diện người dùng của Food Truck và cuối cùng, giảm sự gián đoạn không tự nguyện của Social Feed+ bằng cách hỗ trợ thử lại thanh toán và thời gian gia hạn.

Để bắt đầu thử nghiệm các yêu cầu hoàn tiền, chúng tôi sẽ điều hướng đến chế độ xem hỗ trợ này trong ứng dụng của mình, cho phép chúng tôi chọn một giao dịch gần đây để hoàn tiền.

Mã cho việc này rất đơn giản.

Tôi vừa thêm công cụ sửa đổi chế độ xem refundRequestSheet vào chế độ xem của chúng tôi và khi chúng tôi nhấn nút hoàn lại tiền, chúng tôi sẽ lật isPresented Binding thành true.

Bây giờ, hãy xem điều này đang hoạt động.

Khi Ràng buộc là đúng, bảng yêu cầu hoàn tiền xuất hiện phía trên chế độ xem của chúng tôi.

Khi thử nghiệm trong môi trường Xcode, vấn đề chúng tôi chọn tương ứng 1:1 với RevocationReason trong StoreKit API.

Hãy chọn "Vấn đề của nhà phát triển" và nhấn "Yêu cầu hoàn tiền".

Trong App Store, các yêu cầu hoàn tiền sẽ mất một thời gian để xử lý, nhưng khi thử nghiệm với Xcode hoặc Sandbox, các yêu cầu hoàn tiền sẽ ngay lập tức hoàn lại tiền cho giao dịch.

Trong trình quản lý giao dịch, chúng ta có thể xem xét thanh tra cho giao dịch cập nhật này để xem lý do thu hồi mà chúng ta vừa chọn và ngày thu hồi.

Bạn cũng có thể kiểm tra hoàn tiền bằng cách chỉ cần nhấp vào nút hoàn tiền trong trình quản lý giao dịch.

API yêu cầu hoàn tiền giúp chúng tôi cung cấp hỗ trợ khách hàng tuyệt vời cho những người sử dụng Xe tải thực phẩm.

Bây giờ chúng ta đã xem xét cách kiểm tra các yêu cầu hoàn tiền trong Xcode, hãy xem xét một số cách bạn có thể sử dụng StoreKit để xử lý các giao dịch hoàn tiền.

Sau khi hoàn trả một giao dịch, một giá trị Giao dịch được cập nhật sẽ phát ra từ chuỗi Transaction.updates.

Chúng tôi có thể sử dụng thuộc tính revocationDate và revocationReason để phát hiện các giao dịch được hoàn lại này.

Thật dễ dàng để kiểm tra hai trường hợp lý do thu hồi bằng cách chọn tùy chọn tương ứng trong bảng yêu cầu hoàn tiền trong Xcode.

Đó là cách bạn kiểm tra bảng yêu cầu hoàn tiền trong Xcode.

Điều này hoạt động trên iOS và macOS khi sử dụng môi trường Xcode hoặc Sandbox.

Để thử nghiệm với Xcode, bạn sẽ cần iPhone hoặc iPad của mình để chạy iOS hoặc iPadOS 15.2 trở lên.

Để kiểm tra với Xcode trên máy Mac của bạn, bạn sẽ cần macOS 12.1 trở lên.

Bây giờ, chúng ta hãy xem xét các mã ưu đãi đăng ký thử nghiệm.

Đối với điều này, chúng tôi sẽ sử dụng tệp Cấu hình StoreKit cục bộ của chúng tôi.

Để đưa ra ưu đãi mới cho mã, chúng tôi chọn đăng ký và nhấn "+" bên dưới bảng mã ưu đãi.

Sau đó chúng tôi có thể định cấu hình đề nghị của mình.

Chúng tôi sẽ đặt tên cho "Tháng miễn phí" này và biến nó thành ưu đãi miễn phí trong một tháng.

Cũng giống như trong App Store Connect, chúng tôi chọn khách hàng nào đủ điều kiện và liệu ưu đãi giới thiệu có thể được đổi bằng ưu đãi này hay không.

Hãy để lại cài đặt mặc định ngay bây giờ.

Bây giờ mã của chúng tôi đã được định cấu hình, chúng tôi sẽ nhấn "Xong".

Tất nhiên, nếu bạn đang đồng bộ hóa với App Store Connect, các ưu đãi đã định cấu hình của bạn sẽ tự động hiển thị trong bảng này.

Bây giờ ưu đãi của chúng tôi đã được định cấu hình, hãy điều hướng đến chế độ xem cửa hàng trong ứng dụng.

Tôi đã thêm nút này ở gần cuối chế độ xem để đổi ưu đãi đăng ký.

Nếu chúng tôi mở triển khai chế độ xem cửa hàng trong Xcode, việc triển khai mã ưu đãi cũng dễ dàng như thêm công cụ sửa đổi offerCodeRedemption vào chế độ xem của chúng tôi và lật isPresented Binding thành true khi ai đó nhấn vào nút.

Hãy xem cái này hoạt động như thế nào.

Khi chúng tôi nhấn nút, bảng đổi quà sẽ xuất hiện phía trên ứng dụng của chúng tôi.

Trong App Store, mọi người có thể nhập mã ưu đãi mà bạn tạo trong App Store Connect, nhưng trong Xcode, trải nghiệm thử nghiệm được sắp xếp hợp lý hơn nhiều.

Chúng tôi có một danh sách tất cả các ưu đãi cho mã trong tệp cấu hình của chúng tôi, được nhóm theo đăng ký mà chúng mở khóa.

Để đổi, hãy nhấn vào ưu đãi mà chúng tôi vừa tạo và nhấn nút đổi.

Bảng thanh toán xuất hiện và chúng tôi có thể thấy ưu đãi mã sẽ bắt đầu ngay sau khi thanh toán khi bạn thực hiện ưu đãi giới thiệu.

Sau khi đăng ký, chúng tôi sẽ nhận được màn hình xác nhận và bây giờ chúng tôi có thể đóng trang tính và xác minh ứng dụng của chúng tôi mở khóa quyền truy cập vào Nguồn cấp dữ liệu xã hội+.

Nếu chúng ta nhìn vào thanh tra cho giao dịch mới này, chúng ta có thể thấy ưu đãi giới thiệu hiện đang được áp dụng.

Vì ưu đãi được thanh toán khi bạn thực hiện, phần gia hạn cho thấy chúng tôi sẽ nhận được thêm hai lần gia hạn của ưu đãi giới thiệu.

Sau đó, mã tháng miễn phí mà chúng tôi vừa đổi.

Sau đó, đăng ký tiêu chuẩn sẽ gia hạn vô thời hạn.

Thanh tra viên nói rất rõ điều gì đang xảy ra với trạng thái đăng ký của chúng tôi, ngay cả với các tình huống phức tạp như nhiều ưu đãi.

Chúng tôi vừa xem xét cách định cấu hình mã ưu đãi trong cấu hình StoreKit cục bộ của chúng tôi và cách kiểm tra việc đổi chúng trên iPhone.

Mã ưu đãi là một cách tuyệt vời để cung cấp các chương trình khuyến mãi linh hoạt cho những người đăng ký trong tương lai và hiện tại của chúng tôi, và bây giờ việc bắt đầu sử dụng mã ưu đãi trong Food Truck trở nên dễ dàng hơn bao giờ hết.

Bây giờ, chúng ta hãy xem cách xử lý các ưu đãi này bằng StoreKit.

Sau khi đổi mã, cả chuỗi Transaction.updates và Status.updates sẽ phát ra các giá trị mới.

Chúng tôi có thể kiểm tra thuộc tính offerType trên giá trị giao dịch để xem liệu có ưu đãi nào được áp dụng cho giao dịch hiện tại hay không.

Trong trường hợp chúng tôi chỉ xem xét giá trị của offerType sẽ là giới thiệu, bởi vì chúng tôi cho phép người đăng ký đổi ưu đãi giới thiệu với ưu đãi lấy mã.

Trên giá trị renewalInfo, chúng ta có thể kiểm tra thuộc tính offerType để xem loại ưu đãi nào sẽ có mặt trong lần gia hạn tiếp theo.

Trong trường hợp chúng tôi vừa xem xét, chúng tôi có thể mong đợi giá trị ban đầu là giới thiệu vì chúng tôi đã sử dụng khoản thanh toán khi bạn đề nghị.

Sau hai giai đoạn đăng ký, chúng ta sẽ thấy giá trị chuyển sang mã, vì chúng ta có một ưu đãi mã được xếp chồng lên nhau.

Khi offerType là mã, chúng ta có thể sử dụng thuộc tính offerID để lấy tên tham chiếu của ưu đãi được áp dụng cho mã.

Đó là cách bạn kiểm tra các ưu đãi cho các mã trong Xcode.

Bạn có thể định cấu hình các ưu đãi cho các mã bắt đầu bằng Xcode 13.3 và kiểm tra chúng trên iPhone và iPad chạy iOS 15.4 trở lên.

Bây giờ chúng tôi đã xác minh các ưu đãi cho các mã hoạt động trong Food Truck, hãy kiểm tra cách ứng dụng của chúng tôi xử lý việc tăng giá cho Social Feed+.

Thử nghiệm tăng giá thực sự đơn giản trong Xcode.

Để bắt đầu, chúng tôi sẽ tăng giá đăng ký nguồn cấp dữ liệu xã hội hàng tháng.

Bước này là tùy chọn.

Bạn có thể để giá như cũ và vẫn mô phỏng việc tăng giá.

Quay lại trình quản lý giao dịch, tất cả những gì chúng ta cần làm là chọn giao dịch mới nhất để đăng ký và nhấn "Yêu cầu sự đồng ý tăng giá" trên thanh công cụ.

Chúng tôi có thể thấy trong trình quản lý giao dịch giao dịch của chúng tôi hiện đang ở trạng thái "Đang chờ tăng giá" và nếu chúng tôi nhìn vào thiết bị, chúng tôi sẽ nhận thấy một trang tính xuất hiện phía trên ứng dụng của mình, yêu cầu đồng ý với việc tăng giá.

Trang tính này sẽ tự xuất hiện mà không cần thêm bất kỳ mã nào, nhưng chúng tôi đã tận dụng API Tin nhắn mới để tùy chỉnh hành vi của nó.

Hãy xem cách chúng tôi tích hợp với API Tin nhắn trong mã.

Chúng tôi có một vòng lặp để lặp lại chuỗi tin nhắn ở đây và nếu chúng tôi nhận được thông báo như tăng giá, hãy đảm bảo rằng chúng tôi không có chế độ xem nhạy cảm được trình bày, như trình chỉnh sửa bánh rán.

Nếu không, chúng tôi sẽ sử dụng DisplayMessageAction để hiển thị tin nhắn.

Nếu trình chỉnh sửa bánh rán được trình bày, chúng tôi sẽ giữ giá trị Tin nhắn và hiển thị nó sau khi chỉnh sửa bánh rán kết thúc.

Hãy quay lại kiểm tra.

Trong App Store, những người đăng ký hiện tại có thể nhận được nhiều thông báo tăng giá vào những thời điểm khác nhau cho đến khi họ đưa ra quyết định hủy bỏ hoặc đồng ý với việc tăng giá.

Trong Xcode, chúng tôi có toàn quyền kiểm soát khi những tin nhắn này đến.

Mỗi lần chúng tôi nhấn nút trong trình quản lý giao dịch, chúng tôi sẽ nhận được tin nhắn lại, ngay cả khi giao dịch đã ở trạng thái tăng giá.

Bây giờ chúng ta có thể kiểm tra xem logic trì hoãn của chúng ta có thực sự hoạt động hay không.

Vì vậy tôi sẽ mở trình chỉnh sửa bánh rán...

Và gửi một tin nhắn để mở lại trang tính.

Trang tính chưa xuất hiện, nhưng nếu chúng ta rời khỏi trình chỉnh sửa bánh rán, trang tính sẽ xuất hiện như mong đợi.

Mặc dù chúng tôi có thể chấp nhận tăng giá hoặc hủy đăng ký trong trang tính, nhưng trên thực tế, người dùng có thể phản hồi việc tăng giá thông qua nguồn bên ngoài, chẳng hạn như email.

Để mô phỏng điều này, chúng ta có thể sử dụng các nút phê duyệt và từ chối trong trình quản lý giao dịch.

Vì trải nghiệm chỉnh sửa bánh rán rất tuyệt vời, tôi sẽ đồng ý với mức giá mới bằng cách nhấn Phê duyệt trong trình quản lý giao dịch.

Sử dụng StoreKit trong Xcode làm cho việc thử nghiệm một trường hợp góc phức tạp như tăng giá rất suôn sẻ.

Bây giờ chúng ta đã xem xét cách mô phỏng việc tăng giá, hãy xem cách chúng ta có thể sử dụng StoreKit để xử lý việc tăng giá trong ứng dụng của mình.

Khi kiểm tra trạng thái tăng giá, chuỗi cập nhật trạng thái sẽ phát ra các giá trị mới với mỗi thay đổi trạng thái.

Chúng tôi có thể phát hiện các bản cập nhật này trong ứng dụng của mình bằng cách kiểm tra thuộc tính priceIncreaseStatus trên giá trị RenewalInfo.

Nếu khách hàng hủy đăng ký của họ do tăng giá, chúng tôi sẽ có thể phát hiện điều này bằng cách kiểm tra thuộc tính didNotConsentToPriceIncrease trong expirationReason.

Chúng tôi cũng có thể viết các bài kiểm tra đơn vị xung quanh việc tăng giá thử nghiệm.

Để bắt đầu, việc vô hiệu hóa các hộp thoại sẽ cho phép chúng tôi kiểm tra mà không thực sự hiển thị giao diện người dùng tăng giá phía trên ứng dụng của chúng tôi.

Sau khi mua đăng ký, chúng tôi có thể sử dụng requestPriceIncreaseConsentForTransaction API để bắt đầu quá trình, chuyển ID của giao dịch mới nhất cho đăng ký.

Để xác minh giao dịch thử nghiệm đang chờ tăng giá, chúng tôi sẽ kiểm tra thuộc tính isPendingPriceIncreaseConsent.

Cuối cùng, tùy thuộc vào những gì chúng tôi đang thử nghiệm, chúng tôi có thể gọi consentToPriceIncreaseForTransaction hoặc declinePriceIncreaseForTransaction để xem ứng dụng của chúng tôi phản hồi như thế nào với các trường hợp tăng giá đã hoàn thành.

Đó là tất cả để thử nghiệm tăng giá.

Việc tăng giá có thể được kiểm tra với Xcode 13.3 trên tất cả các nền tảng.

Lưu ý rằng thông báo tăng giá chỉ có thể kiểm tra được trên iOS 15.4 trở lên.

Cuối cùng, chúng ta hãy xem xét việc thử lại thanh toán đăng ký và thời gian gia hạn.

Thử lại thanh toán là trạng thái xảy ra lỗi khi cố gắng gia hạn đăng ký, chẳng hạn như thẻ tín dụng đã hết hạn.

Trong App Store, trong quá trình thử thanh toán lại, App Store sẽ cố gắng khắc phục sự cố và khôi phục đăng ký.

Bạn có thể tùy ý kích hoạt thời gian gia hạn, cho phép mọi người tiếp tục sử dụng đăng ký của họ trong một thời gian giới hạn, khi bắt đầu trạng thái thử thanh toán lại.

Hãy để tôi chứng minh cách mô phỏng điều này khi thử nghiệm trong Xcode.

Để mô phỏng các vấn đề thanh toán khi gia hạn đăng ký, chúng tôi mở menu "Trình chỉnh sửa" trên Cấu hình StoreKit mà chúng tôi đang thử nghiệm và bật "Thử lại thanh toán khi gia hạn".

Tôi muốn Food Truck hỗ trợ thời gian ân hạn thanh toán, vì vậy hãy bật "Thời gian ân hạn thanh toán" trong thực đơn.

Chúng tôi cũng sẽ tăng tốc độ đăng ký, vì vậy chúng tôi có thể xem trạng thái thay đổi như thế nào.

Trước tiên hãy đăng ký Social Feed+.

Bây giờ, hãy đợi đến lúc gia hạn.

Khi giao dịch hết hạn, lưu ý trước tiên chúng tôi nhập trạng thái thời hạn thanh toán.

Chúng ta có thể nhìn vào thanh tra giao dịch và xem thời gian mỗi tiểu bang sẽ kết thúc.

Thời gian ân hạn thanh toán vừa hết hạn và bây giờ chúng tôi đang ở trạng thái thử lại thanh toán tiêu chuẩn.

Bất cứ lúc nào chúng ta cũng có thể sử dụng nút "Giải quyết vấn đề cho giao dịch" để mô phỏng việc sửa lỗi thanh toán.

Hãy kiểm tra giải quyết vấn đề.

Bây giờ vấn đề đã được giải quyết, chúng tôi nhận được một giao dịch mới.

Miễn là chúng tôi đã bật "Thử lại thanh toán khi gia hạn", mỗi giao dịch mới sẽ tiếp tục nhập thử lại thanh toán, vì vậy chúng tôi có thể lặp lại thử nghiệm này bao nhiêu lần tùy thích.

Xử lý Thử lại thanh toán và Thời gian ân hạn đúng cách là chìa khóa để giữ chân người đăng ký bằng cách giảm sự gián đoạn không tự nguyện.

Chúng tôi chỉ xem xét việc mô phỏng các trạng thái này với Xcode đơn giản như thế nào, vì vậy bây giờ chúng ta hãy xem xét cách xử lý chúng bằng StoreKit.

Khi trạng thái thử lại thanh toán và thời gian gia hạn thay đổi, trình tự cập nhật trạng thái sẽ phát ra một giá trị mới.

Vì chúng tôi cung cấp thời gian ân hạn thanh toán trong Food Truck, chúng tôi cần đảm bảo cung cấp cho người đăng ký quyền truy cập vào Social Feed+ trong khi họ đang trong thời gian ân hạn.

Chúng ta có thể thấy thời gian gia hạn của người đăng ký nên sử dụng thuộc tính gracePeriodExpirationDate trong bao lâu trên thông tin gia hạn.

Để kiểm tra việc thử lại thanh toán, chúng ta chỉ cần kiểm tra isInBillingRetry.

Chúng tôi cũng có thể phát hiện một trong hai trạng thái này một cách dễ dàng với thuộc tính trạng thái của trạng thái.

Nếu chúng tôi thấy một khách hàng ở một trong hai tiểu bang này, chúng tôi có thể hướng họ đến một liên kết sâu đến App Store để khắc phục sự cố thanh toán.

Nếu bạn đang sử dụng bất kỳ API quyền lợi hiện tại nào, bạn sẽ nhận được các giao dịch cho các đăng ký đã hết hạn trong khi chúng đang trong thời gian ân hạn.

Chúng tôi cũng có thể kiểm soát thời gian thử lại thanh toán và thời gian gia hạn trong các bài kiểm tra đơn vị của mình bằng cách đặt billingGracePeriodIsEnabled và shouldEnterBillingRetryOnRenewal trong phiên thử nghiệm StoreKit của chúng tôi.

Sau khi ứng dụng của chúng tôi thông báo đăng ký nhập lại thanh toán, thuộc tính hasPurchaseIssue của giao dịch thử nghiệm sẽ đúng.

Sau khi chờ đợi các bản cập nhật trạng thái khác nhau và khẳng định các bản cập nhật ứng dụng của chúng tôi như mong đợi, chúng tôi có thể sử dụng giải quyết vấn đề cho phương thức giao dịch để mô phỏng App Store khôi phục đăng ký.

Thời gian thử lại thanh toán và thời gian gia hạn có thể kiểm tra trong Xcode 13.3 trở lên trên tất cả các nền tảng.

Sau đó trong phiên họp, Peter sẽ đi vào chi tiết hơn về cách kiểm tra các trạng thái này trong Sandbox trên iOS và iPadOS 16.

Chúng tôi đã đề cập đến các trường hợp thử nghiệm nâng cao từ yêu cầu hoàn lại tiền đến xử lý thời gian thử lại thanh toán và thời gian ân hạn.

Để biết thêm chi tiết về cách sử dụng API StoreKit mới để hỗ trợ một số trường hợp này, hãy xem "Có gì mới khi mua hàng trong ứng dụng."

Đây chỉ là một cái nhìn tổng quan nhanh về những gì mới cho Thử nghiệm StoreKit trong Xcode năm nay, nhưng chúng tôi không đề cập đến mọi thứ.

Có tỷ lệ gia hạn đăng ký mới, bạn có thể kiểm tra bảng đăng ký quản lý trong ứng dụng StoreKit 2 trong Xcode và bạn có thể viết các bài kiểm tra đơn vị cho việc triển khai SKAdNetwork của mình bằng StoreKitTest.

Kiểm tra "Có gì mới trong SKAdNetwork" để tìm hiểu thêm.

Bây giờ Peter sẽ hướng dẫn bạn những gì mới trong môi trường thử nghiệm Sandbox năm nay.

Peter: Cảm ơn, Greg.

Xin chào, tôi là Peter, một kỹ sư máy chủ App Store.

Chúng tôi đã thấy các tính năng mới với Kiểm tra StoreKit trong Xcode có thể giúp bạn kiểm tra các triển khai mua hàng trong ứng dụng phức tạp hơn như thế nào.

Chúng tôi liên tục lắng nghe phản hồi của bạn và chúng tôi biết nhiều người trong số các bạn dựa vào môi trường App Store Sandbox để kiểm tra các giao dịch mua trong ứng dụng và triển khai máy chủ của mình.

Tôi rất vui được chia sẻ một số cải tiến mới mà chúng tôi đang thực hiện trong Sandbox để bạn có thể dễ dàng kiểm tra ứng dụng và máy chủ của mình hơn trong môi trường thử nghiệm trực tuyến.

Chúng tôi sẽ giới thiệu các cải tiến cho việc tạo Sandbox Apple ID, API Kết nối App Store và mô phỏng lỗi thanh toán.

Để sử dụng môi trường hộp cát, trước tiên chúng ta cần thiết lập ID Apple Hộp cát trong App Store Connect.

Bạn sẽ nhận thấy chúng tôi đã chuyển danh sách người kiểm tra Sandbox sang thanh điều hướng trên trang Người dùng và Truy cập.

Tại đây, chúng ta có thể tạo một người thử nghiệm mới bằng nút Plus.

Chúng tôi đã sắp xếp hợp lý quá trình tạo bằng cách xóa một số trường khỏi cửa sổ trình kiểm tra mới.

Hiện tại chúng tôi chỉ yêu cầu số lượng thông tin tối thiểu, vì vậy bạn có thể tiếp tục tạo tài khoản của mình mà không cần thông tin không cần thiết.

Bạn cũng có thể sử dụng "biểu tượng dấu cộng" trong địa chỉ email của mình, vì vậy bạn không cần tạo địa chỉ email hoàn toàn mới cho mỗi người kiểm tra.

Chúng tôi biết việc tạo mật khẩu mạnh có thể tẻ nhạt và chúng tôi cũng đã làm điều này dễ dàng hơn.

Chúng tôi cũng đã thêm các đề xuất nội tuyến để giúp mật khẩu của bạn an toàn hơn.

Chúng tôi hy vọng biểu mẫu tạo ID Apple được sắp xếp hợp lý và gợi ý phức tạp mật khẩu tốt hơn, sẽ giúp bạn dành ít thời gian hơn để thiết lập tài khoản và nhiều thời gian hơn để phát triển ứng dụng của mình.

App Store Connect là vị trí trung tâm nơi bạn tạo và quản lý Sandbox Apple IDs, cũng như quản lý nội dung và tổ chức ứng dụng của bạn.

Trong vài năm qua, chúng tôi đã thêm các tính năng vào Sandbox mà bạn đã yêu cầu, như thay đổi khu vực tài khoản Sandbox và xóa lịch sử mua hàng.

Nhiều tính năng trong số này có thể truy cập được trong App Store Connect hoặc trên thiết bị trong trang Sandbox Manage Subscriptions.

Cuối năm nay, chúng tôi sẽ đưa một số tính năng Sandbox này lên App Store Connect API, bao gồm truy vấn danh sách ID Sandbox Apple, xóa lịch sử mua hàng và đặt trạng thái mua hàng bị gián đoạn.

Điều này sẽ cho phép thử nghiệm nhanh hơn với các tài khoản hộp cát của bạn và giúp bạn thiết lập các máy khách tự động hóa cho các công cụ kiểm tra thường được sử dụng.

Cuối cùng, tôi vui mừng thông báo hỗ trợ mô phỏng thất bại thanh toán trong Sandbox.

Vào năm 2018, chúng tôi đã công bố Thử lại thanh toán và Thời gian ân hạn để tự động gia hạn đăng ký, để giúp bạn giảm sự gián đoạn không tự nguyện.

Kể từ khi ra mắt vào năm 2019, Billing Grace Period đã cho phép bạn khôi phục 300 triệu ngày dịch vụ trả phí cho khách hàng của mình.

Điều này dẫn đến doanh thu gia tăng cho doanh nghiệp của bạn trong khi khách hàng của bạn không bị gián đoạn dịch vụ.

Mặc dù nhiều người trong số các bạn đã xử lý các trường hợp thất bại thanh toán trong quá trình sản xuất, chúng tôi muốn cung cấp nhiều kịch bản thử nghiệm hơn trong Sandbox, vì vậy bạn có thể kiểm tra và xử lý các lỗi thanh toán trước khi ứng dụng của bạn được xuất bản trên App Store.

Bạn sẽ có thể sử dụng trang Cài đặt Tài khoản Hộp cát mới để bật mô phỏng lỗi thanh toán cho tài khoản của mình, kiểm tra lỗi đăng ký nền trước và nền trong ngữ cảnh ứng dụng của bạn và xác minh trạng thái đăng ký với verifyReceipt, API Máy chủ App Store và Thông báo Máy chủ App Store V2 trong Hộp cát.

Để biết thêm thông tin về Thử lại thanh toán và giảm sự gián đoạn không tự nguyện, tôi đề xuất phiên WWDC 2018, "Đăng ký kỹ thuật".

Năm nay, chúng tôi sẽ giới thiệu một công tắc trong Cài đặt Tài khoản Hộp cát mới để mô phỏng nỗ lực mua hàng trong ứng dụng không thành công.

Đây cũng là ngôi nhà mới cho trang đăng ký Sandbox.

Với tính năng mô phỏng thất bại thanh toán được bật, các giao dịch mua trong ứng dụng tiền cảnh sẽ thất bại.

Hành vi này phù hợp với hành vi khi phương thức thanh toán của khách hàng của bạn bị từ chối.

Mô phỏng lỗi thanh toán cũng đảm bảo rằng các trạng thái đăng ký tự động gia hạn phù hợp với các trạng thái đăng ký lỗi thanh toán trong sản xuất.

Điều này có nghĩa là bạn có thể kiểm tra tin nhắn trong ứng dụng cho những khách hàng đang gặp vấn đề về thanh toán.

Các trạng thái đăng ký này sẽ được phản ánh trong biên lai mua hàng trong ứng dụng của bạn, được xác minh bằng Thông báo V2.

Hãy xem lại vòng đời đăng ký.

Khi bạn mua đăng ký tự động gia hạn trong Sandbox, bạn đã nhận được Thông báo V2, như ĐÃ ĐĂNG KÝ và DID_RENEW.

Khi bạn kiểm tra các nỗ lực mua hàng trong ứng dụng không thành công cho một tài khoản có đăng ký đang hoạt động, lần gia hạn tiếp theo sẽ rơi vào trạng thái thử lại thanh toán.

Bây giờ bạn sẽ nhận được thông báo thử lại thanh toán trong Sandbox, như DID_FAIL_TO_RENEW.

Nếu bạn vô hiệu hóa mô phỏng thất bại thanh toán trước khi chúng tôi ngừng cố gắng khôi phục việc gia hạn đăng ký của bạn, nỗ lực gia hạn tiếp theo sẽ thành công và bạn sẽ nhận được thông báo DID_RENEW, với loại phụ BILLING_RECOVERY.

Nếu chúng tôi đạt đến giới hạn cho các lần thử lại và mô phỏng lỗi thanh toán được bật, đăng ký sẽ hết hạn và bạn sẽ nhận được EXPIRED, với loại phụ BILLING_RETRY.

Nếu bạn đã sử dụng Grace Period trong sản xuất và Thông báo V2 trong Sandbox, bạn có thể mong đợi nhận được thông báo DID_FAIL_TO_RENEW với loại phụ GRACE_PERIOD.

Đây là một ví dụ đăng ký ở trạng thái thử lại thanh toán, với Thời gian ân hạn.

Bạn sẽ nhận được thông báo DID_FAIL_TO_RENEW với loại phụ GRACE_PERIOD, cũng như GRACE_PERIOD_EXPIRED, nếu mô phỏng lỗi thanh toán vẫn được bật vào cuối thời gian ân hạn.

Khi xác minh thông tin đăng ký với App Store Server API, bạn có thể xác minh trạng thái đăng ký bằng cách giải mã tải trọng của signedRenewalInfo.

Ở đây, chúng tôi thấy các trường expirationIntent và billing retry được điền.

Khi gọi /verifyReceipt với biên lai đăng ký ở trạng thái thử lại thanh toán, bạn sẽ thấy rằng cờ is_in_billing_retry_period được đặt thành 1.

Ngoài ra, khi sử dụng thời gian ân hạn, bây giờ bạn có thể mong đợi các trường ngày hết hạn thời gian ân hạn được điền vào.

Khi bạn đã hoàn thành thử nghiệm thanh toán thất bại trong Sandbox, bạn có thể tắt công tắc trong Cài đặt Tài khoản Sandbox.

Chúng tôi hy vọng khả năng kiểm tra mới này sẽ giúp bạn xây dựng trải nghiệm tốt nhất có thể cho khách hàng của mình.

Hôm nay chúng tôi đã thảo luận về một số khả năng thử nghiệm mới mà bạn có thể sử dụng để hợp lý hóa việc kiểm tra chức năng mua trong ứng dụng của mình.

Bằng cách đồng bộ hóa cấu hình của bạn trong App Store Connect với Xcode, bạn có thể sử dụng cùng một cấu hình mua hàng trong ứng dụng khi thử nghiệm cục bộ hoặc với môi trường Sandbox.

Các khả năng mới như mã ưu đãi và kiểm tra hoàn tiền trong Xcode sẽ giúp bạn xác minh các triển khai StoreKit phức tạp.

Và, khả năng kiểm tra quản lý đăng ký sẽ cho phép bạn phát triển ứng dụng của mình để đảm bảo trải nghiệm khách hàng tuyệt vời, ngay cả khi dịch vụ của họ bị gián đoạn.

Để biết chi tiết về cách lỗi thanh toán ảnh hưởng đến biên lai đăng ký, cộng với Thông báo Máy chủ App Store V2 trong Hộp cát, tôi khuyên bạn nên sử dụng phiên WWDC 21, "Quản lý mua hàng trong ứng dụng trên máy chủ của bạn."

Ngoài ra, để nghe về những gì mới trong API Máy chủ App Store và Thông báo V2, hãy xem "Có gì mới khi mua hàng trong ứng dụng."

Chúng tôi mong muốn được nghe phản hồi của bạn về những tính năng mới này.

Cảm ơn bạn đã tham gia.