10121

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Xin chào, tôi là Teja, một kỹ sư trong nhóm Trải nghiệm Hệ thống iOS, và trong phiên này, bạn sẽ gặp các bộ lọc Focus.

Focus đã được giới thiệu trong iOS 15, macOS Monterey và watchOS 8.

Đó là một cách để mọi người tập trung vào những gì quan trọng bằng cách định cấu hình hành vi của hệ thống trong một khoảng thời gian.

Tiêu điểm được kích hoạt bằng cách chỉ cần vào Trung tâm điều khiển và chọn từ hệ thống Tiêu điểm hoặc Tiêu điểm tùy chỉnh.

Trong thời gian Focus được bật, hành vi thông báo có thể được tùy chỉnh.

Ví dụ, trong quá trình Tập trung công việc, ai đó có thể chỉ muốn cho phép thông báo từ đồng nghiệp của họ hoặc chỉ cho phép thông báo cho một vài ứng dụng được chọn có liên quan đến công việc.

Đối với mỗi Tiêu điểm, hành vi hệ thống có thể được cấu hình và lên lịch trong Cài đặt.

iOS 16 và macOS Ventura nâng cao tính năng Focus với các bộ lọc Focus.

Tôi sẽ bắt đầu bằng cách giới thiệu cho bạn các bộ lọc Focus và cách chúng hoạt động.

Sau đó, tôi sẽ xem xét cách xác định bộ lọc Focus trong ứng dụng của bạn.

Sau đó, tôi sẽ đề cập đến ý nghĩa của việc hành động trên bộ lọc Tiêu điểm.

Và cuối cùng, tôi sẽ đề cập đến cách ứng dụng của bạn có thể cung cấp ngữ cảnh bổ sung trở lại hệ thống.

Bộ lọc lấy nét là một cách để ai đó tùy chỉnh hành vi của ứng dụng dựa trên Focus hiện đang được bật.

Có một số ví dụ tuyệt vời về các ứng dụng hệ thống đã áp dụng bộ lọc Focus.

Ứng dụng Lịch cho phép mọi người lọc lịch nào sẽ hiển thị theo mặc định khi bật Tiêu điểm.

Đây là lịch của tôi thường trông như thế nào.

Và như bạn có thể thấy, tôi có sự kết hợp giữa công việc và các sự kiện lịch cá nhân.

Tôi có thể định cấu hình bộ lọc Tiêu điểm cho Lịch, trong Tiêu điểm Cá nhân, để chỉ hiển thị lịch cá nhân của tôi.

Sau khi thiết lập bộ lọc Tiêu điểm, đây là lịch của tôi trông như thế nào.

Lịch đã chỉ ra rằng điều này được lọc bởi Focus và cung cấp một cách để chuyển đổi bộ lọc.

Bây giờ tôi sẽ không bị choáng ngợp với lịch làm việc của mình khi cố gắng tận hưởng thời gian cá nhân.

Hộp thư đến của ứng dụng Thư có thể được lọc để chỉ hiển thị các hộp thư có liên quan trong quá trình Tập trung.

Thông báo qua thư cũng được lọc để chỉ hiển thị các thông báo có liên quan một cách nổi bật.

Điều này có nghĩa là tôi có thể thiết lập Thư để chỉ gửi thông báo Thư liên quan đến công việc trong Trọng tâm Công việc và ngăn thông báo thư cá nhân làm gián đoạn tôi.

Có nhiều lý do tại sao ứng dụng của bạn có thể muốn triển khai các bộ lọc Focus.

Có lẽ ứng dụng của bạn quản lý nhiều tài khoản và việc liên kết Focus với một tài khoản cụ thể là phù hợp.

Các ứng dụng có lượng dữ liệu lớn có thể cần lọc nội dung cho Focus.

Nếu bạn muốn giúp người dùng của mình tránh bị phân tâm trong khi tập trung, bạn có thể làm điều này bằng cách giảm số lượng huy hiệu, cảnh báo trong ứng dụng và thông báo thành những gì nổi bật cho Focus được bật.

Về ngoại hình, ứng dụng của bạn có thể muốn hiển thị chủ đề hoặc bố cục dựa trên Tiêu điểm đã bật.

Về cơ bản, nếu ứng dụng của bạn có thể hiển thị nội dung khác nhau dựa trên ngữ cảnh, bạn có thể sử dụng bộ lọc Focus để nâng cao trải nghiệm người dùng.

Hãy để tôi giải thích cách các bộ lọc Focus hoạt động.

Ứng dụng của bạn xác định những gì có thể được tùy chỉnh bởi người dùng cho mỗi Focus và điều này được thực hiện bằng cách sử dụng AppIntent.

Hệ thống sẽ hiển thị những gì có thể được cấu hình cho mỗi Tiêu điểm.

Giao diện người dùng để định cấu hình các thuộc tính được xác định bởi AppIntent của bạn sẽ được hiển thị trong cài đặt Focus dưới dạng bộ lọc Focus.

Người dùng có thể định cấu hình ứng dụng của bạn để hoạt động theo một cách nhất định bằng cách điều hướng đến cài đặt Focus và định cấu hình bộ lọc Focus cho ứng dụng của bạn.

Bây giờ, tôi sẽ xem xét cách bạn có thể kết hợp các bộ lọc Focus vào cơ sở mã của mình.

Có một vài phần để xác định bộ lọc Tiêu điểm của bạn.

Đầu tiên là triển khai SetFocusFilterIntent.

Điều này cho hệ thống biết rằng ứng dụng của bạn quan tâm đến việc có các cài đặt tùy chỉnh cho mỗi Tiêu điểm.

Bước thứ hai là xác định các thông số ứng dụng của bạn.

Những thứ này sẽ đại diện cho những gì người dùng có thể được cấu hình trong ứng dụng của bạn.

Bước cuối cùng là đặt biểu diễn hiển thị, để bộ lọc Tiêu điểm của bạn xuất hiện trong cài đặt hệ thống với nội dung chính xác.

Bằng cách này, người dùng nhận thức được những gì được cấu hình.

Tôi sẽ đi sâu vào một số mã.

Điều đầu tiên bạn cần làm là nhập AppIntents và xác định một cấu trúc triển khai SetFocusFilterIntent.

Đây là bộ lọc Tiêu điểm của bạn.

Đặt tiêu đề và mô tả sẽ giúp người dùng khám phá Focus của bạn là gì.

Bộ lọc tiêu điểm xuất hiện trong chế độ xem lưới trong Cài đặt.

Trước khi bộ lọc Tiêu điểm của bạn được định cấu hình, nó sẽ được hiển thị cho người dùng với giao diện này.

Biểu tượng ở đây là biểu tượng ứng dụng của bạn, văn bản chính là tên ứng dụng của bạn và văn bản phụ sẽ khớp với biến tiêu đề mà bạn đã đặt trong bộ lọc Focus của mình.

Khi người dùng nhấn vào để định cấu hình bộ lọc của bạn, nội dung tương tự sẽ được hiển thị.

Lần này, hệ thống cũng bao gồm chuỗi mô tả mà bạn đã cung cấp, cho ngữ cảnh bổ sung.

Cả chuỗi tiêu đề và chuỗi mô tả đều tĩnh và chúng được hệ thống đọc tại thời điểm ứng dụng của bạn được cài đặt.

Khi xác định bộ lọc Tiêu điểm của bạn, bạn sẽ phải chỉ định những gì một người có thể tùy chỉnh bằng cách cung cấp một loạt các thuộc tính được trang trí dưới dạng tham số.

Khi chỉ định một tham số, bạn phải đặt tên và kiểu dữ liệu cho nó.

Các tham số có thể thuộc loại dữ liệu tiêu chuẩn như Bool, string, float, vân vân.

Nếu bạn có một loại dữ liệu tùy chỉnh mà bạn muốn định cấu hình, bạn có thể biến nó thành một thực thể, cho phép bạn trang trí nó như một tham số.

Để tìm hiểu thêm về các thực thể và Ý định ứng dụng, hãy xem phiên "Đi sâu vào ý định ứng dụng".

Khi xác định bộ lọc Focus của bạn, bạn sẽ chỉ chỉ định loại dữ liệu và tên cho mỗi tham số.

Tùy thuộc vào người dùng để định cấu hình giá trị của tham số sẽ được áp dụng trong mỗi lần Tập trung.

Các thông số có thể được đánh dấu là tùy chọn, có nghĩa là chúng không cần phải được định cấu hình.

Các thông số không phải là tùy chọn nên cung cấp các giá trị mặc định.

Trong mã, bạn chỉ định một tham số - hoặc một tham số tùy chọn - bằng cách xác định một biến thuộc loại bạn muốn trong bộ lọc Focus của mình và trang trí nó như một tham số.

Ở đây, tôi đã tạo một tham số Bool bắt buộc đại diện cho việc bộ lọc Tiêu điểm của tôi có nên luôn sử dụng Chế độ tối hay không.

Tôi đã đặt mặc định của nó là sai.

Tôi cũng đã tạo một tham số chuỗi tùy chọn đại diện cho thông báo trạng thái của người dùng trong Tiêu điểm này.

Cuối cùng, tôi đã bao gồm một tham số tài khoản tùy chọn là một thực thể được xác định bởi ứng dụng của tôi; nó chứa thông tin về một tài khoản cụ thể.

Tiêu đề, được đặt trên cả ba tham số này, được hiển thị trong Cài đặt để mô tả tham số cho người dùng.

Trong cài đặt Focus, khi người dùng định cấu hình bộ lọc Focus của ứng dụng của bạn, nó sẽ được trình bày trong một lưới tương tự như những gì tôi đã hiển thị trước đó.

Nhưng lần này, vì bộ lọc đã được cấu hình, nội dung rất năng động để phản ánh những gì đã được cấu hình.

Biểu tượng ở đây vẫn là biểu tượng ứng dụng của bạn.

Văn bản chính và văn bản phụ có thể được tùy chỉnh bằng cách sử dụng thuộc tính biểu diễn hiển thị trên FocusFilterIntent của bạn.

Văn bản chính phải đại diện cho những thông số đã được định cấu hình, chẳng hạn như Chọn tài khoản, Đặt trạng thái, v.v.

Văn bản phụ phải đại diện cho những gì các tham số đã được cấu hình, chẳng hạn như Tài khoản Công việc hoặc Làm việc.

Trong mã của tôi, tôi đặt biểu diễn hiển thị được tạo động.

Vì tài khoản và trạng thái là các tham số tùy chọn, chúng chỉ được đưa vào các văn bản chính và phụ động nếu chúng thực sự được đặt.

Vì alwaysUseDarkMode là một tham số bắt buộc, nó luôn được bao gồm trong các văn bản chính và phụ.

Được rồi, bây giờ bạn đã xác định bộ lọc Tiêu điểm của mình, vì vậy người dùng có thể vào cài đặt Tiêu điểm và tùy chỉnh các giá trị nhất định cho một Tiêu điểm cụ thể.

Nhưng làm thế nào ứng dụng của bạn có thể biết những gì ai đó đã tùy chỉnh?

Và làm thế nào ứng dụng của bạn có thể tự cập nhật cho phù hợp?

Nó phải hành động dựa trên một sự thay đổi từ hệ thống.

Khi thay đổi Tiêu điểm xảy ra và hệ thống đã xác định rằng điều quan trọng là ứng dụng của bạn phải biết về thay đổi này, nó sẽ cung cấp thông tin này cho bạn theo một trong hai cách.

Nếu ứng dụng đang chạy, bạn sẽ nhận được một cuộc gọi đến phương thức thực hiện trong FocusFilterIntent của mình, nếu bạn đã triển khai nó.

Nếu ứng dụng không chạy, bạn có thể triển khai một tiện ích mở rộng sẽ được quay lên.

Một lần nữa, nếu bạn đã triển khai thực hiện trong FocusFilterIntent của mình, điều đó sẽ được gọi trong tiện ích mở rộng của bạn.

Vì perform có thể được gọi trên ứng dụng hoặc tiện ích mở rộng của bạn, không phải mọi ứng dụng đều cần tiện ích mở rộng.

Thông thường, nếu ứng dụng của bạn chỉ cập nhật chế độ xem của riêng nó để đáp ứng với quá trình chuyển đổi Focus, thì việc triển khai chỉ trong ứng dụng là đủ.

Nếu tiện ích, thông báo hoặc huy hiệu của ứng dụng của bạn cần thay đổi dựa trên quá trình chuyển đổi Focus, thì bạn có thể cân nhắc triển khai tiện ích mở rộng.

Về cơ bản, nếu ứng dụng của bạn muốn cập nhật bất cứ thứ gì ngoài chế độ xem của chính nó, bạn sẽ cần triển khai tiện ích mở rộng.

Đối với phần còn lại của phiên này, tôi có thể đề cập đến "ứng dụng của bạn" nhưng điều đó có thể có nghĩa là ứng dụng hoặc tiện ích mở rộng của bạn tùy thuộc vào ngữ cảnh này.

Để phản hồi bộ lọc Tiêu điểm, hãy triển khai chức năng thực hiện, truy cập các giá trị đã điền cho các tham số được cung cấp thông qua Cài đặt và sau đó sử dụng các giá trị này để cập nhật chế độ xem và hành vi của ứng dụng của bạn.

Việc triển khai thực hiện của bạn được gọi khi hệ thống xác định rằng ứng dụng của bạn cần phản hồi quá trình chuyển đổi Focus.

Thực hiện cũng được gọi khi hệ thống xác định rằng các giá trị được phân phối trước đó không còn phù hợp nữa.

Trong trường hợp này, các thông số bộ lọc Tiêu điểm của bạn được cấu hình với các giá trị mặc định.

Khi thực hiện được gọi trên bộ lọc Tiêu điểm của ứng dụng của bạn, các giá trị của tất cả các thông số sẽ được điền để khớp với những gì đã được định cấu hình trong Cài đặt.

Các giá trị của các tham số được đặt tên có thể được đọc bằng cách gọi tự."tên của tham số."

Trong ví dụ này, khi kết thúc buổi biểu diễn, tôi cập nhật ứng dụng của mình với dữ liệu tôi nhận được.

Đôi khi, bạn có thể cần truy vấn các thông số bộ lọc Tiêu điểm hiện tại.

Trong trường hợp của tôi, vì bộ lọc của tôi được gọi là ExampleChatAppFocusFilter, tôi truy cập ExampleChatAppFocus Filter.current.

Bây giờ ứng dụng của bạn có thể hoạt động trên bộ lọc Focus, bước tiếp theo là đưa trải nghiệm người dùng đi xa hơn bằng cách cung cấp ngữ cảnh bổ sung về cách hành vi ứng dụng của bạn đã thay đổi trở lại hệ thống.

Bằng cách cung cấp ngữ cảnh bổ sung, bạn có thể ảnh hưởng đến hành vi ứng dụng của mình bên ngoài tầm nhìn của ứng dụng.

Ví dụ về điều này bao gồm lọc thông báo và cài đặt số lượng huy hiệu thông báo của ứng dụng của bạn.

Một cách bạn có thể cung cấp thông tin hệ thống là thông qua đối tượng App Context.

Đây là một đối tượng có thể được trả về như một phần của kết quả của hàm thực hiện.

Hoặc bạn có thể trả lại App Context bất cứ lúc nào trong bộ lọc Focus của mình và buộc hệ thống nhận được giá trị cập nhật bằng cách gọi vô hiệu hóa.

Khi bộ lọc Focus đang hoạt động, ứng dụng của bạn có thể có ngữ cảnh bổ sung để xác định xem một thông báo cụ thể có làm gián đoạn người dùng hay không.

Để chuyển thông tin này, ứng dụng của bạn phải đặt thuộc tính filterPredicate trong AppContext.

Vị ngữ bộ lọc này hoạt động kết hợp với một thuộc tính chuỗi mới được gọi là filterCriteria trên UNNotification.

Nếu tiêu chí bộ lọc trên thông báo không khớp với vị ngữ bộ lọc, thông báo sẽ bị tắt tiếng.

Để thiết lập vị ngữ bộ lọc từ FocusFilterIntent của bạn, hãy đưa nó vào Ngữ cảnh Ứng dụng của bạn.

Giả sử thiết bị đã bật Tiêu điểm Cá nhân và người dùng đã thiết lập nó để chỉ chọn tài khoản cá nhân; trong trường hợp này, tôi đã thiết lập vị ngữ bộ lọc làm số nhận dạng của tài khoản cá nhân.

Nếu thông báo đến không phải từ tài khoản cá nhân, nó sẽ không làm gián đoạn người dùng.

Ở đây, khi tôi định cấu hình thông báo này, tôi đặt filterCriteria làm mã định danh của tài khoản công việc.

Điều này là do tôi biết thông báo này đang được gửi đến tài khoản công việc và tôi hy vọng rằng thông báo này sẽ bị tắt tiếng vì số nhận dạng tài khoản không khớp với vị ngữ mà tôi vừa đặt, chỉ khớp với số nhận dạng của tài khoản cá nhân.

Ví dụ này dành cho thông báo cục bộ nhưng tiêu chí bộ lọc cũng có thể được đặt trên tải trọng JSON của thông báo từ xa.

Một cách khác để cung cấp cho hệ thống ngữ cảnh bổ sung là cập nhật số lượng huy hiệu ứng dụng của bạn để phản ánh những gì quan trọng trong quá trình Tập trung hiện được kích hoạt.

Điều này ngăn chặn sự phân tâm cho người dùng của bạn.

Có một API mới trong UserNotifications cho mục đích này.

Trên UNUserNotificationCenter, bạn chỉ cần gọi setBadgeCount với một số nguyên không dấu đại diện cho giá trị huy hiệu mới.

Bây giờ, bạn đã biết cách cung cấp ngữ cảnh bổ sung để lọc thông báo hoặc đặt số lượng huy hiệu.

Hãy nhớ rằng, mục tiêu của tính năng này là làm nổi bật những gì phù hợp nhất với người dùng khi họ tập trung.

Đôi khi điều này đòi hỏi phải giảm thiểu nội dung không liên quan để ngăn chặn sự phân tâm khi Tiêu điểm được bật.

Đối với các bước tiếp theo, tôi khuyến khích bạn bắt đầu xem xét những phần nào trong ứng dụng của bạn sẽ được hưởng lợi từ bộ lọc Focus, xác định thuộc tính nào có thể được định cấu hình, thiết lập ứng dụng và tiện ích mở rộng của bạn để xử lý việc này, sau đó tiến thêm một bước nữa bằng cách đánh giá xem có nên cung cấp ngữ cảnh bổ

Đó là nó cho các bộ lọc Focus!

Cảm ơn bạn đã tham gia phiên họp này và có một phần còn lại tuyệt vời của WWDC.

♪