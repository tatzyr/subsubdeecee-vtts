10098

♪ ♪

Brady Eidson: Xin chào. Tên tôi là Brady Eidson.

Tôi là một kỹ sư trong nhóm Kiến trúc WebKit.

Tôi rất vui được giới thiệu với bạn Web Push trong Safari.

Web Push cho phép bạn gửi thông báo từ xa đến người dùng ứng dụng web của mình.

Tại đây, một thông báo hiển thị từ webkit.org ở phía trên bên phải của màn hình.

Nhấp vào thông báo sẽ mở ra một bài đăng trên blog WebKit trong một cửa sổ mới.

Trước khi tôi đi vào các chi tiết khác về cách thức hoạt động của nó, tôi muốn trả lời một vài câu hỏi trước mà tôi biết nhiều người trong số các bạn sẽ có.

Web Push được hỗ trợ trong Mac Safari bắt đầu với macOS Ventura.

Và Web Push sẽ đến với iOS và iPadOS vào năm tới.

Thông báo đẩy Safari của Apple đã là một lựa chọn để tiếp cận người dùng Mac Safari trong một thời gian khá dài.

Mặc dù nó sẽ tiếp tục hoạt động, nhưng hôm nay tôi vui mừng thông báo rằng chúng tôi đã thêm hỗ trợ cho Web Push và đây thực sự là Web Push!

Sự kết hợp tương tự của các tiêu chuẩn web khác nhau như được triển khai trong các trình duyệt khác.

Chúng tôi sẽ xem xét các tiêu chuẩn đó sau, nhưng... điều quan trọng nhất là nếu bạn đã mã hóa ứng dụng của mình theo tiêu chuẩn web, bạn sẽ không cần thực hiện bất kỳ thay đổi nào để nó hoạt động trong Safari.

Tất nhiên, nếu bạn loại trừ Safari thông qua phát hiện trình duyệt, thì bạn có một số công việc phía trước.

Bây giờ sẽ là thời điểm tuyệt vời để chuyển từ phát hiện trình duyệt sang phát hiện tính năng, đây luôn là phương pháp hay nhất.

Chúng tôi đang sử dụng cùng một dịch vụ Thông báo Đẩy của Apple cung cấp năng đẩy gốc trên tất cả các thiết bị Mac và iOS, nhưng không yêu cầu tài khoản Nhà phát triển Apple để tiếp cận người dùng Safari.

Chúng tôi đang sử dụng các URL điểm cuối mới cho Web Push, điều này đưa ra một điều khác mà bạn có thể đang làm để vô tình loại trừ Safari.

Nếu bạn quản lý chặt chẽ các điểm cuối đẩy trên máy chủ của mình, hãy đảm bảo rằng bạn cho phép URL từ bất kỳ tên miền phụ nào của push.apple.com.

Vượt ra ngoài câu trả lời cho những câu hỏi quan trọng đó, chúng ta hãy đi vào chi tiết hơn.

Đầu tiên, chúng ta sẽ xem xét trải nghiệm Web Push trong Safari từ quan điểm của người dùng.

Sau đó, chúng tôi sẽ đề cập đến toàn bộ luồng Web Push, từ việc xin phép đến việc xử lý một cú nhấp chuột vào một mục nhập trong Trung tâm Thông báo.

Cuối cùng, chúng ta sẽ xem những gì cần thiết để thêm Web Push vào một ứng dụng web hiện có.

Nhưng trước tiên, trải nghiệm người dùng Mac Safari.

Và tôi không thể nghĩ ra cách nào tốt hơn để che đậy điều đó hơn là với một bản demo.

Đây là Safari trên macOS Ventura.

Tôi đã mở webkit.org trong tab trình duyệt này.

Tôi cần cập nhật dự án mã nguồn mở WebKit và Web Push là một cách tuyệt vời để làm điều đó.

Webkit.org không được phép yêu cầu quyền đẩy mà không có người dùng yêu cầu bằng cử chỉ của người dùng.

Vì vậy, tôi sẽ nhấp vào nút hình chuông này ở đây để đăng ký nhận thông báo.

Những gì bạn thấy ở đây là lời nhắc thông báo hệ thống - giống như bạn sẽ thấy cho bất kỳ ứng dụng nào khác.

Trong trường hợp này, nó thay mặt cho webkit.org.

Tôi sẽ nhấp vào "cho phép" và tôi đã sẵn sàng.

Webkit.org đang cung cấp cho tôi tùy chọn để được thông báo về các bài đăng blog mới cũng như các cam kết mới đối với kho lưu trữ mã nguồn.

Tôi biết việc được thông báo cho mọi cam kết sẽ khiến tôi mất tập trung vào công việc quan trọng, nhưng tôi hoàn toàn muốn được thông báo về các bài đăng blog mới.

Vì vậy tôi sẽ đánh dấu vào ô đó ngay bây giờ.

Thật trùng hợp, chắc hẳn ai đó vừa xuất bản bài đăng trên blog WebKit về Web Push.

Thông báo này trông giống như bất kỳ thông báo nào khác và được quy cho webkit.org.

Tôi có thể nhấp vào nó để kích hoạt, và có bài đăng trên blog, đang mở trong Safari.

Khi người dùng đã cấp quyền cho một trang web, họ sẽ duy trì quyền kiểm soát quyền đó.

Là người dùng macOS, tôi đã quen với việc quản lý các tùy chọn Thông báo bên trong Cài đặt Hệ thống và đó là nơi tôi có thể định cấu hình thông báo của webkit.org.

Cấu hình phong phú giống như tôi tìm thấy cho bất kỳ ứng dụng hoặc dịch vụ nào khác.

Là một người dùng Safari, tôi đã quen với việc quản lý cài đặt trang web từ bên trong tùy chọn Safari.

Tôi cũng có thể đến đó để bật hoặc tắt quyền của webkit.org.

Và đó là cách Web Push hoạt động cho người dùng trong Mac Safari.

Trước khi chúng ta tiếp tục, tôi muốn nhắc lại một vài điều được đề cập trong bản demo đó.

Đầu tiên, chúng tôi không muốn người dùng bị gửi thư rác bởi các yêu cầu đăng ký mà họ chưa yêu cầu.

Vì vậy, một trang web chỉ có thể yêu cầu đăng ký đẩy để đáp ứng với một cú nhấp chuột hoặc tổ hợp phím.

Khi một trang web có quyền hiển thị thông báo cho người dùng, người dùng sẽ kiểm soát quyền đó.

Họ có thể chọn quản lý nó trong tùy chọn của Safari hoặc Cài đặt Hệ thống.

Và cài đặt sẽ vẫn đồng bộ nếu họ tình cờ quản lý nó trong cả hai.

Cuối cùng, nếu bạn cung cấp thông báo cho các loại sự kiện khác nhau, cách tốt nhất là cung cấp các điều khiển chi tiết cho các loại thông báo trong ứng dụng web của bạn, giống như các ứng dụng khác.

Bây giờ bạn đã thấy Web Push hoạt động, hãy tìm hiểu những gì đang xảy ra ở mỗi bước.

Một số bạn đã quen thuộc với điều này.

Nhưng đối với những người bạn mới sử dụng Web Push, tôi sẽ đi từng bước một, giới thiệu cho bạn các tiêu chuẩn và tài liệu liên quan trên đường đi.

Điều đầu tiên xảy ra là người dùng truy cập trang web của bạn trong tab trình duyệt.

Đây là webkit.org đang mở trong Safari.

Vì nó được mở trong một tab, nó có thể cài đặt Nhân viên Dịch vụ.

Nhân viên dịch vụ là một đơn vị JavaScript hoạt động thay mặt cho toàn bộ miền, tách biệt với tab trình duyệt hiện đang mở.

Khi tập lệnh Service Worker được cài đặt, ứng dụng web của bạn đủ điều kiện để yêu cầu đăng ký đẩy.

Như đã đề cập, yêu cầu này phải được gắn với cử chỉ của người dùng.

Webkit.org yêu cầu quyền khi nhấp vào nút hình chuông này, đáp ứng yêu cầu cử chỉ của người dùng.

Khi trang web của bạn yêu cầu đăng ký đẩy, người dùng sẽ thấy lời nhắc hệ thống này.

Đây là nơi họ có thể thực hiện lời kêu gọi cuối cùng về việc cấp cho trang web của bạn khả năng mạnh mẽ này.

Có thể người dùng có thể từ chối yêu cầu.

JavaScript của bạn nên được chuẩn bị để xử lý điều đó.

Nhưng giả sử người dùng cấp quyền, JavaScript của bạn sẽ lấy lại một đối tượng PushSubscription.

Điều này bao gồm mọi thứ máy chủ của bạn cần để gửi tin nhắn đẩy đến người dùng này trong trình duyệt này.

Thông tin như điểm cuối URL chính xác để sử dụng.

Bạn gửi tải trọng PushSubscription này trở lại máy chủ của mình theo bất kỳ cách nào hoạt động tốt nhất cho ứng dụng web của bạn.

Nhiều gói máy chủ phổ biến có hỗ trợ Web Push để quản lý đăng ký hoặc bạn có thể tự cuộn.

Điều tương tự cũng liên quan đến cách thức và thời điểm thực sự gửi tin nhắn đẩy đến các điểm cuối URL mà máy chủ của bạn biết.

Tôi không thể nói cho bạn biết khi nào nên làm như vậy. Điều đó tùy thuộc vào bạn và trang web của bạn.

Nhưng một khi bạn đã quyết định gửi tin nhắn đẩy đó, tôi có thể giúp với những gì xảy ra tiếp theo.

Hãy nhớ cách đẩy yêu cầu một Nhân viên Dịch vụ được cài đặt?

Khi máy chủ của bạn đã gửi tin nhắn đẩy và Safari nhận được nó, Safari sẽ đánh thức Nhân viên Dịch vụ của bạn và gửi cho nó một sự kiện đẩy JavaScript.

Hiển thị thông báo cho người dùng trong Trung tâm thông báo là một yêu cầu trong khi xử lý sự kiện đẩy.

Nhận sự kiện đẩy và hiển thị thông báo xảy ra nếu trang web của bạn hiện đang mở trong tab trình duyệt.

Nó cũng xảy ra nếu trang web của bạn hiện không mở trong tab trình duyệt.

Trong trường hợp của Safari trên macOS Ventura, điều này xảy ra ngay cả khi Safari hiện không chạy.

Bước cuối cùng: Nếu người dùng của bạn nhấp vào thông báo đó, một sự kiện nhấp chuột thông báo sẽ được gửi đến Nhân viên Dịch vụ của bạn để nó có thể phản hồi một cách thích hợp.

Ví dụ, bằng cách mở một cửa sổ mới đến URL được liên kết với thông báo đó.

Với sự hiểu biết đó về quy trình Web Push dưới vành đai của chúng tôi, đã đến lúc đi sâu vào chi tiết hơn nữa bằng cách thực sự thêm hỗ trợ Web Push vào một ứng dụng web hiện có.

Bên cạnh webkit.org, Browser Pets là công cụ nội bộ quan trọng nhất cho các nhóm Safari và WebKit.

Luôn cập nhật cho mọi người trong bộ phận về WebKittens và Pups yêu thích của họ trên Safari luôn là tuyên bố sứ mệnh của Browser Pets và Web Push đã làm cho điều đó dễ dàng hơn bao giờ hết.

Miền BrowserPets nội bộ của chúng tôi đã có tập lệnh ServiceWorker được đăng ký để tăng tốc độ tải trang và đồng bộ hóa giữa nhiều tab.

Ở cấp độ cao, một kịch bản ServiceWorker trông rất giống như thế này.

Khi một kỹ sư truy cập trang Browser Pets trong một tab, đoạn trích JavaScript này sẽ xác định xem tập lệnh Service Worker đã được đăng ký hay chưa hoặc đăng ký nó nếu cần.

Lưu ý rằng chúng tôi đang thực hành phát hiện tính năng ở đây, trước đây đã đề cập như một phương pháp hay nhất.

Với điều kiện tiên quyết của Nhân viên Dịch vụ được xử lý, chúng tôi sẵn sàng đăng ký để thúc đẩy.

Hãy nhớ rằng, bạn không thể yêu cầu đăng ký đẩy mà không có cử chỉ người dùng rõ ràng.

Chạy tập lệnh này để đáp ứng với trình xử lý nhấp chuột của nút là một trong nhiều cách để đáp ứng yêu cầu đó.

Khi người dùng nhấp vào nút đó, đây là mã để yêu cầu đăng ký đẩy.

Tôi sẽ đi sâu vào từng điểm này chi tiết hơn.

Đầu tiên, chúng ta cần định cấu hình yêu cầu đăng ký đẩy.

Một phần quan trọng cho điều đó là khóa công khai mà máy chủ của chúng tôi sử dụng để xác định bản thân với các máy chủ đẩy của Apple.

Ở đây chúng tôi sử dụng công nghệ tiêu chuẩn được gọi là VAPID, giống như các trình duyệt khác.

Tôi sẽ không xem xét các chi tiết đôi khi phức tạp của VAPID ở đây, nhưng có các tài nguyên trên web để giúp bạn có giải pháp tốt nhất cho thiết lập máy chủ của bạn.

Với bộ khóa VAPID, chúng tôi đã sẵn sàng định cấu hình yêu cầu đăng ký.

Lưu ý rằng chúng tôi đang tuyên bố rõ ràng rằng chúng tôi hứa sẽ luôn hiển thị các cú đẩy của người dùng.

Mặc dù tiêu chuẩn cho JavaScript Push API tùy chọn chứa thời gian chạy JavaScript im lặng để đáp ứng với việc đẩy, hầu hết các trình duyệt không hỗ trợ điều đó.

Safari không hỗ trợ điều đó.

Và giống như hầu hết các trang web, Browser Pets không cần điều đó.

Sau đó chúng tôi yêu cầu sự cho phép để đẩy.

Dòng JavaScript này dẫn đến lời nhắc cho phép người dùng phê duyệt hoặc từ chối.

Giả sử người dùng cấp quyền - điều mà tất cả các thành viên trong nhóm Safari làm cho Browser Pets - điều này cung cấp cho chúng tôi một đối tượng PushSubscription với các chi tiết về cách tiếp cận người dùng này trong trình duyệt của họ.

Những thứ như điểm kết thúc URL và khóa được sử dụng để mã hóa tin nhắn đẩy để chuyển tiếp.

Cuối cùng, chúng ta cần gửi tất cả những chi tiết đó đến máy chủ của chúng ta.

Như đã đề cập trước đây, các chi tiết cụ thể của việc này sẽ thay đổi dựa trên đơn đăng ký chính xác của bạn.

Máy chủ BrowserPets của chúng tôi sử dụng WordPress, đã có một vài plugin để hỗ trợ Web Push tiêu chuẩn.

Có khả năng bạn sẽ thấy điều tương tự cũng đúng với phần phụ trợ của mình và có các tài nguyên trên web để giúp tìm ra giải pháp phù hợp cho bất kỳ thiết lập nào.

Bây giờ chúng ta cần quay lại mã JavaScript Service Worker của chúng ta.

Nó sẽ cần xử lý một vài sự kiện mới, bắt đầu với sự kiện đẩy.

Khi một tin nhắn đẩy đi từ máy chủ Browser Pets đến trình duyệt này, Nhân viên Dịch vụ này có một sự kiện đẩy được gửi đến nó.

Sự kiện đó chứa một đối tượng PushMessageData có nhiều cách để truy cập dữ liệu được gửi bởi máy chủ của bạn.

Chúng tôi sử dụng trình truy cập JSON ở đây.

Hãy nhớ rằng khi chúng tôi đăng ký push, JavaScript của chúng tôi đã hứa rằng chúng sẽ luôn hiển thị cho người dùng như thế nào?

Điều đó có nghĩa là chúng ta phải luôn hiển thị một thông báo gốc của nền tảng để đáp ứng với mỗi lần đẩy.

Tốt nhất là làm điều này càng sớm càng tốt trong trình xử lý sự kiện đẩy của bạn.

Chúng tôi đang lấy mọi thứ chúng tôi cần ra khỏi đốm màu JSON đó để định cấu hình thông báo, bao gồm cả việc thiết lập một hành động với URL.

Điều đó sẽ có ích chỉ trong giây lát.

Sau khi thông báo được hiển thị, chúng ta cần xử lý việc người dùng nhấp vào nó.

Một sự kiện nữa để kịch bản Nhân viên Dịch vụ của chúng tôi xử lý.

Trong trình xử lý nhấp chuột thông báo này, BrowserPets sẽ lấy URL từ thông báo đã được nhấp để mở một cửa sổ mới.

Lưu ý: Đây là một mô hình rất phổ biến.

Đó là tất cả JavaScript chúng ta cần viết để hỗ trợ Web Push.

Tất nhiên, tốt nhất là nên có một số trợ giúp trong khi phát triển.

Như thường lệ, đó là nơi Thanh tra Web đến.

Ngoài việc giúp gỡ lỗi trang web của bạn mở trong tab trình duyệt, Trình kiểm tra web cũng có thể kiểm tra các phiên bản Nhân viên Dịch vụ và đặt điểm dừng trên trình xử lý sự kiện.

Tất cả những điều này cùng nhau sẽ cho phép bạn kiểm tra và gỡ lỗi JavaScript đăng ký đẩy cũng như mã nhân viên dịch vụ xử lý sự kiện đẩy và các sự kiện thông báo.

Ngoài ra, các máy chủ Thông báo Đẩy của Apple sẽ cung cấp cho bạn các lỗi có thể đọc được nếu có sự cố xảy ra khi bạn cố gắng xuất bản tin nhắn đẩy.

Kiểm tra các liên kết liên quan đến phiên này để biết thêm tài liệu.

Tôi cũng muốn đi vào chi tiết hơn về một vài điểm xuất hiện trong khi viết mã đó, liên quan trực tiếp đến quyền riêng tư của người dùng và việc sử dụng năng lượng.

Quan trọng hơn - và đây không phải là lần đầu tiên tôi nói điều này - đăng ký push yêu cầu cử chỉ của người dùng.

Cũng như các tính năng đặc quyền khác của nền tảng web, việc yêu cầu người dùng thực sự yêu cầu bật Web Push là điều đúng đắn đối với sự tin tưởng của người dùng.

Như đã đề cập khi tôi chỉ cho bạn mã về cách yêu cầu đăng ký đẩy, bạn phải hứa rằng pushes sẽ hiển thị cho người dùng.

Xử lý một sự kiện đẩy không phải là một lời mời để JavaScript của bạn có được thời gian chạy nền im lặng.

Làm như vậy sẽ vi phạm cả niềm tin của người dùng và thời lượng pin của người dùng.

Khi xử lý một sự kiện đẩy, trên thực tế bạn được yêu cầu đăng thông báo lên Trung tâm Thông báo.

Các trình duyệt khác đều có các biện pháp đối phó chống lại việc vi phạm lời hứa làm cho người dùng có thể nhìn thấy sự thúc đẩy, và Safari cũng vậy.

Trong bản dựng beta của macOS Ventura, sau ba sự kiện đẩy mà bạn không đăng thông báo kịp thời, đăng ký đẩy của trang web của bạn sẽ bị thu hồi.

Bạn sẽ cần phải trải qua quy trình cấp phép một lần nữa.

Đó là tất cả.

Chúng tôi thực sự tự hào khi hỗ trợ Web Push và vui mừng vì bất kỳ trang web nào cũng có thể sử dụng nó, không yêu cầu tài khoản Nhà phát triển Apple.

Miễn là bạn đã mã hóa theo tiêu chuẩn và sử dụng tính năng phát hiện, để bạn không vô tình loại trừ Safari, người dùng của bạn sẽ nhận được lợi ích của Web Push trong Safari 16 trên macOS Ventura.

Như thường lệ, chúng tôi đã thêm rất nhiều nội dung mới khác vào Safari và WebKit trong năm nay và tôi hy vọng bạn sẽ kiểm tra phiên đó để tìm hiểu thêm.

Cảm ơn bạn đã xem.

Tôi hy vọng bạn có một phần còn lại tuyệt vời của WWDC 2022.