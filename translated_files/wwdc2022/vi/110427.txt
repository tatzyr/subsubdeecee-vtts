110427

♪ nhạc cụ hip hop ♪

♪

Xin chào mọi người. Tôi là Jonathon Mah.

Và tôi là Lisa Xiao.

Và chúng tôi rất muốn giới thiệu cho bạn những gì mới trong Xcode 14.

Hôm nay, chúng ta sẽ xem xét các tính năng và cải tiến mới trong Xcode, bao gồm chỉnh sửa nguồn và xem trước SwiftUI, các ứng dụng đa nền tảng, phản hồi TestFlight và cải thiện hiệu suất.

Có rất nhiều thứ để trang trải, vì vậy hãy bắt tay vào nó.

Điều đầu tiên bạn sẽ nhận thấy là nó chỉ mới bắt đầu nhanh hơn bao nhiêu.

Xcode 14 nhỏ hơn 30 phần trăm.

Nó tải xuống và cài đặt nhanh hơn đáng kể.

Bạn có thể tải xuống các nền tảng và trình mô phỏng bổ sung theo yêu cầu.

Nếu bạn cần chúng ngay lập tức, bạn có thể lấy chúng ở đây - hoặc sau đó, khi bạn lần đầu tiên thử sử dụng chúng.

Chúng tôi đang xây dựng Food Truck, một ứng dụng giao đồ ăn.

SwiftUI với các bản xem trước trực tiếp là một quy trình làm việc tuyệt vời và nó thậm chí còn trở nên tốt hơn.

Bây giờ khung xem trước có tính tương tác theo mặc định, vì vậy các thay đổi của bạn sẽ ngay lập tức hoạt động khi bạn thực hiện chúng.

Canvas có một điều khiển mới để tạo ra các biến thể bổ sung của mỗi bản xem trước mà không cần viết bất kỳ mã nào.

Bạn có thể thay đổi bảng màu, kích thước văn bản hoặc hướng thiết bị, và sau đó ngay lập tức thấy giao diện của bạn được hiển thị trong từng kịch bản.

Hãy xem chế độ xem của chúng ta trông như thế nào với các kích thước Loại Động khác nhau.

Với các bản xem trước này cạnh nhau, thật dễ dàng để xác thực giao diện của bạn và đảm bảo mọi thứ trông vừa phải.

Hãy kiểm tra kích thước lớn hơn.

Biểu tượng đầu tiên rất rộng và khiến văn bản được gói một cách lúng túng.

May mắn thay, nhà thiết kế của tôi vừa yêu cầu tôi thay đổi nó, nhưng chỉ trong tiêu đề.

CardView của chúng tôi chưa hỗ trợ một biểu tượng khác cho tiêu đề, vì vậy hãy bắt đầu bằng cách thêm chức năng đó.

Tôi sẽ chuyển sang triển khai.

Tiêu đề và các yếu tố nội dung đều sử dụng cùng một hình ảnh.

Hãy thêm một thuộc tính hình ảnh khác dành riêng cho tiêu đề.

Trong hầu hết các thẻ, sử dụng cùng một hình ảnh ở cả hai nơi trông rất tuyệt.

Chúng ta có thể tiết kiệm thời gian cập nhật từng cuộc gọi hiện có bằng cách thêm trình khởi tạo tùy chỉnh với giá trị mặc định.

Khi tôi bắt đầu nhập trình khởi tạo, Xcode 14 hiện cung cấp để hoàn thành toàn bộ!

Tôi có thể chấp nhận giá trị mặc định làm điểm khởi đầu cho các tùy chỉnh của mình, tiết kiệm rất nhiều thời gian.

Điều này cũng hoạt động cho các phương pháp có thể mã hóa được.

Hãy cung cấp cho tham số headerIcon một giá trị mặc định.

Bây giờ, chúng ta sẽ quay lại chế độ xem CardStack và sử dụng chức năng mới này.

Nhà thiết kế của tôi đã yêu cầu tôi sử dụng biểu tượng lịch ở đây.

Thư viện hiện bao gồm tất cả các Biểu tượng SF, vì vậy thật dễ dàng để đảm bảo rằng tôi đang sử dụng đúng.

Tôi có thể nhấn Return để chèn đúng mã để sử dụng biểu tượng.

Biểu tượng này trông thật tuyệt.

Các so sánh song song mới mà chúng tôi nhận được từ các biến thể xem trước giúp dễ dàng đảm bảo ứng dụng của bạn trông đẹp với tất cả các cài đặt mà người dùng của bạn đã chọn.

Ngoài các định nghĩa khởi tạo và mã hóa, Xcode 14 cung cấp các đề xuất thông minh hơn để bạn có thể viết ý tưởng của mình nhanh chóng và dễ dàng hơn.

Để tôi cho bạn xem thêm một ít nữa.

Khi tôi bắt đầu thêm một CardView khác, các trình khởi tạo bây giờ xuất hiện trực tiếp trong danh sách hoàn thành.

Tham số headerIcon in nghiêng.

Đó là bởi vì nó có một giá trị mặc định.

Nếu tôi chấp nhận hoàn thành ngay bây giờ, nó sẽ không bao gồm nhãn headerIcon, nó sẽ sử dụng giá trị mặc định mà chúng tôi vừa thêm vào.

Ở đây, tôi muốn chuyên môn hóa biểu tượng một lần nữa, vì vậy tôi có thể nhập một phần của tên để chọn tham gia.

Tôi sẽ cho thẻ mới của mình một số giá trị.

Tôi muốn một dải phân cách trước thẻ mới của tôi.

Thêm một Bộ chia vào VStack sẽ tạo ra một đường thẳng trên toàn bộ chiều rộng.

Để làm cho nó tinh tế hơn, tôi sẽ sử dụng khung để đặt chiều rộng tối đa.

Công cụ sửa đổi khung có rất nhiều đối số tùy chọn.

Các tính năng hoàn thành mới giúp bạn dễ dàng có được những lập luận mà tôi cần.

Đó là mã hoàn thành trong Xcode 14.

Tiêu đề của lá bài đầu tiên này xuất phát từ một phương pháp.

Tôi nghe nói nó không xử lý tất cả các con số một cách chính xác, vì vậy hãy xem nó được triển khai như thế nào.

Tôi sẽ nhấp lệnh và chọn Chuyển đến Định nghĩa.

Danh sách định nghĩa được thiết kế lại nêu bật những gì khác biệt về từng kết quả để bạn có thể nhanh chóng chọn kết quả mình muốn.

Vì phương thức text(for:) của chúng tôi là từ một giao thức, nên có nhiều lựa chọn.

Danh sách hiển thị các loại cụ thể xác định phương thức: chúng tôi có khai báo từ giao thức và hai triển khai.

Tôi sẽ điều hướng đến việc triển khai được hỗ trợ bởi máy chủ.

Lớp này thực hiện phân tích cú pháp bằng cách sử dụng biểu thức chính quy theo nghĩa đen, mới trong Swift 5.7.

Đồng nghiệp của tôi nói với tôi rằng vấn đề đang được phát hiện bởi các bài kiểm tra đơn vị của chúng tôi.

Hãy chạy chúng ngay bây giờ.

Đúng vậy, chúng tôi có một số thất bại.

Hãy cùng xem nào.

Có vẻ như có gì đó không ổn khi trích xuất số lượng sự kiện.

Hãy kiểm tra xem hàm này được gọi như thế nào.

Tôi có thể thấy điều đó trực tiếp bằng cách mở những người gọi phương thức này bằng cách nhấp vào lệnh.

Cũng giống như danh sách định nghĩa, danh sách người gọi hiển thị các tệp và chức năng khác nhau có chứa các cuộc gọi đến phương thức này, cùng với bản xem trước của từng trang web cuộc gọi.

Đây là một cuộc gọi từ phương pháp kiểm tra thất bại.

Bản xem trước cho tôi thấy bài kiểm tra đang vượt qua chuỗi "0 bản ghi", điều này cho tôi một gợi ý về vấn đề.

Và bây giờ tôi có thể phát hiện ra lỗi: biểu thức chính quy khớp với các chữ số 1-9, nhưng tôi quên bao gồm số không!

Tôi có thể khắc phục điều này bằng cách cập nhật phạm vi ký tự để sử dụng 0-9 hoặc chuyển sang lớp ký tự chữ số mô tả nhiều hơn.

Vẫn có điều gì đó không ổn, nhưng bây giờ trình biên dịch đang cho tôi biết lý do tại sao.

Biểu thức chính quy là một tính năng hạng nhất trong Swift 5.7.

Trình biên dịch kiểm tra biểu thức chính quy của tôi giống như với mã khác và Xcode làm nổi bật lỗi đánh máy của tôi ngay lập tức.

Lưu ý rằng khi tôi sửa biểu thức, hai điều sẽ xảy ra: tô sáng cú pháp trong biểu thức chính quy xác nhận chỉnh sửa của tôi và lỗi mờ đi.

Sự mờ đi mới này cho thấy Xcode đang đánh giá lại các chẩn đoán.

Khi tôi tạm dừng một lúc, tệp được xử lý lại và Xcode xác nhận các lỗi đã được giải quyết.

Sự mờ đi này cũng xảy ra trong các bản dựng dài, vì vậy bạn có thể dễ dàng biết vấn đề nào là từ bản dựng mới nhất và vấn đề nào là từ bản dựng trước đó.

Chúng ta hãy đi đến bài kiểm tra.

Điều này đã đưa tôi thẳng đến cuộc gọi, đang ở giữa một phương pháp kiểm tra.

Hãy nhìn vào đầu trình chỉnh sửa.

Xcode 14 hiển thị các định nghĩa chứa mã hiển thị, ngay cả khi chúng được cuộn ra khỏi tầm nhìn.

Tôi có thể sử dụng những viên kim cương thử nghiệm ở trên cùng để chạy lại các bài kiểm tra.

Tuyệt vời, bản sửa lỗi vượt qua tất cả các bài kiểm tra.

Với Xcode 14, bạn có thể viết mã nhanh hơn với việc hoàn thành mã mới, thiết kế trôi chảy với các biến thể xem trước SwiftUI, được thông báo nhiều hơn với cách trình bày lỗi được cải thiện và điều hướng tự tin bằng cách chuyển sang định nghĩa.

Và thậm chí còn nhiều hơn thế nữa. Đây là Lisa.

Cảm ơn bạn, Jonathon.

Hãy cùng xem xét các cải tiến hiệu suất xây dựng.

Khi Xcode xây dựng nhiều mục tiêu, như một khuôn khổ và ứng dụng, trước tiên nó biên dịch các nguồn khuôn khổ.

Sau đó nó tạo ra một mô-đun.

Điều đó cho phép liên kết và biên dịch các nguồn ứng dụng.

Và sau đó nó liên kết ứng dụng, hoàn thành việc xây dựng.

Xcode 14 sắp xếp lại bản dựng của bạn để cải thiện tính song song.

Bằng cách háo hức tạo ra các mô-đun Swift, Xcode bỏ chặn các tác vụ xây dựng và tăng tính song song.

Nó rút ngắn tất cả các đường dẫn quan trọng trong các bản dựng của bạn, đồng thời tôn trọng hơn việc bạn sử dụng đồng thời máy.

Nhưng chúng tôi đã không dừng lại ở đó.

Chúng tôi cũng đã làm cho liên kết nhanh hơn gấp hai lần thông qua việc tăng tính song song.

Tất cả cùng nhau, Xcode 14 xây dựng các dự án nhanh hơn tới 25%, với các máy có nhiều lõi nhất có những cải tiến lớn nhất.

Ngay cả với những cải tiến để xây dựng lịch trình, đôi khi dự án của bạn có thể có sự phụ thuộc nội bộ vào các nhiệm vụ đồng bộ dài.

Thật khó để nói điều này đang xảy ra mà không có hình dung.

Tin tốt, chúng tôi đã đưa điều đó vào Xcode 14!

Bạn có thể mở dòng thời gian xây dựng mới trên bất kỳ nhật ký xây dựng hoặc gói kết quả nào.

Nó sẽ giúp bạn xác định các nhiệm vụ dài bất ngờ và các nút thắt cổ chai.

Đây là dòng thời gian xây dựng cho Xe tải Thực phẩm.

Tôi có thể thấy một giai đoạn kịch bản hạn chế việc xây dựng thành một lõi duy nhất.

Bạn có thể nhận được thông tin chi tiết quan trọng và xác định các cơ hội hiệu suất trong bản dựng của mình với dòng thời gian xây dựng mới.

Bạn có thể tìm hiểu tất cả về song song hóa các bản dựng, dòng thời gian xây dựng mới. và liên kết trong "Demystify song song hóa trong các bản dựng Xcode" và "Liên kết nhanh: Cải thiện xây dựng và khởi chạy."

Kiểm tra song song trong Xcode là một cách tuyệt vời để chạy các bài kiểm tra của bạn nhanh hơn.

Trong Xcode 14, nó thậm chí còn tốt hơn.

Chúng tôi đã sử dụng các kỹ thuật tương tự để cải thiện hiệu suất xây dựng mà tôi vừa chỉ cho bạn.

Xcode 14 loại bỏ sự phụ thuộc lên lịch giữa các mục tiêu và các lớp thử nghiệm để tăng tính song song trong quá trình thử nghiệm hơn nữa.

Nếu bạn có các bài kiểm tra dài hạn trong các lớp và mục tiêu kiểm tra khác nhau, tính năng này có thể cải thiện thời gian thực hiện bài kiểm tra của bạn lên đến 30 phần trăm.

Để tìm hiểu về cách cải thiện tốc độ kiểm tra và độ tin cậy, vui lòng xem "Tác giả kiểm tra nhanh và đáng tin cậy cho Xcode Cloud."

Xây dựng nhanh hơn, thử nghiệm nhanh hơn và chuẩn bị ứng dụng macOS của bạn để phân phối cũng nhanh hơn.

Chúng tôi đã tăng tốc công chứng bốn lần trong Xcode 14.

Đối với các dự án sử dụng Trình tạo giao diện, tôi có nhiều tin tốt hơn!

Tải tài liệu nhanh hơn tới 50 phần trăm và chuyển đổi giữa iPhone và iPad trong thanh thiết bị nhanh hơn tới 30 phần trăm.

Các hoạt động chỉnh sửa canvas là gia tăng và ưu tiên các cảnh bạn đang xem để nó cung cấp cho bạn phản hồi ngay lập tức, ngay cả trong các bảng phân cảnh lớn.

Xcode 14 nhanh hơn và cũng dễ sử dụng hơn.

Để tôi chỉ cho bạn cách làm.

Xcode 14 giúp bạn dễ dàng đưa ứng dụng của mình lên các nền tảng khác nhau.

Bạn có thể sử dụng một mục tiêu duy nhất để xác định ứng dụng của mình và liệt kê những nền tảng bạn hỗ trợ.

Điều này giúp loại bỏ nhu cầu giữ các cài đặt và tệp đồng bộ, vì vậy bạn chỉ phải mô tả những gì độc đáo trên mỗi nền tảng.

Kiểm tra "Sử dụng Xcode để xây dựng một ứng dụng đa nền tảng" để tận dụng tính năng này trong dự án của bạn.

Xcode cũng có các công cụ tuyệt vời để làm cho ứng dụng của bạn nhỏ hơn.

Trình gỡ lỗi bộ nhớ luôn tuyệt vời để khám phá các rò rỉ trong ứng dụng của bạn.

Nó tập trung vào những con đường ngắn nhất từ các đối tượng gốc đến các đối tượng sống bất ngờ để bạn có thể điều tra lý do tại sao chúng bị rò rỉ.

Xcode 14 mở rộng các khả năng này để bạn có thể xem tất cả các đường dẫn tham chiếu vào và ra khỏi một đối tượng.

Ngoài việc giải thích kỹ lưỡng hơn về rò rỉ, bây giờ bạn có thể đánh giá tổng trọng lượng của các vật thể của mình.

Trong Xcode 14, bạn cũng có thể tự mở rộng Xcode với các plugin Swift Package.

Giờ đây, các gói có thể tích hợp các plugin xử lý mã của bạn tại chỗ, như linters và formatters, và bạn có thể gọi chúng trực tiếp từ trình điều hướng dự án.

Bạn cũng có thể tích hợp các công cụ xây dựng tạo mã hoặc xử lý tài nguyên trong khi xây dựng.

Ví dụ, bạn có thể dịch mô tả cấp cao của giao diện cuộc gọi thủ tục từ xa thành mã keo cấp thấp trong quá trình xây dựng.

Bạn cũng có thể nén hoặc tối ưu hóa tài nguyên trong khi xây dựng.

Để có cái nhìn sâu sắc về các plugin gói, hãy xem "Gặp gỡ các plugin Gói Swift" và "Tạo các plugin Gói Swift".

Bạn cũng có thể bản địa hóa tài nguyên gói giống như các ứng dụng.

Bây giờ bạn có thể đặt bản địa hóa mặc định của gói hàng, xuất danh mục bản địa hóa, dịch nó và nhập lại nó.

Để tìm hiểu thêm về bản địa hóa, hãy xem "Xây dựng ứng dụng toàn cầu: Bản địa hóa theo ví dụ."

Tiếp theo, hãy chuyển sang bộ chọn điểm đến chạy.

Chuyển đổi giữa các thiết bị là điều tôi làm mọi lúc, và bây giờ việc có được thiết bị bạn cần thậm chí còn dễ dàng hơn với bộ chọn đích chạy được cập nhật.

Hãy cùng xem nào.

Khi bạn mở bộ chọn điểm đến chạy, nó sẽ hiển thị tất cả các điểm đến chạy có sẵn cho sơ đồ đã chọn.

Tôi thường chuyển đổi giữa iPhone và iPad.

Trình chọn điểm đến chạy mới ưu tiên các lựa chọn gần đây, điều này làm cho điều này thực sự thuận tiện.

Thật dễ dàng để chọn các thiết bị khác mà tôi không sử dụng gần đây.

Tôi có thể lọc danh sách ở đây và nhập "max" để tập hợp tất cả các thiết bị Max lại với nhau và dễ dàng chọn thiết bị tôi muốn.

Các tính năng tương tự này cũng có sẵn trong trình chọn Sơ đồ.

Tiếp theo, chúng ta hãy nhìn vào cửa sổ Người tổ chức.

Chúng tôi đã thực hiện một số cải tiến tuyệt vời cho Ban tổ chức để giúp bạn xác định các vấn đề mới và cải thiện ứng dụng của mình.

Có hai báo cáo mới trong Trình tổ chức để giúp bạn hiểu ứng dụng của mình đang hoạt động như thế nào trên thiết bị của người dùng: Phản hồi và Treo.

Hãy đi sâu vào.

Trình tổ chức Phản hồi hiển thị tất cả phản hồi TestFlight của bạn trực tiếp trong Xcode.

Người dùng TestFlight của chúng tôi đã gửi những bình luận và ảnh chụp màn hình tuyệt vời cho các bản dựng gần đây của chúng tôi.

Trình kiểm tra hiển thị các chi tiết bổ sung - như thông tin người kiểm tra và cấu hình thiết bị - có thể giúp xác định các vấn đề tiềm ẩn.

Nếu tôi cần thêm một chút ngữ cảnh, tôi có thể gửi email trực tiếp cho người kiểm tra của mình bằng nút này.

Phản hồi TestFlight là từ người dùng beta, nhưng có một số vấn đề có thể vượt qua thử nghiệm và đưa nó vào App Store.

Một trong những loại lỗi phổ biến nhất như thế này là hangs.

Ứng dụng của bạn bị treo khi nó sử dụng luồng chính mà không nghỉ ngơi để xử lý đầu vào của người dùng.

Mã của bạn có thể đang thực hiện công việc quan trọng, nhưng người dùng trải nghiệm một ứng dụng không phản hồi.

Báo cáo Hangs mới này cho thấy các trường hợp treo có tác động cao nhất từ người dùng App Store để bạn biết mã nào cần tái cấu trúc để có tác động lớn nhất.

Ở bên trái, có một danh sách các lệnh treo được sắp xếp theo mức độ nghiêm trọng.

Mỗi cái có một dấu vết ngược có trọng số hiển thị mã có vấn đề.

Ứng dụng của chúng tôi hỗ trợ nhiều thiết bị và phiên bản hệ điều hành.

Một số treo ảnh hưởng đến một số cấu hình nhất định nhiều hơn những cái khác.

Trong trình kiểm tra, thật hữu ích khi thấy rằng việc treo này xảy ra chủ yếu trên iOS 15.3.

Khi tôi sẵn sàng làm việc này, tôi có thể nhảy thẳng vào mã bằng nút Mở trong Dự án này.

Các báo cáo Treo và Phản hồi mới giúp bạn phân loại các vấn đề và nhanh chóng có được các bản sửa lỗi phù hợp cho người dùng.

Để tìm hiểu thêm về cách sửa lỗi treo, hãy xem "Theo dõi hàng treo bằng Xcode và phát hiện trên thiết bị."

Tiếp theo, chúng ta hãy xem xét các biểu tượng.

Biểu tượng ứng dụng của chúng tôi trông tuyệt vời ở mọi kích cỡ, bởi vì chúng tôi đã dành thời gian để gợi ý pixel và chọn số lượng sọc phù hợp cho mọi độ phân giải để nó luôn trông sắc nét.

Tất cả gợi ý điểm ảnh này có thể hoàn toàn cần thiết cho một số biểu tượng và không cần thiết cho những biểu tượng khác.

Bây giờ chúng ta có một biểu tượng mới.

Hãy cùng xem nó.

Những kết cấu đơn giản hơn này không cần bất kỳ gợi ý nào và sẽ trông tuyệt vời khi được vẽ ở bất kỳ kích thước nào.

Với một cú nhấp đúp, tôi có thể chọn hình ảnh mới.

Trong Xcode 14, bạn có thể chọn mức độ chi tiết phù hợp với mình.

Đối với biểu tượng này, hình ảnh duy nhất của chúng tôi trông rất tuyệt.

Tôi sẽ sử dụng tính năng Kích thước đơn mới để yêu cầu Xcode tự động tạo tất cả các kích thước khác nhau của chúng tôi từ kích thước này.

Để làm điều đó, tôi có thể chọn Kích thước đơn trong trình kiểm tra.

Và thế là xong!

Đó là một cái nhìn tổng quan ngắn gọn về những gì mới trong Xcode 14.

Nó nhanh hơn và dễ dàng hơn để giúp bạn phát triển.

Cảm ơn bạn đã xem!

Jonathan: Hãy tải xuống và bắt đầu ngay hôm nay!

♪