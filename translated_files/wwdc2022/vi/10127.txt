10127

♪ (Nhạc hip-hop nhạc cụ Melo) ♪

♪

Praveen Sharma: Xin chào. Tên tôi là Praveen, và tôi đến từ nhóm Tạo mẫu ở đây tại Apple.

Kai Kang: Xin chào. Tên tôi là Kai và tôi đến từ nhóm Kỹ thuật Video.

Praveen: Trong vài năm qua, Apple đã cho phép những cách thức mới mạnh mẽ để mọi người đưa thế giới vào ứng dụng của họ.

Năm ngoái, chúng tôi đã giới thiệu Object Capture, chụp ảnh các đối tượng trong thế giới thực và sử dụng Photogrammetry API trong RealityKit, biến chúng thành mô hình 3D sẵn sàng để sử dụng trong ứng dụng của bạn.

Trước Object Capture, chúng tôi đã phát hành Scene Reconstruction API cung cấp cho bạn sự hiểu biết thô sơ về cấu trúc hình học của không gian và cho phép các trường hợp sử dụng thực tế tăng cường hoàn toàn mới trong ứng dụng của bạn.

Năm nay, chúng tôi rất vui mừng thông báo một khuôn khổ hoàn toàn mới có tên là RoomPlan.

RoomPlan cho phép bạn quét phòng của mình bằng iPhone hoặc iPad hỗ trợ LiDAR.

Nó tạo ra một mô hình 3D tham số của căn phòng và các đối tượng xác định phòng mà bạn có thể sử dụng trong ứng dụng của mình.

Hãy cùng xem trải nghiệm quét RoomPlan trông như thế nào.

RoomPlan sử dụng các thuật toán học máy tinh vi được cung cấp bởi ARKit để phát hiện tường, cửa sổ, khe hở và cửa ra vào, cũng như các vật thể xác định phòng như lò sưởi, ghế dài, bàn và tủ.

Với RoomCaptureView API của chúng tôi, sử dụng RealityKit để hiển thị tiến trình quét trong thời gian thực, bạn có thể dễ dàng tích hợp trải nghiệm quét vào ứng dụng của mình.

Và khi bạn quét xong, RoomCaptureView sẽ trình bày kết quả xử lý hậu kỳ cuối cùng để bạn sử dụng tuy nhiên phù hợp nhất với trường hợp sử dụng của bạn.

Lần đầu tiên, không có sự phức tạp của việc triển khai các thuật toán học máy và thị giác máy tính, giờ đây mọi người có thể tương tác với căn phòng của họ theo những cách hoàn toàn mới.

Ví dụ, các ứng dụng thiết kế nội thất có thể xem trước sự thay đổi màu sắc của tường và tính toán chính xác lượng sơn cần thiết để sơn lại một căn phòng.

Các ứng dụng kiến trúc giờ đây có thể dễ dàng cho phép ai đó xem trước và chỉnh sửa các thay đổi đối với bố cục phòng của họ trong thời gian thực.

Các ứng dụng bất động sản giờ đây có thể cho phép các đại lý nắm bắt các sơ đồ tầng và mô hình 3D của một danh sách một cách liền mạch.

Và các ứng dụng thương mại điện tử có thể thu hút khách hàng thông qua trực quan hóa sản phẩm trong không gian vật lý của họ.

Đây chỉ là một vài ví dụ về các ứng dụng mà RoomPlan cho phép và bạn sẽ ngạc nhiên khi thấy việc tích hợp RoomPlan vào ứng dụng của bạn đơn giản như thế nào.

Hãy cùng xem nào.

Có hai cách chính bạn có thể sử dụng RoomPlan.

Đầu tiên là trải nghiệm quét vượt trội của chúng tôi cho phép bạn tích hợp liền mạch RoomPlan vào ứng dụng của mình.

Thứ hai là API dữ liệu của chúng tôi cho phép ứng dụng của bạn sử dụng dữ liệu tham số trực tiếp từ bản quét tuy nhiên phù hợp nhất với trường hợp sử dụng của bạn.

Với cả hai API này, chúng tôi đề xuất một số phương pháp hay nhất để giúp bạn đạt được kết quả quét tốt nhất có thể, chúng tôi sẽ xem xét trong phần cuối của bài thuyết trình này.

Đầu tiên, hãy nói về trải nghiệm quét mà bạn có thể mang vào ứng dụng của mình bằng cách sử dụng RoomCaptureView API mới của chúng tôi.

RoomCaptureView là một lớp con UIView mà bạn có thể dễ dàng đặt trong ứng dụng của mình.

Nó xử lý việc trình bày phản hồi quét không gian thế giới, tạo mô hình phòng theo thời gian thực, cũng như hướng dẫn huấn luyện và người dùng.

Chúng ta hãy xem xét kỹ hơn các yếu tố thiết kế được trình bày trong quá trình quét dựa trên RoomCaptureView.

Trong phiên RoomCaptureView đang hoạt động, các đường hoạt hình phác thảo các bức tường, cửa sổ, khe hở, cửa ra vào và các vật thể xác định phòng được phát hiện trong thời gian thực.

Mô hình 3D tương tác được tạo trong thời gian thực ở cuối RoomCaptureView, cung cấp cho bạn cái nhìn tổng quan về tiến trình quét của bạn trong nháy mắt.

Cuối cùng, huấn luyện văn bản hướng dẫn bạn đến kết quả quét tốt nhất có thể.

Hãy xem cách bạn có thể bắt đầu sử dụng RoomCaptureView chỉ trong bốn bước đơn giản.

Đầu tiên, chúng tôi tạo một tham chiếu RoomCaptureView trong ViewController của chúng tôi.

Thứ hai, chúng tôi tạo một tham chiếu đến đối tượng cấu hình RoomCaptureSession của chúng tôi.

Thứ ba, chúng tôi bắt đầu phiên quét của mình, chuyển cấu hình của chúng tôi sang chức năng chạy của phiên chụp.

Và cuối cùng, ứng dụng của chúng tôi yêu cầu phiên chụp dừng quét.

Tùy chọn, ứng dụng của bạn có thể tuân thủ giao thức RoomCaptureViewDelegate của chúng tôi và chọn không tham gia các kết quả sau xử lý và bản trình bày của chúng hoặc xử lý các kết quả quét sau khi chúng đã được trình bày.

Ví dụ, bạn có thể xuất USDZ của các kết quả bằng cách gọi hàm xuất có sẵn trên cấu trúc dữ liệu CapturedRoom được cung cấp.

Và đó là cách đơn giản để tích hợp RoomPlan vào ứng dụng của bạn.

Chúng tôi rất vui khi thấy những gì bạn tạo ra với API này.

Bây giờ đồng nghiệp Kai của tôi sẽ nói về RoomCaptureSession và API dữ liệu của RoomPlan.

Kai: Cảm ơn, Praveen.

Trong phần này, chúng tôi sẽ hướng dẫn bạn qua các API dữ liệu cung cấp cho bạn quyền truy cập vào các cấu trúc dữ liệu cơ bản trong quá trình quét và có thể giúp bạn xây dựng trực quan hóa tùy chỉnh về trải nghiệm quét từ đầu.

Quy trình làm việc cơ bản bao gồm ba phần: quét, xử lý và xuất.

Để quét, chúng tôi sẽ đề cập đến những điều cơ bản về cách thiết lập và bắt đầu phiên chụp, cũng như hiển thị và giám sát quá trình chụp.

Sau đó, chúng tôi sẽ xem xét cách dữ liệu được quét của bạn được xử lý và mô hình cuối cùng được nhận để trình bày.

Cuối cùng, chúng ta sẽ thảo luận về cách bạn có thể tạo và xuất tệp USD đầu ra cũng có thể được sử dụng trong quy trình làm việc USD của bạn.

Bây giờ, hãy xem xét chi tiết bước Quét.

Chúng tôi sẽ sử dụng RoomCaptureSession API để thiết lập phiên và hiển thị tiến trình khi chúng tôi tiếp tục quét.

Để tôi chỉ cho bạn bằng mã.

Đây là một ứng dụng RealityKit đơn giản làm ví dụ.

Để bắt đầu, chỉ cần nhập RoomPlan vào dự án Swift của bạn.

Trong ViewController của ứng dụng của bạn, bạn có thể có một loại tùy chỉnh để trực quan hóa kết quả và bắt đầu một phiên bản RoomCaptureSession.

Ngoài ra, RoomCaptureSession cung cấp một xử lý cho phiên AR cơ bản để các ứng dụng của bạn có thể vẽ các mặt phẳng và các hộp giới hạn đối tượng trong chế độ xem AR.

RoomCaptureSession áp dụng mô hình đại diện.

Trong lớp ViewController của bạn, bạn có thể chỉ định chính ViewController làm đại diện của captureSession.

Điều này sẽ cho phép ViewController nhận các bản cập nhật theo thời gian thực từ RoomCaptureSession.

Các bản cập nhật này bao gồm các mô hình 3D và hướng dẫn để hướng dẫn mọi người trong quá trình chụp.

Để có được những cập nhật này, ViewController của bạn cần tuân thủ giao thức RoomCaptureSessionDelegate và thực hiện hai phương pháp.

Cái đầu tiên là phương thức captureSession(_ session: didUpdate room:) để có được cấu trúc dữ liệu CapturedRoom theo thời gian thực.

Trình hiển thị của bạn có thể sử dụng nó để cập nhật chế độ xem AR của mô hình 3D, cung cấp phản hồi theo thời gian thực cho mọi người về tiến trình.

Chúng ta sẽ đi sâu vào cấu trúc CapturedRoom nhiều hơn trong phần sau của buổi nói chuyện.

Phương pháp này sẽ được gọi khi chúng tôi phát hiện các bản cập nhật cho căn phòng bị bắt.

Phương pháp thứ hai là captureSession(_ session: didProvide instruction:).

Phương pháp này cung cấp cho bạn một cấu trúc hướng dẫn chứa phản hồi theo thời gian thực.

Trình hiển thị của bạn có thể sử dụng hướng dẫn để hướng dẫn mọi người trong quá trình quét.

Hãy xem qua các hướng dẫn mà API này cung cấp.

Những hướng dẫn này bao gồm khoảng cách đến các vật thể, tốc độ quét, điều chỉnh ánh sáng cho căn phòng, cũng như tập trung vào các khu vực cụ thể của căn phòng có nhiều kết cấu hơn.

Những hướng dẫn này sẽ được cung cấp trong quá trình quét để hướng dẫn mọi người với phản hồi theo thời gian thực.

Tiếp theo, chúng ta sẽ chuyển sang phần quy trình.

Trong phần này, chúng tôi sẽ sử dụng lớp RoomBuilder để xử lý dữ liệu được quét và tạo ra các mô hình 3D cuối cùng.

Để xử lý dữ liệu được thu thập, bước đầu tiên là bắt đầu một phiên bản RoomBuilder trong lớp ViewController của bạn.

Tiếp theo, để nhận dữ liệu cảm biến sau quá trình chụp, ứng dụng của bạn cần triển khai phương thức captureSession(_ session: didEndWith data: error:).

Khi RoomCaptureSession bị dừng, bằng cách gọi hàm stop() trong ứng dụng của bạn hoặc do lỗi, hàm này sẽ được gọi để trả về đối tượng CaptureRoomData và lỗi tùy chọn.

Cuối cùng, để xử lý dữ liệu thu được, chúng tôi gọi phương thức roomModel(from:) không đồng bộ của roomBuilder với từ khóa await.

Phương pháp chạy không đồng bộ để xử lý dữ liệu được quét và xây dựng mô hình 3D cuối cùng.

Nó sử dụng chức năng Swift async/await mà chúng tôi đã giới thiệu trong WWDC năm ngoái.

Chỉ trong vài giây, mô hình sẽ có sẵn cho bài thuyết trình cuối cùng trong ứng dụng của bạn.

Bây giờ, hãy đi sâu vào chi tiết về cấu trúc dữ liệu CapturedRoom và cách bạn có thể xuất nó để sử dụng trong ứng dụng của mình.

Ở cấp độ cao nhất, có CapturedRoom bao gồm các Bề mặt và Vật thể.

Bề mặt chứa các thuộc tính độc đáo để thể hiện các đường cong như bán kính; góc bắt đầu và kết thúc; bốn cạnh khác nhau của bề mặt; và các loại kiến trúc của tường, mở, cửa sổ, cửa ra vào.

Đối tượng chứa các loại đồ nội thất như bàn, giường, ghế sofa, v.v.

Bề mặt và Đối tượng chia sẻ một số thuộc tính chung như kích thước; độ tin cậy, mang lại cho bạn ba mức độ tin cậy cho bề mặt hoặc đối tượng được quét; ma trận biến đổi 3D; cũng như một mã định danh duy nhất.

Hãy xem chúng được thể hiện như thế nào trong mã.

Cấu trúc CapturedRoom là một biểu diễn tham số đầy đủ của các yếu tố trong phòng.

Nó chứa năm thuộc tính bao gồm tường, khe hở, cửa ra vào, cửa sổ và các đồ vật trong phòng.

Đối với bốn yếu tố đầu tiên, chúng được biểu diễn dưới dạng cấu trúc Bề mặt đại diện cho các cấu trúc kiến trúc phẳng 2D.

Ở bên phải, bạn có thể thấy các thuộc tính khác nhau của Surface mà chúng tôi đã đề cập trước đó.

Thuộc tính cuối cùng là một mảng các vật thể 3D trong phòng và chúng được biểu diễn dưới dạng hình khối.

Ở bên phải, bạn có thể thấy các thuộc tính khác nhau của Object.

Đây là danh sách các loại đối tượng mà chúng tôi hỗ trợ trong RoomPlan.

Chúng bao gồm nhiều loại đồ nội thất phổ biến như ghế sofa, bàn, ghế, giường, và nhiều loại khác.

Cuối cùng, chức năng xuất cho phép bạn xuất CapturedRoom này thành dữ liệu USD hoặc USDZ cho quy trình làm việc hiện tại của bạn.

Đây là một ví dụ để chỉ ra cách bạn có thể trực tiếp mở đầu ra USD trong Cinema 4D để duyệt và chỉnh sửa cấu trúc dữ liệu phân cấp của căn phòng, cũng như kích thước và vị trí của từng yếu tố hoặc đối tượng trong phòng.

Bạn cũng có thể tận dụng quy trình làm việc USD và USDZ hiện tại của mình để thêm kết xuất của căn phòng bị bắt vào nhiều ứng dụng khác nhau như bất động sản, thương mại điện tử, tiện ích và thiết kế nội thất.

Cho đến nay, chúng tôi đã đề cập đến trải nghiệm quét và các API RoomPlan cơ bản.

Bây giờ chúng tôi sẽ xem xét một số phương pháp hay nhất để giúp bạn có được kết quả tốt với RoomPlan.

Chúng tôi sẽ đề cập đến các điều kiện được đề xuất cho phép quét tốt, các tính năng phòng cần chú ý trong khi chọn phòng, cũng như một số cân nhắc về quét và nhiệt cần ghi nhớ.

RoomPlan API hỗ trợ hầu hết các cấu trúc và đồ vật kiến trúc phổ biến trong một hộ gia đình điển hình.

Nó hoạt động tốt nhất cho một phòng dân cư đơn lẻ với kích thước phòng tối đa là 30 feet x 30 feet hoặc khoảng 9 x 9 mét.

Ánh sáng cũng rất quan trọng đối với API để có được luồng video rõ ràng và hiệu suất theo dõi AR tốt.

Tối thiểu 50 lux trở lên được khuyến nghị sử dụng API, điển hình cho phòng khách gia đình vào ban đêm.

Đối với phần cứng, RoomPlan API được hỗ trợ trên tất cả các mẫu iPhone và iPad Pro hỗ trợ LiDAR.

Có một số điều kiện đặc biệt có thể đưa ra thách thức cho API.

Ví dụ, gương và kính có chiều cao đầy đủ đặt ra một thách thức cho cảm biến LiDAR để tạo ra công suất dự kiến.

Ngay cả trần nhà cao cũng có thể vượt quá giới hạn phạm vi quét của cảm biến LiDAR.

Ngoài ra, các bề mặt rất tối có thể khó quét thiết bị.

Có một số cân nhắc để có được kết quả quét tốt hơn.

Đầu tiên, đối với các ứng dụng có yêu cầu độ chính xác cao, việc chuẩn bị phòng trước khi quét có thể nâng cao chất lượng quét.

Ví dụ, mở rèm cửa có thể cho phép nhiều ánh sáng tự nhiên hơn vào và giảm tắc cửa sổ, hoạt động tốt nhất cho việc quét ban ngày.

Đóng cửa có thể làm giảm khả năng quét khu vực không cần thiết bên ngoài phòng.

Theo dõi chuyển động quét tốt cũng rất quan trọng để đạt được kết quả quét tốt với API.

Và đó là lý do tại sao chúng tôi cung cấp phương pháp ủy quyền hướng dẫn người dùng để cung cấp phản hồi về kết cấu, khoảng cách, tốc độ và điều kiện ánh sáng cho mọi người trong quá trình quét.

Một điều khác cần lưu ý là pin và nhiệt của thiết bị.

Chúng tôi đã thực hiện nhiều tối ưu hóa trên RoomPlan API để đảm bảo trải nghiệm quét tốt.

Tuy nhiên, tốt nhất là tránh quét nhiều lần hoặc quét dài một lần trong 5 phút.

Những thứ này không chỉ có thể gây mệt mỏi mà còn làm cạn kiệt pin và tạo ra các vấn đề về nhiệt có thể ảnh hưởng đến trải nghiệm người dùng ứng dụng của bạn.

Có rất nhiều thứ mà chúng tôi đã đề cập đến ngày hôm nay.

Chúng tôi đã giới thiệu một API hoàn toàn mới, RoomPlan.

Nó cung cấp trải nghiệm quét trực quan để nắm bắt các phòng của bạn, các mô hình học máy mạnh mẽ để hiểu môi trường, cũng như định dạng đầu ra USD tham số đầy đủ để dễ dàng tích hợp vào các ứng dụng của bạn.

Để được hướng dẫn về cách thiết kế và triển khai trải nghiệm RoomPlan mới của bạn tốt hơn, vui lòng xem các cuộc nói chuyện liên quan bên dưới.

Praveen: Đã đến lúc bạn dùng thử RoomPlan trong ứng dụng của mình.

Chúng tôi nóng lòng muốn xem bạn có thể tạo gì với API mới này.

Kai: Cảm ơn vì đã xem!

♪