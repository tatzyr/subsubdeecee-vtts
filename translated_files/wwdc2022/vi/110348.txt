110348

- Chào mừng đến với "Xây dựng ứng dụng đầu tiên của bạn trong Swift Playgrounds."

Tôi là Collett Charlton, một kỹ sư trong nhóm Swift Playgrounds.

- Và tôi là Connor Wakamo, một kỹ sư khác trong nhóm Swift Playgrounds.

- Swift Playgrounds là một công cụ tuyệt vời để học viết mã trong Swift, và bây giờ bạn có thể tiến thêm một bước nữa và xây dựng các ứng dụng nữa!

Hôm nay, chúng ta sẽ đi qua việc xây dựng một ứng dụng trong Swift Playgrounds, bắt đầu với một mẫu trống.

Sau đó, chúng tôi sẽ chỉ ra cách gỡ lỗi các vấn đề bằng cách sử dụng bản xem trước và bảng điều khiển, và cuối cùng, chúng tôi sẽ gửi ứng dụng của mình đến TestFlight.

Một thứ mà nhóm của chúng tôi thực sự yêu thích là pha và uống trà.

Chúng tôi yêu nó đến nỗi chúng tôi muốn tạo một ứng dụng cho điều đó.

Connor và tôi sẽ xây dựng một ứng dụng nhỏ để giúp chúng tôi vào giờ uống trà, đưa cho chúng tôi một danh sách các loại trà để giúp chúng tôi chọn những gì để uống mỗi ngày.

Swift Playgrounds hoạt động tốt trên Mac và iPad.

Hôm nay tôi có máy Mac bên mình, vì vậy tôi sẽ bắt đầu xây dựng ứng dụng này ở đó.

Cho dù bạn chưa quen với việc viết mã hay là một nhà phát triển có kinh nghiệm, Swift Playgrounds cung cấp nhiều mẫu và nội dung hướng dẫn để giúp bạn bắt đầu.

Đối với ứng dụng trà của chúng tôi, chúng tôi sẽ bắt đầu bằng cách nhấp vào mẫu Ứng dụng trống ở góc dưới cùng bên trái của màn hình.

Bây giờ chúng ta đã có mẫu của mình, hãy nhấp đúp để mở.

Tuyệt vời. Bên phải là bản xem trước tương tác trực tiếp hiển thị văn bản Hello World.

Trước khi chúng ta bắt đầu viết mã, hãy tùy chỉnh ứng dụng một chút bằng cách sử dụng Cài đặt ứng dụng.

Để làm điều này, tôi sẽ nhấp vào nút cài đặt ứng dụng ở góc trên cùng bên trái của thanh bên.

Tại đây, bạn có thể tùy chỉnh các thuộc tính dự án khác nhau như tên ứng dụng và màu nhấn.

Bạn cũng có thể thêm biểu tượng ứng dụng tùy chỉnh hoặc trình giữ chỗ, khả năng hoặc chuỗi mục đích và bundleID.

Tôi sẽ cập nhật tên ứng dụng thành Tea Time.

Tôi sẽ đặt màu nhấn thành màu nâu.

Và tôi sẽ cập nhật biểu tượng giữ chỗ vào cốc.

Tuyệt vời. Bây giờ phần quan trọng đã hết, hãy bắt đầu viết một số mã bằng cách chọn văn bản mẫu và thay thế nó bằng Chế độ xem đầu tiên của chúng tôi từ Thư viện.

Thư viện có thể được truy cập bằng cách nhấp vào nút dấu cộng trên thanh công cụ của dự án.

Nó chứa các đoạn dễ sử dụng của các Chế độ xem, Công cụ sửa đổi, Biểu tượng SF và Màu sắc khác nhau.

Chúng tôi sẽ sử dụng Chế độ xem danh sách để hiển thị danh sách các loại trà của chúng tôi, vì vậy tôi sẽ nhập danh sách vào trường tìm kiếm và nhấp vào nó để chèn một loại.

Bây giờ chúng ta đã có Chế độ xem danh sách của mình, hãy thêm một số món trà vào đó.

Tôi sẽ bắt đầu gõ Text...

Và sử dụng khóa trả về để chấp nhận và chèn đề xuất hoàn thành mã từ bảng hoàn thành mã nội tuyến.

Được rồi, bây giờ chúng ta có Chế độ xem danh sách của mình với một tách trà được thêm vào.

Hãy thêm một số nữa.

Chờ đã, có vẻ như tôi đã vô tình thêm Jasmine Green hai lần.

Để tránh sao chép các loại trà của chúng tôi, chúng ta nên lưu trữ chúng dưới dạng một bộ đã đặt hàng.

May mắn cho chúng tôi, gói thu thập nhanh chóng của Apple cung cấp điều đó.

Vì vậy, hãy thêm gói thu thập nhanh vào dự án của chúng tôi.

Để làm điều này, hãy mở Menu Tệp và chọn Thêm Gói.

Tôi sẽ bắt đầu bằng cách nhập URL cho gói swift-collections, và sau đó nhấn phím return.

Sau khi gói được tìm nạp, chúng tôi có thể thấy phiên bản gói và các sản phẩm khác có thể được thêm vào dự án của chúng tôi.

Đối với ứng dụng này, chúng tôi sẽ chỉ chọn Bộ sưu tập sau đó nhấp vào Thêm vào Dự án.

Bây giờ chúng tôi đã thêm bộ sưu tập nhanh vào dự án của mình trong thanh bên dưới Gói.

Hãy tạo một OrderedSet of String để lưu trữ danh sách các loại trà của chúng tôi.

Chờ đã. Có vẻ như chúng ta có một vấn đề.

Hãy xem bằng cách nhấp vào biểu tượng vấn đề.

"Không thể tìm thấy loại được đặt hàng được đặt trong phạm vi."

Ồ, tôi hiểu vấn đề là gì.

Tôi quên nhập mô-đun Bộ sưu tập vào dự án của chúng tôi.

Hãy nhập nó, và vấn đề sẽ được giải quyết.

Bây giờ chúng tôi đã giải quyết được vấn đề đó, hãy cập nhật Chế độ xem danh sách của chúng tôi để sử dụng bộ sưu tập mà chúng tôi vừa tạo.

Để làm điều này, chúng tôi sẽ sử dụng ForEach View.

Được rồi, chúng tôi có nó - danh sách các loại trà của chúng tôi được hiển thị từ bộ sưu tập trà của chúng tôi.

Khi tôi đang thực hiện dự án này, tôi ngày càng nhận được nhiều ý tưởng về các tính năng để thêm vào.

Sẽ thật tuyệt nếu ứng dụng của chúng tôi có thể nghe những ấm trà huýt sáo để cho chúng tôi biết khi nào đến giờ rót.

Tôi sẽ không triển khai điều này ngay bây giờ, nhưng hãy xem qua các bước chúng tôi sẽ thực hiện để giải thích cho người dùng lý do tại sao ứng dụng của chúng tôi cần sử dụng micrô.

Để thêm cái này, hãy quay lại cài đặt ứng dụng của chúng tôi...

Và nhấp vào Khả năng.

Sử dụng nút dấu cộng ở góc trên cùng bên phải, chúng ta sẽ nhận được danh sách các khả năng mà chúng ta có thể thêm vào dự án của mình.

Hãy tìm micrô và nhấp vào nó để thêm.

Đối với chuỗi mục đích, chúng tôi sẽ viết: "Tea Time sử dụng micrô để nghe ấm trà huýt sáo."

Tôi sẽ nhấp vào thêm, và sau đó đóng cài đặt ứng dụng.

Được rồi, hôm nay chúng ta đã làm được rất nhiều, và tôi rất vui được chia sẻ dự án và những ý tưởng tuyệt vời mà tôi có với Connor.

Tôi sẽ chia sẻ nó với Connor bằng cách thêm nó vào thư mục iCloud được chia sẻ của chúng tôi.

Nhưng trước tiên, hãy cho nó một tên tệp tốt hơn Ứng dụng của tôi.

Bây giờ, tôi sẽ kéo nó vào Thư mục iCloud được chia sẻ.

Bây giờ tôi đã hoàn thành, tôi sẽ giao nó cho Connor để hoàn thành ứng dụng.

Cảm ơn Collett. Tôi sẽ chọn mọi thứ trên iPad.

Vì chúng tôi đang chia sẻ dự án của mình thông qua Thư mục chia sẻ iCloud, nó không hiển thị trong danh sách dự án chính.

Nhưng nếu tôi nhấn vào "Vị trí", tôi có thể truy cập vào các dự án từ nơi khác trong iCloud, hoặc thậm chí từ các nhà cung cấp tài liệu bên thứ ba.

Tôi đã ở trong Thư mục được chia sẻ của chúng tôi, vì vậy tôi sẽ nhấn vào Tea Time để mở dự án.

Mọi thay đổi tôi thực hiện sẽ tự động được phản ánh trong dự án được chia sẻ.

Có vẻ như Collett là một kỹ sư giỏi đến nỗi chỉ cần tải dự án lên iCloud đã thêm một số tính năng bổ sung!

Cô ấy đã triển khai TabView ở đây để chúng tôi không chỉ có một danh sách các loại trà mà còn có một Trợ lý.

Nếu tôi nhấn vào tab Trợ lý, nó hơi trống, nhưng nó thực hiện công việc.

Tôi có thể yêu cầu một lời giới thiệu, và nó sẽ cho tôi một tách trà mà tôi nên uống.

Có vẻ như hôm nay tôi nên có Jasmine Green.

Bây giờ tôi biết Collett đang tìm ra một cách mới thú vị để chọn trà để cho món này thêm một chút pizzaz.

Hãy mở thanh bên để cố gắng tìm nó.

TeaWheelView có vẻ đầy hứa hẹn, vì vậy hãy nhấn vào đó để mở nó.

Chúng tôi có một Chế độ xem lấy một bộ sưu tập dữ liệu.

Hãy thêm bản xem trước để chúng ta có thể dùng thử TeaWheelView trước khi nó trở thành một phần của ứng dụng chính.

Tôi sẽ cuộn xuống cuối tập tin...

Và tôi sẽ bắt đầu gõ "nhà cung cấp xem trước."

Tôi sẽ chấp nhận đề xuất hoàn thành mã bằng cách nhấn phím Return và tôi sẽ đặt tên nó là TeaWheelView_Previews.

Các dấu chấm trang hiện đã xuất hiện ở cuối khu vực xem trước, điều này cho tôi biết rằng Swift Playgrounds nhận ra nhà cung cấp bản xem trước của tôi.

Nếu tôi nhấn vào chevron bên phải bên dưới bản xem trước ứng dụng... thì tôi có thể sử dụng bản xem trước của mình thay vì bản xem trước ứng dụng.

Ngay bây giờ nó chỉ nói "Xin chào, thế giới!"

Vì vậy hãy thêm một số mã để tạo TeaWheelView.

Đầu tiên tôi sẽ thêm một mảng với một vài mục trong đó dưới dạng thuộc tính tĩnh để nó có thể được sử dụng bởi bản xem trước của tôi.

Tôi sẽ để lại điểm chèn giữa hai dấu ngoặc vuông và sau đó tôi sẽ kéo vào dấu ngoặc đóng để tạo trình giữ chỗ cho một vài mục.

Tiếp theo, tôi sẽ thay thế các trình giữ chỗ bằng một vài chuỗi sẽ đóng vai trò là vật phẩm của chúng tôi.

Bây giờ chúng ta đã có một vài mục, hãy thêm vào TeaWheelView.

Tôi sẽ chọn Xin chào, thế giới! Ví dụ và thay thế nó bằng TeaWheelView hiển thị các mục của tôi.

Tôi cũng sẽ thêm vào một chút đệm.

Tuyệt vời! Bây giờ bản xem trước chế độ xem của chúng tôi đang hiển thị một bánh xe, và nó thật là một bánh xe đẹp!

Tôi có thể quay nó, và nó sẽ chọn các vật phẩm khác nhau dựa trên nơi nó hạ cánh.

Hãy quay lại tab trợ lý và thêm bánh xe này vào.

Tôi sẽ sử dụng thanh bên để mở tệp AssistantTab Swift và thay vào đó tôi sẽ xóa Nút và thay thế nó bằng TeaWheelView.

TeaWheelView tùy chọn thực hiện đóng hành động được gọi khi bánh xe ngừng quay.

Tôi sẽ sử dụng nó để đặt trà chọn cuối cùng thành trà đã chọn và tôi sẽ đặt cảnh báo chọn hiển thị thành đúng để SwiftUI biết hiển thị cảnh báo.

Được rồi, tuyệt vời! Chúng tôi đã có bánh xe của mình ở đây, vì vậy bây giờ hãy thử nó!

Tôi sẽ vuốt để quay nó... và nó bảo tôi uống Byte's Oolong.

Tôi sẽ vuốt nó lần nữa...

Và nó vẫn là Ô long của Byte.

Một lần nữa.

Hừm. Có vẻ như có gì đó không ổn.

Mặc dù nó đang hạ cánh ở các điểm khác nhau trên bánh xe, nhưng nó luôn bảo tôi uống Ô long Byte.

Mặc dù đó là một loại trà ngon, nhưng tôi muốn có một chút đa dạng.

Hãy quay trở lại chế độ xem bánh xe và cố gắng tìm hiểu xem có chuyện gì xảy ra.

Không rõ ràng điều gì đang xảy ra, vì bánh xe quay và hạ cánh ở các điểm khác nhau.

Hãy thêm một tuyên bố in vào bản xem trước chế độ xem của chúng tôi để kiểm tra xem bản xem có bị hỏng không.

Bây giờ khi tôi quay bánh xe...

Một thông báo bảng điều khiển bật lên ở phía dưới bên trái của trình chỉnh sửa nguồn.

Mục một...

Mục một...mục một.

Aha! Mỗi vòng quay cung cấp cho chúng tôi một mục, điều này cho thấy một cái gì đó không hoàn toàn được kết nối đúng!

Vì lần nào nó cũng cho tôi cái đầu tiên, tôi sẽ sử dụng tìm kiếm trên toàn dự án để tìm kiếm trước.

Tôi sẽ nhấn vào trường tìm kiếm ở đầu thanh bên ở phía bên trái của màn hình và sau đó nhập "đầu tiên" và nhấn Return.

Kết quả đó có vẻ đầy hứa hẹn, vì vậy tôi sẽ nhấn vào nó.

À, có vẻ như Collett đã để lại một số mã gỡ lỗi ở đây khiến nó trả lại mục đầu tiên mỗi lần thay vì kết quả đúng.

Hãy sửa nó thật nhanh và sau đó quay lại lần nữa.

Mục hai...

Mục bốn.

Tuyệt vời! Nó có vẻ đang hoạt động bây giờ.

Nếu chúng ta chuyển trở lại bản xem trước ứng dụng của mình bằng cách nhấn vào chevron bên trái bên dưới bản xem trước, chúng ta có thể dùng thử nó trong ứng dụng thực.

Tôi sẽ quay bánh xe, và nó bảo tôi ăn sáng kiểu Anh.

Vì vậy, bây giờ chúng tôi đã có một trợ lý làm việc.

Tuyệt vời! Chỉ để xác nhận ứng dụng hoạt động tốt ở mọi kích cỡ, tôi có thể chạy nó trong cửa sổ riêng của nó bằng cách nhấn nút Chạy ở phía trên bên trái màn hình.

Được rồi, có vẻ như mọi thứ đều ở đây.

Tôi có danh sách các loại trà của mình, và tôi có trợ lý ở đây với bánh xe và mọi thứ.

Tôi có thể quay lại dự án trong Swift Playgrounds bằng cách nhấn vào biểu tượng Swift nhỏ trên thanh trạng thái, và sau đó bằng cách chọn nút "Hiển thị dự án" trong trang tính bật lên.

Tôi đã sẵn sàng để tự mình thử nghiệm ứng dụng này và với bạn bè và gia đình của mình.

Swift Playgrounds giúp bạn dễ dàng kiểm tra vì bạn có thể gửi trực tiếp đến TestFlight từ bên trong Swift Playgrounds!

Nếu tôi đưa bảng cài đặt ứng dụng lên và cuộn xuống dưới cùng, có một nút "Tải lên App Store Connect".

Nếu tôi nhấn vào đó, Swift Playgrounds sẽ thực hiện tất cả công việc khó khăn để tạo bản ghi ứng dụng và tải ứng dụng của tôi lên App Store Connect để tôi có thể phân phối nó trên TestFlight và cuối cùng là App Store.

Bây giờ ứng dụng của tôi đã được tải lên, tôi có thể vào App Store Connect và gửi nó để Đánh giá Ứng dụng Beta.

Sau khi đợi một chút, chúng ta có thể truy cập ứng dụng TestFlight và cài đặt nó từ đó, ngay cả trên iPhone!

Tôi sẽ nhấn vào "Cài đặt" để cài đặt Tea Time.

Bây giờ nó đã được cài đặt, tôi sẽ nhấn "Mở" để mở nó.

Tôi sẽ nhấn vào các ghi chú kiểm tra, cũng như các hướng dẫn này về cách cung cấp phản hồi.

Và bạn đã có nó-- ứng dụng của chúng tôi đang chạy trên iPhone.

Hôm nay tôi nên uống trà gì?

Có vẻ như tôi đang tổ chức Tiệc trà của Matt P.

Hôm nay, Collett và tôi đã chỉ cho bạn cách bạn có thể sử dụng Swift Playgrounds trên Mac và iPad để xây dựng ứng dụng.

Chúng tôi đã trình diễn việc sử dụng thư viện và hoàn thành mã để chèn mã mới, chúng tôi đã chia sẻ dự án của mình thông qua Thư mục được chia sẻ iCloud và chúng tôi đã sử dụng chế độ xem trước và bảng điều khiển để gỡ lỗi sự cố với mã của mình.

Chúng tôi thậm chí đã gửi một ứng dụng đến TestFlight, ngay từ iPad!

Hy vọng rằng bạn đã học được một hoặc hai điều trên đường đi và chúng tôi nóng lòng muốn xem những gì bạn xây dựng với Swift Playgrounds.

Cảm ơn bạn đã xem, và tận hưởng phần còn lại của WWDC!