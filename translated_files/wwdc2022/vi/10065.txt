10065

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Xin chào, tôi là Jared Marsau và tôi làm việc trên Game Technologies tại Apple.

Hôm nay, tôi sẽ nói chuyện với bạn về cách bạn có thể sử dụng các khung Apple được chọn để thêm các tính năng mới vào các trò chơi dựa trên Unity của mình.

Chúng tôi biết rằng nhiều người trong số các bạn đang sử dụng các công cụ, chẳng hạn như Unity, để xây dựng các trò chơi của mình.

Mục tiêu của chúng tôi là mang đến cho bạn những tính năng mới nhất, bất kể bạn đang sử dụng công cụ nào.

Bắt đầu từ hôm nay, hãy nâng cao trò chơi của bạn với một bộ trình cắm Unity mới.

Sử dụng trình cắm Game Center để thêm các tính năng GameKit như xác thực người chơi, bảng xếp hạng và mai mối.

Sử dụng trình cắm Bộ điều khiển trò chơi để tùy chỉnh đầu vào và glyphs, cùng với hỗ trợ cho MFi và bộ điều khiển của bên thứ ba.

Sử dụng trình cắm Accessibility để cải thiện khả năng truy cập thông qua các tính năng hệ thống, như VoiceOver và Dynamic Type.

Tích hợp hệ thống phản hồi xúc giác phong phú dựa trên dữ liệu của Apple với trình cắm Core Haptics.

Thêm âm thanh không gian nhận biết hình học nâng cao với trình cắm PHASE.

Cuối cùng, sử dụng trình cắm Apple.Core để quản lý cài đặt xây dựng và đơn giản hóa quá trình xây dựng.

Bộ trình cắm ban đầu này sẽ cho phép bạn thêm cơ chế chơi trò chơi mới, giúp trò chơi của bạn dễ tiếp cận hơn và giúp bạn nhanh chóng khai thác các tính năng và dịch vụ mới nhất.

Tôi vô cùng hào hứng khi thấy những trò chơi tuyệt vời mà bạn tạo ra với bộ trình cắm Unity mới này.

Bây giờ, tôi sẽ đi vào chi tiết của dự án.

Đầu tiên, tôi sẽ thảo luận về các nguyên tắc thiết kế của dự án.

Sau đó, tôi sẽ đề cập đến các khái niệm và tổ chức dự án.

Tiếp theo, tôi sẽ đưa ra một số gợi ý chính về việc tương tác với kho lưu trữ dự án.

Và cuối cùng, tôi sẽ đi vào chi tiết cho mỗi plug-in.

Như bạn có thể đã biết, các khung của Apple gói gọn chức năng theo cách mô-đun.

Điều này cho phép bạn chọn và chọn các công nghệ phù hợp cho ứng dụng của mình trong khi vẫn duy trì mã nhỏ gọn, hiệu quả.

Với các trình cắm Unity, một mẫu tương tự được tuân theo; mỗi trình cắm ánh xạ đến một khung cơ bản duy nhất.

Điều này cho phép bạn chọn và chọn bộ trình cắm bạn muốn sử dụng dựa trên nhu cầu trò chơi của bạn.

Mỗi trình cắm hiển thị tập lệnh Unity dựa trên C#, ánh xạ càng trực tiếp càng tốt đến khung cơ bản.

Làm điều này có nghĩa là bất kỳ sự quen thuộc nào mà bạn có thể có với khuôn khổ cơ bản đều chuyển sang trình cắm thêm.

Các khái niệm, và trong nhiều trường hợp là API khung, được thực hiện trực tiếp.

Ngược lại, điều này cũng có nghĩa là bằng cách học phần bổ trợ, bạn sẽ ngầm học được khuôn khổ cơ bản.

Một chi tiết quan trọng khác là các trình cắm này được xây dựng dưới dạng thư viện gốc nền tảng Apple.

Các thư viện này hoạt động như chất kết dính giữa tập lệnh C# và API khung cơ bản.

Các trình cắm Apple Unity được tổ chức dưới dạng các gói Unity, vì vậy việc quản lý tích hợp chúng vào dự án của bạn có thể được thực hiện với Trình quản lý gói tích hợp sẵn của Trình chỉnh sửa Unity.

Trong một số trường hợp, các trình cắm thêm cũng bao gồm chức năng Trình chỉnh sửa bổ sung giúp làm việc với trình cắm thêm dễ dàng hơn và phù hợp với quy trình làm việc do trình kiểm tra Unity điều khiển mà bạn đã quen thuộc.

Tất nhiên, mỗi trình cắm được ghép nối với các bài đọc chi tiết, mẫu và liên kết đến các tài nguyên bổ sung, chẳng hạn như tài liệu Nhà phát triển Apple được liên kết.

Tiếp theo, tôi sẽ xem xét ngắn gọn một số khái niệm quy trình làm việc chính để giúp bạn bắt đầu.

Bước đầu tiên là sao chép nguồn từ GitHub.

Bạn có thể tìm thấy tất cả nguồn dự án và tài liệu ở đó.

Đây là điểm khởi đầu cho tất cả những ai sẽ sử dụng các trình cắm Apple Unity.

Khi bạn đã nhân bản kho lưu trữ, việc xây dựng các trình cắm sẽ là một trong những nhiệm vụ đầu tiên của bạn.

Để đơn giản hóa quá trình này, kho lưu trữ bao gồm một tập lệnh Python tại thư mục gốc của kho lưu trữ: build.py.

Tập lệnh này xử lý việc xây dựng các thư viện gốc, sao chép chúng vào đúng vị trí, cập nhật các tệp meta Unity, đóng gói các trình cắm và xây dựng các bài kiểm tra trình cắm thêm.

Tập lệnh được tổ chức sao cho lời gọi đơn giản nhất xây dựng tất cả các trình cắm, đóng gói chúng vào tarballs và lưu chúng vào một thư mục xây dựng sẵn sàng để tích hợp vào các dự án Unity của bạn.

Điều quan trọng cần lưu ý là việc xây dựng và đóng gói đầy đủ các trình cắm sẽ yêu cầu Xcode, Python3, npm và Unity.

Cuối cùng, chúng tôi có tài liệu chi tiết để sử dụng build.py trong kho lưu trữ dự án.

Bây giờ là lúc để đi sâu vào chi tiết với từng trình cắm.

Đối với mỗi trình cắm thêm, tôi sẽ đề cập đến cách thêm chúng vào các dự án Unity của bạn, tổng quan ngắn gọn về các tính năng được bao gồm, khái niệm kịch bản chính và một số đoạn mã hoặc ví dụ trong Trình chỉnh sửa Unity nêu bật cách tích hợp chúng vào các dự án của bạn.

Hãy bắt đầu với trình cắm nền tảng, Apple.Core.

Apple.Core thống nhất cài đặt xây dựng cho mỗi trình cắm vào một ngăn tùy chọn duy nhất trong cửa sổ Cài đặt Dự án của Unity.

Bởi vì bạn biên dịch các thư viện gốc của mỗi trình cắm, Apple.Core cũng bao gồm một bộ xử lý nội dung, đảm bảo rằng mỗi thư viện trình cắm được định cấu hình cho nền tảng thích hợp khi nhập.

Khi xây dựng các dự án của bạn, Apple.Core cũng chứa các tập lệnh chạy như một quy trình hậu kỳ cho bản dựng của bạn để đảm bảo rằng các thư viện gốc được tham chiếu chính xác trong các dự án Xcode trung gian của bạn.

Bởi vì mỗi plug-in tương tác với một khung cơ bản, Apple.Core cũng xác định một số loại inter-op thời gian chạy, giúp dễ dàng truyền dữ liệu giữa tập lệnh C# và các lớp mã gốc.

Cuối cùng, Apple.Core là một phụ thuộc cho tất cả các trình cắm Apple Unity khác.

Điều này có nghĩa là Apple.Core nên được nhập vào các dự án của bạn trước bất kỳ trình cắm nào khác.

Trong bản demo này, tôi sẽ chỉ cho bạn cách nhập trình cắm Apple.Core vào một dự án mới và khám phá ngắn gọn các tùy chọn Cài đặt Xây dựng của Apple.

Khi các trình cắm được xây dựng và đóng gói, Apple.Core có thể được nhập bằng Trình quản lý gói Unity.

Chỉ cần chọn tùy chọn để thêm gói từ tarball và duyệt đến trình cắm đóng gói.

Sau đó, Trình chỉnh sửa sẽ tải gói và biên dịch các tập lệnh.

Sau khi hoàn thành, Apple.Core đã sẵn sàng để sử dụng.

Tính năng đối mặt với người dùng chính của Apple.Core là bổ sung tab Cài đặt Xây dựng Apple trong cửa sổ Cài đặt Dự án của Biên tập viên.

Khi bạn nhập trình cắm Apple Unity, tất cả các tùy chọn xây dựng có sẵn sẽ hiển thị ở đây.

Ra khỏi hộp, Apple.Core đi kèm với một số tùy chọn cấu hình mặc định, chẳng hạn như phiên bản hệ điều hành được hỗ trợ tối thiểu.

Cũng hữu ích khi lưu ý rằng bạn có thể vô hiệu hóa các bước xây dựng sau quá trình cho bất kỳ trình cắm nào.

Cuối cùng, bạn có thể định cấu hình các cài đặt bảo mật chung, cài đặt này sẽ lan truyền đến các dự án Xcode trung gian của bạn.

Sử dụng trình cắm Game Center để mang lại nhiều niềm vui hơn và kết nối với các trò chơi của bạn với Game Center, mạng trò chơi xã hội của Apple.

Trung tâm trò chơi cho phép người chơi xây dựng danh tính trên các nền tảng của Apple và cho phép các tính năng như xác thực người chơi an toàn, bảo mật, thành tích trong trò chơi, bảng xếp hạng được chia sẻ, thử thách được gửi giữa những người chơi và mai mối nhiều người chơi.

Bạn có thể chọn và chọn tính năng Trung tâm trò chơi nào để tích hợp vào trò chơi của mình, nhưng mọi thứ đều bắt đầu với xác thực người chơi.

Thêm xác thực người chơi Game Center vào trò chơi của bạn và tiện ích Game Center có thể giới thiệu trò chơi của bạn trên Màn hình chính của người chơi hoặc trong App Store.

Nó cũng yêu cầu rất ít mã để thêm xác thực người chơi.

Bước đầu tiên là thêm các trình cắm Apple.Core và GameKit vào dự án của bạn.

Trình cắm GameKit kết nối dịch vụ Game Center.

Khi xác thực, hãy kết nối với dịch vụ Game Center và khởi tạo đối tượng GKLocalPlayer.

Sau khi được khởi tạo, hãy truy vấn các hạn chế của người chơi dựa trên hồ sơ của người chơi địa phương.

Những hạn chế này bao gồm hạn chế quyền truy cập vào nội dung người lớn hoặc nội dung khiêu dâm cho người chơi chưa đủ tuổi, hạn chế quyền truy cập vào các tính năng nhiều người chơi hoặc vô hiệu hóa giao tiếp trong trò chơi.

Một cách đơn giản để quản lý GKLocalPlayer và các tương tác của nó với dịch vụ Game Center là xác định một thành phần trong Unity.

Ví dụ, đây là một định nghĩa thành phần Trình quản lý trò chơi đơn giản.

Thành phần này chứa một tham chiếu đến GKLocalPlayer.

Nó cũng xử lý cả xác thực và truy vấn các hạn chế của người chơi trong phương pháp bắt đầu của nó; xác thực người chơi chỉ cần xảy ra một lần trong suốt vòng đời của trò chơi.

Đây là kịch bản của thành phần GameManager.

Đây là trường để lưu trữ GKLocalPlayer.

Trong phương thức bắt đầu của thành phần là cuộc gọi một lần đến GKLocalPlayer.Authenticate, một phương thức tĩnh trả về phiên bản GKLocalPlayer.

Khi người chơi cục bộ được xác thực thành công, đã đến lúc kiểm tra các hạn chế của người chơi.

Kiểm tra các hạn chế của người chơi trong mã giải quyết thành một loạt các kiểm tra Boolean và có thể được thêm vào khối thử trong tập lệnh của thành phần GameManager.

Đúng ở đây có nghĩa là người chơi cục bộ của bạn nên có quyền truy cập hạn chế vào nội dung khiêu dâm.

Đúng ở đây có nghĩa là người chơi cục bộ của bạn nên có trải nghiệm nhiều người chơi bị hạn chế.

Và cuối cùng, sự thật ở đây có nghĩa là giao tiếp trong trò chơi nên bị vô hiệu hóa.

Và đó là tất cả các thay đổi mã cần thiết để thêm xác thực người chơi vào trò chơi của bạn.

Từ đây, có hai bước bổ sung cần thiết để chuẩn bị đầy đủ trò chơi của bạn để tận dụng Trung tâm trò chơi.

Đầu tiên, bạn sẽ cần thêm khả năng Game Center vào các dự án Xcode trung gian của mình.

Điều này được thực hiện từ bên trong giao diện người dùng dự án Xcode.

Thông tin thêm có thể được tìm thấy trong bài viết tài liệu dành cho Nhà phát triển Apple "Bật và Cấu hình Trung tâm Trò chơi."

Tiếp theo, bạn sẽ cần thêm các tính năng Game Center vào ứng dụng của mình bằng App Store Connect.

Kiểm tra cổng App Store Connect để biết thêm thông tin.

Với các bước này đã hoàn thành, bạn đã sẵn sàng để xác thực người chơi và đảm bảo một môi trường chơi game an toàn.

Xác thực người chơi chỉ làm trầy xước bề mặt của các tính năng được cung cấp bởi trình cắm Game Center Unity.

Để tìm hiểu thêm về việc cải thiện khả năng khám phá trò chơi của bạn, hãy xem phiên "Tiếp cận người chơi mới với bảng điều khiển Trung tâm trò chơi".

Để tìm hiểu thêm về nhiều người chơi và mai mối, hãy xem phiên "Có gì mới trong Game Center" từ năm ngoái.

Bộ điều khiển là cách chính để người chơi tương tác với thế giới mà bạn sẽ tạo ra.

Dễ dàng mang lại sự hỗ trợ bộ điều khiển trò chơi đáng tin cậy và linh hoạt cho các trò chơi của bạn với trình cắm Bộ điều khiển trò chơi.

Trình cắm Bộ điều khiển trò chơi mang đến một số tính năng, như hỗ trợ tùy chỉnh bộ điều khiển trò chơi, cho phép người chơi ánh xạ lại các nút ở một nơi cho tất cả các trò chơi.

Nút glyphs, để đảm bảo trải nghiệm người dùng nhất quán.

Và hỗ trợ cho tất cả các bộ điều khiển MFi, cũng như các bộ điều khiển của bên thứ ba như các bộ điều khiển Sony và Microsoft được chọn.

Cũng giống như các trình cắm khác, hãy sử dụng Trình quản lý gói để thêm các trình cắm Apple.Core và Game Controller vào dự án của bạn.

Với trình cắm Bộ điều khiển trò chơi được tải, bước đầu tiên là khởi tạo GCControllerService.

Như chúng ta sẽ thấy trong thời gian ngắn, dịch vụ này là cách bộ điều khiển và các sự kiện kết nối của chúng được truy cập.

Sau khi được khởi tạo, hãy truy vấn GCControllerService cho tất cả các bộ điều khiển hiện được kết nối với hệ thống.

Các bộ điều khiển được kết nối được đại diện bởi các đối tượng GCController trong trình cắm Bộ điều khiển trò chơi.

Đối với mỗi GCController được kết nối, hãy thăm dò trạng thái bộ điều khiển được cập nhật.

Việc bỏ phiếu có thể diễn ra ít hoặc thường xuyên khi trò chơi của bạn cần, nhưng một nơi tốt để bắt đầu là trong vòng lặp cập nhật thường xuyên của Unity.

Khi trạng thái bộ điều khiển được cập nhật, hãy kiểm tra đầu vào trên từng yếu tố riêng lẻ của bộ điều khiển, chẳng hạn như nút, ngón tay cái, v.v.

Đừng quên, bộ điều khiển có thể đến và đi trong vòng đời trò chơi của bạn - đăng ký gọi lại để xử lý các sự kiện kết nối bộ điều khiển và ngắt kết nối.

Một cách nhanh chóng để tích hợp trình cắm Bộ điều khiển trò chơi là tạo một thành phần quản lý đầu vào đơn giản.

Thành phần này có ba yếu tố chính: một vùng chứa chứa tất cả các bộ điều khiển hiện được kết nối, một phương pháp bắt đầu để khởi tạo và một phương pháp cập nhật để xử lý việc bỏ phiếu và kiểm tra đầu vào.

Đầu tiên, chúng ta hãy xem xét kỹ hơn phương pháp bắt đầu.

Đây là một nơi tuyệt vời để thực hiện tất cả các nhiệm vụ thiết lập một lần cần thiết.

Việc khởi tạo dịch vụ bộ điều khiển trò chơi nên diễn ra ở đây, cùng với việc kiểm tra ban đầu cho các bộ điều khiển được kết nối và đăng ký gọi lại cho các sự kiện kết nối và ngắt kết nối.

Đây là tập lệnh của thành phần quản lý đầu vào.

Tất cả mã thiết lập một lần đều nằm trong phương thức bắt đầu của thành phần, bao gồm cả cuộc gọi đến GCControllerService. Khởi tạo().

Gọi GetConnectedControllers nhận được một vùng chứa có thể liệt kê của tất cả các bộ điều khiển hiện được kết nối.

Bước khởi tạo cuối cùng là đăng ký gọi lại cho các sự kiện kết nối và ngắt kết nối của bộ điều khiển.

Bây giờ quá trình khởi tạo đã hoàn tất, trình quản lý đầu vào cũng cần một phương pháp cập nhật để thăm dò ý kiến từng bộ điều khiển được kết nối để cập nhật trạng thái đầu vào và xử lý trạng thái đầu vào cho từng đầu vào của bộ điều khiển.

Để thăm dò ý kiến về đầu vào, hãy bắt đầu bằng cách lặp lại thông qua bộ điều khiển được kết nối.

Gọi phương thức Thăm dò ý kiến của GCController để thu thập trạng thái mới nhất.

Sau đó kiểm tra từng trạng thái nút và phản hồi tương ứng.

Và đó là một cái nhìn nhanh về cách sử dụng trình cắm Bộ điều khiển trò chơi để truy cập các bộ điều khiển được kết nối và nhận đầu vào bộ điều khiển.

Để đi vào chi tiết hơn về khuôn khổ Bộ điều khiển trò chơi và tìm hiểu về các chủ đề như bộ điều khiển của bên thứ ba và đầu vào không chuẩn, hãy xem các phiên của những năm trước: "Hỗ trợ Bộ điều khiển trò chơi mới" và "Những tiến bộ trong Bộ điều khiển trò chơi".

Khả năng tiếp cận là làm cho công nghệ có sẵn cho tất cả mọi người.

Sử dụng trình cắm Accessibility để tích hợp một loạt các công nghệ hỗ trợ của Apple vào các trò chơi dựa trên Unity của bạn.

Trình cắm Trợ năng cung cấp cho bạn khả năng thêm các tính năng chính, chẳng hạn như VoiceOver, có thể đọc nội dung được gắn thẻ theo chương trình cho người dùng của bạn; Điều khiển chuyển đổi, cho phép một loạt các thiết bị đầu vào hỗ trợ; Loại động, để dễ dàng mở rộng quy mô văn bản và giao diện người dùng trong trò chơi dựa trên sở thích

Có rất nhiều điều cần đề cập với trình cắm Trợ năng, vì vậy tôi khuyến khích bạn kiểm tra phiên "Thêm khả năng truy cập vào các trò chơi Unity" để đi sâu vào trình cắm Accessibility Unity.

Trong phiên đó, bạn sẽ không chỉ nhận được các ví dụ và trường hợp sử dụng mà còn xây dựng sự hiểu biết về những gì có thể với khả năng truy cập trên các nền tảng của Apple.

Hãy chắc chắn kiểm tra nó ngay khi bạn có cơ hội.

Thêm phản hồi xúc giác vào trò chơi của bạn là một cách tuyệt vời để tăng cường sự đắm chìm và nâng cao trải nghiệm chơi trò chơi.

Tích hợp các khả năng xúc giác tiên tiến của Apple với trình cắm Core Haptics.

Sử dụng trình cắm Core Haptics để xây dựng các mẫu xúc giác tùy chỉnh từ một tập hợp các sự kiện xúc giác và âm thanh.

Phát lại âm thanh và xúc giác tùy chỉnh được đồng bộ hóa.

Xác định hoặc cập nhật phản hồi xúc giác theo chương trình bằng cách điều chỉnh các thông số trong thời gian thực.

Sử dụng định dạng tệp Apple Haptic và Audio Pattern, hoặc AHAP, cho cách tiếp cận dựa trên tệp để thiết kế và lưu trữ các mẫu của bạn dưới dạng tài sản.

Điều chỉnh các mẫu Core Haptics của bạn trong Unity Editor với sự hỗ trợ của trình kiểm tra.

Để tận dụng tối đa trình cắm Core Haptics, bạn sẽ cần hiểu bốn yếu tố cơ bản của Core Haptics và mối quan hệ của chúng với nhau.

Yếu tố cấp cao nhất là CHHapticEngine.

Công cụ xúc giác đại diện cho liên kết đến máy chủ xúc giác trên thiết bị và được yêu cầu để chơi bất kỳ mẫu xúc giác nào.

CHHapticEngine tạo ra CHHapticPatternPlayers.

Trình phát mẫu được sử dụng để phát lại CHHapticPatterns với các điều khiển như bắt đầu, dừng, tạm dừng và tiếp tục.

CHHapticPattern là một nhóm hợp lý của một hoặc nhiều sự kiện xúc giác và âm thanh.

CHHapticEngine sử dụng các mẫu để tạo ra người chơi.

CHHapticEvents là các khối xây dựng được sử dụng để xác định trải nghiệm xúc giác.

Core Haptics là một API dựa trên dữ liệu, cho phép các mẫu xúc giác được xác định theo chương trình, trực tiếp trong tập lệnh của bạn hoặc bằng cách tận dụng các tệp AHAP.

Một cách dễ dàng để thêm hỗ trợ Core Haptics vào các dự án của bạn là tạo một thành phần Haptics quản lý từng đối tượng Core Haptics cần thiết.

Đây là một thành phần Haptics ví dụ có chứa CHHapticEngine, CHHapticPatternPlayer và AHAP Asset.

Tài sản AHAP là một tài sản Unity tùy chỉnh được xác định bởi trình cắm Core Haptics.

Điều này cho phép dễ dàng nhập và xuất sang các tệp AHAP, cũng như tiện ích mở rộng trình chỉnh sửa tùy chỉnh để quản lý việc tạo và tùy chỉnh mẫu.

Chúng ta hãy xem xét kỹ hơn.

Tôi sẽ bắt đầu bằng cách đảm bảo rằng cả hai trình cắm Apple.Core và Core Haptics đều được cài đặt trong dự án của tôi.

Với những thứ được thêm vào, tôi có thể bắt đầu nâng cao trò chơi của mình bằng xúc giác.

Đây là thành phần xúc giác mà tôi đã tạo dựa trên sơ đồ trước đó.

Chúng tôi sẽ kiểm tra việc triển khai chỉ trong giây lát, nhưng bây giờ, tôi sẽ gắn nó vào máy bay của mình.

Sau khi đính kèm, bây giờ tôi thấy rằng thành phần yêu cầu tài sản AHAP, nhưng thư mục Tài sản AHAP của tôi trống.

Tôi sẽ tạo một cái mới bằng cách vào Assets > Create > Apple > CoreHaptics > AHAP.

Sau khi tạo, tôi sẽ đặt cho nó một cái tên tuyệt vời và nguyên bản: MyHapticPattern.

Trình cắm Core Haptics đi kèm với các tiện ích mở rộng trình chỉnh sửa cho phép tôi điều chỉnh mẫu mới của mình ngay trong cửa sổ thanh tra.

Đây là nơi tôi định nghĩa CHHapticEvents là một phần của CHHapticPattern có thể chơi được.

Theo mặc định, có một sự kiện thoáng qua, nhưng tôi cũng có thể dễ dàng thêm một sự kiện liên tục.

Ngoài ra còn có các nút Nhập, Xuất và Đặt lại trong giao diện người dùng.

Đặt lại xóa mọi sự kiện mà tôi đã thêm và trả lại mẫu về trạng thái mặc định.

Nhập và Xuất là những tính năng tuyệt vời.

Những thứ này cho phép dự án của bạn tải và lưu các tệp AHAP.

Ở đây tôi đã nhập một AHAP được xác định trước có tên Rumble, kích hoạt hiệu ứng rung động tốt, nhưng tôi nghĩ nó chỉ cần được điều chỉnh một chút.

Bây giờ tôi đã cập nhật mẫu, tôi có thể xuất nó sang tệp AHAP mới để chia sẻ mẫu xúc giác được cải thiện này với phần còn lại trong nhóm của tôi.

Bây giờ tài sản của tôi đã được tạo và điều chỉnh, tôi sẽ quay lại máy bay của mình và trỏ nó đến MyHapticPattern.

Tuyệt vời! Mọi thứ đều có dây.

Với mô hình xúc giác được xác định và tham chiếu đúng cách, tất cả những gì còn lại là thêm một số logic vào thành phần Xúc giác để nó có thể chơi một mô hình xúc giác.

Điều này có thể được chia thành hai phương pháp: PrepareHaptics và Play.

PrepareHaptics là nơi công cụ xúc giác được khởi tạo và trình phát mẫu xúc giác được tạo ra.

Play sẽ chỉ cần gọi phương thức bắt đầu của CHHapticPatternPlayer để bắt đầu phát lại.

Và đây là kịch bản thành phần Haptics.

Các trường được xác định cho một công cụ xúc giác và một người chơi xúc giác.

Quan trọng hơn, thêm thuộc tính serializeField để cho phép tài sản AHAP được đặt trong giao diện người dùng trình chỉnh sửa.

Tiếp theo, thêm mã để tạo CHHapticEngine, khởi động nó và tạo trình phát mẫu xúc giác bằng cách truy cập AHAP trực tiếp từ nội dung được tham chiếu.

Tất nhiên, gọi Bắt đầu trên trình phát sẽ chơi mô hình xúc giác.

Trình cắm Core Haptics Unity cung cấp cho bạn các công cụ bạn cần để thêm một cấp độ đắm chìm hoàn toàn mới vào trò chơi của mình.

Sử dụng trình cắm Core Haptics để tạo ra những khoảnh khắc trò chơi kỳ diệu trông, âm thanh và cảm giác chân thực.

Để tìm hiểu sâu hơn về Xúc giác cốt lõi, hãy xem phiên "Giới thiệu Xúc giác cốt lõi".

Để biết chi tiết về thiết kế trải nghiệm xúc giác hấp dẫn, hãy nhớ xem "Thiết kế trải nghiệm xúc giác âm thanh" và "Thực hành thiết kế xúc giác âm thanh".

Âm thanh nhập vai là một khía cạnh cực kỳ quan trọng của trải nghiệm trò chơi tuyệt vời.

Sử dụng trình cắm PHASE Unity để mở khóa tiềm năng sáng tạo của bạn và xây dựng khung cảnh âm thanh tươi tốt vào thế giới trò chơi của bạn.

Với PHASE, bạn có thể cung cấp trải nghiệm âm thanh phức tạp và năng động cho các trò chơi của mình.

Âm thanh nhận biết hình học có nghĩa là âm thanh phát ra từ và tương tác với các mắt lưới trong cảnh.

Môi trường trong trò chơi của bạn sẽ nghe có vẻ chân thực hơn thông qua tiếng vang và phản xạ.

Bạn có thể xây dựng các biểu đồ âm thanh phân cấp cho phép điều khiển âm thanh động trong quá trình chơi trò chơi Trình cắm PHASE bao gồm một tập hợp các thành phần được xác định trước sẵn sàng cho trò chơi.

Chỉ cần đính kèm chúng vào các đối tượng trò chơi của bạn và bạn có thể bắt đầu sử dụng PHASE mà không cần viết một dòng mã nào.

Thành phần đầu tiên là thành phần PHASEListener.

Nó hoạt động như "tai" của cảnh trò chơi của bạn và xử lý âm thanh dựa trên vị trí, hướng và cài đặt trước hồi âm của nó.

Tiếp theo là thành phần PHASEOccluder.

PHASEOccluders gắn vào các đối tượng trò chơi với dữ liệu hình học và làm giảm âm thanh khi chúng đến giữa các nguồn và người nghe trong cảnh.

Tiếp theo là thành phần PHASESource.

Chúng được gắn vào các đối tượng trò chơi và sử dụng biến đổi của đối tượng để định vị âm thanh trong thế giới trò chơi của bạn.

Ngoài các thành phần tích hợp sẵn, trình cắm PHASE cũng xác định một tài sản tùy chỉnh, tài sản SoundEvent.

Sự kiện âm thanh là các đối tượng mô tả các sự kiện phát lại âm thanh và xác định âm thanh được phát bởi các nguồn trong cảnh.

Để bắt đầu sử dụng trình cắm PHASE, bước đầu tiên là đảm bảo rằng cả trình cắm Apple.Core và PHASE đều được thêm vào dự án.

Sau khi cài đặt, tôi có thể bắt đầu thêm các thành phần đi kèm vào cảnh.

Trong dự án ví dụ này, tôi có ba đối tượng trò chơi quan tâm: một chiếc máy bay, một tòa nhà, và sau đó là máy ảnh.

Đầu tiên, tôi sẽ gắn thành phần PHASEListener vào máy ảnh.

Bằng cách đó, tôi đã thêm "tai" vào cảnh.

Tiếp theo, tôi sẽ biến tòa nhà thành một bộ chặn bằng cách gắn thành phần PHASEOccluder.

Cuối cùng, tôi sẽ thêm một nguồn vào cảnh bằng cách thêm thành phần PHASESource vào máy bay.

Bây giờ tôi đã thêm một nguồn, nó cần một số âm thanh để phát, vì vậy tôi cần đính kèm một sự kiện âm thanh, nhưng thư mục Sự kiện Âm thanh trống.

Tôi có thể tạo một cái bằng cách vào Assets > Create > Apple > PHASE > SoundEvent.

Sau khi tạo một sự kiện âm thanh, trình cắm PHASE sẽ ngay lập tức mở cửa sổ soạn nhạc sự kiện âm thanh PHASE.

Đây là khung vẽ được sử dụng để xây dựng các sự kiện âm thanh.

Tôi bắt đầu bằng cách nhấp chuột phải vào bất cứ đâu trong cửa sổ.

Điều này cho thấy một cửa sổ bật lên cho phép tôi thêm một nút vào sự kiện.

Bởi vì tôi muốn phát lại một clip, tôi sẽ tạo một nút lấy mẫu.

Tôi đã thêm một đoạn âm thanh của một chiếc máy bay chạy không tải vào dự án, vì vậy tôi có thể tham khảo nó ở đây.

Tôi sẽ tiếp tục bật vòng lặp để máy bay tiếp tục ngân nga.

Để nghe thấy tiếng máy bay, tôi cần định tuyến nó đến máy trộn.

Tôi có thể tạo một bộ trộn bằng cách kéo dòng đầu ra lên khung vẽ của nhà soạn nhạc sự kiện, nơi nó sẽ hiển thị cho tôi tùy chọn tạo bộ trộn.

Sự kiện âm thanh của tôi hiện đã hoàn tất và sẵn sàng để sử dụng.

Bằng cách nhấp vào sự kiện âm thanh, tôi có thể thấy cài đặt của nó trực tiếp trong trình kiểm tra.

Điều này cho phép tôi điều chỉnh các giá trị mà không cần phải quay lại trình soạn thảo sự kiện âm thanh.

Với sự kiện âm thanh được tạo ra, bây giờ tôi có thể tham khảo nó trong thành phần PHASESource mà tôi đã đính kèm với máy bay trước đó.

Và cùng với đó, âm thanh trong cảnh được định tuyến và cấu hình để phát lại.

Trình cắm PHASE Unity mở ra những khả năng hoàn toàn mới cho thiết kế âm thanh trong trò chơi.

Để tìm hiểu thêm về PHASE và đi sâu hơn vào các khái niệm mà tôi đã giới thiệu hôm nay, hãy nhớ xem trang web tài liệu dành cho Nhà phát triển Apple và video phiên WWDC giới thiệu năm ngoái.

Và điều đó kết thúc tổng quan của chúng tôi về các trình cắm Apple Unity mới.

Hôm nay tôi đã đề cập rất nhiều, nhưng nếu bạn muốn biết thêm về bất kỳ trình cắm Apple Unity nào, kho lưu trữ trên GitHub là nơi tốt nhất để bắt đầu.

Đó là nơi bạn sẽ tìm thấy nguồn, tài liệu chi tiết và mẫu cho từng trình cắm.

Tìm hiểu thêm về việc tích hợp khả năng truy cập vào các trò chơi Unity của bạn với phiên "Thêm khả năng truy cập vào trò chơi Unity" và đảm bảo kiểm tra "Tiếp cận người chơi mới với bảng điều khiển Trung tâm trò chơi" để tìm hiểu cách tăng khả năng hiển thị trò chơi của bạn.

Cảm ơn bạn đã xem.

♪