110374

♪ nhạc cụ hip hop ♪

Xin chào, tên tôi là Adam, và tôi là Quản lý của Nhóm Trải nghiệm Nhà phát triển.

Và tôi là Sasan, một Kỹ sư của Nhóm Đám mây Xcode.

Trong phiên này, chúng tôi sẽ chỉ cho bạn cách tận dụng tối đa Xcode Cloud bằng cách xem xét quy trình làm việc hiện có và làm nổi bật bảng điều khiển Sử dụng Đám mây Xcode hoàn toàn mới.

Sau đó, chúng ta sẽ xem xét cách chúng ta có thể sử dụng những gì chúng ta đã học được từ việc xem việc sử dụng các dự án hiện có của mình, để tối ưu hóa nó hơn nữa và bắt đầu phát triển phiên bản Ứng dụng Watch OS mới của dự án của chúng ta Trước khi chúng ta bắt đầu, hãy làm tổng quan nhanh về Xcode Cloud.

Tại WWDC 2021, chúng tôi đã công bố Xcode Cloud, một dịch vụ tích hợp và phân phối liên tục được tích hợp trong Xcode và được thiết kế rõ ràng cho các nhà phát triển Apple.

Xcode Cloud cho phép bạn áp dụng tích hợp và phân phối liên tục, một phương pháp phát triển phần mềm tiêu chuẩn giúp bạn phát triển và duy trì mã của mình và cung cấp ứng dụng cho người kiểm tra và người dùng.

Xcode Cloud tăng tốc độ phát triển và phân phối các ứng dụng chất lượng cao bằng cách tập hợp các công cụ dựa trên đám mây giúp bạn xây dựng ứng dụng, chạy song song các bài kiểm tra tự động, phân phối ứng dụng cho người kiểm tra và xem và quản lý phản hồi của người dùng, tất cả trong khi bảo vệ quyền riêng tư của người dùng.

Nếu bạn muốn tìm hiểu thêm về cách thiết lập Xcode Cloud lần đầu tiên, hãy xem "Gặp gỡ Xcode Cloud" từ WWDC 2021, nơi Holly và Geoff đi sâu vào chi tiết hơn trong việc thiết lập quy trình làm việc đầu tiên của bạn.

Bây giờ, chúng ta hãy xem xét quy trình làm việc hiện có và xây dựng cho ứng dụng Food Truck của chúng tôi trong Xcode Cloud.

Đây là bảng điều khiển Xcode Cloud trong App Store Connect, nó cung cấp cho chúng ta cái nhìn tổng quan về bản dựng gần đây của dự án Food Truck của chúng tôi.

Gần đây chúng tôi đã đưa ra quyết định thêm một ứng dụng watchOS đồng hành, vì vậy một nhà điều hành xe tải thực phẩm có thể chấp nhận các đơn đặt hàng đến từ đồng hồ của họ một cách nhanh chóng mà không cần phải liên hệ với điện thoại của họ mỗi khi có đơn đặt hàng mới đến.

Trước khi chúng tôi bắt đầu xây dựng ứng dụng watchOS mới trong Xcode Cloud, chúng tôi muốn đảm bảo quy trình làm việc và dự án hiện tại của chúng tôi được tối ưu hóa hoàn toàn, giúp chúng tôi xây dựng và kết quả thử nghiệm mà chúng tôi muốn, càng nhanh càng tốt.

Chúng tôi nghĩ rằng có thể có một số cách mà chúng tôi có thể tiết kiệm thời gian và nguồn lực ở đây.

Để hiểu rõ hơn về nơi chúng ta có thể bắt đầu thực hiện một số tối ưu hóa này, chúng ta hãy xem xét kỹ hơn tổng quan về chi tiết xây dựng.

Đầu tiên, chúng tôi nhận thấy rằng chúng tôi bắt đầu xây dựng lúc 9:15 sáng.

Và phải mất 14 phút để hoàn thành và trình bày cho chúng tôi kết quả.

Chúng tôi cũng thấy có một thời gian liên quan đến việc sử dụng, trong trường hợp này là 32 phút.

Đây là tổng thời gian cần thiết để tất cả các hành động trong bản dựng 14 phút của chúng tôi hoàn thành.

Bên cạnh việc sử dụng, bạn sẽ thấy một tùy chọn để xem phân phối các hành động cho bản dựng này.

Mỗi hành động được chia nhỏ, cùng với cách sử dụng tương ứng của nó, với tổng số 32 phút được chỉ ra ở dưới cùng.

Bản phân phối Sử dụng này cung cấp cho chúng tôi ý tưởng về một số nơi chúng tôi có thể thực hiện một số tối ưu hóa.

Nhưng trước khi chúng ta đi đến điều đó, chúng ta hãy dành một chút thời gian để xem xét kỹ hơn cách Xcode Cloud thực hiện các hành động này và sự khác biệt giữa thời lượng xây dựng và cách sử dụng.

Mỗi bản dựng được chia thành một loạt các hành động tùy thuộc vào việc thiết lập quy trình làm việc của bạn.

Bạn sẽ thấy cách Xcode Cloud chia nhỏ từng hành động thành nhiều hành động song song như Phân tích, Lưu trữ, Xây dựng và Kiểm tra.

Bởi vì những hành động này được thực hiện song song, thời lượng của bản dựng bằng với hành động chạy dài nhất; trong trường hợp này, các bài kiểm tra mà chúng tôi đã định cấu hình trong quy trình làm việc của mình mất 14 phút để hoàn thành.

Bây giờ, khi tính toán mức sử dụng, mỗi hành động này, khi được quan sát theo trình tự, cung cấp cho chúng tôi tổng mức sử dụng tính toán của bản dựng - trong trường hợp này là 32 phút.

Và đó là cách Xcode Cloud tính toán thời gian xây dựng và cách sử dụng cho một bản dựng nhất định.

Bây giờ, chúng ta hãy xem bảng điều khiển Sử dụng Đám mây Xcode trong App Store Connect!

Ở trên cùng là tổng quan về cách sử dụng, kể từ khi bắt đầu chu kỳ hàng tháng của chúng tôi cho Nhóm Truck to Table, bao gồm tổng tỷ lệ phần trăm được sử dụng.

Ngoài ra, chúng tôi thấy tổng mức sử dụng được biểu thị bằng phút, cùng với các tính toán còn lại có sẵn trong chu kỳ hiện tại của nhóm chúng tôi.

Bên dưới điều này, chúng tôi thấy một khu vực dành riêng cho xu hướng sử dụng cho nhóm của chúng tôi, được chia nhỏ bởi các bản dựng được tạo ra và mức sử dụng tổng thể, cùng với tỷ lệ phần trăm tăng hoặc giảm trong 30 ngày qua.

Nếu chúng ta muốn xem việc sử dụng trong một khoảng thời gian khác, chúng ta có thể làm như vậy bằng cách thay đổi khoảng thời gian ở góc trên cùng, bên phải của phần xu hướng.

Xa hơn một chút trên trang, chúng tôi thấy tổng mức sử dụng của từng sản phẩm của chúng tôi hiện đang sử dụng Xcode Cloud, một lần nữa, trong khoảng thời gian mà chúng tôi đã chọn ở trên.

Được rồi, hãy chọn Xe tải thực phẩm để chúng ta có thể xem tổng số phân tích sử dụng của nó.

Ở đây chúng tôi bắt đầu bằng cách nhìn thấy những xu hướng tương tự từ quan điểm của nhóm chúng tôi, nhưng bây giờ cụ thể cho dự án Xe tải Thực phẩm của chúng tôi.

Xa hơn một chút trên trang, chúng tôi thấy số liệu thống kê sử dụng cho từng quy trình làm việc của chúng tôi.

Nhìn thoáng qua, tôi có thể thấy từ quy trình phát hành, đây sẽ là một nơi tuyệt vời để bắt đầu thực hiện một vài tối ưu hóa.

Bây giờ, tôi sẽ giao nó cho Sasan, người sau khi quan sát một số chi tiết xây dựng và sử dụng tính toán, sẽ chỉ cho chúng tôi một vài cách chúng tôi có thể tối ưu hóa dự án của mình.

Cho họ thấy nó được thực hiện như thế nào, Sasan.

Sasan: Cảm ơn, Adam.

Hãy sử dụng dự án Food Truck để đề cập đến một số phương pháp hay nhất khi sử dụng Xcode Cloud.

Điều này sẽ cho phép chúng tôi bắt đầu lặp lại nhanh chóng trên ứng dụng watchOS mới của mình.

Quy trình làm việc xác định thời điểm bắt đầu xây dựng thông qua việc sử dụng Điều kiện Bắt đầu.

Điều quan trọng là phải định cấu hình Điều kiện Bắt đầu của bạn để các bản dựng chỉ bắt đầu cho các thay đổi dành cho Quy trình làm việc.

Hãy xem cách chúng ta có thể áp dụng phương pháp này vào quy trình phát hành của dự án Xe tải thực phẩm.

Nhưng trước tiên, tôi khuyên bạn nên kiểm tra "Khám phá quy trình làm việc đám mây Xcode" để biết thêm thông tin chi tiết.

Tôi có cùng một bản dựng mà Adam đã cho chúng ta thấy trước đó đang mở trong Xcode.

Để bắt đầu, hãy để tôi mở quy trình phát hành trong cửa sổ trình chỉnh sửa.

Tôi nhấp chuột phải vào Quy trình làm việc trong Bảng điều hướng và chọn Chỉnh sửa quy trình làm việc.

Trong cửa sổ trình chỉnh sửa, tôi có thể thấy tất cả các phần có thể định cấu hình tạo nên Quy trình làm việc, bao gồm một phần cho Điều kiện bắt đầu.

Chúng tôi đã phát hiện ra rằng đôi khi bản dựng theo lịch trình không chứa bất kỳ thay đổi mới nào.

Để giải quyết vấn đề đó, hãy thêm một điều kiện bắt đầu mới cho các thay đổi chi nhánh để thay thế điều kiện bắt đầu theo lịch trình hiện có.

Điều này sẽ đảm bảo rằng chúng tôi không xây dựng các cam kết trùng lặp.

Tôi nhấn nút Dấu cộng và chọn Thay đổi Chi nhánh.

Bây giờ để xóa điều kiện bắt đầu đã lên lịch, tôi sẽ chọn nó và nhấp vào biểu tượng thùng rác.

Điều kiện Bắt đầu Thay đổi Chi nhánh sẽ chạy bất cứ khi nào một cam kết mới được đẩy đến một nhánh từ xa.

Theo mặc định, Chi nhánh Nguồn được cấu hình thành Bất kỳ Chi nhánh nào.

Điều này có nghĩa là bất kỳ thay đổi nào được thực hiện đối với bất kỳ nhánh nào trong repo của bạn sẽ khiến quy trình làm việc này bắt đầu xây dựng.

Vì quy trình phát hành của chúng tôi được cấu hình kỹ lưỡng, tôi muốn hạn chế điều này để đảm bảo chúng tôi chỉ bắt đầu xây dựng cho các nhánh phát hành của mình.

Tôi nhấp vào Chi nhánh tùy chỉnh và tôi có thể thấy ngay rằng tôi cần chỉ định chi nhánh tùy chỉnh.

Tôi nhấp vào nút Dấu cộng và nhập tên chi nhánh.

Trình chỉnh sửa sẽ cho phép tôi chọn từ tên chi nhánh chính xác hoặc tiền tố.

Trong trường hợp này, chúng tôi biết chúng tôi có nhiều nhánh phát hành nên tôi sẽ chọn các nhánh bắt đầu bằng "phát hành".

Tiếp theo, tôi muốn chỉ định những tệp và thư mục nào từ nhánh phát hành có thể bắt đầu xây dựng.

Mục tiêu của tôi là không bắt đầu xây dựng khi thư mục tài liệu được sửa đổi.

Thư mục này chỉ chứa tài liệu phát triển của chúng tôi nên có thể bỏ qua một cách an toàn.

Đối với tùy chọn Tệp và Thư mục, tôi chọn Điều kiện Tùy chỉnh.

Tôi chọn danh sách thả xuống Bắt đầu xây dựng và chọn Không bắt đầu xây dựng.

Tôi nhấp vào nút Dấu cộng để thêm một điều kiện mới.

Tôi sẽ chỉ định thư mục nào cần loại trừ bằng cách chọn Bất kỳ Thư mục nào và chọn Chọn.

Cuối cùng, điều này sẽ mở ra một trình chọn tệp.

Bây giờ tôi có thể chọn thư mục tài liệu và nhấp vào Mở.

Để kết thúc, tôi sẽ nhấp vào Lưu để duy trì các thay đổi của mình.

Bây giờ tôi đã định cấu hình Điều kiện Bắt đầu để chọn lọc hơn khi bắt đầu bằng cách chỉ giới hạn các nhánh có tiền tố phát hành và bỏ qua các thay đổi đối với thư mục tài liệu.

Quy trình làm việc cũng xác định cách chạy các bản dựng của bạn thông qua việc sử dụng các Hành động được xác định trước.

Các hành động cho phép bạn phân tích, lưu trữ, xây dựng và kiểm tra các thay đổi của mình.

Một thành phần quan trọng của hành động kiểm tra là lựa chọn các điểm đến kiểm tra.

Để đảm bảo rằng kết quả được phân phối nhanh chóng, mỗi điểm đến sẽ chạy song song sau khi các sản phẩm thử nghiệm được xây dựng.

Tôi muốn đảm bảo rằng tôi đang chọn một bộ điểm đến mô phỏng ngắn gọn cho các bài kiểm tra của mình.

Ngoài việc tăng tốc các bản dựng của tôi, điều này cũng giúp giảm tiếng ồn từ các bài kiểm tra có thể thất bại trên các thiết bị tương tự.

Xcode Cloud cung cấp bí danh cho các điểm đến được đề xuất.

Đây là những danh sách được sắp xếp các trình mô phỏng đại diện cho một mặt cắt ngang của kích thước màn hình.

Hãy truy cập lại quy trình phát hành để xem cách chúng ta có thể chọn một bộ điểm đến mô phỏng hợp lý cho hành động thử nghiệm iOS.

Sau khi chọn hành động Kiểm tra iOS, chúng ta có thể thấy có một loạt các điểm đến kiểm tra được chọn.

Để xóa các điểm đến thử nghiệm, tôi sẽ chọn từng điểm và nhấp vào nút Trừ.

Sau đó, tôi sẽ nhấp vào menu thả xuống của mục cuối cùng và chọn iPhone được đề xuất.

Một lần nữa, tôi sẽ nhấp vào Lưu để duy trì các thay đổi của mình.

Bây giờ tôi có một tập hợp các điểm đến thử nghiệm sẽ giúp cung cấp tín hiệu rõ ràng nếu chúng tôi giới thiệu hồi quy.

Như chúng ta đã thảo luận trước đó, Xcode Cloud sẽ chạy quy trình làm việc của bạn khi bạn đẩy các thay đổi mới vào kho lưu trữ của mình.

Đôi khi, bạn có thể muốn bỏ qua việc xây dựng trong CI tùy thuộc vào loại thay đổi đang được cam kết.

Chúng tôi đã thêm vào khả năng để làm điều đó.

Hãy cùng xem qua Xcode.

Để bỏ qua cam kết của bạn trong Xcode Cloud, chỉ cần thêm "ci bỏ qua" vào cuối thông báo cam kết.

Bây giờ, khi bạn đẩy lên điều khiển từ xa, Xcode Cloud sẽ biết bỏ qua sự kiện này.

Đảm bảo rằng bạn đang sử dụng định dạng chính xác của thẻ bỏ qua ci được hiển thị ở đây.

Đối với mỗi hành động, các tập lệnh tùy chỉnh được thực thi tại nhiều điểm.

Dọn dẹp các phụ thuộc không sử dụng và thử lại các yêu cầu API một cách linh hoạt được biết là không đáng tin cậy sẽ đảm bảo các bản dựng hoàn thành nhanh chóng và nhất quán.

Để biết thêm thông tin về các tập lệnh tùy chỉnh và các tùy chỉnh nâng cao khác, hãy xem "Tùy chỉnh quy trình làm việc Xcode Cloud nâng cao của bạn".

Để kiểm tra, bạn nên đảm bảo rằng các bài kiểm tra flakey và không đáng tin cậy được sửa chữa nhanh chóng.

Khi một bài kiểm tra flakey thất bại, bản năng là ngay lập tức thử lại bản dựng.

Tùy thuộc vào độ tin cậy của bộ thử nghiệm của bạn, điều này có thể dẫn đến nhiều bản dựng đã được thử lại.

Đảm bảo dành nhiều thời gian hơn để viết các bài kiểm tra đáng tin cậy.

Để biết thêm thông tin về cách thực hiện điều đó một cách hiệu quả, hãy xem phiên khác của chúng tôi "Tác giả kiểm tra nhanh và đáng tin cậy cho Xcode Cloud".

Cho đến nay chúng tôi đã thảo luận về một số phương pháp hay nhất và áp dụng chúng vào dự án Xe tải Thực phẩm.

Hãy xem những thay đổi đó có tác động gì bằng cách so sánh bản dựng từ trước đó với bản dựng từ quy trình làm việc được cập nhật của chúng tôi.

Đây là một bản dựng được bắt đầu sau khi áp dụng các phương pháp hay nhất.

So với bản dựng trước đó mà Adam đã cho chúng ta thấy, thời lượng giảm một phút nhưng mức sử dụng giảm bốn phút.

Có vẻ như chúng tôi đã thực hiện một số cải tiến tốt về tổng thể.

Hãy quay lại bảng điều khiển sử dụng để hiểu rõ hơn về tác động.

Vì có thể khó nhìn thấy tác động từ một bản dựng duy nhất ngay lập tức, chúng tôi đã áp dụng các phương pháp hay nhất cho một quy trình làm việc khác của mình, Quy trình làm việc tích hợp.

Chúng tôi đã chạy các bản dựng trong một thời gian với các phương pháp hay nhất được áp dụng.

Chúng tôi có thể nói rằng những thay đổi của chúng tôi có hiệu quả vì việc sử dụng đang có xu hướng giảm.

Điều này có nghĩa là bây giờ chúng tôi có khả năng thêm nhiều quy trình làm việc hơn và bắt đầu nhiều bản dựng hơn để bắt đầu phát triển ứng dụng watchOS.

Sử dụng bảng điều khiển sử dụng, bạn có thể tiếp tục áp dụng các phương pháp hay nhất tương tự cho các dự án và quy trình làm việc hiện có của mình để tận dụng tối đa Xcode Cloud.

Để biết thêm thông tin về cách quản lý Đám mây Xcode cho các nhóm lớn, hãy xem Deep Dive vào Đám mây Xcode cho các nhóm.

Chúng tôi hy vọng bạn thích buổi học của chúng tôi.

Adam: Cảm ơn bạn đã xem.

♪ nhạc cụ hip hop ♪