110404

♪ nhạc cụ hip hop ♪

Xin chào, tôi là David Wendland, một người ủng hộ kỹ thuật thương mại cho App Store.

Hôm nay, tôi sẽ chỉ cho bạn cách ứng dụng của bạn có thể mang lại trải nghiệm hạng nhất bằng cách chủ động xác định các giao dịch mua mới, hiện tại và trước đây của khách hàng mà không cần khách hàng thực hiện bất kỳ hành động nào.

Tôi sẽ đề cập đến cách thực hiện điều này với StoreKit 2 và StoreKit gốc, để bạn có thể tối ưu hóa trải nghiệm giới thiệu ứng dụng của mình cho tất cả khách hàng của mình.

Hãy để tôi bắt đầu bằng cách xác định khôi phục mua hàng trong ứng dụng chủ động.

Điều này có nghĩa là khi khách hàng khởi chạy ứng dụng của bạn, bạn sử dụng dữ liệu có sẵn, trên thiết bị, để chủ động kiểm tra các giao dịch nhằm xác định xem họ là khách hàng mới hay khách hàng hiện tại và làm như vậy mà không yêu cầu bất kỳ hành động nào của khách hàng, thậm chí không nhấn vào nút "Khôi phục giao dịch mua"

Điều này cho phép bạn điều chỉnh trải nghiệm ứng dụng của mình theo lịch sử mua hàng của khách hàng và trạng thái để ứng dụng của bạn mở khóa các sản phẩm hoặc dịch vụ cho khách hàng hiện tại hoặc ứng dụng của bạn cung cấp sản phẩm mới nhất của bạn cho khách hàng mới hoặc cho những người đăng ký trước đây, bạn trình bày cho họ các ưu đãi đăng ký để giành

Đây là nội dung khôi phục chủ động, sử dụng StoreKit để tự động tối ưu hóa trải nghiệm ứng dụng của bạn cho khách hàng mới, hiện tại và trước đây, trên tất cả các thiết bị của họ.

Hãy nhìn vào ví dụ này.

Ở đây chúng tôi có ứng dụng Ocean Journal của chúng tôi.

Đây là một trải nghiệm bán hàng phổ biến, nơi khách hàng có một vài lời kêu gọi hành động khác nhau để lựa chọn.

Hoặc là tôi có thể cố gắng mua hàng trong ứng dụng và xác thực bằng sinh trắc học, chẳng hạn như FaceID, hoặc nếu tôi đã tạo một tài khoản ứng dụng, tôi có thể đăng nhập và có thể sử dụng Keychain để nhập mật khẩu của mình hoặc nếu tôi tin rằng tôi là người đăng ký đang hoạt động, tôi có thể sử dụng nút "Khôi phục giao dịch

Đối với những người đăng ký đang hoạt động của bạn trên một thiết bị mới, việc biết nên chọn tùy chọn nào không phải lúc nào cũng rõ ràng đối với họ.

Và với dữ liệu có sẵn cho ứng dụng của bạn, trải nghiệm này có thể được sắp xếp hợp lý với phương pháp hay nhất về khôi phục mua hàng trong ứng dụng chủ động của chúng tôi.

Vì vậy, nếu tôi khởi chạy ứng dụng này trên một thiết bị mới nhưng đã là người đăng ký đang hoạt động, khi khởi chạy, ứng dụng sẽ chủ động khôi phục dịch vụ của tôi, tự động, mà không yêu cầu bất kỳ hành động nào từ tôi.

Vì vậy, ở đây ứng dụng đã nhận ra đăng ký Pro của tôi và tải bãi biển yêu thích của tôi, hoàn chỉnh với điều kiện lướt sóng và bật tính năng cam trực tiếp.

Trải nghiệm này phân biệt ứng dụng của bạn với những ứng dụng khác và tôi sẽ đề cập đến cách thực hiện việc này với StoreKit 2 trên iOS 15 trở lên.

Ngoài ra, nếu ứng dụng của bạn hỗ trợ các phiên bản iOS trước đó, tôi sẽ đề cập đến cách tạo trải nghiệm tuyệt vời tương tự này với StoreKit gốc và điểm cuối verifyReceipt.

Với nền tảng đó, đây là những gì tôi sẽ đề cập.

Đầu tiên, tôi sẽ mô tả chi tiết sản phẩm khách hàng cốt lõi nói rằng ứng dụng của bạn sử dụng để tạo ra trải nghiệm được cá nhân hóa dựa trên các giao dịch mua trong ứng dụng của khách hàng với StoreKit.

Sau đó, tôi sẽ xem xét các bước để triển khai, sử dụng StoreKit 2, hoàn thành với mã mẫu bằng ứng dụng SK Demo.

Hãy xem xét từng loại mua hàng trong ứng dụng, trạng thái sản phẩm khách hàng cốt lõi của họ và xem lại một vài ví dụ về trải nghiệm giới thiệu được cá nhân hóa.

Để bắt đầu, các loại mua hàng trong ứng dụng áp dụng cho khôi phục chủ động là đăng ký không tiêu dùng, đăng ký không gia hạn và đăng ký tự động gia hạn, vì tất cả chúng đều liên tục trong lịch sử giao dịch của khách hàng và sẽ luôn có sẵn với StoreKit.

Do đó, ứng dụng của bạn có thể xác định trạng thái mua hàng của từng khách hàng cho từng sản phẩm hoặc nhóm đăng ký.

Đối với các đăng ký không gia hạn và tự động gia hạn, tôi sẽ sử dụng thuật ngữ "đăng ký" để tham khảo cả hai khi chúng tôi xem xét trạng thái sản phẩm của khách hàng.

Đây là ba trạng thái cốt lõi mà ứng dụng của bạn có thể cá nhân hóa.

Hãy xem xét các khách hàng mới chuyên sâu.

Trạng thái này đại diện cho ID Apple đã đăng nhập trong App Store không có bất kỳ giao dịch mua hàng trong ứng dụng hiện tại hoặc trong quá khứ nào.

Trạng thái này thường được sử dụng làm trải nghiệm bán hàng mặc định của ứng dụng.

Ứng dụng Ocean Journal của chúng tôi đang bán đăng ký hàng tháng và hàng năm với bản dùng thử miễn phí một tháng.

Nhìn vào trạng thái cốt lõi thứ hai của chúng tôi, chúng tôi đã Mua và Người đăng ký đang hoạt động.

Ở trạng thái này, khách hàng có giao dịch đang hoạt động và ứng dụng của bạn có nghĩa vụ cấp cho khách hàng quyền truy cập vào sản phẩm hoặc dịch vụ đã mua.

Tại đây, ứng dụng Ocean Journal của chúng tôi ngay lập tức giới thiệu cho khách hàng bãi biển ưa thích của họ với cam bãi biển trực tiếp cao cấp.

Không hiển thị nút mua, vì dịch vụ đã được chủ động khôi phục.

Đối với mỗi sản phẩm đã mua hoặc đăng ký đang hoạt động, giao dịch có ID giao dịch gốc tĩnh và duy nhất, vẫn tồn tại cho ID Apple và mặt tiền cửa hàng của khách hàng.

Để duy trì trạng thái giao dịch của khách hàng, hãy liên kết ID giao dịch ban đầu với tài khoản trên hệ thống của bạn.

Nó có thể là một tài khoản ẩn danh hoặc một tài khoản mà người dùng đã tạo bằng hệ thống của bạn.

Biết ID giao dịch ban đầu là rất quan trọng khi tận dụng sức mạnh của Thông báo Máy chủ App Store, cho phép máy chủ của bạn luôn cập nhật trạng thái giao dịch.

Một kịch bản cần làm nổi bật là khi đăng ký của khách hàng không tự động gia hạn, do đó nó rơi vào cái mà chúng tôi gọi là trạng thái thử lại thanh toán, nơi chúng tôi cố gắng khôi phục đăng ký trong tối đa 60 ngày.

Nếu bạn đã chọn tham gia tính năng Thời gian gia hạn thanh toán trong App Store Connect, thì những người đăng ký thử thanh toán lại với thời gian gia hạn sẽ tiếp tục có quyền truy cập vào dịch vụ đăng ký của họ, trong khi chúng tôi cố gắng khôi phục đăng ký của họ.

Và trong khi họ vẫn có quyền truy cập vào dịch vụ của bạn, hãy đảm bảo trình bày cho họ một lời kêu gọi hành động đơn giản để giải quyết vấn đề thanh toán của họ.

Để tìm hiểu thêm về Thử lại thanh toán và thời gian gia hạn thanh toán, hãy xem các liên kết phiên và tài nguyên của chúng tôi về việc giảm mất người đăng ký không tự nguyện.

Trạng thái cốt lõi cuối cùng là mua hàng không hoạt động hoặc thuê bao không hoạt động.

Trạng thái này đại diện cho những khách hàng trước đây đã mua hàng trong ứng dụng, nhưng không còn được hưởng sản phẩm hoặc dịch vụ đó nữa, do hết hạn hoặc nếu bị thu hồi.

Các giao dịch này liên tục và chứa ID giao dịch gốc, cho phép bạn duy trì trạng thái trên các thiết bị và nền tảng.

Đối với Đăng ký, không hoạt động được xác định bởi ngày hết hạn.

Và đối với tất cả các loại mua hàng trong ứng dụng, chúng có thể không hoạt động nếu có ngày thu hồi.

Điều này xảy ra khi một giao dịch đã được hoàn trả hoặc nếu quyền truy cập được cấp thông qua Chia sẻ trong gia đình đã bị thu hồi.

Đối với những người đăng ký không hoạt động của bạn, do hết hạn hoặc bị thu hồi, hãy cân nhắc trình bày các ưu đãi đăng ký để giành lại họ.

Và đối với những người ở trạng thái thử lại thanh toán, đừng quên trình bày cho họ lời kêu gọi hành động tương tự để giải quyết chi tiết thanh toán của họ.

Trong bài đánh giá, đây là ba trạng thái sản phẩm khách hàng cốt lõi mà ứng dụng của bạn sẽ sử dụng để chủ động khôi phục các giao dịch mua trong ứng dụng và điều chỉnh trải nghiệm ứng dụng của bạn cho khách hàng của bạn.

Hãy xem những trải nghiệm này trông song song như thế nào với ứng dụng Ocean Journal của chúng tôi.

Khách hàng mới sẽ thấy sản phẩm mới nhất của bạn và các ưu đãi giới thiệu.

Khách hàng tích cực hiện tại của bạn sẽ có cảm giác nó chỉ hoạt động, vì ứng dụng của bạn đã sắp xếp hợp lý quyền truy cập vào các sản phẩm và dịch vụ của bạn trên tất cả các thiết bị của họ.

Và đối với những người đăng ký không hoạt động của bạn, bạn có thể giới thiệu cho họ các ưu đãi giành lại lợi mới nhất của mình bằng cách sử dụng mã ưu đãi hoặc ưu đãi khuyến mại.

Được rồi, chúng tôi đã đề cập đến ba trạng thái sản phẩm cốt lõi của khách hàng và cách hỗ trợ các trạng thái này một mình là một chiến thắng lớn cho khách hàng của bạn.

Nhưng tất nhiên, có những cơ hội để đưa trải nghiệm đi xa hơn.

Ứng dụng của bạn có thể mở rộng hoặc tinh chỉnh trải nghiệm khách hàng để phù hợp với việc cung cấp sản phẩm, mô hình kinh doanh, chính sách và ưu tiên của bạn.

Nhưng đây là một vài điều cần xem xét khi chuẩn bị triển khai khôi phục chủ động vào ứng dụng của bạn.

Nếu bạn hỗ trợ nhiều sản phẩm hoặc nhóm đăng ký, trạng thái của khách hàng được xác định cho từng sản phẩm và từng nhóm đăng ký.

Do đó, bạn có thể cần tính đến các trạng thái lai hoặc bất kỳ phụ thuộc nào khác.

Xem xét bất kỳ hoạt động ngoài nền tảng nào và các yếu tố đó ảnh hưởng đến trạng thái sản phẩm của khách hàng của bạn như thế nào.

Và hãy chắc chắn kiểm tra Thông báo Máy chủ App Store, vì chúng rất quan trọng để duy trì trạng thái, từ máy chủ đến máy chủ, cho tất cả các loại mua hàng trong ứng dụng.

Và với Phiên bản 2, các loại thông báo và loại phụ mới hỗ trợ 28 sự kiện duy nhất, được gửi an toàn đến máy chủ của bạn trong thời gian gần như thực.

Tìm hiểu thêm về cách tích hợp hoặc di chuyển sang Phiên bản 2 trong phiên, "Khám phá tích hợp và di chuyển mua hàng trong ứng dụng."

Alex và Gabriel cũng bao gồm khả năng tương thích với StoreKit 2 và khung StoreKit ban đầu, và các phương pháp hay nhất.

Chúng tôi đã nói chuyện thông qua các trạng thái sản phẩm của khách hàng để hỗ trợ và trải nghiệm đó có thể là gì đối với khách hàng của bạn.

Bây giờ hãy xem qua các chi tiết triển khai.

Tôi sẽ sử dụng Ứng dụng SK Demo của chúng tôi mà chúng tôi đã cập nhật với khôi phục chủ động bằng StoreKit 2.

Lưu ý rằng ứng dụng SK Demo sẽ có sẵn để tải xuống trong phiên này.

Hãy xem lại trải nghiệm mặc định của SK Demo cho khách hàng mới, những người không có bất kỳ giao dịch mua trong ứng dụng đang hoạt động nào.

Để xem các sản phẩm của chúng tôi, hãy nhấn vào nút "Cửa hàng", nơi trên cùng chúng tôi có hàng tồn kho ô tô có sẵn dưới dạng mua hàng trong ứng dụng không thể tiêu hao.

Và sau đó chúng tôi có dịch vụ điều hướng của mình dưới dạng đăng ký tự động gia hạn hàng tháng, cung cấp ba cấp độ dịch vụ khác nhau cho khách hàng lựa chọn.

Và bên dưới, chúng tôi có tùy chọn đăng ký không gia hạn, cung cấp quyền truy cập một lần.

Điều này bao gồm trải nghiệm khách hàng mới của ứng dụng của chúng tôi, khi không có sản phẩm nào được mua.

Bây giờ hãy xem ứng dụng của chúng tôi có thể xác định xem khách hàng đã mua hàng hiện tại hay trong quá khứ như thế nào.

Nó yêu cầu ứng dụng của bạn thực hiện ba bước ngay lập tức khi khởi chạy ứng dụng.

Điều quan trọng nhất là các bước này được hoàn thành trước khi nút "Mua" được giao cho khách hàng.

Bước đầu tiên là ứng dụng của bạn sẽ cần bắt đầu lắng nghe các giao dịch từ App Store.

Đây là phương pháp hay nhất của App Store, vì các giao dịch có thể hiển thị bất cứ lúc nào từ các tính năng như Chia sẻ trong gia đình Yêu cầu mua, đổi mã, tự động gia hạn đăng ký hoặc khi giao dịch mua bị gián đoạn.

Ngoài ra, ứng dụng của bạn có thể nhận các giao dịch bị thu hồi, trong đó quyền truy cập bị mất do hoàn lại tiền hoặc không còn được chia sẻ thông qua Chia sẻ trong Gia đình.

Điều này sẽ áp dụng nhiều hơn trong các lần khởi chạy ứng dụng tiếp theo, khi quyền truy cập đã được cấp và trạng thái của chúng đang chuyển từ hoạt động sang không hoạt động.

Nếu các giao dịch được tìm thấy, chúng được coi là các giao dịch chưa hoàn thành và cần được xác thực, giao cho khách hàng và được đánh dấu là đã hoàn thành.

Điều này đảm bảo ứng dụng của bạn sẽ không bỏ lỡ bất kỳ giao dịch nào và mang lại trải nghiệm khách hàng tuyệt vời.

Bây giờ hãy xem ứng dụng SK Demo của chúng tôi lắng nghe các giao dịch trong StoreKit 2 như thế nào.

Ở đây tôi đang sử dụng chức năng listenForTransactions.

Nó sẽ trả lại bất kỳ giao dịch chưa hoàn thành hoặc cập nhật nào cho một giao dịch cho khách hàng App Store đã đăng nhập.

Đối với bất kỳ giao dịch nào được tìm thấy, tại đây, StoreKit 2 sẽ xác minh tính xác thực của các giao dịch này.

Và sau đó, sau khi ứng dụng của tôi cung cấp nội dung, cấp quyền truy cập hoặc cập nhật trạng thái sản phẩm của khách hàng, sau đó tôi sẽ hoàn tất giao dịch để thông báo cho App Store rằng giao dịch mua đã được giao.

Sau khi giao dịch kết thúc, nó sẽ không còn được trả lại cho ứng dụng của bạn, trên bất kỳ thiết bị nào, thông qua StoreKit.

Bước đầu tiên đó rất quan trọng đối với tất cả các ứng dụng và sẽ xảy ra trong mỗi lần khởi chạy ứng dụng trong tương lai.

Bước 2 là xác định trạng thái sản phẩm của khách hàng và điều này được thực hiện bằng cách chủ động yêu cầu các giao dịch đang hoạt động của khách hàng bằng cách sử dụng currentEntitlements.

Và đặc biệt đối với các đăng ký tự động gia hạn, để tính đến trạng thái gia hạn của khách hàng, chẳng hạn như bị hủy, thử thanh toán lại hoặc đang chờ hạ cấp, bạn sẽ sử dụng thêm Product.SubscriptionInfo.RenewalState.

Hãy xem ứng dụng SK Demo và xem cách chúng tôi thực hiện điều này.

Điều này bắt đầu với chức năng, cập nhật Trạng thái sản phẩm khách hàng, theo dõi trạng thái sản phẩm của khách hàng cho từng loại mua hàng trong ứng dụng liên tục của chúng tôi.

Sau đó, tôi lặp qua từng loại mua hàng bằng cách sử dụng phương thức Quyền lợi hiện tại của StoreKit 2.

Điều này trả lại các giao dịch cho các sản phẩm mà khách hàng có thể được hưởng.

Và chúng tôi ghi lại các giao dịch này cho mỗi loại sản phẩm.

Ở đây, cho các sản phẩm không tiêu dùng của chúng tôi và ở đây cho sản phẩm đăng ký không gia hạn của chúng tôi.

Để xác định xem họ là người đăng ký đang hoạt động hay không hoạt động, tôi đã thêm logic bổ sung để tính ngày hết hạn cho đăng ký không gia hạn của chúng tôi.

Và cuối cùng, tôi sẽ kiểm tra đăng ký tự động gia hạn đang hoạt động và áp dụng trạng thái đó cho nhóm đăng ký.

Để tính đến các trạng thái không hoạt động như thử thanh toán lại, hết hạn và bị thu hồi, trạng thái nhóm đăng ký biến đổi của chúng tôi sử dụng Product.SubscriptionInfo.RenewalState Bây giờ chúng tôi đã truy xuất các giao dịch của người dùng và xác định trạng thái khách hàng cho từng sản phẩm hoặc nhóm đăng ký, ứng dụng của chúng tôi có

Hãy cùng xem mã nguồn ứng dụng SK Demo.

Nếu không có giao dịch đang hoạt động nào được xác định cho cả ba loại sản phẩm mua trong ứng dụng, khách hàng sau đó sẽ thấy trải nghiệm khách hàng mới mặc định mà chúng tôi đã xem xét trước đó, nơi họ sẽ có lời kêu gọi hành động đơn giản đến trang "Cửa hàng" của chúng tôi.

Nếu khách hàng có bất kỳ giao dịch mua nào đang hoạt động, thì khi khởi chạy ứng dụng, họ sẽ thấy các giao dịch mua của mình và cập nhật các nút "Mua" trên tất cả các sản phẩm cho phù hợp.

Vì vậy, ở đây đối với hàng không phải hàng tiêu dùng, chúng tôi trình bày những gì họ đã mua và ứng dụng hiển thị hàng không phải hàng tiêu dùng đã mua của họ hoặc ứng dụng cung cấp lời kêu gọi hành động để khách hàng truy cập trải nghiệm cửa hàng.

Đối với các sản phẩm đang hoạt động, ở đây chúng tôi xử lý nếu khách hàng là người đăng ký tích cực của dịch vụ điều hướng cho các đăng ký không thể gia hạn và đăng ký tự động gia hạn.

Và trong phần cuối cùng của chúng tôi, chúng tôi tính đến những người đăng ký không hoạt động.

Những người có đăng ký đã hết hạn, bị thu hồi hoặc đang ở trạng thái thử thanh toán lại.

Được rồi, bây giờ chúng ta hãy vào ứng dụng SK Demo.

Chúng tôi muốn mô phỏng một khách hàng đang hoạt động cho cả đăng ký không tiêu thụ và đăng ký tự động gia hạn.

Vì vậy, nếu tôi mua xe đua và đăng ký điều hướng chuyên nghiệp, ứng dụng demo sẽ áp dụng dấu kiểm màu xanh lá cây để cho biết ứng dụng đã xác nhận những giao dịch mua đó đã thành công, đã được xác minh và đã kích hoạt chúng.

Với những giao dịch mua này, trạng thái sản phẩm khách hàng của tôi cho sản phẩm không tiêu hao được mua.

Và đối với đăng ký của chúng tôi, tôi là một người đăng ký tích cực.

Bây giờ, nếu tôi cài đặt ứng dụng trên một thiết bị mới, khi tôi khởi chạy ứng dụng SK Demo lần đầu tiên, nó sẽ chủ động thực hiện các bước một, hai và ba.

Ở đây bạn thấy ứng dụng demo của chúng tôi đã chủ động khôi phục quyền truy cập vào cả hai giao dịch mua của tôi mà không có bất kỳ hành động nào từ tôi.

Vì đây là một ứng dụng demo, đó là mức độ của các sản phẩm được phân phối.

Nhưng trong ứng dụng của bạn, quá trình này sẽ đảm bảo những khách hàng đang hoạt động này không được cung cấp các sản phẩm để mua mà họ đã sở hữu và những sản phẩm và dịch vụ đó được bật tự động cho họ.

Đối với khách hàng hiện tại của bạn, điều này thật tuyệt.

Không cần yêu cầu khách hàng đăng nhập hoặc nhấn vào "Khôi phục mua hàng".

Nó vừa hoạt động.

Ứng dụng của bạn có thể sử dụng API và dữ liệu có sẵn.

Vì vậy, chúng tôi đã đề cập đến ba bước để làm điều này với StoreKit 2.

Bây giờ tôi muốn thảo luận về cách triển khai trải nghiệm tương tự này cho khách hàng của bạn trên các phiên bản iOS trước đó, nơi bạn không thể tận dụng sức mạnh của StoreKit 2.

Với StoreKit gốc, bạn sẽ thực hiện các bước tương tự như StoreKit 2 để xác định trạng thái sản phẩm của khách hàng bằng cách chủ động khôi phục các giao dịch mua trong ứng dụng trên iOS 7 trở lên.

Để làm điều này, nó sẽ yêu cầu máy chủ của bạn sử dụng điểm cuối verifyReceipt để xác thực và truy xuất các giao dịch mới nhất nhằm xác định trạng thái sản phẩm của khách hàng.

Biên lai ứng dụng xuất hiện trên thiết bị khi một ứng dụng được cài đặt từ App Store.

Nhưng hãy nhớ rằng, khi thử nghiệm với Sandbox hoặc TestFlight, biên lai ứng dụng chỉ xuất hiện sau khi giao dịch mua trong ứng dụng đã được hoàn thành hoặc khôi phục.

Nếu ứng dụng của bạn không tìm thấy biên lai ứng dụng, điều này chỉ nên xảy ra trong Sandbox và ứng dụng của bạn có thể xem xét tình huống này giống như một khách hàng mới khi không tìm thấy giao dịch mua trong ứng dụng.

Biên lai ứng dụng được tạo trong quá khứ là đủ để truy xuất các giao dịch mới nhất từ App Store.

Do đó, không có hành động nào của khách hàng như "Khôi phục mua hàng" hoặc receiptRefresh là cần thiết.

Chỉ cần bao gồm bí mật được chia sẻ với yêu cầu xác minh Biên lai của bạn để nhận các giao dịch cho các đăng ký không phải hàng tiêu dùng, đăng ký không gia hạn và đăng ký tự động gia hạn.

Hãy nhìn lại ba bước triển khai mà chúng tôi đã xem xét trước đó.

Sự khác biệt nằm ở Bước 2, nơi bạn xác định trạng thái sản phẩm của khách hàng.

Cách chúng tôi xác định trạng thái sản phẩm của khách hàng bắt đầu bằng việc nhận ứng dụng trên thiết bị, đến lượt nó, máy chủ của bạn xác thực với điểm cuối xác minh Biên lai của App Store.

Hãy xem xét quá trình này.

Trước tiên, chúng tôi cần truy xuất Biên lai ứng dụng và đảm bảo rằng bạn đang sử dụng thuộc tính appStoreReceiptURL, như bạn có thể thấy trong mẫu này từ tài liệu dành cho nhà phát triển của chúng tôi.

Với biên lai ứng dụng, hãy xem cách điều này được gửi từ thiết bị đến máy chủ của bạn và App Store.

Ứng dụng của bạn trên một thiết bị ở đây bên trái.

Trước tiên, nó sẽ truy xuất biên lai ứng dụng và gửi nó đến máy chủ của bạn, sau đó xác thực nó với điểm cuối xác minh App Store verifyReceipt.

Từ phản hồi đó, bạn sẽ xác định trạng thái sản phẩm của khách hàng và gửi những trạng thái đó đến ứng dụng của bạn.

Để xác định trạng thái sản phẩm của khách hàng, chúng tôi đã sử dụng Công cụ Quyền lợi từ WWDC2020.

Nó được cập nhật để hỗ trợ đăng ký không phải hàng tiêu dùng và không gia hạn, và hiện xử lý trạng thái khách hàng mới khi không có giao dịch mua trong ứng dụng.

Để tìm hiểu thêm về cách sử dụng Công cụ Quyền lợi của chúng tôi, tôi khuyến khích bạn xem phiên "Kiến trúc để đăng ký" và tải xuống dự án mẫu.

Bạn có thể tìm thấy các liên kết đến phiên này và hơn thế nữa với tài nguyên của video này.

Điều đó hoàn thành Bước 2, nơi ứng dụng của bạn sẽ nhận được trạng thái sản phẩm của khách hàng từ máy chủ của bạn.

Bây giờ ứng dụng của bạn sẽ cá nhân hóa trải nghiệm ứng dụng ngay lập tức khi khởi chạy bằng StoreKit 2 và các khung StoreKit gốc.

Tôi muốn chia sẻ một số phương pháp hay nhất cuối cùng.

Đầu tiên, tiếp tục cung cấp nút "Khôi phục mua hàng" trong ứng dụng của bạn.

Mặc dù không được sử dụng thường xuyên, nhưng nó mang đến cho khách hàng cơ hội buộc một ứng dụng khôi phục các giao dịch Apple ID của họ trong trường hợp có sự cố hoặc nếu khách hàng sử dụng một ID Apple khác.

Khi ứng dụng của bạn lần đầu tiên chủ động khôi phục các giao dịch mua trong ứng dụng của khách hàng trên thiết bị, bạn nên tối ưu hóa ứng dụng của mình và lưu trữ dữ liệu một cách an toàn để hỗ trợ xác định trạng thái sản phẩm của khách hàng.

CloudKit là một tính năng cần xem xét với tính linh hoạt, bảo mật và khả năng đồng bộ hóa trên các thiết bị của khách hàng.

Kiểm tra việc triển khai của bạn là rất quan trọng khi sử dụng StoreKit.

Và với StoreKit 2, bạn có thể kiểm tra việc triển khai khôi phục chủ động của mình với Sandbox, TestFlight và Xcode StoreKit thử nghiệm.

Và nếu bạn đang sử dụng StoreKit gốc, điều quan trọng cần nhớ là biên lai ứng dụng có thể không xuất hiện khi thử nghiệm trong Sandbox và TestFlight, trong khi nó luôn xuất hiện khi ứng dụng được cài đặt từ App Store.

Nếu không có biên lai ứng dụng, ứng dụng của bạn nên sử dụng trải nghiệm khách hàng mới mặc định và đảm bảo bạn có sẵn nút Khôi phục mua hàng.

Tóm lại, hãy cập nhật ứng dụng của bạn để chủ động kiểm tra các giao dịch mua mà không cần bất kỳ hành động nào của khách hàng, không cần nhấn hoặc xác thực.

Cho phép ứng dụng của bạn điều chỉnh trải nghiệm của khách hàng ngay lập tức khi ra mắt để phù hợp với trạng thái sản phẩm mới, đang hoạt động và không hoạt động của khách hàng.

Duy trì trạng thái trên tất cả các giao dịch của khách hàng, từ máy chủ đến máy chủ, cho tất cả các loại mua trong ứng dụng, bằng cách triển khai Thông báo Máy chủ App Store Phiên bản 2.

Điều này cho phép phụ trợ của bạn biết gần như theo thời gian thực bất kỳ thay đổi nào đã xảy ra với một giao dịch, chẳng hạn như hoàn lại tiền hoặc các giao dịch bị thu hồi, hoặc gia hạn đăng ký, thử lại thanh toán và hết hạn.

Cảm ơn bạn đã xem và hãy chắc chắn xem phiên bổ sung này, "Có gì mới với mua hàng trong ứng dụng", nơi Dani và Ian sẽ cho bạn biết về tất cả các bản cập nhật tuyệt vời cho StoreKit, API máy chủ và Thông báo máy chủ Phiên bản 2.

Cảm ơn bạn. Hãy cẩn thận.

♪ ♪