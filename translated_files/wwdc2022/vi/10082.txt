10082

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Xin chào mọi người, tên tôi là John Crowson, và tôi là một kỹ sư phần mềm trong nhóm Công cụ Hiệu suất tại Apple.

Trong buổi nói chuyện này, tôi rất vui được giới thiệu với bạn một số công cụ mới để theo dõi các hàng treo trong ứng dụng của bạn với Xcode và phát hiện treo trên thiết bị.

Tôi sẽ là người hướng dẫn bạn khi chúng tôi xem xét các giai đoạn khác nhau trong quy trình phát triển ứng dụng của bạn và xem xét công cụ nào phù hợp nhất để trợ giúp trong từng giai đoạn.

Bài nói chuyện này được chia thành bốn phần: Đầu tiên, tôi sẽ đề cập đến, Treo là gì?

Sau đó, tôi sẽ trình bày công cụ để giúp bạn khám phá và chẩn đoán treo trong khi phát triển ứng dụng của bạn, trong khi thử nghiệm beta ứng dụng của bạn và sau khi phát hành ứng dụng của bạn.

Hãy bắt đầu nào!

Tôi muốn nói với bạn về một ứng dụng mới mà nhóm của tôi đang phát triển: Xe tải thực phẩm, sẽ giúp quản lý xe tải thực phẩm đặc biệt bán bánh rán.

Hãy để tôi giới thiệu cho bạn một số loại bánh rán mà tôi đã tạo ra.

Huh, phải mất rất nhiều thời gian để cuộn qua danh sách bánh rán của tôi.

Ứng dụng bị lag và sẽ không phản hồi bất kỳ cú chạm nào của tôi.

Tại Apple, chúng tôi gọi giai đoạn không phản hồi này là "treo".

Luồng chính của ứng dụng chịu trách nhiệm xử lý các tương tác của người dùng và cập nhật nội dung chế độ xem.

Việc treo được báo cáo khi luồng chính đang bận thực hiện công việc hoặc chờ đợi trên một luồng hoặc tài nguyên hệ thống khác, gây ra sự chậm trễ trong việc cập nhật nội dung chế độ xem ít nhất 250 mili giây.

Luồng chính cũng không có sẵn để xử lý các tương tác của người dùng mới cho đến khi việc treo được giải quyết.

Đối với người dùng, có vẻ như ứng dụng hoàn toàn bị kẹt.

Tạo một ứng dụng đáp ứng là rất quan trọng để cung cấp trải nghiệm người dùng tích cực.

Các ứng dụng không phản hồi nhất quán có thể dẫn đến việc người dùng buộc thoát khỏi ứng dụng, chuyển sang một ứng dụng khác và trong một số trường hợp, thậm chí xóa ứng dụng của bạn và viết đánh giá tiêu cực.

Bởi vì điều này, việc theo dõi các hàng treo trong ứng dụng của bạn là rất quan trọng để đạt được và duy trì cơ sở người dùng của bạn.

Cung cấp trải nghiệm đáp ứng đảm bảo mọi người sẽ thích sử dụng ứng dụng của bạn.

Để biết thêm thông tin về treo và nguyên nhân gây ra chúng, cũng như các chiến lược để loại bỏ chúng khỏi mã của bạn, hãy xem cuộc nói chuyện "Hiểu và loại bỏ treo khỏi ứng dụng của bạn" từ năm 2021.

Quá trình phát triển ứng dụng có thể được chia thành ba giai đoạn.

Đầu tiên, phát triển phiên bản ứng dụng mới nhất tại bàn làm việc bằng Xcode.

Sau đó, kiểm tra ứng dụng và thu thập phản hồi trong môi trường beta mà không cần Xcode.

Ví dụ, bạn có thể có một phiên bản ứng dụng được ký phát triển trên thiết bị của bạn hoặc được phân phối thông qua TestFlight.

Cuối cùng, phát hành phiên bản ứng dụng mới nhất trên App Store.

Ngay cả đối với các nhà phát triển chủ động nhất, các vấn đề treo mới có thể phát sinh ở bất kỳ giai đoạn nào, vì vậy điều quan trọng là bạn phải biết các công cụ để giải quyết chúng trong mỗi giai đoạn.

Trước iOS 16 và Xcode 14, chúng tôi đã cung cấp hai công cụ hỗ trợ phát hiện và chẩn đoán các vấn đề trong ứng dụng của bạn.

MetricKit là một khuôn khổ hỗ trợ thu thập các chỉ số tỷ lệ treo không tổng hợp và báo cáo chẩn đoán từ những người dùng cá nhân trên ứng dụng beta hoặc phát hành công khai của bạn.

Xcode Organizer cung cấp một chỉ số tỷ lệ treo tổng hợp từ người dùng trên ứng dụng phát hành công khai của bạn.

Có những khoảng trống ở đây, đặc biệt là khi phát triển ứng dụng của bạn hoặc khi cố gắng hiểu mã nguồn nào đã khiến chỉ số tỷ lệ treo phát hành công khai tăng lên.

Trong iOS 16 và Xcode 14, chúng tôi đã bận rộn giới thiệu một số công cụ mới để trợ giúp.

Hãy giới thiệu ngắn gọn từng người trong số họ trước khi chúng tôi đề cập đến chúng chi tiết hơn.

Trình kiểm tra hiệu suất luồng trong Xcode cảnh báo bạn về các vấn đề gây treo luồng trong khi gỡ lỗi ứng dụng của bạn mà không chủ động truy tìm nó.

Các công cụ trong Xcode hiện phát hiện và nhãn bị treo trong khi truy tìm ứng dụng của bạn.

Phát hiện treo trên thiết bị cung cấp khả năng phát hiện treo mà không cần sử dụng Xcode hoặc truy tìm, cung cấp thông báo treo theo thời gian thực và hỗ trợ chẩn đoán trong khi sử dụng ứng dụng đã ký phát triển hoặc TestFlight của bạn.

Và cuối cùng, trình tổ chức trong Xcode hiện hỗ trợ các báo cáo treo, cung cấp chẩn đoán treo tổng hợp từ người dùng trong lĩnh vực này.

Bây giờ bạn đã biết treo là gì và các giai đoạn khác nhau mà chúng có thể phát sinh, tôi sẽ đề cập đến cách theo dõi treo trong khi phát triển một ứng dụng với Xcode.

Trong Xcode 14, công cụ Kiểm tra Hiệu suất Luồng mới sẽ thông báo cho bạn trong Trình điều hướng Vấn đề Xcode khi nó phát hiện các đảo ngược ưu tiên và công việc không phải giao diện người dùng trên luồng chính của ứng dụng của bạn, cả hai đều là nguyên nhân phổ biến gây treo.

Bây giờ tôi đã quay lại Xcode để chẩn đoán hang mà tôi đã quan sát trước đó trong ứng dụng Food Truck khi tôi đang cuộn qua những chiếc bánh rán mà tôi đã tạo.

Khi tôi xây dựng và chạy ứng dụng và lặp lại tương tác của người dùng, công cụ Kiểm tra Hiệu suất Luồng đã cảnh báo tôi về rủi ro treo do đảo ngược ưu tiên gây ra.

Điều này có nghĩa là một luồng ưu tiên cao hơn đang cố gắng được đồng bộ hóa với một luồng ưu tiên thấp hơn.

Điều này có thể chỉ ra rằng việc treo mà chúng tôi nhận thấy là do luồng chính đang chờ trên các luồng có mức độ ưu tiên thấp hơn khác nhau.

Để phát hiện các đảo ngược ưu tiên và công việc không phải giao diện người dùng trên luồng chính của ứng dụng của bạn, hãy bật công cụ Kiểm tra Hiệu suất Luồng từ phần Chẩn đoán của sơ đồ thích hợp.

Cảnh báo Trình kiểm tra hiệu suất luồng đã giúp tôi khám phá ra thủ phạm tiềm ẩn của việc treo cổ của mình, nhưng để phân loại thêm, tôi sẽ muốn biết chủ đề kia đang làm gì trong suốt thời gian treo.

Hãy sử dụng một công cụ khác để đi sâu hơn.

Công cụ Time Profiler cung cấp cho bạn khả năng biết từng luồng trong ứng dụng của bạn đang làm gì theo thời gian bằng cách cung cấp các ngăn xếp cuộc gọi.

Mới trong Xcode 14, Time Profiler cũng phát hiện treo và gắn nhãn chúng trực tiếp trong theo dõi quy trình tương ứng.

Trong ứng dụng Food Truck, tôi sẽ sử dụng Time Profiler để xác nhận việc treo đang xảy ra khi cuộn qua bánh rán của tôi, rằng đó là do sự đảo ngược ưu tiên trên luồng chính và tìm ra những luồng ưu tiên thấp hơn đang bận làm gì khiến luồng chính phải chờ đợi.

Tôi bắt đầu từ menu Sản phẩm > Hồ sơ trong Xcode.

Điều này xây dựng ứng dụng để phát hành và khởi chạy các Công cụ đã được thiết lập để nhắm mục tiêu ứng dụng.

Tôi khởi chạy mẫu Time Profiler và bắt đầu ghi lại dấu vết của sự tương tác người dùng có vấn đề trong ứng dụng Food Truck.

Tôi thấy có một hang đang được phát hiện và dán nhãn trong dòng thời gian.

Thời gian treo cũng được chỉ định để giúp đánh giá mức độ nghiêm trọng của vấn đề.

Tiếp theo, tôi có thể nhấp ba lần vào khoảng thời gian treo để tạo ra bộ lọc thời gian treo và lọc thông tin trong chế độ xem chi tiết ở dưới cùng để chỉ các sự kiện xảy ra trong khoảng thời gian đã chọn này.

Nó cũng giúp dễ dàng nhìn thấy những gì đã xảy ra trong khoảng thời gian này trong các bản nhạc khác.

Điều đầu tiên tôi nhận thấy là luồng chính hầu như không sử dụng CPU trong khoảng thời gian treo, có nghĩa là luồng chính không phản hồi vì nó đang chờ trên một luồng khác, không phải vì bản thân nó đang làm quá nhiều công việc.

Điều này phù hợp với cảnh báo đảo ngược ưu tiên của Trình kiểm tra hiệu suất luồng từ trước đó.

Tiếp theo, tôi thấy một luồng công nhân có nhiều CPU sử dụng trong quá trình treo.

Đây có thể là chủ đề mà chủ đề chính đang chờ đợi.

Bước tiếp theo sẽ là kiểm tra những gì luồng công nhân đang làm trong quá trình treo và giải quyết sự đảo ngược ưu tiên.

Phát hiện và dán nhãn treo trong Dụng cụ là một cách tuyệt vời để làm nổi bật bất kỳ hàng treo nào gặp phải khi lập hồ sơ ứng dụng của bạn.

Nó có sẵn theo mặc định trong các công cụ Time Profiler và CPU Profiler.

Ngoài ra còn có một công cụ theo dõi treo độc lập mới mà bạn có thể thêm vào bất kỳ tài liệu theo dõi nào để treo bề mặt kết hợp với các dụng cụ khác.

Ngoài việc phát hiện và dán nhãn treo, nó cho phép bạn định cấu hình ngưỡng thời lượng treo để tìm các khoảng thời gian không phản hồi cụ thể.

Bây giờ bạn đã học được cách sử dụng Xcode để khám phá và chẩn đoán treo trên bàn làm việc.

Ngay cả với phạm vi thử nghiệm tuyệt vời trong quá trình phát triển, môi trường beta và phát hành công khai có khả năng phát hiện ra các đường dẫn mã bị treo mà bạn chưa xem xét.

Tiếp theo, tôi sẽ giới thiệu cách theo dõi các lần treo khi ứng dụng được triển khai trong môi trường beta.

Bây giờ tôi đã triển khai một bản dựng của ứng dụng Food Truck cho TestFlight thông qua App Store Connect và nó được tải xuống trên thiết bị cá nhân của tôi.

Tôi sẽ kiểm tra ứng dụng khi bán bánh rán quanh thị trấn, bao gồm cả ở những nơi mà tôi không phải lúc nào cũng có kết nối mạng mạnh.

Nhưng làm thế nào để tôi phát hiện và chẩn đoán treo nếu thiết bị của tôi không được kết nối với Xcode?

Để tiếp tục theo dõi các trường hợp treo trong các điều kiện này, iOS 16 giới thiệu tính năng phát hiện treo trên thiết bị trong cài đặt Nhà phát triển, cung cấp thông báo treo theo thời gian thực và hỗ trợ chẩn đoán.

Cái này có sẵn cho các ứng dụng đã ký phát triển hoặc TestFlight.

Đã đến lúc bắt đầu bán các đơn đặt hàng.

Khi tôi cố gắng mở các đơn đặt hàng hiện tại của mình, tôi nhận được thông báo phát hiện treo trên thiết bị rằng ứng dụng của tôi đang bị treo, lần này trong hơn ba giây.

Tôi tự hỏi tại sao tôi không nhận thấy điều này khi tôi đang phát triển với Xcode?

Tôi sẽ cần sử dụng thông tin chẩn đoán được cung cấp bởi công cụ phát hiện treo trên thiết bị để tìm hiểu thêm.

Khi ứng dụng của bạn được thiết lập để phát triển, tính năng này có thể được bật bằng cách mở Cài đặt> Nhà phát triển> Phát hiện treo và bật công tắc.

Cài đặt Hang Threshold cho phép bạn định cấu hình thời gian treo tối thiểu để phát hiện.

Ngưỡng treo ngắn nhất là 250 mili giây và có thể tăng lên 500 mili giây hoặc cao hơn.

Treo dài có xu hướng có tác động của người dùng cao hơn, nhưng ngay cả những cái ngắn hơn cũng có thể gây rối cho trải nghiệm, tùy thuộc vào bối cảnh, đặc biệt nếu chúng xảy ra liên tiếp.

Sau khi cài đặt ứng dụng của bạn, nó sẽ xuất hiện trong danh sách các ứng dụng được giám sát.

Phần cuối cùng hiển thị danh sách theo thứ tự thời gian các bản ghi có sẵn cho các lần treo mà bạn đã được cảnh báo.

Lưu ý rằng những chẩn đoán này là nỗ lực tốt nhất và được xử lý trong nền với mức độ ưu tiên thấp để giảm thiểu chi phí hiệu suất.

Điều này có nghĩa là quá trình xử lý có thể mất nhiều thời gian hơn, đặc biệt nếu hệ thống đang bận.

May mắn thay, một thông báo thụ động được hiển thị khi có chẩn đoán mới.

Hãy kiểm tra các chẩn đoán cho hang đã được phát hiện khi tôi mở đơn đặt hàng trong ứng dụng trong khi bán bánh rán quanh thị trấn.

Tôi được cung cấp cả nhật ký treo dựa trên văn bản và kẹp đuôi cho việc treo được phát hiện.

Nhật ký treo dựa trên văn bản có ít thông tin hơn, nhưng có thể giúp chúng ta hiểu về việc treo trong nháy mắt.

Để điều tra sâu hơn, hãy mở tailspin trong Công cụ để xem tương tác luồng trong quy trình của bạn hoặc xác định việc sử dụng tài nguyên hệ thống chẳng hạn.

Để bắt đầu, tôi sẽ sử dụng nút Chia sẻ để gửi nhật ký treo dựa trên văn bản đến máy Mac, nơi tôi có thể tượng trưng cho nó và xem nó trên màn hình lớn hơn.

Từ việc xem một đoạn trích của nhật ký treo dựa trên văn bản mà tôi đã chuyển và tượng trưng hóa, tôi thấy rằng trong quá trình treo, tôi đang gọi một phương thức trên luồng chính mà tôi biết thực hiện các yêu cầu đồng bộ đến mạng.

Khi tôi đang thử nghiệm ứng dụng tại bàn làm việc của mình với Xcode và kết nối mạng mạnh, có thể không có bất kỳ sự chậm trễ nào khi yêu cầu dữ liệu từ mạng.

Tuy nhiên, khi thử nghiệm ứng dụng ở những nơi có kết nối mạng hạn chế, yêu cầu mất nhiều thời gian hơn và dẫn đến treo.

Điều quan trọng là phải kiểm tra phiên bản beta của ứng dụng của bạn trong các điều kiện khác nhau trong thế giới thực này và tính năng phát hiện treo trên thiết bị cho phép bạn theo dõi các trường hợp treo chỉ bằng thiết bị của mình.

Tại thời điểm này, tôi đã phát hiện và chẩn đoán treo bằng cách sử dụng công cụ có sẵn trong giai đoạn phát triển và beta, và tôi sẵn sàng cung cấp ứng dụng Food Truck cho khách hàng trong App Store.

Bây giờ tôi sẽ trình bày cách theo dõi các lần treo khi ứng dụng của bạn nằm trong tay khách hàng, trên các phiên bản hệ điều hành, thiết bị khác nhau và trong các điều kiện thế giới thực khác mà bạn có thể không thể sao chép được trong lần thử nghiệm trước của mình.

Mới trong Xcode 14, Xcode Organizer hỗ trợ các báo cáo treo để cung cấp chẩn đoán treo tổng hợp từ các thiết bị của khách hàng.

Dữ liệu được thu thập là từ những khách hàng đã đồng ý chia sẻ phân tích ứng dụng và chúng chứa thông tin về dấu vết ngăn xếp luồng chính dẫn đến việc treo.

Báo cáo treo có sẵn từ điều hướng bên trái của Trình tổ chức Xcode.

Khi các dấu vết ngăn xếp tương tự được thu thập, chúng được nhóm lại với nhau để tạo thành một chữ ký duy nhất.

Trong danh sách, chữ ký được hiển thị được sắp xếp dựa trên tác động của người dùng.

Đối với mỗi chữ ký, bạn có thể tìm thấy một vài bản ghi treo mẫu.

Mỗi nhật ký treo chứa dấu vết ngăn xếp luồng chính chứa mã chịu trách nhiệm cho việc treo, thời lượng treo và phiên bản thiết bị và hệ điều hành mà từ đó nhật ký bắt nguồn.

Mỗi chữ ký cũng cung cấp số liệu thống kê tổng hợp về số lượng nhật ký treo mà chữ ký chịu trách nhiệm và phân tích các nhật ký đó theo Phiên bản hệ điều hành và thiết bị.

Để xác định những điểm treo ảnh hưởng nhiều nhất đến khách hàng của bạn, hãy chú ý đến chữ ký hàng đầu của bạn.

Trong trường hợp này, chữ ký hàng đầu chịu trách nhiệm cho 21 phần trăm thời gian treo trong bản phát hành này.

Vì tôi đã gửi ứng dụng đến App Store với thông tin biểu tượng, báo cáo treo hiển thị cho tôi tất cả các chức năng được đặt tên giống như chúng có trong mã nguồn.

Bằng cách kiểm tra các chức năng trong ngăn xếp cuộc gọi của luồng chính này, tôi có thể suy ra rằng việc treo này là do đọc đồng bộ một tệp từ đĩa trên luồng chính, được biết là chặn trong khoảng thời gian đáng kể.

Điều quan trọng là phải giải quyết các vấn đề về hiệu suất ảnh hưởng nhiều nhất đến khách hàng của bạn và Người tổ chức là một công cụ tuyệt vời để xác định họ.

Kiểm tra dữ liệu này sau mỗi bản phát hành ứng dụng để xác thực các lần treo trước đó đã được giải quyết và để giải quyết các lần treo mới có thể xuất hiện.

Bạn cũng có thể truy xuất cùng một dữ liệu báo cáo treo thông qua App Store Connect REST APIs.

Điều này có thể giúp bạn tích hợp dữ liệu hiệu suất với hệ thống của riêng bạn hoặc chạy phân tích bổ sung.

Tôi thực sự khuyên bạn nên xem video "Xác định xu hướng với API Năng lượng và Hiệu suất" để tìm hiểu thêm về cách sử dụng API Năng lượng và Hiệu suất.

Được thêm vào Xcode 13.2, giờ đây bạn có thể nhận được thông báo khi theo dõi các chỉ số sức mạnh và hiệu suất trong ứng dụng của mình.

Tôi khuyên bạn nên bật thông báo bằng cách nhấp vào nút Thông báo ở trên cùng bên phải của chế độ xem Hồi quy của Trình tổ chức Xcode.

Điều này sẽ cảnh báo bạn về sự gia tăng đột ngột trong tỷ lệ treo ứng dụng của bạn.

Tìm hiểu thêm về hồi quy hiệu suất trong bài nói chuyện "Chẩn đoán sức mạnh và hồi quy hiệu suất trong ứng dụng của bạn" từ năm 2021.

Để cải thiện trải nghiệm của bạn trong Xcode Organizer, tôi thực sự khuyên bạn nên xây dựng và gửi ứng dụng của mình lên App Store với thông tin biểu tượng.

Thông tin biểu tượng này được sử dụng để thêm tên hàm từ ứng dụng của bạn vào các báo cáo trong Trình tổ chức Xcode.

Điều này làm cho dấu vết ngăn xếp dễ hiểu hơn đáng kể.

Nó cũng cho phép điều hướng bằng một cú nhấp chuột từ tên hàm trong dấu vết ngăn xếp đến định nghĩa hàm trong trình chỉnh sửa nguồn Xcode.

Thông tin được trích xuất bị giới hạn trong hàm và phương thức, tên và đường dẫn của các tệp mã nguồn và thông tin số dòng.

Điều quan trọng cần lưu ý là thông tin biểu tượng giới hạn sẽ được lưu trữ an toàn và sẽ không bao giờ được chia sẻ.

Tuyệt vời!

Bây giờ bạn đã biết cách khám phá và chẩn đoán treo ở từng giai đoạn trong quá trình phát triển.

Trong tương lai, khám phá, chẩn đoán và sửa chữa treo trong giai đoạn sớm nhất có thể của quá trình phát triển.

Sử dụng các công cụ có sẵn để trợ giúp, bao gồm chủ động lập hồ sơ các tính năng mới bằng Công cụ.

Đảm bảo bật Trình kiểm tra hiệu suất luồng và phát hiện treo trên thiết bị.

Sau mỗi lần phát hành, hãy sử dụng Xcode Organizer để giải quyết các vấn đề ảnh hưởng nhiều nhất đến khách hàng của bạn và để xác thực rằng các vụ treo từ các phiên bản ứng dụng trước đó đã được giải quyết.

Cho phép thông báo hồi quy được chủ động cảnh báo về các chỉ số hiệu suất hồi quy, đây có thể là dấu hiệu đầu tiên của các vấn đề về năng lượng và hiệu suất.

Và cuối cùng, xây dựng và gửi ứng dụng của bạn đến App Store với thông tin biểu tượng để cải thiện tính hữu ích của Xcode Organizer.

Bằng cách làm theo các bước này, các ứng dụng của bạn sẽ có hiệu suất tốt hơn để cung cấp trải nghiệm người dùng tốt nhất có thể.

Cảm ơn vì đã đi chơi tại WWDC!

♪