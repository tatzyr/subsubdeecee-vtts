10117

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Kevin Ferrell: Xin chào, tên tôi là Kevin, và tôi là một kỹ sư đang làm việc trên khung PushToTalk mới, cho phép trải nghiệm hệ thống bộ đàm cho các ứng dụng trên iOS.

Sau đó, tôi sẽ được đồng nghiệp Trevor tham gia để nói về cách bạn có thể tăng cường giao tiếp bằng giọng nói trong các ứng dụng của mình với khuôn khổ mới này.

Đầu tiên, tôi sẽ giới thiệu khung PushToTalk và giải thích cách nó phù hợp với ứng dụng của bạn.

Tiếp theo, chúng ta sẽ xem xét cách cấu hình ứng dụng của bạn cho PushToTalk.

Sau đó, Trevor sẽ hướng dẫn cách truyền và nhận âm thanh bằng cách sử dụng khuôn khổ.

Cuối cùng, Trevor sẽ kết thúc với các phương pháp hay nhất để nâng cao trải nghiệm người dùng Push To Talk trong khi vẫn duy trì thời lượng pin cho người dùng của bạn.

Tôi sẽ bắt đầu bằng cách giới thiệu các tính năng chính của khung PushToTalk mới.

Khung PushToTalk cho phép bạn xây dựng một lớp ứng dụng giao tiếp âm thanh mới trên iOS cung cấp trải nghiệm kiểu bộ đàm cho người dùng của bạn.

Các ứng dụng Push To Talk có nhiều ứng dụng trong các lĩnh vực mà giao tiếp nhanh là điều cần thiết như chăm sóc sức khỏe và dịch vụ khẩn cấp.

Để cung cấp trải nghiệm Push To Talk tuyệt vời, người dùng cần một cách để nhanh chóng truy cập các tính năng truyền âm thanh đồng thời có thể xem ai đang phản hồi chúng.

Đồng thời, ứng dụng Push To Talk phải tiết kiệm năng lượng để đảm bảo rằng người dùng có thể duy trì thời lượng pin cả ngày trong khi sử dụng ứng dụng.

Khung PushToTalk cung cấp cho bạn các API để sử dụng giao diện người dùng hệ thống mà người dùng có thể truy cập ở bất kỳ đâu trên hệ thống mà không cần phải khởi chạy trực tiếp ứng dụng của bạn.

Giao diện người dùng hệ thống cho phép người dùng nhanh chóng kích hoạt truyền âm thanh, ứng dụng này sẽ khởi chạy ứng dụng của bạn ở chế độ nền để ghi và truyền âm thanh đến máy chủ của bạn.

Hệ thống cung cấp sự minh bạch cho người dùng bằng cách hiển thị ai đang nói khi ứng dụng của bạn phát âm thanh từ máy chủ của bạn.

Khung PushToTalk hoàn thành điều này bằng cách giới thiệu một loại thông báo đẩy mới thông báo cho ứng dụng của bạn khi âm thanh mới có sẵn để phát lại.

Khi ứng dụng của bạn nhận được thông báo này, nó sẽ được khởi chạy ở chế độ nền để nó có thể phát trực tuyến và phát âm thanh.

Khung PushToTalk được thiết kế để tương thích với các giải pháp truyền thông đầu cuối và cơ sở hạ tầng phụ trợ hiện có.

Nếu bạn đã triển khai quy trình làm việc Push To Talk trong ứng dụng của mình, bạn sẽ dễ dàng tích hợp khung PushToTalk vào mã hiện có của mình.

Khung cho phép ứng dụng của bạn triển khai quy trình mã hóa và phát trực tuyến âm thanh của riêng mình để truyền âm thanh giữa những người dùng.

Điều này cung cấp sự linh hoạt trong cách ứng dụng của bạn xử lý truyền âm thanh và cho phép tương thích với các nền tảng khác.

Cuối cùng, nhiều ứng dụng Push To Talk dựa vào các phụ kiện Bluetooth không dây để kích hoạt ghi âm và truyền âm thanh.

Các ứng dụng của bạn có thể tiếp tục tích hợp với các phụ kiện này bằng cách sử dụng khung CoreBluetooth và có thể kích hoạt ghi âm trong PushToTalk.

Nếu bạn đang xây dựng ứng dụng Push To Talk đầu tiên của mình, hãy ghi nhớ những cân nhắc tích hợp này khi bạn bắt đầu kiến trúc mã của mình.

Trước khi chúng tôi bắt đầu xem qua mã cho khung PushToTalk mới, chúng tôi muốn chứng minh trải nghiệm Push To Talk có thể hoạt động như thế nào trong ứng dụng của bạn.

Trevor và tôi đã xây dựng một ứng dụng demo để cho thấy PushToTalk hoạt động như thế nào.

Để bắt đầu, tôi sẽ nhấn vào nút tham gia để kết nối với phiên Push To Talk, mà chúng tôi gọi là kênh.

Khi tôi tham gia vào kênh, tôi có thể truyền và nhận âm thanh đến các thành viên khác của kênh.

Trevor và một vài đồng nghiệp của chúng tôi đã tham gia cùng một kênh để chúng tôi có thể giao tiếp suốt cả ngày.

Tôi có thể truyền âm thanh trực tiếp từ ứng dụng bằng nút micrô, nhưng khung PushToTalk cho phép tôi truy cập tính năng truyền từ mọi nơi trong hệ thống.

Khi có một kênh Push To Talk đang hoạt động, một viên thuốc màu xanh sẽ xuất hiện trên thanh trạng thái.

Nhấn vào viên thuốc đó sẽ hiển thị giao diện người dùng hệ thống.

Giao diện người dùng hệ thống hiển thị tên của kênh Push To Talk mà tôi đã tham gia và một hình ảnh do ứng dụng cung cấp để giúp người dùng nhanh chóng xác định kênh.

Tôi có thể truyền âm thanh đến kênh bằng cách nhấn và giữ nút Nói chuyện và sau đó đợi chuông hệ thống cho biết rằng tôi có thể bắt đầu nói.

Này, Trevor.

Bạn đã sẵn sàng để bao quát các slide WWDC của mình chưa? Kết thúc.

Trevor Sheridan: Khi thiết bị của tôi nhận được tin nhắn của Kevin, nó hiển thị một thông báo có chứa tên và hình ảnh của anh ấy, cung cấp sự minh bạch về người mà tôi nhận được tin nhắn.

Khi tôi khởi chạy giao diện người dùng hệ thống, tôi có thể nhanh chóng trả lời tin nhắn của Kevin hoặc rời khỏi kênh mà không cần phải dừng những gì tôi đang làm.

Tôi không muốn để Kevin đợi, vì vậy tôi sẽ trả lời ngay bây giờ.

Này, Kevin. Tôi sẽ sẵn sàng trong vài phút nữa.

Kết thúc.

Kevin: Giao diện người dùng hệ thống PushToTalk cũng có thể được truy cập từ Màn hình khóa để người dùng có thể nhận và trả lời tin nhắn mà không cần phải mở khóa thiết bị của họ.

Được rồi, hẹn gặp lại! Kết thúc.

Bây giờ chúng ta đã thảo luận về cách PushToTalk hoạt động, chúng ta sẽ xem xét cách tích hợp khung trong ứng dụng của riêng bạn.

Có một vài sửa đổi mà bạn cần thực hiện cho dự án Xcode của mình để hỗ trợ khung PushToTalk.

Đầu tiên, bạn cần thêm chế độ nền Push To Talk mới.

Điều này cho phép ứng dụng của bạn chạy ở chế độ nền khi phản hồi các sự kiện Push To Talk.

Tiếp theo, bạn cũng phải thêm khả năng Push To Talk vào ứng dụng của mình để kích hoạt các tính năng của khung.

Khả năng thông báo đẩy được yêu cầu để cho phép APNS đánh thức ứng dụng của bạn trong nền để phát âm thanh đã nhận.

Cuối cùng, ứng dụng của bạn phải yêu cầu quyền ghi âm từ người dùng và bao gồm một chuỗi mục đích micrô trong tệp Info.plist của nó.

Bây giờ chúng tôi đã sẵn sàng để bắt đầu tích hợp mã.

Bước đầu tiên trong quy trình làm việc Push To Talk là tham gia một kênh.

Kênh đại diện và mô tả phiên Push To Talk với hệ thống.

Ứng dụng của bạn tương tác với các kênh thông qua trình quản lý kênh.

Trình quản lý kênh là giao diện chính để ứng dụng của bạn tham gia các kênh và thực hiện các hành động như truyền và nhận âm thanh.

Khi bạn tham gia một kênh, giao diện người dùng hệ thống Push To Talk sẽ khả dụng và ứng dụng của bạn nhận được mã thông báo thiết bị APNS có thể được sử dụng trong suốt vòng đời của kênh.

Bạn phải tham gia một kênh trước khi bạn có thể bắt đầu truyền và nhận âm thanh.

Bước đầu tiên là tạo một trình quản lý kênh bằng cách sử dụng trình khởi tạo lớp.

Trình khởi tạo này yêu cầu bạn cung cấp một đại diện quản lý kênh và một đại diện khôi phục kênh.

Nhiều cuộc gọi đến trình khởi tạo dẫn đến cùng một phiên bản được chia sẻ được trả về, nhưng chúng tôi khuyên bạn nên lưu trữ trình quản lý kênh trong một biến phiên bản.

Điều quan trọng là phải khởi tạo trình quản lý kênh của bạn càng sớm càng tốt trong quá trình khởi động ứng dụng trong phương thức didFinishLaunchingWithOptions của ApplicationDelegate.

Điều này đảm bảo rằng trình quản lý kênh được khởi tạo nhanh chóng để các kênh hiện có có thể được khôi phục và thông báo đẩy sẽ được gửi đến ứng dụng của bạn khi nó khởi chạy trong nền.

Bây giờ chúng tôi đã sẵn sàng tham gia một kênh.

Khi ai đó tham gia một kênh từ ứng dụng của bạn, bạn phải cung cấp UUID để xác định kênh và mô tả mô tả kênh cho hệ thống.

UUID tương tự sẽ được sử dụng khi tương tác với người quản lý trong suốt vòng đời của kênh này.

Mô tả bao gồm một cái tên và một hình ảnh.

Cung cấp một hình ảnh độc đáo để đại diện cho kênh giúp người dùng của bạn dễ dàng xác định kênh hơn khi tương tác với hệ thống.

Ứng dụng của bạn tham gia một kênh bằng cách gọi phương thức requestJoin trên trình quản lý kênh.

Lưu ý rằng chỉ có thể tham gia một kênh khi ứng dụng của bạn đang chạy ở phía trước.

Khi ứng dụng của bạn tham gia một kênh, phương thức didJoinChannel của đại diện quản lý kênh sẽ được gọi.

Phương pháp đại diện này là dấu hiệu của bạn cho thấy ứng dụng của bạn đã tham gia kênh.

Ngoài ra, phương thức EphemeralPushToken đã nhận của đại biểu sẽ được gọi bằng mã thông báo đẩy APNS có thể được sử dụng để gửi thông báo Push To Talk đến thiết bị này.

Mã thông báo này sẽ chỉ hoạt động trong suốt vòng đời của kênh Push To Talk.

Hãy nhớ rằng mã thông báo đẩy APNS có độ dài thay đổi và bạn không nên mã hóa cứng độ dài của chúng vào ứng dụng của mình.

Yêu cầu tham gia kênh có thể không thành công, chẳng hạn như khi cố gắng tham gia kênh khi một kênh khác đã hoạt động.

Nếu điều này xảy ra, trình xử lý lỗi sẽ được gọi và lỗi sẽ cho biết lý do thất bại.

Khi người dùng rời khỏi một kênh, phương thức didLeaveChannel của đại diện sẽ được gọi.

Người dùng của bạn có thể rời khỏi kênh do ứng dụng của bạn yêu cầu rời khỏi theo chương trình hoặc người dùng có thể nhấn vào nút Rời khỏi Kênh trong giao diện người dùng hệ thống.

Đại diện quản lý kênh có một phương thức xử lý lỗi LeaveChannel liên quan sẽ được gọi nếu yêu cầu rời khỏi kênh không thành công.

PushToTalk hỗ trợ khôi phục các kênh trước đó bất cứ khi nào ứng dụng của bạn được khởi chạy lại sau khi bị chấm dứt hoặc sau khi khởi động lại thiết bị.

Để hệ thống thực hiện điều này, bạn phải cung cấp một bộ mô tả kênh để cập nhật hệ thống.

Ở đây chúng tôi có một phương thức trợ giúp sẽ tìm nạp bộ mô tả kênh được lưu trong bộ nhớ cache của chúng tôi trong đại diện khôi phục của chúng tôi.

Để giữ cho hệ thống phản hồi nhanh, bạn nên quay lại từ phương pháp này càng nhanh càng tốt và không nên thực hiện bất kỳ tác vụ chặn hoặc chạy lâu dài nào như yêu cầu mạng để truy xuất bộ mô tả kênh của bạn.

Trong suốt vòng đời của phiên Push To Talk của bạn, bạn nên cung cấp thông tin cập nhật cho bộ mô tả bất cứ khi nào thông tin về kênh thay đổi.

Bạn cũng nên thông báo cho hệ thống về những thay đổi đối với kết nối mạng hoặc tính khả dụng của máy chủ bằng cách sử dụng đối tượng trạng thái dịch vụ.

Ở đây chúng tôi đang cập nhật mô tả cho kênh.

Bạn có thể gọi phương thức này bất cứ khi nào bạn cần cập nhật tên kênh hoặc hình ảnh.

Trong ví dụ này, chúng tôi đang cung cấp bản cập nhật cho hệ thống để chỉ ra rằng kết nối của ứng dụng với máy chủ của nó đang ở trạng thái kết nối lại.

Điều này cập nhật giao diện người dùng hệ thống cho phù hợp và ngăn người dùng truyền âm thanh nếu trạng thái dịch vụ đang kết nối hoặc ngắt kết nối.

Khi kết nối được thiết lập lại, bạn nên cập nhật trạng thái dịch vụ thành "sẵn sàng".

Bây giờ hãy xem lại cách gửi và nhận âm thanh bằng PushToTalk.

Trevor, bạn đã sẵn sàng xem qua phần còn lại của API chưa?

Kết thúc.

Trevor: Đúng. Gửi chúng qua. Kết thúc.

Bây giờ chúng ta đã thấy cách cấu hình khung PushToTalk, hãy khám phá cách truyền và nhận âm thanh.

Khả năng cốt lõi của khung PushToTalk là cho phép người dùng của bạn nhanh chóng truyền âm thanh.

Người dùng có thể bắt đầu truyền âm thanh từ bên trong ứng dụng của bạn hoặc từ hệ thống Push To Talk UI.

Nếu ứng dụng của bạn hỗ trợ các phụ kiện Bluetooth thông qua CoreBluetooth, bạn cũng có thể bắt đầu truyền trong nền để đáp ứng với sự thay đổi đặc trưng của thiết bị ngoại vi.

Khi truyền, khung PushToTalk sẽ mở khóa micrô của thiết bị và kích hoạt phiên âm thanh của ứng dụng của bạn để cho phép ghi âm trong nền.

Hãy xem lại quy trình này một cách chi tiết.

Để bắt đầu truyền từ bên trong ứng dụng của bạn, bạn có thể gọi hàm requestBeginTransmitting.

Điều này có thể được gọi bất cứ khi nào ứng dụng của bạn đang chạy ở phía trước hoặc khi phản ứng với sự thay đổi đặc tính của thiết bị ngoại vi Bluetooth.

Nếu hệ thống không thể bắt đầu truyền, phương thức ToBeginTransmitting InChannel không thành công của đại biểu sẽ được gọi với lý do thất bại.

Ví dụ: nếu người dùng có cuộc gọi di động đang hoạt động, họ sẽ không thể bắt đầu truyền Push To Talk.

Để dừng truyền, hãy gọi phương thức stopTransmitting của người quản lý kênh.

Để xử lý các lỗi khi cố gắng dừng truyền, chẳng hạn như khi người dùng không ở trạng thái truyền, đại diện người quản lý kênh có phương thức ToStopTransmitting InChannel không thành công liên quan.

Cho dù bạn bắt đầu truyền từ bên trong ứng dụng của mình hay nếu người dùng bắt đầu từ giao diện người dùng hệ thống, đại diện người quản lý kênh của bạn sẽ nhận được cuộc gọi lại "Có bắt đầu truyền".

Nguồn truyền sẽ được chuyển đến phương thức và cho biết liệu việc truyền được bắt đầu từ giao diện người dùng hệ thống, API có lập trình hay sự kiện nút phần cứng.

Khi quá trình truyền bắt đầu, hệ thống sẽ kích hoạt phiên âm thanh cho ứng dụng của bạn.

Đây là tín hiệu của bạn rằng bây giờ bạn có thể bắt đầu ghi âm.

Bạn không nên bắt đầu hoặc dừng phiên âm thanh của riêng mình.

Khi quá trình truyền kết thúc, đại diện quản lý kênh của bạn sẽ nhận được các sự kiện hủy kích hoạt phiên truyền cuối và âm thanh.

Hãy nhớ rằng trong khi đường truyền của bạn đang hoạt động, phiên âm thanh của bạn có thể bị gián đoạn bởi các nguồn khác, chẳng hạn như cuộc gọi điện thoại và FaceTime mà bạn cần xử lý trong ứng dụng của mình.

Khung PushToTalk cũng cho phép ứng dụng của bạn nhận và phát âm thanh từ những người dùng khác khi ở chế độ nền.

Quá trình này dựa trên loại Thông báo Đẩy mới của Apple dành riêng cho các ứng dụng Push To Talk.

Khi máy chủ Push To Talk của bạn có âm thanh mới để người dùng nhận, nó sẽ gửi cho người dùng thông báo Push To Talk bằng cách sử dụng mã thông báo đẩy thiết bị bạn nhận được khi tham gia kênh.

Khi ứng dụng của bạn nhận được thông báo đẩy, nó phải báo cáo một loa đang hoạt động cho khung, điều này sẽ khiến hệ thống kích hoạt phiên âm thanh của ứng dụng của bạn và cho phép nó bắt đầu phát lại.

Thông báo Push To Talk mới tương tự như các loại thông báo khác trên iOS và có các thuộc tính cụ thể mà bạn phải đặt để cho phép phân phối đến ứng dụng Push To Talk của mình.

Đầu tiên, loại đẩy APNS phải được đặt thành "pushtotalk" trong tiêu đề yêu cầu.

Tiếp theo, tiêu đề chủ đề APNS phải được đặt thành mã định danh gói ứng dụng của bạn với hậu tố ".voip-ptt" được thêm vào cuối.

Tải trọng đẩy có thể chứa các khóa tùy chỉnh có liên quan đến ứng dụng của bạn, chẳng hạn như tên của loa đang hoạt động hoặc dấu hiệu cho thấy phiên đã kết thúc và ứng dụng sẽ rời khỏi kênh Push To Talk.

Phần thân của thuộc tính "aps" có thể để trống.

Ngoài ra, giống như các loại đẩy liên quan đến giao tiếp khác, tải trọng Push To Talk nên có mức độ ưu tiên APNS là 10 để yêu cầu giao hàng ngay lập tức và APNS hết hạn bằng 0 để ngăn các lần đẩy cũ hơn không còn liên quan được gửi sau đó.

Khi máy chủ của bạn gửi thông báo Push To Talk, ứng dụng của bạn sẽ được khởi động ở chế độ nền và phương thức đại diện đẩy đến sẽ được gọi.

Khi bạn nhận được tải trọng đẩy, bạn sẽ cần xây dựng một loại kết quả đẩy để chỉ ra hành động nào nên được thực hiện do kết quả của thông báo đẩy.

Để chỉ ra rằng một người dùng từ xa đang nói, hãy trả về kết quả đẩy bao gồm thông tin của người tham gia đang hoạt động, bao gồm tên của họ và hình ảnh tùy chọn.

Điều này sẽ khiến hệ thống đặt người tham gia đang hoạt động trên kênh và cho biết rằng kênh đang ở chế độ nhận.

Hệ thống sau đó sẽ kích hoạt phiên âm thanh của bạn và gọi phương thức đại diện didActivateaudioSession.

Bạn nên đợi phương thức này được gọi trước khi bắt đầu phát lại.

Nếu máy chủ của bạn quyết định rằng người dùng không nên tham gia vào kênh nữa, nó có thể chỉ ra điều này trong tải trọng đẩy, bạn có thể trả về kết quả đẩy leaveChannel.

Điều quan trọng cần lưu ý là bạn nên trả về PTPushResult từ phương thức này càng nhanh càng tốt và không chặn luồng.

Nếu bạn đang cố gắng đặt người tham gia từ xa đang hoạt động và không lưu trữ hình ảnh của họ cục bộ, bạn có thể trả về Người tham gia từ xa đang hoạt động chỉ với tên của người nói.

Sau đó tải xuống hình ảnh của họ trên một chuỗi riêng biệt và khi hình ảnh được truy xuất, hãy cập nhật activeRemoteParticipant bằng cách gọi setActiveRemoteParticipant trên trình quản lý kênh.

Khi người tham gia từ xa đã nói xong, bạn nên đặt activeRemoteParticipant thành nil.

Điều này cho hệ thống biết rằng bạn không còn nhận được âm thanh trên kênh và hệ thống sẽ hủy kích hoạt phiên âm thanh của bạn.

Điều này cũng sẽ cập nhật hệ thống Push To Talk UI và cho phép người dùng truyền lại.

Bây giờ chúng tôi đã đề cập đến những điều cơ bản về cách tích hợp PushToTalk vào ứng dụng của bạn, hãy xem lại một số phương pháp hay nhất để tối ưu hóa trải nghiệm người dùng và duy trì thời lượng pin.

Khung PushToTalk cung cấp giao diện người dùng hệ thống để người dùng bắt đầu truyền và rời khỏi kênh từ bất kỳ đâu trong hệ thống.

Ngoài ra, nó linh hoạt và cho phép bạn triển khai giao diện người dùng Push To Talk tùy chỉnh của riêng mình khi ứng dụng của bạn ở phía trước.

Khung PushToTalk sử dụng các tài nguyên hệ thống được chia sẻ.

Chỉ có một ứng dụng Push To Talk có thể hoạt động trên hệ thống tại một thời điểm và giao tiếp Push To Talk sẽ được thay thế bằng các cuộc gọi di động, FaceTime và VoIP.

Ứng dụng của bạn nên xử lý các lỗi PushToTalk một cách duyên dáng và phản hồi tương ứng.

Như đã đề cập trước đó, khung PushToTalk xử lý việc kích hoạt và hủy kích hoạt phiên âm thanh của bạn cho bạn.

Tuy nhiên, bạn vẫn nên định cấu hình danh mục phiên âm thanh của mình để phát và ghi lại khi ứng dụng của bạn khởi chạy.

Hệ thống cung cấp các hiệu ứng âm thanh tích hợp để cảnh báo người dùng rằng micrô được kích hoạt và tắt khi truyền.

Bạn không nên cung cấp hiệu ứng âm thanh của riêng mình cho những sự kiện này.

Ứng dụng của bạn cũng rất quan trọng để theo dõi và phản hồi các thông báo AVAudioSession, chẳng hạn như gián đoạn phiên, thay đổi tuyến đường và lỗi.

Ứng dụng Push To Talk của bạn có thể bị ảnh hưởng bởi các sự kiện phiên âm thanh này giống như bất kỳ ứng dụng âm thanh nào khác trên hệ thống.

Điều quan trọng là phải tối ưu hóa ứng dụng của bạn để duy trì tuổi thọ pin.

Khung PushToTalk cung cấp cho ứng dụng của bạn thời gian chạy nền khi cần thiết, chẳng hạn như khi truyền và nhận âm thanh.

Khi ứng dụng của bạn không được người dùng sử dụng, nó sẽ bị hệ thống đình chỉ để duy trì tuổi thọ pin.

Bạn không nên kích hoạt hoặc hủy kích hoạt các phiên âm thanh của riêng mình.

Hệ thống sẽ xử lý kích hoạt phiên âm thanh cho bạn vào những thời điểm thích hợp.

Điều này đảm bảo rằng phiên âm thanh của bạn có mức độ ưu tiên thích hợp trong hệ thống và có thể bị tạm ngưng khi nó không được sử dụng.

Máy chủ Push To Talk của bạn nên sử dụng loại thông báo đẩy mới để cảnh báo ứng dụng của bạn rằng có âm thanh mới đang được phát hoặc phiên Push To Talk đã kết thúc.

Để biết thêm thông tin về việc cải thiện tuổi thọ pin trong ứng dụng của bạn, hãy tham khảo phiên "Tất nguồn: Cải thiện mức tiêu thụ pin".

Khi ứng dụng Push To Talk của bạn ở chế độ nền và ứng dụng không truyền hoặc nhận âm thanh, nó sẽ bị hệ thống đình chỉ.

Khi ứng dụng của bạn bị tạm ngưng, mọi kết nối mạng sẽ bị ngắt kết nối.

Bạn nên cân nhắc áp dụng Network.framework và QUIC để giảm các bước cần thiết để thiết lập kết nối TLS an toàn và cải thiện tốc độ kết nối ban đầu.

Network.framework đã tích hợp hỗ trợ cho QUIC.

Kiểm tra phiên "Giảm sự chậm trễ của mạng để có ứng dụng đáp ứng nhanh hơn" để biết thêm thông tin về cách sử dụng QUIC.

Khung PushToTalk cho phép bạn xây dựng trải nghiệm giao tiếp theo phong cách bộ đàm mạnh mẽ và tiết kiệm năng lượng trong các ứng dụng của mình.

Nếu bạn đã có một ứng dụng triển khai trải nghiệm kiểu walk-talkie trên iOS, bạn nên bắt đầu cập nhật ứng dụng hiện có của mình để sử dụng API mới.

Nếu bạn đang triển khai một ứng dụng bộ đàm mới, bạn nên sử dụng khung PushToTalk ngay bây giờ.

Cuối cùng, vui lòng gửi phản hồi khi bạn bắt đầu thử nghiệm khuôn khổ mới và tích hợp nó với ứng dụng của mình.

Cảm ơn bạn và chúc bạn có một WWDC tuyệt vời!

Hết lần này đến lần khác!

♪