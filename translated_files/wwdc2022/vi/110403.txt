110403

♪ Nhạc hip-hop nhạc cụ êm dịu ♪

♪

Xin chào! Tên tôi là Jared, và tôi là một kỹ sư phần mềm ở đây tại Apple.

Hôm nay tôi muốn nói với bạn về một khuôn khổ mới mà chúng tôi sẽ giới thiệu trong năm nay cho iOS, iPadOS và macOS.

Khung mới này được gọi là Tài sản nền và chúng tôi tin rằng nó sẽ làm phong phú thêm trải nghiệm người dùng của các ứng dụng mà tất cả chúng ta đều biết và yêu thích, và quan trọng hơn là bạn phát triển.

Để bắt đầu, tôi sẽ giới thiệu cho bạn khuôn khổ Tài sản Nền mới.

Sau đó, tôi sẽ chỉ cho bạn cách áp dụng khuôn khổ mới vào ứng dụng của bạn.

Tiếp theo là tổng quan nhanh về tiện ích mở rộng và những khả năng mới mà nó cung cấp.

Sau đó, chúng tôi sẽ kết thúc với một số phương pháp hay nhất và mọi thứ chúng tôi đã học được.

Trước khi chúng ta bắt đầu, hãy nói về những gì chúng ta đang cố gắng giải quyết ở đây.

Sự thật là, chờ đợi không vui chút nào.

Bất cứ khi nào chúng tôi thấy mình yêu cầu những người sử dụng phần mềm của chúng tôi chờ đợi, chúng tôi đang gia tăng sự thất vọng và lấy đi trải nghiệm mà chúng tôi muốn ứng dụng của mình cung cấp.

Ví dụ, bạn có thường xuyên thấy mình duyệt web không ngừng qua App Store để tìm kiếm ứng dụng hoàn hảo đó không?

Cuối cùng bạn cũng tìm thấy nó, và ồ nó trông thật hoàn hảo!

Sau đó bạn nhấn vào nút GET đó.

Với mỗi khoảnh khắc, mức độ phấn khích của bạn tăng lên.

Sau đó, bạn nhanh chóng nhận ra rằng tùy thuộc vào kết nối mạng của bạn hoặc kích thước của ứng dụng, bạn có thể thấy mình phải đợi khi ứng dụng tải xuống.

Sau đó, sau vài giây chờ đợi, bạn thấy mình đặt điện thoại xuống, lấy một tách cà phê, đọc cuốn sách yêu thích của bạn về lợi ích của việc thực hành chánh niệm và thành thạo sự kiên nhẫn.

Sau đó một vài giờ trôi qua, và cuối cùng bạn cũng nhấc điện thoại lên.

Mức độ phấn khích của bạn tăng lên khi bạn sẵn sàng lao vào ứng dụng hoàn hảo mà bạn đã chờ đợi để sử dụng cả ngày.

Chỉ để khởi chạy ứng dụng và được chào đón ngay lập tức với điều này: tải xuống nhiều hơn.

Thật khó hiểu.

Bạn đã rời xa điện thoại của mình cả ngày.

Tại sao ứng dụng này bây giờ khiến bạn phải chờ đợi lâu hơn nữa?

Ứng dụng này không thể tự động tải xuống nội dung này sau khi ứng dụng được cài đặt sao?

Đối với bất kỳ ai có kết nối internet chậm hơn, điều này có thể khiến họ thất vọng khi đóng và xóa ứng dụng.

Sự thật là, đây không phải là trải nghiệm mà bất kỳ ai trong chúng ta đều muốn có.

Chúng tôi biết đây không phải lỗi của bạn, và chúng tôi tin rằng chúng tôi có thể làm cho trải nghiệm này tốt hơn rất nhiều!

Đây là lý do tại sao chúng tôi tự hào giới thiệu với bạn trong năm nay, Background Assets.

Khung này được phát triển để giúp bạn làm phong phú thêm trải nghiệm người dùng của các ứng dụng của mình.

Vì vậy, ngay khi ứng dụng của bạn được khởi chạy, nó đang cung cấp ấn tượng đầu tiên phi thường!

Tài sản nền được thiết kế linh hoạt với quy trình làm việc hiện tại của bạn.

Rất nhiều bạn đã phát triển các hệ thống quản lý tài sản phức tạp và chúng tôi muốn khuôn khổ mới này dễ dàng phù hợp với các giải pháp mà bạn đã phát triển.

Chúng tôi cũng biết rằng bạn muốn có thể đẩy nội dung cập nhật lên ứng dụng của mình mà không cần phải gửi thêm vào App Store.

Không có gì lạ khi các trò chơi hoặc ứng dụng khác cần thêm nội dung sau khi ứng dụng đã được vận chuyển.

Hãy suy nghĩ về kết cấu nghệ thuật được cập nhật hoặc sửa lỗi trong dữ liệu cấp trò chơi.

Background Assets cung cấp cho bạn khả năng lên lịch và cập nhật tài sản của bạn ngoài vòng đời ứng dụng của bạn.

Chúng tôi tin rằng điều quan trọng là tài sản phải có mặt trước khi khởi chạy ứng dụng đầu tiên hoặc bất cứ khi nào ứng dụng được cập nhật qua đêm.

Vì vậy, chúng tôi đã làm việc để tạo ra một cơ chế giúp đảm bảo rằng nội dung của bạn có mặt vào thời điểm ứng dụng của bạn được khởi chạy.

Và cuối cùng, khuôn khổ càng dễ áp dụng, chúng tôi càng có thể khuyến khích bạn sử dụng nó trong các ứng dụng của mình.

Chúng tôi muốn Tài sản nền được sử dụng ở bất kỳ nơi nào mà tài sản lớn cần được tải xuống trước.

Bằng cách đó, chúng tôi có thể giảm thiểu thời gian ứng dụng của bạn đang chờ và hiển thị thanh tiến trình trước khi nội dung của nó có sẵn.

Vì vậy, bạn có thể tự hỏi, khuôn khổ mới này giúp bạn giải quyết vấn đề này như thế nào?

Chà, để có thể mở rộng nhất có thể, chúng tôi đã tạo một tiện ích mở rộng ứng dụng mới để tải xuống nội dung trong nền.

Tiện ích mở rộng mới này được xây dựng dựa trên công nghệ tiện ích mở rộng ứng dụng mạnh mẽ mà các tiện ích mở rộng khác trên nền tảng của chúng tôi sử dụng.

Điều này cung cấp một cơ hội để chạy mã bên ngoài vòng đời của ứng dụng.

Ví dụ, tiện ích mở rộng sẽ chạy bất cứ khi nào người dùng cài đặt ứng dụng của bạn lần đầu tiên nhưng vẫn chưa khởi chạy nó.

Tiện ích mở rộng cũng sẽ chạy bất cứ khi nào ứng dụng được cập nhật tự động trong nền.

Điều này giúp đảm bảo rằng nội dung của bạn có thể được lên lịch và tải xuống trước khi người dùng mở ứng dụng sau khi nó đã được cập nhật.

Cuối cùng, tiện ích mở rộng sẽ chạy định kỳ trong nền, cho phép bạn kiểm tra các tài sản được cập nhật và lên lịch định kỳ theo thời gian.

Mặc dù điều quan trọng cần lưu ý là thời gian chạy tiện ích mở rộng chỉ tồn tại trong thời gian ngắn, vì vậy tất cả công việc sẽ cần được lên lịch bởi tiện ích mở rộng của bạn một cách vội vàng.

Nếu việc tải xuống không được lên lịch nhanh chóng, hệ thống có thể chấm dứt phần mở rộng.

Cũng cần lưu ý rằng tần suất khả năng chạy định kỳ của tiện ích mở rộng sẽ lùi lại dựa trên việc sử dụng ứng dụng.

Nếu ứng dụng của bạn không được sử dụng nhiều, thì tiện ích mở rộng sẽ nhận được thời gian chạy ít thường xuyên hơn.

Vì vậy, đó là tổng quan về khuôn khổ Tài sản Nền mới.

Nó cung cấp cho bạn các công cụ bạn cần để đảm bảo rằng tài sản của bạn có sẵn vào thời điểm ứng dụng của bạn được khởi chạy.

Điều này được thực hiện với một tiện ích mở rộng chạy bất cứ khi nào ứng dụng của bạn được cài đặt hoặc cập nhật, nhưng trước khi người dùng khởi chạy ứng dụng của bạn.

Bây giờ, hãy xem xét việc áp dụng khung Tài sản Nền vào dự án của bạn và bắt đầu!

Trình quản lý tải xuống trong khuôn khổ là phương tiện chính được sử dụng để giao tiếp với dịch vụ hệ thống Tài sản nền.

Trình quản lý là một đối tượng đơn lẻ có thể được sử dụng trong toàn bộ ứng dụng của bạn.

Sử dụng trình quản lý, bạn có thể lên lịch tải xuống tài sản của mình ở phía trước hoặc nền trước.

Bạn cũng có thể truy xuất các bản tải xuống hiện đang trong quá trình bay, có thể đã bắt đầu trước khi ứng dụng của bạn được khởi chạy.

Tải xuống cũng có thể bị hủy.

Điều này rất hữu ích nếu chúng đã được lên lịch hoặc đang trong quá trình tải xuống và bạn không còn cần tài sản mà bạn đã yêu cầu ban đầu nữa.

Chúng tôi cũng đã giới thiệu một cơ chế đồng bộ hóa để quản lý quyền truy cập độc quyền giữa ứng dụng của bạn và tiện ích mở rộng để cả tiện ích mở rộng và ứng dụng cuối cùng không lên lịch hoặc sửa đổi các bản tải xuống hiện có cùng một lúc.

Tôi có một ví dụ để chỉ cho bạn, nhưng bây giờ, nhiều hơn về điều này sau!

Hãy cùng xem việc bắt đầu sử dụng Tài sản nền dễ dàng như thế nào.

Tôi sẽ bắt đầu bằng cách hướng dẫn bạn một số điều cơ bản của API.

Sau đó tôi sẽ theo dõi điều đó sau bằng cách chỉ cho bạn cách kết hợp tất cả những điều này lại với nhau thành một tiện ích mở rộng ứng dụng.

Để bắt đầu, bạn sẽ nhập mô-đun khung Tài sản Nền.

Sau đó, nó dễ dàng như xác định một URL trỏ đến vị trí của nơi đặt tài sản từ xa của bạn.

Sau đó, chúng tôi theo dõi điều đó bằng cách xác định vùng chứa nhóm ứng dụng mà tiện ích mở rộng và ứng dụng của bạn đều là thành viên.

Có ứng dụng và tiện ích mở rộng của bạn trong cùng một nhóm cho phép họ quản lý tài sản của bạn trong quá trình tải xuống và sau khi hoàn thành.

Nếu bạn chưa quen thuộc với các nhóm ứng dụng, bạn có thể dễ dàng thêm một nhóm từ phần Ký & Khả năng của Xcode 14.

Chúng là một tính năng mạnh mẽ cho phép hai hoặc nhiều ứng dụng truy cập cùng một tài nguyên, hoặc trong trường hợp này, ứng dụng của bạn và tiện ích mở rộng của nó.

Điều tiếp theo cần làm là tạo đối tượng tải xuống của bạn.

Khung Tài sản Nền được thiết kế để hỗ trợ nhiều loại đối tượng tải xuống khác nhau.

Tuy nhiên, trong ví dụ này, chúng tôi sẽ tập trung vào cái phổ biến nhất: BAURLDownload.

Ngay lập tức, bạn sẽ nhận thấy rằng trình khởi tạo nhận URL và mã định danh nhóm ứng dụng.

Thông tin này cho hệ thống biết cả những gì chúng tôi đang tải xuống và nơi tệp kết quả sẽ kết thúc.

Nó cũng cần một mã định danh.

Bạn sẽ sử dụng mã định danh này để theo dõi quá trình tải xuống của mình qua nhiều lần khởi chạy ứng dụng và trong tiện ích mở rộng.

Công cụ sẽ không cho phép lên lịch nhiều hơn một lần tải xuống với cùng một mã định danh.

Do đó, bạn nên làm cho các số nhận dạng này trở nên duy nhất.

Tiếp theo, chúng ta sẽ lấy một tham chiếu đến đối tượng được chia sẻ BADownloaderManager.

Trình quản lý tải xuống là giao diện duy nhất của bạn vào Tài sản nền.

Đó là thứ cho phép bạn quan sát, hủy bỏ và lên lịch tải xuống.

Sau đó, chúng tôi sẽ chuyển nó một tham chiếu yếu đến một đại biểu phù hợp với giao thức BADownloadManagerDelegate.

Tôi sẽ sớm đi sâu hơn vào giao thức này, nhưng phần quan trọng nhất cần biết bây giờ là nó nhận được tin nhắn về các bản tải xuống đã được lên lịch.

Điều duy nhất còn lại cần làm là yêu cầu người quản lý tải xuống lên lịch tải xuống.

Nếu vì bất kỳ lý do gì mà việc tải xuống không thể được lên lịch, thì một lỗi sẽ xảy ra.

Ngoài việc lên lịch tải xuống trong nền, chúng tôi cũng cung cấp API để thực hiện tải xuống tiền cảnh.

Chạy ở phía trước không chỉ giúp bạn tăng mức độ ưu tiên mà còn cho phép quá trình tải xuống của bạn bắt đầu ngay lập tức.

Điều này tương tự như việc sử dụng cấu hình phiên mặc định trong URLSession.

Chúng tôi cung cấp API này để ứng dụng của bạn có thể quảng bá bất kỳ bản tải xuống nào được lên lịch bởi tiện ích mở rộng của bạn ở chế độ nền trước.

Một điều cần lưu ý: thực hiện tải xuống tiền cảnh không khả dụng từ bên trong tiện ích mở rộng; nó chỉ có thể được bắt đầu từ ứng dụng.

Vì các tiện ích mở rộng không bao giờ có giao diện người dùng và người dùng không nhận thấy rằng chúng đang chạy, các tiện ích mở rộng chỉ có thể lên lịch tải xuống trong nền.

Nếu ứng dụng của bạn muốn quảng bá các bản tải xuống nền hiện có lên nền trước, điều này có thể dễ dàng được thực hiện bằng cách tìm nạp danh sách các bản tải xuống hiện đang hoạt động từ người quản lý.

Danh sách được trả về chứa tất cả các bản tải xuống hiện đang được lên lịch, có thể bao gồm các bản tải xuống trong chuyến bay hoặc xếp hàng trong bộ lập lịch.

Tiếp theo, ứng dụng của bạn có thể bắt đầu quá trình khuyến mãi bằng cách gọi startForegroundDownload.

Nếu một bản tải xuống đã ở phía trước, việc gọi phương thức này sẽ không làm gì cả.

Tuy nhiên, nếu quá trình tải xuống được theo nền, trước tiên nó sẽ bị tạm dừng, sau đó được tiếp tục ở phía trước mà không yêu cầu bất kỳ nội dung nào đã được tải xuống cho đến thời điểm này được tải xuống lại.

Cùng với nhau, điều này cung cấp một minh họa hiệu quả và đơn giản về việc sử dụng Tài sản nền dễ dàng như thế nào để thúc đẩy các bản tải xuống được lên lịch ở nền trước.

Nó thực sự đơn giản như vậy!

Trình quản lý tải xuống là giao diện chính của bạn được sử dụng để lên lịch và giám sát việc tải xuống nền.

Khi các đối tượng tải xuống này được xử lý bởi hệ thống, bạn sẽ nhận được tin nhắn trong đối tượng đại diện của mình.

Hãy xem qua đại biểu ngay bây giờ.

Người đại diện nhận được tin nhắn cho tất cả các bản tải xuống đã được lên lịch bởi tiện ích mở rộng hoặc ứng dụng của bạn.

Nếu có nhiều lượt tải xuống đã được lên lịch, tất cả chúng sẽ nhận được cuộc gọi lại.

Đây là nơi bạn sử dụng mã định danh duy nhất của đối tượng tải xuống để phân biệt giữa chúng.

Ứng dụng của bạn sẽ bắt đầu nhận được cuộc gọi lại ngay khi đại diện được thành lập trên BADownloadManager.

Các cuộc gọi lại không được xếp hàng bởi hệ thống.

Nếu ứng dụng của bạn không xử lý một trong các phương thức đại diện hoặc đại diện của bạn không được thiết lập, thì tiện ích mở rộng của bạn sẽ thức dậy để xử lý tin nhắn.

Điều này có nghĩa là bạn hoàn toàn mong đợi tiện ích mở rộng của mình sẽ được gửi tin nhắn nếu bạn chưa thiết lập một đại diện trên BADownloadManager trong ứng dụng của mình.

Nếu ứng dụng của bạn hiện đang ở phía trước được trình bày cho người dùng và đại diện của nó đã được thiết lập, thì các cuộc gọi lại sẽ được gửi đến ứng dụng của bạn và tiện ích mở rộng sẽ không bị đánh thức.

Tiện ích mở rộng sẽ chỉ đánh thức nếu ứng dụng của bạn không xử lý cuộc gọi lại đại diện của nó.

Nếu quá trình tải xuống kết thúc hoặc không thành công và ứng dụng không xử lý thông báo này, thì tiện ích mở rộng sẽ thức dậy.

Hãy nhớ rằng, tiện ích mở rộng không được đánh thức cho tất cả các loại cuộc gọi lại.

Chỉ các cuộc gọi lại chia sẻ các giao diện chung giữa BADownloadManagerDelegate và giao thức BADownloaderExtension.

Tải xuống thành công hay thất bại là một ví dụ về giao diện chung giữa đại diện và giao thức.

Mặc dù tiện ích mở rộng ứng dụng của bạn có các điểm vào riêng khiến nó thức dậy, nhưng nếu tiện ích mở rộng hiện đang chạy, nó có thể sử dụng BADownloadManager và thiết lập một đại diện.

Điều này sẽ cho phép cả ứng dụng và tiện ích mở rộng nhận tin nhắn trùng lặp đến các đại biểu của họ.

Hãy nhớ rằng các tiện ích mở rộng không đánh thức để xử lý tin nhắn đại diện.

Họ chỉ thức dậy tại các điểm vào tiện ích mở rộng được xác định trong giao thức BADownloaderExtension.

Chúng ta hãy xem giao thức cho đại diện của người quản lý tải xuống.

Chức năng đầu tiên là nhận tin nhắn bất cứ khi nào quá trình tải xuống bắt đầu.

Điều này rất hữu ích để theo dõi khi thiết bị cuối cùng đã chọn lên lịch tải xuống cụ thể.

Bạn cũng có thể được thông báo nếu quá trình tải xuống tạm dừng.

Một ví dụ về việc tạm dừng xảy ra sẽ là nếu tiện ích mở rộng bắt đầu tải xuống trong nền và sau đó ứng dụng của bạn yêu cầu chúng tôi quảng bá nó lên nền trước.

Trong chương trình khuyến mãi này sẽ có một cửa sổ nhỏ nơi quá trình tải xuống tạm dừng trước khi nó được tiếp tục.

Trình quản lý tải xuống cũng cho phép bạn theo dõi tiến trình tải xuống đang hoạt động của mình khi nó đang được tải xuống ở phía trước.

Chúng tôi cũng cung cấp một cơ chế để trả lời yêu cầu thách thức, điều này rất hữu ích để xác thực tính xác thực của kết nối hoặc cung cấp thông tin đăng nhập để ủy quyền kết nối.

Các chức năng quan trọng nhất là để xử lý quá trình tải xuống không thành công hoặc hoàn tất.

Nếu quá trình tải xuống không thành công, bạn có thể cần lên lịch lại hoặc xác định nguyên nhân.

Để tải xuống thành công, hệ thống đã đặt tệp ở vị trí do hệ điều hành quản lý.

Nếu thiết bị cạn kiệt dung lượng, thì hệ thống sẽ xóa tệp cho bạn.

Chúng tôi thực sự khuyên bạn nên để tệp ở vị trí mà hệ thống đã cung cấp.

Chỉ di chuyển tệp nếu bạn hoàn toàn phải và vui lòng không sao chép nó trừ khi bạn xóa tệp gốc sau đó.

Xin nhắc lại, giao thức cho đại diện của người quản lý tải xuống là để nhận các tin nhắn liên quan đến tải xuống mà ứng dụng hoặc tiện ích mở rộng của bạn đã lên lịch.

Đây không phải là điểm vào cho phần mở rộng của bạn, điều này đưa chúng ta đến chủ đề tiếp theo của chúng ta.

Bây giờ chúng ta sẽ xem xét phần thú vị nhất của Tài sản nền, phần mở rộng!

Tiện ích mở rộng cho phép bạn lên lịch tải xuống tài sản của mình trước khi người dùng khởi chạy ứng dụng của bạn.

Điều này cho phép bạn đảm bảo rằng tài sản của bạn đã sẵn sàng hoạt động để cung cấp trải nghiệm tốt nhất có thể trong ứng dụng của bạn với thời gian chờ đợi tối thiểu.

Như đã thảo luận trước đó, chúng tôi đang giới thiệu một tiện ích mở rộng ứng dụng mới.

Tiện ích mở rộng này có thể được tạo từ bên trong Xcode bên trong dự án hiện tại của bạn.

Như một lời nhắc nhở nhanh chóng, tiện ích mở rộng chạy bất cứ khi nào ứng dụng của bạn được cài đặt hoặc cập nhật.

Cung cấp cho bạn sự linh hoạt để đảm bảo các thay đổi đối với ứng dụng của bạn luôn có tài sản mới nhất.

Tiện ích mở rộng cũng chạy định kỳ dựa trên tần suất người dùng sử dụng ứng dụng của bạn.

Nếu ai đó sử dụng ứng dụng của bạn hàng ngày, thì hệ thống sẽ học được hành vi này và tiện ích mở rộng của bạn sẽ chạy thường xuyên hơn.

Tuy nhiên, nếu ứng dụng không bao giờ được khởi chạy, thì tần suất kiểm tra định kỳ này sẽ giảm dần.

Tiện ích mở rộng mới cũng có vòng đời ngắn và hộp cát chặt chẽ để đảm bảo rằng việc sử dụng nó bị giới hạn chỉ tải xuống tài sản.

Bạn được khuyến khích đưa ra quyết định nhanh chóng trong phần mở rộng và giới hạn phần mở rộng trong khuôn khổ Tài sản nền.

Trước khi chúng tôi bắt đầu điều hướng qua tiện ích mở rộng, có một vài cấu hình mà bạn cần thực hiện trước khi tiện ích mở rộng có thể khởi chạy.

Những thay đổi này cũng là một yêu cầu để ứng dụng của bạn được chấp thuận để phân phối trên App Store.

Trong danh sách thuộc tính thông tin của ứng dụng của bạn, bạn sẽ cần xác định một vài khóa bổ sung.

Các khóa này không nên được đặt trong Info.plist của tiện ích mở rộng, chỉ của ứng dụng.

Chìa khóa đầu tiên là BAInitialDownloadRestrictions.

Đây là một từ điển nơi bạn sẽ chỉ định các hạn chế sẽ được đặt trên phần mở rộng của bạn.

Những hạn chế này được xem xét bởi App Review, vì vậy hãy cố gắng chính xác nhất có thể.

Bây giờ, hãy tìm hiểu từng khóa riêng lẻ bên trong từ điển.

Hạn chế đầu tiên là phụ cấp tải xuống.

Điều này được biểu diễn bằng byte và là kích thước tải xuống tối đa mà bạn yêu cầu thực hiện trong tiện ích mở rộng trong quá trình cài đặt ứng dụng ban đầu.

Kích thước này liên quan đến tổng của tất cả các tệp được kết hợp mà bạn đang yêu cầu tải xuống, không phải kích thước của từng tệp riêng lẻ.

Mục tiếp theo là miền AllowList, lấy một mảng các miền được biểu diễn dưới dạng chuỗi.

Miền AllowList hỗ trợ ký tự đại diện tiền tố và nhận danh sách tên máy chủ mà tiện ích mở rộng của bạn được phép tải xuống.

Điều quan trọng cần lưu ý là các khóa trong BAInitialDownloadRestrictions, chẳng hạn như DownloadAllowance và AllowList chỉ được thực thi sau lần cài đặt ứng dụng đầu tiên.

Bất cứ khi nào ứng dụng của bạn được khởi chạy, những hạn chế này không còn được thực thi nữa.

Khóa yêu cầu cuối cùng, nằm ở thư mục gốc của Info.plist của bạn là kích thước tối đa mà ứng dụng của bạn sẽ yêu cầu trong bộ nhớ bổ sung cho các tài sản này.

Chúng tôi hy vọng rằng bạn có thể muốn tải xuống các tài sản nén, vì vậy giá trị này phải là kích thước không nén được trích xuất cuối cùng.

Số được đặt ở đây sẽ được hiển bày trên App Store trước khi ứng dụng được tải xuống.

Bây giờ chúng ta đã xem xét một số công việc dọn phòng, hãy nói về các điểm vào phần mở rộng của bạn chi tiết hơn.

Các chức năng mà bạn xác định từ giao thức sẽ được gọi bởi hệ thống chứ không phải bởi ứng dụng của bạn.

Không giống như các tiện ích mở rộng ứng dụng khác, nơi ứng dụng chịu trách nhiệm nói chuyện với tiện ích mở rộng, tiện ích mở rộng tải xuống nền được hệ thống môi giới.

Vì hệ thống đang duy trì vòng đời của tiện ích mở rộng, nó nên được xem như một dịch vụ phù du.

Bất cứ khi nào bất kỳ chức năng nào bên trong giao thức được gọi, điều quan trọng là phải giữ công việc được thực hiện ở đó ở mức tối thiểu.

Tiện ích mở rộng sẽ bị chấm dứt khá nhanh sau khi nó được khởi chạy.

Đây không phải là nơi để bắt đầu giải nén hoặc các hoạt động phức tạp khác có thể mất một lúc.

Một trong những phần tuyệt vời khi làm việc trong tiện ích mở rộng là tất cả các API BackgroundAssets có sẵn cho ứng dụng của bạn cũng có sẵn trong tiện ích mở rộng.

Ngoại lệ duy nhất là ForegroundDownload API.

Điều này có nghĩa là bạn sẽ sử dụng BADownloadManager giống như trong ứng dụng của mình.

Trên thực tế, hoàn toàn có khả năng bạn sẽ khám phá ra khả năng tạo ra thứ gì đó sử dụng cùng một mã để lên lịch và quản lý tài sản của bạn trong cả ứng dụng và tiện ích mở rộng của nó.

Ngoài ra, khi tạo tiện ích mở rộng của bạn, điều quan trọng là phải đảm bảo rằng cả hai đều nằm trong một nhóm ứng dụng chung.

Bạn sẽ muốn sử dụng cùng một mã định danh nhóm để nội dung có thể được đọc và ghi bởi ứng dụng của bạn và tiện ích mở rộng của nó.

Bây giờ chúng ta hãy xem xét giao thức tiện ích mở rộng trình tải xuống mà bạn sẽ tuân thủ tiện ích mở rộng của mình.

Điều đầu tiên bạn sẽ nhận thấy là nó trông giống như thế nào với giao thức ủy quyền của người quản lý tải xuống.

Như tôi đã nói trước đó, bạn có thể sử dụng BADownloadManager và xây dựng một đại diện từ bên trong tiện ích mở rộng.

Tuy nhiên, chỉ những điểm vào này mới thực sự có thể đánh thức phần mở rộng.

Chức năng đầu tiên được gọi bất cứ khi nào ứng dụng của bạn được cài đặt lần đầu tiên.

Ứng dụng vẫn chưa khởi chạy, nhưng tiện ích mở rộng của bạn thì có.

Đây là cơ hội hoàn hảo để bắt đầu lên lịch tải xuống mà ứng dụng của bạn cần để cung cấp trải nghiệm tốt nhất sau khi ứng dụng của bạn được khởi chạy.

Điều quan trọng cần nhớ là trong quá trình cài đặt ứng dụng ban đầu, các hạn chế tải xuống có hiệu lực.

Bạn sẽ muốn tham khảo khóa BADownloadRestrictions mà bạn đã xác định trong Info.plist của mình để biết kích thước tải xuống tối đa được phép và tên miền được phép của bạn là bao nhiêu.

Chức năng tiếp theo này được gọi bất cứ khi nào App Store cập nhật ứng dụng của bạn.

Miễn là người dùng chưa thoát khỏi ứng dụng của bạn trong trình chuyển đổi ứng dụng, tiện ích mở rộng mới được cập nhật của bạn sẽ thức dậy và bạn có thể bắt đầu lên lịch làm việc.

Chức năng checkForUpdates cung cấp hỗ trợ cho tiện ích mở rộng của bạn được hệ thống đánh thức định kỳ, để bạn có thể kiểm tra bất kỳ bản cập nhật nào cần được tải xuống nền.

Chức năng này được hệ thống gọi dựa trên tần suất người dùng sử dụng ứng dụng của bạn.

Chúng tôi cũng có hỗ trợ phản hồi yêu cầu thử thách xác thực.

Để bạn có thể hạn chế tốt hơn và đảm bảo rằng các tệp bạn đang tải xuống đến từ một nguồn đáng tin cậy.

Cuối cùng, giống như đại biểu, bạn sẽ được thông báo nếu quá trình tải xuống không thành công hoặc thành công.

Bạn sẽ nhận thấy rằng trong chức năng backgroundDownloadDidFail, không có lỗi nào được trả về.

Lỗi có thể được truy xuất cùng với trạng thái của nó trong một biến bên trong đối tượng BADownload được trả về.

Cũng cần lưu ý rằng ba chức năng cuối cùng có thể được gọi ngay cả khi tiện ích mở rộng của bạn không phải là những gì đã lên lịch tải xuống.

Nếu ứng dụng của bạn đã lên lịch tải xuống, nhưng chưa trở thành nền tảng, thì tiện ích mở rộng sẽ được mong đợi để phục vụ tải xuống.

Bây giờ chúng ta đã hiểu cách sử dụng BADownloaderManager từ ứng dụng của chúng ta và tiện ích mở rộng của nó, chúng ta phải bắt đầu suy nghĩ về ý nghĩa của nó nếu cả ứng dụng và tiện ích mở rộng của nó đang chạy đồng thời.

Ví dụ, giả sử hệ thống đã quyết định rằng đã đến lúc đánh thức tiện ích mở rộng để kiểm tra định kỳ các bản cập nhật.

Và tất nhiên, vì tiện ích mở rộng cần truy cập mạng để thực hiện kiểm tra này, nó sẽ sử dụng BADownloaderManager để lên lịch tải xuống danh mục hoặc một số loại siêu dữ liệu khác cung cấp danh sách các tài sản được cập nhật có sẵn.

Ví dụ, giả sử tệp là một danh mục nhỏ 100KB chứa danh sách các tài sản lớn nhiều gigabyte mà chúng ta cần tải xuống.

Vì tiện ích mở rộng cần biết khi nào quá trình tải xuống đã lên lịch kết thúc hoặc không thành công, nó sẽ đính kèm một đại diện vào trình quản lý tải xuống.

Đại diện của người quản lý tải xuống được sử dụng trên các điểm nhập tiện ích mở rộng của nó vì nó tải xuống một tệp nhỏ để xác định những tài sản lớn hơn mà nó sẽ lên lịch và các điểm vào tiện ích mở rộng không được đảm bảo được gọi ngay lập tức.

Sau khi quá trình tải xuống kết thúc, tiện ích mở rộng sẽ nhận được thông báo này thông qua đại diện của nó.

Tiện ích mở rộng của bạn hiện có quyền truy cập vào tệp danh mục và phải đưa ra lựa chọn với những gì nó dự định làm với tệp đã tải xuống.

Bạn có thể tưởng tượng rằng tiện ích mở rộng sẽ đọc tệp để xác định tài sản nào trong danh mục cần được tải xuống thiết bị.

Sau đó, tiện ích mở rộng có thể lên lịch tải xuống nền của những tài sản lớn hơn đó.

Bây giờ tệp đã tải xuống không còn cần thiết nữa, phần mở rộng sẽ xóa tệp.

Mặc dù điều này có vẻ phù hợp, nhưng điều gì sẽ xảy ra nếu ứng dụng của bạn khởi chạy trong khi tiện ích mở rộng của bạn đang chạy và tạo BADownloadManager của riêng nó?

Chà, chúng ta hãy xem nào!

Ứng dụng khởi chạy và ngay lập tức muốn biết liệu nó có cập nhật nội dung hay không.

Có lẽ một số phiên bản được lưu trữ trong nhóm ứng dụng mà cả hai đều tham khảo để xác định xem tài sản của họ có được cập nhật hay không.

Vì ứng dụng đã được khởi chạy trước khi danh mục mới hơn tải xuống xong, nó sẽ lấy các bản tải xuống hiện tại từ người quản lý và nhận ra rằng việc tải xuống danh mục hiện đang được triển và đợi nó được hoàn thành trong đại diện của nó.

Nhưng chúng tôi có một vấn đề.

Cả tiện ích mở rộng và ứng dụng sẽ nhận được thông báo tải xuống đã hoàn tất trong các đại diện tương ứng của họ đã được kết nối với trình quản lý tải xuống.

Điều này có nghĩa là chúng tôi có một cuộc đua dữ liệu trên tệp đang được tải xuống.

Cả ứng dụng và tiện ích mở rộng sẽ cố gắng đọc và xóa tệp cùng một lúc; điều này không tốt.

Điều này có nghĩa là ứng dụng hoặc tiện ích mở rộng của bạn có thể cố gắng đọc tệp và nó có thể bị thiếu.

Điều này có nghĩa là bạn sẽ cần suy nghĩ về ứng dụng và tiện ích mở rộng của mình theo cách tương tự như cách bạn sẽ nghĩ về hai luồng trong ứng dụng của mình.

May mắn thay, Background Assets cung cấp một cách để đồng bộ hóa giữa ứng dụng của bạn và tiện ích mở rộng của nó.

Hãy nói về điều đó ngay bây giờ!

Đồng bộ hóa giữa ứng dụng của bạn và tiện ích mở rộng của nó cực kỳ đơn giản với Background Assets.

Những gì chúng tôi hiện đang xem xét là chức năng đại diện của trình quản lý tải xuống khi quá trình tải xuống hoàn tất.

Một URL được cung cấp có chứa đường dẫn cục bộ đến tệp mà ứng dụng hoặc tiện ích mở rộng của bạn có quyền truy cập.

Trong ví dụ này, chúng tôi sẽ đảm bảo loại trừ lẫn nhau tệp này.

Tiếp theo, chúng tôi lấy một tham chiếu đến trình quản lý tải xuống và sử dụng hàm withExclusiveControl, có trình xử lý hoàn thành.

Tất cả mã được thực thi trong phạm vi xử lý hoàn thành được đảm bảo loại trừ lẫn nhau với các cuộc gọi khác yêu cầu kiểm soát độc quyền.

Có nghĩa là nếu tiện ích mở rộng của bạn gọi với Kiểm soát độc quyền trong khi ứng dụng của bạn chưa quay lại từ trình xử lý hoàn thành của nó, thì tiện ích mở rộng sẽ đợi.

Điều này cũng áp dụng theo hướng khác.

Nếu tiện ích mở rộng có được quyền kiểm soát độc quyền trước, thì ứng dụng sẽ đợi cho đến khi tiện ích mở rộng bị chấm dứt hoặc giải phóng quyền kiểm soát bằng cách thoát khỏi phạm vi.

Một điều quan trọng cần ghi nhớ là việc có được quyền kiểm soát độc quyền có thể thất bại.

Rất khó có khả năng điều này sẽ xảy ra, nhưng trong trường hợp có, mã của bạn sẽ xử lý nó.

Bạn có thể phát hiện nếu không thể có được quyền kiểm soát độc quyền bằng cách kiểm tra xem lỗi do hàm cung cấp có bằng không.

Kể từ thời điểm này, bạn được đảm bảo rằng ứng dụng hoặc tiện ích mở rộng của bạn có quyền truy cập độc quyền trong ngữ cảnh của nó.

Vì vậy, dựa trên ví dụ trước đây của chúng tôi, bây giờ hoàn toàn hợp lệ để đọc nội dung của tệp và sau đó dọn dẹp nó, nếu bạn chọn.

Chỉ cần đảm bảo lưu ý rằng khi ứng dụng hoặc tiện ích mở rộng khác của bạn có cơ hội nhập quyền kiểm soát độc quyền, nó biết rằng bạn đã xử lý tệp.

Một cách có thể thực hiện điều này là trước tiên hãy kiểm tra xem tệp có tồn tại hay không hoặc ghi vào cơ sở dữ liệu hoặc plist.

Xin nhắc lại, tiện ích mở rộng trình tải xuống nền là để thu thập và lên lịch tải xuống các tài sản lớn cho ứng dụng của bạn.

Thời gian chạy của nó tồn tại trong thời gian ngắn, vì vậy vui lòng giữ công việc được thực hiện trong phần mở rộng ở mức tối thiểu.

Bạn cũng nên đặt tiện ích mở rộng và ứng dụng của mình trong một nhóm ứng dụng được chia sẻ để cả hai có thể truy cập các tệp do nhau tải xuống.

Và cuối cùng, tiện ích mở rộng được môi giới bởi hệ thống chứ không phải ứng dụng của bạn.

Bây giờ bạn đã biết cách phát triển tiện ích mở rộng tải xuống nền cơ bản, bạn có mọi thứ bạn cần để bắt đầu triển khai Tài sản nền vào ứng dụng của mình.

Bây giờ, hãy xem lại những gì chúng ta đã học được.

Trình quản lý tải xuống được sử dụng để phối hợp và lên lịch tải xuống giữa ứng dụng của bạn và tiện ích mở rộng của nó, do đó bạn nên sử dụng trình quản lý tải xuống ở cả hai nơi.

Tiện ích mở rộng của bạn chạy ngay cả khi ứng dụng của bạn không ở phía trước.

Điều này có thể xảy ra trong quá trình cài đặt ứng dụng, cập nhật hoặc định kỳ trong một khoảng thời gian được xác định bởi hệ thống.

Nếu ứng dụng của bạn được khởi chạy và nội dung đang được tải xuống trong nền hiện đang được chờ đợi, vui lòng quảng bá ngay các bản tải xuống đó lên phía trước.

Tiện ích mở rộng chỉ có thể lên lịch tải xuống trong nền.

Bằng cách để ứng dụng của bạn quảng bá chúng lên phía trước, đảm bảo rằng nội dung của bạn sẽ đến nhanh nhất có thể.

Nếu bạn thấy mình cần quyền truy cập độc quyền vào trình quản lý tải xuống, vui lòng sử dụng API kiểm soát độc quyền.

Điều này sẽ đảm bảo rằng chỉ ứng dụng hoặc tiện ích mở rộng của bạn sẽ có thời gian chạy trong cửa sổ đó.

Điều này cực kỳ hữu ích để bạn không phải suy nghĩ về tiện ích mở rộng của mình đua với ứng dụng khi truy cập vùng chứa của nó hoặc quản lý tải xuống.

Nếu có bất cứ điều gì bạn nên lấy từ bài thuyết trình này, đó là việc chờ đợi dẫn đến trải nghiệm ứng dụng kém.

Giảm thiểu việc chờ đợi bằng cách làm cho ứng dụng của bạn có thể sử dụng được trong khi nhiệm vụ bạn đang chờ đợi đang được tiến hành.

Một trong những cách bạn có thể giảm thiểu sự chờ đợi trong ứng dụng của mình là áp dụng khung Tài sản Nền mới cùng với tiện ích mở rộng tải xuống nền cơ bản.

Điều này giúp đảm bảo rằng ứng dụng của bạn sẽ có tất cả nội dung sẵn sàng trước khi ứng dụng được khởi chạy.

Đảm bảo cũng kiểm tra tài liệu, bao gồm thông tin bổ sung có thể chưa được kết hợp vào bản trình bày này; bao gồm cách kiểm tra tiện ích mở rộng của bạn và mô phỏng các điểm vào của nó.

Chúng tôi thực sự vui mừng được chia sẻ Tài sản nền với bạn và chúng tôi đánh giá cao phản hồi của bạn.

Vui lòng sử dụng Trợ lý Phản hồi để cho chúng tôi biết những gì đang làm việc cho bạn và những gì bạn muốn chúng tôi cải thiện.

Đây là một khuôn khổ mới và chúng tôi có cơ hội điều chỉnh trong quá trình gieo hạt.

Chúng tôi có một số phiên bổ sung mà chúng tôi nghĩ rằng bạn có thể thấy thú vị và chúng tôi khuyến khích bạn kiểm tra chúng.

"Tăng tốc mạng với HTTP3" là một phiên tuyệt vời kết hợp tốt với Tài sản nền.

Ngoài ra, tôi khuyến khích bạn xem một phiên khác: bản trình bày "Giới thiệu tài nguyên theo yêu cầu" bao gồm một giải pháp thay thế cho Tài sản nền nơi nội dung của bạn được Apple lưu trữ và các tệp được tải xuống theo yêu cầu của bạn.

Cả hai phiên này đều thực sự hấp dẫn và có rất nhiều thứ để cung cấp.

Cảm ơn bạn đã dành thời gian cho tôi, và thay mặt cho mọi người ở Apple, chúng tôi hy vọng bạn có một WWDC tuyệt vời!

♪