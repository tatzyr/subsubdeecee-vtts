10156

어니스트: 안녕하세요, 환영합니다.

제 이름은 어니스트이고, 저는 ScreenCaptureKit 팀의 소프트웨어 엔지니어입니다.

지난 몇 년 동안, 우리 모두는 종종 화면 공유를 포함하는 원격 협업에 더 의존해 왔다.

게다가, OBS Studio와 같은 녹화 응용 프로그램을 사용하여 게임 플레이를 스트리밍하고 전체적으로 콘텐츠 제작은 사람들의 교육과 엔터테인먼트를 위해 지속적으로 성장하는 영역이었다.

이를 염두에 두고, 우리는 성능과 강력한 화면 캡처에 대한 개발자의 요구를 충족시키는 프레임워크를 만들었습니다.

ScreenCaptureKit을 만나보세요!

ScreenCaptureKit은 애플리케이션의 화면 공유 경험을 만들 수 있도록 설계된 macOS의 새로운 프레임워크입니다.

ScreenCaptureKit은 애플리케이션의 요구에 맞는 개발자 제어 및 토글을 통해 캡처하려는 콘텐츠를 선택할 수 있는 API를 제공합니다.

그리고 모든 필터와 컨트롤은 즉시 업데이트할 수 있습니다.

이 프레임워크는 글로벌 보호 장치를 염두에 두고 디스플레이의 기본 해상도와 프레임 속도까지 높은 품질과 성능을 제공합니다.

이 세션에서 ScreenCaptureKit 프레임워크를 시작할 수 있도록 도와드리겠습니다.

기본 사항을 마치면, 더 고급 주제를 위해 "ScreenCaptureKit을 다음 단계로 끌어올리세요"를 살펴보세요.

먼저, 프레임워크의 주요 특징을 살펴볼 것이다.

다음으로, API 개요에서 주요 ScreenCaptureKit 구성을 다루겠습니다.

그런 다음, 필터와 구성으로 스트림을 설정하는 방법을 보여드리겠습니다.

그리고 마지막으로, 비디오 및 오디오 샘플을 애플리케이션으로 스트리밍하는 방법을 안내해 드리겠습니다.

ScreenCaptureKit의 주요 기능부터 시작합시다.

ScreenCaptureKit을 사용하면 공유하거나 필터링할 콘텐츠 유형을 지정할 수 있습니다.

디스플레이, 응용 프로그램 및 창의 조합과 함께 제공되는 오디오에서 화면 콘텐츠를 캡처할 수 있습니다.

ScreenCaptureKit은 픽셀 형식, 색상 공간, 프레임 속도 및 해상도를 포함한 다양한 개발자 컨트롤과 오디오 측면에서 샘플 속도 및 채널 수와 같은 컨트롤을 지원합니다.

그리고 이러한 모든 필터와 구성은 즉시 조정할 수 있어 애플리케이션 설계에 더 많은 유연성을 제공합니다.

그리고 디스플레이의 기본 해상도와 프레임 속도까지 최대 48kHz 스테레오 및 비디오 샘플을 제공하기 위해 ScreenCaptureKit은 성능에 중점을 두고 기존 캡처 방법보다 낮은 CPU 오버헤드로 Mac GPU의 성능을 활용합니다.

물론, ScreenCaptureKit은 개인 정보 보호를 염두에 두고 구축되어 프레임워크를 사용하는 모든 애플리케이션에 대한 글로벌 개인 정보 보호 장치를 제공합니다.

프레임워크는 비디오 및 오디오 콘텐츠를 캡처하기 전에 동의가 필요하며, 선택은 시스템 환경 설정의 화면 녹화 개인 정보 보호 설정에 저장됩니다.

이제 ScreenCaptureKit이 무엇인지 보았으니, API에서 가장 중요한 개념 중 일부를 보여드리겠습니다.

ScreenCaptureKit 프레임워크는 SCStream을 중심으로 한다.

SCStream은 시작 및 중지와 같은 제어 방법을 처리하며 SCShareableContent, SCContentFilter 및 SCStreamConfiguration과 함께 생성됩니다.

이 물체들은 어떤 콘텐츠를 캡처하고 싶은지 그리고 어떻게 캡처하고 싶은지 결정합니다.

일단 생성되고 시작되면, 미디어 샘플은 SCStreamOutput 프로토콜을 통해 애플리케이션으로 전달될 것입니다.

내가 그것에 대해 조금 더 설명할게.

이제, API를 사용하여 애플리케이션에서 스트림을 설정하는 방법을 보여드리겠습니다.

다음은 스트림을 설정할 때 익숙해지고 싶은 개체입니다.

이것들은 당신이 캡처하는 것과 캡처의 품질과 성능을 결정하는 물체입니다.

내가 들어가고 싶은 첫 번째 것은 SCShareableContent이다.

이 데스크톱에는 창, 응용 프로그램 및 디스플레이 자체가 있습니다.

ScreenCaptureKit에는 공유하고 싶은 콘텐츠를 만드는 데 사용할 수 있는 이들 각각에 해당하는 클래스가 있습니다.

먼저, SCDisplay를 살펴봅시다.

ScreenCaptureKit은 디스플레이 식별자와 크기 속성 너비와 높이를 포함한 읽기 전용 속성으로 디스플레이를 SCDisplays로 분류합니다.

디스플레이 내에는 다양한 실행 중인 응용 프로그램이 있을 수 있으며, 이들 각각에는 해당 SCRunningApplication이 있습니다.

SCRunningApplications에는 번들 식별자, 애플리케이션 이름 및 프로세스 식별자와 같은 애플리케이션 수준 정보에 대한 읽기 전용 속성이 있습니다.

여기 예시에는 Keynote와 Safari용 SCRunningApplication이 있을 것이다.

그리고, 물론, 이 응용 프로그램에는 창문이 있다.

이 창에는 창 ID, 프레임, 제목 및 창이 화면에 있거나 최소화된 경우와 같은 창을 정의하는 읽기 전용 속성이 있는 해당 SCWindow가 있습니다.

SCWindow는 또한 소유 애플리케이션을 가질 것이다.

이 경우, 두 사파리 SCWindows 모두 동일한 사파리 소유 애플리케이션을 가질 것이다.

SCWindows, SCRunningApplications 및 SCDisplays가 함께 결합되어 SCShareableContent에서 공유할 수 있는 가능한 콘텐츠를 제공합니다.

장치에서 공유 가능한 모든 콘텐츠 목록을 얻거나 특정 매개 변수를 지정할 수 있습니다.

사람들이 공유하고 싶은 것을 선택할 수 있도록 화면에 있는 모든 응용 프로그램과 창을 나열하고 싶다고 가정해 봅시다.

음, ScreenCaptureKit에는 그것을 위한 간단한 API가 있습니다.

이 짧은 코드 스니펫은 developer.apple.com에서 사용할 수 있는 캡처 샘플 코드에서 가져온 것입니다.

화면에 있는 창만 관련 SCWindows, SCApplications 및 SCDisplays를 포함하는 SCShareableContent와 함께 반환됩니다.

그리고 이제 공유 가능한 콘텐츠가 있으므로, 필터를 만들 수 있습니다.

SCContentFilters에는 두 가지 주요 유형이 있습니다: 여러 디스플레이를 가로질러 이동할 때 창을 캡처하는 디스플레이 독립 창 필터와 특정 창과 응용 프로그램을 포함하거나 제외하는 옵션이 있는 종속 필터를 표시합니다.

여기서 빠른 메모는 오디오 캡처가 애플리케이션 수준에서만 필터링될 수 있다는 것입니다.

필터가 무엇인지 보여주기 위해 몇 가지 예를 보여 드리겠습니다. 기조 연설 창을 공유하는 데에만 관심이 있다고 상상해 보세요.

디스플레이를 가로질러 이동할 때 창을 캡처하는 디스플레이 독립적인 창 필터를 선택할 수 있습니다.

디스플레이의 모든 콘텐츠를 공유하고 싶더라도, 제외하고 싶은 특정 콘텐츠가 있을 수 있습니다.

예를 들어, 자신의 캡처 애플리케이션을 제외하여 거울 홀 효과를 피하고 싶을 것입니다.

특정 창이나 응용 프로그램에도 민감한 정보가 있을 수 있으며, 캡처에서도 제외하고 싶을 것입니다.

이 모든 시나리오는 SCContentFilter에 의해 처리될 것이므로, 코드로 뛰어들어 이것을 어떻게 하는지 봅시다.

여기 제가 이전에 보여준 코드 스니펫이 있습니다.

공유 가능한 콘텐츠가 쿼리된 후, 코드는 캡처 샘플 앱과 동일한 번들 식별자를 가진 애플리케이션을 찾습니다.

그런 다음, 디스플레이 종속 콘텐츠 필터는 스트림에서 앱을 제외합니다.

콘텐츠 필터 외에도, ScreenCaptureKit은 스트림별로 조정할 수 있는 품질 및 성능 제어를 제공합니다.

이러한 컨트롤은 SCStreamConfiguration에서 설정할 수 있습니다.

일부 비디오 컨트롤에는 출력 해상도, 프레임 속도 및 마우스 커서 표시 여부가 포함됩니다.

오디오 측면에서 오디오를 활성화하고, 샘플 속도를 변경하고, 채널 수를 조정할 수 있습니다.

이러한 매개 변수가 작용할 수 있는 몇 가지 시나리오를 안내해 드리겠습니다.

메모나 스프레드시트와 같이 텍스트 선명도가 중요한 로우 모션 화면 콘텐츠를 공유할 때, 캡처의 출력 해상도를 초당 10프레임으로 4k로 설정하십시오.

그리고 콘텐츠에 오디오가 없기 때문에, 오디오를 비활성화된 상태로 둘 수 있습니다.

하지만 최근 휴가의 비디오를 공유하는 것과 같은 하이 모션 콘텐츠의 경우, 출력 해상도를 1080p로 낮추고 초당 프레임을 60으로 늘려 해상도보다 프레임 속도를 우선시해야 합니다.

그리고 커서의 움직임이 산만할 수 있기 때문에, 커서를 숨기고 싶을 수도 있습니다.

더 몰입감 있는 경험을 위해 오디오 캡처를 활성화할 수도 있습니다.

이러한 모든 컨트롤은 SCStreamConfiguration의 다른 속성을 통해 설정할 수 있습니다.

여기 하이 모션 콘텐츠를 공유하기 위한 가능한 구성이 있습니다.

이 코드 샘플에서, 캡처의 출력 해상도는 1080p로 설정됩니다.

그런 다음, 초당 60프레임으로 캡처하기 위해 최소 프레임 간격을 1/60으로 설정합니다.

그리고 마지막으로, 스트림 구성은 커서를 숨길 것이다.

오디오 측면에서, 먼저 capturesAudio를 true로 설정하여 오디오를 활성화한 다음, 샘플 속도를 48kHz로 설정하고 채널 수를 2로 설정하십시오.

SCContentFilter와 SCStreamConfiguration을 사용하면 애플리케이션의 요구에 맞게 화면 캡처를 설정하는 데 필요한 정보를 얻을 수 있습니다.

이제 함께 SCStream을 만들 수 있습니다.

개요로 돌아가자.

원하는 필터와 구성으로 스트림을 초기화해야 합니다.

그리고 오류를 처리하기 위해 선택적 대리인을 전달할 수도 있습니다.

일단 설정되면, 시작 캡처를 호출할 수 있으며, ScreenCaptureKit은 SCStream에 사용 가능한 샘플을 제공할 것입니다.

필터와 구성을 만들면, 코드에서 스트림을 시작하는 것은 쉽다.

내가 보여줄게.

다시 한번, 원하는 필터와 구성으로 SCStream 객체를 초기화할 수 있습니다.

캡처 샘플 프로젝트에서, self는 오류 처리 대리인으로 전달된다.

SCStream을 만들면, 이제 startCapture를 호출할 수 있습니다.

스트림을 초기화하고 시작하면, 다음 단계는 애플리케이션에 미디어 샘플을 얻는 것입니다.

오디오 및 비디오 샘플은 CMSampleBuffers의 형태로 신청서로 전송됩니다.

스트림에서 미디어 샘플을 얻으려면, SCStreamOutput 프로토콜을 구현하는 객체를 스트림에 추가해야 합니다.

스트림 출력을 추가할 때, 핸들러 대기열을 지정할 수도 있습니다.

이것은 추가 파견 없이 특정 대기열에서 샘플을 배달하기를 원한다면 유용할 수 있습니다.

대기열을 지정하지 않으면, 기본 대기열이 사용됩니다.

스트림이 시작되고 출력이 추가되면, ScreenCaptureKit은 새로운 샘플을 사용할 수 있을 때 콜백을 제공할 것이다.

이제, 코드로 미디어 샘플을 얻는 방법을 보여드리겠습니다.

다음은 새로운 미디어 샘플을 사용할 수 있을 때 호출될 SCStreamOutputProtocol의 구현입니다.

ScreenCaptureKit은 이러한 샘플을 CMSampleBuffers로 제공하고 스트림과 샘플 유형을 제공합니다.

샘플 버퍼 핸들러를 구현한 후, streamOutput을 추가하기만 하면 됩니다.

그리고 그것으로, 원하는 콘텐츠와 함께 스트림의 미디어 샘플이 원하는 형식으로 애플리케이션으로 전달될 것입니다.

ScreenCaptureKit은 CMSampleBuffers의 형태로 샘플을 제공하므로, 사용 방법에 대해 조금 이야기해 봅시다.

비디오 측면에서, CMSampleBuffer는 IOSurface로 뒷받침됩니다.

ScreenCaptureKit은 또한 SCStreamFrameInfo의 CMSampleBuffer에 대한 첨부 파일을 제공합니다.

이 첨부 파일은 당신이 받고 있는 비디오 샘플에 대한 정보를 제공합니다.

스트림의 현재 상태에 대한 프레임 상태를 확인하세요.

완전한 프레임 상태는 새로운 비디오 프레임이 있음을 나타냅니다.

유휴 프레임 상태는 비디오 샘플이 변경되지 않았음을 의미하므로 새로운 IOSurface가 없습니다.

그렇지 않으면, 제공된 샘플은 CMSampleBuffer와 같으므로 기존 CMSampleBuffer 유틸리티를 사용할 수 있습니다.

ScreenCaptureKit에는 필터링된 화면 오디오 및 비디오 콘텐츠를 얻는 데 도움이 되는 API가 포함되어 있습니다.

게다가, 프레임워크는 애플리케이션의 요구에 맞는 다양한 개발자 컨트롤을 제공합니다.

나는 또한 당신이 만들 다양한 화면 캡처 경험을 시작할 수 있도록 몇 가지 기본 사항을 다루었습니다.

ScreenCaptureKit의 출시와 함께, 오래된 캡처 프레임워크 CGDisplayStream과 CGWindowList는 향후 더 이상 사용되지 않을 것이다.

나는 네가 이 ScreenCaptureKit의 소개에 나만큼 흥분하길 바라!

고급 주제를 볼 준비가 되면, "ScreenCaptureKit을 다음 단계로 끌어올리세요"로 이동하세요.

봐줘서 고마워!

.