10145

- 모두 안녕. 저는 프라샨트이고, WWDC에 오신 것을 환영합니다.

2021년에, 우리는 HLS 인터스티셜을 도입했다.

그들은 HLS 스트림에서 광고 및 기타 틈새를 예약할 수 있는 정말 간단한 방법을 제공합니다.

올해, 우리는 광고 인벤토리를 더 잘 최적화하고 프레젠테이션을 미세 조정할 수 있는 기능을 추가했습니다.

그러니 와서, HLS Interstitials의 새로운 기능을 알아봅시다.

이 강연에서, 우리는 HLS 인터스티셜이 어떻게 작동하는지에 대한 간략한 개요로 시작할 것이다.

그리고 우리는 우리가 추가한 새로운 광고 큐잉 옵션을 논의함으로써 그것을 따를 것이다.

그 후, 특히 SNAP 속성을 사용하는 라이브 시나리오에서 광고 경험을 어떻게 미세 조정할 수 있는지 알아보겠습니다.

그런 다음 HLS 사양에 추가한 새로운 쿼리 매개 변수 중 일부를 검토하고, 마지막으로 이러한 새로운 기능을 통합한 AVFoundation API의 변경 사항에 대해 논의할 것입니다.

하지만 새로운 기능에 뛰어들기 전에, HLS 인터스티셜로 빠르게 새로 고쳐봅시다.

HLS 인터스티셜을 사용하면, 광고는 프로그램 타임라인에 예약할 수 있는 별도의 자산으로 취급됩니다.

그들은 더 이상 불연속 태그로 바느질할 필요가 없다.

대신, 그들은 다변형 재생 목록을 통해 직접 참조할 수 있다.

기본 콘텐츠에서 다양한 재생 목록을 가리키기만 하면 되기 때문에 광고를 매우 쉽게 예약할 수 있습니다.

이것은 기본 콘텐츠 타임라인을 보여주는 일반적인 미디어 재생 목록입니다.

재생 중에 두 개의 광고를 예약하고 싶다고 말하세요.

첫 번째 광고가 재생된 후에 5초 정도 나타나기를 원합니다.

이를 위해, DATERANGE 태그를 사용하여 광고 시작 시간을 지정하기만 하면 됩니다.

그리고 당신은 두 번째 광고가 15초에 나타나기를 원합니다.

그것을 위해, 당신은 재생 목록에 또 다른 DATERANGE 태그를 추가할 것입니다.

그건 그것만큼 간단해.

또한 당신의 주요 콘텐츠에 이미 바느질된 광고가 있을 수도 있습니다.

바느질된 광고의 기간과 동일한 이력서 오프셋을 지정하여 이러한 광고를 대체할 수도 있습니다.

이 외에도, HLS 인터스티셜을 사용하면 광고에 대한 탐색 제한을 지정할 수 있으며, 무엇보다도 라이브 시나리오에서 조기 복귀를 예약할 수도 있습니다.

자세한 내용은 WWDC 2021의 "HLS에서 역학적으로 미드롤과 프리롤 삽입"을 확인할 수 있습니다.

콘텐츠의 타임라인을 따라 광고를 예약할 수 있지만, 올해 우리는 재생의 시작이나 끝에 광고를 배치하도록 강요하는 속성을 추가했습니다.

이를 위해 우리는 CUE 속성을 사용하여 지정할 수 있는 다음과 같은 새로운 큐잉 옵션을 추가했습니다.

이 속성은 다음 값 중 하나 또는 조합을 취할 수 있다.

PRE의 값은 기본 콘텐츠의 프레젠테이션이 시작되기 전에 광고를 표시할 것이다.

이것은 프로그램을 시청하기 전에 프리미엄 광고 장소를 예약하고 싶은 라이브 시나리오에서 특히 유용합니다.

POST의 값은 기본 콘텐츠를 발표한 후에 광고가 나타나야 함을 나타냅니다.

이것은 라이브 이벤트가 끝날 때 엔딩 크레딧을 예약하고 싶은 이벤트 스트림에 유용할 수 있습니다.

그리고 ONCE의 값은 광고를 한 번만 나타나게 할 것이다.

그래서 만약 사용자가 광고 전에 다시 찾는다면, 그들은 더 이상 광고 재생을 다시 볼 수 없을 것이다.

이것의 훌륭한 응용 프로그램은 일반적으로 재생을 시작할 때 한 번만 표시되는 등급 화면을 위한 것입니다.

이것은 사전 및 사후 롤로 예정된 광고가 있는 재생 목록 예시를 보여줍니다.

프리롤은 한 번만 플레이할 예정이라는 점에 유의하세요.

그리고 우리는 또한 재생 후 약 10초에 한 번 재생될 예정인 광고가 있습니다.

이제, 라이브 시나리오에서 광고를 예약하는 것은 자체적인 도전 과제와 함께 온다.

예를 들어, 패키저는 미디어를 생산하는 인코더가 다른 시계에 의해 구동되는 동안 재생 목록에서 프로그램 날짜 시간 태그를 설정하기 위해 하나의 시계를 사용할 수 있습니다.

이제, 이 두 시계가 반드시 동기화될 필요는 없다.

예를 들어, 이 예에서, 세그먼트 0과 세그먼트 100과 관련된 날짜 시간 태그의 차이는 약 800초이다.

그러나, 누적된 미디어 지속 시간은 개별 세그먼트 지속 시간이 8초 미만이기 때문에 그보다 약간 적을 것이다.

패키저 시계가 인코더 시계보다 약간 빠른 시나리오에서, 광고가 시작되는 실제 미디어 타임은 슬레이트 내부 어딘가에 떨어질 수 있습니다.

그리고 여기에 표시된 것처럼 광고 기간과 동일한 오프셋으로 주요 콘텐츠에 다시 합류할 것으로 예상된다면, 실제로 슬레이트를 따르는 주요 콘텐츠 중 일부를 놓치게 될 것입니다.

이제 OUT 값과 함께 SNAP 속성을 사용하여 의도한 광고 시작 시간에 가장 가까운 세그먼트 경계에서 기본 콘텐츠를 스냅할 수 있습니다.

그리고 마찬가지로 IN 값과 함께 SNAP 속성을 사용하여 광고 반환 시간에 가장 가까운 기본 콘텐츠를 다시 스냅합니다.

미리 포장된 주문형 비디오 콘텐츠를 다룰 때 시계 드리프트의 개념이 존재하지 않아야 하기 때문에 SNAP 속성을 라이브 시나리오에만 사용할 것으로 예상합니다.

여기서 우리는 광고가 스냅아웃과 스냅인으로 예정된 라이브 재생 목록을 볼 수 있습니다.

올해, 우리는 또한 광고 인벤토리와 세션 관리를 최적화하는 데 도움이 되는 몇 가지 쿼리 매개 변수를 추가했습니다.

이제, 광고 포드 중간에 라이브 스트림을 튜닝할 때, 남은 시간 동안 가장 가치 있는 재고를 보여줄 수 있도록 광고 포드가 얼마나 진행되었는지 알고 싶을 것입니다.

그것을 위해, 우리는 HLS_start_offset 쿼리 매개 변수를 추가했습니다.

HLS_start_offset 쿼리 매개 변수는 틈새의 자산 목록 URL에 대한 요청과 함께 제공됩니다.

라이브 콘텐츠의 경우, 이것은 라이브 스트림에 가입할 때 재생이 시작되는 자산 목록의 오프셋을 지정하고, 주문형 비디오 콘텐츠의 경우, 전면으로 대체된 지역을 찾을 때 자산 목록의 오프셋이 될 것입니다.

이 샘플에는 재생 목록 상단에서 5초에 시작될 예정인 15초 광고가 있는 라이브 재생 목록이 있습니다.

여기에 표시된 강조 표시된 세그먼트는 중간으로 대체될 것이다.

이제 라이브 가입하는 동안, 고객은 일반적으로 라이브 엣지 뒤에 약 3개의 목표 기간이 될 것이다.

그 시점에서, 예정된 15초 광고 포드는 10초 동안 재생되었을 것이다.

그래서 이것은 HLS_start_offset 쿼리 매개 변수의 일부로 제공됩니다.

이제 클라이언트가 광고 시간이 5초밖에 남지 않았으므로, 서버는 해당 목록의 마지막 5초에 가장 가치 있는 광고를 게재할 수 있도록 자산 목록을 구성할 수 있습니다.

서버에서, 누군가에게 동일한 광고를 반복해서 제공하는 것을 피할 수 있도록 여러 광고 요청에서 동일한 재생 세션을 추적할 수 있는 방법이 필요할 수 있습니다.

따라서 광고 요청을 기본 재생 세션과 연결하기 위해 HLS_primary_id 쿼리 매개 변수를 추가했습니다.

클라이언트가 특정 재생 세션의 모든 http 요청에 대한 재생 세션 ID 요청 헤더를 설정하는 경우, X-Asset-URI 및 X-Asset-List 요청에 HLS_primary_id 쿼리 매개 변수의 일부로 이 세션 ID를 제공할 수 있습니다.

세션 ID 요청 헤더를 설정하지 않은 클라이언트는 모든 기본 재생 세션에 대해 고유한 값을 만들고 기본 및 중간 자산 요청에 대해 HLS_primary_id 쿼리 매개 변수로 사용해야 합니다.

AVFoundation이 AVPlayerInterstitialController와 AVPlayerInterstitialEvent 객체를 제공하여 클라이언트 측에서 광고를 예약할 수 있다는 것을 기억할 수 있습니다.

이제 우리는 AVPlayerInterstitialEvent 객체에 큐와 SNAP 옵션에 대한 지원을 추가했습니다.

큐 속성을 통해 광고를 프리롤 또는 포스트 롤로 예약할지 여부에 관계없이 큐 옵션을 지정할 수 있습니다.

DATERANGE 태그의 큐 속성을 통해 신호되는 한 번 재생 옵션은 willPlayOnce 속성을 통해 부울로 설정됩니다.

스냅아웃 옵션은 alignsStartWithPrimarySegmentBoundary 속성을 통해 신호되며 스냅인하려면 alignsResumptionWithPrimarySegmentBoundary 속성을 설정합니다.

AVPlayerInterstitialEvent가 계속 성장함에 따라, 우리는 객체 생성에서 속성 설정을 분리하는 것이 더 나을 수도 있다고 생각했습니다.

그래서 우리는 이제 AVPlayerInterstitialEvent 객체를 변경할 수 있게 만들었습니다.

이제 주요 항목과 이벤트 시작 시간만으로 개체를 만들 수 있습니다.

그런 다음 관련 속성을 설정하여 다른 구성 옵션을 지정할 수 있습니다.

일단 이벤트가 컨트롤러에 설정되면, 컨트롤러가 이러한 객체의 복사본을 만들기 때문에 이벤트 객체에 대한 후속 변경 사항은 컨트롤러에 반영되지 않습니다.

변경 사항을 적용하려면, 컨트롤러에서 이벤트를 다시 한 번 설정해야 합니다.

마무리하기 위해, 이제 X-CUE 속성을 사용하여 사전 또는 사후 롤로 광고를 예약할 수 있습니다.

X-CUE를 한 번으로 설정하여 광고를 한 번만 재생하도록 할 수도 있습니다.

라이브 시나리오에서 시계 드리프트를 관리하려면, X-SNAP 속성을 사용해야 합니다.

라이브 조인 중에 자산 목록을 구성하려면 HLS_start_offset 쿼리 매개 변수를 사용할 수 있으며 HLS_primary_id 쿼리 매개 변수를 사용하여 틈새 요청을 기본 재생 세션과 연관시킬 수 있습니다.

HLS 인터스티셜을 사용하여 광고를 예약하면 AVFoundation이 Shareplay에서 자동으로 관리한다는 것을 알고 계셨나요?

자세한 내용은 "SharePlay에서 광고 및 기타 틈새 광고 표시" 토크를 확인하세요.

그게 다야, 얘들아. 고마워.