10143

♪ ♪

밥: 안녕하세요, 저는 수석 iOS 장치 관리 엔지니어인 밥 화이트맨입니다.

기업 및 교육 환경에서 관리되는 장치에 대한 중요한 새로운 보안 기능을 공유하게 되어 기쁩니다.

장치 보안 환경을 검토하는 것으로 시작합시다.

사용자는 웹사이트, 애플리케이션 서버 및 데이터베이스와 같은 조직 리소스에 액세스해야 합니다.

그리고 그 자원에 접근하고 싶어하는 공격자들도 있다.

자원을 확보하기 위한 고전적인 모델은 경계 보안이다.

인트라넷 주변에 보안 경계를 그리고 합법적인 고객을 허용하고 위협을 거부하는 방화벽이나 VPN을 세운다.

하지만 이 모델은 사람들이 현대 조직과 상호 작용하는 방식을 따라하지 못했다.

클라우드 서비스 제공 업체는 자원을 경계 밖에 둔다.

위협은 경계 내부에서 시작될 수 있다.

그리고 위협은 경계를 관통하기 위해 합법적인 고객을 스푸핑할 수 있다.

더 현대적인 보안 모델은 네트워크 경계를 신뢰하지 않는다.

대신, 각 자원은 자체 신뢰 평가를 수행한다.

이것은 제로 트러스트 아키텍처의 핵심 원칙이다.

신뢰 평가를 기능으로 생각할 수 있습니다: 입력은 고객에 대한 자세 정보이며, 출력은 액세스를 허용하거나 거부하는 결정입니다.

신뢰 평가를 올바르게 받는 것이 중요하다.

거짓 네거티브는 사용자 활동을 방해하거나, 더 나쁜 것은, 거짓 긍정은 공격자가 당신의 자원에 접근할 수 있게 해준다.

그리고 그것은 정확한 자세 정보 또한 중요하다는 것을 의미한다.

자세의 일반적인 구성 요소를 조사해 봅시다.

당신은 고객과 그 요청에 대해 사용 가능한 모든 정보를 사용합니다: 누가 요청을 하고 있는지, 어떤 장치를 사용하고 있는지, 어디에 있는지 등.

신뢰 평가는 다른 자원에 접근하기 위해 자세 내에서 다른 세부 사항을 사용할 수 있다.

낮은 보안 리소스에 액세스하려면 사용자의 신원만 필요할 수 있지만, 중요한 인프라에 액세스하려면 모든 자세 항목을 평가해야 할 수 있습니다.

어떤 세부 사항이 관련이 있는지 결정하는 것은 조직에 달려 있다.

자세의 중심 요소 중 하나는 사용자의 정체성이다.

이것은 누가 요청을 하고 있는지를 나타낸다.

Apple 장치는 앱, 웹사이트 및 계정에 대한 사용자 인증을 용이하게 하기 위해 내장된 Kerberos 확장을 포함한 확장 가능한 싱글 사인온 기능과 같은 사용자 신원을 지원하는 몇 가지 기술을 제공합니다.

그리고 새로운 등록 싱글 사인온 기능을 사용하면 앱이 사용자 등록 과정 중 및 후에 사용자 인증을 용이하게 할 수 있습니다.

하지만 이 세션은 사용자 신원에 관한 것이 아니라 장치 신원에 관한 것입니다.

이 자세 요소는 어떤 장치가 요청을 하고 있는지 나타냅니다.

장치가 각 MDM 통신에서 보고하는 UDID는 MDM 서버가 어떤 장치를 관리하고 있는지 아는 주요 방법입니다.

DeviceInformation 쿼리는 또한 일련 번호를 포함하여 장치의 MDM 서버 속성을 제공합니다.

관리되는 장치는 종종 MDM 서버를 제외하고 조직 내부의 다른 시스템과 통신한다.

그래서, 종종 MDM 서버는 다른 시스템에 장치의 신원을 선언하는 클라이언트 인증서로 장치를 구성합니다.

장치를 식별하는 이러한 방법은 우리에게 도움이 되었지만, 그들은 그 장치가 그것이 주장하는 것이라고 믿는 것에 해당한다.

풍경이 변함에 따라, 그 어느 때보다 더 많이 분산된 장치와 함께, 우리의 보안 요구는 진화했다.

이 문제를 해결하기 위해, 저는 장치의 신원을 증명하기 위한 강력한 새로운 방법인 관리 장치 증명을 공유하게 되어 기쁩니다.

관리 장치 증명을 통해, 장치는 요청할 때 자신에 대한 강력한 증거를 제공한다.

그것은 자세 정보를 개선하므로, 그에 기반한 신뢰 평가가 더 정확하다.

요컨대, 관리 장치 증명은 합법적인 장치가 자원에 안정적으로 접근한다는 것을 의미하며, 공격자는 좌절된다.

이 릴리스는 iOS 16, iPadOS 16 및 tvOS 16용 관리 장치 증명을 제공합니다.

이 세션에서 우리는 새로운 증명 기능에 대한 개요로 시작하고, 증명 사용의 이점을 설명한 다음, 구현 세부 사항을 살펴볼 것입니다.

먼저, 증명은 무엇인가요?

증명은 사실의 선언이다.

만약 당신이 그 주장을 하는 단체를 신뢰한다면, 당신은 그 사실이 사실이라는 것을 인정합니다.

소프트웨어에서, 증명은 암호로 서명된 사실이다.

이것은 보통 X.509 인증서이다.

만약 당신이 서명자를 신뢰한다면, 당신은 그 사실이 사실이라는 것을 인정합니다.

관리 장치 증명의 경우, 사실은 장치의 신원 및 기타 속성이며, 서명자는 Apple입니다.

이러한 장치 사실의 정확성을 받아들이려면 애플을 신뢰해야 한다.

그러나, 애플이 작성한 모든 코드를 신뢰할 필요는 없다.

Apple의 제조 기록과 운영 체제 카탈로그에 액세스하는 Secure Enclave와 Apple의 증명 서버를 신뢰하기만 하면 됩니다.

그리고 만약 당신이 Apple 기기에 데이터를 보관한다면, 당신은 그것들을 암묵적으로 신뢰하고 있는 것입니다.

우리가 관리되는 장치에 증명의 힘을 가져오는 방법은 다음과 같습니다.

관리 장치 증명은 증명 인증서를 사용하는 두 가지 방법을 제공합니다.

우리는 MDM 서버에서 증명의 이점을 사용할 수 있도록 DeviceInformation MDM 명령을 강화했습니다.

그리고 우리는 조직의 인프라 전체에서 증명의 이점을 사용할 수 있는 ACME 프로필 페이로드를 추가하여 자동 인증서 관리 환경 또는 ACME 프로토콜에 대한 지원을 추가했습니다.

DeviceInformation 증명의 경우, MDM 서버는 DeviceInformation 쿼리를 발행하고 몇 가지 새로운 키를 지정합니다.

이 장치는 Apple의 서버에서 증명을 받아 MDM 서버로 반환합니다.

그런 다음 MDM 서버는 증명을 평가한다.

하지만 조심해.

장치 정보 증명은 MDM 서버에 "이러한 속성을 가진 장치가 존재한다"고 선언합니다.

MDM 서버가 현재 통신하고 있는 장치가 동일한 장치라는 것을 증명하지 않습니다.

그것을 위해, 당신은 ACME 페이로드 증명이 필요합니다.

ACME 페이로드 증명은 장치의 신원에 대한 가장 강력한 증거를 제공한다.

ACME 페이로드가 포함된 프로필을 설치할 때, 장치는 조직 ACME 서버로부터 인증서를 요청합니다.

이것은 SCEP 페이로드를 설치하는 것과 매우 유사하다.

그 장치는 ACME 서버에 증명을 제공한다.

장치의 신원에 대한 강력한 증거를 바탕으로, ACME 서버는 나머지 조직의 서버가 신뢰하는 새로운 클라이언트 인증서를 발행합니다.

이 두 가지 새로운 기능은 증명 인증서를 사용하여 몇 가지를 증명합니다: 장치는 정품 Apple 하드웨어입니다; 장치는 특정 장치입니다; 장치는 특정 속성을 가지고 있습니다; 그리고 개인 키는 장치에 바인딩됩니다.

그리고 그것은 다른 서버들이 같은 장치와 통신하고 있다는 것을 증명한다.

이 증명들이 당신에게 어떻게 도움이 되나요?

증명은 주로 보안 기능이므로, 몇 가지 위협과 증명이 이를 완화하는 방법을 설명하겠습니다.

첫째, 손상된 장치는 그 속성에 관한 것이므로, 애플은 그 속성을 증명한다.

OS가 손상되더라도, 그것은 증명의 신뢰성에 영향을 미치지 않는다.

보안 엔클레이브만 손상되지 않습니다.

또는 손상된 장치는 그 이후로 변경된 속성에 대한 오래된 증명을 제공한다.

증명의 논스는 사실이 최신 상태임을 보장한다.

ACME 페이로드 증명은 다른 위협을 완화한다.

손상된 장치는 MDM 서버와 통신할 때 다른 장치의 식별자를 보냅니다.

따라서 Apple은 장치가 TLS 연결을 인증하는 데 사용하는 클라이언트 ID와 연결된 방식으로 장치 식별자를 증명합니다.

이것은 당신의 MDM 서버와 다른 조직 서버가 어떤 장치와 통신하고 있는지 증명합니다.

또는, 공격자는 합법적인 장치에서 개인 키를 추출하여 요청을 하는 데 사용하여 합법적인 장치를 스푸핑합니다.

애플은 개인 키가 개인 키를 내보내거나 가져오는 것에 대해 매우 강력한 보호 기능을 갖춘 Secure Enclave에 의해 보호된다는 것을 증명한다.

마지막으로, 공격자는 인증 기관이 다른 장치에 대한 인증서를 발급하도록 인증서 요청을 납치합니다.

Apple은 인증서 요청과 연결하는 방식으로 요청 장치의 신원을 증명하므로, 인증 기관은 합법적인 장치에만 인증서를 발급합니다.

증명은 몇 가지 위협을 완화하는 보안 혜택을 제공합니다.

그래서 당신은 당신의 환경에서 그것들을 어떻게 사용하나요?

관리 장치 증명을 구현하는 방법에 대해 자세히 알아봅시다.

먼저, DeviceInformation 명령에 대한 개선 사항이 있습니다.

MDM 서버는 관리되는 장치에 이 명령을 실행할 수 있습니다.

요청에는 서버가 알고 싶어하는 속성 목록이 포함되어 있습니다.

우리는 새로운 속성인 DevicePropertiesAttestation을 추가했습니다.

쿼리 어레이에 추가하는 것은 MDM 서버가 증명을 요청한다는 것을 의미합니다.

증명이 신선한지 확인하기 위해, MDM 서버는 DeviceAttestationNonce 키를 사용할 수 있습니다.

이것은 요청에서 쿼리 키와 같은 수준에 나타납니다.

이 키는 선택 사항입니다.

그 값은 최대 크기가 32바이트인 데이터 객체이다.

여기 증명을 요청하는 예가 있습니다.

쿼리 배열에는 DevicePropertiesAttestation 키가 포함되어 있으며, 32바이트 nonce가 있습니다.

증명을 성공적으로 받으면, 응답에는 DevicePropertiesAttestation 키가 포함되어 있습니다.

그것의 값은 데이터 객체의 배열이다.

배열의 각 요소는 인증서 체인의 인증서이다.

이것은 예시적인 응답이다.

리프 인증서는 배열에서 가장 먼저 나타나며, 사용자 지정 OID의 장치 속성을 포함합니다.

처음 두 개의 OID는 장치 식별 속성, 일련 번호 및 UDID입니다.

MDM 등록이 사용자 등록인 경우 인증서에서 생략됩니다.

나머지 OID는 익명이며, 모든 등록 유형에 사용할 수 있습니다.

sepOS 버전은 Secure Enclave에서 실행되는 운영 체제의 버전을 의미합니다.

그리고 nonce OID의 올바른 값의 존재는 인증서가 방금 생성되었음을 증명한다.

MDM 서버가 증명을 받으면 다음 순서로 신중하게 검증해야 합니다.

그것은 인증서 체인이 예상되는 Apple 인증 기관에 뿌리를 두고 있는지 확인합니다.

Apple 인증 기관은 Apple 개인 PKI 저장소에서 구할 수 있습니다.

지정된 경우, 리프 인증서의 nonce가 DeviceInformation 요청의 nonce와 일치하는지 확인합니다.

그리고 나서 남은 OID를 구문 분석하고 그 값을 평가한다.

새로운 증명을 생성하는 것은 장치와 Apple의 서버에서 상당한 자원을 사용하므로, 새로운 증명 인증서를 요청할 수 있는 빈도에 대한 속도 제한이 있으며, 현재 7일마다 하나의 새로운 증명이 있습니다.

새로운 nonce를 지정하여 새로운 증명을 요청합니다.

Nonce를 생략하는 것은 신선도가 문제가 되지 않는다는 것을 나타내므로, 장치는 대신 가장 최근의 증명을 반환할 수 있습니다.

그리고 nonce가 지정되고 캐시된 증명과 일치하면, 캐시된 증명이 반환됩니다.

MDM 서버가 증명에서 논스를 검증할 때, 일치하지 않는 논스를 감지하고 캐싱으로 인해 예상되는지 여부를 결정해야 합니다.

하지만 그것이 요금 제한이라고 해서 7일마다 새로운 증명을 요청하지 마세요.

그렇게 하면 낭비 자원은 말할 것도 없고, MDM 서버가 장치 속성의 변화를 얼마나 빨리 발견하는지 지연시킬 뿐입니다.

대신, OS 버전과 같은 다른 DeviceInformation 속성의 관련 변경 사항을 모니터링하십시오.

그 중 하나가 바뀌면, 새로운 증명을 요청하세요.

이것은 요금 제한이 만료되기를 기다리는 대신 변경 후 가능한 한 빨리 증명이 업데이트되도록 보장합니다.

그리고, 장치가 손상되고 이러한 다른 속성에 대해 거짓말을 할 경우를 대비하여, 장치를 정직하게 유지하기 위해 새로운 증명을 위해 가끔 무작위로 요청하십시오.

증명을 요청하는 것은 실패할 수 있다.

그런 일이 발생하면, 장치는 여전히 반응하지만 일부 정보는 생략됩니다.

DevicePropertiesAttestation 필드가 응답에서 생략되거나 예상 OID 또는 그 값이 생략됩니다.

실패에는 많은 잠재적인 이유가 있다: 장치는 Apple의 증명 서버에 도달하는 네트워크 문제를 경험한다.

서버가 100% 가동되지 않으므로, Apple의 인증 서버에 문제가 있을 수 있습니다.

또는 장치 하드웨어나 소프트웨어가 손상되었거나, 심지어 정품 Apple 하드웨어가 아닐 수도 있습니다.

이 마지막 세 가지 경우, 애플의 증명 서버는 확인할 수 없는 속성에 대한 증명을 거부한다.

실패한 증명의 다른 원인은 무해한 네트워크 결함에서 적극적인 공격에 이르기까지 다양하다.

불행히도, MDM 서버가 정확한 원인을 알 수 있는 신뢰할 수 있는 방법은 없다.

이것은 실패에 대한 정보의 유일한 출처가 장치 자체이기 때문이며, 이는 거짓말하는 손상된 장치일 수 있다.

그렇다면 MDM 서버는 실패를 어떻게 해석해야 하나요?

증명이 실패할 때 항상 최악의 상황을 가정하지 마세요.

만약 당신이 제로 트러스트 아키텍처를 가지고 있다면, 당신이 그것을 처리하는 방법은 다음과 같습니다.

조직은 장치에 대한 신뢰 점수를 계산하며, 실패했거나 예기치 않게 오래된 증명이 그 점수를 낮춘다.

낮은 신뢰 점수는 서비스에 대한 액세스를 거부하거나, 수동 조사를 위해 장치에 플래그를 지정하거나, 이를 지우고 인증서를 취소하여 시정하는 것과 같은 다양한 조치를 트리거합니다.

이것은 실패한 증명에 대한 적절한 대응을 보장한다.

ACME 페이로드 증명 구현으로 넘어갑시다.

ACME 페이로드를 설치하는 것은 몇 가지 단계를 포함한다.

나는 그 과정에서 다른 참가자들을 설명하고, 그 각각의 단계를 설명할 것이다.

우리는 iPhone, iPad 또는 Apple TV로 시작합니다.

대부분의 경우 이것은 MDM 서버에 의해 관리된다.

ACME 서버가 있어.

이것은 ACME 프로토콜인 RFC 8555를 구현하므로 조직 인증 기관에서 클라이언트 인증서를 발급할 수 있습니다.

그리고 증명을 발행하는 애플의 증명 서버가 있다.

첫 번째 단계는 MDM 서버가 ACME 페이로드가 포함된 프로필을 설치하는 것입니다.

페이로드는 장치가 생성할 키의 속성, 장치가 요청할 인증서의 속성 및 ACME 서버에서 인증서를 요청하는 방법을 지정합니다.

프로필 설치를 시작하기 위해, 장치는 요청된 유형의 키를 생성합니다.

증명을 사용하려면, 키는 하드웨어에 바인딩되어 있어야 합니다.

ACME 페이로드는 RSA와 다양한 크기의 키를 지원하지만, 하드웨어 바인딩 키를 얻으려면 ECSECPrimeRandom을 사용해야 합니다.

당신의 최선의 선택은 ECSECPrimeRandom 384비트 키입니다. 왜냐하면 그것은 최고의 보안 하드웨어 바인딩 키이기 때문입니다.

키가 생성되면, 장치는 ACME 서버와 처음 접촉한다.

장치는 ACME 서버와 통신하는 나머지 과정에 사용할 URL을 지정하는 DirectoryURL을 요청합니다.

그런 다음 두 시스템은 계정과 주문을 생성합니다.

서버는 device-attest-01 검증 유형을 제공합니다.

그런 다음, ACME 서버는 논스를 생성하여 토큰 필드의 장치로 보냅니다.

ACME 프로토콜은 처음에 서버 인증서를 발급하는 데 사용되었다.

그러나 여기서 우리가 사용하는 검증 유형은 증명을 받고 클라이언트 인증서를 발급하기 위한 ACME 프로토콜의 확장을 지정하는 IETF 초안에 도입되었다.

증명은 선택 사항입니다.

페이로드가 증명을 지정하면, 장치는 Apple로부터 증명을 요청합니다.

이것은 DeviceInformation 증명과 거의 동일하다.

그것은 동일한 OID를 사용하며, 장치 식별 OID는 사용자 등록을 위해 생략됩니다.

하지만 몇 가지 차이점이 있어.

논스는 증명에 삽입하기 전에 SHA-256을 사용하여 해시됩니다.

Nonce는 MDM 서버가 아니라 ACME 서버에서 나온다.

그리고 증명 리프 인증서와 일치하는 개인 키는 장치가 방금 생성한 키입니다.

증명 인증서는 개인 키와 일치하지만, 그 인증서는 증명 이외의 어떤 목적으로도 사용할 수 없습니다.

따라서 장치는 ACME 서버에서 개인 키와 일치하는 다른 인증서를 요청하며, 이 인증서는 TLS에 적합합니다.

이 장치는 페이로드의 인증서 요청 속성을 포함하는 인증서 서명 요청을 제공합니다.

그것은 증명 체인을 제공한다.

그리고 그것은 ACME 페이로드에서 ClientIdentifier를 제공한다.

일반적으로 이것은 반복적인 요청을 방지하기 위해 단일 인증서 발급에 좋은 티켓처럼 사용됩니다.

ACME 서버는 이 순서대로 인증서를 발급하기 전에 요청을 신중하게 검증해야 합니다.

고객 식별자가 유효하고 사용되지 않았는지 확인해야 합니다.

증명 인증서는 올바른 Apple CA에 연결되어야 합니다.

증명 리프 인증서의 공개 키는 CSR과 일치해야 합니다.

Nonce는 ACME 서버가 이전에 보낸 SHA-256 해시와 일치해야 합니다.

그리고 나서 ACME 서버는 나머지 OID를 평가할 수 있다.

그리고 증명이 실패할 수 있다는 것을 기억하세요.

ACME 서버는 DeviceInformation 사례에서 실패한 증명으로 검토한 것처럼 인증서를 발급할 때 실패를 신중하게 고려해야 합니다.

여기서부터, 일들이 빠르게 끝난다.

ACME 서버는 조직 CA로부터 클라이언트 인증서를 발급하고 장치로 반환합니다.

ACME 서버는 클라이언트 인증서 발급을 위한 최종 권한이다.

SubjectAltName과 같은 CSR의 속성을 존중하거나 재정의하도록 선택할 수 있습니다.

이 장치는 인증서를 키체인에 저장하고, 이것은 ACME 페이로드의 설치를 완료합니다.

이 모든 것을 하나로 묶자.

서버는 그들과 통신하는 장치가 그것이 주장하는 장치라는 것을 어떻게 알 수 있나요?

이 장치는 여러 가지 방법으로 동일한 개인 키를 사용합니다: Apple에서 증명을 받을 때, ACME 서버에서 클라이언트 인증서를 받을 때, TLS를 사용하여 다른 서버와 통신할 때.

열쇠가 하드웨어에 바인딩되어 있기 때문에, 우리는 이 모든 작업이 같은 장치에서 수행되었다는 것을 알고 있다.

그리고 우리는 그 장치를 설명하는 증명 인증서를 가지고 있습니다.

이것들을 결합하면, 조직 서버는 이제 액세스 권한을 부여할 때 장치의 신원을 신뢰할 수 있습니다.

인증서와 SCEP 페이로드와 마찬가지로, 프로필의 다른 페이로드는 인증서를 사용하기 위해 ACME 페이로드를 참조할 수 있습니다.

MDM, Wi-Fi, VPN, Kerberos, Safari에 사용하세요.

이 모든 시스템은 증명의 혜택을 받는다.

장치는 동시에 설치된 증명을 사용하는 최대 10개의 ACME 페이로드를 가질 수 있습니다.

동일한 장치로 복원할 때에도 관리되는 장치의 백업이 복원될 때 하드웨어 바인딩 키는 보존되지 않습니다.

그리고 관리 장치 증명으로 다른 일을 하지 않는다면, MDM 클라이언트 ID에 ACME 페이로드를 사용하여 MDM 서버가 어떤 장치를 관리하고 있는지 확인할 수 있습니다.

마무리하자.

관리 장치 증명을 사용하여 여러 종류의 위협을 시정합니다.

더 나은 신뢰 평가를 위해 장치 정보 증명을 활용하여 자세의 장치 신원 구성 요소를 개선합니다.

그리고 이제 ACME 증명을 사용하여 조직 리소스에 액세스할 때 장치의 신원을 증명할 수 있습니다.

우리는 당신의 관리 장치 증명의 구현을 기대합니다.

함께, 우리는 당신의 장치 배포의 보안을 개선할 것입니다.

고마워, 그리고 멋진 WWDC 보내.