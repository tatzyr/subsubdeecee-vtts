10096

안녕하세요, 저는 프라이버시 엔지니어링의 저스틴입니다. "개인 정보 보호의 새로운 기능"에 오신 것을 환영합니다.

애플에서, 우리는 사생활이 기본적인 인권이며, 사람들의 사생활을 보호하는 것이 우리가 하는 모든 일의 중심에 있다고 믿습니다.

당신은 사람들이 당신의 앱을 사랑하고 그것을 그들의 삶의 일부로 만들기를 원합니다.

훌륭한 기능을 구축하는 것은 그들의 관심을 끄는 방법이며, 프라이버시로 구축하는 것은 그들의 신뢰와 그들의 삶에서 당신의 위치를 유지하는 방법입니다.

사람들이 그들에 대해 어떤 데이터가 수집되고 어떻게 사용되는지 이해할 때, 대안을 선택하는 대신 앱이나 서비스에 완전히 참여할 가능성이 더 큽니다.

Apple에서, 우리는 우리 제품을 사용하는 사람들을 위해 훌륭한 기능과 훌륭한 개인 정보 보호를 우선시했으며, 이를 고객에게도 제공할 수 있도록 돕고 싶습니다.

애플에서, 우리는 일련의 실행 가능한 패턴, 개인 정보 보호 기둥으로 훌륭한 기능과 훌륭한 개인 정보 보호의 목표에 접근합니다.

이것들은 앱에 개인 정보를 구축하는 방법에 대한 훌륭한 가이드입니다.

첫 번째는 데이터 최소화이다.

기능을 구축하는 데 필요한 데이터만 사용하세요.

다음은 온디바이스 처리입니다.

이 기능에 민감한 데이터가 필요한 경우, 장치의 힘을 사용하여 서버와 공유하지 마십시오.

세 번째는 투명성과 통제이다.

민감한 데이터가 장치에서 전송되는 경우, 사람들이 무엇이 전송되는지, 어떻게 사용되는지 이해하고 제어할 수 있도록 하세요.

마지막으로, 보안 보호.

장치 안팎에서 전송 및 저장 중인 민감한 데이터를 보호하세요.

이 비디오에서, 저는 당신에게 영향을 미칠 몇 가지 플랫폼 변경 사항, 당신이 채택해야 할 몇 가지 새로운 개인 정보 보호 강화 기능, 그리고 개인 정보 보호에 영향을 미치는 중요한 새로운 기능에 대해 이야기하겠습니다.

먼저, 당신의 앱에 영향을 미칠 플랫폼에 오는 몇 가지 변경 사항에 대해 이야기하겠습니다.

iOS 16과 macOS Ventura에는 몇 가지 중요한 변경 사항이 포함되어 있습니다: 장치 이름에 대한 액세스를 제한하는 새로운 장치 이름 자격; 위치 표시기는 이제 제어 센터에서 앱 속성을 보여줍니다; 더 많은 장소에서 공증된 앱의 무결성을 확인하는 게이트키퍼 개선; 로그인 시 Mac 앱을 실행하는 것은 이제 사람들에게 추가 사항을 알리고 단순화된 API를 가지고 있습니다; 레거시 Pasteboard 액세스는 이제

장치 이름 접근 변경부터 시작하겠습니다.

장치를 더 쉽게 식별할 수 있도록, Apple ID 계정의 사용자 이름은 기본적으로 iOS의 장치 이름의 일부로 포함됩니다.

iOS 16 이전에, UIDevice API는 앱이 사용자가 할당한 장치 이름에 액세스할 수 있도록 허용했다.

이 값의 앱 액세스를 사용자 기대에 더 잘 맞추기 위해, UIDevice.name API는 사람들이 사용자 정의하는 방법에 관계없이 사용자가 할당한 이름이 아닌 장치의 모델을 반환합니다.

우리는 일부 앱이 문서가 마지막으로 편집된 곳을 사람들에게 명확하게 하는 것과 같이 장치 이름을 활용하는 다중 장치 경험을 가지고 있다는 것을 알고 있습니다.

앱이 다중 장치 기능을 사용하고 이를 앱의 UI에 표시하는 경우, 장치 이름에 액세스할 수 있는 권한을 요청할 수 있습니다.

이 자격에도 불구하고, 클라우드 호스팅 서비스 제공 업체 이외의 제3자와 장치 이름을 공유하는 것은 허용되지 않습니다.

다음은 위치 사용에 대한 속성 업데이트입니다.

앱이 위치를 사용할 때, iOS는 상태 표시줄에 화살표를 표시합니다.

iOS 16에서 제어 센터에서 아래로 스와이프하면 어떤 앱이 위치를 사용하고 있는지 나타냅니다.

앱이 사람들을 놀라게 하는 것을 피하기 위해 예상되는 경우에만 위치를 사용하는지 확인하세요.

이제 저는 Mac에 대해 이야기하고 싶습니다.

게이트키퍼는 새로 다운로드한 앱의 무결성을 확인합니다.

macOS Ventura에서 Gatekeeper는 이제 격리된 앱뿐만 아니라 공증된 모든 앱의 무결성을 확인할 것입니다.

먼저, 앱에 제대로 서명해야 합니다.

macOS Ventura부터, 공증된 앱이 더 이상 유효하게 서명되지 않은 경우, 첫 번째 실행 시 Gatekeeper에 의해 차단됩니다.

모든 실행 파일과 번들에 서명하고 앱을 변경할 때 서명이 유효한지 확인해야 합니다.

무결성 검사 외에도, 게이트키퍼는 특정 방식으로 앱이 수정되는 것을 방지할 것입니다.

앱을 수정하는 가장 일반적인 방법은 업데이트를 위한 것이다.

동일한 개발자 계정이나 팀이 유효하게 서명한 앱은 계속해서 서로를 업데이트할 수 있습니다.

이건 그냥 효과가 있을 거야.

다른 개발 팀이 앱을 업데이트하거나 업데이터로만 업데이트를 제한할 수 있도록 하려면, info-plist를 업데이트할 수 있습니다.

예를 들어, 여기서, 관련 없는 앱은 Pal About가 plist 변경으로 업데이트할 수 있도록 허용할 수 있습니다.

허용하고 싶은 NSUpdateSecurityPolicy를 추가하기만 하면 됩니다.

NSUpdateSecurityPolicy 내에서, 사전 매핑 팀 식별자인 "AllowProcesses"를 서명 식별자 배열에 추가하십시오.

이 예에서, 이 정책은 Pal About의 팀 식별자가 서명한 서명 식별자 com.example.pal.about가 있는 모든 프로세스를 통해 앱을 업데이트할 수 있습니다.

앱이 동일한 개발 팀이 서명하지 않고 NSUpdateSecurityPolicy에서 허용하지 않는 것에 의해 수정된 경우, macOS는 수정을 차단하고 앱이 다른 앱을 관리하기를 원한다고 사용자에게 알립니다.

알림을 클릭하면 사람들이 시스템 설정으로 전송되며, 여기서 앱이 다른 앱을 업데이트하고 수정할 수 있도록 허용할 수 있습니다.

macOS Ventura를 준비하려면, 앱의 실행 파일과 번들에 서명하고 업데이트 후에도 서명이 유효한지 확인해야 합니다.

사용하는 모든 업데이터를 열거하고 NSUpdateSecurityPolicy를 채택하세요.

앱이 정책 외부의 다른 앱을 수정하려고 하면, 사용자는 이를 허용해야 합니다.

다음으로, 나는 Mac에서 로그인할 때 앱을 실행하는 것에 대해 이야기할 것이다.

macOS Monterey 및 이전 버전에서는 누군가가 Mac에 로그인하면 실행 에이전트나 데몬을 사용하여 로그인할 때 앱을 실행할 수 있습니다.

이것은 앱이 메뉴 도우미를 실행하거나, 백그라운드에서 소프트웨어 업데이트를 확인하거나, 여러 앱에서 데이터를 동기화할 수 있기 때문에 편리합니다.

때때로 사용자가 Mac에 로그인할 때, 관련이 없는 앱이 열려 있고 방해가 될 수 있습니다.

또한, 앱이나 다른 소프트웨어는 센서나 위치와 같은 데이터에 접근할 수 있다.

실행 중인 것이 보이지 않을 수 있기 때문에, 이런 일이 일어나고 있다는 것이 사람들에게 항상 명확하지는 않다.

그리고 개발자의 경우, 로그인 시 실행하기 위해 어떤 메커니즘을 사용해야하는지 항상 명확하지 않습니다: 데몬, 에이전트, 서비스 관리...?

macOS Ventura를 사용하면, 이것은 훨씬 더 간단합니다.

macOS Ventura에서는 새로운 단일 API를 사용하여 로그인 시 앱, 실행 에이전트 또는 데몬을 실행할 수 있습니다.

당신의 앱은 기본적으로 로그인 시 실행될 수 있으며, 사용자에게 알림을 받게 됩니다.

앱이 높은 권한을 가진 데몬이 필요한 경우, 활성화하려면 관리자 승인이 필요합니다.

알림을 클릭하면 시스템에서 실행되는 앱을 관리할 수 있는 시스템 설정의 로그인 항목 창이 열립니다.

상단 부분은 로그인 시 실행되는 앱을 제어하고, 하단 부분은 로그인 시 실행되는 다른 항목을 제어합니다.

이 창은 이제 에이전트, 데몬, SMLoginItems 및 로그인 시 열기 위해 자신을 추가하는 앱을 포함하여 로그인 시 앱을 실행할 수 있는 다양한 방법을 제어합니다.

이 새로운 API를 사용하는 방법은 다음과 같습니다.

서비스 관리 프레임워크를 사용하면 로그인 시 리소스를 쉽게 시작할 수 있습니다.

모든 에이전트와 데몬은 앱 번들 안에 있기 때문에, 더 이상 실행 에이전트를 작성하거나 정리 스크립트를 만들기 위해 설치 프로그램을 사용할 필요가 없으며, 이는 Mac App Store 앱에서도 작동합니다.

앱에서 SMAppService API를 호출하여 사람들이 알림을 받을 때와 설정에서 앱 아이콘이 어떻게 보이는지 제어하십시오.

다음은 페이스트보드 접근입니다.

이전에, 투명성 공지는 사람들이 편집 옵션에서 붙여넣기를 누르지 않았을 때 앱이 붙여넣기 보드에 액세스했을 때 알려졌습니다.

iOS 16에서 시스템은 다른 앱에서 작성된 페이스트보드 항목에 대한 모든 액세스에 대한 의도를 확인합니다.

앱이 UIPasteboard API를 사용하여 페이스트보드 항목의 값에 계속 액세스하면, 시스템은 모달 프롬프트를 표시합니다.

이 프롬프트가 앱에 나타나는 것을 피하는 세 가지 방법이 있습니다.

첫 번째는 편집 옵션 메뉴를 사용하는 것이다.

두 번째는 키보드 단축키를 사용하는 것이다.

"적 채택할 기능" 섹션에서, 저는 세 번째 옵션인 새로운 UIKit 붙여넣기 컨트롤에 대해 이야기할 것입니다.

그것들은 당신이 알아야 할 플랫폼에 오는 개인 정보 보호 변경 사항입니다.

또한, 앱에 개인 정보 보호로 원활한 경험을 쉽게 구축할 수 있는 몇 가지 새로운 개인 정보 보호 향상 기술이 있습니다.

UIKit 붙여넣기 컨트롤에 대해 이야기하는 것으로 시작하겠습니다.

UIKit 붙여넣기 컨트롤을 앱 경험에 추가하여 사람들이 버튼을 눌러 직관적으로 붙여넣기 보드에 액세스할 수 있도록 하세요.

UIKit 붙여넣기 컨트롤을 사용하면 편집 메뉴, 키보드 단축키 또는 시스템 프롬프트 없이 붙여넣을 수 있습니다.

시스템은 버튼이 눈에 띄게 표시되고 탭되었는지 확인하여 의도를 확인합니다.

앱의 인터페이스에 맞게 이 버튼을 사용자 정의하세요.

둥근 모서리를 변경하거나 텍스트, 아이콘 또는 배경의 색상을 변경하세요.

버튼이 충분한 대비를 가지고 있고 다른 요소 뒤에 숨겨져 있지 않은지 확인하세요. 그렇지 않으면 작동하지 않을 것입니다.

붙여넣기 버튼이 예상대로 작동하는지 테스트하세요.

데이터 액세스를 최소화하면서 원활한 경험을 만드는 또 다른 도구는 미디어 장치 발견이다.

오늘날 앱은 사용자 지정 검색 및 통신 논리와 함께 다양한 스트리밍 프로토콜을 사용합니다.

이전에 이러한 프로토콜 중 하나를 사용하여 미디어를 스트리밍하려면, 앱은 로컬 네트워크에 액세스할 수 있는 권한이 필요했고, 종종 블루투스가 필요했습니다.

이 허가는 장치 선택을 관리하기 위해 모든 장치에 대한 지식이 필요하기 때문에 필요하지만 필요한 것보다 더 많은 정보에 대한 액세스를 제공하고 지문 인식 위험을 초래합니다.

미디어 장치 검색을 사용하면 네트워크 또는 블루투스 액세스 프롬프트를 표시하지 않고도 앱을 선택한 장치로 스트리밍할 수 있습니다.

스트리밍 장치는 AirPlay와 동일한 선택기에 바로 나타나며, 앱은 스트리밍하기 위해 선택된 장치만 볼 수 있습니다.

이것은 DeviceDiscovery 확장 덕분에 작동합니다.

이 확장 프로그램은 로컬 네트워크와 블루투스 장치를 검색할 수 있지만 앱과 별도로 샌드박싱되어 있으므로 스캔 결과를 다시 보낼 수 없습니다.

이것은 앱이 전체 네트워크를 볼 수 없기 때문에 앱이 로컬 네트워크나 블루투스에 액세스하는 데 광범위한 권한이 필요하지 않다는 것을 의미합니다.

대신, 확장 프로그램은 발견된 액세서리만 DeviceDiscoveryExtension 프레임워크로 보낼 수 있습니다.

DeviceDiscoveryExtension 프레임워크는 피커에서 발견된 장치 목록을 제공하며, 선택한 후 시스템은 선택한 장치와의 통신을 가능하게 합니다.

다른 허가는 필요하지 않습니다.

프로토콜 공급자는 DeviceDiscoveryExtension으로 앱 확장 프로그램을 만들고, AVRoutePickerView를 확장하여 사용자 선택 콜백을 처리하고, 프로토콜에서 사용자가 선택한 네트워킹 장치를 처리하고, 샘플 앱과 확장 프로그램을 다운로드하여 자세히 알아보십시오.

앱 개발자는 DeviceDiscoveryExtension을 구현하기 위해 스트리밍 프로토콜 공급자에게 연락해야 합니다.

미디어 장치 발견은 훌륭한 프라이버시로 훌륭한 기능을 구축할 수 있는 기회이다.

당신의 앱은 스트리밍에 필요한 데이터에 정확히 접근할 수 있습니다 - 발견은 간단하고 프롬프트가 없으며, 사람들은 훌륭한 네트워크 프라이버시를 얻습니다.

이건 모두를 위한 승리야.

미디어 장치 검색이 프롬프트 없이 필요한 장치에만 액세스할 수 있는 권한을 제공하는 것처럼, PHPicker API는 프롬프트 없이 필요한 사진에만 액세스할 수 있는 권한을 제공합니다.

PHPicker는 현재 macOS Ventura와 watchOS 9가 있는 시계와 함께 Mac에 있습니다.

Mac을 업데이트하고 앱을 시청하여 사용자에게 모든 사진에 액세스하라는 메시지를 표시하지 않고 사진에 액세스하세요.

다음은 CAPTCHA가 방해하지 않고 사기를 방지하는 강력한 도구인 개인 액세스 토큰입니다.

개인 액세스 토큰은 CAPTCHA를 대체하며 웹사이트 또는 API 개발자가 해당 장치를 추적하지 않고도 합법적인 장치를 인식할 수 있는 블라인드 토큰을 사용하여 구축됩니다.

애플은 장치가 어떤 웹사이트에서 토큰을 가져오는지 알지 못하며, 토큰을 받는 서버는 토큰을 보내는 장치의 신원을 알지 못한다.

프라이빗 액세스 토큰은 프라이버시 패스 IETF 오픈 표준의 일부이며 프라이빗 릴레이 사용자의 진위를 확인하는 데 사용하는 것과 동일한 기술입니다.

자세한 내용은 "CAPTCHA를 개인 액세스 토큰으로 교체" 비디오를 확인하세요.

이제 나는 패스키를 검토할 거야.

비밀번호는 계정을 인증하고 개인 데이터를 안전하게 유지하는 중심에 있지만 심각한 문제가 있습니다.

그것들은 기억하기 어렵기 때문에, 사람들은 그것들을 더 간단하게 만들거나 여러 사이트에서 재사용한다.

그리고 그들은 피싱될 수 있다.

암호키는 더 강력한 인증 솔루션을 가능하게 하고 비밀번호 자동 채우기와 동일한 즉시 친숙한 UI 스타일과 생체 인식을 사용합니다.

암호키는 공개 키 암호화를 기반으로 구축되므로, 서버가 저장하는 가치는 약할 수 없으며, 공개되면 진정으로 공개적이기 때문에 중요하지 않습니다.

암호키는 본질적으로 그들이 대응하는 웹사이트에 연결되어 있기 때문에, 피싱할 수 없다.

패스키 구현에 대한 자세한 내용은 "Passkeys를 만나세요"라는 전체 비디오가 있습니다. 그것들은 당신이 채택할 수 있는 흥미롭고 중요한 개인 정보 보호 업데이트입니다!

제가 이야기하고 싶은 한 가지 더 중요한 것은 안전 점검이라고 불리는 iOS 16의 새로운 개인 정보 보호 도구입니다.

안전 점검은 가정 또는 친밀한 파트너 폭력 상황에 처한 사람들이 이전에 다른 사람들에게 부여했을 수 있는 접근을 검토하고 재설정할 수 있도록 돕기 위해 고안되었습니다.

안전 점검은 다음과 같은 방법으로 도움이 됩니다: FindMy에서 위치 공유를 끄고 사진, 메모 및 캘린더에서 공유를 중단하여 사람들과 데이터 공유를 중지합니다.

모든 타사 앱에 대한 시스템 개인 정보 보호 권한을 재설정하여 앱과의 데이터 공유를 중단합니다.

다른 iCloud 기기의 FaceTime과 iMessage에서 로그아웃하여 메시지와 통화가 손에 있는 장치로만 전송되도록 하는 데 도움이 됩니다.

다른 장치가 FindMy, 사진, 캘린더 등에서 위치 업데이트를 받을 수 없도록 하기 위해 다른 iCloud 장치에서 로그아웃하는 과정을 안내합니다.

기기와 iCloud 계정 모두의 비밀번호를 변경하는 데 도움이 됩니다.

그리고 iCloud 이중 인증을 위한 신뢰할 수 있는 전화번호.

그리고 필요에 따라 변경하기 위해 비상 연락처를 관리하는 데 도움이 됩니다.

이 모든 것들은 함께 개인 안전에 대한 위협을 가진 사람들이 그들의 데이터에 대한 접근을 통제하는 데 도움을 준다.

안전 점검을 사용하는 방법에는 두 가지가 있습니다.

첫 번째는 사람과 앱에서 액세스를 즉시 재설정해야 하는 위기 상황을 위한 긴급 재설정입니다.

두 번째는 안전 점검의 각 기능에 대한 보다 세밀한 제어를 제공하는 공유 및 액세스 관리입니다.

긴급 재설정을 사용하면 모든 사람과 모든 앱에서 신속하게 조치를 취하고 다른 장치에서 FaceTime 및 iMessage에 대한 액세스를 비활성화할 수 있습니다.

그런 다음 iCloud 계정을 손에 들고 있는 장치에 안전하게 보호하고 비상 연락처와 신뢰할 수 있는 장치를 검토합니다.

공유 및 액세스 관리를 사용하면 개인별 및 앱별 앱을 검토하여 공유 중인 사람을 검토할 수 있습니다.

당신은 이것을 이름이나 공유하고 있는 정보의 유형으로 정렬할 수 있습니다.

이것은 특정 사람과의 공유를 이해하고 통제할 수 있는 훌륭한 도구입니다.

또한 장치에 액세스할 수 있는 사람이 설치한 민감한 권한이 있는 앱을 찾는 데 도움이 될 수 있습니다.

빠른 출구는 모든 안전 점검 흐름에서 사용할 수 있으며 누군가가 그들이 무엇을 하고 있는지 볼 수 있다고 우려하는 경우 사람들이 흐름을 빠르게 나갈 수 있게 해준다.

그것을 누르면 홈 화면으로 돌아가고, 다음에 설정을 입력하면 안전 점검이 아닌 기본 설정 페이지로 돌아올 것입니다.

안전 점검은 가정 또는 친밀한 파트너 폭력 상황에 처한 사람들이 개인 데이터에 대한 통제권을 되찾을 수 있도록 도와줍니다.

개인 정보 보호는 데이터를 공유하는 순간에 결정을 내리는 것뿐만 아니라 언제든지 그 결정을 이해하고 변경할 수 있는 것입니다.

이것은 애플이 프라이버시를 위해 디자인하는 방법의 한 예일 뿐이다.

앱에서 개인 정보 보호를 위해 설계하면 사용자와의 신뢰를 구축하고 유지하는 데 도움이 될 것입니다.

iOS 16과 macOS Ventura는 이 여정에 도움이 되는 많은 신기술을 제공합니다.

UI 장치 이름 변경 및 게이트키퍼 개선과 같은 새로운 플랫폼 업데이트를 준비하세요.

미디어 장치 검색 확장, UIKit 붙여넣기 컨트롤, 개인 액세스 토큰 및 패스키를 채택하십시오.

오늘 나와 함께 해줘서 고마워.

우리는 당신이 앱에 훌륭한 기능과 훌륭한 개인 정보 보호를 어떻게 구축하는지 빨리 보고 싶습니다.

.