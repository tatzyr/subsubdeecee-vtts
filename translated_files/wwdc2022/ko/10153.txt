10153

타일러: 안녕하세요, 제 이름은 타일러이고, 저는 웹킷 접근성 팀의 엔지니어입니다.

오늘 세션에서, 우리는 스크린리더와 같은 보조 기술에 대한 간략한 개요부터 시작하여 현대적인 웹 접근성을 둘러볼 것입니다.

그런 다음, 웹 스피치 API 및 대화 요소에서 사용자 지정 컨트롤, 음성 합성 마크업 언어 또는 SSML과 같은 도구를 사용하여 풍부하고 접근하기 쉬운 웹 앱을 구축할 수 있는 방법에 대해 이야기할 것입니다.

그럼 보조 기술에 대해 이야기하는 것으로 시작합시다.

전 세계 약 7명 중 1명은 세계, 장치 및 웹과 상호 작용하는 방식에 영향을 미치는 장애를 가지고 있다.

사람들은 모든 연령, 모든 기간, 그리고 다양한 수준의 중증도에서 장애를 경험할 수 있다.

애플은 사용자가 자신에게 가장 적합한 방식으로 장치와 상호 작용할 수 있도록 다양한 도구를 구축했다.

이러한 도구에는 VoiceOver, 스위치 제어, 음성 제어 및 전체 키보드 액세스가 포함되며, 모두 대체 장치 사용 수단을 제공합니다.

이러한 도구와 다른 도구에 대해 자세히 알아보려면, "iOS 앱에서 전체 키보드 액세스 지원"이라는 제목의 작년 세션을 확인하세요.

실제 웹 페이지에서 이것이 어떤 것인지 느끼려면, VoiceOver를 사용하여 샘플 퀴즈 평가 웹사이트를 탐색해 봅시다.

내 iPad에서, 나는 VoiceOver를 활성화하기 위해 상단 버튼을 세 번 누를 것이다.

Siri: 보이스오버 켜. 사파리, 사이드바 표시, 버튼.

타일러: 그리고 이제, VoiceOver가 활성화된 상태에서, 나는 초점을 맞추기 위해 페이지 제목을 탭할 것이다...

Siri: 팝 퀴즈, 제목 레벨 1.

타일러: 그리고 이 페이지의 요소를 이동하려면 오른쪽으로 스와이프하세요.

Siri: 여섯 개 중 하나: 총 여덟 조각이 있는 피자의 1/4에 몇 조각이 있나요?

두 조각, 라디오 버튼, 선택되지 않음, 네 조각 중 하나, 세 조각-- 네 조각-- 여섯 조각-- 다음 질문. 버튼.

타일러: 웹 개발자로서, 당신은 VoiceOver와 같은 기술 사용자가 페이지에 접근할 수 있도록 많은 도구를 사용할 수 있습니다.

예를 들어, 사파리는 버튼, h1에서 h6, 테이블 요소, 목록 요소 등과 같은 의미론적 HTML 요소에 대한 접근성 지원이 내장되어 있습니다.

이러한 의미론적 HTML 요소를 사용하는 것은 기본값이어야 합니다. 이는 모든 브라우저에서 사용자에게 일관되고 접근 가능한 경험을 보장할 수 있기 때문입니다.

그러나, 때때로 당신은 의미론적 HTML에 의해 완전히 충족되지 않을 필요가 있을 수 있으며, 자바스크립트로 사용자 지정 구성 요소를 만들어야 할 수도 있습니다.

이 경우, 의미론이 보조 기술에 적절하게 전달될 수 있도록 구성 요소를 ARIA 속성으로 보완해야 할 수도 있습니다.

이것은 우리를 오늘의 두 번째 주제인 사용자 지정 제어로 이끈다.

우리가 피자 퀴즈 질문을 더 매력적으로 만들고 싶었다고 가정해 봅시다.

우리가 할 수 있는 한 가지는 라디오 버튼을 사용자가 탭으로 피자 트레이에서 조각을 추가하고 제거할 수 있는 사용자 지정 컨트롤로 교체하는 것입니다.

이 사용자 지정 컨트롤에 대한 마크업은 div와 ID로 시작할 수 있습니다.

탭 또는 클릭으로 상호 작용하는 사용자가 이 구성 요소를 작동할 수 있도록 하려면 클릭 이벤트 리스너를 추가해야 합니다.

요소의 ID를 허용하는 생성자를 사용하여 새로운 PizzaControl 클래스를 만들어 봅시다.

우리는 ID로 그 요소를 얻고, 클릭 이벤트 리스너를 추가할 것이다.

이 리스너는 탭된 위치를 기반으로 새로운 슬라이스 수를 계산한 다음 그 값을 업데이트라는 함수에 전달하여 컨트롤을 다시 렌더링합니다.

이것은 일부 사용자에게는 잘 작동할 것이지만, 전부는 아니다.

예를 들어, 어디에서 클릭하거나 탭해야 할지 모르는 시각 장애가 있는 사용자는 어떻습니까?

사용자 지정 구성 요소를 만들 때, 우리는 항상 모든 유형의 보조 기술 사용자가 구성 요소와 어떻게 상호 작용할지 고려해야 합니다.

이를 염두에 두고, 우리의 구성 요소에 접근할 수 있도록 하는 첫 번째 단계는 "슬라이더"의 가치를 가진 역할 속성을 부여하는 것입니다.

우리의 컨트롤은 슬라이더 모델에 꽤 잘 어울린다.

최소 값, 제로 슬라이스, 최대 값, 여덟 슬라이스, 그리고 현재 값, 네 슬라이스가 있습니다.

또한 키보드 및 기타 비터치 인터페이스 사용자에게 구성 요소에 초점을 맞출 수 있도록 0의 탭인덱스를 추가해야 합니다.

우리는 또한 몇 가지 ARIA 속성을 추가해야 할 것이다.

Aria-valuemin과 aria-valuemax는 이 슬라이더의 최소값과 최대값에 대한 보조 기술을 알려줍니다.

이러한 속성은 기본 범위 유형 입력에서 사용할 수 있는 최소 및 최대 속성과 유사합니다.

다음으로, 컨트롤의 현재 값을 전달하기 위해 aria-valuenow를 추가해 봅시다.

우리는 또한 네 조각인 현재 값에 대한 더 유용한 설명을 제공하기 위해 aria-valuetext를 사용할 것입니다.

이제 우리는 초점을 맞출 수 있는 슬라이더로 컨트롤을 설정했으므로, 보조 기술에서 컨트롤의 가치에 대한 업데이트를 처리해야 합니다.

iOS에서 VoiceOver는 한 손가락으로 슬라이더를 위로 스와이프하여 슬라이더를 증가시키고, 아래로 스와이프하여 슬라이더를 감소시킵니다.

사파리는 이러한 제스처를 처리하는 쉬운 방법을 제공한다.

VoiceOver 사용자가 초점을 맞춘 슬라이더로 위로 스와이프하면, 사파리는 자동으로 화살표 키 오른쪽 이벤트를 시뮬레이션합니다.

그리고 마찬가지로, VoiceOver 사용자가 초점을 맞춘 슬라이더로 아래로 스와이프하면, 화살표 키 왼쪽 이벤트가 시뮬레이션됩니다.

이러한 시뮬레이션된 이벤트는 실제 키 누른자와 동일하게 작동하며, 이는 주요 이벤트 리스너가 처리할 수 있음을 의미합니다.

도구 벨트의 이 새로운 지식으로, 피자 컨트롤에 키다운 리스너를 추가합시다.

활성화된 키가 오른쪽 화살표 또는 위쪽 화살표인 경우, 우리는 현재 양의 슬라이스와 1로 컨트롤을 업데이트할 것입니다.

그리고 마찬가지로, 활성화된 키가 왼쪽 화살표 또는 아래쪽 화살표인 경우, 우리는 현재 슬라이스에서 1을 뺀 양으로 제어를 업데이트할 것입니다.

이 주요 이벤트 리스너를 추가하는 것은 VoiceOver 사용자뿐만 아니라 키보드에 액세스할 수 있는 웹 앱에 크게 또는 전적으로 의존할 수 있는 Full Keyboard Access 사용자에게도 도움이 됩니다.

두 이벤트 리스너가 모두 설립됨에 따라, 우리는 아마도 이제 업데이트 기능을 정의하고 싶을 것이다.

먼저, 우리는 주어진 값이 0에서 8 사이의 범위 내에 있는지 확인하고, 저장된 슬라이스 카운트 상태를 이 값으로 업데이트할 것입니다.

다음으로, 우리는 제어의 시각적 표현과 ARIA 표현을 모두 업데이트해야 합니다.

사용자 지정 구성 요소를 구축할 때, 좋은 규칙은 구성 요소의 시각적 표현을 업데이트하는 경우 ARIA 표현을 어떻게 업데이트할지 생각해야 한다는 것입니다.

이 경우, 우리는 사용자에게 새로운 제어 상태의 보조 기술을 알리기 위해 aria-valuenow와 aria-valuetext 속성을 모두 업데이트해야 합니다.

우리는 aria-valuenow를 현재 슬라이스 카운트로 설정하는 것으로 시작할 것입니다.

다음으로, 우리는 aria-valuetext를 슬라이스 수에 대한 더 인간 친화적인 설명과 "슬라이스" 또는 "슬라이스"라는 단어로 설정할 것입니다.

좋아, 이제 모든 것이 제자리에 있으니, 퀴즈 평가 웹 앱으로 돌아가서 VoiceOver의 경험이 어떤지 봅시다.

집중하기 위해 피자 컨트롤을 탭하는 것으로 시작하겠습니다.

Siri: 네 조각, 조절 가능.

값을 조정하려면 한 손가락으로 위아래로 스와이프하세요.

타일러: 우리는 보이스오버가 슬라이더의 초기 값인 네 조각을 읽고 조정 가능하다고 말했다고 들었다.

VoiceOver의 프롬프트에 따라, 우리는 선택된 슬라이스의 수를 늘리기 위해 위로 스와이프할 수 있습니다...

Siri: 다섯 조각. 여섯 조각.

타일러: 그리고 선택된 조각의 수를 줄이려면 아래로 스와이프하세요.

Siri: 다섯 조각. 네 조각.

타일러: 이러한 변화와 함께, 우리의 사용자 지정 슬라이더 구성 요소는 이제 훨씬 더 쉽게 접근할 수 있습니다.

이제, 웹 스피치 API에서 SSML을 사용하여 모든 사용자를 위한 더 풍부한 경험을 구축하는 방법에 대해 이야기해 봅시다.

웹 스피치 API는 두 가지 기본 자바스크립트 인터페이스로 구성되어 있습니다: 오디오 입력을 위한 SpeechRecognition과 텍스트 음성 변환 오디오 출력을 위한 SpeechSynthesis.

웹 스피스는 웹 앱에 음성 지원 또는 음성 전용 인터페이스를 제공할 수 있는 기능을 제공합니다.

이것은 마우스, 키보드 또는 터치스크린과 같은 다른 제어 수단을 사용하는 데 어려움을 겪을 수 있는 운동 장애가 있는 사용자에게 도움이 될 수 있습니다.

Safari의 SpeechSynthesis의 새로운 기능은 SSML을 사용하여 텍스트를 말하는 방식을 조작할 수 있습니다.

SSML은 수많은 능력을 가지고 있다.

예를 들어, break 요소를 사용하여 선택한 시간에 음성에 일시 정지를 삽입할 수 있습니다.

당신은 사용자에게 숨을 들이쉬고 숨을 내쉬라고 요청할 수도 있습니다.

음소 요소를 사용하면 "tomayto" 대 "tomahto"와 같은 단어의 발음을 제어할 수 있습니다.

프로소디 요소를 사용하면 음성 텍스트의 피치, 속도 및 볼륨을 조작할 수 있습니다.

그리고 이것들은 SSML의 능력의 표면만 긁는다.

자세한 내용은 w3.org에서 SSML 사양을 확인하세요.

SSML에 대한 우리의 새로운 지식을 사용합시다.

퀴즈의 마지막 질문을 위해, 우리는 학생들에게 "물"이라는 문구의 올바른 스페인어 번역이 있는 라디오 버튼을 선택하도록 요청합니다.

우리는 사용자가 버튼을 눌러 텍스트 음성으로 질문과 답변을 읽을 수 있도록 하고, SSML을 사용하여 스페인어 로케일 음성으로 스페인어 문구를 읽을 수 있도록 함으로써 이 질문을 더 매력적으로 만들 수 있습니다.

이 이모티콘의 설명이 여기서 특별히 유용하지 않기 때문에, aria-hidden이 true로 설정된 스피커 이모티콘을 스팬으로 감싸도록 버튼을 만드는 것으로 시작합시다.

다음으로, 말하는 문구와 말하는 음성 로케일을 사용하는 wrapWithSSML이라는 도우미 자바스크립트 함수를 만들어 봅시다.

우리는 강조하기 위해 각 문구 전에 짧은 일시 정지를 삽입하기 위해 break 요소로 SSML 문자열을 만들기 시작할 것입니다.

프로소디 요소로, 우리는 우리의 문구를 기본값의 80%로 말하고 싶다는 것을 명시할 것이다.

그리고 마지막으로, 우리는 lang 요소를 사용하여 우리의 문구를 말하고 싶은 지역별 음성을 선택할 수 있습니다.

그리고 이제 우리는 읽기 질문 버튼에 클릭 이벤트 리스너를 추가하고 내부에 SSML 문자열을 만들 것입니다.

우리는 전체 문자열을 말하기 요소로 감싸는 것으로 시작합니다.

말하기는 합성 프로세서에게 내부의 모든 것이 SSML로 간주되어야 한다는 것을 나타내기 때문에 중요하다.

다음으로, 우리는 우리의 질문을 포함합니다: 스페인어로 "물"을 어떻게 말하나요?

우리는 wrapWithSSML 도우미 기능을 사용하여 번역되는 문구를 강조하고 미국에서 읽을 수 있도록 할 수 있습니다. 영어 로케일 음성.

우리는 또한 네 가지 잠재적인 답변 모두에 wrapWithSSML을 사용할 것이며, 강조하고 스페인어 로케일 음성으로 읽을 것을 요청할 것입니다.

마지막으로, 우리는 SSML 문자열로 새로운 SpeechSynthesisUtterance 객체를 만들고, 그것을 창 SpeechSynthesis speak method에 전달하여 읽을 수 있습니다.

그 모든 것을 제자리에 두고, 우리의 웹 앱에서의 경험이 어떤지 봅시다.

마지막 질문이 있는 페이지에서, 나는 "질문 읽기" 버튼을 누르고 들을 것이다.

Siri: 스페인어로 "물"을 어떻게 말하나요?

엘 아구아.

라 아부엘라.

라 아베자.

엘 아볼.

타일러: SSML 덕분에, 우리는 학생들을 위해 훨씬 더 매력적인 경험을 만들었습니다.

웹의 또 다른 일반적인 디자인 패턴은 모달이다.

웹 앱에서 이것을 로그인 또는 가입 양식, 확인 대화상자 등으로 사용할 수 있습니다.

접근 가능한 모달 경험을 제공하는 한 가지 방법은 aria-modal 속성이다.

Aria-modal="true"로, 사파리는 모달 외부의 접근 가능한 모든 요소를 무시하는 것으로 간주할 것이다.

최근에, 사파리는 또한 대화 요소에 대한 지원을 추가했다.

대화는 표준 초점 상호 작용, iOS의 이스케이프 키 및 스크럽 제스처와 같은 모달 닫는 제스처의 즉시 처리 등을 통해 접근성 친화적인 모달 경험을 훨씬 쉽게 제공할 수 있습니다.

이것을 실제로 보려면, 퀴즈 평가 웹 앱의 "점수 표시" 버튼을 변경하여 결과와 대화 상자를 열어 봅시다.

우선, 우리는 대화 요소를 만들어야 할 것이다.

마크업은 이렇게 보일 수 있다.

우리는 나중에 쇼 스코어 버튼으로 참조할 수 있도록 대화상자에 ID를 제공합니다.

우리는 또한 메소드 대화상자가 있는 형태로 대화상자의 내용을 래핑합니다.

그렇게 함으로써, 우리의 버튼과 같은 제출 유형 컨트롤은 대화상자를 닫게 할 것이다.

우리는 또한 모달을 열기 위해 약간의 자바스크립트가 필요할 것이다.

대화 요소에서 showModal()을 호출하는 Show Score 버튼에 클릭 이벤트 리스너를 추가해 봅시다.

그리고 이제 우리는 이것을 시도해 볼 준비가 되었습니다.

VoiceOver가 활성화된 상태에서, "점수 표시" 버튼을 눌러 초점을 맞출 것이다.

Siri: 점수를 보여줘. 버튼.

타일러: 그럼, 화면 아무데나 한 손가락으로 두 번 탭해서 버튼을 누를게.

Siri: 점수를 보여줘. 웹 대화. 닫기 버튼.

타일러: 그리고 이제 우리는 모달을 가지고 있어.

내 점수를 듣기 위해 모달의 내용을 이동하기 위해 왼쪽으로 스와이프할 수 있다.

Siri: 여섯 가지 질문이 모두 맞았어. 잘했어!

타일러: 그리고 내가 끝나면, 오른쪽으로 스와이프해서 닫기 버튼으로 돌아갈 수 있어...

Siri: 닫기 버튼.

타일러: 그리고 모달을 닫으려면 두 번 탭하세요.

Siri: 확인되지 않음.

타일러: 앞서 언급했듯이, 대화 요소는 모달 폐쇄를 위한 iOS 스크럽 제스처를 처리합니다.

증명하기 위해, 나는 더블 탭으로 모달을 다시 열 것이다...

Siri: 점수 표시, 버튼.

웹 대화. 닫기, 버튼.

타일러: 그리고 나서 화면을 가로질러 두 손가락을 오른쪽, 왼쪽, 오른쪽으로 빠르게 움직여 스크럽 제스처를 수행하세요.

Siri: 점수를 보여줘. 버튼.

타일러: 좋아, 그래서 우리는 기능적인 모달을 가지고 있지만, 우리는 여전히 더 잘할 수 있어.

우리가 모달을 열었을 때, VoiceOver가 "웹 대화, 닫기, 버튼"만 읽었다는 것을 눈치채셨나요?

이 상황에서, 보조 기술 사용자에게 더 많은 정보를 제공하기 위해 aria-label 또는 aria-labelledby 속성을 사용하는 것이 합리적일 것이다.

우리의 모달 콘텐츠는 짧기 때문에, 단순히 사용자에게 얼마나 많은 답변이 정확한지 알려주기 때문에, 그것을 우리의 라벨에 사용합시다.

먼저, 우리는 모달 콘텐츠를 ID로 스팬으로 래핑할 것이다.

그런 다음, 모달 콘텐츠 ID를 가리키는 대화상자에 aria-labelledby 속성을 추가할 수 있습니다.

또한 초기 모달 초점 요소를 자동 초점 속성이 있는 닫기 버튼으로 명시적으로 설정합시다.

이것은 이미 이 간단한 모달의 기본 동작이었지만, 우리의 모달이 더 많은 콘텐츠를 가지고 있거나 많은 컨트롤과 함께 더 복잡했다면 그렇지 않았을 수도 있다.

예를 들어, 콘텐츠가 많은 모달에서, 최상위 제목에 자동 초점을 배치하는 것이 더 합리적일 수 있다.

모달 저자로서, 당신은 사용자에게 훌륭한 경험을 제공할 것이 무엇인지 가장 잘 알게 될 것입니다.

우리의 새로운 속성과 함께, VoiceOver에서의 경험이 어떤지 다시 한번 봅시다.

먼저 점수 표시 버튼을 한 번 탭해서 초점을 맞출게...

Siri: 점수 표시, 버튼.

타일러: 그리고 두 번 눌러서 누르세요.

Siri: 여섯 가지 질문이 모두 맞았어. 잘했어! 웹 대화, 닫기 버튼.

타일러: 그건 훨씬 더 나은 경험이야.

VoiceOver 사용자는 aria-labelledby 덕분에 즉시 점수를 듣고, 이미 닫기 버튼에 집중하고 있으므로 두 번 탭하여 모달을 떠날 수 있습니다.

그리고 그것으로, 오늘의 세션을 마무리할 시간이다.

풍부하고 접근 가능한 웹 앱을 구축하여 모든 사용자에게 훌륭한 경험을 제공할 수 있는 몇 가지 기술을 배웠기를 바랍니다.

최신 사파리에서 이러한 기능을 사용해 보고, 발견한 버그를 bugs.webkit.org의 WebKit 버그 추적기에 제출하십시오.

현대 웹 접근성에 대한 오늘의 회오리바람 투어에 참여해 주셔서 감사합니다.

멋진 WWDC 되세요!

.