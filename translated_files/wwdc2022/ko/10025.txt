10025

론 산토스: 안녕, 잘 지내길 바라. 저는 입력 엔지니어인 론 산토스입니다.

오늘 저는 비디오 피드에서 기계가 읽을 수 있는 코드와 텍스트를 캡처하거나, 우리가 부르는 것처럼 데이터 스캔에 대해 이야기하기 위해 왔습니다.

데이터 스캔이 정확히 무슨 뜻인가요?

그것은 단순히 데이터를 읽기 위해 카메라와 같은 센서를 사용하는 방법이다.

일반적으로 그 데이터는 텍스트 형태로 나온다.

예를 들어, 전화번호, 날짜 및 가격과 같은 흥미로운 정보가 담긴 영수증.

또는 데이터는 유비쿼터스 QR 코드와 같이 기계가 읽을 수 있는 코드로 올 수도 있다.

카메라 앱이나 iOS 15에 도입된 라이브 텍스트 기능을 사용하여 데이터 스캐너를 사용한 적이 있을 것입니다.

그리고 나는 당신이 일상 생활에서 그들만의 맞춤 스캔 경험으로 앱을 사용했을 것이라고 장담합니다.

하지만 자신만의 데이터 스캐너를 만들어야 한다면 어떨까요?

넌 그걸 어떻게 할 거야?

iOS SDK에는 필요에 따라 하나 이상의 솔루션이 있습니다.

한 가지 옵션은 AVFoundation 프레임워크를 사용하여 카메라 그래프를 설정하고, 입력과 출력을 세션에 연결하고, 기계가 읽을 수 있는 코드와 같은 AVMetadataObjects를 생성하도록 구성할 수 있다는 것입니다.

텍스트를 캡처하고 싶다면, 또 다른 옵션은 AVFoundation과 Vision 프레임워크를 함께 결합하는 것입니다.

이 다이어그램에서는 메타데이터 출력 대신 비디오 데이터 출력을 만듭니다.

비디오 데이터 출력은 텍스트 및 바코드 인식 요청과 함께 사용하기 위해 비전 프레임워크에 공급될 수 있는 샘플 버퍼를 전달하여 비전 관찰 객체를 생성합니다.

데이터 스캔에 Vision을 사용하는 방법에 대한 자세한 내용은 WWDC21의 "Vision을 사용하여 문서 데이터 추출"을 확인하세요.

좋아, 그건 데이터 스캔을 위해 AVFoundation과 Vision을 사용하는 거야.

iOS 16에는 당신을 위해 모든 것을 캡슐화하는 새로운 옵션이 있습니다.

VisionKit 프레임워크에서 DataScannerViewController를 소개합니다.

그것은 특히 데이터 스캔을 목적으로 AVFoundation과 Vision의 기능을 결합합니다.

DataScannerViewController 사용자는 라이브 카메라 미리보기, 유용한 안내 라벨, 항목 강조 표시, 선택에도 사용되는 탭 투 포커스, 그리고 마지막으로 더 자세히 보기 위해 핀치 투 줌과 같은 기능을 사용할 수 있습니다.

그리고 당신과 같은 개발자를 위한 기능에 대해 이야기해 봅시다.

DataScannerViewController는 원하는 대로 제시할 수 있는 UIViewController 하위 클래스입니다.

인식된 항목의 좌표는 항상 보기 좌표에 있어 이미지 공간에서 비전 좌표로 변환하여 좌표를 볼 수 있습니다.

또한 뷰 좌표에 있는 관심 영역을 지정하여 뷰의 활성 부분을 제한할 수 있습니다.

텍스트 인식을 위해, 찾은 텍스트의 유형을 제한하기 위해 콘텐츠 유형을 지정할 수 있습니다.

그리고 기계가 읽을 수 있는 코드의 경우, 어떤 기호를 찾아야 할지 정확히 지정할 수 있습니다.

알겠습니다; 저는 당신의 앱을 사용하며, 데이터 스캔이 그 기능의 작은 부분에 불과하다는 것을 이해합니다.

하지만 그것은 많은 코드가 필요할 수 있다.

DataScannerViewController를 사용하면, 우리의 목표는 일반적인 작업을 수행하는 것이므로, 다른 곳에 시간을 집중할 수 있습니다.

다음으로, 앱에 추가하는 과정을 안내해 드리겠습니다.

개인 정보 보호 사용 설명부터 시작합시다.

앱이 비디오를 캡처하려고 할 때, iOS는 사용자에게 카메라에 접근할 수 있는 명시적인 권한을 부여하도록 요청합니다.

당신은 당신의 필요를 정당화하는 설명적인 메시지를 제공하고 싶을 것입니다.

그렇게 하려면, 앱의 Info.plist 파일에 "개인 정보 보호 - 카메라 사용 설명"을 추가하십시오.

기억하세요, 가능한 한 자세하게 설명하여 사용자가 그들이 무엇에 동의하는지 알 수 있도록 하세요.

이제 코드로.

데이터 스캐너를 제시하고 싶은 곳이라면, VisionKit을 가져오는 것부터 시작하세요.

다음으로, 데이터 스캔이 모든 장치에서 지원되지 않기 때문에 isSupported 클래스 속성을 사용하여 기능을 노출하는 버튼이나 메뉴를 숨기면 사용자가 사용할 수 없는 것이 표시되지 않습니다.

궁금하다면, Apple Neural Engine이 있는 2018년 이후의 iPhone 및 iPad 기기는 데이터 스캔을 지원합니다.

당신은 또한 이용 가능 여부를 확인하고 싶을 것입니다.

개인 정보 보호 사용 설명을 기억하시나요?

사용자가 카메라 액세스를 위해 앱을 승인하고 장치가 스크린 타임의 콘텐츠 및 개인 정보 보호 제한에서 여기에 설정된 카메라 액세스 제한과 같은 제한이 없는 경우 스캔을 사용할 수 있습니다.

이제 인스턴스를 구성할 준비가 되었습니다.

그것은 먼저 당신이 관심 있는 데이터 유형을 지정함으로써 이루어집니다.

예를 들어, QR 코드와 텍스트를 모두 스캔할 수 있습니다.

텍스트 인식기가 언어 수정과 같은 다양한 처리 측면에 대한 힌트로 사용할 언어 목록을 선택적으로 전달할 수 있습니다.

어떤 언어를 기대해야 할지 알고 있다면, 그것들을 나열하세요.

두 언어가 비슷하게 보이는 스크립트를 가지고 있을 때 특히 유용하다.

언어를 제공하지 않으면, 사용자가 선호하는 언어가 기본적으로 사용됩니다.

특정 텍스트 콘텐츠 유형을 요청할 수도 있습니다.

이 예시에서, 나는 내 스캐너가 URL을 찾길 원한다.

이제 인식할 데이터 유형을 명시했으니, DataScanner 인스턴스를 만들 수 있습니다.

이전 예에서, 나는 바코드 기호, 인식 언어 및 텍스트 콘텐츠 유형을 지정했다.

잠시 시간을 내어 그것들 각각에 대한 다른 옵션들을 설명하겠습니다.

바코드 기호의 경우, 우리는 비전의 바코드 검출기와 동일한 모든 기호를 지원합니다.

언어 측면에서, LiveText 기능의 일부로, DataScannerViewController는 동일한 정확한 언어를 지원합니다.

그리고 iOS 16에서, 저는 우리가 일본어와 한국어에 대한 지원을 추가하고 있다고 말하게 되어 기쁩니다.

물론, 이것은 미래에 다시 바뀔 수 있다.

따라서 supportedTextRecognitionLanguages 클래스 속성을 사용하여 최신 목록을 검색하십시오.

마지막으로, 특정 의미론적 의미를 가진 텍스트를 스캔할 때, DataScannerViewController는 이 일곱 가지 유형을 찾을 수 있다.

우리는 이제 사용자에게 데이터 스캐너를 제공할 준비가 되었습니다.

다른 뷰 컨트롤러처럼 표시하거나, 전체 화면으로 진행하거나, 시트를 사용하거나, 다른 뷰 계층 구조에 모두 추가하세요.

그건 모두 너에게 달렸어.

그 후, 프레젠테이션이 완료되면, startScanning()을 호출하여 데이터 검색을 시작하세요.

그래서 이제 저는 한 걸음 물러서서 데이터 스캐너의 초기화 매개 변수를 검토하는 데 시간을 보내고 싶습니다.

나는 여기서 인식된 데이터타입을 사용했다.

하지만 당신의 경험을 맞춤화하는 데 도움을 줄 수 있는 다른 사람들이 있습니다.

각각 하나씩 살펴보자.

recognizedDataTypes를 사용하면 인식할 데이터의 종류를 지정할 수 있습니다.

텍스트, 기계가 읽을 수 있는 코드, 그리고 각각의 유형.

품질 수준은 균형 잡히거나, 빠르거나, 정확할 수 있다.

Fast는 표지판의 텍스트와 같이 크고 쉽게 읽을 수 있는 항목을 기대하는 시나리오에서 속도를 위해 해결책을 희생할 것입니다.

정확한 것은 마이크로 QR 코드나 작은 일련 번호와 같은 작은 항목에서도 최고의 정확도를 제공할 것입니다.

나는 대부분의 경우에 잘 작동해야 하는 균형 잡힌 것으로 시작하는 것을 추천한다.

recognizesMultipleItems는 한 번에 여러 개의 바코드를 스캔하려는 경우와 같이 프레임에서 하나 이상의 항목을 찾을 수 있는 옵션을 제공합니다.

거짓일 때, 가장 중앙에 있는 항목은 사용자가 다른 곳을 탭할 때까지 기본적으로 인식됩니다.

하이라이트를 그릴 때 높은 프레임 속도 추적을 활성화하세요.

카메라가 움직이거나 장면이 바뀔 때 하이라이트가 가능한 한 가깝게 항목을 따라갈 수 있게 해준다.

핀치 투 줌을 활성화하거나 비활성화하세요.

우리는 또한 당신이 줌 레벨을 직접 수정하는 데 사용할 수 있는 방법이 있습니다.

지침을 활성화하면, 라벨이 화면 상단에 표시되어 사용자를 안내하는 데 도움이 됩니다.

그리고 마지막으로, 필요한 경우 시스템 하이라이트를 활성화하거나, 사용자 지정 하이라이트를 그리기 위해 비활성화할 수 있습니다.

이제 데이터 스캐너를 제시하는 방법을 알았으니, 인식된 항목을 섭취하는 방법과 사용자 지정 하이라이트를 그리는 방법에 대해 이야기해 봅시다.

먼저, 데이터 스캐너에 대리인을 제공하세요.

이제 대리인이 있으므로, 사용자가 항목을 탭할 때 호출되는 dataScanner didTapOn 메소드를 구현할 수 있습니다.

그것으로, 당신은 이 새로운 유형의 RecognizeItem의 인스턴스를 받게 될 것입니다.

RecognizedItem은 텍스트나 바코드를 관련 값으로 유지하는 열거형이다.

텍스트의 경우, 전사 속성은 인식된 문자열을 보유합니다.

바코드의 경우, 페이로드에 문자열이 포함된 경우, payloadStringValue로 검색할 수 있습니다.

RecognizedItem에 대해 알아야 할 다른 두 가지 사항: 첫째, 인식된 각 항목에는 평생 동안 항목을 추적하는 데 사용할 수 있는 고유한 식별자가 있습니다.

그 일생은 아이템이 처음 보일 때 시작되고 더 이상 보이지 않을 때 끝난다.

그리고 두 번째로, 각 RecognizedItem에는 경계 속성이 있다.

경계는 직선이 아니지만, 각 코너마다 하나씩 네 개의 포인트로 구성되어 있다.

다음으로, 장면 변경에서 인식된 항목이 호출될 때 호출되는 세 가지 관련 위임 방법에 대해 이야기해 봅시다.

첫 번째는 장면의 항목이 새로 인식될 때 호출되는 didAdd입니다.

자신만의 맞춤 하이라이트를 만들고 싶다면, 각 새 항목에 대해 하나씩 만들 수 있습니다.

관련 항목의 ID를 사용하여 하이라이트를 추적할 수 있습니다.

그리고 새 뷰를 뷰 계층에 추가할 때, DataScanner의 overlayContainerView에 추가하여 카메라 미리보기 위에 나타나지만 다른 추가 크롬 아래에 나타납니다.

다음 위임 방법은 항목이 움직이거나 카메라가 움직일 때 호출되는 didUpdate입니다.

인식된 텍스트 변경을 위해 전사할 때도 호출될 수 있다.

그들은 스캐너가 텍스트를 더 오래 볼수록 전사가 더 정확하기 때문에 바뀝니다.

업데이트된 항목의 ID를 사용하여 방금 만든 사전에서 하이라이트를 검색한 다음, 새로 업데이트된 범위로 보기를 애니메이션화하십시오.

그리고 마지막으로, 항목이 더 이상 장면에서 보이지 않을 때 호출되는 didRemove 대리 메서드.

이 방법에서는 제거된 항목과 관련된 하이라이트 뷰를 잊어버릴 수 있으며, 뷰 계층 구조에서 제거할 수 있습니다.

요약하자면, 항목 위에 자신만의 하이라이트를 그리면, 그 세 가지 위임 방법은 장면에 하이라이트를 애니메이션으로 만들고, 움직임에 애니메이션을 만들고, 애니메이션화하는 데 매우 중요합니다.

그리고 이전의 세 가지 위임 방법 각각에 대해, 현재 인식된 모든 항목의 배열도 제공됩니다.

항목이 자연스러운 읽기 순서로 배치되기 때문에 텍스트 인식에 유용할 수 있습니다. 즉, 사용자는 인덱스 1의 항목보다 먼저 인덱스 0에서 항목을 읽을 수 있습니다.

그것은 DataScannerViewController를 사용하는 방법에 대한 개요입니다.

마무리하기 전에, 나는 사진을 찍는 것과 같은 몇 가지 다른 기능을 빠르게 언급하고 싶었다.

고품질 UIImage를 비동기적으로 반환하는 capturePhoto 메소드를 호출할 수 있습니다.

그리고 사용자 지정 하이라이트를 만들지 않는다면, 이 세 가지 위임 방법이 필요하지 않을 수도 있습니다.

대신, 당신은 recognizedItem 속성을 사용할 수 있습니다.

장면이 변경됨에 따라 지속적으로 업데이트될 AsyncStream입니다.

놀아줘서 고마워.

iOS SDK는 AVFoundation 및 Vision 프레임워크로 컴퓨터 비전 워크플로우를 만들 수 있는 옵션을 제공합니다.

하지만 픽 앤 팩 앱, 백 오브 더 웨어하우스 앱 또는 POS 앱과 같은 라이브 비디오 피드로 텍스트나 기계 판독 가능한 코드를 스캔하는 앱을 만들고 있을 수도 있습니다.

그렇다면, VisionKit의 DataScannerViewController를 살펴보세요.

오늘 살펴봤을 때, 앱의 스타일과 요구에 맞는 사용자 지정 경험을 제공하는 데 사용할 수 있는 많은 초기화 매개 변수와 위임 방법이 있습니다.

그리고 마지막으로, 저는 정적 이미지에 대한 VisionKit의 라이브 텍스트 기능에 대해 배울 수 있는 "앱에 라이브 텍스트 상호 작용 추가" 세션에 외치고 싶었습니다.

다음 시간까지, 평화.

.