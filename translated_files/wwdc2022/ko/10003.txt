10003

♪ 부드러운 기악 힙합 음악 ♪

♪

WWDC22의 "Meet WeatherKit"에 오신 것을 환영합니다.

제 이름은 노발이고, 저는 날씨 팀의 엔지니어입니다.

우리는 매일 날씨 데이터에 의존하며, 이 정보를 얻는 곳이 중요합니다.

문 밖으로 나가기 전에 우산을 가져갈 수 있도록 Apple Watch에서 날씨를 확인하는 것부터, 비와 서리를 예측하는 것이 농부들이 작물 순환을 계획하는 데 도움이 될 수 있는 지속 가능한 농업, 겨울 폭풍 여행에 대한 안전과 준비를 유지하는 것까지 - 날씨는 모두에게 영향을 미칩니다.

정확한 날씨 데이터는 변화하는 기후의 영향을 받는 오늘날의 세계에서 훨씬 더 중요해졌다.

그리고 정확한 예측에 접근하는 것은 그 어느 때보다 중요하며, 이것이 우리가 WeatherKit을 만든 이유입니다.

WeatherKit은 세계적 수준의 글로벌 일기 예보인 완전히 새로운 Apple Weather Service에 의해 구동됩니다.

고해상도 기상 모델과 기계 학습 및 예측 알고리즘을 사용하여 전 세계의 하이퍼로컬 일기 예보를 제공합니다.

Apple Weather Service를 통해, 우리는 많은 데이터에 접근할 수 있으며, 이 모든 것은 WeatherKit을 통해 이용할 수 있습니다.

정확한 날씨 데이터는 위치 정보를 필요로 한다.

그리고 그 데이터를 비공개로 유지하는 것은 공동의 책임이다.

개인 정보 보호에 대한 우리의 약속에 따라, WeatherKit은 사용자 정보를 손상시키지 않으면서 하이퍼로컬 예측을 제공하도록 설계되었습니다.

위치는 일기 예보를 제공하기 위해서만 사용되며 개인 식별 정보와 관련이 없으며 절대 공유되거나 판매되지 않습니다.

WeatherKit을 사용하면 사용자 개인 정보를 쉽게 보호할 수 있습니다.

오늘 저는 당신이 우리의 새로운 API를 최대한 활용할 수 있도록 WeatherKit에 대해 더 자세히 설명할 것입니다.

먼저, Apple Weather Service의 지원을 받아 WeatherKit을 통해 제공하는 사용 가능한 데이터 세트를 다룰 것입니다.

다음으로, 모든 플랫폼에서 날씨 데이터를 얻을 수 있도록 설계된 WeatherKit 프레임워크와 REST API를 사용하여 날씨 정보를 요청하는 방법을 보여드리겠습니다.

그리고 마지막으로, 저는 몇 가지 추가 구현 요구 사항과 모범 사례를 다룰 것입니다.

사용 가능한 날씨 데이터 세트에 대한 개요부터 시작하겠습니다.

제가 언급했듯이, 당신은 WeatherKit에서 많은 데이터에 접근할 수 있습니다.

그럼 각 데이터 세트에 대해 이야기해 봅시다.

현재 날씨 데이터 세트는 요청된 위치의 "현재" 조건을 설명한다.

그것은 단일 시점을 나타내며 UV 지수, 온도 및 바람과 같은 조건을 포함한다.

분 예보에는 가능한 경우 다음 한 시간 동안의 분당 강수량이 포함되어 있습니다.

이 데이터 세트는 문 밖으로 나갈 때 우산을 가져갈지 여부를 결정하는 데 유용합니다.

시간별 예측은 현재 시간에 시작하는 예측 모음이며 최대 240시간 동안 데이터를 제공합니다.

시간별 예보의 각 시간은 습도, 가시성, 압력 및 이슬점과 같은 조건을 포함한다.

일일 예측에는 10일의 예측 모음이 포함되어 있다.

일일 예보의 매일은 고온 및 저온, 일출 및 일몰과 같은 하루 종일에 대한 정보를 제공합니다.

기상 경보에는 요청된 위치에 대해 발행된 악천후 경보가 포함되어 있습니다.

이 데이터 세트에는 사용자를 안전하고, 정보를 제공하고, 준비할 수 있는 중요한 정보가 포함되어 있습니다.

그리고 마지막으로, 역사적인 날씨는 과거의 저장된 일기 예보를 제공하므로, 날씨 데이터의 추세를 볼 수 있습니다.

시간별 및 일일 요청에 시작 및 종료 날짜를 지정하여 과거 데이터에 액세스할 수 있습니다.

이것은 당신에게 많은 데이터에 접근할 수 있게 해준다.

우리는 당신이 역사적인 날씨를 사용할 수 있는 중요하고 영향력 있는 방법이 많이 있다고 생각합니다.

이제 사용 가능한 모든 풍부한 날씨 데이터를 보았으니, WeatherKit API로 이 날씨 데이터를 요청하는 방법을 안내해 드리겠습니다.

Apple Weather 데이터는 네이티브 프레임워크와 REST API 세트를 통해 사용할 수 있습니다.

먼저, 스위프트 프레임워크로 날씨 데이터에 접근하는 것이 얼마나 쉬운지 보여드리겠습니다.

몇 줄의 코드만 있으면 됩니다.

그리고 스위프트 동시성을 사용하면 날씨를 요청하는 것이 간단합니다.

먼저, WeatherKit과 CoreLocation을 가져올 것입니다.

그런 다음 Weather Service의 진입점으로 weatherService 객체를 만들 것입니다.

관심 위치에 대한 좌표로 CLLocation을 만들 것입니다.

여기, 나는 내 고향인 뉴욕 시러큐스를 이용하고 있어.

그런 다음 weatherService 인스턴스에서 weather(for:)를 호출하고 위에서 생성된 위치를 통과할 것입니다.

통화가 완료되면, 이 예에서 현재 온도와 UV 지수와 같이 앱에 필요한 관련 데이터에 액세스할 수 있습니다.

이제 Swift로 날씨 데이터를 요청하는 것이 얼마나 쉬운지 보여 주었으니, SwiftUI에서 만들고 있는 여행 앱을 사용하고 있는 또 다른 예를 살펴보겠습니다.

이 세션과 관련된 링크에서 완성된 프로젝트를 가져올 수 있습니다.

다시 여행하기를 정말 기대하고 있기 때문에, 다음 여행을 계획하기 위해 비행 플래너 앱을 만들기로 결정했습니다.

나는 이미 비행 일정에 대한 논리를 만들었지만, 여행의 각 항공편을 탭할 때, 각 목적지의 상태, 강수량, 바람 및 온도를 포함하는 열을 보여주고 싶습니다.

첫 번째 단계는 WeatherKit을 활성화하는 것이다.

개발자 포털에서 앱 ID를 등록한 다음, 기능 및 앱 서비스 t abs를 선택하여 WeatherKit을 활성화하십시오.

그런 다음 Xcode에서 WeatherKit 기능을 프로젝트에 추가하세요.

그 준비와 함께, 이 장소들 각각에 대한 날씨 데이터를 어떻게 얻을 수 있는지 살펴보겠습니다.

여기 목적지 공항의 위도와 경도를 포함하는 공항 구조가 이미 설정되어 있습니다.

공유 기상 서비스에서 날씨(:)에 전화하여 시간별 예보를 받은 다음 공항 위치를 통과할 것입니다.

저는 단지 데이터의 하위 집합을 원하기 때문에, 요청에 시간별 예측을 포함하도록 지정했습니다.

이제, 나는 내 앱을 만들고 실행할 것이다.

이제 각 공항의 조건을 표시하도록 업데이트된 사용자 지정 보기를 볼 수 있습니다.

이 앱을 빌드하는 동안 다음으로 해야 할 일은 내 앱의 데이터 소스에 대한 속성을 표시하는 것이다.

먼저, attribution.legalPageURL 속성에서 속성 URL을 얻을 것입니다.

이것은 날씨 데이터 소스에 대한 저작권 정보가 포함된 법적 귀속 페이지에 대한 링크입니다.

나는 또한 결합된 애플 날씨 마크의 URL을 받아야 할 것이다.

밝은 변형과 어두운 변형 모두에서 사용할 수 있으므로, SwiftUI 보기가 현재 밝은 모양 또는 어두운 모양으로 표시되는지 알아보기 위해 colorScheme 환경 값을 확인하겠습니다.

마침내, 나는 다시 만들고 달릴 것이다.

Apple 날씨 표시와 속성 링크가 SFSafariViewController에서 열립니다.

그것이 비행 플래너 앱의 날씨를 얻는 데 필요한 전부이며, WeatherKit API를 사용하여 앱에 날씨 데이터를 추가할 수 있는 많은 방법이 있습니다.

하지만 그것은 오직 기본 틀일 뿐이었다.

REST API는 스위프트 프레임워크와 동일한 풍부한 날씨 데이터를 제공하며 모든 플랫폼에서 사용할 수 있습니다.

이 예에서, 저는 weatherkit.apple.com 엔드포인트에서 날씨 알림을 요청하는 방법을 보여주고 있습니다.

먼저, 인증 토큰을 요청합니다.

조금 있다가 더 논의할게.

그런 다음, 날씨 객체를 얻으려면, 먼저 주어진 위치에 대해 원하는 날씨 데이터 세트를 나타내는 URL을 만듭니다.

현지화된 응답을 위한 적절한 언어를 설정하세요.

그런 다음, 관심 위치의 위도와 경도를 제공하십시오.

원하는 데이터 세트를 표시하세요.

이 매개 변수는 복수형이므로 각각을 쉼표로 구분하여 한 번에 여러 개를 요청할 수 있습니다.

그리고 마지막으로, 요청된 위치의 국가 코드.

하지만, 국가 코드는 날씨 경보 데이터 세트를 요청하는 경우에만 필요합니다.

다음으로, 위의 URL과 인증 토큰을 사용하여 날씨 데이터를 가져와 결과를 JSON으로 변환합니다.

그것으로, 당신은 날씨 경보와 그 세부 사항에 접근할 수 있습니다.

다시 말하지만, 이번에는 REST를 통해서만 날씨 데이터에 접근하는 것이 얼마나 쉬운지에 대한 또 다른 예입니다.

필요한 설정에 대해 더 자세히 알아보려면, auth를 다시 살펴봅시다.

WeatherKit REST API의 경우, 인증을 처리하는 몇 가지 추가 단계가 있습니다.

개발자 포털에서 WeatherKit에 대해 활성화된 인증 키와 관련 서비스 ID를 만들어 WeatherKit 요청에 대한 액세스를 활성화할 수 있습니다.

개인 키는 개발자 포털의 키 섹션에서 만들 수 있습니다.

WeatherKit은 각 요청에 대한 승인을 검증하기 위해 토큰이 필요합니다.

따라서 서버에 개인 키를 사용하여 서명된 JSON 웹 토큰을 만들기 위한 토큰 서비스를 배포할 것입니다.

JSON 웹 토큰 인증에 익숙한 사람들을 위해, 이것은 상당히 표준적인 인증 흐름이지만, 처음 작업할 경우를 대비하여 몇 가지 세부 사항을 공유하겠습니다.

서명된 토큰을 생성하려면 개발자 문서에 설명된 필드와 값을 포함하는 헤더를 만들어야 합니다.

그런 다음 발행자, 주제 및 만료 시간과 같은 항목을 포함하여 WeatherKit REST API 및 애플리케이션과 관련된 정보를 포함하는 페이로드를 만드세요.

그리고 마지막으로, WeatherKit REST API에 대한 후속 호출과 함께 사용할 토큰에 서명할 것입니다.

내 날씨 알림 예제로 돌아가서, 서명 서비스에서 토큰을 요청하고, 날씨 데이터에 대한 HTTP 요청의 인증 헤더에 토큰을 추가할 수 있습니다.

그래서 그것이 WeatherKit REST API입니다.

Apple Weather Service에서 날씨 데이터에 접근할 수 있는 두 가지 좋은 방법 중 하나입니다.

마지막으로, App Store 또는 REST API를 사용하여 모든 플랫폼에서 실행하기 전에 게시하기 위한 몇 가지 추가 요구 사항을 다루겠습니다.

이러한 각 요구 사항은 기본 Swift 또는 REST API를 사용하는지 여부에 관계없이 적용됩니다.

첫 번째 요구 사항은 귀속이다.

제 데모에서 보셨듯이, 기본 또는 웹 앱에 표시해야 하는 어트리뷰션 API에서 링크를 얻을 수 있습니다.

두 번째 요구 사항은 속성 로고이다.

WeatherKit API는 앱에 표시해야 하는 이미지 자산을 제공함으로써 이것을 쉽고 편리하게 만듭니다.

그리고 마지막으로, 날씨 알림을 표시하려면, 응답에 제공된 이벤트 페이지에 링크해야 합니다.

그래서 App Store나 웹에 게시할 앱을 준비하는 것이 얼마나 쉬운지입니다.

그래서 그것이 WeatherKit입니다 -- 하이퍼로컬 예측은 Swift 프레임워크와 REST API를 통해 액세스할 수 있는 Apple Weather Service에 전원을 공급했습니다.

둘 다 앱, 모든 플랫폼 또는 장치에서 날씨 데이터를 사용할 수 있는 가능성의 세계를 열어줍니다.

우리는 당신이 이 세션을 즐겼기를 바랍니다.

이 세션과 관련된 링크를 확인하는 것 외에도, 문서를 읽고 프로젝트를 다운로드하세요.

그리고 물론, 우리는 당신의 피드백을 받고 싶습니다.

우리는 당신이 WeatherKit을 사용하는 모든 창의적이고 영향력 있는 방법을 빨리 보고 싶습니다.

고마워 그리고 멋진 WWDC 보내!

♪