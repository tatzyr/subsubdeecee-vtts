10023

♪ 부드러운 기악 힙합 음악 ♪

♪

안녕! 저는 저스틴이고, 사진 팀의 엔지니어입니다.

오늘, 저는 우리가 시스템 사진 선택기에 대해 개선한 몇 가지에 대해 이야기하고 싶습니다.

시스템 사진 선택기는 대부분의 앱이 iOS에서 사진과 비디오에 액세스할 수 있는 가장 좋은 방법입니다.

피커의 프로세스가 부족하므로, 앱을 사용하기 위해 라이브러리 액세스를 요청할 필요가 없습니다.

그것은 직관적인 UI와 사용하기 쉬운 API를 가지고 있다.

PHPicker API에 익숙하지 않다면, 우리가 깊이 있게 이야기한 지난 해의 WWDC 세션을 볼 수 있습니다.

오늘 세션에서, 저는 우리가 피커에 추가한 새로운 기능에 대한 개요로 시작하겠습니다.

그런 다음, 나는 피커가 현재 지원하는 추가 플랫폼과 프레임워크에 대해 이야기할 것이다.

좋아, 뛰어들자.

피커는 도입 이후 이미지, 비디오 및 라이브 사진 간의 필터링을 지원합니다.

그러나, 우리는 당신의 앱 중 일부에 다른 요구 사항이 있을 수 있다는 것을 알고 있습니다.

예를 들어, 스크린샷 스티치 앱은 선택기에서 스크린샷만 표시하려고 합니다.

이제 우리가 올해 추가한 새로운 스크린샷 필터로 가능합니다.

스크린샷 외에도, 우리는 화면 녹화와 슬로 모션 비디오와 같은 다른 자산 유형을 추가했습니다.

PHAsset.PlaybackStyle을 사용하여 새 필터를 만들 수 있는 방법도 있습니다.

시네마틱 비디오, 심도 효과 사진 및 버스트를 제외하고, 모든 새로운 필터는 백포트됩니다.

앱이 iOS 15를 대상으로 하는 경우, iOS 16 SDK로 컴파일하는 한 여전히 사용할 수 있습니다.

복합 필터의 경우, 기존 "any" 외에도, 이제 "all"과 "not"도 사용합니다.

그들은 또한 iOS 15로 백포트된다.

몇 가지 코드 예시를 살펴봅시다.

비디오와 라이브 사진을 보여주려면, "any"와 결합할 수 있습니다.

아니면 스크린샷만 보여주고 싶을 수도 있습니다.

스크린샷 없이 모든 이미지를 표시하려면, "모두"와 "안함"을 사용하여 이미지와 스크린샷 필터를 결합할 수 있습니다.

그리고 마지막 예로, iOS 16을 대상으로 하는 경우 .cinematicVideos 필터를 사용할 수 있습니다.

다음으로, 절반 높이 피커와 관련된 개선 사항에 대해 이야기해 봅시다.

iOS 15에서 UIKit에는 선택기를 절반 높이 모드로 표시하는 데 사용할 수 있는 새로운 UISheetPresentationController API가 있습니다.

그것은 이미 많은 경우에 잘 작동한다.

하지만 여러분 중 일부는 선택한 자산을 조정하고 이러한 변경 사항을 선택기에 다시 반영하기 위해 사용자 지정 UI를 구현하고 싶을 수도 있습니다.

iOS 16에서는 자산 식별자를 사용하여 자산을 선택 해제할 수 있습니다.

여기에 표시된 바와 같이, 두 번째 사진은 선택 해제 자산이 호출된 후 더 이상 선택기에서 선택되지 않습니다.

자산을 재정렬하기 위해 moveAsset 메소드를 호출할 수도 있습니다.

이제 우리는 모든 새로운 피커 기능에 익숙합니다. 플랫폼 지원에 대해 이야기해 봅시다.

현재, 시스템 사진 선택기는 iOS 및 iPadOS 앱에서만 사용할 수 있습니다.

올해, 우리는 사진 선택기를 두 개의 추가 플랫폼으로 가져올 것입니다: macOS와 watchOS.

iPadOS 피커는 또한 iPad만을 위한 새로운 디자인으로 업데이트되었습니다.

먼저 새로운 iPad UI를 살펴봅시다.

피커는 이제 더 큰 iPad 디스플레이를 활용하기 위해 사이드바를 보여줍니다.

사이드바는 다른 컬렉션 간에 더 빠른 탐색을 가능하게 한다.

하지만 분할 화면 모드와 같이 공간이 충분하지 않다면, 우리는 기존의 소형 피커 UI로 돌아갈 것이다.

다음은, macOS입니다.

macOS 선택기에는 Mac 스타일의 컨트롤이 있는 사이드바도 있습니다.

그리고 iOS 선택기와 마찬가지로, 다중 선택, 그리드의 유동적인 확대/축소를 지원하며, 사람, 장소 등과 같은 것을 검색할 수 있는 강력한 검색 기능이 있습니다.

새로운 피커 UI는 NSOpenPanel에서도 사용할 수 있습니다.

이를 사용하여 시스템 사진 라이브러리에서 자산을 선택할 수 있으며, 처음으로 iCloud 사진에 저장된 자산을 포함할 수 있습니다.

당신의 앱은 입양 작업을 할 필요 없이 새로운 UI를 무료로 받을 수 있습니다.

드래그 앤 드롭은 NSOpenPanel 선택기에서 지원됩니다.

iOS, iPadOS 및 macOS의 표준 선택기에서도 지원됩니다.

앱이 몇 개의 이미지나 비디오만 선택해야 하는 경우, NSOpenPanel API가 필요한 전부일 수 있습니다.

하지만 사진 라이브러리에서 선택한 파일은 언제든지 시스템에 의해 삭제될 수 있다는 것을 명심하세요.

장기적으로 가용성을 보장해야 하는 경우 앱에서 관리하는 위치에 복사해야 합니다.

미디어 중심 macOS 앱의 경우, 최고의 사용자 경험을 위해 새로운 사진 선택기를 기본으로 하는 것이 좋습니다.

그러나, 당신의 앱은 여전히 NSOpenPanel API를 사용하여 파일 시스템에서 자산을 선택할 수 있는 다른 방법을 제공해야 합니다.

때때로 당신의 고객들은 여전히 사진 라이브러리 외부의 자산을 선택하고 싶어할 수도 있습니다.

마지막으로, watchOS에 대해 이야기해 봅시다.

처음으로, 새로운 API를 사용하여 시계에 저장된 이미지에 접근할 수 있습니다.

watchOS 피커는 또한 iOS 및 macOS 피커와 같은 프로세스가 부족하므로 사용하기 위해 라이브러리 액세스를 요청할 필요가 없습니다.

그것은 iOS 선택기와 유사한 UI를 가지고 있지만 더 작은 화면에 최적화되어 있다.

그리드나 컬렉션에서 사진을 찾아볼 수 있습니다.

선택 순서를 표시하고 선택 제한을 지정하도록 피커를 구성할 수 있습니다.

그러나, iOS와 macOS와 달리, watchOS 선택기에는 이미지만 표시됩니다.

장치에 500개 이상의 이미지가 있는 경우, 가장 최근의 500개만 표시됩니다.

"PHPickerViewController는 UIKit을 기반으로 합니다.

macOS 또는 watchOS 앱에서 어떻게 사용할 수 있나요?"

짐작하셨겠지만, 새로운 피커 API는 이제 AppKit과 SwiftUI에서 사용할 수 있습니다.

먼저 AppKit API를 살펴봅시다.

사실, 그것은 UIKit API와 매우 유사하다.

동일한 PHPickerConfiguration 유형과 속성에 액세스할 수 있습니다.

작은 차이가 있습니다: PHPickerViewController는 AppKit 앱의 NSViewController 하위 클래스입니다.

AppKit 기반 PHPicker의 도입으로, 레거시 미디어 라이브러리 브라우저에서 벗어날 때입니다.

PHPicker는 훨씬 더 강력하다.

UIKit과 AppKit 앱을 동시에 작업하는 경우 유지 관리가 더 쉽습니다.

마지막으로, SwiftUI API에 대해 이야기할 시간입니다.

세션 초반에 본 iOS 피커를 기억하시나요?

그것은 단지 몇 줄의 SwiftUI 코드로 제시될 수 있다.

더 중요한 것은, iOS, iPadOS, macOS 및 watchOS와 같은 모든 피커 지원 플랫폼에서 SwiftUI PhotosPicker API에 액세스할 수 있다는 것입니다.

선택기는 플랫폼, 앱의 구성 및 사용 가능한 화면 공간에 따라 최고의 레이아웃을 자동으로 선택합니다.

피커 UI가 무엇인지 걱정할 필요가 없으므로, 앱을 더 좋게 만드는 데 집중할 수 있습니다.

데모를 통해 새로운 API를 자세히 보기 전에, 선택한 사진과 비디오를 로드하는 방법에 대해 먼저 이야기해야 합니다.

SwiftUI 바인딩을 통해 받은 선택에는 자리 표시자 객체만 포함되어 있습니다.

당신은 여전히 필요에 따라 실제 자산 데이터를 로드해야 합니다.

일부 자산 데이터는 즉시 로드되지 않는다는 것을 명심하세요.

예를 들어, 피커가 iCloud 사진에서 데이터를 다운로드하려고 했지만 장치가 인터넷에 연결되지 않았을 때 오류가 발생하면 로드 작업이 실패할 수도 있습니다.

비디오와 같은 일부 대용량 파일은 다운로드하는 데 시간이 오래 걸릴 수 있으므로, 차단 로딩 표시기 대신 항목별 인라인 로딩 UI를 보여주는 것이 좋습니다.

PhotosPicker는 앱과 확장 프로그램 간에 데이터를 전송하기 위한 새로운 SwiftUI 프로토콜인 Transferable을 사용합니다.

Transferable을 통해 SwiftUI 이미지를 직접 로드할 수 있지만, 고급 사용 사례의 경우, 로드하려는 데이터 유형을 완전히 제어하기 위해 Transferable 프로토콜을 준수하는 자체 모델 객체를 정의해야 합니다.

Transferable에 대한 자세한 내용은 "Meet Transferable" 세션을 확인할 수 있습니다.

앱이 동시에 많은 항목이나 비디오와 같은 큰 자산을 처리해야 하는 경우, 메모리에 모든 것을 동시에 로드하는 것은 가능하지 않을 수 있습니다.

메모리 사용량을 줄이기 위해, FileTransferRepresentation을 사용하여 선택한 자산을 파일로 로드할 수 있습니다.

자산을 파일로 로드할 때, 앱이 수명 주기를 관리할 책임이 있다는 것을 명심하세요.

파일은 수신될 때 항상 앱 디렉토리에 복사되어야 하며 더 이상 필요하지 않을 때 삭제되어야 합니다.

그래, 데모를 할 시간이야!

저는 이미 계정 프로필 페이지를 보여주는 이 데모 앱을 설정했습니다.

지금 프로필 이미지는 자리 표시자 아이콘일 뿐입니다.

PhotosPicker API를 사용하여 프로필 이미지를 변경하기 위해 편집 버튼을 추가하고 싶습니다.

프로필 이미지 보기는 이미 보기 모델에 정의된 이미지 상태에 응답할 수 있으므로, 선택자가 수신되면 이미지 상태를 업데이트하기만 하면 됩니다.

먼저, 보기 모델로 가서 새로운 imageSelection 속성을 추가합시다.

그것은 선택 바인딩으로 PhotosPicker API로 전달될 것이다.

이제 우리는 프로필 이미지 보기로 돌아가서 선택기를 불러올 수 있는 오버레이 버튼을 추가할 수 있습니다.

좋아, 잠시 멈추고 우리가 방금 추가한 코드를 살펴보자.

방금 정의한 선택 바인딩을 감안할 때 PhotosPicker 보기를 추가하고 이미지만 표시하도록 구성했습니다.

포토피커의 라벨은 원 배경이 있는 연필 글리프일 뿐이다.

우리는 지금까지 우리가 가진 것을 보기 위해 건설하고 달릴 수 있다.

편집 버튼을 눌러 선택기를 불러올 수 있습니다.

이미지를 탭하면 선택기가 자동으로 닫히지만, 프로필 이미지는 업데이트되지 않습니다.

왜?

우리는 여전히 이미지 선택과 이미지 상태를 연결해야 합니다.

그래서, 그렇게 하자.

우리는 뷰 모델로 돌아가서 설정된 이미지 선택에 응답할 수 있습니다.

이미지 선택이 0이면 이미지 상태를 비워두도록 설정합니다.

그렇지 않으면, 우리는 이미지를 로딩하기 시작합니다.

우리는 아직 loadTransferable 메소드를 구현하지 않았기 때문에 컴파일러 오류를 보고 있다.

고치자.

구현은 매우 간단하다.

요청이 여전히 가장 최근의 경우 완료 핸들러에 응답하고 이미지 상태를 업데이트하기만 하면 됩니다.

그것이 작동하는 것을 보기 위해 건설하고 실행합시다.

편집 버튼을 누르고 이미지를 선택할 수 있습니다.

좋아! 그건 예상대로 작동해.

사실, 그 프로젝트는 이미 macOS에서도 실행되도록 설정되어 있다.

방금 추가한 코드가 macOS에서 자동으로 작동하나요?

알아내기 위해 짓고 달려가자.

그건 컴파일해!

피커를 열고 이미지를 선택하면 앱에 반영됩니다.

그게 데모를 위한 거야.

당신은 방금 iOS와 macOS에서 데모를 보았지만, 같은 코드가 watchOS에서도 작동할 것입니다.

하지만, 명심해야 할 몇 가지 사항이 있다.

watchOS 피커는 간단한 흐름과 짧은 상호 작용을 위해 설계되었습니다.

이미지는 장치 크기에 따라 크기가 조정됩니다.

보통, 그것들은 페어링된 iPhone에서 동기화된다.

그러나, 가족 설정은 자신의 iPhone이 없는 가족 구성원이 Apple Watch의 기능과 혜택을 누릴 수 있게 해준다.

장치가 가족 설정 모드에 있는 경우, 선택기를 사용하여 iCloud 사진에서 가장 최근 1000개의 이미지를 선택할 수 있습니다.

피커는 인터넷에서 이미지를 다운로드해야 할 수도 있습니다.

그리고 만약 그렇다면, 닫기 전에 로딩 UI가 선택기에 표시될 것이다.

가기 전에, 저는 우리가 시스템 사진 선택기를 대부분의 앱이 사진과 비디오에 액세스할 수 있는 가장 좋은 방법으로 만들기 위해 최선을 다하고 있다고 말하고 싶습니다.

우리는 당신이 여전히 사용자 지정 선택기를 사용하고 있다면 그것으로 전환하는 것을 정말로 권장합니다.

고마워, 그리고 멋진 WWDC 보내!

♪