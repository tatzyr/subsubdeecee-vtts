10158

♪ 부드러운 기악 힙합 음악 ♪

♪

안녕, 거기!

저는 폴이고, SF 심볼 앱에서 일하고 있습니다.

오늘, 우리는 SF 심볼의 새로운 기능에 대해 이야기할 것입니다: 가변 색상.

우리는 당신의 프로젝트에 가변 색상으로 기호를 가져오는 방법과 SF Symbols 앱이 그 과정에서 모든 단계에서 당신을 도울 수 있는 방법을 살펴볼 것입니다.

먼저, 우리는 시스템이 제공하는 SF 기호의 가변 색상을 살펴볼 것입니다.

우리는 그것이 어떻게 작동하고 언제 사용해야 하는지 살펴볼 것이다.

그런 다음, 우리는 가변 색상을 사용자 지정 기호로 가져오는 방법을 살펴볼 것입니다.

시작하기 전에, SF 심볼을 처음 사용하거나 재교육을 원한다면, 작년 세션인 "SF 심볼 3 앱 탐색"을 시청하여 프로젝트의 심볼을 찾고 구성하는 방법에 대해 자세히 알아보는 것이 좋습니다.

그리고 아직 하지 않았다면, 탈리아의 강연인 "SF 심볼 4의 새로운 기능"을 확인하여 SF 심볼의 시각적 디자인과 오늘 보여줄 다양한 렌더링 모드에 대한 개요를 확인하세요.

이제, 가변 색상에 대해 이야기해 봅시다.

가변 색상은 백분율 값을 사용하여 기호의 모양에 영향을 미칠 수 있는 SF 기호의 새로운 기능입니다.

이 백분율 값을 변경하면 신호 강도나 진행 상황과 같이 시간이 지남에 따라 바뀔 수 있는 값을 반영하는 기호를 쉽게 만들 수 있습니다.

가변 색상이 어떻게 작동하는지 보는 가장 좋은 방법은 SF 심볼 앱에 뛰어들어 시스템이 스스로 말하도록 하는 것이라고 생각합니다.

올해 SF 심볼 앱에서, 우리는 모든 렌더링 모드에서 기호를 한 눈에 볼 수 있는 렌더링 인스펙터에 새로운 미리보기 영역을 추가했습니다.

다른 표현을 클릭하여 렌더링 모드 사이를 전환할 수도 있습니다.

여기 피커에는 새로운 자동 옵션도 있습니다.

이 옵션을 사용하면 각 기호가 선호하는 렌더링 모드를 선택할 수 있으며, 여기 미리보기 영역에서 선택한 것을 볼 수 있습니다.

예를 들어, 이 square.and.arrow.up 기호는 흑백을 선호하는 반면, 이 iPhone 기호는 계층을 선호한다.

색상 컨트롤 아래에서 가변 색상에 대한 새로운 컨트롤 세트를 찾을 수 있습니다.

그리고 실험을 시작하기에 좋은 장소인 가변 색상을 지원하는 기호에 대한 새로운 카테고리가 있습니다.

이 스피커 기호를 선택하고, 멀티컬러로 전환하고, 갤러리 보기로 전환하여 자세히 살펴봅시다.

이 버튼을 클릭하여 가변 색상을 켜고, 우리가 사용하고 있는 비율을 줄이기 위해 슬라이더를 끝까지 끌어내릴 것입니다.

백분율 값이 감소함에 따라 기호 조각이 어두워지는 것을 볼 수 있습니다.

그리고 내가 슬라이더를 다시 끌어올릴 때, 그 상징의 조각들은 모든 색을 되찾는다.

미리보기 영역을 주시하면, 네 가지 렌더링 모드 모두에서 이런 일이 일어나는 것을 볼 수 있습니다.

그리고 그리드 보기로 다시 전환하면, 변수 카테고리의 모든 기호가 변화에 반응하는 것을 볼 수 있습니다.

그래서 우리는 방금 가변 색상에 대해 무엇을 배웠나요?

우선, 가변 색상은 SF 기호에 사용할 수 있는 모든 렌더링 모드에서 사용할 수 있습니다.

가변 색상을 지원하는 모든 시스템 기호는 흑백, 계층, 팔레트 및 멀티컬러 모드에서 지원합니다.

둘째, 기호의 얼마나 많은 부분이 가변 색상에 의해 영향을 받을 수 있는지에 대한 규칙은 없습니다.

일부 기호에는 영향을 받는 레이어가 하나만 있다; 일부는 수십 개가 있다.

그럼에도 불구하고, 가변 색상은 백분율을 사용하여 제어되기 때문에, 당신은 이것에 대해 걱정할 필요가 없습니다.

그냥 퍼센트를 통과하면 넌 갈 수 있어.

그래서 시스템은 그 비율을 어떻게 해석하나요?

특정 레이어에 언제 가변 색상이 적용될지 어떻게 알 수 있나요?

음, 나머지 SF 심볼과 마찬가지로, 우리는 당신의 앱이 Apple 플랫폼에서 집에서 바로 느낄 수 있도록 가변 색상을 설계했습니다.

그리고 그것은 우리가 당신이 익숙할 수 있는 시스템 수준 지표의 행동에서 영감을 얻었다는 것을 의미합니다.

이 마이크 기호를 예로 들어 봅시다.

마이크 왼쪽에 있는 네 개의 점은 각각 가변 색상에 참여하는 별도의 레이어에 있다.

그래서, 각 점들은 백분율 값이 특정 임계값을 넘을 때 활성화될 것이다.

그 임계값은 0에서 100퍼센트 사이에 균등하게 간격을 두고 있다.

0%는 레이어가 활성화되지 않는 특별한 경우이다.

0퍼센트보다 큰 값은 첫 번째 점이 활성화될 것이다.

26퍼센트 이상에서, 두 번째 점도 활성화될 것이다.

�ftyone 퍼센트 이상은 세 번째 점들을 활성화시킬 것이다.

그리고 76에서 100%까지 네 개의 점을 모두 활성화할 것이다.

따라서, 가변 색상 기호는 정확히 0%로 시각적으로 비어 있는 것으로만 나타날 것이다.

Wi-Fi 강도와 배터리 잔량과 같은 시스템 수준 표시기에서 이 동작을 볼 수 있습니다.

가변 색상 기호는 100% 미만의 값으로 시각적으로 가득 차기 시작할 것이다.

밝기와 볼륨과 같은 시스템 수준의 표시기에서 이러한 동작을 볼 수 있습니다.

이제, 이 다음 기호에는 가변 색상을 사용하는 세 개의 레이어가 있습니다. 즉, 레이어 사이의 임계값은 33.3333 및 66.6667퍼센트와 같은 어색한 값으로 떨어질 수 있습니다.

우리는 반올림 오류로 인해 기호가 예상치 못한 방식으로 나타나는 것을 원하지 않았고, 코드에 얼마나 많은 중요한 숫자를 입력했는지에 대해 걱정할 필요가 없었습니다.

따라서, 레이어 사이의 임계값은 가장 가까운 백분율 포인트로 반올림되며, 반올림된 값보다 1퍼센트 포인트 높을 때까지 다음 레이어를 활성화하지 않습니다.

그래서, 첫 번째 임계값의 경우, 33.3%는 33%로 반올림되므로, 두 번째 층은 34%로 1% 포인트 더 높게 활성화됩니다.

최종 임계값은 66.7%에서 67%까지이므로, 마지막 층은 68%에서 그보다 1% 더 높은 1퍼센트 포인트에서 활성화된다.

물론, 시스템이 제공하는 기호는 이야기의 절반에 불과하다.

SF Symbols 앱을 사용하면 자신만의 사용자 지정 기호를 만들고 주석을 달 수 있으며, 시스템에서 제공하는 기호만큼 유연하고 강력한 사용자 지정 기호를 만들 수 있습니다.

유연하고 강력하다는 게 무슨 뜻이야?

음, 시스템이 제공하는 SF 기호는 9개의 다른 가중치로 제공되며, 9개의 가중치 각각은 3개의 다른 스케일로 사용할 수 있습니다.

이 27가지 변형 각각은 가변 색상 유무에 관계없이 네 가지 렌더링 모드에서 사용할 수 있습니다.

그것은 216개의 가능한 구성이다.

운 좋게도, 그것이 당신이 사용자 지정 기호를 216번 그려야 한다는 것을 의미하지는 않습니다.

작년에, 기호를 그리는 과정을 간소화하기 위해, 우리는 가변 템플릿을 도입했다.

이런 종류의 템플릿을 사용할 때, 27개의 다른 가중치와 저울 조합을 그리는 대신, 3개만 그리면 되며, 시스템은 다른 24개를 자동으로 생성할 수 있습니다.

사용자 지정 기호를 그린 후, "주연"이라고 부르는 프로세스를 통해 다양한 렌더링 모드를 채택할 수 있습니다.

작년에, 기호가 계층 및 팔레트 렌더링 모드를 채택하기를 원한다면, 사용자 지정 기호를 다른 레이어로 나누고 각 레이어에 계층 수준을 할당했습니다.

기호가 다색 렌더링 모드를 채택하기를 원한다면, 사용자 지정 기호를 다른 레이어로 다시 나누고 각 레이어에 색상을 할당했습니다.

이것은 사용 가능한 모든 렌더링 모드를 지원하기 위해 두 개의 별도의 레이어 구조를 관리해야 한다는 것을 의미했습니다.

올해, 우리는 통합 주석으로 워크플로우를 간소화하고 있습니다.

통합 주석은 기호에 단일 레이어 구조를 사용하며, 모든 렌더링 모드에서 해당 구조를 공유합니다.

그래서, 기호를 여러 번 레이어로 나누는 대신, 한 번만 하면 됩니다.

이제 Hierarchical, Palette 및 Multicolor에 대한 이전 제어 외에도 모노크롬 렌더링 모드에서 기호가 어떻게 보일지 제어할 수 있습니다.

그리고 물론, 통합 주석을 사용하면 기호에 가변 색상을 추가할 수 있습니다.

그래서 통합 주석을 알기 위해 사용자 지정 기호에 주석을 달도록 합시다.

작년에, 나는 우리가 같은 방에 있을 수 없을 때에도 우리 가족이 함께 카드 게임을 할 수 있도록 앱을 개발하고 있었다.

그로부터 몇 달 후, 나는 새로운 집착을 발견했다: 퍼즐 큐브!

그래서 올해, 나는 내 문제를 해결하는 데 도움이 될 앱을 만들고 싶다.

여기 내 데스크톱에서 만든 커스텀 퍼즐 큐브 기호가 있어.

새로운 사용자 지정 기호를 만들기 위해 앱으로 드래그하겠습니다.

나는 이 기호를 시스템에서 제공하는 큐브 기호를 기반으로 했고, 퍼즐 큐브의 세부 사항 중 일부를 어떻게 남겼는지 알아차렸다.

이것은 작은 크기와 다른 무게에서도 상징이 명확하게 전달되는 데 도움이 된다.

이제, 이전의 이 미리보기 영역을 기억하시나요?

사용자 지정 기호에 주석을 달 때 특히 편리합니다.

주석을 변경하면서, 사용자 지정 기호가 모든 다른 렌더링 모드에서 어떻게 보이는지 한 눈에 볼 수 있습니다.

그리고 여기를 클릭하거나 피커에서 다른 옵션을 선택하여 렌더링 모드를 전환하면 목록의 주석 컨트롤이 그에 따라 변경됩니다.

모노크롬은 꽤 좋아 보이지만, 계층적 모드에서 깊이를 더해 봅시다.

나는 그 모드로 전환하고 큐브의 상단과 측면을 새로운 레이어로 당길 것이다.

이 새로운 레이어가 자동으로 덜 눈에 띄는 2차 및 3차 수준으로 전환되는 것을 볼 수 있습니다.

이것은 내 상징에 조금 더 깊이와 시각적 관심을 준다.

그리고 우리가 만드는 계층적 주석은 팔레트 렌더링 모드를 지원하는 데에도 사용된다는 것을 기억하세요.

그래서 나는 방금 하나의 가격으로 두 개의 새로운 렌더링 모드를 얻었다.

이제, 이 기호에 색을 주기 위해 멀티컬러 모드로 전환해 봅시다.

멀티컬러 모드로 전환할 때, 계층 모드에서 분리한 것과 동일한 레이어가 여전히 표시됩니다.

통합 주석에서 하나의 렌더링 모드에서 레이어 구조에 대한 변경 사항은 다른 모든 것들로 전달된다는 것을 기억하십시오.

앞면은 빨간색, 윗면은 파란색, 옆면은 노란색으로 만들자.

좋아, 이건 꽤 멋져 보여.

하지만 퍼즐 큐브를 푸는 법을 배우는 가장 중요한 부분은 연습, 연습, 그리고 더 많은 연습이다.

그래서, 나는 내 큐브 기호를 타이머로 사용하고 싶고, 연습에 더 많은 시간을 할애하면서 색으로 채우고 싶다.

그것에 대한 해결책은 가변 색상이다.

앞면에 있는 이 별도의 조각들은 타이머에 다양한 색상을 추가할 수 있는 좋은 장소처럼 보인다.

이 조각들을 각각 다른 층으로 분리해 봅시다.

내가 이것들을 레이어 목록에서 배열하고 있는 순서에 주목하세요.

내가 먼저 채우고 싶은 레이어는 맨 아래에 있고, 마지막으로 채우고 싶은 레이어는 맨 위에 있다.

그런 다음, 우리는 이 모든 레이어를 선택하고 이 버튼을 클릭하면 모든 레이어에서 가변 색상을 활성화할 수 있습니다.

그리고 그게 다야!

무슨 일이 일어나는지 보기 위해 가변 색상 슬라이더를 움직여 봅시다.

모든 다른 렌더링 모드에서 무슨 일이 일어나고 있는지 보려면 미리보기 영역을 주시하는 것을 잊지 마세요.

가변 색상에서 사용되는 비율을 변경함에 따라 앞면이 모든 렌더링 모드에서 색상을 조정한다는 것을 알 수 있습니다.

그것이 통합 주석의 힘이다.

한 렌더링 모드에서의 편집은 다른 렌더링 모드로 진행될 수 있기 때문이다.

많은 경우, 네 가지 렌더링 모드 모두에서 훌륭한 결과를 얻으려면 한두 번만 작업하면 됩니다.

그리고 상황이 조금 더 까다로운 상황에서, SF 심볼 앱은 여전히 당신을 덮을 수 있습니다.

더 복잡한 기호를 살펴봅시다.

여기 다시 내 큐브 기호가 있지만, 이번에는 시스템 라이브러리의 많은 .circle.fill 기호처럼 원 안에 설정되어 있습니다.

이제, 나는 이미 이 기호에 주석을 달기 시작했다.

여기서 내가 원과 큐브의 부분을 다른 층으로 분리했다는 것을 알 수 있다.

내 기호는 다색과 계층적 모드에서 멋지게 보이지만, 모노크롬에서는 큐브와 그 뒤의 원 사이에는 큰 대비가 없다.

기호의 모든 경로가 한 레이어에 있을 때, 큐브 경로는 원 경로에 구멍을 만들어 모노크롬에서 멋지게 보였다.

하지만 이제 원을 자체 레이어로 옮겼으니, 큐브 경로는 더 이상 구멍을 만들지 않는다.

대신, 그들은 단단한 원 위에 단단한 큐브를 만든다.

그래서 우리는 그것을 잘 볼 수 없다.

운 좋게도, 여기에 우리를 도울 수 있는 통합 주석의 새로운 기능이 있다.

우리는 레이어가 그 뒤에 있는 레이어에 구멍을 만들기 위해 지우기를 선택할 수 있습니다.

그건 훨씬 더 좋아 보여.

이제, 가변 색상을 다시 추가해 봅시다.

이번에는 앞면의 모든 부분을 선택하고 상황에 맞는 메뉴에서 새 레이어로 분할을 선택할 것입니다.

그런 다음 이 버튼을 사용하여 가변 색상을 다시 켤 것입니다.

그리고 난 끝났어!

그리고 그건 그렇고, 경로는 기호 템플릿에 나타나는 순서를 사용하여 분할되므로, 그릴 때 기호 경로의 순서에 주의를 기울이면 나중에 시간을 절약할 수 있습니다.

그래서 그것은 간단히 말해서 통일된 주석이다.

사용자 지정 기호에 주석을 달 수 있는 빠르고 강력한 방법입니다.

모든 렌더링 모드에 적용되는 하나의 레이어 구조를 만듭니다.

이제 모노크롬 렌더링 모드에서 기호의 모양을 제어할 수 있습니다.

기호의 개별 레이어에 가변 색상을 추가할 수 있습니다.

레이어의 z 순서는 전달 비율이 증가함에 따라 채울 순서를 결정하며, 각 레이어에 사용되는 임계값은 0에서 100퍼센트 사이에 균등하게 간격을 둔다.

그리고 레이어 구조의 일부이기 때문에, 레이어가 가변 색상을 선택할 때, 이 설정은 모든 렌더링 모드에서 공유됩니다.

그리고 통합 주석에는 새로운 공유 레이어 구조로 더 쉽게 작업할 수 있는 두 가지 새로운 레이어 옵션이 있습니다.

레이어를 지우면 그 레이어의 모양을 사용하여 그 뒤에 있는 레이어를 지울 수 있습니다.

이것은 더하기, 빼기 또는 다른 모양이 있는 배지가 있는 흑백 및 계층적 기호와 같은 상황에서 정말 유용합니다.

그리고 마지막으로, 레이어를 Hidden으로 설정하면 특정 렌더링 모드에서 제외됩니다.

모든 렌더링 모드에서 레이어를 사용할 수 없는 경우, 이 옵션을 사용하여 해당 레이어를 특정 모드에만 적용할 수 있습니다.

이러한 모든 새로운 기능은 새로운 템플릿 형식인 4.0에서 지원됩니다.

SF Symbols 앱에서 기호를 Xcode로 가져올 때, 모노크롬 렌더링을 제어하고 가변 색상을 사용하기 위해 4.0 템플릿을 내보내야 합니다.

작년에 주석을 달은 사용자 지정 기호가 이미 있다면, 통합 주석을 사용하도록 자동으로 업데이트됩니다.

당신의 계층 및 다색 주석은 추가 작업 없이 가져올 것입니다.

그리고, 이전 플랫폼을 지원해야 하는 경우, 이전 3.0 및 2.0 형식을 여전히 사용할 수 있습니다.

우리가 마무리하기 전에, 내가 하고 싶은 게 하나 더 있어.

나는 퍼즐 큐브를 푸는 방법에 대해 배우는 것이 매우 즐거웠지만, 지금까지 가장 좋은 부분은 내 딸이 내가 그것들을 푸는 것을 보고 배우고 싶어했다는 것이다.

그래서 자연스럽게, 나는 또한 그녀가 내 앱을 사용하여 그녀의 연습을 도울 수 있기를 바란다.

이제, 그녀는 이번 가을에 유치원을 시작할 거야, 그래서 우리는 그녀를 조금 더 천천히 시작할 거야.

하지만 이곳은 가변 색상의 기호가 진정으로 빛나는 곳이다.

우리는 타이머 UI를 이렇게 디자인할 수 있다.

텍스트와 숫자는 서술적이고 도움이 되지만, 여전히 배우고 있거나 텍스트를 읽을 수 없는 그녀와 같은 사람에게는 위협적일 수 있다.

하지만 그녀가 들고 있는 것과 똑같이 보이는 퍼즐 큐브를 보고, 시간이 지남에 따라 색으로 채워지는 것을 보는 것은 친근하고 직관적이다.

타이머 코드를 변경할 필요도 없습니다. 제가 해야 할 일은 제가 사용하고 있는 기호의 이름을 변경하고 더 큰 큐브 기호에 사용한 것과 동일한 백분율 값을 계속 전달하는 것뿐이며, SF 기호는 나머지를 처리합니다.

그리고 그것이 상징의 힘이다.

그들은 우리가 언어와 텍스트를 초월하는 방식으로 아이디어를 전달할 수 있게 해준다.

그들은 우리에게 앱을 더 포괄적으로 만들 수 있는 방법을 제공한다.

그리고 시스템 제공 기호와 사용자 지정 기호의 가변 색상은 진행, 신호 강도 및 시간과 같은 개념에 대해 훨씬 더 많은 표현력을 제공합니다.

세 개의 그림과 하나의 통합 주석에서 나온 모든 것.

그거 꽤 놀랍다.

그리고, 나는 퍼즐 큐브를 푸는 것보다 훨씬 쉽다고 덧붙일 수 있다.

♪