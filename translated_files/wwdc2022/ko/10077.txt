10077

♪ ♪

토미 폴리: 안녕하세요, 저는 토미 폴리입니다. 당신의 앱과 웹사이트가 CAPTCHA의 필요성을 줄이기 위해 Apple 및 업계 전역의 사기 방지 제공 업체와 어떻게 협력할 수 있는지 공유하게 되어 기쁩니다.

오늘, 저는 개인 액세스 토큰과 사기 방지를 위한 강력한 도구가 될 수 있는 방법, 운영하는 서버에서 개인 액세스 토큰을 지원하는 방법, 그리고 앱에서 이러한 토큰을 사용하는 방법에 대해 이야기하겠습니다.

개인 액세스 토큰을 소개하기 위해, CAPTCHA가 처음에 사용되는 이유를 설명하는 것으로 시작하겠습니다.

웹사이트에서 새 계정에 가입했거나 기존 계정으로 로그인하려고 했다면, 어느 시점에서 이와 같은 CAPTCHA를 접했을 가능성이 있습니다.

때때로, CAPTCHA는 단지 누르는 버튼일 뿐이지만, 다른 것들은 작성하기 어려울 수 있다.

당신은 이것들에 의해 방해받는 것을 즐기지 않을 것입니다.

난 확실히 그렇지 않아.

이러한 경험이 존재하는 이유는 사기 행위를 방지하기 위한 것이다.

만약 당신이 서버를 운영한다면, 당신은 그것이 사기에 압도당하는 것을 원하지 않을 것입니다.

계정을 만들거나 제품을 구매하려는 일부 시도는 합법적인 사용자로부터 온다.

하지만 다른 시도는 공격자나 봇의 것일 수 있다.

불행히도, CAPTCHA와 같은 사기를 방지하기 위한 일반적인 도구는 종종 사람들이 당신의 앱이나 웹사이트를 사용하는 것을 더 어렵게 만듭니다.

좋은 경험과 사기 방지 사이의 올바른 균형을 찾는 것은 어려운 일이다.

CAPTCHA는 종종 더 느리고 복잡한 사용자 경험으로 이어진다.

공격을 방지하려고 노력함으로써, 당신은 또한 소중한 고객을 잃을 수도 있습니다.

CAPTCHA는 또한 사생활 위험을 초래할 수 있다.

클라이언트가 신뢰할 수 있고 더 쉬운 CAPTCHA를 얻을 수 있는지 결정하기 위해, 서버는 종종 IP 주소를 사용하여 고객을 추적하거나 지문을 채취하는 데 의존합니다.

이러한 종류의 추적은 사파리, 메일 개인 정보 보호 및 iCloud 개인 릴레이가 사용하는 인터넷 개인 정보 보호의 방향과 상충됩니다.

그리고 CAPTCHA는 접근성에 심각한 문제를 일으킬 수 있다.

봇의 접근을 막기 위해 노력함으로써, 그들은 또한 장애나 언어 장벽이 있는 실제 인간을 차단한다.

더 좋은 방법이 있어.

누군가가 당신의 웹사이트와 처음으로 상호 작용하더라도, 사파리와 같은 앱이나 브라우저를 통해 로드하는 경우, 그들은 이미 봇이 모방하기 어려운 많은 작업을 수행했습니다.

첫째, 그들은 iPhone, iPad 또는 Mac을 가지고 있으며, 비밀번호, Touch ID 또는 Face ID로 장치의 잠금을 해제했습니다.

그들은 거의 항상 Apple ID로 장치에 로그인되어 있다.

그리고 그들은 코드 서명된 앱을 출시했다.

이 정보는 서버가 CAPTCHA에 의존하지 않고 고객을 추적하여 개인 정보를 손상시키지 않고 합법적인 고객을 신뢰하고 사기를 방지하는 데 도움이 될 수 있습니다.

개인 액세스 토큰은 iOS 16과 macOS Ventura의 새로운 기능인 서버가 클라이언트를 자동으로 신뢰할 수 있도록 합니다.

이 토큰들이 어떻게 작동하는지 설명하기 전에, 나는 그것들을 실제로 보여줄 것이다.

넌 이걸 좋아할 거야.

나는 파이낸셜 타임즈 웹사이트에서 기사를 읽고 싶다.

나는 이 시나몬 빵에 대해 매우 흥분된다.

그리고 저는 두 개의 다른 휴대폰에 사이트를 로드했습니다: 하나는 iOS 15를 실행하고 다른 하나는 개인 액세스 토큰을 지원하는 iOS 16을 실행합니다.

iOS 15 휴대폰부터 로그인을 클릭하고 계정과 비밀번호를 입력합니다.

하지만 그러고 나서, 나는 CAPTCHA에 맞았다.

나는 그 기사를 읽기 전에 편지를 입력해야 한다.

내가 개인 액세스 토큰을 지원하는 iOS 16 휴대폰에서 똑같은 일을 할 때, 나는 바로 통과한다.

이것은 많은 사람들, 많은 시간을 절약할 것이며, 당신의 고객들은 신뢰받는 것에 감사할 것입니다.

개인 액세스 토큰을 통해 서버는 IETF 프라이버시 패스 작업 그룹에서 표준화된 기술을 사용하여 방금 본 것처럼 CAPTCHA를 피할 수 있습니다.

애플은 이것을 가능하게 하기 위해 업계 전반의 회사들과 협력하고 있다.

이 프로토콜을 사용하여, 서버는 새로운 HTTP 인증 방법인 PrivateToken을 사용하여 토큰을 요청할 수 있습니다.

이 토큰은 RSA 블라인드 서명을 사용하여 고객이 증명 검사를 통과할 수 있었다는 사실에 암호화적으로 서명합니다.

이러한 서명은 "연결할 수 없음"입니다. 즉, 토큰을 받는 서버는 유효한지 확인할 수 있지만, 시간이 지남에 따라 클라이언트 신원을 발견하거나 클라이언트를 인식할 수 없습니다.

프로토콜의 작동 방식은 다음과 같습니다.

첫째, iOS 또는 macOS 클라이언트가 HTTP를 통해 서버에 액세스할 때, 서버는 PrivateToken 인증 체계를 사용하여 챌린지를 다시 보냅니다.

이것은 서버가 신뢰하는 토큰 발행자를 지정합니다.

클라이언트가 토큰을 가져와야 할 때, iCloud attester에 연락하여 토큰 요청을 보냅니다.

이 토큰 요청은 "맹목적"이므로 서버 챌린지에 연결할 수 없습니다.

아테스터는 장치의 Secure Enclave에 저장된 인증서를 사용하여 장치 증명을 수행하고 계정이 양호한 상태인지 확인합니다.

이 아테스터는 또한 클라이언트 장치가 정상적인 패턴을 따르고 있는지 또는 손상되었거나 장치 농장의 일부로 사용되었을 수 있는지 인식하기 위해 속도 제한을 수행할 수 있습니다.

클라이언트가 검증될 수 있다면, 아테스터는 발행자에게 새로운 토큰에 대한 요청을 보냅니다.

토큰 발행인이 요청을 받으면, 클라이언트에 대해 아무것도 모른다.

하지만 iCloud attester를 신뢰하기 때문에, 토큰에 서명한다.

그런 다음 클라이언트는 서명된 토큰을 받고, 원래 서버가 확인할 수 있도록 "unblinding"이라는 프로세스로 변환합니다.

그리고 마지막으로, 클라이언트는 서명된 토큰을 서버에 제시한다.

서버는 이 토큰이 발행인에 의해 서명되었는지 확인할 수 있지만, 토큰을 사용하여 클라이언트를 식별하거나 인식할 수는 없습니다.

그렇다면 서버에서 이 기술을 어떻게 활용할 수 있나요?

서버에서 개인 액세스 토큰을 채택하는 데는 세 단계가 있습니다.

먼저, 토큰 발행자를 선택해야 합니다.

둘째, 클라이언트를 검증하고 싶을 때 서버는 HTTP 인증 문제를 보내야 합니다.

그리고 셋째, 당신의 서버는 고객이 보낸 토큰을 검증해야 할 것입니다.

선택한 토큰 발행자는 서버가 검증하는 토큰에 서명할 수 있는 신뢰할 수 있는 공급자입니다.

이것은 기존 CAPTCHA 공급자, 웹 호스팅 서비스 또는 CDN이라고도 불리는 콘텐츠 전송 네트워크일 수 있습니다.

iOS 16과 macOS Ventura 베타에는 이미 테스트를 시작할 수 있는 두 개의 토큰 발행자가 있습니다.

Fastly와 Cloudflare는 프라이버시 패스 표준을 개발해 온 두 개의 CDN이며, 이미 발행인 서비스를 이용할 수 있게 했다.

다른 CAPTCHA 제공 업체, 웹 호스팅 서비스 및 CDN도 Apple 장치에서 작동하는 토큰 발행인을 실행할 수 있습니다.

발행인은 올해 말에 register.apple.com에서 가입할 수 있습니다.

특정 토큰 발행자의 사용이 고객이 액세스하는 웹사이트를 식별하는 방법이 되지 않는 것이 중요합니다. 이는 개인 정보 보호에 문제가 될 것입니다.

따라서 각 토큰 발행자는 적어도 수백 대의 서버에서 작동하는 대규모 서비스여야 합니다.

클라이언트가 서버에 액세스할 때, PrivateToken 체계로 HTTP 인증 챌린지를 보내 토큰을 요청할 수 있습니다.

이렇게 하려면 두 가지 옵션이 있습니다. 기존 CAPTCHA 또는 사기 방지 공급자와 협력하여 스크립트에 챌린지를 구축하여 자동으로 처리하거나 서버에서 직접 이러한 챌린지를 보내도록 선택할 수 있습니다.

웹사이트의 일부로 이 작업을 수행하는 경우, 도전은 사이트에 내장된 별도의 제3자 도메인이 아닌 기본 URL의 하위 도메인인 제1자 도메인에서 나와야 합니다.

고객이 토큰을 반환할 때, 발행인의 공개 키를 사용하여 유효성을 확인해야 합니다.

또한 고객이 토큰을 여러 번 제시하려고 시도할 수 있는 리플레이 공격을 방지하기 위해 검사를 시행할 수도 있습니다.

토큰은 일회성으로만 사용할 수 있습니다.

이전에 어떤 토큰을 보냈는지 기억하거나, 토큰이 챌린지에서 전송된 고유한 값에 서명하도록 요구함으로써 리플레이 공격을 방지할 수 있습니다.

당신의 사이트는 여전히 이 인증 문제에 응답하지 않는 레거시 클라이언트와 협력해야 합니다.

따라서 인증이 메인 페이지 로드를 차단해서는 안 되며, 대신 고객을 신뢰하는 선택적 방법으로 취급되는 것이 중요합니다.

Safari와 WebKit을 통해 액세스하는 웹 서버는 자동으로 작동하지만, 앱 내에서 개인 액세스 토큰을 직접 사용할 수도 있습니다.

개인 액세스 토큰은 Apple ID로 로그인한 장치에서 iOS 16 또는 macOS Ventura가 필요합니다.

이 Apple ID는 증명에만 사용되며, 토큰을 받는 서버와 공유되지 않습니다.

앱 내에서 WebKit 또는 URLSession을 사용하여 HTTP를 사용하여 서버에 연락하면 토큰을 사용할 수 있습니다.

그런 다음 앱이 포그라운드에 있는 동안 도전을 받을 때마다, 시스템은 자동으로 토큰을 인증으로 보냅니다.

URLSession을 사용하는 경우, 개인 액세스 토큰을 작동시키기 위해 명시적으로 아무것도 할 필요가 없습니다.

URLSession은 PrivateToken HTTP 인증 체계를 사용하여 도전에 자동으로 응답합니다.

그러나 앱이 포그라운드에 없거나 장치에 Apple ID가 로그인되어 있지 않은 경우와 같이 토큰을 가져오는 데 오류가 있는 경우, 앱은 토큰 챌린지가 포함된 401 HTTP 응답을 받게 됩니다.

이를 통해 앱은 토큰 챌린지를 받았다는 것을 알 수 있으며, 사용 사례에 대한 오류를 올바르게 처리할 수 있는 기회를 제공합니다.

개인 액세스 토큰을 사용할 수 있을 때마다 CAPTCHA를 피함으로써 앱과 웹사이트를 모두에게 더 나은 경험을 선사하세요.

서버가 토큰 챌린지를 보내고 토큰을 검증할 수 있도록 하세요.

그리고 앱에서 URLSession 또는 WebKit을 사용하여 개인 액세스 토큰을 자동으로 지원하십시오.

저는 당신이 만들 CAPTCHA 없는 경험을 기대하고 있습니다.