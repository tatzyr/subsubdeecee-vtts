110348

- 「Swift Playgroundsで最初のアプリを構築する」へようこそ。

私はスウィフトプレイグラウンドチームのエンジニア、コレット・チャールトンです。

- そして、私はスウィフトプレイグラウンドチームの別のエンジニア、コナー・ワカモです。

- Swift Playgroundsは、Swiftでコーディングを学ぶための素晴らしいツールであり、今では物事をさらに一歩進めてアプリを構築することもできます!

今日は、空白のテンプレートから始めて、Swift Playgroundsでアプリを構築することを順を追って説明します。

次に、プレビューとコンソールを使用して問題をデバッグする方法を示し、最後にアプリをTestFlightに提出します。

私たちのチームが本当に好きなのは、お茶を作って飲むことです。

私たちはそれをとても愛しているので、そのためのアプリを作りたいと思っています。

コナーと私は、ティータイムに役立つ小さなアプリを構築し、毎日飲むものを選ぶのに役立つお茶のリストを提供します。

Swift PlaygroundsはMacとiPadでうまく機能します。

今日はMacを持っているので、そこでこのアプリを作り始めるつもりです。 

コーディングの初心者でも、経験豊富な開発者でも、Swift Playgroundsはさまざまなテンプレートと指導コンテンツを提供しています。

ティーアプリでは、画面の左下隅にある空白のアプリテンプレートをクリックすることから始めます。

テンプレートがわかったので、ダブルクリックして開きましょう。

すごい。右側は、Hello Worldのテキストを示すライブインタラクティブプレビューです。

コーディングを始める前に、アプリの設定を使ってアプリを少しカスタマイズしましょう。

これを行うには、サイドバーの左上隅にあるアプリ設定ボタンをクリックします。

ここでは、アプリ名やアクセントカラーなど、さまざまなプロジェクトプロパティをカスタマイズできます。

カスタムまたはプレースホルダアプリのアイコン、機能、または目的文字列、およびbundleIDを追加することもできます。

アプリの名前をティータイムに更新します。

アクセントカラーを茶色にします。

そして、プレースホルダアイコンをマグカップに更新します。

すごい。重要な部分がなくなったので、テンプレートテキストを選択し、ライブラリからの最初のビューに置き換えて、コードを書き始めましょう。

ライブラリは、プロジェクトツールバーのプラスボタンをクリックしてアクセスできます。

さまざまなビュー、修飾子、SFシンボル、色の使いやすいスニペットが含まれています。

リストビューを使用してお茶のリストを表示するので、検索フィールドにリストを入力し、クリックして挿入します。

リストビューがわかったので、お茶のアイテムを追加しましょう。

テキストをタイプし始めます...

そして、リターンキーを使用して、インラインコード補完パネルからコード補完の提案を受け入れて挿入します。

さて、今、私たちは1つのお茶を追加したリストビューを持っています。

もう少し追加しましょう。

待って、誤ってジャスミングリーンを2回追加してしまったようです。

お茶の重複を避けるために、注文セットとして保管する必要があります。

私たちにとって幸運なことに、Appleの迅速な収集パッケージはまさにそれを提供します。

では、スウィフトコレクションパッケージをプロジェクトに追加しましょう。

これを行うには、ファイルメニューを開き、[パッケージの追加]を選択します。

まず、swift-collectionsパッケージのURLを入力してから、Returnキーを押します。

パッケージがフェッチされた後、パッケージのバージョンとプロジェクトに追加できるその他の製品を見ることができます。

このアプリでは、コレクションのみを選択し、[プロジェクトに追加]をクリックします。

これで、パッケージの下のサイドバーにスウィフトコレクションがプロジェクトに追加されました。

お茶のリストを格納するために、OrderedSet of Stringを作成しましょう。

待って。私たちは問題を抱えているようです。

問題のアイコンをクリックして見てみましょう。 

スコープに設定されたタイプが見つかりません。

ああ、何が問題なのかわかりました。

私たちのプロジェクトでコレクションモジュールをインポートするのを忘れました。

それをインポートして、問題は解決されるはずです。

その問題を解決したので、リストビューを更新して、作成したばかりのコレクションを使用しましょう。

これを行うには、ForEach Viewを使用します。

さて、私たちはそれを持っています--私たちのお茶のコレクションから表示されているお茶のリスト。

このプロジェクトに取り組んでいる中で、追加する機能に関するアイデアが増えています。

私たちのアプリが口笛を吹くティーケトルを聞いて、いつ注ぐ時間かを知らせることができれば、とてもクールです。

私は今これを実装するつもりはありませんが、私たちのアプリがマイクを使用する必要がある理由をユーザーに説明するために私たちが取る手順を歩きましょう。

これを追加するには、アプリの設定に戻りましょう...

そして、機能をクリックします。

右上隅のプラスボタンを使用すると、プロジェクトに追加できる機能のリストが表示されます。

マイクを見つけて、それをクリックして追加しましょう。

目的の弦のために、「ティータイムはマイクを使って口笛を吹くティーケトルを聴きます」と書きます。

追加をクリックし、アプリの設定を閉じます。

さて、今日はたくさんのことをしました。プロジェクトと私が持っているクールなアイデアをコナーと共有することに興奮しています。

共有iCloudフォルダに追加して、コナーと共有します。

しかし、まず、マイアプリよりも良いファイル名を与えましょう。

では、共有のiCloudフォルダにドラッグします。

終わったので、アプリを完成させるためにコナーに渡します。

ありがとう、コレット。私はiPadで物を拾うつもりです。

iCloud共有フォルダを介してプロジェクトを共有しているため、プロジェクトのメインリストには表示されません。

しかし、「場所」をタップすると、iCloudの他の場所から、またはサードパーティのドキュメントプロバイダーからプロジェクトにアクセスできます。

私はすでに共有フォルダに入っているので、ティータイムをタップしてプロジェクトを開きます。

私が行った変更は、自動的に共有プロジェクトに反映されます。

コレットはとても良いエンジニアのようで、プロジェクトをiCloudにアップロードするだけで、いくつかの追加機能が追加されました!

彼女はここにタブビューを実装したので、私たちはお茶のリストだけでなく、アシスタントも持っています。

アシスタントタブをタップすると、それは少し裸骨ですが、それは仕事をします。

私は推薦を求めることができます、そしてそれは私が飲むべきお茶をくれます。

今日はジャスミングリーンを食べるべきだと思います。

今、私はコレットがこれに少し余分なピザを与えるためにお茶を選ぶ楽しい新しい方法に取り組んでいたことを知っています。

サイドバーを開いて探してみましょう。

TeaWheelViewは有望そうなので、それをタップして開きましょう。

私たちは、データの収集を取るビューを持っています。

メインアプリの一部になる前にTeaWheelViewを試すことができるように、ビュープレビューを追加しましょう。

ファイルの一番下までスクロールします...

そして、私は「プレビュープロバイダー」と入力し始めます。

Returnキーを押してコード補完の提案を受け入れ、TeaWheelView_Previewsと名付けます。

ページドットがプレビューエリアの下部に表示されました。これは、Swift Playgroundsが私のプレビュープロバイダーを認識することを示しています。

アプリのプレビューの下にある右のシェブロンをタップすると、アプリのプレビューの代わりにビュープレビューを使用できます。

今は「こんにちは、世界！」と書いてあるだけです。

では、TeaWheelViewを作成するためのコードを追加しましょう。

まず、いくつかの項目を含む配列を静的プロパティとして追加して、プレビューで使用できるようにします。

2つの角括弧の間に挿入ポイントを残し、閉じ括弧をドラッグして、いくつかのアイテムのプレースホルダを作成します。

次に、プレースホルダをアイテムとして機能するいくつかの文字列に置き換えます。

いくつかのアイテムがいくつかあるので、TeaWheelViewに追加しましょう。

私はハロー、世界を選びます!例として、私のアイテムを表示するTeaWheelViewに置き換えてください。

パディングも少し追加します。

すごい！今、私たちのビュープレビューはホイールを示しており、それはなんて美しいホイールでしょう!

私はそれを回転させることができます、そしてそれはそれが着地する場所に基づいて異なるアイテムを選びます。

アシスタントタブに戻って、このホイールを追加しましょう。

サイドバーを使用してAssistantTab Swiftファイルを開き、ボタンを削除して代わりにTeaWheelViewに置き換えます。

TeaWheelViewはオプションで、ホイールの回転が止まったときに呼び出されるアクションクロージャーを取ります。

それを使用して、最後に選んだお茶を選択したお茶に設定し、SwiftUIがアラートを表示することを知っているように、ショーピックアラートをtrueに設定します。

オーケー、いいね！ここには車輪があるので、試してみましょう！！

スワイプしてスピンします...そして、バイトのウーロンを飲むように言われました。

もう一度スワイプします...

そして、それはまだバイトのウーロンです。

もう一度。

うーん。何かが間違っているようです。

車輪のさまざまな場所に着陸しているにもかかわらず、いつも私にバイトのウーロンを飲むように言っています。

それは良いお茶ですが、私は少し多様性が欲しいです。

ホイールビューに戻り、何が起こっているのかを把握してみましょう。 ホイールビューに戻ります。

ホイールが回転して異なる場所に着地するので、何が間違っているのかは明らかではありません。

ビュープレビューに印刷ステートメントを追加して、プレビューも壊れているかどうかを確認しましょう。

今、私が車輪を回すとき...

ソースエディタの左下にコンソールメッセージがポップアップ表示されます。

アイテム1...

項目1...項目1。

はは！各スピンは私たちにアイテム1を与え、それは何かが正しく接続されていないことを示唆しています!

毎回最初のものを与えてくれるので、プロジェクト全体の検索を使って最初に検索します。

画面の左側にあるサイドバーの上部にある検索フィールドをタップし、「first」と入力してReturnキーを押します。

その結果は有望に思えるので、私はそれをタップします。

ああ、コレットはここにいくつかのデバッグコードを残したようで、正しい結果ではなく、毎回最初のアイテムを返しました。

それを本当に素早く修正してから、もう一度スピンしましょう。

項目2...

項目4。

すごい！今は機能しているようです。

プレビューの下にある左のシェブロンをタップしてアプリのプレビューに戻すと、実際のアプリで試すことができます。

私は車輪を回します、そしてそれは私にイングリッシュブレックファーストを食べるように言っています。

だから今、私たちは働くアシスタントを持っています。

すごい！アプリがすべてのサイズでうまく機能することを確認するために、画面の左上にある実行ボタンを押すことで、独自のウィンドウで実行できます。

さて、すべてがここにあるようです。

私はお茶のリストを持っています、そして私はここに車輪とすべてを持つアシスタントを持っています。

ステータスバーの小さなSwiftアイコンをタップし、ポップアップするシートの「プロジェクトを表示」ボタンを選択すると、Swift Playgroundsのプロジェクトに戻ることができます。

私はこのアプリを自分で、そして友人や家族と一緒にテストする準備ができています。

Swift Playgroundsは、Swift Playgrounds内からTestFlightに直接提出できるため、テストが簡単になります!

アプリの設定シートを表示して一番下までスクロールすると、「App Store Connectにアップロード」ボタンがあります。

それをタップすると、Swift Playgroundsはアプリレコードを作成し、アプリをApp Store Connectにアップロードするすべてのハードワークを行い、TestFlightと最終的にはApp Storeで配布することができます。

アプリがアップロードされたので、App Store Connectにアクセスして、ベータ版アプリレビューのために提出することができます。

少し待った後、TestFlightアプリにアクセスして、iPhoneでもそこからインストールできます!

「インストール」をタップしてティータイムをインストールします。

インストールされたので、「開く」をタップして開きます。

テストノートと、フィードバックの提供方法に関するこれらの指示をタップします。

そして、あなたはそれを持っています - 私たちのアプリはiPhoneで実行されています。

今日はどんなお茶を飲むべきですか？

マットPのティーパーティーをしているようです。

今日、コレットと私は、MacとiPadでSwift Playgroundsを使用してアプリを構築する方法を紹介しました。

ライブラリとコード補完を使用して新しいコードを挿入し、iCloud共有フォルダを介してプロジェクトを共有し、ビュープレビューとコンソールを使用してコードの問題をデバッグしました。

iPadから直接TestFlightにアプリを提出しました!

うまくいけば、あなたは途中で1つか2つのことを学んだでしょう、そして私たちはあなたがSwift Playgroundsで構築するものを見るのが待ちきれません。

ご覧いただきありがとうございます、そしてWWDCの残りの部分を楽しんでください!