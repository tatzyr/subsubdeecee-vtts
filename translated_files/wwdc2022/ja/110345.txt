110345

♪まろやかなインストゥルメンタルヒップホップ音楽♪

♪

こんにちは、私の名前はダニエルで、セキュリティエンジニアリングとアーキテクチャチームに所属しています。

エンドポイントセキュリティの最新情報をお伝えします。

エンドポイントセキュリティは、当社が提供するAPIであるため、Mac用のセキュリティ製品を構築できます。

これはC APIであり、サードパーティのアンチウイルス、エンドポイントの検出と応答、およびデータ漏洩防止ソリューションに豊富なセキュリティイベントストリームを提供します。

廃止されたKAuth KPI、サポートされていないMACカーネルフレームワーク、および廃止されたOpenBSM監査証跡に代わるものとして、macOS Catalinaにエンドポイントセキュリティを最初に導入しました。

この機能をエンドポイントセキュリティAPIで利用可能にすることで、カーネル拡張機能を開発する必要性がなくなった。

エンドポイントセキュリティの導入は大成功を収めています。

私たちは、受け取った肯定的なフィードバックと、それが可能にしているセキュリティ製品に興奮しています。

エンドポイントセキュリティの紹介については、WWDC 2020セッション「エンドポイントセキュリティアプリの構築」を参照してください。

このセッションでは、macOS Venturaで追加された新しいイベント、ミュート機能の改善、およびesloggerと呼ばれる新しいユーティリティについて説明します。

新しいイベントから始めましょう。

macOS Montereyの時点で、Endpoint Securityは100以上のイベントタイプをサポートしています。

これまで、これらのイベントは、プロセスのフォークやファイルを開くなど、カーネル内で発生する重要なイベントに焦点を当てていました。

macOS Venturaでは、ユーザー空間で発生するセキュリティ関連のイベントを含むように、観測可能なイベントのセットを拡張しています。

具体的には、認証、ログインとログアウト、GatekeeperのXProtectの可視性を追加しています。

新しい認証イベントは、ユーザーがオペレーティングシステムに認証する状況をカバーしています。

これには、ローカルユーザーアカウントへのログインだけでなく、管理者として操作を承認するなど、他の場所での認証も含まれます。

これらのイベントは、通常、疑わしいアクセスパターンを観察したいセキュリティ製品によって使用されます。

以前は、認証イベントを観察したい場合は、非推奨のOpenBSM監査証跡に頼らなければなりませんでした。これはもう必要なくなります。

そして、監査相手と比較して、これらの新しいイベントは情報がはるかに豊富で、監査では利用できなかったApple Watchを使用した自動ロック解除の可視性も提供します。

同様に、ユーザーセッションに可視性を追加しています。

ログインイベントは、コンソールでローカルに、またはサポートされているリモートアクセス方法の1つを介してリモートで、誰かまたは何かがシステムにログオンする状況をカバーしています。

これらのイベントは、OpenBSM監査証跡で利用可能なものを大幅に超えています。

これにより、エンタープライズフリート全体の横方向の移動など、システムへのアクセスをより包括的に可視化できます。

ゲートキーパーの使命の一部は、既知の悪意のあるソフトウェアを検出してブロックすることです。

macOS Ventura以降、Endpoint Securityは、悪意のあるソフトウェアの検出と、悪意のあるソフトウェアを停止および削除するためのアクションの両方を可視化します。

この情報は、以前は構造化された方法では利用できませんでした。

エンドポイントセキュリティAPIを通じて利用可能になりました。

これらの追加により、ほとんどのエンドポイントセキュリティクライアントは、非推奨のOpenBSM監査証跡に頼る必要がなくなります。

監査証跡はmacOS Big Sur以降非推奨となり、macOSの将来のバージョンで削除される予定です。

ミュートに移りましょう。

macOS Catalina以降、監査トークンまたは実行可能イメージパスによるミュートプロセスをサポートしてきました。

ミュートは、デッドロック、ハング、ウォッチドッグタイムアウトを防止し、エンドポイントセキュリティに基づいてソリューションのパフォーマンスへの影響を管理するための重要なツールです。

昨年のmacOS Montereyでは、デフォルトで実行可能ファイルの小さなセットのいくつかのイベントタイプをミュートすることで、システムの不安定性の頻繁な原因に対処し始めました。

ミュートを解除することは自由ですが、システムの安定性のためにミュートにしておくことをお勧めします。

macOS Venturaでは、ターゲットパスに基づいてミュートを導入することで、ミュートをさらに一歩進めています。

多くの実際のユースケースでは、これはミュートよりもメスのような精度を可能にします。

アプリケーションが受信に興味がない特定のパスまたはパスプレフィックスに関連するファイルイベントをミュートできるようになりました。

これは、ログファイルのイベントに興味がないときに、/var/logの下にターゲットパスを持つすべてのイベントをミュートする方法を示しています。

2番目の例は、es_mute_path_eventsを使用して、/dev/nullなどの単一のファイルへの書き込みイベントのみをミュートする方法を示しています。

さらに、ミュートロジックを反転させる可能性も導入しています。

指定されたプロセス、実行可能パス、またはターゲットパスに基づいてイベントを抑制する代わりに、これら3種類のミュートのいずれかを反転できるようになりました。

実際には、関心のあるプロセス、実行可能パス、またはターゲットパスを選択して、ミュートしたイベントを一致させるのではなく、一致するイベントのみを受信できるようになりました。

たとえば、これにより、特定の永続性の場所に対してのみファイルイベントを選択できるようになりました。

Es_invert_mutingを使用してターゲットパスのミュートを反転させる方法は次のとおりです。

次に、ミュートセットから既存のターゲットパスを削除し、関心のあるターゲットパスプレフィックスを持つイベントのみを選択します。

これにより、ミュート戦略が大幅に改善され、最終的にはエンドポイントセキュリティに基づく製品で優れたユーザーエクスペリエンスを簡単に提供できることを期待しています。

そして最後に、esloggerを導入します。

ネイティブクライアントを記述することなく、エンドポイントセキュリティイベントを提供する機能について多くの要求がありました。

macOS Venturaから、OSに深い内省をもたらすコマンドラインユーティリティを介して、エンドポイントセキュリティのパワーを活用することができます。

esloggerは、特定のイベントのエンドポイントセキュリティイベントストリームをタップし、JSON形式のイベントデータを標準出力または統合ロギングシステムに出力します。

データは、ネイティブクライアントが使用するC表現と同じように構造化されています。

esloggerは、エンドポイントセキュリティがmacOS Venturaでサポートする80のNOTIFYイベントをすべてサポートしています。

エスロガーが、エンドポイントセキュリティクライアントに取り組んでいるエンジニアだけでなく、macOSでセキュリティ関連のイベントを可視化する必要があるセキュリティアナリストやその他のセキュリティ実務家にとっても役立つことを願っています。

esloggerはOSに同梱されており、すでにエンドポイントセキュリティの資格があります。

すべてのエンドポイントセキュリティクライアントと同様に、esloggerはスーパーユーザーとして実行する必要があり、ユーザーはTerminal.appやSSHなどのフルディスクアクセスの責任あるプロセスを承認する必要があります。

Esloggerは、アプリケーションで使用されることを意図していません。

その出力はソフトウェアアップデートで変更される場合があります。

これは、エンドポイントセキュリティAPIとのネイティブインターフェイスと同じパフォーマンス特性または同じ機能セットを提供するものではありません。

アプリケーションは引き続きネイティブにインターフェースします。

邪魔にならないように、esloggerを使って新しいイベントのいくつかを探索しましょう。

esloggerを使用して、openssh_loginおよび_logoutイベントを購読し、出力をファイルにリダイレクトすることで、SSHセッションの開始と終了を記録します。

この他のタブでは、SSHを使用してローカルにログインし、再度ログアウトしています。

最初のタブに戻って、私はエスロガーを中断しています。

エンドポイントセキュリティのイベントデータを生のJSON形式で見てみましょう。

JSONデータを扱う自分の好きな方法がある可能性が非常に高いです。

ここでは、jqを使用してイベントをさらに調査します。

これはたくさんの情報です。

私はいくつかの興味深い分野にドリルダウンします。

すべてのエンドポイントセキュリティイベントと同様に、それらを放出したプロセスに関する情報があります。

両方のイベントがSSHデーモンによって発行されたことがわかります。

たとえば、監査トークンを検査して、イベントを発したプロセスのPIDを収集することもできます。

そして最後に、これらのイベントのイベント固有のフィールドを見てみましょう。

これは私のユーザーアカウントへのSSHログインに成功し、その後ログアウトしたことがわかります。

悪意のあるソフトウェアの動作を観察したい場合でも、検出アプローチをすばやくプロトタイプ化したい場合でも、この方法でエンドポイントセキュリティイベントを可視化する方法が大好きです。

お客様のセキュリティソリューションが新しいイベントと改善されたミュート機能を利用することを楽しみにしています。

WWDCにご参加いただきありがとうございます。

♪