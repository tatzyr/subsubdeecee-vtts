10096

こんにちは、私はプライバシーエンジニアリングのジャスティンです。「プライバシーの新機能」へようこそ。

Appleでは、プライバシーは基本的な人権であり、人々のプライバシーを保護することは私たちが行うすべてのことの中心にあると信じています。

あなたは人々にあなたのアプリを愛し、それを彼らの生活の一部にしたい。

優れた機能を構築することは、彼らの注意を引く方法であり、プライバシーを構築することは、彼らの信頼と彼らの生活の中であなたの場所を維持する方法です。

人々が彼らについてどのようなデータが収集され、それがどのように使用されるかを理解すると、代替手段を選択するのではなく、アプリやサービスに完全に関与する可能性が高くなります。

Appleでは、当社の製品を使用する人々のために優れた機能と優れたプライバシーを優先しており、これをお客様にもお届けできるよう支援したいと考えています。

Appleでは、一連の実用的なパターン、プライバシーの柱で、優れた機能と優れたプライバシーというこの目標にアプローチしています。

これらは、アプリにプライバシーを組み込む方法についても、あなたにとって素晴らしいガイドです。

1つ目はデータの最小化です。

機能を構築するために必要なデータのみを使用してください。

次はオンデバイス処理です。

この機能に機密データが必要な場合は、デバイスのパワーを使用してサーバーとの共有を回避してください。

3つ目は透明性と管理です。

機密データがデバイスから送信された場合は、何が送信され、どのように使用されるかを人々が理解し、制御できるようにしてください。

最後に、セキュリティ保護。

デバイスのオンとオフの両方で、転送中および保存中の機密データを保護します。

このビデオでは、あなたに影響を与えるいくつかのプラットフォームの変更、採用すべき新しいプライバシー強化機能、およびプライバシーに影響を与える重要な新機能について説明します。

まず、あなたのアプリに影響を与えるプラットフォームにやってくるいくつかの変更について話します。

iOS 16とmacOS Venturaには、いくつかの重要な変更が含まれています。デバイス名へのアクセスを制限する新しいデバイス名の資格。ロケーションインジケータは、コントロールセンターでアプリの帰属を表示するようになりました。より多くの場所で公証されたアプリの整合性を確認するゲートキーパーの改善。ログイン時にMacアプリを起動すると、追加を通知し、APIが簡素化されました。レガシーペーストボードアクセスには許可が必要です。

デバイス名アクセスの変更から始めます。

デバイスを簡単に識別できるように、Apple IDアカウントのユーザー名は、iOSのデバイス名の一部としてデフォルトで含まれています。

iOS 16以前は、UIDevice APIは、アプリがユーザーが割り当てたデバイス名にアクセスすることを許可しました。

この値のアプリアクセスをユーザーの期待によりよく合わせるために、UIDevice.name APIは、ユーザーがどのようにカスタマイズするかに関係なく、ユーザーが割り当てた名前ではなく、デバイスのモデルを返します。

一部のアプリには、ドキュメントが最後に編集された場所を人々に明確にするなど、デバイス名を利用するマルチデバイスエクスペリエンスがあることを理解しています。

アプリがマルチデバイス機能を使用し、これをアプリのUIに表示する場合は、デバイス名にアクセスするための資格を要求できます。

この資格があっても、クラウドホスティングサービスプロバイダー以外の第三者とデバイス名を共有することは許可されていません。

次に、ロケーション使用のアトリビューションの更新です。

アプリが位置情報を使用する場合、iOSはステータスバーに矢印を表示します。

iOS 16では、コントロールセンターから下にスワイプすると、どのアプリが位置情報を使用しているかがわかります。

人を驚かせるのを避けるために、アプリが予想されるときにのみ位置情報を使用することを確認してください。

さて、私はMacについて話したいと思います。

ゲートキーパーは、新しくダウンロードしたアプリの整合性をチェックします。

macOS Venturaでは、Gatekeeperは隔離されたアプリだけでなく、公証されたすべてのアプリの整合性をチェックします。

まず、アプリに適切に署名する必要があります。

macOS Ventura以降、公証されたアプリが有効に署名されなくなった場合、最初の起動時にGatekeeperによってブロックされます。

すべての実行可能ファイルとバンドルに署名し、アプリに変更を加えるときにそれらの署名が有効であることを確認する必要があります。

整合性チェックに加えて、ゲートキーパーはアプリが特定の方法で変更されるのを防ぎます。

アプリを変更する最も一般的な方法は、アップデートです。

同じ開発者アカウントまたはチームによって有効に署名されたアプリは、引き続き相互に更新することができます。

これはうまくいくでしょう。

他の開発チームがアプリを更新したり、アップデートをアップデータのみに制限したりできるようにするには、info-plistを更新できます。

たとえば、ここでは、無関係なアプリは、Pal Aboutがplistの変更だけで更新できるようにすることができます。

許可したいNSUpdateSecurityPolicyを追加するだけです。

NSUpdateSecurityPolicy内で、署名識別子の配列にチーム識別子をマッピングする辞書「AllowProcesses」を追加します。

この例では、このポリシーでは、署名識別子 com.example.pal.about が Pal About のチーム識別子によって署名されたプロセスがアプリを更新することを許可しています。

アプリが同じ開発チームによって署名されておらず、NSUpdateSecurityPolicyによって許可されていないものによって変更された場合、macOSは変更をブロックし、アプリが他のアプリを管理したいことをユーザーに通知します。

通知をクリックすると、システム設定に移動し、アプリが他のアプリを更新および変更することを許可できます。

macOS Venturaに備えるには、アプリの実行可能ファイルとバンドルに署名し、更新後もそれらの署名が有効であることを確認する必要があります。

使用するアップデーターを列挙し、NSUpdateSecurityPolicyを採用します。

アプリがポリシー外で他のアプリを変更しようとすると、ユーザーはこれを許可する必要があることを忘れないでください。

次に、Macのログイン時にアプリを起動することについて話します。

macOS Monterey以前では、誰かが自分のMacにログインすると、起動エージェントまたはデーモンを使用してログイン時にアプリを実行できます。

これは、アプリがメニューヘルパーを実行したり、バックグラウンドでソフトウェアアップデートを確認したり、複数のアプリ間でデータを同期したりできるため便利です。

ユーザーがMacにログインすると、関連性のないアプリが開いていて、邪魔になる場合があります。

さらに、アプリやその他のソフトウェアは、センサーや位置情報などのデータにアクセスできます。

実行中のものが見えない可能性があるため、これが起こっていることは必ずしも明らかではありません。

そして、開発者にとって、ログイン時に起動するためにどのメカニズムを使用するかは必ずしも明確ではありません:デーモン、エージェント、サービス管理...?

macOS Venturaでは、これははるかに簡単です。

macOS Venturaでは、新しい単一のAPIを使用して、ログイン時にアプリ、起動エージェント、またはデーモンを起動できます。

アプリはデフォルトでログイン時に起動することが許可され、ユーザーに通知されます。

アプリが昇格した権限を持つデーモンを必要とする場合、有効にするには管理者の承認が必要です。

通知をクリックすると、システム設定のログインアイテムペインが開き、システムで起動するアプリを管理できます。

上部はログイン時に実行されるアプリを制御し、下部はログイン時に実行される他の項目を制御します。

このペインは、エージェント、デーモン、SMLoginItems、ログイン時に開くために自分自身を追加するアプリなど、ログイン時にアプリを実行するさまざまな方法を制御するようになりました。

この新しいAPIを使用する方法は次のとおりです。

サービス管理フレームワークを使用すると、ログイン時にリソースを簡単に起動できます。

すべてのエージェントとデーモンはアプリバンドル内にあるため、インストーラーを使用して起動エージェントを作成したり、クリーンアップスクリプトを作成したりする必要はなく、これはMac App Storeアプリでも機能します。

アプリからSMAppService APIを呼び出して、通知を受け取ったときと、設定でアプリアイコンがどのように見えるかを制御します。

次はペーストボードアクセスです。

以前は、透明性通知は、編集オプションでペーストを押さなかったときに、アプリがペーストボードにアクセスしたときに人々に知らせました。

iOS 16では、システムは他のアプリによって書かれたペーストボードアイテムへのすべてのアクセスの意図を確認します。

アプリがUIPasteboard APIを使用してペーストボードアイテムの値にアクセスし続けると、システムはモーダルプロンプトを表示します。

このプロンプトがアプリに表示されないようにするには、3つの方法があります。

1つ目は、編集オプションメニューを使用することです。

2つ目は、キーボードショートカットを使用することです。

「採用する機能」セクションでは、3番目のオプション、新しいUIKitペーストコントロールについて説明します。

これらは、あなたが知る必要があるプラットフォームに来るプライバシーの変更です。

さらに、プライバシーでシームレスな体験をアプリに簡単に構築できる新しいプライバシー強化技術がいくつかあります。

UIKitの貼り付けコントロールについて話すことから始めます。

UIKitの貼り付けコントロールをアプリ体験に追加して、ユーザーがボタンを押すことで直感的にペーストボードにアクセスできるようにします。

UIKitペーストコントロールを採用することで、編集メニュー、キーボードショートカット、またはシステムプロンプトなしで貼り付けることができます。

システムは、ボタンが目に見えて表示され、タップされたことを確認することで、意図を確認します。

アプリのインターフェースに合うようにこれらのボタンをカスタマイズしてください。

丸みを帯びた角を変更したり、テキスト、アイコン、背景の色を変更したりします。

ボタンに十分なコントラストがあり、他の要素の後ろに隠されていないことを確認してください。そうしないと、機能しません。

貼り付けボタンが期待どおりに機能することを必ずテストしてください。

データアクセスを最小限に抑えながらシームレスな体験を生み出すもう1つのツールは、メディアデバイスの検出です。

今日のアプリは、カスタムディスカバリーとコミュニケーションロジックを備えた幅広いストリーミングプロトコルを使用しています。

以前にこれらのプロトコルの1つを使用してメディアをストリーミングするには、アプリはローカルネットワークにアクセスする権限が必要で、多くの場合、Bluetoothが必要でした。

デバイスの選択を管理するにはすべてのデバイスの知識が必要であるため、この許可が必要ですが、これは必要以上の情報へのアクセスを提供し、指紋採取のリスクをもたらします。

メディアデバイスの検出により、ネットワークやBluetoothアクセスプロンプトを表示することなく、選択したデバイスにアプリをストリーミングできます。

ストリーミングデバイスはAirPlayと同じピッカーに表示され、アプリはストリーミングするために選択されたデバイスのみが表示されます。

これは、DeviceDiscovery拡張機能のおかげで機能します。

この拡張機能はローカルネットワークとBluetoothデバイスを検索できますが、アプリとは別にサンドボックス化されているため、スキャン結果を送り返すことはできません。

これは、アプリがネットワーク全体を見ることができないため、アプリがローカルネットワークやBluetoothにアクセスするための広範な許可を必要としないことを意味します。

代わりに、拡張機能は検出されたアクセサリのみをDeviceDiscoveryExtensionフレームワークに送信できます。

DeviceDiscoveryExtensionフレームワークは、ピッカーで検出されたデバイスのリストを表示し、選択後、システムは選択したデバイスとの通信を可能にします。

他の許可は必要ありません。

プロトコルプロバイダーは、DeviceDiscoveryExtensionを使用してアプリ拡張機能を作成し、AVRoutePickerViewを拡張してユーザー選択コールバックを処理し、プロトコルでユーザーが選択したネットワークデバイスを処理し、サンプルアプリと拡張機能をダウンロードして詳細を確認する必要があります。

アプリ開発者は、ストリーミングプロトコルプロバイダーに連絡して、DeviceDiscoveryExtensionを実装する必要があります。

メディアデバイスの発見は、優れたプライバシーを備えた優れた機能を構築する機会です。

あなたのアプリは、ストリーミングに必要なデータに正確にアクセスできます - 発見はシンプルでプロンプトフリーで、人々は素晴らしいネットワークプライバシーを得ることができます。

これは誰にとっても勝利です。

メディアデバイスの発見がプロンプトなしで必要なデバイスのみにアクセスする権限を提供するように、PHPicker APIはプロンプトなしで必要な写真のみにアクセスする権限を提供します。

PHPickerは現在、macOS VenturaとwatchOS 9を搭載した時計でMac上にあります。

ユーザーにすべての写真へのアクセスを促すことなく、Macを更新し、アプリを見て写真にアクセスします。

次は、CAPTCHAが邪魔になることなく詐欺を防ぐための強力なツールであるプライベートアクセストークンです。

プライベートアクセストークンはCAPTCHAを置き換え、ウェブサイトやAPI開発者がそれらのデバイスを追跡せずに正当なデバイスを認識できるようにするブラインドトークンを使用して構築されています。

Appleは、デバイスがトークンを取得するウェブサイトを知りませんし、トークンを受け取るサーバーは、トークンを送信するデバイスの身元を学習しません。

プライベートアクセストークンは、プライバシーパスIETFオープンスタンダードの一部であり、プライベートリレーユーザーの信頼性を検証するために使用するのと同じ技術です。

詳細については、「CAPTCHAをプライベートアクセストークンに置き換える」というビデオをご覧ください。

今、私はPasskeysを調べます。

パスワードはアカウントを認証し、個人データを安全に保つための中心ですが、深刻な問題があります。

それらは覚えにくいので、人々はそれらをよりシンプルにしたり、複数のサイトで再利用したりします。

そして、彼らはフィッシングされる可能性があります。

パスキーは、より堅牢な認証ソリューションを可能にし、パスワードの自動入力と同じすぐに使い慣れたUIスタイルと生体認証を使用します。

パスキーは公開鍵暗号に基づいて構築されているため、サーバーが保存する価値は弱くなく、それが明らかにされた場合、それは本当に公開されているので問題ではありません。

パスキーは、対応するウェブサイトに本質的にリンクされているため、フィッシングすることはできません。

パスキーの実装の詳細については、完全なビデオ「Passkeysに会う」があります。これらは、あなたが採用するためのエキサイティングで重要なプライバシーアップデートです!

私が話したいもう1つの重要なことは、安全チェックと呼ばれるiOS 16の新しいプライバシーツールです。

安全チェックは、家庭内または親密なパートナーの暴力状況にある人々が、以前に他の人に許可した可能性のあるアクセスを見直し、リセットするのに役立つように設計されています。

安全チェックは、次の方法で役立ちます。FindMyで位置情報の共有をオフにし、写真、メモ、カレンダーでの共有を停止することで、人とのデータ共有を停止します。

すべてのサードパーティアプリのシステムプライバシー許可をリセットすることで、アプリとのデータ共有を停止します。

他のiCloudデバイスでFaceTimeやiMessageからサインアウトして、メッセージや通話が手元にあるデバイスにのみ確実に送信されるようにするのに役立ちます。

他のデバイスがFindMy、写真、カレンダーなどから位置情報の更新を受信できないように、他のiCloudデバイスからサインアウトする方法を説明します。

デバイスとiCloudアカウントの両方のパスワードを変更するのに役立ちます。

そして、iCloudの2要素認証のための信頼できる電話番号。

また、緊急連絡先を管理して、必要に応じて変更を加えるのに役立ちます。

これらすべてが一緒になって、個人の安全制御へのアクセスに対する脅威を持つ人々を助けます。

安全チェックを使用するには2つの方法があります。

1つ目は、人やアプリ間ですぐにアクセスをリセットする必要がある危機的状況のための緊急リセットです。

2つ目は、共有とアクセスの管理です。これは、安全チェックの各機能をよりきめ細かく制御します。

緊急リセットを使用すると、すべての人とすべてのアプリで迅速に行動を起こし、他のデバイスでFaceTimeとiMessageへのアクセスを無効にすることができます。

その後、iCloudアカウントを手元にあるデバイスに保護し、緊急連絡先と信頼できるデバイスを確認します。

共有とアクセスの管理では、人ごとに、アプリごとにレビューして、誰と共有しているかを確認できます。

名前または共有する情報の種類で並べ替えることができます。

これは、特定の人との共有を理解し、制御するための素晴らしいツールです。

また、デバイスにアクセスできる人がインストールした機密性の高い権限を持つアプリを見つけるのにも役立ちます。

クイック出口は、すべての安全チェックフローで利用でき、誰かが彼らが何をしているかを見るかもしれないと心配している場合、人々はすぐにフローから抜け出すことができます。

それを押すとホーム画面に戻り、次回設定を入力すると、安全チェックではなく、メイン設定ページに戻ります。

安全チェックは、家庭内または親密なパートナーの暴力状況にある人々が自分の個人データのコントロールを取り戻すのに役立ちます。

プライバシーとは、データを共有した瞬間に決定を下すだけでなく、いつでもその決定を理解し、変更できるようにすることです。

これは、Appleがプライバシーのためにどのように設計しているかの一例にすぎません。

アプリのプライバシーを設計することは、ユーザーとの信頼を築き、維持するのに役立ちます。

iOS 16とmacOS Venturaは、この旅に役立つ多くの新技術をもたらします。

UIデバイス名の変更やゲートキーパーの改善など、新しいプラットフォームのアップデートに備えてください。

メディアデバイス検出拡張機能、UIKitペーストコントロール、プライベートアクセストークン、パスキーを採用します。

今日は参加してくれてありがとう。

アプリに素晴らしい機能と素晴らしいプライバシーをどのように組み込むかを見るのが待ちきれません。

。