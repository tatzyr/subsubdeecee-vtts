10129

♪インストゥルメンタルヒップホップ音楽♪

♪

こんにちは、WWDCへようこそ。

私の名前はケイシーです。

あなたはすでにユニバーサルシーンの説明、またはUSDに出くわしたかもしれません。

拡張現実でUSDファイルとやり取りした可能性があります。

または、資産を他の形式から米ドルに変換した可能性があります。

しかし、USDファイルの中に本当に何がありますか?

USDはユニークな機能を備えた重要な技術なので、ボンネットの下を見て、一緒にUSDの基礎を探りましょう。

USDとは何かを学び、いくつかの基本的なUSDの概念を紹介し、USDでシーンを構成する方法を学び、USDファイル形式を理解します。

まず、米ドルとは何ですか?

USDは、私たちが愛する複雑な映画を作成できるようにピクサーアニメーションスタジオによって開発され、映画、エンターテイメント、その他の業界で広く使用されています。

それは設計によって拡張可能であり、協力的で重要なワークフロー技術として急速に浮上しています。

これは、映画業界での数十年にわたる制作経験に基づいて構築されたオープンソースプロジェクトであり、ゲーム、シミュレーション、AR、製造、電子商取引にますます採用されています。

USDには、シーンの説明仕様、API、レンダリングシステムの3つの中核的な側面があります。

アプリケーションはAPIを使用してUSDと対話します。

レンダリングシステムは、異なるレンダラーでシーンを視覚化するためのサポートを提供します。

Appleには、米ドル用の複数の異なるレンダリングシステムがあります。

詳細については、「USDツールとレンダリングを探索する」セッションをご覧ください。

このセッションでは、シーンデータの記述方法、構成方法、ファイル形式での表現方法に関するシーン記述仕様に焦点を当てます。

基本的に、これらのUSDファイルには、シーンがどのように見えるべきかを説明するデータが含まれています。

レンダリングアプリケーションはデータを解釈し、画面上に画像を生成します。

たとえば、昨年のWWDCセッションでは、このUSDシーンを作成し、Octaneでレンダリングしました。

それでは、基本的な概念に飛び込み、レンダリングの背後にあるデータについて学びましょう。

物事をシンプルにするために、テキストUSD表現を使用します。USDには、私たちが話したいクールな機能がたくさんありますが、時間のために、ステージ、プリム、レイヤーなど、USDでの作業中に最も一般的に遭遇する可能性のある重要な機能に焦点を当てます。

ステージから始めましょう。

私たちが劇場で演劇に出席していると想像してみてください。

観客として、私たちは舞台を観察して俳優の演技を見て、環境、照明、小道具に気づきます。

これは、ステージが米ドルでどのように機能するかの良いアナロジーです。

ステージは、すべてのシーン要素が一緒になる階層的な方法でグラフィカルな情報を整理するシーングラフ、またはデータ構造です。

ステージは、通常、シーン情報を含むファイルである1つ以上のレイヤーの構成です。

一般的に、ステージはシーンの主要なコンテナオブジェクトであるプリムで構成されています。

プリムには、シーン要素の階層を作成するために、他のプリムを含めることができます。

例を見てみましょう。例を見てみましょう。

左側にはサンプルのUSDレイヤーがあり、右側にはステージのプレビュービジュアル表現があります。

球体と立方体の2つのプリムが見えます。

各プリムには、ステージ上で表すものを定義する特定のタイプがあります。

メッシュ、ライト、素材など、ステージを構成するさまざまな種類のプライムがあります。

この例では、球プリムには「スフィア」というタイプがあり、キューブプリムには「キューブ」というタイプがあります。

しかし、これは良い質問を提起します。

USDはこれらのプリムタイプが何を意味するのかをどのように知っていますか?

USDはスキーマの使用を通じてこれを知っています。

スキーマは、ステージ上のプリムの役割を定義する構造化データです。

それらは、幾何学、材料などの一般的なシーンの概念に意味を提供します。

この例では、球体のスキーマ定義を次に示します。

これは、すべての球が半径と境界ボックスの範囲を持っていることを定義します。

既存のスキーマを使用すると、USDはシーンを記述するための組み込みタイプの豊富な基盤を提供します。

カスタムスキーマを使用すると、米ドルをさらに拡張できます。

独自のユースケースとワークフローのカスタムデータを表す独自のスキーマを提供できます。

スキーマは視覚的な表現を持つ必要はありません。

それらは、構造化された有意義な方法でステージで取得したいデータになることができます。

たとえば、ここでは「WWDC」という新しいスキーマを作成しました。

それはタイトルとそれに関連付けられた年を持つプリムを定義し、ここにはスキーマを使用する「WWDC22」と呼ばれるプリムがあります。

年は2022年に設定され、タイトルは「Call to code」に設定されています。

年とタイトルはプリムの「属性」と呼ばれます。

プリムは多くの異なる属性を持つことができます。

各属性には型と値があります。

属性はデフォルト値を作成することもできるので、スキーマを使用するプリムで明示的に定義する必要はありません。

Sphereスキーマに戻ると、半径属性と範囲属性のデフォルト値をどのように定義したかを確認できます。

このレイヤーには、単一のスフィアプリムがあります。

Radius属性は設定されていないため、Sphereスキーマから値を導き出します。デフォルトの半径は1です。

ただし、明示して、radius属性を設定できます。

この値はスキーマで設定された値のデフォルト値と一致するため、球は依然として同じように見えます。

次に、2番目の球体を追加し、半径を0.5に設定しましょう。

実際には他の球の半分の大きさであることがわかります。

属性、プリム、およびステージには、シーンの一部に補助データを提供できる情報のキーと値のペアリングであるメタデータを含めることもできます。

メタデータは、適用されるレベルで設定されます。

ステージ全体とその中のすべてのプリムに影響を与えるメタデータは、ステージレベルで設定されます。

単一のプリムに固有のメタデータは、プリムに設定されます。

属性はメタデータを持つこともできます。

たとえば、典型的なステージメタデータがあります。

metersPerUnitは、シーンのスケール単位を定義します。

upAxisは、X、Y、またはZ軸のどれがシーン内のカメラの上向きと見なされるかを定義します。

ドキュメント文字列は、ワークフロー追跡の目的で有用なドキュメントを保存します。

これらの基本を定義したので、すでにUSDを使い始めることができます。

これらの概念だけでパンケーキシーンがどのように行われるか見てみましょう。

私たちのレイヤーでは、「パンケーキ」と呼ばれるトランスフォームプリムを作成します。

次に、パンケーキプリムの子である「Blueberry_01」と呼ばれる変換プリムを追加します。

Blueberry_01プリムには、メッシュプリムが含まれています。

メッシュプリムはブルーベリーのジオメトリを保持し、材料に結合します。

他のプライムを追加して、残りの資産を完成させましょう。

これは、これらの基本的な概念だけを使用して、完成したパンケーキシーンです。

これらのファンダメンタルズは遠くまで行くことができますが、生産中心のプロジェクトでは、多くの異なるチームメンバーや組織と協力する必要があります。

USDには、いわゆる「構成」でこのニーズに対処するための多くの機能があります。

コンポジションは、シーンの説明の別々の単位からステージの作成を可能にします。

これにより、コラボレーションと高速反復を可能にするシーンでの3D要素の効率的な再利用が可能になります。

最も一般的なタイプのコンポジションについて、レイヤー、リファレンス、ペイロード、バリアントセットについて説明します。

でも、楽しい方法でやりましょう。

チェスのゲームが好きですか？

チェスセットのシーンを作りましょう。

シーンでは、チェスの駒を参照するカタログレイヤーのアセットのカタログを使用します。

次に、チェス盤上のこれらのピースをレイアウトレイヤーに配置して、ChessSetレイヤーで表示可能な最終結果を取得します。

チェスでは、まずチェスの駒を手に入れる必要があります。ポーン、ルーク、ビショップ、ナイト、クイーン、キングの6つの主要なピースがあります。

オブジェクトキャプチャで作成されたこれらのアセットを使用して、完全なチェスセットを構築します。

USDのコンセプトを使用して、私たちの作品をステージに持ち込むことから始めましょう。

参照とは、ステージのプリムが、データをコピーせずに同じステージまたは別のレイヤーの別のプリムを参照する場合です。

これにより、データの重複を最小限に抑え、異なる人やアプリケーションによってデータを別々に更新することができます。

ポーン資産をシーンに参照しましょう。

カタログレイヤーでは、「ポーン」と呼ばれるプリムを定義します。

これまでのところ、データがないので、私たちのステージはまだ空です。

次に、Pawn.usdaレイヤーへの参照を追加します。

これにより、ポーンアセットがもたらされ、カタログレイヤーで見ることができます。

しかし、USDは、参照するファイルからどのプリムを持ち込むべきかをどのように知っていますか？

このプリムはdefaultPrimメタデータで指定できます。

defaultPrimメタデータはステージで定義され、別のステージでこのシーンを使用するときに参照するプリムを指定します。

常にUSD資産のdefaultPrimを作成することをお勧めします。

ポーンアセットをチェックして、defaultPrimが作成されていることを確認しましょう。

資産のステージレベルでdefaultPrimメタデータを確認できます。

すごい。

または、defaultPrimがオーサリングされていない場合、またはdefaultPrimとは異なるプリムを参照したい場合は、階層の任意の場所で、参照レイヤーでプリムへのパスを明示的に指定できます。

USDのパスは、ステージ上の要素を識別するために使用されます。

プリムパスは、プリムの一意の識別子です。

例えば、このステージでは3つのプリムが見えます。

ワールドプリムには/ワールドのプリムパスがあります。

ポーンとナイトプリムは、世界のプリムの子供と考えられています。

したがって、ポーンプリムへの道は/World/Pawnになり、ナイトプリムへの道は/World/Knightになります。

それを念頭に置いて、ここでの参照でポーンプリムへのプリムパスを明示的に設定できます。

より大きなシーンの場合、すべてのシーン情報を一度に読み込むのは費用がかかる場合があります。

このため、USDは「ペイロード」と呼ばれるタイプの参照を持つステージへのシーンの説明の遅延ロードを可能にします。

複雑なジオメトリなどの大きなデータセットや、小道具やキャラクターを表す他の大きなシーングラフを参照する場合は、ペイロードを使用することをお勧めします。

代わりに、これらのアセット参照をペイロードに変換するので、チェスの駒のロードを延期することを選択できます。

ペイロードをロードしないことを選択した場合、最初に開いたときにシーンが空のまま表示されます。

ペイロードのロードを有効にすると、すべてのピースを再び見ることができます。

今、私たちはシーンに私たちの作品を持っているので、私たちはチェスボードにそれらをレイアウトし始めることができます。

レイヤーのUSDコンセプトを使用して、さらに別のレイヤーでこれを行うことができます。

レイヤーを使用すると、PhotoshopやAffinity Photoなどの一般的な画像編集ソフトウェアパッケージと同様に、レイヤーを積み重ねることができます。

別のレイヤーの上にあるレイヤーのプリムは、より強いと見なされ、下位レイヤーのデータを追加またはオーバーライドすることができます。

ご覧のとおり、作品は現在間違った場所にありますが、心配しないでください。レイヤーを使用して他のレイヤーに非破壊的な変更を加えることができます。

これは、カタログレイヤーを編集せずに作品を適切な位置に移動するのに最適です。

これがどのようにできるか見てみましょう。最後のシーンとなるChessSetと呼ばれる新しいステージを作成することから始めます。

レイヤーの上部に「サブレイヤー」と呼ばれるメタデータが含まれています。

ここでは、カタログレイヤーで私たちの作品を持ってきます。

次に、ピースを移動するために使用する新しいレイヤーLayout.usdaを作成します。

このレイアウトレイヤーには、チェスの駒の位置が含まれます。

シーン内の私たちの作品の位置をオーバーライドしましょう。

Pawn_01から始めます。

翻訳属性を変更して、ポーン資産の位置を変更します。

これが私たちのシーンをどのように更新するかを見てみましょう。

ここでは、レイアウトレイヤーなしで再びチェスセットがあるので、ポーンはまだ元の位置にあります。

レイアウトレイヤーを追加すると、ポーンはチェス盤上の予想される位置に移動されました。

他の作品にも同じことをして、正しい場所に移動しましょう。

私たちは、ポーンを配置するのと同じように、他のチェスの駒を配置します。

Pawn_02のやり方は次のとおりです。

そして、再びPawn_03などのために。

レイアウトレイヤーの変更を完了し、チェスの駒を正しい場所にセットしました。

私たちはチェスセットの半分を作っています。

レイヤーを使用してカタログレイヤーでアセットを持ち込み、オーバーライドを使用してレイアウトレイヤーでボードに配置します。

残っているのは、相手側のためにピースを設定することだけです。

注意すべき点の1つは、相手の駒は色が違うということです。

新しい資産セットを作成する代わりに、別のUSDコンセプトであるvariantSetsを使用してチェスピース資産を更新できます。

VariantSetは、ステージ上の個別の代替案の動的スワップを可能にします。

バリアントセットに含まれるバリアントは、異なる材料、ジオメトリ、または米ドルで表現できるものなら何でもかまいません。

ステージ上の異なるバリアントを切り替えることは非破壊的です。

チェスの駒の異なる材料を切り替えるためにバリアントセットを設定します。

ポーンアセットでは、「色」と呼ばれるバリアントセットを追加して、ポーンの異なる色を切り替えることができます。

次に、バリアントセットに2つのバリアントを追加します。ダーク素材を使用したダークとライト素材を使用したライトです。

最後に、デフォルトのバリアントを設定して、ポーンをステージにロードするときにどちらを使用するかを指定します。

今、私たちはカタログレイヤーに戻ってきました。

私たちはボード上のすべてのピースを設定しましたが、それらはすべて軽い素材を使用しています。

これは、デフォルトのバリアントが軽い素材に設定されているためです。

ポーンの1つの変種を暗い素材に変えましょう。

バリアントをダークに設定しました。

相手側のポーンの1つが暗くなっていることがわかります。

この変更を他の作品にも適用しましょう。

最後に、私たちはチェスセットを完成させました。

シーンを最適化するために使用できるUSDのコンセプトがもう1つあります。シーングラフのインスタンス化です。

シーングラフのインスタンス化により、ステージ上のシーングラフの一部を何度も再利用して、葉、家具、または私たちの場合はチェスの駒などの複数のものを含むものを表現できます。

シーングラフのインスタンス化を使用すると、アプリケーションのメモリとパフォーマンスの両方が向上します。

シーングラフのインスタンス化を使用するには、プリムまたはシーングラフの一部にインスタンスメタデータを指定できます。

インスタンス化されているすべてのプリムは、同じシーングラフを共有するための候補です。

私たちのシーンにプリムインスタンシングのサポートを追加しましょう。

カタログファイルでは、チェスの駒のプリムにメタデータ「instanceable」を追加し、値をtrueに設定します。

このメタデータを追加することで、USDはこれらの資産を、各プリムのデータを複製するのではなく、同じデータを共有する潜在的にインスタンス可能なプリムとして扱います。

私たちのチェスセットはまだ同じように見えますが、今ではよりパフォーマンスが高く、メモリ効率が向上しています。

これで、チェスセットは終わりです！

それは素晴らしく見え、私たちは多くのUSD機能を行使しました。

レイヤー化、参照、ペイロード、バリアントセットは、USDが定義する構成の種類のほんの一部です。

一貫したシーン表現を確保するために、USDがシーングラフを構成する特定の強度の順序があります。

構成と注文の頭字語LIVRPSの詳細については、ピクサーのUSDドキュメントで学ぶことができます。

このセッションでは、USDファイルの中身について話しました。

それでは、ファイル自体と、それらがディスクにどのように表示されるかについて話しましょう。

USDファイルにはいくつかの種類があります。

読み取り可能なASCIIテキストを含むUSDファイルには、拡張子が.usdaでした。

このセッションでは、これらのファイルをずっと使用しています。

よりコンパクトで効率的なバイナリ表現は、.usdc拡張子を持つクレート形式です。

拡張子が.usdのファイルもあるかもしれません。

これらは、ASCIIテキストまたはバイナリクレートファイルのいずれかです。

最後に、USDには、.usdz拡張子を持つ非圧縮zipアーカイブに、複数のUSDファイルとテクスチャなどの関連する補助ファイルを含めることができるパッケージ形式があります。

今日は、ステージ、レイヤー、プリム、スキーマ、属性、メタデータなど、USDの基本的な概念について学びました。

これらの概念を使用してチェスセットを構築し、参照、ペイロード、defaultPrim、プリムパス、レイヤー、およびインスタンス化を利用しました。

最後に、.usda、.usdc、.usd、.usdzのさまざまなUSDファイル形式について議論しました。

ピクサーのUSDドキュメントでこれらの概念について詳しく学び、アプリケーションでUSDの機能を最大限に活用することをお勧めします。

ありがとう！

♪