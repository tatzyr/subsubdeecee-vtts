10028

♪インストゥルメンタルヒップホップ音楽♪

こんにちは、ShazamKitチームのエンジニア、ニール・フォーリーです。

2021年には、ShazamKitを導入し、Shazamの膨大な録音音楽カタログとオーディオを一致させることができます。

また、カスタムカタログマッチングを導入し、開発者が自分のオーディオを一致させ、同期された体験を提供できるようにしました。

現在、カスタムカタログの作業を大規模に合理化する重要なアップデートがいくつかあります。

このセッションでは、署名、カタログ、メディアアイテムなど、既存のShazamKitの概念の一部を使用します。

まだそれらに慣れていない場合は、WWDC21の「Explore ShazamKit」と「ShazamKitでカスタムオーディオ体験を作成する」の講演をチェックしてください。

しかし、簡単な概要として、ShazamKitを使用すると、オーディオを一致させることができる特別な形式に変換できます。

私たちはこれらの署名を署名と呼んでいます。

署名は、メタデータを含むメディアアイテムと組み合わせて、参照署名を形成することができます。

また、参照署名は、カスタムカタログと呼ばれるファイルに一緒に保存できます。

私たち全員が追いついたので、カスタムカタログを大規模に構築し、素晴らしいカタログを作るためのヒントやコツについて話します。

今日のカスタムカタログワークフローでは、一致させたいコンテンツが少量ある場合、カスタムカタログでの作業は簡単な作業です。

これらの手順に従うだけです。

ShazamKitが受け入れる形式でオーディオを録音してください。

署名ジェネレーターを使用して署名に変換します。

メタデータで注釈を付け、カスタムカタログに保存します。

そして、それだけです、あなたはShazamの経験を提供することができます。

しかし、これらのステップのいくつかは、特にオーディオプログラミングに精通していない場合、困難な場合があります。

サンプルレートとバッファーを扱うことは、最も経験豊富な開発者にとっても難しい場合があります。

そして、テレビ番組の10シーズンのように、Shazamableにしたい膨大な量のコンテンツがある場合、どうなりますか?

このワークフローは苦痛になる可能性があります。

また、大量のコンテンツがある場合、すぐに管理できなくなる可能性があります。

このワークフローを自分で改善することを考えているなら、おそらくオーディオを署名に変換するコード、メディアアイテムをロードして関連付けるためのより多くのコードを書く必要があり、コンテンツを変更するたびに作業を繰り返す必要があります。

オーディオを一致させたいとき、これは大きな投資です。

そして、ShazamKitとコンテンツを同期したい場合は、何をいつ表示すべきかを把握するための複雑なロジックが必要です。

このワークフローを合理化するShazamKitにいくつかの大きな機能強化を紹介します。

しかし、まずは簡単なデモです。

ここには、数学のクイズと画面上のレッスンを同期させる、アレックスが2021年に実演したFoodMathアプリがあります。

最新のShazamKit機能で更新し、FoodMathのビデオを再生して、どのように同期するかを確認します。

26秒にスキップします。

2、3つの青リンゴ。

リンゴは全部で何個ありますか？

あなたのタイマーが始まります...今。

よし、時間だ。あなたがどうやったか見てみましょう。

56秒にスキップします。

今日、それを少しスパイスアップするために、私が店に行ったとき、2つの赤いリンゴから始めました...

そして、私は青リンゴを2つ買いました。

今回は全部で何個のリンゴを持っていましたか？

あなたのタイマーが始まります...今。

よし、時間だ。

うまくいっているようです。

ビデオと同期した豊富なコンテンツがあり、私が「今」と言ったとき、メニューは正確に適切なタイミングで表示されました。

また、コンテンツが関連性がなくなったとき、それはキューですぐに消えました。

しかし、それはどのように機能しますか?

コードを見てみましょう。-コードを見てみましょう。

単純なループがあります。

以前に使用したデリゲートコールバックの代わりに、セッションでAsyncSequenceを使用します。

シーケンスは、一致、一致なし、またはエラーを表す列挙型を返します。

私は試合にしか興味がないので、ループをそのケースに制限しました。

そして、ディスプレイの結果を構築するために、メディアアイテムを必要なコンテンツに減らします。

実際には、アプリで見るべきものはあまりなく、私たちが作成したmatchResultによって駆動されるSwiftUIビューだけです。

複雑なロジックやタイミングコードはなく、完璧に同期します。

だから、質問は残っています、それはどのようにそんなにうまく同期するのですか?

FoodMathsの秘密は、経験を推進する豊富なカスタムカタログです。

ShazamKitを補完するために構築したシンプルなツールでカタログを作成しましたが、独自のアプリで豊かな体験を作成するためにも使用できます。

Shazam CLIはmacOS 13の一部として出荷され、コンテンツを同期する簡単な方法を提供します。

これは、カスタムカタログの作成に関連する反復的なタスクの一部を自動化するのに役立ちます。

先ほどお見せしたカスタムカタログを更新しましょう。

別のデモの時間です。

これはFoodMathビデオファイルを含むフォルダで、これは同じフォルダにある私の端末です。

CLIを使用して、署名コマンドを使用してビデオを署名に変換します。

ビデオファイルを入力として渡し、署名出力を指定するだけです。

わかりました。私たちの署名があります。

今、私はこの署名をメディアアイテムと組み合わせてカスタムカタログを作りたい。

CLIは、ここでコピーするメディアアイテムを記述するための簡単なカンマ区切りファイルを受け入れます。

コンテンツを同期するために必要なことをすべて説明しています。

ここに私のタイトルを指定しました、そしてここに私が方程式のために定義したカスタムJSONフィールドがあります。

ヘッダーはメディアアイテムのプロパティにマップされます。

マッピングの詳細については、ヘルプフラグを使用してカスタムカタログ作成コマンドを実行します。

Csvヘッダーとメディアアイテムのプロパティの関係について説明します。

今、私はそれらをカスタムカタログにまとめたいです。

だから、私は作成コマンドを実行します。

署名ファイルとcsvファイルを渡すと、カタログが出力されます。

さて、今、私たちはカタログを持っています。

エキサイティングなことに、私は最新のFoodMathエピソードに早期にアクセスできるので、それをカタログファイルに追加したいです。

ここでファイルをコピーさせてください。

これが新しいエピソードのメディアアイテムです。

更新するビデオ、新しいメディア、カタログを渡す更新コマンドを実行します。

さて、カタログを更新しました。

それはカタログを作成する方法の簡単な概要ですが、あなたが私のような人なら、あなたは本当にこれをスクリプト化したいと思うでしょう。

FoodMathアプリには実際にはかなりの数の新しいエピソードがあり、それらをすべてこのカタログに追加したいと思います。

私はすべてのエピソードフォルダをループし、それらをカスタムカタログにまとめる本当にシンプルなスクリプトを書きました。

今それを実行します。

行くよ。

現在、すべてのFoodMathエピソードを表す1つのカタログがあり、スクリプトはdisplayコマンドを使用してカタログの中身を詳述しました。

私たちはすべてを持っていると思います。

Foodmathプロジェクトはすでに私たちの新しいカタログを参照しています。

だから、数学を楽しめるように構築して実行しましょう。

30秒にスキップします。

リンゴは全部で何個ありますか？

あなたのタイマーが始まります...今。

よし、時間だ。あなたがどうやったか見てみましょう。

私はあの男が好きです。それは素晴らしいエピソードです。

新しいエピソードはどうですか？それを試してみましょう。

15秒にスキップします。

長年にわたり、私はワカモレを本当に美味しくするものを探求し、お気に入りのワカモレのレシピを書き留めました。

アボカドが4個です。

明日、私の友人が訪問します。

だから私たち2人のために、私は部分の半分を作るだけでいい。

アボカドは何個必要ですか？

タイマーが始まります...今。

その通りです。アボカドが2つ必要です。

このワカモレを一緒に作りましょう。

これを試してみましょう。

うーん。それは素晴らしいことが判明しました。楽しんで、また次回お会いしましょう。

ああ！

彼らには新しいホストがいます。おもしろ。

とにかく、私はすぐに豊かな同期体験を作り出しました。

Shazam CLIは、豊富なコマンドセットをサポートしています。

それらを調べてみましょう。

オーディオトラックを持つ任意のメディアファイルから署名を作成できます。

署名とメディアアイテムを組み合わせることで、カスタムカタログを作成できます。

カタログの内容を表示できます。

署名とメディアアイテムの両方を追加、削除、エクスポートします。

次に、CLIがFoodMathのビデオから署名をどのように作成したかについてです。

SHSignatureGeneratorには、すべてのプラットフォームで利用可能なメソッドsignatureFromAssetがあります。

この方法では、メディアからオーディオバッファを手動で引き出すことはもうありません。

オーディオトラック付きのAVAssetを渡すだけで、署名に変換できます。

アセットに複数のトラックがある場合、それらは一緒に混在し、署名がすべてを確実にキャプチャします。

さて、メディアを表す署名がわかったので、どのようにしてコンテンツを正確に同期しましたか？

Timed MediaItem APIを使用しました。

メディアアイテムに時間範囲を添付すると、いつ開始し、いつ終了するかを簡単に指定できます。

メディアアイテムは、署名の複数の部分をターゲットにするために複数の時間範囲を持つこともできます。

曲のコーラスをターゲットにしたメディアアイテムがあると想像してみてください。

歌われる場所ごとに時間範囲を追加できます。

時間範囲を指定することは、開始時と終了時に通知された場合にのみ便利です。

ShazamKitは、開始時と終了時にタイムレンジと同期したマッチコールバックを提供します。

署名には多くのメディアアイテムを含めることができるため、このコールバックには、その特定の時点で範囲内にあるメディアアイテムのみが含まれます。

メディアアイテムがコールバックとその順序で返される簡単なルールがいくつかありますので、それらについて確認してみましょう。

時間範囲外のメディアアイテムは返却されません。

時間範囲内のメディアアイテムが返却され、最新のイベントが最初に行われます。

そして最後に、時間範囲のないメディアアイテムは常に最後に返されますが、順序付けられません。

時間範囲のないメディアアイテムは、参照署名全体に適用されるグローバル情報を保存するのに最適な場所です。

私のFoodMathの例では、エピソードの名前を保存するために使用しました。

他のメディアアイテムが範囲内にない場合に表示されます。

最後に、すべてのメディアアイテムに時間範囲があり、どれもスコープにない場合、ShazamKitは常に基本的なマッチ情報を含むメディアアイテムを返します。

このようにして、predictedCurrentMatchオフセットやfrequencySkewなどの重要なプロパティを常に取得できます。

そして、コードでは、それも簡単です。

時指定メディアアイテムは、timeRangesメディアアイテムプロパティを指定することで作成されます。

それはスウィフトの範囲の配列です。

また、timeRangesプロパティを使用して読み返すこともできます。

そして、Objective-Cプログラマーにとって、代替品として新しいSHRangeクラスがあります。

それらを構築する方法を見たので、素晴らしいカスタムカタログを作るためのいくつかのヒントとコツを探りましょう。

1つのメディアに多くの小さな署名を作成することは避けてください。

シグネチャは、それが表すメディアへの1対1のマッピングであるため、曲やビデオなど、オーディオの各部分について、全期間にわたって1つのシグネチャを作成します。

より長い署名は、ShazamKitがオーディオピークに一致するより多くの機会を提供し、精度が向上します。

また、クエリ署名が複数の参照署名と重なる問題も回避できます。

新しいTimed MediaItem APIを使用すると、同期されたコンテンツを個々の領域にターゲットにすることができます。

オーディオの一部を複数の署名に分割する必要はありません。

1つのメディアがあるが、複数のメディアアイテムがある例を示しました。

しかし、Shazamableにしたい膨大な量のコンテンツがある場合はどうすればよいですか?

どうやって分ければいいの？

カスタムカタログ間でコンテンツを分割する際に必要なトレードオフがあります。

メディアアセットごとに個別のカタログを作成する場合は、正しいカタログを読み込むことができるように、どのオーディオが再生されているかを知る必要があります。

そして、それらをすべて1つのカタログにまとめると、より大きなダウンロードとより多くのメモリが使用されますが、より多くのオーディオを一致させることができます。

私たちのアドバイスは、作成したカタログファイルをしっかりと集中しておくことです。

たとえば、音楽トラックごとのカタログやアルバム全体ですが、アーティストのディスコグラフィー全体ではありません。

物事を別々にしておくことは、実行時に何をロードするかを決定できることを意味します。

カスタムカタログ追加APIでそれを行うことができます。

試してみて、ユースケースに役立つかどうかを確認してください。

同じサウンドの複数のオーディオアセットがあり、常に同じイントロ音楽で始まるショーがあり、各エピソードのカスタムエクスペリエンス、または別のトラックでサンプリングされた曲を提供したい場合は、周波数スキューを差別化要因として使用することを検討してください。

スケウイングオーディオは、録音中の周波数を上げたり低めたりしています。

これを行うと、オーディオの音に影響しますが、十分な量で行うと、ShazamKitによって認識されますが、平均的な人間の耳では認識されません。

したがって、オーディオ録音を取る場合は、そこからカスタムカタログを作成し、わずかにシフトした周波数で再生します。ShazamKitは依然としてオーディオと一致し、frequencySkewプロパティを介してスキュー量も報告します。

コードでそれを行う方法は次のとおりです。

変更が人間の耳に顕著になったり、ShazamKitに認識できなくなることなく、オーディオを歪めることができる量には制限があります。

歪みを5%未満に保つことは安全であり、複数の歪んだ録音を区別するのに十分なスペースを提供する必要があります。

これを実際に利用するには、frequencySkew範囲を使用してください。

メディアアイテムは、指定されたスキュー範囲内にある場合にのみ返されます。

範囲は、オーディオがオリジナルとどれだけ異なるかをパーセンテージで指定します。

値 0 はオーディオの歪みがないことを示し、0.01 の値は 1 パーセントのスキューを示します。

frequencySkewRangesプロパティを使用して、メディアアイテムのプロパティにアクセスできます。

アプリでこれを機能させる手順を説明します。まず、元のオーディオ録音の参照署名を作成します。

次に、メディアアイテムを取り、周波数スキューによって3〜4%に制限します。

これをカスタムカタログの中に入れてください。

次に、3〜4%歪んだオーディオを再生すると、メディアアイテムが返されます。

範囲外で歪みのない、または歪んだオーディオを再生すると、メディアアイテムは返されません。

それは周波数の歪みです。

今年のShazamKitのエキサイティングなアップデートを見たので、あなたはいくつかの素晴らしい同期体験を作る準備が整いました。

したがって、これらのベストプラクティスを覚えておいてください。まず、メディアアセットごとに1つの署名を作成します。

ShazamKitとよりシンプルな作成パイプラインから、より良い精度が得られます。

SHSignatureGenerators signatureFromAssetで署名を作成します。

多種多様なメディアを受け入れるため、低レベルのオーディオの詳細を扱う必要がなくなります。

新しいTimed MediaItem APIを使用して、同期されたコンテンツを関心のある領域にターゲットにします。

シンプルなAPIと優れた精度を兼ね備えています。

そして最後に、Shazam CLIでカスタムカタログの作成方法を合理化しましょう。

膨大な量のメディアを扱う手間を省き、代わりに作りたい素晴らしい体験に集中できるように設計されています。

ShazamKitの最新のアップデートを楽しんだことを願っています、そして私はあなたがすべてをShazamableにするのを見て興奮しています。

議論したすべての情報とドキュメントへのリンクは、このセッションに添付されています。

参加してくれてありがとう。WWDC22の残りの部分をお楽しみください。♪ ♪