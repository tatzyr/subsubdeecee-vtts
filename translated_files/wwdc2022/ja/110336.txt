110336

♪ ♪

みなさん、こんにちは。私の名前はMaryAshley Etefiaで、スクリーンタイムのソフトウェアエンジニアです。

COVID-19のパンデミックは、デジタルヘルスと生産性のリソースに対する需要の高まりに対応するために、私たちの業界に大きな圧力をかけました。

パンデミックは社会のバランスの必要性を強化し、誰もが自分のスペースをうまく管理する能力をテストしました。

昨年、すべてのスクリーンタイムAPIを紹介しました。これにより、ユーザーが子供とデバイスとの関係を管理するのに役立つ新しいアプリを構築できます。

私たちは、皆さんが私たちの製品を利用した創造的で生産的な方法を見てとてもうれしかったです。

あなたが私たちの考え方の文化を受け入れているのを見ると、私たちは興奮します。

また、過去1年間に受け取ったフィードバックにも非常に感謝しています。

iOS 16のScreenTime APIの新機能を紹介する前に、まずiOS 15リリースのハイライトをいくつかまとめたいと思います。

昨年のスクリーンタイムAPIは、ファミリーコントロール、管理設定、デバイスアクティビティの3つの新しいフレームワークを導入しました。

iOS 15では、これらのフレームワークはペアレンタルコントロールアプリに新しい機能をもたらしました。

記憶を呼び起こすために、3つすべてをざっと見てみましょう。

ファミリーコントロールは、スクリーンタイムAPIへのアクセスを許可するため、本質的にゲートウェイです。

このフレームワークにより、ペアレンタルコントロールアプリの削除を防ぐことができ、アプリやウェブサイトを識別するために使用される不透明なトークンを提供することで、ユーザーのプライバシーを保護しました。

ManagedSettingsを使用すると、アプリはスクリーンタイムと同様に制限を適用し、Webトラフィックをフィルタリングし、アクティビティをシールドできますが、アプリのブランディングと機能でカスタマイズできます。

デバイスアクティビティフレームワークでは、タイミングウィンドウの開始時と終了時、およびアプリやWebサイトの使用がしきい値を超えたときにコードを実行できます。

これら3つのフレームワークのそれぞれには、iOS 16でいくつかのエキサイティングな新しいアップデートがあります。

これらのアップデートは、APIをより使いやすくするだけでなく、ユーザーのエクスペリエンスを向上させます。

デモアプリケーションであるWorklogを使用して詳細を説明します。

Worklogは、特定の使用指標が満たされるまで、特定のアプリへのアクセスを制限することで、新しい専門家にとって良い習慣を奨励します。

このiPhoneの所有者であるAniyahが、iOS 16のScreenTime APIを使用して自分自身にこれらの制限を課す方法をお見せしたいと思います。

ファミリーコントロールから始めましょう。

iOS 15を覚えていれば、Family ControlsはiCloud認証を介してのみ子デバイスを認証することができました。

iOS 16では、ファミリーコントロールが自分のデバイスから独立したユーザーを承認できるようになりました。

この新しい承認方法は、スクリーンタイムAPIを使用して、単なるペアレンタルコントロールアプリ以上のものを構築できることを意味します。

既存のペアレンタルコントロール認証とは異なり、個々の認証はデバイスごとに任意の数のアプリで使用できます。

また、個々の承認はペアレンタルコントロールのユースケース用ではないため、iCloudのサインアウトとアプリの削除に対する暗黙の制限は適用されません。

新しい承認の使用方法を見てみましょう。 

アプリの起動時に最初に行う必要があるのは、FamilyControlsの承認をリクエストすることです。

Worklogが最初に起動したときに、共有承認センターを使用してこのリクエストを行います。

リクエストにより、承認ステータスが更新されるか、エラーが発生する可能性があります。

このアプリはこれまでこのiPhoneで実行されたことがないので、requestAuthorizationはアラートでAniyahの承認を求めます。

許可をタップすると、続行するためにFace ID、Touch ID、またはデバイスパスコードで認証するようにユーザーに促します。

ユーザーが正常に認証されると、requestAuthorizationを再度呼び出すと、再びアラートが表示されず、代わりに黙って成功します。

アプリがファミリーコントロールで承認されると、アプリの設定に2つのスイッチが追加されます。

スクリーンタイムに1つ、スクリーンタイムアクセスリストを持つアプリの下、アプリごとの設定に1つ、スクリーンタイム制限としてラベル付けされています。

親と個々のユーザーは、これらのスイッチのいずれかを介してファミリーコントロールからアプリの認証を解除することを選択できます。

ご覧のとおり、新しい個人認証の使用は、ペアレンタルコントロール認証を使用するのと同じくらい簡単で、非同期を使用して両方にいくつかの素晴らしい改善を行いました。

では、管理設定の新しい変更を見てみましょう。

管理設定は、特に管理設定ストアの使用において、開発者がより簡単に使用できるように刷新されました。

なじみのない人のために、マネージド設定ストアは、現在のユーザーまたはデバイスに設定を適用するデータストアです。

iOS 15では、プロセスごとに1つのマネージド設定ストアしか持つことができませんでした。

また、アプリとデバイスのアクティビティ拡張機能は、異なる管理設定ストアを持つ必要がありました。

これにより、デバイスのアクティビティに応じて設定を変更することが困難になりました。

現在、iOS 16では、プロセスごとに最大50のマネージド設定ストアを作成でき、それぞれが独自の名前を持つことができます。

これらの名前付きストアは、アプリとすべてのアプリ拡張機能の間でも自動的に共有されます。

また、指定された名前付きストアのすべての設定を一度に削除できるようになりました。

Worklogが名前付きストアをどのように使用しているかをお見せしたいと思います。

Worklogが初めて起動し、Aniyahのデバイスが正常に認証されると、Gaming ManagedSettingsStoreを作成します。

このストアには、Worklogの場合、すべてのゲームウェブサイトのシールドを含むゲーム制限が含まれます。

Worklogには、アプリが初めて起動するとすぐにソーシャルメディアアプリやウェブサイトを保護する「ソーシャル」という名前のストアもあります。

ただし、Worklogを使用する場合、Aniyahは[Allow for Evenings]ボタンをクリックすると、午後5時から午後8時の間にソーシャルメディアのみを許可するデバイスアクティビティスケジュールが作成されます。

午後5時になると、デバイスアクティビティモニターは、対応する名前付きストアの制限を解除します。

タイミングウィンドウが午後8時に終了すると、Aniyahのデバイス上のソーシャルメディアアプリやウェブサイトに制限を再適用します。

さて、「私たちのゲームストアはゲームのウェブサイトを制限していませんでしたか?」と疑問に思う人もいるかもしれません。

「ソーシャルストアのすべての設定をクリアして、ゲームストアの設定と競合しないのですか?」

答えはノーです。

最も制限された設定が常に勝つため、ゲームのウェブサイトは依然としてAniyahのデバイスで制限されたままです。

これらの新しい名前付きストアは非常に強力であり、管理された設定を使用してアプリを開発することがはるかに簡単になると感じています。

しかし、私たちはまだ終わっていません。

また、デバイスアクティビティフレームワークに非常にエキサイティングな機能を追加しました。

iOS 15では、デバイスアクティビティにより、アプリはタイミングウィンドウの開始と終了、およびアプリやウェブサイトの使用しきい値に応答することができました。

iOS 16では、デバイスアクティビティには、アプリがSwiftUIを使用して完全にカスタムの使用状況レポートを作成できる新しいレポートサービスがあります。

使用状況データは、ユーザーに表示されるデータと、それが画面上でどのようにレンダリングされるかをカスタマイズできる新しい拡張ポイントに提供されます。

これらのデバイスアクティビティレポートを使用すると、エンドユーザーに完全なプライバシーを提供しながら、ユーザーエクスペリエンスを完全にカスタマイズできます。

Worklogでは、DeviceActivityReport.ContextとDeviceActivityFilterを確立するのを見ることができます。

DeviceActivityReport.Contextは、DeviceActivityデータに基づいて描画するビューの種類をレポートに伝えるカスタマイズ可能なタイプと考えることができます。

DeviceActivityFilterを指定することで、レポートコンテキストのタイミングウィンドウをカスタマイズできます。

次に、何を表現するかをシーンに伝えるために、DeviceActivityReportScene内にデバイスアクティビティレポートコンテキストの定義を設定します。

私たちのコンテンツは、カスタム設定であるPieChartView.Configurationと、このレポートの結果のSwiftUIビューを定義します。

次に、makeConfiguration内で、円グラフビューの設定を水和するために、AniyahのDeviceActivityデータをマッピングします。

フレームワークは、新しい使用データがフェッチされるたびにmakeConfigurationを呼び出すので、自分で呼び出す必要はありません。

ここでは、PieChartView.ConfigurationがAniyahのデバイスアクティビティデータでビューを提供することで、円グラフビューのビューモデルとして機能する方法を見ることができます。

最後に、DeviceActivityReport拡張機能の本文で定義することで、カスタムSwiftUIレポートをレンダリングできます。

Worklog用に作成した円グラフレポートは、デバイスアクティビティレポートをカスタマイズできるエキサイティングな方法の1つにすぎません。

これで、iOS 16のスクリーンタイムAPIの新機能に関するブリーフィングは終了です。

ご覧のとおり、スクリーンタイムAPIは、私たちが最初に立ち上げたのと同じ安全でプライバシーを保護する方法で、コア制限やデバイスアクティビティの監視などの機能をサポートし続けています。

要約すると、独立したユーザーは、デバイスごとに複数のサードパーティアプリケーションを承認するオプションでファミリーコントロールで承認できるようになりました。管理された設定ストアは、アプリとアプリ拡張機能の間で設定をローカルで共有するようになりました。その結果、アプリケーション内の複数の名前付きストアを管理できるようになりました。最後に、デバイスアクティビティフレームワークは、ユーザーに使用状況データを明らかにし、カスタマイズ可能な新しいプライバシー保護UIを導入しています。

これらの新しい機能強化と追加により、アプリケーションに関与できるユーザーの数が拡大すると信じています。

この新しいリリースにインスピレーションを与えてくれてありがとう、そしてデジタルヘルスと生産性分野への今後の貢献に感謝します。

スクリーンタイムAPIを利用する新しいエキサイティングな方法を見るのが待ちきれません。

私たちは、あなたが持っているフィードバックを歓迎し、この技術をあなたと私たちのユーザーにとってよりアクセスしやすくするために引き続き取り組んでいきます。

ありがとうございます。