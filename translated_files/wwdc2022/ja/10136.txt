10136

♪インストゥルメンタルヒップホップ音楽♪

♪

こんにちは、私はドミニクです。SwiftUIで有益で楽しいチャートを作成するためのAppleの新しいフレームワークであるSwift Chartsを紹介できることを嬉しく思います。

データは私たちを取り囲み、世界を理解し、より良い決定を下すための前例のないリソースを提供します。

しかし、データだけではほとんど役に立たない。

データを有用なものにするには、それを理解する必要があります。

適切に設計され、アクセス可能なデータの視覚化は、複雑なデータを明確に伝え、データを理解と知識に変えることができます。

アップルでは、ビジュアライゼーションのベストプラクティスの研究に何年も費やしました。

チャートは、ある時間範囲の株価の傾向や変動、最後のトレーニング中の心拍数、夕方に日が涼しくなるときなどのデータに関する追加の有用なコンテキストを示すときに最もよく機能することを学びました。

これらは、チャートを使用するすべてのプラットフォームで多くの例のほんの一部です。

今日は、アプリで有益で楽しいチャートを作成できるように、新しいフレームワークを紹介することに興奮しています。

スウィフトチャートに挨拶してください。

Swift Chartsは、Appleがデザインしたチャートを作成するための柔軟なフレームワークです。

SwiftUIと同じ宣言型構文を使用しているので、Swift Chartsの言語はすでに知っています。

だから今日は、Swift Chartsで有益で、アクセスしやすく、楽しい視覚化を作りましょう。

チームでは、ポップアップパンケーキフードトラックがアプリで売上を追跡するのを手伝っています。

トラックは、カチャパ、インヘラ、クレープ、ジャンビン、ドーサ、アメリカンパンケーキなど、国際的に様々な甘くておいしいパンケーキを提供しています。

フードトラックは、過去30日間にこれらのスタイルで4500以上のパンケーキを提供しました。

カチャパは最も人気があり、アプリはすでにタイトルに最も重要な情報を示しています。

6つのパンケーキの詳細な内訳を示すチャートを追加しましょう。

Swift Chartsでこの視覚化を行うには、SwiftUIと同じ宣言型構文を使用できます。

スウィフトチャートでは、コンポジションでチャートを作成します。

棒グラフの主な構成要素は、データ内の各項目の視覚的要素であるバーです。

スウィフトチャートは、これらの視覚的要素を「マーク」と呼んでいます。

Xcodeに飛び込んでこのチャートを作りましょう。

チャートを追加することから始めます。

バーを作成するには、チャート内にバーマークを追加します。

カチャパの数のバーを表示するには、名前と売上を設定する必要があります。

パンケーキの名前の値から派生するバーのx位置を設定しました。この場合は「カチャパ」です。

.Value factoryメソッドの最初の引数は値の説明であり、2番目の引数は値自体です。

そして今、私たちはプレビューで単一のバーを取得します。

Y属性で記述される各バーの高さは、販売されたカチャパの数（916）で設定する必要があります。

バーの位置や高さを直接設定していないことを示すために、.valueを使用します。

スウィフトチャートは、バーだけでなく、バーの長さの意味を示すx軸とy軸のバーのラベルも自動的に作成します。

トラックが850を販売したインジェラの2番目のバーを追加しましょう。

今、個々のマークを作成し、それらがアプリに表示されるのを見るのはクールです。

ただし、通常、構造体の配列などのコレクションによって駆動されるチャートを作成したいと考えています。

パンケーキの販売に構造体を追加することから始めます。

それは文字列である名前と、トラックが売ったパンケーキの数を持っています。

私たちはそれを繰り返したいので、それを識別可能にします...

...そして、名前を返すID計算されたプロパティを定義します。

これで、パンケーキの配列としてデータセットを作成できます。

外部データソースからこれをロードできますが、ここではコードで定義します。

カチャパとインジェラのほかに、クレープも加えます。

ForEachで駆動する棒グラフデータを作成できます。

まず、2番目のバーを外します。

そして、私たちが今する必要があるのは、ForEachでBarMarkを繰り返すことだけです。

ループ内の変数の名前として「要素」を選択します。

その後、xにelement.nameを使用できます...

...そしてyのelement.sales。

ForEachがチャートの唯一のコンテンツである場合、データをチャート初期化子に直接入力することもできます。

ジャンビン、ドーサ、アメリカンパンケーキの残りの3つのエントリを追加できるようになりました。

配列にエントリを追加すると、チャートに新しいバーマークが追加されます。

最後に、ラベルが互いに近づきつつあることがわかります。

Xとyを交換することで、チャートを転置し、各バーのラベルにより多くのスペースを与えます。

Swift Chartsフレームワークは、チャートを美しくするために適切な軸スタイルを自動的に選択します。

そして、私たちはSwift Chartsで最初のデータ視覚化を行いました。

また、Xcodeの新しいバリアント機能を使用すると、このチャートはダークモードで美しく見え、さまざまなフォントサイズ、デバイスサイズ、向きに適応し、アクセシビリティをサポートしていることがわかります。

視覚的な表現でデータにアクセスするには、見ることができる必要があります。

スウィフトチャートは、誰もが人気のあるパンケーキの詳細を探索できるように、ビジュアライゼーションのデータをVoiceOverに公開します。

VoiceOverでチャートをナビゲートすると、販売されたパンケーキの名前と数が聞こえます。

ボイスオーバー:カチャパ、916。インジェラ、850。クレープ、802。

Jian Ping、753。ドーサ、654。アメリカ人、618。

ドミニク：そしてもちろん、このチャートは、ソニフィケーションを含め、2021年にAppleが発表したオーディオグラフ機能をサポートしています。

VoiceOver: チャートについて説明してください。チャートの詳細。

オーディオグラフを再生します。

完了。

ドミニク：スウィフトチャートを使用して、有益でアクセスしやすいチャートをフードトラックアプリに追加しました。

チャートは、トラックが各スタイルで販売したパンケーキの数を示しています。

各スタイルのパンケーキの要約に加えて、フードトラックには1日あたりの売上データもあります。

トラックはクパチーノとサンフランシスコに駐車できます。

私たちは、フードトラックが週の異なる日に駐車する場所を知るのを助けたいです。

この質問に答えるために、データを2つの都市の時系列として視覚化しましょう。

異なるデザインを探索するのがどれほど簡単かを見るために、チャートの3つの反復を行います。

クパチーノの棒グラフを作ることから始めます。

次に、サンフランシスコのデータを追加し、ピッカーを追加します。

そして最後に、データを1つのマルチシリーズ折れ線グラフにまとめます。

週の1日に販売されたパンケーキの平均数を示す棒グラフから始めましょう。

販売データには、平日が日付として保存され、トラックが整数として販売されたパンケーキの数が格納されています。

クパチーノのデータは、変数cupertinoDataにあります。

以前と同様に、BarMarkでチャートを作り始めます。

日付の日から派生するバーのx位置を設定しました...

...そして、販売から得られる高さ。

これにより、クパチーノの1日あたりの販売データを示すチャートの最初の反復が得られます。

2回目の反復では、サンフランシスコのデータを追加しましょう。

このチャートを使用して、パンケーキトラックが平日に駐車する場所を決めるのを手伝いたいです。

サンフランシスコの販売データはsfData変数にあります。

2つの都市を切り替えて、各都市の棒グラフを見たい。

状態変数、都市を追加することから始めます。

そして、都市のSwiftUIピッカーをビューに追加します。

都市変数を介して2つの都市の売上サマリーを切り替えるには、データ変数のスイッチステートメントを追加します。

そして、私たちが今しなければならないのは、クパチーノのデータを、クパチーノとサンフランシスコの2つを切り替えるものに置き換えることだけです。

トグルを切り替えると、チャートは2つの都市を切り替えます。

Swift ChartsはSwiftUIアニメーションで動作するため、トランジションをeaseInOutでアニメーション化するように指定すると、2つの都市を切り替えるとバーがアニメーション化され、一度に1つの場所しか表示されません。

これにより、私たちのアプリは正しいルックアンドフィールが得られます。

最後の反復として、両方のシリーズを折れ線グラフで表示します。

この折れ線グラフを作成するには、以前からクパチーノの棒グラフから始めます。

クパチーノとサンフランシスコのデータは一連のシリーズです。

シリーズ構造には、都市と販売データがあります。

両方のシリーズを見せる前に、クパチーノのデータに焦点を当てましょう。

チャートでは、系列データをループできます。

チャートイニシャライザはForEachのように機能することを忘れないでください。

その後、クパチーノの特定のデータをシリーズの販売データに置き換えることができます。

2つの都市のデータを区別するために、バーの色を都市から導き出したい。

このために、シリーズの都市から派生するフォアグラウンドスタイルを設定します。

色が表す都市を示すために、スウィフトチャートはチャートの下に凡例を作成します。

次に、2番目の場所のデータを追加します。

プレビューでわかるように、スウィフトチャートは自動的にサンフランシスコの色を選択し、チャートに両方の都市のバーが表示されます。

チャートは特定のコンテキストのデータを表示し、データや質問が変化するにつれてビジュアライゼーションを変更する必要があるかもしれません。

スウィフトチャートを使用すると、チャートをすばやく変更して、さまざまなデザインを簡単に探索できます。

積み重ねられた棒グラフは、1日あたりの総平均売上高を示すのに最適です。しかし、2つの都市を比較したい場合はどうなりますか?

点表や折れ線グラフの方が良いかもしれません。

マークタイプをBarMarkからPointMarkに変更してポイントとして販売されたパンケーキを表示したり、ラインマークを変更してデータを折れ線グラフとして表示したりします。

折れ線グラフは、各曜日の2つの都市を比較できるため、販売データに適しています。

チャートは複数のマークを組み合わせることができます。

たとえば、ポイントマークを追加できます。

シリーズを色なしで微分可能にするために、シンボルを都市から派生するように設定します。

今、各ポイントは、その色とシンボルで都市を示しています。

線にポイントを表示するのが一般的であるため、Swift Chartsには、シンボル修飾子をLineMarkに適用する省略形があります。

ポイントのスタイルは線に適応します。

このチャートは素晴らしいです。

週を通しての販売動向を簡単に比較できます。

日曜日のサンフランシスコの売り上げが特に高いことがわかります。

スウィフトチャートは、わずか数分で多くのデザインを反復することを非常に簡単にしました。

最後に、Swift Chartsが迅速に簡単に反復できると同時に、チャートをアプリのユニークなスタイルにシームレスに統合するのに十分な柔軟性をどのように行うかを見てみましょう。

スウィフトチャートでは、マークのプロパティを持つマークの構成によってチャートを構築します。

パンケーキアプリでは、3つの異なるマークと4つのマークプロパティを持つチャートを作成しました。

たとえば、xとyのプロパティを持つバーマークとして簡単な棒グラフを作成しました。

また、ポイントを持つチャートや、xとyのプロパティを持つラインマークを使用した折れ線グラフなど、デザインをすばやく探索するためにマークを変更しました。

また、フォアグラウンドスタイルなどのプロパティを追加して、折れ線グラフに複数の系列を表示できることもわかりました。

そして、チャートは1つのマークを持つ必要はありません。

点と線を組み合わせて、2つのマークプロパティで同じ値を示しました。

スウィフトチャートは、今日使用したよりもさらに多くのマークとマークプロパティをサポートしています。

また、拡張可能で、カスタムマークを追加できます。

マークとマークのプロパティは、スウィフトチャートが少数の宣言的な構成要素で幅広いチャートデザインを表現することを可能にするものです。

これらのビルディングブロックを組み合わせて、アプリ用の優れたデータビジュアライゼーションを作成する方法はたくさんあります。

SwiftUIですでにできることと一緒に、可能性は本当に無限大です。

そして、今日お見せしたように、ダークモード、さまざまなデバイスの画面サイズ、ダイナミックタイプ、VoiceOver、オーディオグラフを無料でサポートできます。

さらに、Swift Chartsはハイコントラストモードをサポートしています。

そして最後に、Swift Chartsはロケール間で機能し、マルチプラットフォームです。

同じコードのチャートは、すべてのAppleプラットフォームで機能します。

また、同じカスタマイズがどこでも機能するので、各プラットフォームに合わせてチャートを調整できます。

今日は、Swift ChartsがSwiftUIの強力な構成構文を使用して、より少ないコードでより多くのチャートを作成できる方法を紹介しました。

Swift Chartsは、豊富なカスタマイズオプションも提供しているため、アプリケーションに合わせてチャートのスタイルを設定できます。

そして、新しい領域をチャート化し、チャートを作成する方法がわかったので、ドキュメントとバーを上げるフォローアップトークでそれをカスタマイズする方法を学ぶことができます。

♪