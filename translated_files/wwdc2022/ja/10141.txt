10141

♪インストゥルメンタルヒップホップ音楽♪

こんにちは。今年のWWDCへようこそ。

私の名前はステラです。

そして私はアレックスです。

ステラと私はアップルで米ドルの多くの部分で一緒に働いています。

今日は、USDツールとレンダリングのアップデートについてご検討します。

持って行って、ステラ！

USDは、コンテンツ作成ツールへの統合の拡大と深化に伴い、USDを中心に、資産やコンテンツの作成、ゲーム、AR、映画、ウェブのレンダリングを可能にする基礎技術です。

今日は、エコシステムの2つの部分、ツールとレンダリングに焦点を当てます。

USDツールのアップデートから始めましょう。

次に、ARクイックルックの新しい照明で資産がどのようにより良く見えるかを示し、USDレンダリングを深く掘り下げ、最後に、Hydraを統合する方法を紹介します。

AppleのエコシステムでUSD Toolsを始めましょう。

USDZツール、リアリティコンバータをカバーし、USDZコンテンツの作成に役立つ追加のツールとフレームワークをフォローアップします。

USDZ Toolsは、USDZファイルの生成、検証、検査に役立つ必須のコマンドラインUSD Pythonツールを含むパッケージです。

このパッケージには、他の主要な3Dファイル形式からUSDZファイルを作成するusdzconvertと呼ばれるコンバーターも含まれています。

Pythonスクリプトは、自動化とバッチ処理のための強力なツールを提供します。

また、USDを探索し、APIの使い方を学ぶのに最適な方法です。

今年は、Python 3とApple Siliconのサポートをお届けします。

また、USDバージョンをアップグレードして、新しいUSD機能とパフォーマンスの向上に簡単にアクセスできるようにしました。

さらに、usdzconvertに素晴らしい新機能を追加しました。

useObjMtlフラグを使用して、資料を含むOBJファイルをUSDZに変換できるようになりました。

また、GLTFファイルからのポイントと行のサポート、およびFBXファイルからのアニメーションのシーンタイムも追加しました。

すべてのusdzconvertオプションとコンバージョンをカスタマイズする方法を表示するには、ターミナルに「usdzconvert --help」と入力するだけです。

これにより、著作権情報の追加や、3Dモデル用の diffuseColorまたはnormalMapの提供など、usdzconvertで使用できるすべてのオプションが表示されます。

または、コマンドラインを使用するよりもワークフローのUIエディタを好む場合は、USDZツールを使用して構築され、usdzconvertと同じ機能を提供するReality Converterもありますが、エディタウィンドウで、MacOSでUSDコンテンツを簡単に変換、表示、カスタマイズできます。

OBJ、GLTF、FBXなどの一般的な3Dファイル形式をインポートするだけで、変換されたUSDZの結果が表示されます。

今年は、ワークフローを合理化するためにUIも改善しました。

テクスチャを選択して、詳細情報を表示できます...

独自のテクスチャで材料のプロパティをカスタマイズする...

著作権を追加するか、ファイルのメタデータを編集する...

そして、古典的な照明または新しい照明を選択し、セッションの後半で詳しく説明します。

組み込みのオプションを使用して、さまざまな照明条件でUSDZオブジェクトをプレビューし、それに応じて露出を調整することもできます。アセット側では、USDZファイルをエクスポートしながらテクスチャ品質を選択できる新機能を追加しました。

デフォルトでは、テクスチャは元の非圧縮サイズでエクスポートされます。

しかし、USDZファイルのサイズを小さくしたい場合は、テクスチャをJPEG形式に圧縮するオプションがあります。

この例では、オブジェクトキャプチャを使用して、このチェスの駒を高解像度でスキャンしました。

メッシュの詳細を失うことなくファイルサイズを小さくするために、RealityConverterを使用して圧縮されたテクスチャでモデルをエクスポートしました。

視覚的な違いはほとんど目立たず、結果のファイルサイズがなんと80%削減されました!

さらにエキサイティングなニュースがあります。RealityConverterは、USD資産の問題を自動的に修正できるようになりました。

不一致の属性と接続タイプを修正し、複数のトップレベルのプリムと不足しているデフォルトのプリムを持つステージを修正し、非推奨の属性を更新し、不足しているステージメタデータを追加します。

ユニバーサルバイナリサポートも追加したので、Apple Siliconでネイティブに動作するようになりました。

さて、3Dモデルをゼロから作成したい場合はどうなりますか?

昨年、私たちはmacOSでRealityKit APIとしてオブジェクトキャプチャを立ち上げ、USDZ資産を作成する革新的な方法を提供します。

その後、Reality Composerを使用して、複数のアセットでシーンを作成できます。

今年は、部屋のパラメトリック3Dスキャンを作成できるRoomPlan APIをお届けします。

この3つのセッションをチェックすることを強くお勧めします。

これらの技術を組み合わせることで、誰もが没入型AR体験をこれまで以上に簡単に作成できます。

今日取り上げたこれらのツールはすべて、Apple開発者WebサイトのAR作成ツールページで今すぐダウンロードできます。

それらをチェックしてください!

次に、AR Quick Lookの新しい照明を見てみましょう。 

ARクイックルックは、iOSの組み込みのシステム全体のARビューアで、テーブル、壁、床などの物理的な空間に3D USDZオブジェクトを配置し、簡単なタッチジェスチャーで対話することができます。

Reality Composerで構築されたインタラクティブなシーンを作成し、iMessage、Mail、Notesなどで他の人と共有できるUSDZファイルに保存することもできます。

私たちは常にARクイックルックのレンダリングをより現実的にするために努力しており、今年はARクイックルックで改善された照明を導入しています。これは、より明るく、コントラストが強化され、形状定義が改善され、資産をさらに良く見えます。

以下は、クラシックと新しい照明を備えたオブジェクトモードのAirPods Proの例です。

AirPods Proは両方の照明条件で見栄えがよく、新しい照明オプションが明るい色、より高いコントラスト、そしてより多くのハイライトを提供していることに気付くでしょう。

では、AirPods Maxを机の上に置いて、新しい照明でARモードで見ましょう!

すごいですね。

では、新しい照明を資産にどのように適用しますか?

それは本当に簡単です。

USDZファイルに新しいpreferredIblVersionメタデータを設定して、コンテンツに最適な照明を選択するだけです。

ここでは、preferredIblVersionの値を2に設定しました。これは、新しい照明システムを使用するためのARクイックルックを示します。

これをもっと詳しく理解しましょう。

preferredIBLVersionメタデータは、0,1、および2の値を保持できます。

preferredIblVersionが0に設定されているアセットは、システムのデフォルト照明を使用します。

1に設定すると、引き続き古典的な照明を使用します。

2の値はあなたに新しい照明を与えるでしょう。

これは、現在の資産を新しい照明にも簡単に更新できることを意味します!

明示的な選択をして、すべての資産にこのメタデータを設定することをお勧めします。

これを行うには、フラグpreferrediblversionでusdzconvertを使用できます。

たとえば、フラグを使用して、新しい照明で消火栓OBJファイルをUSDZに変換する方法は次のとおりです。

または、デフォルトで新しい照明を使用するReality Converterを使用することもできます。

しかし、古典的な照明を使用したい場合は、プロパティパネルに新しいオプションがあります。

ここでは、古典的な照明と新しい照明の両方でAirPods Maxアセットをプレビューします。

これは、違いを比較する簡単な方法を提供します。

照明アイコンをクリックすると、適用された照明も参考のために強調表示されます。

最後に、このメタデータのないアセットの場合、AR Quick Lookはファイルの日付と時刻のスタンプに基づいて照明バージョンを自動的に決定します。

資産が2022年7月1日以降に作成された場合は、新しい照明を使用します。

古い資産は、見た目を変えないように、古典的な照明を使用し続けます。

さて、USDレンダリングのためにアレックスに渡します。

ありがとう、ステラ。

私たちは今日、すでに多くのレンダリングされたUSD資産を見てきました。

次に、USDレンダリングとHydraが3Dコンテンツ作成パイプラインに最適な選択肢である理由と、それを独自のアプリケーションに統合する方法を探ります。

まず、一歩下がって、レンダリング全般について話しましょう。

レンダラーは、3Dモデル、カメラ、ライトのコレクションを入力として取り、それらを使用して画像を生成します。

多くの異なるレンダラーがあり、それぞれが特定の目的のために構築され、異なるユースケースに最適化されています。

一部のレンダラーは、ゲームやARシーンでキャラクターをレンダリングするなどのリアルタイムアプリケーション用に設計されています。

他の人ははるかに時間がかかりますが、ハリウッド映画の視覚効果を生成するなど、よりフォトリアリスティックな画像を生成します。

すべてのレンダラーズは、その機能について選択し、ユニークです。

異なるユースケースのための異なるUSDレンダラーは、Appleプラットフォームにも存在します。

これらの異なるレンダラーに関するドキュメントをdeveloper.apple.comに追加します。

それらの違いを理解し、どのUSD機能をサポートしているかを説明し、あなたに最適なUSDを作成する方法についてのガイダンスを提供するのに役立ちます。

Appleプラットフォームのレンダラーの1つはRealityKitで、フォトリアリスティックなレンダリングシステムを特徴とし、インタラクティブな拡張現実体験に最適化され、ARクイックルックで使用されています。

これはUSDZファイルの主要なレンダラーです。

macOSでのUSDレンダリングのもう1つのオプションは、ピクサーのオープンソースレンダラー、ストームです。

プロダクショングレードのアセットに最適化されており、大規模なシーンのリアルタイムプレビュー用に設計されています。

これは、コンテンツ作成パイプラインを流れるアセットを視覚化して反復するための素晴らしい技術です。

ストームはヒドラと呼ばれる技術を使用しています。

HydraはUSDオープンソースプロジェクトの中核的な側面です。

次に、ヒドラとストームとのつながりを理解しましょう。

先ほどのこの図から始めます。

ここでは、ストームをレンダラーとして使用します。

入力は通常「シーングラフ」と呼ばれ、ストームはそのプレビューレンダリングを生成します。

しかし、別のレンダラーを使用して同じシーンのフォトリアリスティックな画像を生成したい場合はどうなりますか?

それはまさにヒドラが作られているものです。

シーンをレンダラーに緊密に結合する代わりに、Hydraはシーンからレンダラーにデータを転送するために、それらの間の抽象的なレイヤーとして機能します。

これにより、シーングラフを変更することなく、いつでもニーズに基づいてレンダラーを簡単に交換できます。

例えば、ストームとピクサーのレンダーマンを使うかもしれません。

コンテンツ作成パイプラインでは、Stormを使用して高速レンダリングと迅速な反復を行い、準備ができたらRenderManに切り替えて最終的な画像を生成できます。

シーングラフも同様です。

Hydraへの入力は、USDシーングラフでも、別のものでもかまいません。

これにより、それぞれが独自のまったく異なるシーングラフを持っていても、複数のアプリケーションで同じレンダラーを活用できます。

Hydraとシーングラフやレンダラーを接続するインターフェースは、デリゲートと呼ばれます。

シーングラフはシーンデリゲートを介してヒドラに接続され、レンダラはレンダリングデリゲートを介してヒドラに接続されます。

そして、それはあなたにとってヒドラです!

FoundryのNuke 13はすでにHydraを使用してビューポートをレンダリングしており、macOSのNukeアーティストがNukeの3Dシステムでより良い品質とインタラクティブな体験を得ることができます。

これは、カスタムシーンデリゲートとメタルアクセラレーションストームでヒドラを使用することによって達成されます。

ピクサー・アニメーション・スタジオと協力して、メタル・アクセラレーション・ストームをオープンソースに公開したことを共有できることを嬉しく思います。

22.05.米ドルで使用できます。

Hydraの力を見たので、USDシーングラフの典型的なユースケースとレンダラーとしてのStormを使用して、Hydraサンプルアプリケーションを見てみましょう。

Hydraを使用して、コンテンツ作成ツールと3Dワークフローアプリケーションの構築を開始できます。

私たちのサンプルアプリケーション、HydraPlayerは非常にシンプルですが、強力です。

それはStormでUSDファイルをレンダリングし、その周りにカメラを動かすことができます。

そして、すぐに始めるために、HydraPlayerを公開サンプルプロジェクトにすることに興奮しています!

セッションリソースで利用でき、readmeに完全な指示が付属しています。

今すぐこのビデオを一時停止し、プロジェクトをダウンロードして、それを歩きながらフォローすることをお勧めします。

Xcodeプロジェクトには、AppDelegate、Camera、Renderer、View Controllerの4つのクラスがあります。

AppDelegateは基本的にルートオブジェクトであり、システムとのやり取りを管理します。

カメラクラスは、ユーザーの入力を簡単に翻訳できるように、USDシーンカメラのシンプルな表現です。

レンダラークラスは、USDとHydraとのすべての相互作用を処理します。

最後になりましたが、ViewControllerはユーザー入力を処理します。

HydraPlayerを構築して起動する前に、環境を準備し、Apple Silicon MacでRosettaを使用し、USDとHydraをダウンロードして構築する3つのことがあります。

では、始めましょう。

まず、開発環境を準備します。

Xcode、Python、CMakeがインストールされていることを確認してください。

それでは、他の2つのステップのターミナルを開きましょう。

Apple Silicon Macをお使いの場合は、USDがarm64を完全にサポートに移行している間、Rosettaの下で実行する必要があります。

これを行うには、アーチコマンドを使用します。

環境の準備ができたら、USDとHydraのソースコードをダウンロードする必要があります。

どちらもPixarAnimationStudios/USDの同じGitHubリポジトリにあります。

コードがわかったので、それを構築できます。

USDには便利なPythonビルドスクリプトが付属しています。

「Generator Xcode」と「no-python」のフラグを追加し、USDをインストールする場所を指定します。

「USDInstall」のソースコードの横に置きましょう。

USDが構築を終えたら、HydraPlayerを構築する準備が整いました!

もう一度この図に戻り、それを使ってHydraPlayerの主要部分を特定して詳細にチェックしましょう。

3Dモデルのロード方法、カメラの設定方法、シーンライトの設定方法を見ていきます。

次に、シーングラフをStormに取得する方法と、最後に、アプリケーションウィンドウ用の画像を生成する方法を学びます。

それでは、USDから3Dモデルの読み込みを始めましょう。

ViewControllerのviewDidAppearでは、ビューが初めて表示されたときにNSOpenPanelでファイルピッカーを作成します。

ファイルが選択されると、レンダラーはシーンの設定を開始し、USDファイルを読み込むことができます。

ファイルの読み込みは、USD APIで非常に簡単です。

ファイルパスでUSDステージを開くだけです。

それでおそれ。ファイルをロードしました。

次に、カメラをセットアップします。私たちのコードでは、これは簡単です。

setupCameraでは、まず新しいシーンカメラを作成します。

次に、シーンに基づいて世界の大きさと中心を計算します。

次に、カメラを良い距離に動かしてから、中央に焦点を合わせます。

このようにして、私たちのカメラはシーン全体をキャプチャします。

素晴らしい、今、私たちはカメラをセットアップしました。

次に、照明。

私たちはそれを簡単に保ち、1つのシンプルなアンビエントライトを作成し、カメラに合わせて位置を設定します。それだけです。

そして、それで、私たちは3Dモデル、カメラ、ライトで私たちのフルシーンを持っています!

私たちは今、私たちのシーンをストームに渡すことができます。

まず、レンダリングエンジンを初期化する必要があります。

ここでは、Stormのクラス名である新しいUsdImagingGLEngineを作成します。

ここで最も重要なパラメータはrootPathです。

それは私たちの3Dモデルで私たちのUSDステージにエンジンを指し示します。

他のパラメータとUsdImagingGLEngineの詳細については、ピクサーのUSD APIドキュメントをご覧ください。

次に、エンジンにカメラを設置し、照明のセットアップを設定します。

最後になりましたが、レンダリングパラメータを設定して、Stormのレンダリング方法を定義します。

たとえば、レンダリングされた画像がアプリの配色でうまく機能するように、透明な背景をレンダリングしたいと考えています。

アニメーション付きのシーンでは重要で、これはタイムコードを指定する場所でもあります。

これで、画像をレンダリングする準備が整いました!

必要なセットアップはすでにすべて完了したので、レンダリングコマンドは1行のコードにすぎません。

私たちは結果を得て、それを私たちの窓に表示し、私たちはそこにいます!

私たちはUSDのおもちゃの飛行機をレンダリングしています!

そして実際には、私たちは1つの飛行機だけをレンダリングしていません。

HydraPlayerは、数千万の三角形で何千ものアニメーションアセットを簡単にレンダリングできます。

まだしていない場合は、このセッションのリソースをチェックし、サンプルプロジェクトをダウンロードし、さらに探索して楽しんでください。

私たちは一緒に、それらをより強力にし、あなたの資産をさらに良く見せるAppleのUSDツールのアップデートを検討しました。

Hydraの機能について学び、HydraPlayerのサンプルプロジェクトを見て、それを自分のアプリケーションに統合する方法を確認しました。

米ドルの重要な概念の詳細については、「米ドルの基礎を理解する」セッションをご覧ください。

ありがとうございます。

♪ ♪