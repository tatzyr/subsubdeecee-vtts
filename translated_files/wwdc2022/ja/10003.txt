10003

♪まろやかなインストゥルメンタルヒップホップ音楽♪

♪

WWDC22の「Meet WeatherKit」へようこそ。

私の名前はノバルで、ウェザーチームのエンジニアです。

私たちは毎日気象データに依存しており、この情報を得る場所は重要です。

ドアを出る前に傘を持参できるようにApple Watchで天気をチェックすることから、雨や霜を予測することで農家が輪作を計画するのに役立つ持続可能な農業、冬の嵐旅行の安全と準備まで、天候はすべての人に影響を与えます。

正確な気象データは、気候変動の影響を受ける今日の世界でさらに重要になっています。

そして、正確な予測にアクセスすることはこれまで以上に重要であり、それが私たちがWeatherKitを作った理由です。

WeatherKitは、世界クラスのグローバル天気予報であるまったく新しいApple Weather Serviceを搭載しています。

高解像度の気象モデルと機械学習と予測アルゴリズムを使用して、世界中のハイパーローカル天気予報を提供します。

Apple Weather Serviceでは、多くのデータにアクセスでき、これらすべてはWeatherKitを通じて利用できます。

正確な気象データには位置情報が必要です。

そして、そのデータを非公開にすることは共通の責任です。

プライバシーへのコミットメントに沿って、WeatherKitはユーザー情報を損なうことなくハイパーローカル予測を提供するように設計されています。

場所は天気予報を提供するためにのみ使用され、個人識別情報に関連付けられておらず、共有または販売されることはありません。

WeatherKitを使用すると、ユーザーのプライバシーを簡単に保護できます。

今日は、新しいAPIを最大限に活用できるように、WeatherKitの詳細について詳しく説明します。

まず、独自のApple Weather Serviceに裏打ちされたWeatherKitを通じて提供する利用可能なデータセットについて説明します。

次に、あらゆるプラットフォームで気象データを取得できるように設計されたWeatherKitフレームワークとREST APIを使用して気象情報を要求する方法を紹介します。

そして最後に、いくつかの追加の実装要件とベストプラクティスについて説明します。

利用可能な気象データセットの概要から始めましょう。

前述したように、WeatherKitで多くのデータにアクセスできます。

では、各データセットについて話しましょう。

現在の気象データセットは、要求された場所の「現在」の状態を説明しています。

それは単一の時点を表し、UV指数、温度、風などの条件を含みます。

分予報には、利用可能な場合、次の1時間の分ごとの降水条件が含まれています。

このデータセットは、ドアを出るときに傘を持参するかどうかを決めるのに便利です。

毎時予報は、現在の時刻から始まる予報のコレクションであり、最大240時間のデータを提供します。

毎時予報の各時間には、湿度、視界、圧力、露点などの条件が含まれます。

毎日の予報には、10日間の予報コレクションが含まれています。

毎日の予報の毎日は、最高気温と最低気温、日の出、日没など、一日に関する情報を提供します。

気象警報には、要求された場所に対して発行された悪天候警報が含まれています。

このデータセットには、ユーザーを安全に保ち、情報を提供し、準備するための重要な情報が含まれています。

そして最後に、過去の天気は過去から保存された天気予報を提供するので、気象データの傾向を見ることができます。

毎時および毎日のリクエストに開始日と終了日を指定することで、履歴データにアクセスできます。

これにより、多くのデータにアクセスできます。

私たちは、歴史的な天気を使用できる重要でインパクトのある方法がたくさんあると思います。

利用可能な豊富な気象データをすべて見たので、WeatherKit APIでこの気象データをリクエストする方法を説明します。

Apple Weatherデータは、ネイティブフレームワークと一連のREST APIの両方から入手できます。

まず、Swiftフレームワークで気象データにアクセスするのがいかに簡単かをお見せしましょう。

必要なのは数行のコードだけです。

そして、Swift Concurrencyでは、天気のリクエストは簡単です。

まず、WeatherKitとCoreLocationをインポートします。

次に、ウェザーサービスのエントリポイントとして、weatherServiceオブジェクトを作成します。

関心のある場所の座標でCLLocationを作成します。

ここでは、故郷のニューヨーク州シラキュースを使っています。

次に、weatherServiceインスタンスでweather(for:)に電話し、上記の場所に渡します。

通話が完了すると、この例では現在の温度やUVインデックスなど、アプリに必要な関連データにアクセスできます。

Swiftで天気データをリクエストするのがいかに簡単かをお見せしたので、SwiftUIで構築している旅行アプリを使用している別の例を見てみましょう。

このセッションに関連付けられているリンクから、完了したプロジェクトを取得できます。

再び旅行するのが本当に楽しみなので、次の旅行を計画するためにフライトプランナーアプリを作成することにしました。

私はすでにフライトの旅程のロジックを作成しましたが、旅行中の各フライトをタップすると、各目的地の状態、降水量、風、気温を含む列を表示したいです。

最初のステップは、WeatherKitを有効にすることです。

開発者ポータルでApp IDを登録し、Capability and App Services t absを選択してWeatherKitを有効にします。

次に、Xcodeで、WeatherKit機能をプロジェクトに追加します。

その準備を邪魔にならないように、これらの各場所の気象データを取得する方法を説明させてください。

ここでは、目的地の空港の緯度と経度を含む空港構造がすでに設定されています。

共有天気サービスで天気(for:)に電話して1時間ごとの予報を取得し、空港の場所を通過します。

データのサブセットが欲しいだけなので、リクエストに1時間ごとの予測を含めるように指定しました。

では、アプリを作成して実行します。

これで、各空港の条件を表示するために更新されたカスタムビューを見ることができます。

このアプリを構築する際に次にする必要があるのは、アプリにデータソースのアトリビューションを表示することです。

まず、attribution.legalPageURLプロパティからアトリビューションURLを取得します。

これは、気象データソースに関する著作権情報を含む法的帰属ページへのリンクです。

また、組み合わせたApple WeatherマークのURLを取得する必要があります。

明るいバリエーションと暗いバリエーションの両方で利用できるので、colorScheme環境値をチェックして、SwiftUIビューが現在明るい外観または暗い外観で表示されているかどうかを確認します。

最後に、私は再び構築して実行します。

Apple WeatherマークとアトリビューションリンクがSFSafariViewControllerで開くことに注意してください。

フライトプランナーアプリの天気を取得するために必要なのはそれだけであり、WeatherKit APIを使用して天気データをアプリに追加する方法はたくさんあります。

しかし、それはネイティブフレームワークにすぎませんでした。

REST APIは、Swiftフレームワークと同じ豊富な気象データを提供し、どのプラットフォームでも使用できます。

この例では、weatherkit.apple.comのエンドポイントから気象警報をリクエストする方法を示しています。

まず、認証トークンを要求します。

もう少し詳しく話し合います。

次に、気象オブジェクトを取得するには、まず特定の場所の必要な気象データセットを示すURLを作成します。

ローカライズされた応答に適切な言語を必ず設定してください。

次に、関心のある場所の緯度と経度を指定します。

目的のデータセットを示します。

このパラメータが複数形であることに気付くかもしれないので、それぞれをカンマで区切って一度にいくつか要求することができます。

そして最後に、要求された場所の国コード。

ただし、国コードは、気象警報データセットを要求する場合にのみ必要であることに注意してください。

次に、上記のURLと認証トークンを使用して天気データを取得し、結果をJSONに変換します。

それを使えば、気象警報とその詳細にアクセスできます。

繰り返しになりますが、今回はRESTを通じてのみ、気象データへのアクセスがいかに簡単かを示す別の例です。

必要なセットアップについてより深く掘り下げるには、authを再検討しましょう。

WeatherKit REST APIでは、認証を処理するための追加の手順がいくつかあります。

開発者ポータルでは、WeatherKitで有効になっている認証キーと関連するサービスIDを作成することで、WeatherKitリクエストへのアクセスを有効にします。

秘密鍵は、開発者ポータルのキーセクションで作成できます。

WeatherKitは、各リクエストで承認を検証するためにトークンを必要とします。

したがって、サーバーでは、秘密鍵を使用して署名されたJSONウェブトークンを作成するためのトークンサービスを展開します。

JSON Webトークン認証に精通している人にとって、これはかなり標準的な承認フローですが、初めて作業する場合に備えて、いくつかの詳細を共有させてください。

署名付きトークンを生成するには、開発者ドキュメントに記載されているフィールドと値を含むヘッダーを作成します。

次に、発行者、件名、有効期限などの項目を含む、WeatherKit REST APIとアプリケーションに固有の情報を含むペイロードを作成します。

そして最後に、WeatherKit REST APIへのその後の呼び出しで使用するトークンに署名します。

天気アラートの例に戻ると、署名サービスからトークンを要求し、天気データのHTTPリクエストのAuthorizationヘッダーにトークンを追加します。

それがWeatherKit REST APIです。

Apple Weather Serviceから気象データにアクセスするための2つの素晴らしい方法の1つ。

最後に、App Storeで公開するか、REST APIを使用して任意のプラットフォームで公開する前に、いくつかの追加要件をカバーします。

これらの各要件は、ネイティブのSwiftまたはREST APIを使用しているかどうかに関係なく適用されます。

最初の要件は帰属です。

私のデモで見たように、アトリビューションAPIからリンクを取得し、ネイティブまたはウェブアプリに表示する必要があります。

2番目の要件はアトリビューションロゴです。

WeatherKit APIは、アプリに表示する必要がある画像アセットを提供することで、これを簡単かつ便利にします。

そして最後に、気象警報を表示する場合は、応答で提供されたイベントページにリンクする必要があります。

だから、App Storeやウェブで公開するためにアプリを準備するのはとても簡単です。

それがWeatherKitです。ハイパーローカル予測は、SwiftフレームワークとREST APIを通じてアクセス可能なApple Weather Serviceを強化しました。

どちらも、アプリ、あらゆるプラットフォームやデバイスで気象データを使用する可能性の世界を開きます。

このセッションを楽しんでいただければ幸いです。

このセッションに関連するリンクをチェックアウトするだけでなく、ドキュメントを読んでプロジェクトをダウンロードしてください。

そしてもちろん、私たちはあなたのフィードバックをお待ちしています。

あなたがWeatherKitを使用するすべての創造的でインパクトのある方法を見るのが待ちきれません。

ありがとう、そして素晴らしいWWDCを!

♪