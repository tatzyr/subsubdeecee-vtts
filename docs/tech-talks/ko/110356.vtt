WEBVTT

00:00:00.000 --> 00:00:08.000
여러분, 여러분! 제 이름은 안드리아 젠슨이고 기업 고객의 앱 개발 노력을 돕는 컨설팅 엔지니어입니다.

00:00:08.000 --> 00:00:14.000
오늘 저는 기업 개발자들을 위한 새로운 기능에 대해 이야기하고 싶습니다.

00:00:14.000 --> 00:00:23.000
우리는 애플 제품이 우리가 상상했던 것보다 더 많은 방식으로 모든 규모와 산업 전반에 걸쳐 전 세계에서 사용되고 있는 것을 본다.

00:00:23.000 --> 00:00:28.000
기업 개발자들은 우리의 장치가 비즈니스에 가장 효과적으로 사용되는지 확인합니다.

00:00:28.000 --> 00:00:41.000
소매점의 판매 시점 앱이든 항공사 조종사를 위한 비행 계획 앱이든, 당신은 최고의 일을 하고 다른 사람들이 그들의 일을 할 수 있도록 하는 데 필요한 도구와 기능을 제공하기 위해 우리의 플랫폼에 의존합니다.

00:00:41.000 --> 00:00:52.000
올해 WWDC에서 애플은 iOS, iPadOS, macOS 및 watchOS를 포함한 소프트웨어 플랫폼 전반에 걸쳐 주요 업데이트를 발표했다.

00:00:52.000 --> 00:00:59.000
올해 많은 발표가 있었고, 이 모든 주제와 더 많은 것을 논의하는 세션이 있었다.

00:00:59.000 --> 00:01:15.000
최소한의 코드로 자신만의 바코드 스캔 인터페이스, 라이브 활동 및 잠금 화면 위젯을 만들 수 있는 새로운 데이터 스캐너 API를 포함하여 당신과 가장 관련이 있다고 생각하는 것을 강조할 것입니다.

00:01:15.000 --> 00:01:17.000
그리고 이것들은 시작에 불과해.

00:01:17.000 --> 00:01:26.000
이 모든 새로운 정보를 더 잘 탐색하기 위해, 저는 이 세션 내내 계속 참조할 관련 영역으로 분류하고 있습니다.

00:01:26.000 --> 00:01:36.000
그리고 요약 수준에서 이들 각각을 살펴보면서, 더 많은 것을 배우기 위해 개발자 앱이나 웹사이트에서 볼 수 있는 추가 세션을 안내해 드리겠습니다.

00:01:36.000 --> 00:01:38.000
알았어! 가자.

00:01:38.000 --> 00:01:40.000
우리는 Siri로 시작할 거야.

00:01:40.000 --> 00:01:47.000
그리고 iOS 15 이전, SiriKit과 Intents는 앱이 Siri의 힘을 활용하는 방법이었습니다.

00:01:47.000 --> 00:01:56.000
올해, 우리는 앱을 위한 훌륭한 액션을 더 빠르고 쉽게 구축할 수 있도록 설계된 새로운 스위프트 전용 프레임워크인 앱 인텐트를 발표했습니다.

00:01:56.000 --> 00:02:05.000
SiriKit 사용자 지정 인텐트를 만드는 이전 방법과 달리, 새로운 앱 인텐트는 인텐트 정의 파일이나 생성된 코드가 필요하지 않습니다.

00:02:05.000 --> 00:02:11.000
그리고 의도 정의 파일이 있는 기존 사용자 지정 의도가 있다면, 쉽게 변환할 수 있습니다.

00:02:11.000 --> 00:02:16.000
기존 인텐트 정의 파일에서 앱 인텐트로 변환 버튼을 클릭하기만 하면 됩니다.

00:02:16.000 --> 00:02:22.000
앱 인텐트를 만들면, 완전히 새로운 앱 단축키를 만드는 데 사용할 수 있습니다.

00:02:22.000 --> 00:02:34.000
앱이 설치되면 앱 의도와 앱 단축키도 설치되며, 앱이 열리기 전에 Siri, 스포트라이트 검색 및 단축키 앱에서 즉시 단축키를 사용할 수 있습니다.

00:02:34.000 --> 00:02:43.000
이것은 이제 앱 단축키를 만드는 데 사용자 설정이 필요하지 않다는 것을 의미합니다. 사용자가 자동으로 사용할 수 있으며 미리 정의된 문구가 있습니다.

00:02:43.000 --> 00:02:53.000
이러한 초기 트리거 구문은 이제 매개 변수를 포함할 수 있으므로, 그 어느 때보다 빠르게 단축키를 호출하여 언제든지 원하는 것을 정확히 수행할 수 있습니다.

00:02:53.000 --> 00:03:00.000
앱 단축키가 앱과 함께 설치되기 때문에, Siri에 추가 버튼은 더 이상 필요하지 않습니다.

00:03:00.000 --> 00:03:04.000
하지만 사용자는 여전히 당신이 앱에 포함시킨 문구를 알고 있어야 합니다.

00:03:04.000 --> 00:03:09.000
그래서 우리는 지름길을 쉽게 발견할 수 있는 두 가지 방법을 소개했습니다.

00:03:09.000 --> 00:03:15.000
Siri 팁 보기는 사람들이 어떤 단축키를 사용할 수 있고 어떻게 사용하는지 이해하는 데 도움을 준다.

00:03:15.000 --> 00:03:23.000
그리고 새로운 단축키 링크 버튼이 추가되었으므로, 단축키 앱으로 이동하여 앱이 제공하는 모든 앱 단축키를 쉽게 볼 수 있습니다.

00:03:23.000 --> 00:03:31.000
앱은 10개의 미리 정의된 앱 단축키로 제한되므로, 앱과 함께 설치된 앱은 집중되고 잘 정의되어야 합니다.

00:03:31.000 --> 00:03:37.000
이것은 당신의 앱을 사용하는 사람들이 훨씬 더 효율적인 워크플로우를 만들 수 있게 해준다.

00:03:37.000 --> 00:03:46.000
우리는 앱 의도와 앱 단축키로 Siri를 활용하는 두 가지 새로운 현대적인 방법과 Siri 팁 보기와 단축키 링크로 이를 발견하는 유용한 방법을 소개했습니다.

00:03:46.000 --> 00:03:52.000
이 WWDC 세션을 확인하여 앱에 통합하는 방법에 대해 자세히 알아보세요.

00:03:52.000 --> 00:03:54.000
그래서 그게 Siri야.

00:03:54.000 --> 00:04:01.000
위젯은 Siri 의도를 활용하여 앱의 관련 세부 사항을 한 눈에 파악할 수 있는 좋은 방법입니다.

00:04:01.000 --> 00:04:13.000
새로운 앱 인텐츠는 앱 단축키에 전원을 공급하는 데 좋지만, 위젯에 전원을 공급하는 인텐트를 사용하는 사람들은 사용자 지정 SiriKit 인텐트와 인텐트 정의 파일을 계속 사용해야 합니다.

00:04:13.000 --> 00:04:19.000
iOS 16에서는 WidgetKit을 사용하여 iPhone의 잠금 화면에서 컴플리케이션을 만들 수 있습니다.

00:04:19.000 --> 00:04:25.000
그리고 Apple Watch의 컴플리케이션은 이제 위젯 확장 프로그램도 사용하여 제작되었습니다.

00:04:25.000 --> 00:04:30.000
따라서 iOS 16과 watchOS 9용 코드를 한 번 작성할 수 있습니다.

00:04:30.000 --> 00:04:34.000
기존 홈 화면 위젯과 인프라를 공유할 수도 있습니다.

00:04:34.000 --> 00:04:36.000
좀 더 자세히 살펴보자.

00:04:36.000 --> 00:04:46.000
iOS 15는 iPhone과 iPad에 시스템 위젯을 도입했고, watchOS 7은 ClockKit을 사용하여 사용자 지정 컴플리케이션을 도입했다.

00:04:46.000 --> 00:04:54.000
iOS 16 및 watchOS 9의 새로운 기능인 WidgetKit은 Apple Watch의 새로운 잠금 화면 및 컴플리케이션을 위한 위젯을 만드는 데 사용할 수 있습니다.

00:04:54.000 --> 00:05:02.000
우리는 이전 ClockKit 컴플리케이션 패밀리를 대체하는 iOS 및 watchOS용 새로운 위젯 패밀리 유형을 추가했습니다.

00:05:02.000 --> 00:05:22.000
그래서 이제 iPhone을 사용하든 Apple Watch를 사용하든, 선택할 수 있는 몇 가지 일반적인 위젯 유형이 있습니다: 직사각형, 원형, 인라인, 그리고 Apple Watch만을 위한 특별한 유형, 액세서리 코너.

00:05:22.000 --> 00:05:33.000
우리는 또한 iOS 16의 새로운 시스템 스타일을 지원하기 위해 새로운 렌더링 모드를 추가하여 사용자가 선호하는 스타일에 상관없이 위젯이 집에서 느낄 수 있도록 할 수 있습니다.

00:05:33.000 --> 00:05:39.000
올해 우리는 위젯 확장 프로그램을 활용하는 또 다른 강력한 방법을 소개합니다: 라이브 활동.

00:05:39.000 --> 00:05:44.000
라이브 활동은 실시간으로 일어나고 있는 일들을 쉽게 파악할 수 있게 해준다.

00:05:44.000 --> 00:05:49.000
그것들은 당신의 잠금 화면이나 새로운 다이나믹 아일랜드에 표시됩니다.

00:05:49.000 --> 00:05:54.000
라이브 활동은 사용자 인터페이스에 WidgetKit 기능과 SwiftUI를 사용합니다.

00:05:54.000 --> 00:05:58.000
이것은 라이브 활동의 프레젠테이션 코드를 위젯 코드와 비슷하게 만든다.

00:05:58.000 --> 00:06:03.000
또한 위젯과 라이브 활동 간의 코드 공유를 가능하게 합니다.

00:06:03.000 --> 00:06:08.000
그러나, 라이브 활동은 위젯과 같은 업데이트를 위해 타임라인을 사용하지 않는다.

00:06:08.000 --> 00:06:15.000
ActivityKit은 각 라이브 활동의 수명 주기를 처리하기 위해 iOS 16.1에 도입되었습니다.

00:06:15.000 --> 00:06:19.000
당신은 그것을 사용하여 라이브 활동을 요청, 업데이트 및 종료합니다.

00:06:19.000 --> 00:06:31.000
또한, 라이브 활동은 원격 푸시 알림을 받아 업데이트될 수 있으므로, 백엔드에서 데이터가 변경될 때 라이브 활동을 동기화할 수 있습니다.

00:06:31.000 --> 00:06:43.000
항공 앱에서 이것을 사용하여 안전 결정을 내리기 위해 실시간으로 풍속을 모니터링한다고 상상해 보세요. 또는 소매 및 식품 서비스 관리자는 교대 근무에 대한 실시간 통계를 한 눈에 볼 수 있습니다.

00:06:43.000 --> 00:06:55.000
iPhone 14의 잠금 화면에서 찾을 수 있는 것은 다음과 같습니다: 현재 주문의 최신 상태와 같이 휴대폰을 잠금 해제하지 않고 지속적으로 표시되는 라이브 활동.

00:06:55.000 --> 00:07:08.000
iPhone 14 Pro와 iPhone 14 Pro Max를 사용하면 잠금 화면에서 라이브 활동을 볼 수 있으며, 또한 새로운 다이나믹 아일랜드에서 라이브 활동도 볼 수 있습니다.

00:07:08.000 --> 00:07:13.000
이를 통해 시스템 전반에 걸쳐 실시간 데이터를 한 눈에 표시하고 상호 작용할 수 있습니다.

00:07:13.000 --> 00:07:31.000
따라서 배달 기사는 현재 배달 정보를 볼 수 있고, 현장 작업자는 현재 작업 현장의 관련 데이터를 볼 수 있으며, 교대 근무자는 현재 시간을 추적할 수 있습니다. 이 모든 것은 장치의 잠금을 해제하지 않고 다른 앱을 사용하는 동안에도 실시간으로 이루어집니다.

00:07:31.000 --> 00:07:38.000
우리는 잠금 화면을 위한 새로운 위젯을 도입했고 위젯 확장을 위해 ClockKit 합병증을 더 이상 사용하지 않습니다.

00:07:38.000 --> 00:07:46.000
위젯 확장 프로그램은 이제 Apple Watch 컴플리케이션, 잠금 화면 및 홈 화면 위젯뿐만 아니라 새로운 라이브 활동을 강화합니다.

00:07:46.000 --> 00:07:52.000
이 세션으로 더 많은 것을 배우고 오늘 앱을 위한 한눈에 볼 수 있는 경험을 구축하세요.

00:07:52.000 --> 00:07:55.000
그것이 위젯의 새로운 기능이다.

00:07:55.000 --> 00:08:07.000
그래서 당신을 놀라게 할 수도 있지만, iOS와 iPadOS는 세계에서 가장 큰 증강 현실 플랫폼이며, 그 어느 때보다 더 현실적인 방식으로 아이디어를 실현하는 데 도움을 줍니다.

00:08:07.000 --> 00:08:16.000
ARKit 6의 새로운 기능, 우리는 지금까지 가장 높은 이미지 해상도로 카메라 스트림을 실행할 수 있는 4K 비디오 모드를 도입했습니다.

00:08:16.000 --> 00:08:22.000
우리는 또한 비디오 배경을 더 잘 제어할 수 있는 몇 가지 추가 카메라 개선 사항을 도입했습니다.

00:08:22.000 --> 00:08:32.000
비행기 앵커의 동작에 대한 업데이트, 모션 캡처 API의 추가, 그리고 위치 앵커를 지원하는 새로운 도시가 있었다.

00:08:32.000 --> 00:08:47.000
ARKit으로 구동되는 RoomPlan은 iPhone과 iPad의 카메라와 LiDAR 스캐너를 활용하여 가구의 크기와 유형과 같은 주요 특성을 포함하여 방의 3D 평면도를 만드는 새로운 Swift API입니다.

00:08:47.000 --> 00:08:55.000
건축 및 디자인, 소매, 환대 및 부동산 산업 전반에 걸친 워크플로우에서 RoomPlan의 가능성을 상상해 보세요.

00:08:55.000 --> 00:09:05.000
ARKit 6에 대한 훌륭한 업데이트와 3D 평면도를 만들기 위한 RoomPlan이 추가됨에 따라, 앱에 증강 현실을 통합하는 더 많은 방법이 있습니다.

00:09:05.000 --> 00:09:08.000
이 Dub Dub 세션을 보고 더 알아보세요.

00:09:08.000 --> 00:09:10.000
그건 증강 현실이었어.

00:09:10.000 --> 00:09:23.000
비전을 사용하면 컴퓨터 비전을 사용하여 이미지와 비디오를 처리하고 분석할 수 있는 기능을 구축할 수 있으므로 사용자는 장치의 카메라만 사용하여 관련 정보를 빠르게 스캔할 수 있습니다.

00:09:23.000 --> 00:09:30.000
올해, 우리는 텍스트 인식, 바코드 스캐닝 및 광학 흐름에 대한 새로운 개정을 발표했다.

00:09:30.000 --> 00:09:34.000
이러한 개정은 향상된 성능과 정확성을 제공한다.

00:09:34.000 --> 00:09:43.000
바코드 스캔은 이제 여러 바코드, 이미지당 감지된 바코드, 2D 바코드를 위한 향상된 경계 상자에 대한 더 빠른 스캔을 제공합니다.

00:09:43.000 --> 00:09:54.000
텍스트 인식 및 바코드 스캔의 개정 3은 우리의 훌륭한 새로운 라이브 텍스트 및 데이터 스캐너 API의 기초 역할을 하며, 잠시 후에 더 많은 것을 공유하겠습니다.

00:09:54.000 --> 00:09:58.000
텍스트 인식을 위해, 우리는 이제 한국어와 일본어를 지원합니다.

00:09:58.000 --> 00:10:04.000
또한 사전에 언어를 알지 못하는 경우에 언어 인식을 할 수 있는 능력이 있다.

00:10:04.000 --> 00:10:12.000
하지만 사용자가 어떤 언어를 인식하려고 하는지 알고 있다면, 더 나은 성능을 위해 API에서 구성해야 합니다.

00:10:12.000 --> 00:10:21.000
라이브 텍스트는 iOS 15에 도입된 시스템 기능으로, 사진의 데이터와 새로운 방식으로 상호 작용할 수 있습니다.

00:10:21.000 --> 00:10:28.000
올해, 우리는 자신의 앱에 라이브 텍스트 기능을 가져올 수 있는 VisionKit의 새로운 Swift API를 발표했습니다.

00:10:28.000 --> 00:10:39.000
방금 논의한 훌륭한 비전 API를 기반으로 구축된 라이브 텍스트 API는 정적 이미지에서 아름답게 작동하며 일시 중지된 비디오 프레임에서도 사용할 수 있습니다.

00:10:39.000 --> 00:10:55.000
이제 이미지 내부의 텍스트와 직접 상호 작용을 허용할 수 있습니다. 복사와 같은 표준 상호 작용을 사용할 수 있으며, 데이터 탐지기는 주소로 가는 길 찾기, 전화 걸기 또는 이메일 보내기와 같은 것들을 사용할 수 있습니다.

00:10:55.000 --> 00:11:00.000
사용자는 선호하는 언어로 번역된 텍스트를 볼 수도 있습니다.

00:11:00.000 --> 00:11:04.000
마지막으로, QR 코드 감지도 가능합니다.

00:11:04.000 --> 00:11:08.000
복잡한 코드를 작성할 필요 없이 이 모든 것.

00:11:08.000 --> 00:11:18.000
라이브 텍스트 API는 정적 이미지 프레임을 분석하는 데 좋지만, 때로는 바코드 스캔과 같은 카메라를 사용하여 라이브 이미지 분석을 수행해야 합니다.

00:11:18.000 --> 00:11:27.000
iOS 16은 개발자를 위한 데이터 스캔을 단순화하는 VisionKit 프레임워크의 일부로 새로운 DataScannerViewController를 소개합니다.

00:11:27.000 --> 00:11:33.000
이 새로운 뷰 컨트롤러는 스캔 경험을 만드는 데 소요되는 시간을 크게 줄일 것입니다.

00:11:33.000 --> 00:11:44.000
우리는 방금 논의한 모든 훌륭한 Vision API를 가지고 당신을 위해 스캐닝 인터페이스를 관리하는 사용하기 쉬운 드롭인 UI 구성 요소로 포장했습니다.

00:11:44.000 --> 00:11:51.000
데이터 스캐너는 라이브 카메라 미리보기를 사용하여 텍스트와 기계가 읽을 수 있는 코드를 스캔할 수 있는 내장 기능을 제공합니다.

00:11:51.000 --> 00:12:07.000
사용자 정의 가능한 안내 라벨과 항목 강조를 사용하면 사용자가 올바른 것을 빠르게 쉽게 찾고 스캔할 수 있도록 돕고, 선택에도 사용되는 Tap to Focus, 마지막으로 핀치 투 줌을 통해 자세히 살펴볼 수 있습니다.

00:12:07.000 --> 00:12:19.000
데이터 스캐너 API를 앱에 통합하면 타사 스캔 라이브러리 사용과 관련된 비용을 절감하고 앱의 요구에 맞춤화된 아름다운 스캔 경험을 만들 수 있습니다.

00:12:19.000 --> 00:12:28.000
앱이 의료 용품 스캔, 소매 재고 관리 또는 항공사의 수하물 취급에 사용되든, 데이터 스캐너 API는 이를 처리할 수 있습니다.

00:12:28.000 --> 00:12:36.000
기계 판독 가능한 코드의 경우, 기업에서 흔히 볼 수 있는 이러한 강조 표시된 형식을 포함하여 이러한 모든 기호가 지원됩니다.

00:12:36.000 --> 00:12:41.000
한 번에 다른 기호로 여러 코드를 스캔할 수도 있습니다.

00:12:41.000 --> 00:12:47.000
그리고 텍스트 스캔을 위해, 우리는 거리 주소에서 날짜, 시간 및 기간까지 콘텐츠 유형을 지원합니다.

00:12:47.000 --> 00:12:57.000
직원들이 관련 정보를 위해 문서와 영수증을 스캔할 수 있는 여행 또는 경비 앱에 이것을 통합하는 것을 상상해 보세요.

00:12:57.000 --> 00:13:02.000
올해 텍스트 인식을 위한 새로운 개정판이 도입되었다: 바코드 스캐닝과 광학 흐름.

00:13:02.000 --> 00:13:08.000
그리고 얼굴 감지와 랜드마크에 대한 개정판은 올해 더 이상 사용되지 않았다.

00:13:08.000 --> 00:13:12.000
최신 개정판을 사용하는 것이 항상 모범 사례라는 것을 기억하세요.

00:13:12.000 --> 00:13:19.000
우리는 한국어와 일본어에 대한 지원을 추가했으며, 이 모든 것은 새로운 라이브 텍스트 및 데이터 스캐너 API를 지원합니다.

00:13:19.000 --> 00:13:25.000
더 많은 것을 배우고 이 훌륭한 새로운 API를 앱에 통합하려면, 이 세션을 확인하세요.

00:13:25.000 --> 00:13:28.000
그게 비전의 새로운 거야.

00:13:28.000 --> 00:13:31.000
이제 지도를 살펴봅시다.

00:13:31.000 --> 00:13:38.000
애플 지도는 매년 개선되어 더 많은 시각적 디테일과 더 높은 품질의 지도 이미지를 추가하고 있다.

00:13:38.000 --> 00:13:43.000
올해, 우리는 완전히 새로운 지도로 MapKit을 새로운 차원으로 끌어올렸다.

00:13:43.000 --> 00:13:50.000
그것과 함께, 우리는 당신이 도시를 놀랍도록 자세하게 이동할 수 있는 3D 도시 경험을 제공하고 있습니다.

00:13:50.000 --> 00:13:54.000
3D 도시 경험은 전 세계의 많은 대도시 지역에서 이용할 수 있다.

00:13:54.000 --> 00:14:02.000
그리고 이제, 추가 코드 없이 이 새로운 경험과 완전히 새로운 지도를 자신의 앱에 포함할 수 있습니다.

00:14:02.000 --> 00:14:09.000
우리는 또한 LookAround API를 도입하여 이 몰입형 경험을 자신의 앱에 가져올 수 있습니다.

00:14:09.000 --> 00:14:19.000
배관 서비스에서 일하고 도착하기 전에 각 고객 주소를 시각화하거나 처음으로 이 세이프웨이와 같은 대형 매장에 서비스를 제공하는 배달 기사가 될 수 있다고 상상해 보세요.

00:14:19.000 --> 00:14:27.000
주차장과 배달을 위해 가야 할 곳을 정확히 볼 수 있으며 트럭에 얼마나 접근할 수 있는지 알 수 있습니다.

00:14:27.000 --> 00:14:34.000
선택 가능한 지도 기능을 사용하면, 이제 Apple Maps가 제공하는 모든 훌륭한 주석을 활용할 수 있습니다.

00:14:34.000 --> 00:14:40.000
이전에는 지도에서 제공하는 관심 지점을 볼 수 있었지만 그들과 상호 작용할 수 없었습니다.

00:14:40.000 --> 00:14:42.000
올해 새로운, 우리는 그것을 바꾸고 있다.

00:14:42.000 --> 00:14:51.000
기본 주석 보기를 사용하거나 자신만의 사용자 지정 경험을 만들면, 이제 Apple Maps에서 제공하는 관심 지점과 상호 작용할 수 있습니다.

00:14:51.000 --> 00:14:55.000
MapKit은 수년 동안 몇 가지 스타일링 옵션으로 오버레이를 지원해 왔다.

00:14:55.000 --> 00:15:03.000
iOS 16에서는 오버레이가 지도와 원활하게 통합될 수 있도록 기존 API를 개선하고 있습니다.

00:15:03.000 --> 00:15:07.000
그 경로가 나무에 의해 어떻게 막려 있는지 여기서 주목하세요.

00:15:07.000 --> 00:15:16.000
마지막으로, 다양한 유형의 디스플레이를 사용하여 지도를 구성할 수 있는 새로운 지도 구성 API를 추가했습니다.

00:15:16.000 --> 00:15:21.000
사용을 시작해야 하는 선호하는 구성에 대한 새로운 속성이 추가되었습니다.

00:15:21.000 --> 00:15:27.000
지도의 상황에 가장 적합한 것을 선택할 수 있는 세 가지 구성 유형이 있습니다.

00:15:27.000 --> 00:15:32.000
이미지 맵 구성은 위성 스타일의 이미지를 제시하는 데 사용된다.

00:15:32.000 --> 00:15:41.000
하이브리드 구성은 도로 라벨 및 관심 지점과 같은 지도 기능이 추가된 이미지 기반 지도를 제시하는 데 사용됩니다.

00:15:41.000 --> 00:15:47.000
표준 지도 구성은 완전한 그래픽 기반 지도를 제시하는 데 사용된다.

00:15:47.000 --> 00:15:53.000
이 세 가지 지도 구성은 기존 지도 유형과 유사하기 때문에 당신에게 친숙하게 들릴 수 있습니다.

00:15:53.000 --> 00:15:59.000
특정 지도 기능을 보여주기 위한 MapType 및 관련 MKMapView 속성은 더 이상 사용되지 않습니다.

00:15:59.000 --> 00:16:05.000
새로운 지도 구성 API를 사용하여 전환해야 합니다.

00:16:05.000 --> 00:16:08.000
우리의 기본 프레임워크는 놀라운 지도 경험을 제공한다.

00:16:08.000 --> 00:16:14.000
그 경험을 확장하기 위해, 우리는 새로운 Maps Server API를 만들었습니다.

00:16:14.000 --> 00:16:28.000
지오코딩 API를 사용하면 주소를 위도와 경도의 지리적 좌표로 변환할 수 있습니다. 역 지오코딩은 그 반대를 수행하여 좌표를 가져와 주소로 바꿀 수 있습니다.

00:16:28.000 --> 00:16:35.000
검색 API를 사용하면 검색 문자열을 전달하여 비즈니스, 관심 지점 등과 같은 장소를 찾을 수 있습니다.

00:16:35.000 --> 00:16:41.000
그리고 ETA API를 사용하면 주어진 목적지에서 얼마나 멀리 떨어져 있는지 계산할 수 있습니다.

00:16:41.000 --> 00:16:46.000
우리는 아름다운 완전히 새로운 지도와 3D 도시 경험을 소개했다.

00:16:46.000 --> 00:16:56.000
우리는 당신이 지도를 구성하는 새로운 방법과 몇 가지 새로운 서버 API와 함께 그 경험을 자신의 앱에 가져올 수 있도록 새로운 MapKit API를 제공했습니다.

00:16:56.000 --> 00:17:03.000
이 새로운 기능을 지도에 가져오는 것에 대한 자세한 내용을 보려면 이 세션을 확인하세요.

00:17:03.000 --> 00:17:04.000
그건 지도야.

00:17:04.000 --> 00:17:06.000
다음은, 날씨야.

00:17:06.000 --> 00:17:12.000
현재 날씨 정보를 제공하는 것은 사람들이 최신 정보를 유지하고, 안전하고, 준비하는 데 도움이 된다.

00:17:12.000 --> 00:17:16.000
올해, 우리는 완전히 새로운 애플 기상 서비스를 발표했다.

00:17:16.000 --> 00:17:23.000
App Store의 앱과 사용자 지정 앱으로 게시된 앱 모두에 대해 Apple Developer Program의 일부로 사용할 수 있습니다.

00:17:23.000 --> 00:17:30.000
Apple Weather Service는 모든 Apple 플랫폼에서 사용할 수 있는 새로운 기본 프레임워크인 WeatherKit을 지원합니다.

00:17:30.000 --> 00:17:39.000
그리고 일관된 경험이 중요하기 때문에, 우리는 또한 Apple Weather Service를 모든 플랫폼으로 가져오는 데 사용할 수 있는 REST API를 제공하고 있습니다.

00:17:39.000 --> 00:17:48.000
그것은 고해상도 기상 모델(기계 학습 및 예측 알고리즘)을 사용하여 전 세계의 하이퍼로컬 일기 예보를 제공합니다.

00:17:48.000 --> 00:17:51.000
그리고 우리는 항상 사용자의 사생활을 존중할 것입니다.

00:17:51.000 --> 00:17:54.000
위치는 일기 예보에만 사용됩니다.

00:17:54.000 --> 00:18:02.000
그것은 어떠한 개인 식별 정보와도 관련이 없으며, 사용자 데이터는 공유되거나 판매되지 않습니다.

00:18:02.000 --> 00:18:13.000
WeatherKit을 사용하면 현재 기상 조건, 온도, 강수량, 바람, UV 지수 등에 대한 10일 시간별 예보를 얻을 수 있습니다.

00:18:13.000 --> 00:18:19.000
다음 한 시간 동안의 분 단위 강수량과 악천후 경보는 일부 지역에서 사용할 수 있습니다.

00:18:19.000 --> 00:18:23.000
추세를 식별하기 위해 과거 날씨 데이터를 얻을 수도 있습니다.

00:18:23.000 --> 00:18:32.000
기상 조건이 작업 환경에 큰 차이를 만드는 현장 서비스 또는 항공 앱에 WeatherKit을 통합하는 것을 상상해 보세요.

00:18:32.000 --> 00:18:37.000
우리는 새로운 네이티브 WeatherKit 프레임워크를 지원하는 완전히 새로운 Apple Weather Service를 도입했습니다.

00:18:37.000 --> 00:18:42.000
WeatherKit을 모든 플랫폼에 가져올 수 있는 REST API도 있습니다.

00:18:42.000 --> 00:18:47.000
이 모든 것은 하이퍼로컬, 최신 예측을 앱에 제공하는 데 도움이 됩니다.

00:18:47.000 --> 00:18:51.000
더 알아보려면, "Meet WeatherKit" 세션을 보세요.

00:18:51.000 --> 00:18:53.000
그리고 그건 날씨였어.

00:18:53.000 --> 00:19:01.000
푸시투톡 앱은 의료 및 응급 서비스와 같이 신속한 통신이 필수적인 분야에서 많은 용도로 사용됩니다.

00:19:01.000 --> 00:19:06.000
이 분야에서, 의사소통은 실시간이어야 하며 응답 시간은 매우 중요하다.

00:19:06.000 --> 00:19:17.000
iOS 16에서, 우리는 당신이 이 경험을 만들 수 있도록 Push to Talk 프레임워크를 도입했으며, 이것이 많은 기업 개발자들에게 큰 도움이 될 것이라고 생각합니다.

00:19:17.000 --> 00:19:26.000
Push to Talk 프레임워크는 iOS에서 워키토키 스타일의 시스템 경험을 제공하는 새로운 종류의 오디오 통신 앱을 가능하게 합니다.

00:19:26.000 --> 00:19:37.000
푸시 투 토크 프레임워크는 개발자에게 사용자가 앱을 직접 실행하지 않고도 어디서나 액세스할 수 있는 시스템 UI를 활용할 수 있는 API를 제공합니다.

00:19:37.000 --> 00:19:44.000
시스템 UI를 통해 사용자는 백그라운드에서 앱을 실행할 오디오 전송을 빠르게 활성화할 수 있습니다.

00:19:44.000 --> 00:19:50.000
그런 다음 오디오를 녹음하고 백엔드 서버로 스트리밍할 것입니다.

00:19:50.000 --> 00:19:59.000
새로운 프레임워크는 과거에 워키토키 앱을 백그라운드에서 지속적으로 실행하도록 유지했던 특별한 권한과 해결 방법을 제거합니다.

00:19:59.000 --> 00:20:06.000
Push to Talk 프레임워크를 사용하면, 시스템은 배터리 수명을 보존하기 위해 필요할 때만 앱을 깨울 것입니다.

00:20:06.000 --> 00:20:11.000
푸시 투 토크 기능은 첫 번째 응답자와 법 집행 기관이 사용한 오랜 역사를 가지고 있다.

00:20:11.000 --> 00:20:22.000
우리는 또한 커브사이드 픽업 또는 픽업 앤 팩 사용 사례를 지원하는 데 사용되는 소매 및 창고 환경뿐만 아니라 의료 서비스에서 푸시-투-토크 솔루션의 사용이 증가하는 것을 보았습니다.

00:20:22.000 --> 00:20:32.000
Push to Talk 프레임워크는 장치의 어느 곳에서나 사용할 수 있는 친숙한 시스템 인터페이스를 활용하여 워키토키 스타일의 앱을 만들 수 있는 방법을 제공합니다.

00:20:32.000 --> 00:20:39.000
그리고 그것은 기존의 엔드투엔드 통신 솔루션과 백엔드 인프라와 호환되도록 설계되었습니다.

00:20:39.000 --> 00:20:46.000
앱에서 Push to Talk를 구현하는 방법에 대해 자세히 알아보려면, WWDC에서 이 세션을 시청하세요.

00:20:46.000 --> 00:20:48.000
그래서 그건 대화에 대한 압박이야.

00:20:48.000 --> 00:20:55.000
올해, 우리는 기업 고객에게 훌륭한 추가라고 생각하는 CarPlay를 몇 가지 개선했습니다.

00:20:55.000 --> 00:21:05.000
내비게이션 앱은 이제 운전자 바로 앞에 있는 계기판과 같은 두 번째 위치에 지도와 턴 바이 턴 지침을 표시할 수 있습니다.

00:21:05.000 --> 00:21:11.000
이것은 현장 서비스, 판매, 배송 및 운송의 사용 사례를 위한 훌륭한 기능입니다.

00:21:11.000 --> 00:21:19.000
모든 CarPlay 앱은 Apple Developer Program과 앱 유형과 일치하는 CarPlay 앱 자격이 필요합니다.

00:21:19.000 --> 00:21:31.000
이전에 CarPlay 자격은 내비게이션, 오디오, 통신, EV 충전, 주차 및 빠른 음식 주문과 같은 앱 유형으로 제한되었습니다.

00:21:31.000 --> 00:21:36.000
올해, 우리는 두 가지 새로운 유형을 추가했습니다: 연료 공급 및 운전 작업 앱.

00:21:36.000 --> 00:21:46.000
연료 공급 앱은 사용자가 가스 펌프를 시작하는 데 도움이 될 수 있으며, 운전 작업 앱은 사용자가 운전하는 동안 수행해야 할 수 있는 다양한 간단한 작업을 가능하게 할 수 있습니다.

00:21:46.000 --> 00:21:57.000
이 앱은 트레일러 컨트롤러와 같은 자동차 액세서리를 제어하는 데 사용할 수 있습니다. 또는 비용 보고를 위한 마일리지 추적과 같은 드라이브 시작 또는 끝의 작업을 도울 수 있습니다.

00:21:57.000 --> 00:22:03.000
우리는 또한 새로운 CarPlay 시뮬레이터로 CarPlay 앱을 더 쉽게 테스트할 수 있도록 했습니다.

00:22:03.000 --> 00:22:09.000
CarPlay Simulator는 CarPlay 환경을 복제하는 독립형 Mac 응용 프로그램입니다.

00:22:09.000 --> 00:22:17.000
iPhone에 설치되고 연결되면, CarPlay는 iPhone에서 시작되어 실제 자동차에 연결된 것과 동일하게 실행됩니다.

00:22:17.000 --> 00:22:28.000
그리고 앱이 실제 iPhone에서 실행되기 때문에, 완전한 iPhone 기능에 액세스할 수 있으므로 필요한 시나리오를 테스트할 수 있습니다.

00:22:28.000 --> 00:22:37.000
우리는 두 번째 위치에서 턴 바이 턴 방향을 가질 수 있는 기능을 만들었고, CarPlay 시뮬레이터뿐만 아니라 두 가지 새로운 앱 유형을 추가했습니다.

00:22:37.000 --> 00:22:43.000
앱에서 CarPlay를 사용하는 것에 대해 더 알고 싶다면 이 세션을 확인하세요.

00:22:43.000 --> 00:22:48.000
지금까지 우리는 시스템 전반에 걸쳐 사용되는 프레임워크에 대한 몇 가지 개선 사항을 살펴보았다.

00:22:48.000 --> 00:22:55.000
이제, 우리가 UI 프레임워크에 업데이트한 것에 대해 말씀드리고 싶습니다.

00:22:55.000 --> 00:23:04.000
올해 정말 기대되는 것은 데이터를 유익한 시각화로 변환하기 위한 강력하고 유연한 새로운 프레임워크인 스위프트 차트입니다.

00:23:04.000 --> 00:23:07.000
내 생각에 넌 그걸 정말 좋아할 것 같아.

00:23:07.000 --> 00:23:17.000
SwiftUI에서 이미 익숙한 것과 동일한 간결한 구문을 사용하여 최소한의 코드를 기반으로 하는 효과적이고 사용자 정의 가능한 차트를 허용합니다.

00:23:17.000 --> 00:23:32.000
스위프트 차트는 현지화 및 접근성에 대한 지원이 내장되어 있으며, 스위프트UI와 마찬가지로 스위프트 차트는 모든 Apple 플랫폼에 대한 지원을 제공하므로 모든 사람이 차트를 진정으로 사용할 수 있도록 할 수 있습니다.

00:23:32.000 --> 00:23:36.000
스위프트 차트를 사용하면 데이터의 패턴이나 추세를 쉽게 전달할 수 있습니다.

00:23:36.000 --> 00:23:40.000
선 차트, 막대 차트 및 산점도는 모두 쉽게 만들 수 있습니다.

00:23:40.000 --> 00:23:50.000
그리고 차트를 만들 때, 데이터에 맞는 스케일과 축을 자동으로 생성하여 데이터가 변경될 때 필요에 따라 조정합니다.

00:23:50.000 --> 00:23:56.000
스위프트 차트는 데이터 보고 또는 시각화가 필요한 앱에 이와 같은 차트를 가져올 수 있는 쉬운 방법입니다.

00:23:56.000 --> 00:24:07.000
엔터프라이즈 앱에 스위프트 차트, 보고 대시보드, 판매 동향, 실시간 지표, 환자 건강 데이터 및 상상할 수 있는 모든 것을 가져올 수 있는 아름다운 방법을 생각해 보세요.

00:24:07.000 --> 00:24:11.000
스위프트 차트는 당신이 그것에 생명을 불어넣는 데 도움이 될 수 있습니다.

00:24:11.000 --> 00:24:19.000
iPadOS 16을 사용하면 이제 iPad 앱에 놀라운 새로운 기능을 구축하여 진정한 데스크톱 클래스를 만들 수 있습니다.

00:24:19.000 --> 00:24:23.000
우리는 완전히 새로운 Find and Replace UI를 추가했습니다.

00:24:23.000 --> 00:24:32.000
검색은 이제 공간을 덜 차지하고 iPadOS의 탐색 모음에 인라인으로 표시되며, 버튼으로 축소될 수도 있습니다.

00:24:32.000 --> 00:24:39.000
검색 제안은 검색이 활성화되면 나타나며 검색 쿼리가 변경됨에 따라 업데이트할 수 있습니다.

00:24:39.000 --> 00:24:43.000
그리고 우리는 아이패드에 데스크톱급 편집을 가져왔습니다.

00:24:43.000 --> 00:24:48.000
편집 메뉴에는 이제 사용된 입력을 기반으로 한 대체 프레젠테이션이 있습니다.

00:24:48.000 --> 00:24:54.000
터치 상호 작용의 경우, 익숙한 메뉴를 볼 수 있지만 새로운 페이징 동작을 볼 수 있습니다.

00:24:54.000 --> 00:25:00.000
매직 키보드나 트랙패드를 사용할 때, 상황에 맞는 메뉴가 표시됩니다.

00:25:00.000 --> 00:25:10.000
UIKit은 기존 내비게이션 바 스타일을 공식화하고 밀도가 높고 사용자 정의 가능한 레이아웃으로 두 개의 새로운 스타일을 도입하고 있습니다.

00:25:10.000 --> 00:25:14.000
네비게이터 앱에는 친숙한 푸시팝 내비게이션 모델이 있다.

00:25:14.000 --> 00:25:19.000
이것은 일반적으로 설정과 같은 계층적 데이터를 표시하는 앱에 적합합니다.

00:25:19.000 --> 00:25:29.000
사파리나 파일과 같은 브라우저는 여러 문서나 폴더 구조 사이를 보고 탐색하는 데 이상적입니다.

00:25:29.000 --> 00:25:34.000
그리고 편집자는 개별 문서를 집중적으로 보거나 편집하는 데 적합합니다.

00:25:34.000 --> 00:25:46.000
iPad의 내비게이션 바 스타일에 대해 더 구체화되고 있는 것처럼, 우리는 더 구체적인 내비게이션 스타일을 위한 새로운 SwiftUI API를 도입하고 있습니다.

00:25:46.000 --> 00:25:51.000
지금까지, 당신은 내비게이션 기반 앱에 내비게이션 뷰를 사용했습니다.

00:25:51.000 --> 00:25:58.000
올해, 우리는 내비게이션 뷰에서 벗어나 내비게이션을 처리하기 위한 두 가지 더 구체적인 옵션을 도입했습니다.

00:25:58.000 --> 00:26:03.000
다중 열 지도에 완벽한 내비게이션 분할 보기부터 시작합시다.

00:26:03.000 --> 00:26:09.000
내비게이션 분할 보기는 iPhone의 단일 열 스택에 자동으로 적응합니다.

00:26:09.000 --> 00:26:13.000
App Store Connect 앱과 마찬가지로 두 열 레이아웃이 있습니다.

00:26:13.000 --> 00:26:17.000
노트와 같은 세 개의 열 레이아웃도 있다.

00:26:17.000 --> 00:26:22.000
또는 iPad와 Mac에서 세 열 레이아웃을 보여주는 메일 앱.

00:26:22.000 --> 00:26:29.000
단일 열 레이아웃은 iPad의 Slide Over에도 표시되며 Apple Watch에도 적합합니다.

00:26:29.000 --> 00:26:36.000
내비게이션 스택은 뷰 스택에서 앞뒤로 탐색하기 위한 푸시팝 인터페이스를 나타낸다.

00:26:36.000 --> 00:26:42.000
우리는 설정 앱이나 Apple Watch의 나의 찾기와 같은 많은 곳에서 이러한 스타일의 내비게이션을 볼 수 있습니다.

00:26:42.000 --> 00:26:48.000
내비게이션 스택을 분할 뷰와 혼합하여 인터페이스를 만드는 더 많은 방법을 찾을 수 있습니다.

00:26:48.000 --> 00:26:56.000
새로운 내비게이션 스택은 또한 딥 링크와 프로그래밍 방식의 내비게이션을 쉽게 구현할 수 있게 해준다.

00:26:56.000 --> 00:27:01.000
이러한 업데이트와 함께, 내비게이션 링크는 iOS 16에서 변경되었습니다.

00:27:01.000 --> 00:27:05.000
내비게이션 링크는 SwiftUI에서 다른 뷰를 제시하는 데 사용됩니다.

00:27:05.000 --> 00:27:14.000
설정 앱에서, 다양한 옵션과 계층을 이동할 때, 탐색 링크는 앱에 다음에 표시할 보기를 알려줍니다.

00:27:14.000 --> 00:27:24.000
이전에는 탐색 링크가 제목과 대상 보기를 제공하여 구성되었지만, 이제는 제시된 데이터 값에 따라 트리거될 수도 있습니다.

00:27:24.000 --> 00:27:29.000
마지막으로, 내비게이션 스택은 또한 경로를 추적한다.

00:27:29.000 --> 00:27:33.000
경로는 뷰 사이를 이동할 때 스택의 모든 데이터를 나타냅니다.

00:27:33.000 --> 00:27:37.000
스택이 루트 뷰를 보여줄 때, 경로는 비어 있다.

00:27:37.000 --> 00:27:41.000
뷰가 스택에 추가됨에 따라, 그 값은 경로에 추가됩니다.

00:27:41.000 --> 00:27:50.000
내비게이션 스택은 이 경로에 바인딩을 사용하여 데이터 기반 프로그래밍 방식 탐색을 쉽게 가능하게 합니다.

00:27:50.000 --> 00:27:54.000
그리고 Device.name을 사용하는 개발자들을 위해, 몇 가지 중요한 변화가 있습니다.

00:27:54.000 --> 00:28:01.000
iOS 16 이전에는 UIDevice API를 통해 사용자가 할당한 장치 이름에 액세스할 수 있었습니다.

00:28:01.000 --> 00:28:10.000
사용자 데이터를 더 잘 보호하기 위해, UIDevice.name API는 이제 사용자가 할당한 이름 대신 장치의 모델만 반환합니다.

00:28:10.000 --> 00:28:15.000
우리는 앱이 여전히 장치 이름을 필요로 하는 몇 가지 상황이 있다는 것을 알고 있습니다.

00:28:15.000 --> 00:28:22.000
아마도 사용자가 마지막으로 파일을 편집한 장치를 확인해야 하는 문서 관리 앱이 있을 것입니다.

00:28:22.000 --> 00:28:28.000
항상 그렇듯이 사용자가 할당한 장치 이름에 계속 액세스할 수 있는 권한을 요청할 수 있습니다.

00:28:28.000 --> 00:28:36.000
Device.name이 필요한 엔터프라이즈 또는 사용자 지정 앱이 있는 경우, 자격 요청을 제출할 때 사용 사례를 자세히 설명하십시오.

00:28:36.000 --> 00:28:40.000
공유 장치인지 아닌지 반드시 포함하세요.

00:28:40.000 --> 00:28:48.000
자격 기준의 전체 목록은 사용자가 할당한 장치 이름 자격에 대한 문서를 확인하십시오.

00:28:48.000 --> 00:28:50.000
그리고 그것은 UI 프레임워크이다.

00:28:50.000 --> 00:28:58.000
우리는 아름다운 데이터 시각화를 위해 스위프트 차트를 도입하고 iPad를 진정한 데스크톱 클래스로 만들기 위해 몇 가지 새로운 기능을 추가했습니다.

00:28:58.000 --> 00:29:06.000
우리는 탐색 스택 또는 탐색 분할 보기를 사용하기 위해 SwiftUI에서 탐색 보기를 더 이상 사용하지 않습니다.

00:29:06.000 --> 00:29:13.000
모든 최신 세부 사항을 최신 상태로 유지하려면, 개발자 앱으로 이동하여 이 세션을 시작하세요.

00:29:13.000 --> 00:29:18.000
우리는 방금 코드에서 훌륭한 인터페이스를 구축하는 데 도움이 되는 UI 프레임워크를 보았습니다.

00:29:18.000 --> 00:29:24.000
마지막으로, 인터페이스를 설계하는 데 사용하는 도구를 개선한 몇 가지 방법을 살펴보겠습니다.

00:29:24.000 --> 00:29:31.000
하지만 먼저, 저는 소비자 앱뿐만 아니라 디자인이 왜 중요한지에 대해 잠시 이야기하고 싶습니다.

00:29:31.000 --> 00:29:35.000
잘 설계된 엔터프라이즈 앱은 비즈니스에 큰 영향을 미칠 수 있습니다.

00:29:35.000 --> 00:29:43.000
사용자가 기대하는 일관되고 친숙한 인터페이스를 만드는 것은 그들을 더 생산적이고 효과적인 직원으로 만들 수 있습니다.

00:29:43.000 --> 00:29:54.000
그리고 그것은 교육 및 지원 비용과 같은 것들에 대한 비즈니스 비용을 절약하는 동시에 앱에 대한 높은 수준의 채택과 직원 워크플로우의 효율성을 보장합니다.

00:29:54.000 --> 00:30:02.000
디자인은 훌륭한 앱을 만드는 데 중요한 구성 요소이기 때문에, 우리는 휴먼 인터페이스 지침을 만들었습니다.

00:30:02.000 --> 00:30:11.000
휴먼 인터페이스 지침은 오랫동안 Apple 플랫폼에서 훌륭한 경험을 만드는 데 도움이 되는 포괄적인 자원이었습니다.

00:30:11.000 --> 00:30:16.000
이제 그것은 당신의 현재 요구를 충족시키기 위해 완전히 재설계되고 새로 고쳐졌습니다.

00:30:16.000 --> 00:30:21.000
HIG는 플랫폼별 지침을 통합 문서로 통합했다.

00:30:21.000 --> 00:30:28.000
이것은 각 플랫폼에 대한 관련 세부 사항을 유지하면서 일반적인 디자인 접근 방식을 더 쉽게 탐색할 수 있게 해준다.

00:30:28.000 --> 00:30:31.000
탐색하기가 더 쉽고 이제 검색할 수 있습니다.

00:30:31.000 --> 00:30:38.000
올해 말에, 우리는 또한 전체 지침 세트에 대한 변경 로그를 추가할 것입니다.

00:30:38.000 --> 00:30:45.000
SF 심볼은 앱에 일관된 아이콘을 가져올 수 있는 대규모 도상학 라이브러리입니다.

00:30:45.000 --> 00:30:49.000
SF 기호 4로, 우리는 700개의 새로운 기호를 추가했습니다.

00:30:49.000 --> 00:31:00.000
그래서 이제 선택할 수 있는 4000개 이상의 기호가 있으며, 이 모든 것은 이제 Xcode 또는 SF Symbols 앱에서 직접 사용할 수 있습니다.

00:31:00.000 --> 00:31:04.000
렌더링 모드를 사용하면 색상이 기호에 어떻게 적용되는지 제어할 수 있습니다.

00:31:04.000 --> 00:31:13.000
SF 심볼은 네 가지 렌더링 모드를 지원합니다: 흑백, 계층, 팔레트 및 다색.

00:31:13.000 --> 00:31:22.000
이러한 렌더링 모드는 앱에서 기호를 표시하는 다양한 방법을 허용하며, 주어진 컨텍스트에 가장 적합한 것을 선택할 수 있습니다.

00:31:22.000 --> 00:31:28.000
이전에는 렌더링 모드가 지정되지 않았다면, 기본값은 항상 흑백일 것이다.

00:31:28.000 --> 00:31:33.000
SF Symbols 4로, 우리는 "자동"이라는 새로운 렌더링 모드를 추가했습니다.

00:31:33.000 --> 00:31:40.000
자동 렌더링을 통해, 개별 기호는 네 가지 모드 중 하나를 선호하는 렌더링 모드로 식별할 수 있습니다.

00:31:40.000 --> 00:31:44.000
이것은 각 상징이 독특한 특징을 가장 잘 강조할 수 있게 해준다.

00:31:44.000 --> 00:31:56.000
예를 들어, 여기서 구름, 태양, 비 기호와 육각형 그리드는 흑백을 선호하는 반면, SharePlay와 iPhone 전파 아이콘은 계층을 선호한다.

00:31:56.000 --> 00:32:06.000
자동 렌더링은 이제 모든 기호의 기본 모드이며 특정 컨텍스트에 대해 다른 모드가 명시적으로 요청되지 않는 한 선호됩니다.

00:32:06.000 --> 00:32:16.000
다양한 렌더링 모드와 구성에서 기호가 어떻게 보이는지 시각화하기 위해, SF 심볼 앱은 오른쪽 사이드바에 있는 새로운 미리보기 영역을 얻었다.

00:32:16.000 --> 00:32:20.000
SF 기호 4는 또한 가변 기호에 대한 지원을 추가합니다.

00:32:20.000 --> 00:32:26.000
왼쪽 사이드바에서 변수 컬렉션을 선택하여 업데이트된 기호를 찾을 수 있습니다.

00:32:26.000 --> 00:32:34.000
가변 기호를 사용하면 앱이 0에서 1까지의 값을 기준으로 단일 기호의 다른 레이어를 표시할 수 있습니다.

00:32:34.000 --> 00:32:38.000
앱은 이제 스피커 기호를 사용하여 현재 볼륨을 나타낼 수 있습니다.

00:32:38.000 --> 00:32:51.000
0의 값에서, 스피커 웨이브는 희미해진다; 그리고 값이 최대 1까지 증가함에 따라, 스피커 웨이브는 점진적으로 채워져 볼륨 레벨의 변화를 나타낸다.

00:32:51.000 --> 00:33:00.000
그리고 사용자 지정 기호를 만들고 있다면, 미리보기 영역에도 표시된 새로운 통합 레이어 주석을 확인하고 싶을 것입니다.

00:33:00.000 --> 00:33:08.000
이를 통해 렌더링 모드에서 공유 계층 구조를 가질 수 있어 주석을 더 빠르고 쉽게 만들 수 있습니다.

00:33:08.000 --> 00:33:10.000
디자인을 계속하다.

00:33:10.000 --> 00:33:21.000
올해, 우리는 샌프란시스코 글꼴 패밀리에 세 가지 새로운 너비 스타일을 추가했습니다: 압축, 압축 및 확장.

00:33:21.000 --> 00:33:25.000
이것은 당신이 타이포그래피를 디자인할 때 더 많은 유연성을 가지고 있다는 것을 의미합니다.

00:33:25.000 --> 00:33:31.000
Photo Memories와 Apple News에서 이러한 새로운 스타일의 예를 볼 수 있습니다.

00:33:31.000 --> 00:33:42.000
우리는 또한 SF Arabic과 SF Arabic Rounded를 시스템 글꼴에 추가하여 Apple 플랫폼에서 아랍어 타이포그래피를 현대적이고 명확하며 세련되게 만들었습니다.

00:33:42.000 --> 00:33:48.000
우리는 Xcode 14에서 iOS 앱의 아이콘을 훨씬 쉽게 추가할 수 있도록 했습니다.

00:33:48.000 --> 00:33:52.000
Xcode 13과 그 이전에서는 모든 크기의 이미지를 제공해야 했습니다.

00:33:52.000 --> 00:33:58.000
우리는 이제 iOS를 위한 하나의 대형 이미지만 요구하고 있습니다.

00:33:58.000 --> 00:34:04.000
큰 앱 아이콘은 모든 iPhone, iPad 및 Apple Watch 장치에 표시되도록 조정됩니다.

00:34:04.000 --> 00:34:12.000
더 작은 크기의 사용자 지정 이미지를 추가하고 싶다면, 여전히 특정 아이콘 이미지를 추가할 수 있습니다.

00:34:12.000 --> 00:34:25.000
올해, 우리는 휴먼 인터페이스 지침을 완전히 개편하고, 새로운 아이콘과 SF Symbols 4, 글꼴 추가 및 앱 아이콘에 단일 이미지를 사용할 수 있는 기능을 제공합니다.

00:34:25.000 --> 00:34:29.000
더 알아보려면, 이 Dub Dub 세션을 확인하세요.

00:34:29.000 --> 00:34:33.000
음, 그건 많았지만, 우리는 해냈어!

00:34:33.000 --> 00:34:37.000
그것들은 내가 너희 모두가 알기를 원했던 올해 발표의 하이라이트였다.

00:34:37.000 --> 00:34:44.000
그리고 저는 여기에 기업 앱을 더 좋게 만드는 데 사용할 수 있는 훌륭한 것들이 많이 있었다고 생각합니다.

00:34:44.000 --> 00:34:49.000
제가 다룬 모든 것에 대해 자세히 알아보려면, 개발자 앱에서 모든 세션을 확인할 수 있습니다.

00:34:49.000 --> 00:34:52.000
오늘 새로운 SDK를 사용하기 시작하세요.

00:34:52.000 --> 00:34:56.000
그리고 새로운 기능을 탐색할 때 피드백을 제공해 주세요.

00:34:56.000 --> 00:35:06.000
이 새로운 도구를 사용하여 사용자의 경험을 개선하고 작업을 더 빠르고 쉽게 수행할 수 있도록 하는 방법을 빨리 보고 싶습니다.

00:35:06.000 --> 23:59:59.000
들어줘서 고마워!

