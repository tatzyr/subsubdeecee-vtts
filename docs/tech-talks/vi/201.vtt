WEBVTT

00:00:01.000 --> 00:00:09.000
Liên kết ứng dụng của bạn với iOS 11 SDK là điều duy nhất bạn cần làm để tận dụng màn hình siêu Retina trên iPhone X.

00:00:09.000 --> 00:00:19.000
Nếu ứng dụng của bạn chủ yếu dựa trên các điều khiển UIKit tiêu chuẩn và bạn sử dụng Bố cục tự động, thì bạn đang ở trong tình trạng tốt vì hầu hết công việc sẽ được UIKit thực hiện cho bạn.

00:00:19.000 --> 00:00:27.000
Nếu bạn sử dụng các điều khiển tùy chỉnh hoặc bạn không sử dụng Bố cục tự động hoặc nếu bạn là một ứng dụng toàn màn hình tùy chỉnh như nhiều trò chơi, đừng lo lắng.

00:00:27.000 --> 00:00:35.000
Mặc dù có thể có một số công việc để bạn làm, nhưng nó không khó và có rất nhiều hỗ trợ được tích hợp với các công cụ như hướng dẫn bố trí Khu vực An toàn mới.

00:00:35.000 --> 00:00:43.000
Trong cả hai trường hợp, bạn sẽ muốn kiểm tra kỹ lưỡng ứng dụng của mình, đặc biệt là trong bối cảnh, để đảm bảo mọi thứ đều ổn.

00:00:43.000 --> 00:00:54.000
Phiên bản mới nhất của Xcode bao gồm hỗ trợ mô phỏng cho iPhone X, cho phép bạn thực hiện hầu hết các thay đổi bố cục, đặc biệt là bất kỳ điều chỉnh nào liên quan đến việc tôn trọng Khu vực An toàn.

00:00:54.000 --> 00:01:02.000
Đối với một số ứng dụng, như những ứng dụng sử dụng Metal hoặc các tính năng phần cứng như camera mặt trước, bạn có thể cần sử dụng một thiết bị thực tế.

00:01:02.000 --> 00:01:05.000
Chúng ta hãy xem nhanh trình mô phỏng iPhone X mới.

00:01:05.000 --> 00:01:11.000
Cũng giống như các trình mô phỏng iPhone hoặc iPad khác, bạn sẽ có quyền truy cập vào nhiều ứng dụng hệ thống tích hợp sẵn.

00:01:11.000 --> 00:01:18.000
Đây là một cách tuyệt vời để xem các ví dụ về cách các thành phần UIKit khác nhau hoạt động trên iPhone X.

00:01:18.000 --> 00:01:27.000
Ví dụ, ứng dụng Tệp hiển thị nhiều API iOS 11 mới nhất đang hoạt động, như thanh tìm kiếm tích hợp hoặc tiêu đề thanh điều hướng lớn.

00:01:27.000 --> 00:01:34.000
Và đừng quên, bạn có thể đăng nhập vào tài khoản iCloud của mình trong trình giả lập, cho phép bạn truy cập vào iCloud Drive.

00:01:34.000 --> 00:01:40.000
Điều này giúp việc chuyển các tệp hoặc kiểm tra nội dung như ảnh vào trình giả lập thực sự dễ dàng.

00:01:40.000 --> 00:01:47.000
Một ví dụ điển hình khác là ứng dụng Danh bạ, cho thấy chế độ xem bảng hoạt động như thế nào trên iPhone X.

00:01:47.000 --> 00:01:58.000
Đảm bảo xoay trình giả lập sang ngang nơi bạn có thể thấy các hành vi như tiêu đề phần đi từ cạnh này sang cạnh khác, nhưng nội dung bảng vẫn thụt lề theo Khu vực An toàn.

00:01:58.000 --> 00:02:01.000
Chúng ta sẽ nói nhiều hơn về chế độ xem bảng một lát sau.

00:02:01.000 --> 00:02:05.000
Hãy chuyển sang một ứng dụng mà tôi làm việc, ứng dụng WWDC.

00:02:05.000 --> 00:02:12.000
Tôi đã dành một chút thời gian để chuyển nó sang iPhone X và tôi muốn chia sẻ một số vấn đề về bố cục mà tôi gặp phải và cách tôi khắc phục chúng.

00:02:12.000 --> 00:02:16.000
Ứng dụng WWDC thực sự là một ứng dụng khá điển hình trong thế giới thực.

00:02:16.000 --> 00:02:22.000
Nó đã tồn tại được một số năm và nó đã được các kỹ sư khác nhau làm việc từ năm này sang năm khác.

00:02:22.000 --> 00:02:30.000
Mặc dù nó sử dụng nhiều điều khiển tiêu chuẩn và Bố cục tự động, nhưng nó cũng có chế độ xem tùy chỉnh và các phần cũ hơn của ứng dụng thực hiện bố cục thủ công thay thế.

00:02:30.000 --> 00:02:36.000
Tôi sẽ sử dụng nó để làm nổi bật ba khu vực khác nhau cần được cập nhật cho iPhone X.

00:02:36.000 --> 00:02:41.000
Tôi đã bắt đầu bằng cách mở dự án trong Xcode 9 và đặt Base SDK thành iOS 11.

00:02:41.000 --> 00:02:44.000
Vì vậy, tất cả chúng ta đã sẵn sàng để chạy ở độ phân giải gốc.

00:02:44.000 --> 00:02:55.000
Khi bạn làm điều này với ứng dụng của mình, nếu bạn không thấy nó chạy ở độ phân giải iPhone X đầy đủ, hãy kiểm tra kỹ xem bạn đã định cấu hình Bảng phân cảnh khởi chạy chưa, vì điều đó cũng cần thiết.

00:02:55.000 --> 00:02:59.000
Được rồi, chế độ xem ban đầu của chúng tôi là tab Video, và điều này trông khá tốt.

00:02:59.000 --> 00:03:07.000
Đây là mã hoàn toàn mới trong năm nay sử dụng UICollectionView với Bố cục Tự động, cùng với thanh điều hướng tiêu chuẩn và các điều khiển trên thanh công cụ.

00:03:07.000 --> 00:03:14.000
Vì vậy, tôi không thực sự ngạc nhiên khi hầu hết các giao diện được bố trí chính xác, bởi vì UIKit đang làm hầu hết công việc cho tôi.

00:03:14.000 --> 00:03:17.000
Một nơi mà chúng tôi không sử dụng Bố cục Tự động là trên tab Tin tức.

00:03:17.000 --> 00:03:19.000
Hãy cùng xem xét điều đó.

00:03:19.000 --> 00:03:24.000
Chế độ xem này thực sự trông khá tốt, mặc dù nó đang thực hiện bố cục thủ công của giao diện người dùng.

00:03:24.000 --> 00:03:36.000
Mặc dù chúng tôi không sử dụng Bố cục Tự động trực tiếp, mã thực hiện bố cục đang chú ý đến các nội dung lề bố cục và UIKit tự động điều chỉnh chúng để tôn trọng Khu vực An toàn.

00:03:36.000 --> 00:03:43.000
Vấn đề đầu tiên mà tôi gặp phải là ở đây trên tab Tin tức và nó nằm trong trình xem ảnh toàn màn hình.

00:03:43.000 --> 00:03:49.000
Mặc dù chế độ xem cụ thể này sử dụng Bố cục Tự động, điều khiển trang ở quá xa ở cuối màn hình.

00:03:49.000 --> 00:03:53.000
Nó đang chạy vào chỉ báo Home.

00:03:53.000 --> 00:04:03.000
Vấn đề ở đây là ràng buộc dưới cùng của điều khiển trang có liên quan đến chế độ xem trên toàn màn hình và đi phía sau chỉ báo Trang chủ.

00:04:03.000 --> 00:04:10.000
Thay vì hạn chế chế độ xem trên, những gì chúng ta nên làm là hạn chế điều khiển trang với hướng dẫn bố cục Khu vực An toàn ở dưới cùng.

00:04:10.000 --> 00:04:14.000
Hãy thay đổi điều đó ngay bây giờ.

00:04:14.000 --> 00:04:22.000
Tôi đã mở giao diện này trong Xcode, nhưng trước khi tôi có thể điều chỉnh ràng buộc, tôi cần bật hướng dẫn bố cục Khu vực An toàn trong tệp xib này.

00:04:22.000 --> 00:04:31.000
Bảng phân cảnh và xibs được tạo trước Xcode 9 sẽ không tự động bật hướng dẫn bố cục Khu vực An toàn.

00:04:31.000 --> 00:04:38.000
Đi đến trình kiểm tra Tài liệu và chọn hộp kiểm Sử dụng Hướng dẫn Bố cục Khu vực An toàn.

00:04:38.000 --> 00:04:50.000
Một điều cần lưu ý ở đây là đối với bảng phân cảnh iOS, bật tính bảng phân cảnh này sẽ tự động nâng cấp các ràng buộc gắn liền với hướng dẫn bố cục trên và dưới của cảnh, cũng như các cạnh đầu và cuối.

00:04:50.000 --> 00:04:56.000
Vì vậy, hãy chắc chắn xem lại và kiểm tra các ràng buộc Bố cục Tự động của bạn sau khi bật tính năng này.

00:04:56.000 --> 00:05:00.000
Bây giờ tôi có thể chọn ràng buộc dưới cùng của điều khiển trang.

00:05:00.000 --> 00:05:04.000
Và nhìn vào thanh tra Thuộc tính cho ràng buộc này.

00:05:04.000 --> 00:05:11.000
Ở đây chúng ta thấy rằng ràng buộc được kết nối với cạnh dưới của siêu xem và đó là những gì đang giữ quyền kiểm soát quá xa.

00:05:11.000 --> 00:05:22.000
Thay vì Superview, nếu chúng ta thay đổi điều này để được kết nối với Khu vực An toàn, thì trên iPhone X, chỉ báo trang sẽ tự động di chuyển lên trên chỉ báo Trang chủ.

00:05:22.000 --> 00:05:30.000
Khi tôi xây dựng và chạy bây giờ, điều khiển trang ở đúng vị trí và điều này hoạt động cho cả dọc và ngang.

00:05:30.000 --> 00:05:35.000
Hãy chuyển sang vấn đề thứ hai mà tôi tìm thấy, vấn đề này đã kết thúc trong tab Video.

00:05:35.000 --> 00:05:42.000
Một lần nữa, mọi thứ có vẻ khá tốt, nhưng nếu tôi đưa ra trường tìm kiếm, thì, điều đó có vẻ không hoàn toàn đúng.

00:05:42.000 --> 00:05:45.000
Hãy so sánh điều này với giao diện ứng dụng Danh bạ.

00:05:45.000 --> 00:05:47.000
Một vài điều có vẻ không ổn ở đây.

00:05:47.000 --> 00:05:52.000
Màu sắc của nền thanh tìm kiếm không hoàn toàn đúng và kích thước hơi lệch.

00:05:52.000 --> 00:05:56.000
Và nếu tôi xoay sang phong cảnh, tôi có thể thấy mọi thứ cũng không nhìn ngay tại đây.

00:05:56.000 --> 00:06:01.000
Trường tìm kiếm và các nút Hủy đều bị cắt bởi các góc tròn của màn hình.

00:06:01.000 --> 00:06:07.000
Đây là một ví dụ điển hình trong đó việc chú ý đến Khu vực An toàn thực sự quan trọng.

00:06:07.000 --> 00:06:14.000
Đối với trường tìm kiếm này, những gì ứng dụng WWDC đang làm là trình bày rõ ràng bộ điều khiển tìm kiếm giao diện người dùng.

00:06:14.000 --> 00:06:23.000
Bây giờ trong iOS 11, thanh tìm kiếm có thể được tích hợp với thanh điều hướng, thanh này sẽ cung cấp bản trình bày phù hợp như chúng ta đã thấy trong Danh bạ.

00:06:23.000 --> 00:06:26.000
Hãy nhìn vào mã và thực hiện thay đổi đó.

00:06:26.000 --> 00:06:29.000
Đây là mã trình bày bộ điều khiển tìm kiếm của chúng tôi.

00:06:29.000 --> 00:06:30.000
Tôi sẽ thực hiện hai thay đổi.

00:06:30.000 --> 00:06:37.000
Đầu tiên, thay vì trình bày bộ điều khiển tìm kiếm, chúng tôi sẽ đưa nó cho UINavigationItem cho bộ điều khiển chế độ xem này.

00:06:37.000 --> 00:06:43.000
Và thứ hai, tôi sẽ đặt thuộc tính isActive của bộ điều khiển tìm kiếm thành true.

00:06:43.000 --> 00:06:47.000
Điều này sẽ khiến thanh điều hướng kích hoạt nó và bắt đầu chỉnh sửa.

00:06:47.000 --> 00:06:56.000
Lưu ý rằng chúng tôi có thể sử dụng hỗ trợ tính khả dụng để chỉ làm điều này cho iOS 11, trong khi vẫn giữ nguyên hành vi hiện có cho các phiên bản iOS cũ hơn.

00:06:56.000 --> 00:06:58.000
Hãy xây dựng và chạy để xem nó trông như thế nào.

00:06:58.000 --> 00:06:59.000
Tốt hơn nhiều.

00:06:59.000 --> 00:07:03.000
Điều này trông giống như bản trình bày chính xác của trường tìm kiếm cho iOS 11.

00:07:03.000 --> 00:07:06.000
Và trong phong cảnh? Tuyệt vời.

00:07:06.000 --> 00:07:14.000
Bây giờ thanh tìm kiếm đang phù hợp với Khu vực An toàn một cách độc đáo và tất cả điều này đang được quản lý tự động cho chúng tôi bởi thanh điều hướng.

00:07:14.000 --> 00:07:22.000
Nếu bạn có các thanh tìm kiếm trong giao diện người dùng của mình với các thanh điều hướng, bạn chắc chắn muốn thực hiện một thay đổi tương tự trên iOS 11.

00:07:22.000 --> 00:07:26.000
Bây giờ chúng ta hãy xem phần thứ ba của ứng dụng mà tôi cần làm việc.

00:07:26.000 --> 00:07:30.000
Ở đây trong tab Lịch trình, chúng tôi đang sử dụng UITableView.

00:07:30.000 --> 00:07:36.000
Bố cục trong ảnh chân dung trông khá tốt, mặc dù chúng tôi có một trường hợp khác của thanh tìm kiếm trông không đúng.

00:07:36.000 --> 00:07:45.000
Cái này tình cờ được chèn vào chế độ xem bảng dưới dạng chế độ xem tiêu đề, nhưng thay vào đó chúng ta có thể áp dụng thay đổi tương tự như trước để tích hợp nó với thanh điều hướng.

00:07:45.000 --> 00:07:52.000
Tôi sẽ đặt bộ điều khiển tìm kiếm trên mục điều hướng của bộ điều khiển chế độ xem và đặt trạng thái hoạt động một cách thích hợp.

00:07:52.000 --> 00:07:53.000
Hãy xây dựng và chạy.

00:07:53.000 --> 00:07:55.000
Cái này trông thật tuyệt.

00:07:55.000 --> 00:08:02.000
Nếu tôi xoay sang ngang, trường tìm kiếm trông ổn và hầu hết giao diện người dùng trông giống như nó tôn trọng các khu vực an toàn.

00:08:02.000 --> 00:08:10.000
Nhưng nếu bạn nhìn kỹ, chúng tôi sử dụng màu nền tùy chỉnh cho tiêu đề phần bảng và điều đó có vẻ sai.

00:08:10.000 --> 00:08:15.000
Màu sắc nên được mở rộng đến cạnh của màn hình, giống như chúng làm trong ứng dụng Danh bạ.

00:08:15.000 --> 00:08:23.000
Nếu chúng ta nhìn vào mã, chúng ta có thể thấy rằng ứng dụng đang đặt màu nền trên chế độ xem nội dung của chế độ xem tiêu đề.

00:08:23.000 --> 00:08:30.000
Đó có vẻ là một điều hợp lý để làm, và trên thực tế, nó hoạt động tốt trên iPhone khác ngoài iPhone X.

00:08:30.000 --> 00:08:32.000
Vậy vấn đề ở đây là gì?

00:08:32.000 --> 00:08:39.000
Để hiểu những gì đang xảy ra, chúng ta cần xem xét chi tiết về cách chế độ xem bảng hiển nhiên mọi thứ trên iPhone X.

00:08:39.000 --> 00:08:45.000
Để giúp minh họa điều này, hãy bắt đầu với Trình gỡ lỗi phân cấp chế độ xem thực sự hữu ích trong Xcode.

00:08:45.000 --> 00:08:48.000
Đây là quan điểm mà chúng tôi đang xem.

00:08:48.000 --> 00:08:56.000
Ở phía dưới bên phải, tôi có thể điều chỉnh phạm vi chế độ xem hiển thị để ẩn tất cả các chế độ xem ngoại trừ chế độ xem bảng.

00:08:56.000 --> 00:08:59.000
Chế độ xem bảng sẽ có kích thước đầy đủ của màn hình.

00:08:59.000 --> 00:09:04.000
Bây giờ tôi sẽ điều chỉnh phạm vi hiển thị để bao gồm các ô của chế độ xem bảng.

00:09:04.000 --> 00:09:07.000
Chú ý cách các ô mở rộng từ cạnh này sang cạnh khác.

00:09:07.000 --> 00:09:16.000
Tôi sẽ chọn một cái để làm nổi bật nó và phủ lên Khu vực An toàn lên trên chế độ xem này để minh họa vị trí của nó.

00:09:16.000 --> 00:09:22.000
Bây giờ tôi sẽ tiếp tục mở rộng phạm vi hiển thị để kéo nhiều chế độ xem hơn vào bức ảnh.

00:09:22.000 --> 00:09:28.000
Những gì chúng ta đang thấy bây giờ là chế độ xem nội dung của các ô đã được tự động đưa vào Khu vực An toàn.

00:09:28.000 --> 00:09:39.000
Vì vậy, điều này gây ra sự khác biệt giữa kích thước của ô bảng, ô đi từ cạnh này sang cạnh khác và chế độ xem nội dung của ô, đã được chèn vào.

00:09:39.000 --> 00:09:43.000
Tôi sẽ nêu bật một vài quan điểm có liên quan ở đây.

00:09:43.000 --> 00:09:49.000
Nhưng bây giờ bức ảnh này đang trở nên hơi bận rộn, vì vậy hãy đơn giản hóa điều này và gắn nhãn những góc nhìn này.

00:09:49.000 --> 00:09:55.000
Theo mặc định, các ô trong bảng sẽ đặt chế độ xem nội dung của chúng để chúng nằm trong Khu vực An toàn.

00:09:55.000 --> 00:09:59.000
Hành vi đảo lộn đó là thứ mà bạn có thể kiểm soát.

00:09:59.000 --> 00:10:05.000
Trong Xcode, bạn có thể sử dụng hộp kiểm Content View Insets to Safe Area.

00:10:05.000 --> 00:10:09.000
Có một thuộc tính tương ứng mà bạn cũng có thể đặt trong mã.

00:10:09.000 --> 00:10:19.000
Nếu bạn bỏ chọn hộp kiểm, thì chế độ xem nội dung sẽ không được chèn vào và chế độ xem nội dung bây giờ sẽ chuyển từ cạnh này sang cạnh khác.

00:10:19.000 --> 00:10:30.000
Một điểm cuối cùng ở đây là bất kể cài đặt chế độ xem nội dung, lề bố cục trong chế độ xem nội dung sẽ tiếp tục liên quan đến Khu vực An toàn theo mặc định.

00:10:30.000 --> 00:10:38.000
Tương tự như cài đặt chế độ xem nội dung, có những thuộc tính cho phép bạn kiểm soát hành vi của các lề bố cục này.

00:10:38.000 --> 00:10:47.000
Bạn có thể biết thêm chi tiết về điều này và các tùy chọn liên quan đến lề khác trong tài liệu và video WWDC mà tôi sẽ đề cập ở cuối.

00:10:47.000 --> 00:10:57.000
Được rồi, bây giờ chúng ta đã thấy cách chế độ xem bảng định vị các ô của chúng liên quan đến Khu vực An toàn, hãy quay lại mã nơi chúng ta đã đặt màu nền trên chế độ xem tiêu đề.

00:10:57.000 --> 00:11:04.000
Chúng tôi có thể thấy rằng chúng tôi chỉ cài đặt nó trên chế độ xem nội dung, đang được đưa vào Khu vực An toàn.

00:11:04.000 --> 00:11:08.000
Tại thời điểm này, có một vài cách khác nhau mà chúng ta có thể khắc phục vấn đề này.

00:11:08.000 --> 00:11:21.000
Một trong số đó sẽ là vô hiệu hóa hành vi mặc định của chế độ xem bảng khi đặt chế độ xem nội dung vào Khu vực an toàn, nhưng làm điều đó cũng sẽ ảnh hưởng đến mọi thứ khác trong chế độ xem nội dung của chúng tôi và chúng tôi sẽ mất hành vi mặc định hữu ích này.

00:11:21.000 --> 00:11:36.000
Thay vào đó, giải pháp tốt nhất ở đây là đặt màu nền của chế độ xem nền, không giống như chế độ xem nội dung bên trong, kéo dài toàn bộ chiều rộng của ô bất kể bất kỳ khu vực an toàn nào.

00:11:36.000 --> 00:11:51.000
Với sự thay đổi đó, khi chúng tôi xây dựng và chạy, chúng tôi đi từ đây, nơi màu nền tiêu đề không đi từ cạnh này sang cạnh khác, đến nơi màu sắc trải dài trên toàn bộ bảng nhưng chế độ xem nội dung hoàn toàn không thay đổi.

00:11:51.000 --> 00:11:55.000
Điều đó có vẻ tốt hơn nhiều.

00:11:55.000 --> 00:12:01.000
Đó là ba ví dụ về các vấn đề tôi gặp phải khi cập nhật ứng dụng WWDC cho iPhone X.

00:12:01.000 --> 00:12:06.000
Chúng không khó sửa, và chủ yếu liên quan đến chế độ xem cảnh quan.

00:12:06.000 --> 00:12:08.000
Một vài lời nhắc nhở nhanh chóng.

00:12:08.000 --> 00:12:16.000
Liên kết với iOS 11 SDK và bao gồm Launch Storyboard sẽ kích hoạt độ phân giải gốc toàn màn hình cho ứng dụng của bạn.

00:12:16.000 --> 00:12:27.000
Và trong khi bạn có thể thấy một số vấn đề trong chân dung, phần lớn rất có thể sẽ ở chế độ ngang, vì vậy hãy đảm bảo kiểm tra tất cả giao diện người dùng của bạn với giao diện được xoay, cả bên trái và bên phải.

00:12:27.000 --> 00:12:30.000
Bạn sẽ tránh được hầu hết các vấn đề bằng cách tôn trọng các Khu vực An toàn.

00:12:30.000 --> 00:12:44.000
Bố cục tự động và safeAreaLayoutGuides sẽ tự động xử lý rất nhiều thử thách bố cục, nhưng nếu bạn đang thực hiện bố cục thủ công, bạn có quyền truy cập vào Safe Area insets và có thể thực hiện bất kỳ phép tính nào bạn cần.

00:12:44.000 --> 00:12:48.000
Thông tin này có sẵn thông qua lớp UIView.

00:12:48.000 --> 00:12:53.000
Điều quan trọng là không can thiệp vào chỉ báo Home ở cuối màn hình.

00:12:53.000 --> 00:13:06.000
Để biết chi tiết về chỉ báo Home và nhiều khía cạnh khác của việc thiết kế cho iPhone X, hãy nhớ xem video Thiết kế cho iPhone X có nhiều chi tiết quan trọng để đưa ứng dụng của bạn lên màn hình mới này.

00:13:06.000 --> 00:13:24.000
Ngoài ra còn có một vài video chính tại WWDC 2017, nơi chúng tôi đã giới thiệu hướng dẫn bố cục Khu vực An toàn, nói về các thay đổi xử lý cử chỉ quan trọng và cách tận dụng các tính năng iOS 11 mới như hỗ trợ thanh tìm kiếm tích hợp và hơn thế nữa.

00:13:24.000 --> 00:13:31.000
Và tất nhiên, bạn luôn có thể nhận thêm thông tin tại developer.apple.com hoặc trên Diễn đàn Nhà phát triển của chúng tôi.

00:13:31.000 --> 23:59:59.000
Cảm ơn!

