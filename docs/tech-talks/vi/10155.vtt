WEBVTT

00:00:02.000 --> 00:00:07.000
Xin chào. Tôi là Shreya Jain, một kỹ sư từ nhóm Create ML.

00:00:07.000 --> 00:00:16.000
Hôm nay chúng ta sẽ khám phá những cải tiến trong mẫu phát hiện đối tượng và tận dụng chúng để tạo ra các mô hình tốt hơn.

00:00:16.000 --> 00:00:26.000
Nếu bạn chưa quen với việc phát hiện đối tượng trong Create ML, tôi khuyến khích bạn xem video này từ WWDC 2019.

00:00:26.000 --> 00:00:31.000
Phát hiện đối tượng có thể cho phép một số trải nghiệm ứng dụng hấp dẫn.

00:00:31.000 --> 00:00:40.000
Bạn có thể xây dựng một ứng dụng để giúp mọi người phân loại rác của họ, thử kính ảo trên con mèo cưng của họ...

00:00:40.000 --> 00:00:46.000
Và thậm chí là một ứng dụng có thể đề xuất các công thức nấu ăn dựa trên các thành phần được phát hiện.

00:00:46.000 --> 00:00:54.000
Xây dựng một mô hình cho ứng dụng này là một cách tuyệt vời để xem Create ML và các tính năng mới của nó đang hoạt động.

00:00:54.000 --> 00:00:59.000
Những cải tiến đáng kể đã được thực hiện để phát hiện đối tượng.

00:00:59.000 --> 00:01:11.000
Bạn có thể đào tạo các mô hình chính xác và nhỏ hơn với ít dữ liệu đào tạo hơn và hiển thị nhiều tùy chọn cấu hình hơn để tùy chỉnh đào tạo.

00:01:11.000 --> 00:01:14.000
Vậy chúng ta hãy nhảy ngay vào.

00:01:14.000 --> 00:01:20.000
Để bắt đầu, tôi sẽ mở ứng dụng Create ML từ Spotlight.

00:01:20.000 --> 00:01:26.000
Điều đầu tiên tôi thấy là một bộ chọn mẫu, nơi tôi sẽ chọn Phát hiện đối tượng.

00:01:26.000 --> 00:01:32.000
Điều này mở ra một hộp thoại để nhập thông tin chi tiết về dự án Create ML.

00:01:32.000 --> 00:01:40.000
Tôi sẽ đặt tên cho dự án này là "FindMyRecipe" và thêm mô tả rằng nó giúp phát hiện các thành phần.

00:01:40.000 --> 00:01:45.000
Tôi có thể chọn thay đổi vị trí của dự án trước khi tạo nó.

00:01:45.000 --> 00:01:49.000
Tiếp theo, tôi truy cập vào tab cài đặt.

00:01:49.000 --> 00:01:54.000
Dữ liệu và các tùy chọn cấu hình có thể được tinh chỉnh ở đây trước khi đào tạo.

00:01:54.000 --> 00:02:00.000
Trước khi tải dữ liệu, tôi sẽ hướng dẫn bạn cách chuẩn bị dữ liệu này.

00:02:00.000 --> 00:02:09.000
Dữ liệu phát hiện đối tượng phải được lưu trữ trong một thư mục chứa tất cả các hình ảnh đào tạo và chú thích trong tệp JSON của chúng tôi.

00:02:09.000 --> 00:02:22.000
Nội dung của chú thích.json có thể được hiểu bằng cách lấy hình ảnh này làm ví dụ, có hai đối tượng: một lát bánh mì và một quả cà chua.

00:02:22.000 --> 00:02:29.000
Chú thích của mỗi đối tượng bao gồm nhãn của đối tượng và vị trí của nó trong hình ảnh.

00:02:29.000 --> 00:02:34.000
Vị trí dựa trên góc trên cùng bên trái của hình ảnh.

00:02:34.000 --> 00:02:41.000
Tất cả các đối tượng trong hình ảnh của dữ liệu đào tạo có thể được chú thích theo cách này.

00:02:41.000 --> 00:02:48.000
Tất cả các chú thích này được thêm vào một tệp JSON duy nhất ở định dạng này.

00:02:48.000 --> 00:02:54.000
Tôi sẽ sử dụng thông tin này để chuẩn bị dữ liệu đào tạo của mình.

00:02:54.000 --> 00:03:00.000
Sau khi dữ liệu được chuẩn bị, tôi có thể tải nó vào ứng dụng Tạo ML.

00:03:00.000 --> 00:03:05.000
Nhấp vào nút Xem hiển thị phân phối lớp của tập dữ liệu của tôi.

00:03:05.000 --> 00:03:12.000
Như bạn có thể thấy, các lớp học của tôi là cà chua, pho mát, bánh mì và húng quế.

00:03:12.000 --> 00:03:23.000
Quay trở lại tab Cài đặt, dữ liệu xác thực có thể được cung cấp tùy chọn để đảm bảo rằng mô hình hoạt động tốt trên dữ liệu không nhìn thấy được.

00:03:23.000 --> 00:03:34.000
Ở đây, tôi đặt Dữ liệu Xác thực thành Tự động, cho phép Tạo ML sử dụng một phần nhỏ trong tập dữ liệu của tôi.

00:03:34.000 --> 00:03:41.000
Ngoài ra còn có các thông số đào tạo mới cho phép bạn kiểm soát tốt hơn việc đào tạo mô hình của mình.

00:03:41.000 --> 00:03:49.000
Chúng là thuật toán, lặp lại, kích thước lô và kích thước lưới.

00:03:49.000 --> 00:03:53.000
Có hai thuật toán để đào tạo.

00:03:53.000 --> 00:03:55.000
Đầu tiên là mạng lưới đầy đủ.

00:03:55.000 --> 00:04:00.000
Hãy xem xét sâu hơn về thuật toán mạng đầy đủ.

00:04:00.000 --> 00:04:10.000
Mạng lưới đầy đủ đã được giới thiệu trong Create ML vào năm 2019 và là thuật toán đào tạo mặc định kể từ đó.

00:04:10.000 --> 00:04:15.000
Thuật toán này dựa trên kiến trúc YOLOv2.

00:04:15.000 --> 00:04:20.000
Tất cả các thông số của mạng này được đào tạo bằng cách sử dụng dữ liệu của bạn.

00:04:20.000 --> 00:04:27.000
Mô hình Core ML kết quả mã hóa tất cả các tham số đã học.

00:04:27.000 --> 00:04:33.000
Mô hình Core ML này đã được lượng tử hóa để lưu trữ trọng lượng với độ chính xác 16-bit.

00:04:33.000 --> 00:04:38.000
Kích thước mô hình kết quả bằng một nửa so với những gì chúng tôi nhận được trước đó.

00:04:38.000 --> 00:04:47.000
Vì vậy, một mô hình trước đây khoảng 65 megabyte bây giờ sẽ là 33 megabyte.

00:04:47.000 --> 00:04:57.000
Thuật toán này được khuyến nghị khi bạn có một lượng lớn dữ liệu đào tạo, như hơn 200 hộp giới hạn cho mỗi lớp.

00:04:57.000 --> 00:05:04.000
Mô hình kết quả tương thích ngược, quay trở lại iOS 12.

00:05:04.000 --> 00:05:18.000
Chúng tôi muốn cho phép bạn xây dựng các mô hình có độ chính xác cao với ít dữ liệu đào tạo hơn, đó là lý do tại sao chúng tôi giới thiệu thuật toán học chuyển giao để phát hiện đối tượng.

00:05:18.000 --> 00:05:24.000
Học chuyển giao thúc đẩy các mô hình học máy đã có trong hệ điều hành.

00:05:24.000 --> 00:05:32.000
Ví dụ, ứng dụng Ảnh bao gồm các mô hình hỗ trợ Tìm kiếm và Ký ức.

00:05:32.000 --> 00:05:38.000
Một trong những xương sống được đào tạo trước mà Photos sử dụng được gọi là in đối tượng.

00:05:38.000 --> 00:05:42.000
Điều này được đào tạo trên một lượng lớn dữ liệu đa dạng.

00:05:42.000 --> 00:05:50.000
Với việc học chuyển tiếp, bạn có thể tận dụng điều này để giảm yêu cầu dữ liệu của mình.

00:05:50.000 --> 00:05:57.000
Chuyển thuật toán học tập trong Tạo ML sử dụng in đối tượng cùng với mạng đầu.

00:05:57.000 --> 00:06:06.000
Chỉ có mạng trưởng được đào tạo dựa trên dữ liệu của bạn, giảm số lượng thông số cần được học.

00:06:06.000 --> 00:06:18.000
Kết quả là, mô hình Core ML chỉ chứa các thông số mạng đầu, điều này làm cho mô hình của bạn nhỏ hơn năm lần so với toàn bộ mạng.

00:06:18.000 --> 00:06:32.000
Mô hình tương tự là 65 megabyte vào năm 2019 và 33 megabyte sau khi lượng tử hóa sẽ chỉ là bảy megabyte bằng cách sử dụng thuật toán học chuyển giao.

00:06:32.000 --> 00:06:39.000
Học chuyển tiếp là một lựa chọn tuyệt vời khi bạn có dữ liệu hạn chế và muốn có một mô hình nhẹ.

00:06:39.000 --> 00:06:45.000
Nó hoạt động tốt với ít nhất 80 ví dụ đào tạo cho mỗi lớp.

00:06:45.000 --> 00:06:54.000
Mô hình kết quả yêu cầu iOS 14 tận dụng bản in đối tượng được vận chuyển cùng với hệ điều hành.

00:06:54.000 --> 00:06:59.000
Thuật toán chỉ là một trong những cấu hình mới.

00:06:59.000 --> 00:07:05.000
Các thông số như lặp lại và kích thước lô cũng đã được thêm vào.

00:07:05.000 --> 00:07:10.000
Lặp lại là số lần các thông số của mô hình được cập nhật.

00:07:10.000 --> 00:07:15.000
Một giá trị mặc định được chọn dựa trên kích thước tập dữ liệu.

00:07:15.000 --> 00:07:27.000
Đối với trường hợp sử dụng cụ thể của bạn, bạn có thể tăng lặp lại nếu mô hình chưa hội tụ hoặc giảm chúng nếu mô hình hoạt động tốt sớm.

00:07:27.000 --> 00:07:34.000
Kích thước lô đề cập đến số lượng ví dụ đào tạo được sử dụng trong một lần lặp lại.

00:07:34.000 --> 00:07:39.000
Giá trị mặc định được chọn dựa trên các hạn chế phần cứng.

00:07:39.000 --> 00:07:49.000
Mặc dù kích thước lô cao hơn tốt hơn, bạn có thể muốn sử dụng giá trị mặc định hoặc giảm nó dựa trên các hạn chế về hiệu suất.

00:07:49.000 --> 00:07:54.000
Cuối cùng, đối với mạng đầy đủ, bạn có thể tùy chỉnh kích thước lưới.

00:07:54.000 --> 00:08:00.000
Hiểu kích thước lưới đòi hỏi kiến thức về cách các dự đoán hoạt động cho toàn bộ mạng.

00:08:00.000 --> 00:08:04.000
Chúng ta hãy xem xét kỹ hơn.

00:08:04.000 --> 00:08:07.000
Bắt đầu với hình ảnh đầu vào này...

00:08:07.000 --> 00:08:11.000
Chuyển nó cho một mô hình mạng đầy đủ được đào tạo...

00:08:11.000 --> 00:08:16.000
Dẫn đến một số đối tượng được dự đoán với các hộp giới hạn.

00:08:16.000 --> 00:08:24.000
Để tìm các đối tượng trong hình ảnh, mô hình tận dụng một lưới và một tập hợp các hộp neo.

00:08:24.000 --> 00:08:33.000
Lưới được chỉ định xác định tỷ lệ khung hình của hình ảnh đầu vào cũng như nơi mô hình sẽ tìm kiếm các đối tượng được phát hiện.

00:08:33.000 --> 00:08:41.000
Ví dụ, hãy xem mô hình sẽ hoạt động như thế nào với kích thước lưới 5-by-5.

00:08:41.000 --> 00:08:53.000
Hình ảnh sẽ được thay đổi kích thước để phù hợp với lưới - trong trường hợp này, thành hình vuông - và sau đó được chia thành số ô được xác định.

00:08:53.000 --> 00:08:59.000
Mạng lưới sau đó đưa ra các dự đoán, một cho mỗi ô lưới.

00:08:59.000 --> 00:09:10.000
Mỗi dự đoán chứa các thông tin sau: liệu một ô có một đối tượng trong đó hay không, lớp của đối tượng và hộp giới hạn của nó.

00:09:10.000 --> 00:09:17.000
YOLO hoạt động tốt cho nhiều đối tượng trong đó mỗi đối tượng được liên kết với một ô lưới.

00:09:17.000 --> 00:09:25.000
Như bạn có thể thấy trong hình ảnh này, tâm của chuối và chó rơi vào cùng một ô.

00:09:25.000 --> 00:09:34.000
Vì mỗi ô chỉ có thể dự đoán một lớp, nên nó được cho là chọn chuối hoặc con chó.

00:09:34.000 --> 00:09:40.000
Để dự đoán cả chuối và chó, các hộp neo được xác định.

00:09:40.000 --> 00:09:48.000
Các hộp neo có tỷ lệ khung hình đã đặt và phát hiện nhiều đối tượng trong một ô lưới.

00:09:48.000 --> 00:09:57.000
Tạo ML sử dụng kích thước lưới mặc định là 13 x 13, tổng cộng 169 ô.

00:09:57.000 --> 00:10:05.000
Một bộ cố định gồm 15 hộp neo có tỷ lệ khung hình khác nhau được đánh giá cho mỗi ô.

00:10:05.000 --> 00:10:15.000
Do đó, mô hình mặc định đang thực hiện tổng cộng 2.535 dự đoán cho mỗi hình ảnh.

00:10:15.000 --> 00:10:24.000
Hãy xem xét hình ảnh xúc xắc này và cách phát hiện đối tượng sẽ hoạt động với kích thước lưới là 3 x 3.

00:10:24.000 --> 00:10:35.000
Vì nhiều con xúc xắc có tỷ lệ khung hình tương tự có trong một ô duy nhất, chỉ một trong số chúng sẽ được phát hiện.

00:10:35.000 --> 00:10:40.000
Với kích thước lưới lớn, nhiều xúc xắc được phát hiện.

00:10:40.000 --> 00:10:46.000
Tuy nhiên, điều này sẽ làm tăng số lượng dự đoán trên mỗi hình ảnh.

00:10:46.000 --> 00:10:53.000
Điều quan trọng là phải xem xét chi phí tính toán khi thay đổi kích thước lưới.

00:10:53.000 --> 00:11:08.000
Đối với hình ảnh đầu vào không vuông như thế này, với kích thước 1500 x 800, sử dụng lưới 8 x 8 trên hình ảnh này dẫn đến mất thông tin và làm biến dạng hình dạng tự nhiên của các vật thể.

00:11:08.000 --> 00:11:18.000
Điều này ngăn cản mô hình nắm bắt được nhiều mô hình hạt mịn hơn trong khi đào tạo cũng như cản trở sức mạnh dự đoán của nó.

00:11:18.000 --> 00:11:33.000
Chọn kích thước lưới 15- x-8 sẽ giữ nguyên tỷ lệ khung hình ban đầu của hình ảnh đầu vào và kết quả trong một mô hình đã học được nhiều thông tin hơn và có thể cho kết quả tốt hơn.

00:11:33.000 --> 00:11:46.000
Quay trở lại đào tạo mô hình cho dự án FindMyRecipe, tôi có thể chọn thuật toán học chuyển, đặt 1000 lần lặp và Tự động cho kích thước lô.

00:11:46.000 --> 00:11:51.000
Khi nhấp vào nút phát, người mẫu bắt đầu tập luyện.

00:11:51.000 --> 00:11:55.000
Tab Đào tạo cho thấy lô hàng đang được chuẩn bị.

00:11:55.000 --> 00:12:05.000
Bước này thực hiện một tập hợp các tăng cường hình ảnh tiêu chuẩn để giúp tăng cường độ mạnh và khái quát hóa cho dữ liệu trong thế giới thực.

00:12:05.000 --> 00:12:17.000
Ngay sau đó, một biểu đồ xuất hiện, vẽ biểu đồ các giá trị tổn thất cho mỗi lần lặp lại.

00:12:17.000 --> 00:12:24.000
Khi quá trình đào tạo tiến hành, có thể nhấp vào nút Ảnh chụp nhanh để có được một mô hình tại thời điểm đó.

00:12:24.000 --> 00:12:29.000
Ảnh chụp nhanh rất hữu ích trong việc kiểm tra tiến độ đào tạo.

00:12:29.000 --> 00:12:35.000
Tôi có thể sử dụng mô hình này để xem trước các dự đoán trên một vài hình ảnh.

00:12:35.000 --> 00:12:41.000
Đối với mỗi hình ảnh, dự đoán mô hình được hiển thị trong tab Xem trước.

00:12:41.000 --> 00:12:48.000
Tôi có thể nhấp vào các hộp giới hạn này để xem sự tự tin cho mỗi lớp ở dưới cùng.

00:12:48.000 --> 00:12:55.000
Ảnh chụp nhanh cũng có thể được sử dụng để thử nghiệm trong một ứng dụng.

00:12:55.000 --> 00:13:04.000
Sau khi đào tạo hoàn tất, các chỉ số đánh giá về dữ liệu đào tạo và xác thực có thể được nhìn thấy trong tab Đánh giá.

00:13:04.000 --> 00:13:08.000
Những con số này có nghĩa là gì?

00:13:08.000 --> 00:13:13.000
Đánh giá cho các mô hình phát hiện đối tượng cần phải gấp đôi.

00:13:13.000 --> 00:13:20.000
Chúng tôi không chỉ muốn nhãn chính xác mà còn phải ở đúng vị trí.

00:13:20.000 --> 00:13:26.000
Thật khó để làm cho các hộp giới hạn khớp chính xác với hộp được chú thích.

00:13:26.000 --> 00:13:35.000
Một con số nắm bắt mức độ gần gũi của các hộp dự đoán với các hộp được chú thích trở nên cần thiết.

00:13:35.000 --> 00:13:40.000
Điều này được đo bằng một điểm số được gọi là giao điểm trên liên minh.

00:13:40.000 --> 00:13:45.000
Đó là một giá trị từ 0%, không có sự chồng chéo...

00:13:45.000 --> 00:13:51.000
Đến 100%, đó là sự chồng chéo hoàn hảo.

00:13:51.000 --> 00:14:03.000
Để một dự đoán được coi là chính xác, nó cần phải có nhãn lớp chính xác và điểm giao nhau trên liên minh lớn hơn ngưỡng được xác định trước.

00:14:03.000 --> 00:14:14.000
Nếu điểm giao điểm giao nhau trên liên minh nhỏ hơn ngưỡng hoặc lớp dự đoán không chính xác, dự đoán tổng thể không chính xác.

00:14:14.000 --> 00:14:23.000
Thông tin này được sử dụng để tính toán một số liệu được gọi là Độ chính xác trung bình trung bình, hoặc mAP.

00:14:23.000 --> 00:14:30.000
Tôi sẽ quay lại tab đánh giá để xem những con số này.

00:14:30.000 --> 00:14:37.000
Những con số này đại diện cho độ chính xác trung bình trên mỗi lớp được tính ở hai ngưỡng.

00:14:37.000 --> 00:14:43.000
Một cái được cố định ở mức 50% và cái kia thay đổi ở nhiều ngưỡng.

00:14:43.000 --> 00:14:50.000
Độ chính xác trung bình trung bình tổng thể cho tập dữ liệu của chúng tôi có thể được nhìn thấy ở góc trên cùng bên phải.

00:14:50.000 --> 00:14:55.000
mAP cao hơn phản ánh các dự đoán chính xác hơn.

00:14:55.000 --> 00:14:59.000
Nhìn chung, mAP của mô hình của chúng tôi có vẻ tốt.

00:14:59.000 --> 00:15:10.000
Tôi sẽ xem trước mô hình trên một vài ví dụ để đảm bảo rằng các dự đoán mô hình trông đúng.

00:15:10.000 --> 00:15:12.000
Mọi thứ trông thật tuyệt.

00:15:12.000 --> 00:15:16.000
Bây giờ tôi có thể thả mô hình này vào ứng dụng của chúng tôi.

00:15:16.000 --> 00:15:25.000
Với các tính năng bổ sung mà bạn vừa thấy, việc tạo mô hình phát hiện đối tượng bằng cách sử dụng Create ML rất đơn giản.

00:15:25.000 --> 00:15:32.000
Tạo ML giúp bạn tùy chỉnh các mô hình bằng cách cung cấp nhiều quyền kiểm soát hơn đối với việc đào tạo.

00:15:32.000 --> 00:15:38.000
Nó giúp bạn xây dựng các mô hình chính xác với ít dữ liệu hơn và kích thước đầu ra nhỏ hơn.

00:15:38.000 --> 23:59:59.000
Chúng tôi nóng lòng muốn xem những ý tưởng tuyệt vời mà bạn mang đến bằng cách sử dụng các tính năng hoàn toàn mới này.

