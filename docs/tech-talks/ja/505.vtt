WEBVTT

00:00:01.000 --> 00:00:11.000
Shloka Kini: 認証コンテキストは、認証UIを提示し、IDプロバイダーサーバーと通信して顧客の資格情報を認証するWebサービスです。

00:00:11.000 --> 00:00:22.000
これは、Apple TV配信プログラムの一環として、iOSおよびtvOSデバイスでテレビプロバイダーのシングルサインオン機能を取得するために必要な多くのステップの1つです。

00:00:22.000 --> 00:00:30.000
認証コンテキストは、サーバーでホストされているWebサービスで、Appleデバイスにダウンロードされ、実行時に実行されます。

00:00:30.000 --> 00:00:38.000
認証コンテキストがVideoSubscriberAccountフレームワークに認証応答を渡すと、デバイスキーチェーンに保存されます。

00:00:38.000 --> 00:00:45.000
iOSデバイスでは、認証応答はiCloudキーチェーンを介して他のiOSデバイスに同期できます。

00:00:45.000 --> 00:00:53.000
また、Apple TVでは、tvOSがiCloudキーチェーンをサポートしていないため、認証応答はデバイスから離れません。

00:00:53.000 --> 00:01:00.000
認証コンテキストの目的は、サポートされているアプリ間でOSレベルの認証を提供することです。

00:01:00.000 --> 00:01:07.000
このプロセスの最初のステップは、認証用のUIを提示することで、資格情報を入力するように促すことです。

00:01:07.000 --> 00:01:12.000
この資格情報エントリのUIを指定するには、authentificationTemplateを使用します。

00:01:12.000 --> 00:01:17.000
これは、ドキュメントで提供する例に似たXMLドキュメントです。

00:01:17.000 --> 00:01:26.000
このXMLを提供すると、その人が使用しているプラットフォームに応じて、AppleシステムUIの一部のように見えるようにフォーマットします。

00:01:26.000 --> 00:01:35.000
たとえば、ここのデフォルトのユーザー名パスワードテンプレートは、iOSとtvOSの両方のデバイスに適用できます。

00:01:35.000 --> 00:01:39.000
autoAuthenticationTemplateは、お客様に資格情報の入力を求めません。

00:01:39.000 --> 00:01:49.000
代わりに、どのアカウントに自動的に認証されるかを顧客に通知し、別のアカウントに手動でサインインするオプションを提供します。

00:01:49.000 --> 00:01:55.000
このテンプレートは、iOSとtvOSの両方のデバイスにも適用されます。

00:01:55.000 --> 00:02:03.000
顧客から直接資格情報を取得できない場合は、特別な場合に認証のための代替テンプレートを提供します。

00:02:03.000 --> 00:02:07.000
onscreenCode AuthenticationTemplateはtvOSにのみ適用されます。

00:02:07.000 --> 00:02:16.000
携帯電話、タブレット、コンピューターなどの別のデバイスでWebブラウザに入力するためのオンスクリーンコードを表示します。

00:02:16.000 --> 00:02:20.000
webAuthenticationTemplateはiOSデバイスにのみ適用されます。

00:02:20.000 --> 00:02:25.000
指定されたURLを使用して、このようにWebビューを起動します。

00:02:25.000 --> 00:02:33.000
認証コンテキストと起動されるWebビュー間で通信するには、VideoSubscriberAccountクラスを使用します。

00:02:33.000 --> 00:02:40.000
開始するには、JavaScriptで認証コンテキストを作成し、XMLテンプレートで認証UIを定義します。

00:02:40.000 --> 00:02:43.000
このJavaScriptファイルをサーバーにホストします。

00:02:43.000 --> 00:02:49.000
同じ認証コンテキストを両方のデバイスで使用できるため、1つの認証コンテキストのみを書くことを忘れないでください。

00:02:49.000 --> 00:02:56.000
最後に、コンテキストとXMLを書いた後、テレビプロバイダーのオンボーディングデータを送信してください。

00:02:56.000 --> 00:03:17.000
このデータには、テレビプロバイダーのUIに表示される名前、テレビプロバイダーを一意に識別するために当社のシステムで使用されるテレビプロバイダーの識別子、および認証URL、認証コンテキストにアクセスしてデバイスにダウンロードするためにテレビプロバイダーサーバーでpingする必要があるURLが含まれます。

00:03:17.000 --> 00:03:22.000
App Store UIでテレビプロバイダーのブランドに表示するアートワークを送ってください。

00:03:22.000 --> 00:03:26.000
アートワークの仕様の詳細については、ドキュメントを参照してください。

00:03:26.000 --> 00:03:27.000
サポートされているチャンネルリストを送ってください。

00:03:27.000 --> 00:03:30.000
これはオンボーディングデータのオプションです。

00:03:30.000 --> 00:03:34.000
ここでは、チャンネルがテレビプロバイダーがサポートするアプリを参照しています。

00:03:34.000 --> 00:03:41.000
Apple TV配信プログラムでは、認証フローの後に1つのアプリが自動的にインストールされます。それがメインアプリです。

00:03:41.000 --> 00:03:51.000
テレビプロバイダーの資格情報を使用する追加のアプリがある場合は、このリストを使用して、他のテレビプロバイダーがサポートするアプリを顧客に表示します。

00:03:51.000 --> 00:04:00.000
認証コンテキストの開発を開始するには、VideoSubscriberAccountフレームワークが認証コンテキストに対して行った要求のコールバックを処理します。

00:04:00.000 --> 00:04:03.000
1つ目はonLaunchです。

00:04:03.000 --> 00:04:09.000
これは、VideoSubscriberAccountリストからテレビプロバイダーが選択された後に何が起こるかを示します。

00:04:09.000 --> 00:04:14.000
テレビプロバイダーを選択すると、次のコールバックまで保留中の画面が表示されます。

00:04:14.000 --> 00:04:17.000
onShowUserInterface。

00:04:17.000 --> 00:04:24.000
起動後、コールバックを処理して、資格情報入力の認証テンプレートを表示する必要があります。

00:04:24.000 --> 00:04:27.000
次はonRequestです。

00:04:27.000 --> 00:04:33.000
資格情報が入力された後、それらの資格情報を取り、IDプロバイダーサーバーに直接送信します。

00:04:33.000 --> 00:04:35.000
これらの資格情報はデバイスに保存されません。

00:04:35.000 --> 00:04:45.000
認証応答は、システムレベルの認証を確立するために、サーバーから認証コンテキストにVideoSubscriberAccountフレームワークに送り返されます。

00:04:45.000 --> 00:04:51.000
アプリレベルの認証要求は、このシステムレベルの認証が良好である場合にのみ、処理のために送信されます。

00:04:51.000 --> 00:05:01.000
アプリケーションをデバッグするには、iOSおよびtvOSデバイスで開発者モードを有効にして、コードが公開される前にテレビプロバイダーを追加およびテストします。

00:05:01.000 --> 00:05:05.000
認証コンテキストを具体的にデバッグするには、Safari Web Inspectorを使用します。

00:05:05.000 --> 00:05:12.000
macOSデバイスがJavaScriptをデバッグできるように、デバイスでWebインスペクタを有効にしてください。

00:05:12.000 --> 00:05:23.000
要約すると、認証コンテキストは、テレビプロバイダーのIDプロバイダーサーバーとVideoSubscriberAccountフレームワーク間の通信を容易にするJavaScriptベースのWebサービスです。

00:05:23.000 --> 23:59:59.000
ありがとうございます。

