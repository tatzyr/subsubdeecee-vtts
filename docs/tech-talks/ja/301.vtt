WEBVTT

00:00:02.000 --> 00:00:05.000
Extensible Enterprise Single Sign-Onの紹介へようこそ。

00:00:05.000 --> 00:00:07.000
私の名前はマット・チャンダです。

00:00:07.000 --> 00:00:11.000
私はコンサルティングエンジニアであり、シングルサインオンを作成したチームの一員です。

00:00:11.000 --> 00:00:22.000
このビデオでは、シングルサインオンの概要を説明し、拡張機能の作成方法、アプリでの使用方法、展開方法、ベストプラクティスについて話し合います。

00:00:22.000 --> 00:00:27.000
ご存知のように、ほとんどすべてのエンタープライズアプリやウェブサイトが機能するために認証する必要があります。

00:00:27.000 --> 00:00:32.000
これらのアプリは、クラウド、オンプレミス、またはその両方の記録システムを接続します。

00:00:32.000 --> 00:00:35.000
しかし、最近、認証はますます複雑になっています。

00:00:35.000 --> 00:00:41.000
OpenID Connect、Kerberos、SAMLなど、複数の認証方法を検討する必要があります。

00:00:41.000 --> 00:00:46.000
現在、オンプレミスシステムに認証をフェデネートする必要があるクラウドリソースがあります。

00:00:46.000 --> 00:00:50.000
また、デバイスをもっと信頼する必要はなく、パスワードがないこともあります。

00:00:50.000 --> 00:00:53.000
組織はこれらの課題にどのように対処しますか?

00:00:53.000 --> 00:00:55.000
彼らは助けるためにシングルサインオンを使用します。

00:00:55.000 --> 00:01:01.000
シングルサインオンにより、一連のアプリやWebサイトが同じ資格情報を使用してシームレスに認証できます。

00:01:01.000 --> 00:01:04.000
これにより、ユーザーエクスペリエンスが向上します。

00:01:04.000 --> 00:01:08.000
一部の企業はパスワードを持っていないため、シングルサインオンを使用する必要があります。

00:01:08.000 --> 00:01:11.000
問題は、すべてのアプリが自分のニーズをサポートしているわけではないということです。

00:01:11.000 --> 00:01:15.000
既存の認証ソリューションは、多くのユーザーの摩擦を引き起こす可能性があります。

00:01:15.000 --> 00:01:20.000
複数のポップアップ、繰り返しプロンプト、アプリ間のバウンスがあります。

00:01:20.000 --> 00:01:26.000
安全でユーザーフレンドリーな真のシングルサインオンを持つ方法はありませんでした。

00:01:26.000 --> 00:01:35.000
今日は、iOS 13、iPadOS、macOS Catalinaに追加した強力な新しいシングルサインオン機能についてお話ししたいと思います。

00:01:35.000 --> 00:01:41.000
これは、新しい拡張可能なSSO MDMプロファイルと関連するドメインを展開することで有効になります。

00:01:41.000 --> 00:01:43.000
ユーザー登録でも機能します。

00:01:43.000 --> 00:01:49.000
拡張機能は、UIの表示、Webページの読み込み、または要求を黙って処理することを選択できます。

00:01:49.000 --> 00:01:56.000
これらの変更により、ユーザーフレンドリーで安全なSSOソリューションを作成して使用できるようになると考えています。

00:01:56.000 --> 00:02:00.000
新しい拡張機能は、iOS、iPadOS、macOSで動作します。

00:02:00.000 --> 00:02:05.000
ネイティブアプリとSafariの両方がIDプロバイダーで認証できるようにします。

00:02:05.000 --> 00:02:07.000
拡張機能はネイティブコードです。

00:02:07.000 --> 00:02:13.000
多要素認証を有効にしたり、キーチェーンにアクセスしたり、安全な飛び地で生成されたキーを使用したりできます。

00:02:13.000 --> 00:02:17.000
管理対象アプリの設定を活用し、アプリごとのVPNを使用することもできます。

00:02:17.000 --> 00:02:20.000
Appleでサインインについて疑問に思うかもしれません。

00:02:20.000 --> 00:02:23.000
シングルサインオンは、Appleでサインインとは異なります。

00:02:23.000 --> 00:02:27.000
Appleでサインインは、消費者向けアプリを対象としており、さまざまな問題に対処します。

00:02:27.000 --> 00:02:31.000
まず、アカウントのプロビジョニングの問題を解決することを目的としています。

00:02:31.000 --> 00:02:35.000
どこでも新しいアカウントを作る代わりに、代わりにApple IDを使ってください。

00:02:35.000 --> 00:02:40.000
また、サイトがすべての個人情報を必要としないプライバシーの問題を解決します。

00:02:40.000 --> 00:02:46.000
一方、シングルサインオンを使用すると、それらを必要とするアプリに既存のエンタープライズアカウントを使用できます。

00:02:46.000 --> 00:02:51.000
エンタープライズアプリは、あなたが誰で、何を許可されているかを正確に知る必要があります。

00:02:51.000 --> 00:02:56.000
導入したので、シングルサインオンが実際にどのように見えるか興味があるかもしれません。

00:02:56.000 --> 00:02:59.000
見てみましょう。 

00:02:59.000 --> 00:03:03.000
iOSでは、認証が必要なウェブページを読み込むことから始めましょう。

00:03:03.000 --> 00:03:06.000
拡張機能により、資格情報の入力を求められます。

00:03:06.000 --> 00:03:11.000
ユーザー名を入力します...

00:03:11.000 --> 00:03:15.000
そして今、私のパスワード...

00:03:15.000 --> 00:03:18.000
パスワードを保存すると、ページが読み込まれます。

00:03:18.000 --> 00:03:22.000
ページが読み込まれた後に私のユーザー名が表示されることに注意してください。

00:03:22.000 --> 00:03:26.000
では、ネイティブアプリに行って、保護されたリソースにアクセスしてみましょう。

00:03:26.000 --> 00:03:28.000
ここでシングルサインオンが行われます。

00:03:28.000 --> 00:03:31.000
ユーザーに再度資格情報の入力を求められるべきではありません。

00:03:31.000 --> 00:03:33.000
このアプリには2つのボタンがあります。

00:03:33.000 --> 00:03:37.000
同じクレデンシャルで保護されているネットワークから画像をロードしようとします。

00:03:37.000 --> 00:03:40.000
ハンバーガーから始めます...

00:03:40.000 --> 00:03:43.000
そして今、タコス...

00:03:43.000 --> 00:03:46.000
そして、それはiOSでのシングルサインオンです。

00:03:46.000 --> 00:03:48.000
さあ、macOS用です。

00:03:48.000 --> 00:03:52.000
繰り返しますが、保護されたWebページをロードし、資格情報に挑戦しようとします。

00:03:52.000 --> 00:03:58.000
だから、Safariを開いて、私のサイトをロードさせてください...

00:03:58.000 --> 00:04:02.000
では、ユーザー名を入力します...

00:04:02.000 --> 00:04:09.000
そして、私のパスワード...

00:04:09.000 --> 00:04:13.000
保存すると、ページが読み込まれます。

00:04:13.000 --> 00:04:18.000
素晴らしい、これは最初のログインですが、他の場所で使用するまではシングルサインオンではありません。

00:04:18.000 --> 00:04:22.000
では、ネイティブアプリで他の保護されたリソースにアクセスしてみましょう。

00:04:22.000 --> 00:04:28.000
だから私はハンバーガーから始めます。 

00:04:28.000 --> 00:04:33.000
いいね、そして今はタコス。

00:04:33.000 --> 00:04:36.000
そして、彼らが期待どおりにロードされたことがわかります。

00:04:36.000 --> 00:04:42.000
最初にブラウザにログインしていなかったら、同じ認証ダイアログがネイティブアプリに表示されていただろう。

00:04:42.000 --> 00:04:46.000
ログイン後、資格情報が保存され、画像へのアクセスが許可されます。

00:04:46.000 --> 00:04:49.000
そして、それはmacOSのシングルサインオンです。

00:04:49.000 --> 00:04:52.000
そして今、私たちのスライドに戻ります。

00:04:52.000 --> 00:04:57.000
MDM管理デバイスでシングルサインオンを使用するには、これらのものが必要です。

00:04:57.000 --> 00:05:01.000
あなたはすでにアプリやウェブサイト、IDプロバイダーを持っている可能性があります。

00:05:01.000 --> 00:05:05.000
だから今日、私たちはそれらを接着するために拡張に時間を費やします。

00:05:05.000 --> 00:05:07.000
では、それはどのように機能しますか?

00:05:07.000 --> 00:05:11.000
拡張機能には、リダイレクトとクレデンシャルの2種類があります。

00:05:11.000 --> 00:05:14.000
リダイレクト拡張機能から始めましょう。

00:05:14.000 --> 00:05:17.000
リダイレクト拡張機能は、最新の認証方法を対象としています。

00:05:17.000 --> 00:05:21.000
例としては、OpenID Connect、OAuth、SAMLなどがあります。

00:05:21.000 --> 00:05:26.000
これらの方法はウェブ技術に基づいており、フェデレーションで頻繁に使用されます。

00:05:26.000 --> 00:05:29.000
Safariで例を見てみましょう。 では例を見てみましょう。

00:05:29.000 --> 00:05:34.000
リダイレクト拡張機能は、iOS、iPadOS、macOSのURLSessionでも機能します。

00:05:34.000 --> 00:05:40.000
ログインページを読み込む代わりに、OSはWebリクエストを拡張機能にリダイレクトします。

00:05:40.000 --> 00:05:43.000
拡張機能は、URL、ヘッダー、および本文を受け取ります。

00:05:43.000 --> 00:05:49.000
拡張機能開発者は、IDプロバイダーとの認証プロセスを完了する責任があります。

00:05:49.000 --> 00:05:52.000
準備ができたら、SafariにURL応答を返します。

00:05:52.000 --> 00:05:54.000
この応答は大きくないことに注意してください。

00:05:54.000 --> 00:06:00.000
これは、小さなWebフォームがSAML応答やその他のトークンをWebサーバーに投稿することを目的としています。

00:06:00.000 --> 00:06:04.000
巨大な1megのウェブページには使用しないでください。

00:06:04.000 --> 00:06:07.000
では、これらのシングルサインオン拡張機能は何ができますか?

00:06:07.000 --> 00:06:10.000
彼らはいくつかのことをすることができます。ここにいくつかあります。

00:06:10.000 --> 00:06:14.000
ネイティブUIを提示するか、多要素を要求するかを選択できます。

00:06:14.000 --> 00:06:20.000
セキュアエンクレーブでデバイス固有のキーを生成したり、信頼スコアデータで認証要求を補完したりできます。

00:06:20.000 --> 00:06:25.000
他のidP固有のセキュリティ機能も実装できます。

00:06:25.000 --> 00:06:27.000
彼らはウェブページをロードし、フェデレーションのリンクをたどることができます。

00:06:27.000 --> 00:06:32.000
また、macOSでは、IDプロバイダーがサポートしている場合は、WebAuthNを使用することもできます。

00:06:32.000 --> 00:06:35.000
リダイレクト拡張機能は、ネイティブアプリでも機能します。

00:06:35.000 --> 00:06:37.000
ただし、ネイティブアプリには追加のオプションがあります。

00:06:37.000 --> 00:06:40.000
彼らは拡張機能に操作を送ることができます。

00:06:40.000 --> 00:06:45.000
アプリは、ログインまたはトークンを静かに更新するのに良い時期を決めることができます。

00:06:45.000 --> 00:06:49.000
拡張機能は、再度認証する必要があるのか、それとも保存されたトークンを返す必要があるのかを知ることができます。

00:06:49.000 --> 00:06:55.000
また、エンタープライズアプリ開発者にとって、これは拡張機能を認証クライアントとして使用できることを意味します。

00:06:55.000 --> 00:07:00.000
各アプリに認証ライブラリのコピーを含め、それを維持する必要がなくなります。

00:07:00.000 --> 00:07:02.000
流れをチェックしてみましょう。

00:07:02.000 --> 00:07:08.000
Safariに似ていますが、ネイティブアプリはログインなどのコマンドを送信してプロセスを開始できます。

00:07:08.000 --> 00:07:11.000
繰り返しになりますが、拡張機能は認証プロセスを完了する責任があります。

00:07:11.000 --> 00:07:17.000
そして、準備ができたら、ネイティブアプリに必要なトークンでURLレスポンスを返すことができます。

00:07:17.000 --> 00:07:23.000
また、マネージドアプリ設定を使用して、使用するIDプロバイダーURLをネイティブアプリに通知することをお勧めします。

00:07:23.000 --> 00:07:29.000
拡張機能の構築方法を紹介する前に、これらの拡張機能の1つを企業に展開する方法について話しましょう。

00:07:29.000 --> 00:07:34.000
MDMペイロードと関連ドメインの2つの要件があります。

00:07:34.000 --> 00:07:36.000
MDMペイロードから始めましょう。

00:07:36.000 --> 00:07:43.000
これは、iOS 13、iPadOS、およびmacOS Catalina用の新しいExtensible SSOペイロードによって有効になります。

00:07:43.000 --> 00:07:45.000
ここで例をチェックしてください。

00:07:45.000 --> 00:07:52.000
識別子はcom.apple.extensiblessoで、このペイロードはMDMによって配信されなければなりません。

00:07:52.000 --> 00:08:00.000
チーム識別子や先ほど話したタイプなど、使用する拡張バンドル識別子を指定します。

00:08:00.000 --> 00:08:03.000
この場合、リダイレクト拡張機能。

00:08:03.000 --> 00:08:09.000
拡張機能にルーティングするトラフィックを決定するURLプレフィックスが一覧表示されます。

00:08:09.000 --> 00:08:14.000
そして最後に、MDMからの拡張機能固有の値のオプションの辞書。

00:08:14.000 --> 00:08:17.000
この例では、ユーザー名を送信しています。

00:08:17.000 --> 00:08:20.000
2番目の要件は、関連するドメインを使用することです。

00:08:20.000 --> 00:08:23.000
これは拡張機能開発者から始まります。

00:08:23.000 --> 00:08:30.000
関連するドメインは、あなたまたはあなたのIDプロバイダーがリダイレクトされているトラフィックを所有していることを証明する必要があります。

00:08:30.000 --> 00:08:33.000
また、他の誰かがあなたのトラフィックをリダイレクトするのを防ぎます。

00:08:33.000 --> 00:08:37.000
Appleプラットフォームでは、拡張機能はホストアプリ内に埋め込まれています。

00:08:37.000 --> 00:08:45.000
関連するドメインを設定するには、拡張機能を含むホストアプリで関連するドメイン機能を設定する必要があります。

00:08:45.000 --> 00:08:52.000
Authsrvサービスタイプで新しいエントリを追加し、コロンを追加し、アプリで使用されるドメイン名を追加します。

00:08:52.000 --> 00:08:56.000
複数のドメインが必要な場合は、それぞれを別々に入力してください。

00:08:56.000 --> 00:09:04.000
関連するドメインでは、ホストアプリIDがサーバー上のAppleアプリサイトのアソシエーションファイルにリストされていることも必要です。

00:09:04.000 --> 00:09:08.000
このサーバーは、デバイスからアクセスでき、有効なSSL証明書を持っている必要があります。

00:09:08.000 --> 00:09:15.000
ユーザー承認またはカスタムルート証明書は、Appleアプリのサイトアソシエーションファイルではサポートされていません。

00:09:15.000 --> 00:09:19.000
場合によっては、アプリの開発時に、関連するドメインが不明な場合があります。

00:09:19.000 --> 00:09:25.000
これの良い例は、IDプロバイダーが拡張機能を開発するが、各顧客のホストが異なる場合です。

00:09:25.000 --> 00:09:33.000
彼らはエンタイトルメントファイルに数千をリストすることができないので、これが起こると、macOSで新しい管理された関連ドメインのペイロードを使用することができます。

00:09:33.000 --> 00:09:41.000
この値は、Xcodeの関連ドメインのエンタイトルメント値で使用したのと同じ形式であることに注意してください。

00:09:41.000 --> 00:09:47.000
また、iOSとiPadOS用の新しいAssociatedDomains MDMアプリケーション属性を使用できます。

00:09:47.000 --> 00:09:50.000
繰り返しになりますが、値はXcodeと同じでした。

00:09:50.000 --> 00:10:01.000
そして、管理された関連ドメインの最後のステップは、MDMが管理する資格を追加し、MDM値を使用するようにOSに知らせるために関連するドメインアレイを持つことです。

00:10:01.000 --> 00:10:05.000
すでにリストされているものには、MDMの値を追加します。

00:10:05.000 --> 00:10:11.000
関連するドメインとその使用方法の詳細については、ユニバーサルリンクの新機能セッションをご覧ください。

00:10:11.000 --> 00:10:14.000
そして、リダイレクト拡張はこれで終わります。

00:10:14.000 --> 00:10:16.000
では、クレデンシャルの拡張について話しましょう。

00:10:16.000 --> 00:10:23.000
資格情報の拡張はチャレンジとレスポンスの認証を目的としており、Kerberosが最良の例です。

00:10:23.000 --> 00:10:25.000
チャレンジ/レスポンスには異なる流れがあります。

00:10:25.000 --> 00:10:30.000
そのフローでは、クライアントはデータを要求し、認証のために挑戦されます。

00:10:30.000 --> 00:10:35.000
一方、リダイレクト拡張機能では、クライアントはデータを要求する前に資格情報を要求します。

00:10:35.000 --> 00:10:41.000
クレデンシャル拡張は、リダイレクト拡張が実行されているときに認証の課題を処理するためにも使用できます。

00:10:41.000 --> 00:10:47.000
クレデンシャル拡張は、要求の代わりにサーバーから返された認証チャレンジを受け取ります。

00:10:47.000 --> 00:10:50.000
URLとヘッダーを受信します。

00:10:50.000 --> 00:10:54.000
また、URLの代わりにMDMペイロード内のホストのリストも使用します。

00:10:54.000 --> 00:11:00.000
ホストは、個々のホスト名または.example.comなどのサフィックスのいずれかです。

00:11:00.000 --> 00:11:06.000
操作は、UIを表示するタイミングを決定したり、サイレント操作を要求したりするために使用できます。

00:11:06.000 --> 00:11:10.000
そして最後に、関連するドメインは資格情報の拡張には必要ありません。

00:11:10.000 --> 00:11:15.000
クレデンシャル拡張機能の設定は、リダイレクト拡張機能に似ていますが、2つの違いがあります。

00:11:15.000 --> 00:11:18.000
まず、タイプは資格情報です。

00:11:18.000 --> 00:11:21.000
次に、ホストのリストが選択に使用されます。

00:11:21.000 --> 00:11:23.000
サーバーのホスト名と照合されます。

00:11:23.000 --> 00:11:28.000
MDM値がピリオドで始まる場合、ホスト名の接尾辞と一致するために使用されます。

00:11:28.000 --> 00:11:31.000
それ以外の場合は、ホスト名全体が一致します。

00:11:31.000 --> 00:11:35.000
繰り返しになりますが、このプロファイルはMDMによって配信されなければなりません。

00:11:35.000 --> 00:11:39.000
クレデンシャル拡張機能は、Safariとネイティブアプリの両方から動作します。

00:11:39.000 --> 00:11:45.000
アプリからサーバーにリクエストが送信され、サーバーは認証チャレンジを返します。

00:11:45.000 --> 00:11:50.000
ホストがプロファイルと一致する場合、オペレーティングシステムはチャレンジを拡張機能にルーティングします。

00:11:50.000 --> 00:11:54.000
延長は、挑戦を処理するか、それを拒否する責任があります。

00:11:54.000 --> 00:11:58.000
処理された場合、リクエストを完了するための承認ヘッダーを返します。

00:11:58.000 --> 00:12:02.000
そして、サーバーは発信者に応答を返します。

00:12:02.000 --> 00:12:11.000
クレデンシャル拡張機能の素晴らしい例は、iOS 13、iPadOS、macOS Catalinaに含まれているシステムが提供するKerberos拡張機能です。

00:12:11.000 --> 00:12:18.000
この拡張機能は、すでに使用している可能性のあるActive Directory統合ソリューションであるEnterprise Connectに基づいています。

00:12:18.000 --> 00:12:22.000
デバイスをActive Directoryと統合する簡単な方法を提供します。

00:12:22.000 --> 00:12:31.000
Kerberosのサポートを提供することに加えて、Active Directoryのパスワードを管理し、ローカルとActive Directoryのパスワードを同期させるのに役立ちます。

00:12:31.000 --> 00:12:39.000
ユーザー名とパスワード、MDMが提供する証明書ベースのID、またはスマートカードを使用した認証をサポートしています。

00:12:39.000 --> 00:12:45.000
この拡張機能は、多くの人が組織でKerberosとActive Directoryをより簡単に使用するのに役立つと思います。

00:12:45.000 --> 00:12:52.000
そして、クレデンシャルシングルサインオン拡張を完了します。

00:12:52.000 --> 00:12:59.000
最初にXcodeを開き、新しいプロジェクトを作成し、Authentication Servicesテンプレートを使用してターゲットを追加します。

00:12:59.000 --> 00:13:02.000
このようになりますよ。

00:13:02.000 --> 00:13:05.000
次に、RequestHandlerプロトコルを実装します。

00:13:05.000 --> 00:13:09.000
システムは、リクエストごとに beginAuthorization 関数を呼び出します。

00:13:09.000 --> 00:13:13.000
拡張機能は複数の異なるアプリによって複数回呼び出されることを忘れないでください。

00:13:13.000 --> 00:13:17.000
したがって、各アプリの並行性とデータの分離を処理する必要があります。

00:13:17.000 --> 00:13:23.000
リクエストパラメータには、現在の認証リクエストに必要なすべての情報が含まれます。

00:13:23.000 --> 00:13:31.000
拡張機能がUIを表示する必要があると判断した場合は、リクエストでpresentAuthorization ViewControllerを呼び出すと、それを表示します。

00:13:31.000 --> 00:13:43.000
リクエストには、URL、ヘッダー、呼び出し元のアプリの識別子、および先ほど示したMDMペイロードからの拡張データが含まれています。

00:13:43.000 --> 00:13:50.000
フロー図では、リダイレクト拡張機能がリクエストを受信し、URL応答を返すことを覚えておいてください。

00:13:50.000 --> 00:13:58.000
したがって、終了すると、リダイレクト拡張機能はhttpResponseとhttpBodyで完了するか、エラーで完了する必要があります。

00:13:58.000 --> 00:14:03.000
これにより、表示された場合はビューが却下され、応答が発信者に返されます。

00:14:03.000 --> 00:14:06.000
間違った方法を呼び出すと、システムはリクエストをキャンセルします。

00:14:06.000 --> 00:14:12.000
クレデンシャル拡張はhttpChallengeを受け取り、承認ヘッダーを返す必要があります。

00:14:12.000 --> 00:14:17.000
したがって、クレデンシャル拡張は完全なAuthorizationHeadersメソッドを使用する必要があります。

00:14:17.000 --> 00:14:26.000
承認チャレンジが拡張機能でサポートされていない場合は、SafariまたはURLSessionがデフォルトの処理を続行するようにdoNotHandleで応答します。

00:14:26.000 --> 00:14:30.000
では、アプリでの拡張機能の使用を見てみましょう。

00:14:30.000 --> 00:14:38.000
URLSessionやWKWebViewなどの標準ネットワークフレームワークを使用すると、資格情報の課題が処理されます。

00:14:38.000 --> 00:14:43.000
リクエストもリダイレクトされるので、アプリを動作させるためにアプリを更新する必要はありません。

00:14:43.000 --> 00:14:46.000
しかし、その流れはあなたのアプリに最も適していないかもしれません。

00:14:46.000 --> 00:14:53.000
たとえば、リダイレクトは拡張機能に送信されますが、他のコンポーネントをオーバーレイしたり、他のWebダイアログが最初に表示される場合があります。

00:14:53.000 --> 00:14:58.000
操作を使用して、アプリの流れを改善したり、ログインするだけではありません。

00:14:58.000 --> 00:15:07.000
たとえば、組み込みのKerberos拡張機能は、iOS、iPadOS、macOSでのローカルログインとログアウト操作をサポートしています。

00:15:07.000 --> 00:15:12.000
また、アプリがユーザーに関する情報を取得するために、応答ヘッダーにカスタム値を返します。

00:15:12.000 --> 00:15:20.000
アプリで操作を呼び出すには、まずシングルサインオンプロバイダーのインスタンスを作成し、IDプロバイダーのURLを渡します。

00:15:20.000 --> 00:15:27.000
クレデンシャル拡張機能を使用している場合は、特別なレルムまたはホストスキームを使用して、それらの値にも一致させることができます。

00:15:27.000 --> 00:15:34.000
次に、canPerformAuthorizationを呼び出すと、URLがシングルサインオンで処理されるかどうかを確認します。

00:15:34.000 --> 00:15:37.000
処理できる場合は、リクエストを作成し、操作を設定します。

00:15:37.000 --> 00:15:41.000
独自のカスタム操作を作成することもできることを忘れないでください。

00:15:41.000 --> 00:15:44.000
次に、リクエストのコントローラを作成します。

00:15:44.000 --> 00:15:49.000
コントローラは、要求を処理し、応答を返す責任があります。

00:15:49.000 --> 00:15:52.000
応答を処理するデリゲートを設定します。

00:15:52.000 --> 00:15:59.000
プレゼンテーションコンテキストプロビダーを設定して、Macアプリのどのウィンドウを認証に使用するかをOSに知らせることができます。

00:15:59.000 --> 00:16:03.000
これは、ユーザーへの要求のコンテキストを維持するのに役立ちます。

00:16:03.000 --> 00:16:07.000
最後に、performRequestsを呼び出して拡張機能に送信します。

00:16:07.000 --> 00:16:12.000
拡張が終了すると、didCompleteWithAuthorizationデリゲートメソッドが呼び出されます。

00:16:12.000 --> 00:16:21.000
提供された承認インスタンスには、IDトークン、アクセストークンなどにアクセスするための簡単な方法を備えたシングルサインオン資格情報が含まれています。

00:16:21.000 --> 00:16:27.000
システムが提供するKerberos拡張機能は、ヘッダーにログインしているユーザーに関する情報を提供します。

00:16:27.000 --> 00:16:30.000
さて、いくつかの開発のヒントについて。

00:16:30.000 --> 00:16:33.000
最初のリクエストが受信されると、内線番号が読み込まれます。

00:16:33.000 --> 00:16:36.000
リクエストが完了すると、おそらくアンロードされます。

00:16:36.000 --> 00:16:43.000
したがって、設定を遅延ロードし、応答を送信する前に値をディスクに保存することをお勧めします。

00:16:43.000 --> 00:16:45.000
今、デバッグのために。

00:16:45.000 --> 00:16:50.000
拡張機能のデバッグは、最初のリクエストが受信されるまでロードされないため、難しい場合があります。

00:16:50.000 --> 00:16:56.000
したがって、拡張機能をデバッグする最善の方法は、「プロセスIDまたは名前でプロセスにアタッチ...」を使用することです。

00:16:56.000 --> 00:16:58.000
デバッグメニューの下。

00:16:58.000 --> 00:17:03.000
拡張機能の名前を入力するだけで、Xcodeが最初にロードされたときに添付されます。

00:17:03.000 --> 00:17:10.000
操作を使用する場合、一貫性を保つために、UIを表示するインタラクティブなシナリオにはログイン操作を使用することをお勧めします。

00:17:10.000 --> 00:17:18.000
サイレント操作には更新操作を使用する必要があり、エラーが発生した場合、ネイティブアプリはログイン操作をフォローアップできます。

00:17:18.000 --> 00:17:20.000
次に、ホストアプリについて話しましょう。

00:17:20.000 --> 00:17:24.000
ホストアプリを空のコンテナ以上のものにするのは良い考えです。

00:17:24.000 --> 00:17:28.000
追加メニュー、ウィジェット、さらにはコマンドラインユーティリティを検討できます。

00:17:28.000 --> 00:17:34.000
オンボーディング、デバイスのペアリング、またはパスワードの変更など、使用頻度の低い機能を処理できます。

00:17:34.000 --> 00:17:37.000
ホストアプリでもNFCを使用できます。

00:17:37.000 --> 00:17:42.000
クレデンシャル拡張機能とリダイレクト拡張機能の統合も検討する必要があります。

00:17:42.000 --> 00:17:46.000
拡張機能で活用できる新機能が追加されました。

00:17:46.000 --> 00:17:51.000
リフレッシュトークンなどの機密情報は、それを制御する方法として、拡張機能に保持することができます。

00:17:51.000 --> 00:17:55.000
ローカルでJWTに署名し、認証のためにサーバーに送信することができます。

00:17:55.000 --> 00:18:01.000
または、デバイスで証明書署名要求を作成し、CAに送信してデバイスをペアリングすることもできます。

00:18:01.000 --> 00:18:10.000
WKWebviewの認証クッキーをURLSessionと共有して、ネイティブリクエストでセッションを共有することもできます。

00:18:10.000 --> 00:18:14.000
要約すると、シングルサインオンはアプリやウェブサイトの認証を可能にします。

00:18:14.000 --> 00:18:18.000
iOS 13、iPadOS、macOSで利用できます。

00:18:18.000 --> 00:18:20.000
利用可能な2つのタイプがあります。

00:18:20.000 --> 00:18:23.000
私たちは、あなたが彼らと何ができるかを見て本当に興奮しています。

00:18:23.000 --> 23:59:59.000
詳細については、developer.apple.comをご覧ください。

