WEBVTT

00:00:01.000 --> 00:00:07.000
Apple Watch Series 4には、デザイナーや開発者のための大幅な機能強化が含まれています。

00:00:07.000 --> 00:00:21.000
シリーズ4の時計は、新しいAPIとパフォーマンスの向上とともに、より大きな寸法の新しいディスプレイを持ち、アプリを使用する人々に豊富な情報とアクションを提供する能力を高めます。

00:00:21.000 --> 00:00:27.000
アプリを作成または更新する際に、これらの新しい次元を考慮に入れたいと思うでしょう。

00:00:27.000 --> 00:00:30.000
シリーズ4の時計は、以前のシリーズの時計よりも大きい。

00:00:30.000 --> 00:00:38.000
ケースの外側で測定された40mmと44mmの2つのサイズがあります。

00:00:38.000 --> 00:00:42.000
以前のシリーズのApple Watchは38mmと42mmです。

00:00:42.000 --> 00:00:56.000
そして、これらの時計のディスプレイ寸法は、38mmの時計では272×340ピクセル、42mmの時計では312×390ピクセルです。

00:00:56.000 --> 00:01:10.000
シリーズ4の時計のディスプレイは大幅に成長し、40mmで324×394ピクセル、44mmで368×448ピクセルを測定しました。

00:01:10.000 --> 00:01:21.000
ディスプレイが大きくなるだけでなく、その周りの境界線は薄く、インタラクティブな要素にもっと注意を払い、情報をより豊かで没入感のあるものにします。

00:01:21.000 --> 00:01:24.000
すべてのディスプレイ寸法を考慮する必要があります。

00:01:24.000 --> 00:01:30.000
アプリは、画面サイズに関係なく、同じ情報とアクションをユーザーに配信する必要があります。

00:01:30.000 --> 00:01:43.000
レイアウトを検討する際、40mmシリーズ4ウォッチのディスプレイは、実際には以前のシリーズの42mmウォッチのディスプレイと寸法が非常に似ていることに注意してください。

00:01:43.000 --> 00:01:50.000
新しい40mmの時計は、ディスプレイサイズが12ピクセル広く、4ピクセル高くなっています。

00:01:50.000 --> 00:01:56.000
ケースのサイズを見渡すと、40mmと42mmの時計はスペクトルの真ん中に座っています。

00:01:56.000 --> 00:02:07.000
ここで画面のレイアウトをターゲットにする場合は、レイアウトを38mmの寸法に縮小し、44mmの寸法に縮小する必要があります。

00:02:07.000 --> 00:02:15.000
Developer.apple.comのデザインリソースには、4つのサイズすべてのデザインを始めるためのアセットとテンプレートが含まれています。

00:02:15.000 --> 00:02:20.000
一部のwatchOSのインターフェース要素は、時計のサイズに合わせてスケールすることに注意してください。

00:02:20.000 --> 00:02:32.000
テンプレートには、モックアップができるだけピクセル精度になるように、時計のサイズ別に整理されたこれらの要素の広範なコレクションが含まれています。

00:02:32.000 --> 00:02:37.000
それでは、これらの新しいディスプレイが画面のレイアウトにどのように影響するかについて話しましょう。

00:02:37.000 --> 00:02:41.000
新しいディスプレイの最も顕著な違いは、その形状です。

00:02:41.000 --> 00:02:49.000
iPhone Xと同様に、Apple Watch Series 4は角が丸みを帯びており、ケースの湾曲した角の中に対称的な外観を作り出しています。

00:02:49.000 --> 00:02:58.000
WatchKitは、テキストとコントロールの表示を支援し、UIがビューポートの最適な場所に表示されるようにします。

00:02:58.000 --> 00:03:00.000
WatchKitの要素は新しいディスプレイに適応します。

00:03:00.000 --> 00:03:06.000
上部では、アプリのステータスバーが丸みを帯びた角を占めます。

00:03:06.000 --> 00:03:18.000
以前のバージョンのwatchOSと同様に、時計はすべての画面に表示され、アプリはタイトル領域を使用して、画面の目的を説明する有用な見出しまたはタイトルを提供できます。

00:03:18.000 --> 00:03:28.000
これらの要素は両方ともインデントされ、このインデントは、アプリのコンテンツの表示を介して垂直に伸びる左右の余白を作成する必要があります。

00:03:28.000 --> 00:03:31.000
これらはシステムの最小レイアウトマージンです。

00:03:31.000 --> 00:03:41.000
グラフィック要素とボタンの背景は、これらのマージンを超えて、両側でデフォルトで実行される1ピクセルマージンまで、ほぼ端から端まで実行する必要があります。

00:03:41.000 --> 00:03:48.000
テキストは、ステータスバーのテキストの左端から伸びて、左マージンに揃える必要があります。

00:03:48.000 --> 00:03:55.000
スクロールビューのコーナーを説明するために、コンテンツ領域の上部と下部に明確な領域があります。

00:03:55.000 --> 00:04:04.000
これらはスクロールクリア領域と呼ばれ、ユーザーがスクロールアクションを完了したときにテキストとボタンが完全に表示されることを保証します。

00:04:04.000 --> 00:04:11.000
たとえば、スクロールビューの下部にあるボタンは、クリアエリアの上の安全なエリアに落ち着きます。

00:04:11.000 --> 00:04:21.000
フルスクリーンのSpriteKitまたはSceneKitシーンを使用している場合は、余白とインセットを使用してコンテンツを表示に誘導します。

00:04:21.000 --> 00:04:30.000
最高の時計体験はシンプルで目を見やすいので、アプリ内で意図的に単一画面であり、スクロールすべきではないビューがあるかもしれません。

00:04:30.000 --> 00:04:41.000
たとえば、システムによってナッジされるのではなく、ボタンがクリアエリアに配置されていることを確認したい場合は、Xcodeで属性を設定することでできます。

00:04:41.000 --> 00:04:51.000
ビューの属性インスペクタで、画面の端に固定を選択すると、そのビュー内のコンテンツがスクロールされなくなります。

00:04:51.000 --> 00:04:56.000
では、Apple Watch Series 4のアプリのアップデートについて話しましょう。

00:04:56.000 --> 00:05:02.000
アプリは、watchOS 5用に再コンパイルする前であっても、シリーズ4の時計で実行されます。

00:05:02.000 --> 00:05:13.000
40mmの時計では38mmの寸法で、44mmの時計では42mmの寸法で表示されます。

00:05:13.000 --> 00:05:16.000
シリーズ4のディスプレイを中心に配置されます。

00:05:16.000 --> 00:05:21.000
そして、ユーザーの観点から見ると、あなたのアプリは予測可能に表示され、動作します。

00:05:21.000 --> 00:05:29.000
watchOS 5用のアプリを再コンパイルすると、アプリは新しいディスプレイの全幅と高さを占有できます。

00:05:29.000 --> 00:05:44.000
固定幅ではなく、コンテナに対してWatchKit要素を実装している限り、アプリはシリーズ4ウォッチの追加の画面スペースを埋めるために拡張され、これはユーザーにとってはるかに没入感と魅力を感じるでしょう。

00:05:44.000 --> 00:05:54.000
アプリにフルスクリーンのSpriteKitまたはSceneKitシーンが含まれている場合は、シーン内のテキストとコントロールがシリーズ4ウォッチで正しくレンダリングされていることを確認する必要があります。

00:05:54.000 --> 00:06:13.000
システム最小レイアウトマージンにアクセスして、コンテンツが画面の左端と右端から適切に挿入されていることを確認し、コンテンツセーフエリアの挿入情報にアクセスして、ユーザーがスクロールしたときにテキストとアクションが時計のコンテンツ領域に適切に定着くようにする必要があります。

00:06:13.000 --> 00:06:23.000
シリーズ4は、デジタルクラウンの回転に対応する新しい触覚を導入し、Apple Watch全体でより触覚的な体験を生み出します。

00:06:23.000 --> 00:06:28.000
デフォルトでは、ハプティックディテントまたはタップは、デジタルクラウンが回転したときに生成されます。

00:06:28.000 --> 00:06:37.000
したがって、スクロールやピッカー内のアイテムの選択などの一般的なユーザーインタラクションは、ユーザーに触覚フィードバックを提供します。

00:06:37.000 --> 00:06:43.000
シリーズ4の時計に関するこの新しい触覚フィードバックで、アプリの経験を評価する必要があります。

00:06:43.000 --> 00:06:56.000
ユーザーは一貫した触覚体験に慣れるので、アプリがデジタルクラウンの回転でUIのイベントを調整する場合は、それらのUIイベントがこれらの新しい触覚効果と一致していることを確認する必要があります。

00:06:56.000 --> 00:07:06.000
次に、watchOS 5で導入された新しいテキストスタイルと、シリーズ4の時計でのダイナミックタイプの実装について話し合いましょう。

00:07:06.000 --> 00:07:13.000
watchOS 5では、ダイナミックタイプライブラリが拡張され、4つの新しい大きなサイズが含まれていました。

00:07:13.000 --> 00:07:22.000
大きなタイトルとタイトル1、2、および3は、コンテンツとアクションがウォッチ画面で一目でわかるようにするためのより多くの方法を提供します。

00:07:22.000 --> 00:07:31.000
これらのスタイルを実装してテストする際には、時計ケースのサイズに対応するさまざまなデフォルトのコンテンツカテゴリがあることを覚えておいてください。

00:07:31.000 --> 00:07:42.000
小型は38mm、大型は40mmと42mm、XLargeは44mmのデフォルトカテゴリです。

00:07:42.000 --> 00:07:51.000
時計は異なるデフォルト設定で始まるかもしれませんが、それぞれが幅広いユーザー設定に対応するために同じスペクトルを提供します。

00:07:51.000 --> 00:07:56.000
これらのスタイルを遵守することで、アプリがすべてのユーザーに予測可能に配信されます。

00:07:56.000 --> 00:08:02.000
最後に、ウォッチプロジェクトのビジュアルアセットに関連する機能強化について話し合いましょう。

00:08:02.000 --> 00:08:10.000
PDFを使用してグラフィックスの生産を合理化し、デバイスサイズ間で高解像度のスケーリングが可能になりました。

00:08:10.000 --> 00:08:20.000
スケールファクター2でグラフィックを準備し、PDFとして保存すると、4つの時計サイズすべてで使用する単一のファイルを作成できます。

00:08:20.000 --> 00:08:30.000
このPDFアセットをXcodeに持ち込んだら、Watchプロジェクトのアセットカタログに配置し、アセットをユニバーサル2xボックスにドロップします。

00:08:30.000 --> 00:08:35.000
そして、属性インスペクタで、自動スケーリングプロパティを自動に調整します。

00:08:35.000 --> 00:08:45.000
これにより、グラフィックスは38mmディスプレイでは9%、44mmディスプレイでは10%縮小されます。

00:08:45.000 --> 00:08:53.000
最後の注意：44mmウォッチのUIを説明するために、2つの新しいアプリアイコンサイズがあります。

00:08:53.000 --> 00:08:59.000
これらの新しいアイコンは、ショートルックの通知とホーム画面のアイコンに使用されます。

00:08:59.000 --> 00:09:07.000
これらのアイコンのガイドと寸法は、Apple Watch Series 4用に新しく更新されたデザインリソースのテンプレートにあります。

00:09:07.000 --> 00:09:15.000
WWDCのビデオ「watchOSの新機能」には、watchOS 5の機能の徹底的な紹介もあります。

00:09:15.000 --> 23:59:59.000
このビデオ、デザインリソース、ヒューマンインターフェースガイドラインは、developer.apple.comで見つけることができます。

