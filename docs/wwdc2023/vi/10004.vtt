WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:12.000
Shawn: Xin chào, tôi là Shawn.

00:00:12.000 --> 00:00:15.000
Tôi là một kỹ sư trong nhóm Công nghệ Internet.

00:00:15.000 --> 00:00:23.000
Hôm nay, chúng ta sẽ nói về việc giảm sự chậm trễ mạng trong ứng dụng của bạn với L4S.

00:00:23.000 --> 00:00:30.000
L4S là viết tắt của Low Latency, Low Loss, và Scalable throughput.

00:00:30.000 --> 00:00:41.000
Đây là một công nghệ đáng kinh ngạc giúp cải thiện đáng kể hiệu suất của các ứng dụng nơi độ trễ mạng có thể ảnh hưởng đến trải nghiệm người dùng.

00:00:41.000 --> 00:00:54.000
Chỉ nêu một vài lợi ích, nó có thể giúp ứng dụng của bạn giảm thời gian tải nội dung, cải thiện chất lượng video và mang lại sự cộng tác phản hồi nhanh hơn giữa những người dùng.

00:00:54.000 --> 00:01:01.000
Hôm nay, trước tiên chúng ta sẽ khám phá cách L4S hoạt động và cách nó giảm sự chậm trễ của mạng.

00:01:01.000 --> 00:01:10.000
Sau đó, chúng tôi sẽ xem xét cách chuẩn bị ứng dụng của bạn cho L4S và cách bật L4S trên máy chủ của bạn.

00:01:10.000 --> 00:01:17.000
Cuối cùng, chúng ta sẽ nói về các bước bạn có thể thực hiện để định cấu hình mạng L4S và kiểm tra ứng dụng của mình.

00:01:17.000 --> 00:01:24.000
Đầu tiên, hãy khám phá những lợi ích của L4S và cách nó hoạt động.

00:01:24.000 --> 00:01:32.000
Một mạng bận rộn có thể đặc biệt khó khăn đối với các ứng dụng phụ thuộc vào các tính năng như âm thanh và video thời gian thực.

00:01:32.000 --> 00:01:43.000
Khi mạng được sử dụng bởi nhiều thiết bị cùng một lúc, nó thường có thể gây ra độ trễ cao và mất gói trong các loại ứng dụng này.

00:01:43.000 --> 00:01:54.000
Ví dụ, bạn có thể đã gặp phải sự chậm trễ hoặc tạm dừng video trong cuộc gọi video khi người khác sử dụng cùng một mạng đang xem phim hoặc tải xuống trò chơi điện tử.

00:01:54.000 --> 00:02:05.000
Để cho bạn thấy L4S có thể giúp ích bao nhiêu trong tình huống khó khăn như vậy, chúng tôi đã tạo một ứng dụng mẫu thực hiện cuộc gọi video giữa hai thiết bị.

00:02:05.000 --> 00:02:16.000
Tôi sẽ cho bạn xem hai cuộc gọi video với ứng dụng mẫu của tôi được thực hiện vào những thời điểm khác nhau, một cuộc gọi không có L4S và một cuộc gọi khác được bật L4S.

00:02:16.000 --> 00:02:22.000
Đối với cả hai cuộc gọi này, tôi đã sử dụng cùng một mạng bị hạn chế với băng thông thấp.

00:02:22.000 --> 00:02:30.000
Ngoài ra, cũng có nhiều thiết bị khác tích cực sử dụng cùng một mạng cùng một lúc.

00:02:30.000 --> 00:02:33.000
Hãy xem điều này đang hoạt động.

00:02:33.000 --> 00:02:39.000
Bạn sẽ nhận thấy sự khác biệt đáng kể về chất lượng video giữa hai cuộc gọi.

00:02:39.000 --> 00:02:45.000
Di sản cho thấy các video thỉnh thoảng bị đình trệ và chậm trễ, đặc biệt là trong quá trình chuyển động.

00:02:45.000 --> 00:02:53.000
Tuy nhiên, với L4S, video mượt mà và nhạy bén, không có bất kỳ sự chậm trễ đáng kể nào.

00:02:53.000 --> 00:03:00.000
Bây giờ hãy phân tích các cuộc gọi video mà chúng ta vừa chứng kiến để hiểu chuyện gì đang xảy ra.

00:03:00.000 --> 00:03:10.000
Trong bản demo này, L4S cho phép ứng dụng của chúng tôi đạt được những cải tiến đáng kể trên tất cả các chỉ số mạng chính.

00:03:10.000 --> 00:03:18.000
Đầu tiên, hãy xem xét sự phân bố thời gian khứ hồi của các gói trong các cuộc gọi video này.

00:03:18.000 --> 00:03:24.000
Thời gian khứ hồi ngắn hơn cho thấy độ trễ thấp hơn và tốt hơn trên mạng.

00:03:24.000 --> 00:03:35.000
Đối với một ứng dụng tương tác như thế này, độ trễ đuôi là vô cùng quan trọng, vì nó cho thấy trường hợp xấu nhất mà người dùng trải nghiệm.

00:03:35.000 --> 00:03:40.000
Mạng thử nghiệm của chúng tôi có thời gian khứ hồi tối thiểu là 20 mili giây.

00:03:40.000 --> 00:03:49.000
Tuy nhiên, không có L4S, các gói đã trải qua thời gian khứ hồi lên đến 45 mili giây.

00:03:49.000 --> 00:04:01.000
Nhưng với L4S được bật, ngay cả độ trễ trường hợp xấu nhất cũng bị cắt giảm 50% và giảm xuống dưới 25 mili giây.

00:04:01.000 --> 00:04:05.000
Tiếp theo, hãy xem xét việc mất gói.

00:04:05.000 --> 00:04:11.000
Mất gói thấp hơn thể hiện kết nối đáng tin cậy hơn giữa các thiết bị.

00:04:11.000 --> 00:04:16.000
Với kế thừa, tỷ lệ mất gói đạt hơn 40%.

00:04:16.000 --> 00:04:22.000
Nhưng với L4S, việc mất gói trong cuộc gọi video của chúng tôi gần như đã được loại bỏ.

00:04:22.000 --> 00:04:28.000
Điều đó có nghĩa là khung hình giảm hoặc ngừng hoạt động ít hơn do mất dữ liệu.

00:04:28.000 --> 00:04:36.000
Độ trễ được cải thiện và tỷ lệ mất gói được chuyển trực tiếp thành các chỉ số kết xuất tốt hơn của cuộc gọi video của chúng tôi.

00:04:36.000 --> 00:04:40.000
Đầu tiên, hãy xem xét tỷ lệ phần trăm gian hàng video.

00:04:40.000 --> 00:04:45.000
Tỷ lệ phần trăm dừng thấp hơn có nghĩa là ít bị đóng băng hơn trong cuộc gọi video.

00:04:45.000 --> 00:04:52.000
Không có L4S, thỉnh thoảng chúng tôi đã trải qua các gian hàng video trong ứng dụng của mình.

00:04:52.000 --> 00:04:59.000
Nhưng với L4S, các gian hàng video gần như đã bị loại bỏ hoàn toàn.

00:04:59.000 --> 00:05:04.000
Tiếp theo, hãy xem xét tốc độ khung hình video nhận được.

00:05:04.000 --> 00:05:11.000
Tốc độ khung hình video nhận được cao hơn và nhất quán hơn có nghĩa là cuộc gọi video phong phú hơn và mượt mà hơn.

00:05:11.000 --> 00:05:20.000
Với L4S, tốc độ khung hình video nhận được là trên 25 khung hình mỗi giây trong hầu hết thời gian.

00:05:20.000 --> 00:05:30.000
Tuy nhiên, cái kế thừa đôi khi giảm xuống mức thấp nhất là 0 khung hình mỗi giây, có nghĩa là một video hoàn chỉnh bị đình trệ.

00:05:30.000 --> 00:05:37.000
Nhìn chung, những cải tiến này mang lại trải nghiệm người dùng tốt hơn nhiều ngay cả trong một mạng bị hạn chế.

00:05:37.000 --> 00:05:44.000
Bạn có thể mang lại những cải tiến tương tự cho ứng dụng của mình bằng cách áp dụng L4S.

00:05:44.000 --> 00:05:49.000
Bây giờ, chúng ta hãy xem L4S hoạt động như thế nào.

00:05:49.000 --> 00:05:57.000
Chúng tôi thấy những cải tiến đáng chú ý như vậy, bởi vì L4S giảm hàng đợi và mất gói.

00:05:57.000 --> 00:06:02.000
Trước tiên chúng ta hãy xem cách một hàng đợi được xây dựng trong một mạng.

00:06:02.000 --> 00:06:10.000
Khi một gói tin được gửi từ ứng dụng của bạn, nó sẽ được định tuyến qua các bước nhảy mạng khác nhau trước khi đến máy chủ của bạn.

00:06:10.000 --> 00:06:17.000
Tập hợp các bước nhảy mà gói của bạn đi qua được gọi là đường dẫn mạng.

00:06:17.000 --> 00:06:28.000
Trên đường dẫn thông qua mạng, bạn chỉ có thể cung cấp dữ liệu từ đầu đến cuối với tốc độ được hỗ trợ bởi bước nhảy chậm nhất, được gọi là nút cổ chai.

00:06:28.000 --> 00:06:39.000
Đối với nhiều người, đây là kết nối nhà cung cấp dịch vụ internet của họ và tốc độ cao nhất mà nó có thể xử lý các gói tin xác định thông lượng tối đa được hỗ trợ trên đường dẫn.

00:06:39.000 --> 00:06:48.000
Nếu người gửi vượt quá thông lượng tối đa, một hàng đợi sẽ hình thành ở nút cổ chai, gây ra sự chậm trễ cho các gói tiếp theo.

00:06:48.000 --> 00:06:55.000
Nếu không có L4S, hàng đợi sẽ tiếp tục tăng cho đến khi hàng đợi không thể chứa thêm bất kỳ gói nào nữa.

00:06:55.000 --> 00:07:02.000
Khi điều đó xảy ra, các gói sẽ bị loại bỏ, gây hại cho cả độ trễ và thông lượng.

00:07:02.000 --> 00:07:10.000
L4S giải quyết vấn đề này thông qua sự hợp tác giữa máy khách, máy chủ và nút cổ chai.

00:07:10.000 --> 00:07:20.000
Với L4S, máy khách hoặc máy chủ gửi các gói cần báo hiệu rằng họ sẽ hợp tác để quản lý tắc nghẽn mạng.

00:07:20.000 --> 00:07:32.000
Để làm điều này, người gửi có khả năng L4S sẽ sử dụng một công nghệ gọi là Thông báo tắc nghẽn rõ ràng, còn được gọi là ECN.

00:07:32.000 --> 00:07:40.000
Khi truyền một gói tin, người gửi chỉ ra sự hỗ trợ cho L4S bằng cách sử dụng các bit ECN trong tiêu đề IP của gói.

00:07:40.000 --> 00:07:49.000
Khi một bước nhảy L4S nhận được các gói này, nó sẽ áp dụng quản lý hàng đợi L4S cho chúng.

00:07:49.000 --> 00:08:01.000
Khi một hàng đợi bắt đầu tích tụ ở nút cổ chai, quản lý hàng đợi L4S sẽ chỉ ra rằng có tắc nghẽn bằng cách đặt một nhãn ECN khác trên các gói.

00:08:01.000 --> 00:08:09.000
Nhãn này chỉ ra rằng mạng đã bị tắc nghẽn trước khi chuyển tiếp chúng đến bước nhảy tiếp theo.

00:08:09.000 --> 00:08:20.000
Khi nhận được các gói này, người nhận sẽ đếm số lượng gói được đánh dấu bằng nhãn tắc nghẽn và báo cáo số lượng trở lại cho người gửi.

00:08:20.000 --> 00:08:26.000
Khi người gửi nhận được số này, nó sẽ sử dụng phản hồi này để hiểu sự tắc nghẽn trên mạng.

00:08:26.000 --> 00:08:36.000
Sau đó, người gửi điều chỉnh tốc độ gửi của mình theo mức độ tắc nghẽn tại nút cổ chai, để nó không vượt quá thông lượng tối đa.

00:08:36.000 --> 00:08:43.000
Với tỷ lệ gửi được điều chỉnh, người gửi có thể tránh xây dựng một hàng đợi lớn các gói tin ở nút cổ chai.

00:08:43.000 --> 00:08:52.000
Điều này cho phép L4S tối đa hóa thông lượng của nó và đạt được độ trễ đầu cuối thấp cùng một lúc.

00:08:52.000 --> 00:09:00.000
Bây giờ, hãy khám phá những gì bạn cần làm để cho phép sự hợp tác này mang lại những lợi ích này cho người dùng của bạn.

00:09:00.000 --> 00:09:06.000
Đầu tiên, hãy thảo luận về cách bạn có thể chuẩn bị ứng dụng của mình cho L4S.

00:09:06.000 --> 00:09:16.000
Sử dụng API mạng trong URLSession và khung mạng là cách tốt nhất để áp dụng L4S trong ứng dụng của bạn.

00:09:16.000 --> 00:09:24.000
Nếu ứng dụng của bạn sử dụng HTTP/3 hoặc QUIC trong các khuôn khổ này, hỗ trợ L4S sẽ tự động được tích hợp sẵn.

00:09:24.000 --> 00:09:29.000
Bạn không cần phải thực hiện bất kỳ thay đổi mã nào đối với ứng dụng của mình.

00:09:29.000 --> 00:09:42.000
Ngoài ra, nếu ứng dụng của bạn sử dụng HTTP/2 hoặc TCP, iOS 17 và macOS Sonoma có hỗ trợ L4S tích hợp để tải xuống trên các giao thức này.

00:09:42.000 --> 00:09:52.000
Đây là những cách tốt nhất để thêm hỗ trợ L4S vào ứng dụng của bạn vì chúng không yêu cầu bất kỳ thay đổi mã nào.

00:09:52.000 --> 00:10:03.000
Tuy nhiên, nếu ứng dụng của bạn sử dụng giao thức tùy chỉnh, có một vài điều bạn sẽ cần thực hiện để hỗ trợ L4S trong ứng dụng của mình.

00:10:03.000 --> 00:10:09.000
RFC 9330 là một điểm khởi đầu tốt để tìm hiểu về các yêu cầu L4S.

00:10:09.000 --> 00:10:12.000
Bạn sẽ cần thực hiện một vài hành vi mới.

00:10:12.000 --> 00:10:21.000
Ví dụ, giao thức của bạn cần hiểu phản hồi tắc nghẽn L4S từ mạng và điều chỉnh tốc độ gửi của nó cho phù hợp.

00:10:21.000 --> 00:10:26.000
Để làm điều đó, bạn cần triển khai một thuật toán kiểm soát tắc nghẽn có thể mở rộng.

00:10:26.000 --> 00:10:34.000
Sau đó, bạn cần đảm bảo rằng ứng dụng của bạn chỉ gửi lưu lượng L4S khi mạng cho phép các bit ECN đi qua.

00:10:34.000 --> 00:10:46.000
Để làm điều đó, hãy triển khai cơ chế xác thực ECN để kiểm tra bất kỳ sự cố mạng nào có thể can thiệp vào ECN, chẳng hạn như tẩy trắng ECN.

00:10:46.000 --> 00:10:56.000
Khi hoạt động như một người nhận, giao thức của bạn cũng cần có một cơ chế chuyển tiếp để lặp lại phản hồi ECN của mạng cho người gửi.

00:10:56.000 --> 00:11:08.000
Nếu việc triển khai của bạn dựa trên khung Mạng, bạn có thể sử dụng thuộc tính ECN trên siêu dữ liệu gói của mình để gửi và nhận cờ ECN cho giao thức tùy chỉnh của mình.

00:11:08.000 --> 00:11:19.000
Nếu bạn đang sử dụng ổ cắm, bạn có thể sử dụng tùy chọn đặt ổ cắm hoặc gửi và nhận các cuộc gọi hệ thống tin nhắn để gửi và nhận cờ ECN.

00:11:19.000 --> 00:11:28.000
Bây giờ chúng tôi đã đề cập đến cách chuẩn bị ứng dụng của bạn cho L4S, hãy khám phá cách thiết lập máy chủ của bạn.

00:11:28.000 --> 00:11:36.000
Nếu ứng dụng của bạn sử dụng QUIC, việc triển khai QUIC của máy chủ của bạn cũng cần hỗ trợ đánh dấu L4S và ECN.

00:11:36.000 --> 00:11:41.000
Có rất nhiều triển khai QUIC có sẵn ở phía máy chủ.

00:11:41.000 --> 00:11:46.000
Hỏi nhà cung cấp máy chủ của bạn về cách bật ECN và L4S.

00:11:46.000 --> 00:11:54.000
Nếu họ chưa hỗ trợ gửi lưu lượng L4S, bạn vẫn có thể bật ECN nhận lưu lượng L4S trên máy chủ của mình.

00:11:54.000 --> 00:12:01.000
Bây giờ là thời điểm tuyệt vời để khuyến khích họ hỗ trợ đầy đủ L4S.

00:12:01.000 --> 00:12:08.000
Nếu ứng dụng của bạn đang sử dụng TCP, bạn sẽ cần thêm hỗ trợ L4S vào việc triển khai TCP của máy chủ.

00:12:08.000 --> 00:12:14.000
Đối với máy chủ dựa trên Linux, hãy làm theo hướng dẫn trên trang GitHub này để thêm hỗ trợ cho máy chủ của bạn.

00:12:14.000 --> 00:12:21.000
Bạn cũng có thể tìm thêm thông tin chi tiết từ bài viết trong các mục liên quan cho video này.

00:12:21.000 --> 00:12:31.000
Đối với tất cả các nền tảng máy chủ khác, vui lòng tham khảo ý kiến nhà cung cấp máy chủ của bạn, vì có thể có các cấu hình bổ sung hoặc thay đổi được yêu cầu để hỗ trợ L4S.

00:12:31.000 --> 00:12:43.000
Bây giờ chúng tôi đã đề cập đến cách ứng dụng và máy chủ của bạn có thể được thiết lập cho L4S, hãy khám phá cách thiết lập mạng L4S để kiểm tra ứng dụng của bạn.

00:12:43.000 --> 00:12:48.000
Đầu tiên, hãy xem lại điều gì làm cho mạng có khả năng L4S.

00:12:48.000 --> 00:12:52.000
Mạng không được chặn các dấu ECN.

00:12:52.000 --> 00:13:01.000
Dấu ECN được sử dụng để truyền đạt thông tin về mạng giữa người gửi, nút cổ chai và người nhận.

00:13:01.000 --> 00:13:07.000
Nếu mạng của bạn can thiệp vào các dấu ECN, L4S sẽ không hoạt động.

00:13:07.000 --> 00:13:17.000
Tài liệu có các bước bạn có thể làm theo, cùng với các công cụ bổ sung, mà bạn có thể sử dụng để xác minh xem mạng của bạn có tương thích với ECN hay không.

00:13:17.000 --> 00:13:23.000
Tiếp theo, nút cổ chai mạng phải hỗ trợ quản lý hàng đợi L4S.

00:13:23.000 --> 00:13:28.000
Điều này rất cần thiết để có thể thấy được lợi ích của L4S.

00:13:28.000 --> 00:13:36.000
Khi bạn đã xác minh rằng mạng của mình tương thích với ECN, bạn chỉ cần thêm quản lý hàng đợi L4S vào nút cổ chai.

00:13:36.000 --> 00:13:45.000
Để thiết lập một mạng thử nghiệm hỗ trợ quản lý hàng đợi L4S, cách tốt nhất là sử dụng Chia sẻ Internet.

00:13:45.000 --> 00:13:51.000
Trong macOS Sonoma, Chia sẻ Internet hỗ trợ quản lý hàng đợi L4S.

00:13:51.000 --> 00:14:02.000
Khi một thiết bị tham gia mạng do máy Mac tạo ra với Chia sẻ Internet, bản thân máy Mac sẽ trở thành một bước nhảy mạng bổ sung giữa thiết bị và máy chủ.

00:14:02.000 --> 00:14:15.000
Nếu bạn định cấu hình Mac là nút cổ chai trên mạng, nó sẽ áp dụng quản lý hàng đợi L4S cho lưu lượng truy cập đi qua nó, cho phép bạn xây dựng một mạng L4S hoàn chỉnh.

00:14:15.000 --> 00:14:22.000
Để bật Chia sẻ Internet trong macOS, hãy điều hướng đến ngăn Chia sẻ Internet trong Cài đặt Hệ thống.

00:14:22.000 --> 00:14:32.000
Nhấp vào nút tiết lộ để chọn giao diện để chia sẻ và giao diện mà thiết bị thử nghiệm của bạn sẽ kết nối.

00:14:32.000 --> 00:14:38.000
Để làm cho Mac hoạt động như một nút thắt cổ chai trên mạng này, bạn cần điều chỉnh băng thông của nó.

00:14:38.000 --> 00:14:49.000
Sử dụng lệnh ifconfig này trong Terminal với giao diện bạn đang chia sẻ, cũng như giao diện mà thiết bị của bạn sẽ kết nối.

00:14:49.000 --> 00:14:58.000
Thay thế tên giao diện trong lệnh này bằng tên của các giao diện bạn đang sử dụng, ví dụ: en1.

00:14:58.000 --> 00:15:06.000
Sau đó, tham gia mạng trên thiết bị thử nghiệm của bạn và kiểm tra ứng dụng của bạn để xem lợi ích của L4S.

00:15:06.000 --> 00:15:20.000
Để đảo ngược việc điều chỉnh băng thông trên Mac, bạn có thể khởi động lại hoặc chạy cùng một lệnh ifconfig nhưng thay đổi băng thông thành 0 thay vì 10 megabit mỗi giây.

00:15:20.000 --> 00:15:28.000
Trong iOS 17 và macOS Sonoma, L4S sẽ dần dần được triển khai cho một nhóm người dùng ngẫu nhiên.

00:15:28.000 --> 00:15:36.000
Để đảm bảo thiết bị thử nghiệm của bạn đã bật L4S, hãy điều hướng đến Cài đặt Nhà phát triển và bật L4S.

00:15:36.000 --> 00:15:43.000
Trong macOS, bạn có thể kích hoạt L4S bằng cách chạy lệnh ghi mặc định này trước khi kiểm tra.

00:15:43.000 --> 00:15:51.000
Nếu mạng hoặc máy chủ của bạn không hỗ trợ L4S, TCP và QUIC sẽ tiếp tục hoạt động ở chế độ kế thừa.

00:15:51.000 --> 00:15:58.000
Tuy nhiên, bạn nên bật L4S và kiểm tra ứng dụng của mình để xác định bất kỳ vấn đề nào.

00:15:58.000 --> 00:16:04.000
Cung cấp phản hồi bằng cách sử dụng Trợ lý Phản hồi nếu có bất kỳ vấn đề nào phát sinh.

00:16:04.000 --> 00:16:11.000
Tài liệu cũng cung cấp thông tin hữu ích về gỡ lỗi và kiểm tra L4S trong ứng dụng của bạn.

00:16:11.000 --> 00:16:21.000
Tôi rất vui vì các ứng dụng và mạng hiện có thể hỗ trợ giảm độ trễ và giảm mất gói với L4S.

00:16:21.000 --> 00:16:32.000
Kiểm tra ứng dụng của bạn trong iOS 17 và macOS Sonoma ngay hôm nay trên các mạng hỗ trợ L4S cũng như trên các mạng không hỗ trợ.

00:16:32.000 --> 00:16:42.000
Làm việc với máy chủ hoặc nhà cung cấp CDN của bạn để cho phép hỗ trợ L4S trên máy chủ ứng dụng của bạn, nếu họ chưa làm như vậy.

00:16:42.000 --> 00:16:49.000
Sử dụng Trợ lý Phản hồi để báo cáo bất kỳ sự cố nào bạn gặp phải với L4S được bật trong ứng dụng của bạn.

00:16:49.000 --> 00:16:51.000
Cảm ơn vì đã xem.

00:16:51.000 --> 00:16:56.000
Tôi mong muốn xây dựng các ứng dụng tốt hơn nữa với bạn bằng cách sử dụng L4S.

00:16:56.000 --> 23:59:59.000
♪ ♪

