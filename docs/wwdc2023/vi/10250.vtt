WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:15.000
Dariusz: Xin chào, tôi là Dariusz, và tôi là một kỹ sư trong nhóm Xcode Playgrounds.

00:00:15.000 --> 00:00:23.000
Tôi muốn chỉ cho bạn cách những cải tiến trong Xcode Playgrounds giúp việc tạo mẫu các tính năng mới trong dự án của bạn dễ dàng hơn.

00:00:23.000 --> 00:00:28.000
Có nhiều tình huống mà Xcode Playgrounds có thể cải thiện quy trình làm việc của bạn.

00:00:28.000 --> 00:00:40.000
Trước hết, chúng cho phép bạn bỏ qua việc xây dựng lại và khởi chạy lại dự án bất cứ khi nào bạn muốn tạo mẫu một tính năng mới hoặc đơn giản là thử một thay đổi nhỏ trong mã của bạn.

00:00:40.000 --> 00:00:51.000
Chúng cũng giúp việc thực thi mã dễ dàng hơn nhiều mà nếu không sẽ khá khó tiếp cận, như logic chịu trách nhiệm tạo bản tóm tắt đơn hàng trong ứng dụng mua sắm.

00:00:51.000 --> 00:01:01.000
Tất nhiên, mã như vậy có thể và nên được xác minh bằng các bài kiểm tra, nhưng Playgrounds cũng có thể là một điểm khởi đầu tuyệt vời để phát triển chúng.

00:01:01.000 --> 00:01:10.000
Đây cũng là một môi trường hoàn hảo để thử mã trước khi giới thiệu các phụ thuộc mới cho dự án của bạn.

00:01:10.000 --> 00:01:14.000
Tôi muốn cho bạn thấy Xcode Playgrounds đang giúp tôi như thế nào trong dự án của mình.

00:01:14.000 --> 00:01:20.000
Tôi đang làm việc trên một ứng dụng nhỏ nhằm giúp tôi chụp ảnh động vật hoang dã.

00:01:20.000 --> 00:01:26.000
Hiện tại, ứng dụng của tôi giúp tôi theo dõi các loài mà tôi đã tìm thấy và chụp ảnh.

00:01:26.000 --> 00:01:37.000
Bây giờ, tôi muốn ứng dụng này giúp tôi với một khía cạnh khá quan trọng của nhiếp ảnh động vật hoang dã, đó là thực sự là tìm kiếm các loài động vật ngay từ đầu.

00:01:37.000 --> 00:01:42.000
Tôi muốn giới thiệu một tab mới để xem danh sách kiểm tra.

00:01:42.000 --> 00:01:48.000
Tôi đã bắt đầu triển khai chế độ xem và tôi khá hài lòng với giao diện người dùng này.

00:01:48.000 --> 00:01:53.000
Mỗi con chim có một hộp kiểm, điều này sẽ cho phép tôi theo dõi tiến trình của mình.

00:01:53.000 --> 00:01:59.000
Tuy nhiên, với hơn 2.000 con chim trong danh sách, có lẽ tôi sẽ không cảm thấy mình đang tiến bộ nhiều.

00:01:59.000 --> 00:02:04.000
Sẽ thật tuyệt nếu thu hẹp danh sách này xuống một chút.

00:02:04.000 --> 00:02:11.000
Để làm điều đó, tôi sẽ phải điều chỉnh thuộc tính tính toán birdsToShow trong Chế độ xem danh sách kiểm tra tùy chỉnh của mình.

00:02:11.000 --> 00:02:21.000
Hiện tại, nó chỉ đơn giản là tạo ra loại BirdProvider của tôi được cấu hình cho Bắc Mỹ và trả lại tất cả các loài chim được tìm thấy trên toàn lục địa.

00:02:21.000 --> 00:02:34.000
Để tránh việc xây dựng lại và khởi chạy lại dự án thường xuyên và sau đó điều hướng đến Chế độ xem danh sách kiểm tra để xem các thay đổi của tôi, tôi sẽ cố gắng điều chỉnh mã này trong Sân chơi Xcode.

00:02:34.000 --> 00:02:40.000
Tôi sẽ bắt đầu bằng cách thêm một sân chơi mới vào dự án của mình.

00:02:40.000 --> 00:02:44.000
Đây là một ứng dụng iOS, vì vậy tôi sẽ gắn bó với các mẫu iOS.

00:02:44.000 --> 00:02:55.000
Tôi sẽ gõ "sân chơi" vào thanh lọc và chọn một sân chơi trống.

00:02:55.000 --> 00:03:07.000
Trong trường hợp này, tôi có thể sẽ thoát khỏi sân chơi khi tôi thử một vài thứ, vì vậy tôi có thể giữ tên "MyPlayground" mặc định.

00:03:07.000 --> 00:03:15.000
Tôi sẽ loại bỏ nội dung mặc định của sân chơi.

00:03:15.000 --> 00:03:30.000
Để lặp lại nhanh hơn nữa, tôi sẽ chuyển sang "Tự động chạy" trong menu hiển thị khi tôi nhấp lâu vào nút chạy trên thanh dưới cùng.

00:03:30.000 --> 00:03:36.000
Điều này khiến sân chơi tự động thực thi toàn bộ mã bất cứ khi nào tôi ngừng thực hiện thay đổi.

00:03:36.000 --> 00:03:45.000
Lưu ý rằng các sân chơi được thêm vào các dự án có hai cài đặt được bật theo mặc định: Xây dựng sơ đồ hoạt động và Nhập các loại ứng dụng.

00:03:45.000 --> 00:03:54.000
Họ sẽ đảm bảo rằng sơ đồ hoạt động được xây dựng trước mỗi lần thực thi sân chơi và các mô-đun mục tiêu của ứng dụng được nhập tự động.

00:03:54.000 --> 00:03:59.000
Điều này giúp việc làm việc với các loại được xác định trong dự án của bạn dễ dàng hơn nhiều.

00:03:59.000 --> 00:04:05.000
Tôi có thể đóng thanh tra để có thêm chỗ cho sân chơi.

00:04:05.000 --> 00:04:19.000
Hãy bắt đầu bằng cách khai báo một phiên bản BirdProvider như chúng ta đã thấy trong thuộc tính birdsToShow của ChecklistView của tôi.

00:04:19.000 --> 00:04:27.000
Thanh bên kết quả ở bên phải của trình chỉnh sửa cho tôi thấy rằng tuyên bố này đã tạo ra một kết quả sân chơi.

00:04:27.000 --> 00:04:33.000
Tôi có thể sử dụng nút chuyển đổi kết quả nội tuyến để xem thêm chi tiết.

00:04:33.000 --> 00:04:43.000
Kết quả nội tuyến hiển thị chi tiết của phiên bản BirdProvider này cùng với hai thuộc tính của nó: mảng chim và vùng được cung cấp.

00:04:43.000 --> 00:04:58.000
Bây giờ trong Xcode 15, mỗi hàng cũng có một nhãn thông tin loại, hiển thị một bản tóm tắt ngắn về loại và tôi có thể sử dụng chú giải công cụ cho mỗi hàng để xem thêm chi tiết.

00:04:58.000 --> 00:05:10.000
Ví dụ, chú giải công cụ cho tôi biết rằng loại BirdProvider đến từ mô-đun ứng dụng của tôi và enum khu vực được xác định trong cấu trúc đó.

00:05:10.000 --> 00:05:17.000
Hãy mở rộng hàng mảng để xem thêm chi tiết về các loài chim.

00:05:17.000 --> 00:05:26.000
Lưu ý rằng khi tôi bắt đầu tương tác với chế độ xem kết quả nội tuyến, Xcode 15 sẽ làm nổi bật mã nguồn tạo ra kết quả.

00:05:26.000 --> 00:05:31.000
Trong trường hợp này, chế độ xem hiển thị giá trị được gán cho hằng số birdProvider.

00:05:31.000 --> 00:05:37.000
Điều này giúp việc hiểu các giá trị được hiển thị dễ dàng hơn nhiều.

00:05:37.000 --> 00:05:45.000
Chúng ta hãy xem xét kỹ hơn các phần tử mảng.

00:05:45.000 --> 00:05:54.000
Chúng tôi đã xem các bản tóm tắt đẹp cho các thuộc tính mảng khu vực và chim, nhưng theo mặc định, các hàng đại diện cho mỗi con chim chỉ cho chúng tôi biết về các chỉ mục mảng.

00:05:54.000 --> 00:06:00.000
Đó là bởi vì loại Chim tùy chỉnh không có mô tả được xác định.

00:06:00.000 --> 00:06:06.000
Chúng tôi có thể cải thiện điều này bằng cách làm cho loại Bird phù hợp với giao thức CustomStringConvertible.

00:06:06.000 --> 00:06:12.000
Tôi có thể thêm một tiện ích mở rộng ở đây trong một sân chơi hoặc trong thư mục Nguồn của nó.

00:06:12.000 --> 00:06:23.000
Cả hai tùy chọn này sẽ chỉ ảnh hưởng đến loại Chim trong phạm vi của sân chơi và chúng tôi sẽ không nhận được những mô tả mới đẹp ở những nơi khác dựa vào chúng, như trình gỡ lỗi.

00:06:23.000 --> 00:06:34.000
Đó là lý do tại sao tôi sẽ thêm phần mở rộng vào tệp xác định loại Bird.

00:06:34.000 --> 00:06:40.000
Với định nghĩa mô tả mới, mỗi hàng sẽ cho tôi thấy tên chung và khoa học của con chim.

00:06:40.000 --> 00:06:47.000
Hãy quay lại sân chơi và xem mô tả mới đang hoạt động.

00:06:47.000 --> 00:06:53.000
Trong chế độ tự động thực hiện sân chơi, sân chơi sẽ tự động thực hiện lại khi bạn mở lại.

00:06:53.000 --> 00:07:02.000
Hãy mở rộng hàng mảng chim một lần nữa để kiểm tra mô tả.

00:07:02.000 --> 00:07:04.000
Điều này tốt hơn nhiều.

00:07:04.000 --> 00:07:14.000
Bây giờ rõ ràng các hàng đại diện cho điều gì mà không cần mở rộng chúng, nhưng chúng ta hãy xem xét các thuộc tính khác của loại Chim.

00:07:14.000 --> 00:07:26.000
Tôi đã tìm thấy và chụp ảnh một số loài chim này, và bạn có thể thấy rằng một số trong số chúng đã có tài sản chụp ảnh, như loài chim chích Đại Tây Dương này.

00:07:26.000 --> 00:07:41.000
Khi tôi nhấp vào hàng của nó, ảnh sẽ được hiển thị trong giao diện người dùng dựa trên chế độ xem phân chia mới, cho phép tôi xem cấu trúc của đối tượng cùng với bản xem trước.

00:07:41.000 --> 00:07:47.000
Theo mặc định, không có bản xem trước nào như vậy cho loại Bird tùy chỉnh của tôi khi tôi nhấp vào hàng của nó.

00:07:47.000 --> 00:07:53.000
Thật tuyệt khi được xem bức ảnh ở đây, vì tôi không quen thuộc với tất cả các tên loài.

00:07:53.000 --> 00:07:59.000
Để đạt được điều đó, tôi có thể sử dụng giao thức CustomPlaygroundDisplayConvertible.

00:07:59.000 --> 00:08:18.000
Như tên của giao thức gợi ý, sự phù hợp này chỉ ảnh hưởng đến biểu diễn sân chơi, vì vậy lần này, tôi sẽ thêm tiện ích mở rộng vào thư mục Nguồn của sân chơi.

00:08:18.000 --> 00:08:29.000
Tôi sẽ nhập mô-đun ứng dụng để truy cập loại Bird và thêm một tiện ích mở rộng đơn giản trả về thuộc tính ảnh dưới dạng Mô tả sân chơi.

00:08:29.000 --> 00:08:34.000
Lưu ý rằng tôi đang truyền ảnh một cách rõ ràng cho Bất kỳ ai trong câu trả về.

00:08:34.000 --> 00:08:41.000
Nếu không có nó, trình biên dịch sẽ cảnh báo tôi rằng chúng ta đang mất một phần thông tin quan trọng về giá trị là một tùy chọn.

00:08:41.000 --> 00:08:53.000
Điều này là tốt trong trường hợp này, vì Xcode Playgrounds xử lý các tùy chọn bằng cách chỉ tạo mô tả tùy chỉnh cho các đối tượng không trả về số không trong thuộc tính playgroundDescription.

00:08:53.000 --> 00:09:00.000
Hãy quay lại sân chơi một lần nữa để kiểm tra các mô tả mới.

00:09:00.000 --> 00:09:18.000
Trong Xcode 15, playgroundDescription được trả về bởi các loại phù hợp với CustomPlaygroundDisplayConvertible sẽ được hiển thị trong chế độ xem phân chia dọc theo cấu trúc của đối tượng.

00:09:18.000 --> 00:09:24.000
Bây giờ, những con chim đã có một bức ảnh sẽ nhanh chóng hiển thị nó mà không cần mở rộng hàng.

00:09:24.000 --> 00:09:31.000
Điều này sẽ giúp việc làm việc với các bộ sưu tập lớn thuộc loại tùy chỉnh này dễ dàng hơn nhiều.

00:09:31.000 --> 00:09:35.000
Nhưng hôm nay, tôi muốn tập trung vào những con chim chưa có ảnh.

00:09:35.000 --> 00:09:48.000
Hãy đóng kết quả nội tuyến này và lọc ra tất cả những con chim đã có ảnh.

00:09:48.000 --> 00:09:52.000
Bạn có thể thấy rằng hai chú thích thanh bên đó trông hơi khác một chút.

00:09:52.000 --> 00:09:55.000
Đó là bởi vì có nhiều biểu thức trên dòng mới.

00:09:55.000 --> 00:10:04.000
Tôi có thể nhấp vào điều khiển mới để xem các bản tóm tắt quen thuộc cho mỗi biểu thức.

00:10:04.000 --> 00:10:10.000
Di chuột qua các nút chuyển đổi kết quả nội tuyến làm nổi bật phạm vi mã nguồn của chúng.

00:10:10.000 --> 00:10:25.000
Điều này cho thấy rõ ràng rằng mảng là kết quả được gán cho hằng số birdsToFind và true là giá trị mới nhất được tạo ra bởi việc đóng được chuyển đến hàm bộ lọc.

00:10:25.000 --> 00:10:33.000
Thanh bên kết quả cho tôi biết rằng số lượng tất cả các loài chim mà tôi chưa chụp ảnh vẫn còn hơn 1.800, điều này khá đáng sợ.

00:10:33.000 --> 00:10:41.000
Mặc dù đây cuối cùng có thể là mục tiêu, nhưng tôi muốn làm cho nó thấp hơn bằng cách tập trung vào một nhóm chim nhỏ hơn, ví dụ như cú.

00:10:41.000 --> 00:10:46.000
Tháng Sáu là một tháng tuyệt vời để chèo thuyền, nhưng đó là một chủ đề cho một hoặc hai phiên nữa.

00:10:46.000 --> 00:10:57.000
Hãy lọc ra những con chim từ các gia đình khác.

00:10:57.000 --> 00:11:02.000
Mảng hiện chỉ có năm phần tử, điều này đáng khích lệ hơn nhiều.

00:11:02.000 --> 00:11:07.000
Tôi muốn thử Chế độ xem danh sách kiểm tra tùy chỉnh của mình với nhóm chim nhỏ này.

00:11:07.000 --> 00:11:22.000
Để làm điều đó, tôi sẽ tạo một ví dụ ChecklistView và thêm từng con chim một.

00:11:22.000 --> 00:11:27.000
Hãy mở kết quả nội tuyến cho ChecklistView.

00:11:27.000 --> 00:11:33.000
Là một lớp con UIView, bây giờ nó cũng hiển thị một vài thuộc tính cùng với ảnh chụp nhanh.

00:11:33.000 --> 00:11:45.000
Tôi có thể chuyển sang chế độ lịch sử Giá trị, hiện cũng sử dụng giao diện người dùng dựa trên chế độ xem phân chia mới.

00:11:45.000 --> 00:11:58.000
Điều này cho phép tôi xem ChecklistView trông như thế nào trong mỗi lần lặp vòng lặp.

00:11:58.000 --> 00:12:06.000
Nó thực sự đã giúp tôi tìm ra vấn đề với tầm nhìn của mình, điều này nói không chính xác "chim" trong tiêu đề chỉ cho một con chim.

00:12:06.000 --> 00:12:16.000
Tôi có thể khắc phục điều này bằng cách điều chỉnh các chuỗi được xác định trong Danh mục chuỗi mới.

00:12:16.000 --> 00:12:20.000
Hàng đầu tiên dường như là hàng được sử dụng trong tiêu đề của Chế độ xem danh sách kiểm tra của tôi.

00:12:20.000 --> 00:12:28.000
Tôi sẽ hiển thị menu ngữ cảnh và chọn Vary By Plural.

00:12:28.000 --> 00:12:33.000
Khi tôi làm điều đó, các hàng bị ảnh hưởng sẽ thay đổi trạng thái của chúng thành "Cần xem xét".

00:12:33.000 --> 00:12:41.000
Tôi sẽ điều chỉnh dạng số ít của chuỗi này.

00:12:41.000 --> 00:12:48.000
Để tìm hiểu thêm về Danh mục Chuỗi mới, hãy đảm bảo kiểm tra phiên "Khám phá Danh mục Chuỗi".

00:12:48.000 --> 00:13:02.000
Hãy quay lại sân chơi và xem danh sách kiểm tra bây giờ trông như thế nào với sự thay đổi này.

00:13:02.000 --> 00:13:13.000
Các tiêu đề trông chính xác trong mỗi lần lặp vòng lặp.

00:13:13.000 --> 00:13:19.000
Tôi có thể đóng kết quả nội tuyến này ngay bây giờ.

00:13:19.000 --> 00:13:21.000
Tôi nghĩ ChecklistView của tôi đã sẵn sàng để sử dụng.

00:13:21.000 --> 00:13:30.000
Tôi sẽ nhanh chóng mang mã mà chúng tôi đã sử dụng để thu hẹp danh sách các loài chim vào dự án của tôi.

00:13:30.000 --> 00:13:39.000
Tôi sẽ sao chép ba dòng này vào thuộc tính birdsToShow trong Chế độ xem danh sách kiểm tra của tôi.

00:13:39.000 --> 00:13:57.000
Tôi cũng sẽ thêm một tuyên bố trả về với mảng chim mới, nhỏ hơn nhiều.

00:13:57.000 --> 00:14:02.000
Trước khi tôi chạy lại dự án của mình, tôi muốn tạo mẫu thêm một tính năng nữa.

00:14:02.000 --> 00:14:06.000
Bạn có thể thấy rằng mỗi hàng trong Chế độ xem danh sách kiểm tra tùy chỉnh của tôi đều có một chỉ báo tiết lộ.

00:14:06.000 --> 00:14:12.000
Khi tôi chọn một hàng trong danh sách, nó sẽ mở ra một chế độ xem bản đồ đơn giản.

00:14:12.000 --> 00:14:20.000
Nó chưa hữu ích lắm, nhưng tôi muốn lấy dữ liệu về lần nhìn thấy con chim được chọn gần đây nhất và hiển thị nó trên bản đồ.

00:14:20.000 --> 00:14:27.000
Để đạt được điều đó, tôi sẽ phải điều chỉnh chức năng nhìn thấy ToShow (cho chim:) trong Chế độ xem danh sách kiểm tra của mình.

00:14:27.000 --> 00:14:32.000
Để giúp với điều đó, tôi đã thêm một phụ thuộc vào dự án của mình.

00:14:32.000 --> 00:14:41.000
Gói BirdSightings giúp dễ dàng lấy dữ liệu từ một trong những trang web khoa học công dân, nơi mọi người báo cáo việc nhìn thấy họ.

00:14:41.000 --> 00:14:46.000
Tôi chưa từng sử dụng gói đó trước đây, vì vậy tôi chưa quen thuộc với API của nó.

00:14:46.000 --> 00:14:57.000
May mắn thay, gói này bao gồm tài liệu dưới dạng một sân chơi cho thấy một vài ví dụ.

00:14:57.000 --> 00:15:04.000
Đây là một cách tuyệt vời để cho phép khách hàng của gói của bạn dùng thử API được cung cấp.

00:15:04.000 --> 00:15:13.000
Có vẻ như chúng ta sẽ cần cung cấp hai đối số cho hàm fetchSightings: mã của con chim cần tìm và vị trí để nhìn xung quanh.

00:15:13.000 --> 00:15:22.000
Tôi có thể thực hiện sân chơi này để tìm hiểu thêm về kết quả mong đợi.

00:15:22.000 --> 00:15:37.000
Hãy quay lại sân chơi của chúng ta và thử sử dụng nó.

00:15:37.000 --> 00:15:44.000
Tôi có thể đóng trình điều hướng để cho tôi thêm chỗ trong khu vực biên tập.

00:15:44.000 --> 00:15:49.000
Trước khi chúng ta gọi hàm, tôi cần thêm hai câu lệnh nhập.

00:15:49.000 --> 00:16:01.000
Tôi sẽ nhập khung CoreLocation để có thể làm việc với tọa độ và khung BirdSighting để sử dụng API của nó.

00:16:01.000 --> 00:16:14.000
Đối với các đối số hàm, chúng ta có thể chỉ cần bắt đầu với con chim đầu tiên từ danh sách.

00:16:14.000 --> 00:16:18.000
Có vẻ như chúng ta sẽ tìm kiếm con cú tai ngắn.

00:16:18.000 --> 00:16:21.000
Lưu ý rằng tôi đã sử dụng lựcunwrapping ở đây.

00:16:21.000 --> 00:16:31.000
Tôi không phải lo lắng nhiều về việc xử lý lỗi trong môi trường Sân chơi, nhưng điều quan trọng là phải ghi nhớ điều đó khi đưa mã vào dự án của bạn.

00:16:31.000 --> 00:16:44.000
Đối với vị trí, tôi có thể sẽ sử dụng vị trí hiện tại của mình hầu hết thời gian, nhưng khả năng cung cấp tọa độ cụ thể sẽ rất tuyệt vời cho hai điều: kiểm tra mã của tôi và lên kế hoạch cho tất cả các chuyến đi đường bộ.

00:16:44.000 --> 00:16:53.000
Hãy thử xem chúng ta có thể tìm thấy gì xung quanh Apple Park.

00:16:53.000 --> 00:17:02.000
Trước khi tôi giới thiệu một cuộc gọi mạng, tôi sẽ chuyển sang chế độ thực thi sân chơi thủ công để đảm bảo rằng tôi có thể tránh các cuộc gọi không cần thiết.

00:17:02.000 --> 00:17:08.000
Những yêu cầu như vậy có thể mất một lúc và tôi muốn lặp lại tính năng mới của mình càng nhanh càng tốt.

00:17:08.000 --> 00:17:20.000
Để làm điều đó, tôi sẽ một lần nữa đưa menu lên thanh dưới cùng và chọn Chạy thủ công.

00:17:20.000 --> 00:17:25.000
Bây giờ, tôi có toàn quyền kiểm soát các phần của mã cần được thực thi.

00:17:25.000 --> 00:17:33.000
Hãy thêm mã tìm nạp.

00:17:33.000 --> 00:17:42.000
Điều khiển trong máng xối trình chỉnh sửa nguồn cho tôi thấy rằng việc thực hiện hai dòng đó sẽ không thực thi lại tất cả các dòng mà chúng tôi đã thực hiện ở trên.

00:17:42.000 --> 00:17:49.000
Hãy thực hiện các dòng mới và xem liệu chúng ta có nhận được bất kỳ dữ liệu nào không.

00:17:49.000 --> 00:17:52.000
May mắn thay, có một số lần nhìn thấy.

00:17:52.000 --> 00:18:02.000
Chúng ta hãy xem cái đầu tiên, cái nào nên là cái gần đây nhất.

00:18:02.000 --> 00:18:07.000
Có vẻ như những con cú tai ngắn được nhìn thấy gần đây nhất tại Khu bảo tồn Changmen Cliffs.

00:18:07.000 --> 00:18:17.000
Tôi chưa quen thuộc với tất cả các điểm nóng ngắm chim trong khu vực, vì vậy sẽ rất tuyệt khi xem dữ liệu về việc nhìn thấy trong SightingMapView của tôi.

00:18:17.000 --> 00:18:25.000
Hãy khởi tạo nó với dữ liệu tìm nạp.

00:18:25.000 --> 00:18:35.000
Đối với các yếu tố giao diện người dùng phức tạp như chế độ xem bản đồ, chúng ta có thể sử dụng chế độ xem trực tiếp của sân chơi để xem bản xem trước lớn, tương tác đầy đủ.

00:18:35.000 --> 00:18:44.000
Để sử dụng nó, trước tiên tôi cần nhập khung PlaygroundSupport.

00:18:44.000 --> 00:18:56.000
Bây giờ, tôi đã sẵn sàng để thiết lập chế độ xem trực tiếp và thực hiện sân chơi.

00:18:56.000 --> 00:19:08.000
Tôi đã sửa đổi phần đã được thực thi của sân chơi bằng cách thêm câu lệnh nhập ở đầu tệp, vì vậy điều khiển trong máng xối trình chỉnh sửa nguồn cho tôi biết rằng nó sẽ cần phải thực thi lại toàn bộ tệp.

00:19:08.000 --> 00:19:23.000
Tôi sẽ mất kết quả từ lần thực hiện cuối cùng, nhưng đó không phải là vấn đề trong trường hợp này, vì vậy tôi sẽ tiếp tục và thực hiện sân chơi.

00:19:23.000 --> 00:19:27.000
Tôi không nhớ bất kỳ hòn đảo nào quá gần Apple Park.

00:19:27.000 --> 00:19:44.000
Vì chế độ xem trực tiếp hoàn toàn tương tác, tôi có thể thu nhỏ một chút giống như trong trình mô phỏng iPhone để xem chúng ta đang ở đâu.

00:19:44.000 --> 00:19:47.000
Có vẻ như chúng ta đang ở quá xa về phía đông.

00:19:47.000 --> 00:19:58.000
Hãy đóng chế độ xem trực tiếp trong Tùy chọn Trình chỉnh sửa và thử xem vấn đề được giới thiệu ở đâu.

00:19:58.000 --> 00:20:05.000
SightingMapView của tôi đã được khởi tạo với hằng số MostRecentSighting, vì vậy hãy kiểm tra giá trị của nó.

00:20:05.000 --> 00:20:16.000
Thay vì mở kết quả nội tuyến, tôi có thể xem nhanh giá trị bằng cách nhấp vào biểu tượng mắt trong thanh bên.

00:20:16.000 --> 00:20:23.000
Trong Xcode 15, chúng tôi đã cải thiện kết quả sân chơi cho một số loại MapKit và CoreLocation.

00:20:23.000 --> 00:20:34.000
Sân chơi hiện có thể hiển thị bản xem trước cho CLLocationCoordinate2D, vì vậy chúng ta hãy xem tài sản vị trí.

00:20:34.000 --> 00:20:40.000
Điều này dường như đang chỉ vào cùng một vị trí, vì vậy điều này dường như không phải do SightingMapView của tôi gây ra.

00:20:40.000 --> 00:20:50.000
Chúng tôi đã nhận sai vị trí từ gói BirdSightings, vì vậy nó có thể được gây ra bởi một vấn đề trong gói hàng, hoặc tôi đã vượt qua một vị trí sai để bắt đầu.

00:20:50.000 --> 00:20:57.000
Hãy xác minh cái sau.

00:20:57.000 --> 00:21:07.000
Điều này dường như cũng không gần với Apple Park.

00:21:07.000 --> 00:21:13.000
Vì chúng ta ở quá xa về phía đông, tôi nghĩ đây có thể chỉ là vấn đề trộn lẫn phía tây với phía đông.

00:21:13.000 --> 00:21:26.000
Hãy cố gắng khắc phục điều này bằng cách thêm dấu trừ trước kinh độ và thực hiện lại sân chơi.

00:21:26.000 --> 00:21:37.000
Bây giờ đây chắc chắn là Apple Park.

00:21:37.000 --> 00:21:52.000
Hãy thực hiện phần còn lại của sân chơi với vị trí được cập nhật và mở lại chế độ xem trực tiếp trong Tùy chọn Trình chỉnh sửa.

00:21:52.000 --> 00:21:58.000
Điều đó giống nó hơn.

00:21:58.000 --> 00:22:03.000
Bây giờ tôi biết rằng Coyote Hills có thể là nơi tốt nhất để chụp ảnh các loài mới.

00:22:03.000 --> 00:22:12.000
Hãy nhanh chóng đưa mã tìm nạp vào ChecklistView của tôi.

00:22:12.000 --> 00:22:21.000
Tôi sẽ sao chép ba dòng này vào chức năng sightingsToShow.

00:22:21.000 --> 00:22:41.000
Thay vì luôn sử dụng vị trí Apple Park được mã hóa cứng ở đây, tôi sẽ thay thế nó bằng Vị trí hiện tại cuối cùng mà tôi nhận được từ CLLocationManager.

00:22:41.000 --> 00:22:49.000
Tôi cũng sẽ thêm tuyên bố hoàn trả với mostRecentSighting mới.

00:22:49.000 --> 00:23:00.000
Đã đến lúc cuối cùng cũng chạy dự án với những thay đổi của chúng tôi.

00:23:00.000 --> 00:23:10.000
Danh sách kiểm tra bây giờ trông thực tế hơn nhiều khi chúng tôi tập trung vào một nhóm nhỏ các loài chim.

00:23:10.000 --> 00:23:16.000
Hãy xem điều gì sẽ xảy ra khi tôi nhấp vào một hàng ngay bây giờ.

00:23:16.000 --> 00:23:17.000
Điều đó thật tuyệt.

00:23:17.000 --> 00:23:22.000
Ứng dụng của tôi bây giờ có thể hiển thị cho tôi lần nhìn thấy gần đây nhất đối với con chim được chọn.

00:23:22.000 --> 00:23:25.000
Tất nhiên vẫn còn rất nhiều chỗ để cải thiện.

00:23:25.000 --> 00:23:34.000
Ví dụ, tôi nên hiển thị một chỉ báo tiến độ trong khi các lần nhìn thấy được tìm nạp trong nền, nhưng đây là một điểm khởi đầu tuyệt vời.

00:23:34.000 --> 00:23:41.000
Ứng dụng này sẽ giúp tôi rất nhiều, và Xcode Playgrounds đã làm cho những cải tiến này dễ thực hiện hơn rất nhiều.

00:23:41.000 --> 00:23:47.000
Trong phiên này, chúng tôi đã sử dụng Xcode Playgrounds để nhanh chóng tạo mẫu các tính năng mới của một dự án.

00:23:47.000 --> 00:23:57.000
Chúng tôi đã sử dụng các giao thức CustomStringConvertible và CustomPlaygroundDisplayConvertible để tùy chỉnh các biểu diễn của các loại tùy chỉnh của chúng tôi.

00:23:57.000 --> 00:24:02.000
Chúng tôi đã thấy cách điều chỉnh chế độ thực hiện sân chơi có thể tăng tốc quy trình làm việc của bạn.

00:24:02.000 --> 00:24:10.000
Sử dụng chế độ Lịch sử Giá trị cho phép chúng tôi nhanh chóng xem các lớp của chúng tôi phản ứng như thế nào với nhiều đầu vào.

00:24:10.000 --> 00:24:17.000
Cuối cùng, chúng tôi đã sử dụng chế độ xem trực tiếp của sân chơi để xem xét kỹ hơn các yếu tố giao diện người dùng phức tạp.

00:24:17.000 --> 23:59:59.000
Cảm ơn bạn đã xem.

