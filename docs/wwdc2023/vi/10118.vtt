WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
Razvan: Xin chào!

00:00:11.000 --> 00:00:21.000
Tôi là Razvan, một kỹ sư trong nhóm Trải nghiệm Nhà phát triển WebKit và tôi ở đây để cho bạn biết về một số tính năng và cải tiến mới mà chúng tôi đã thực hiện cho Web Inspector trong năm nay.

00:00:21.000 --> 00:00:34.000
Web Inspector là một phần của Safari trên macOS và nó cung cấp một bộ công cụ mạnh mẽ cho phép bạn kiểm tra tất cả các tài nguyên và hoạt động của trang web, ứng dụng web, tiện ích mở rộng web hoặc ứng dụng web màn hình chính.

00:00:34.000 --> 00:00:55.000
Tôi rất vui được giới thiệu cho bạn một số tính năng và cải tiến mới mà chúng tôi đã thêm vào kể từ năm ngoái, như các công cụ kiểm tra kiểu chữ mới, một cách để mô phỏng sở thích của người dùng, huy hiệu mới cho các yếu tố với trình nghe sự kiện và vùng chứa cuộn và chúng tôi đã cải thiện trải nghiệm gỡ lỗi JavaScript với các cải tiến cho

00:00:55.000 --> 00:00:59.000
Nếu bạn chưa từng sử dụng Web Inspector trước đây, bạn sẽ phải bật nó.

00:00:59.000 --> 00:01:04.000
Mở cửa sổ Cài đặt của Safari và chuyển sang tab Nâng cao.

00:01:04.000 --> 00:01:09.000
Ở phía dưới, bạn sẽ tìm thấy cài đặt thành "Hiển thị các tính năng cho các nhà phát triển web."

00:01:09.000 --> 00:01:12.000
Nhấp vào hộp kiểm để kích hoạt điều này.

00:01:12.000 --> 00:01:16.000
Menu Phát triển hiện có sẵn trong thanh menu.

00:01:16.000 --> 00:01:28.000
Bạn có thể mở Web Inspector bằng cách sử dụng mục menu được gọi là Show Web Inspector hoặc bằng cách nhấn phím tắt Option+Command+I trên bất kỳ trang web nào.

00:01:28.000 --> 00:01:45.000
Năm nay, chúng tôi đã thực hiện nhiều cải tiến cho tất cả các tính năng của nhà phát triển trong Safari, bao gồm cách sắp xếp hợp lý để ghép nối và kiểm tra nội dung web trên thiết bị, cách nhanh chóng để mở trang web trong Trình mô phỏng, Chế độ thiết kế đáp ứng được làm mới và nhiều cách khác.

00:01:45.000 --> 00:01:52.000
Để tìm hiểu thêm, hãy xem phiên này có tiêu đề "Khám phá lại các tính năng của nhà phát triển Safari" từ WWDC năm nay.

00:01:52.000 --> 00:01:58.000
Bây giờ Trình kiểm tra Web đã được bật, hãy bắt đầu bằng cách xem xét các công cụ mới để kiểm tra kiểu chữ.

00:01:58.000 --> 00:02:06.000
Các nhà phát triển web sử dụng phông chữ tùy chỉnh để tạo ra nội dung đẹp với loại vừa dễ đọc vừa làm cho nó nổi bật.

00:02:06.000 --> 00:02:10.000
Nhưng việc có được kiểu chữ trên web vừa phải không phải lúc nào cũng dễ dàng.

00:02:10.000 --> 00:02:14.000
Đầu tiên, tệp phông chữ phù hợp cần được tải.

00:02:14.000 --> 00:02:19.000
Nó phải ở định dạng được trình duyệt hỗ trợ và có các tính năng phù hợp.

00:02:19.000 --> 00:02:25.000
Và nó nên bao gồm các ký tự phù hợp cho các ký tự của ngôn ngữ viết mà nó sẽ đại diện.

00:02:25.000 --> 00:02:31.000
Sau đó, có nhiều thuộc tính CSS ảnh hưởng đến cách hiển thị phông chữ trên màn hình.

00:02:31.000 --> 00:02:39.000
Và hầu hết chúng đều có thể kế thừa thông qua thác, đôi khi dẫn đến sự nhầm lẫn, như, "Mặt phông chữ nào thực sự được sử dụng?"

00:02:39.000 --> 00:02:44.000
Hoặc "Tại sao điều này lại táo bạo?" Hay "Phong cách này có thực sự in nghiêng không?"

00:02:44.000 --> 00:02:49.000
Web Inspector có thể giúp đỡ với một loạt các công cụ kiểm tra kiểu chữ.

00:02:49.000 --> 00:02:55.000
Bạn có thể tìm thấy chúng trong thanh bên Chi tiết của tab Elements, trong bảng Phông chữ.

00:02:55.000 --> 00:03:04.000
Nó hiển thị các thuộc tính và khả năng của phông chữ được sử dụng trên phần tử đã chọn, chẳng hạn như tên của phông chữ chính được sử dụng.

00:03:04.000 --> 00:03:09.000
Bạn có thể tham khảo điều này để nhanh chóng kiểm tra xem phông chữ bạn mong đợi có thực sự được sử dụng hay không.

00:03:09.000 --> 00:03:13.000
Hãy nhớ rằng điều này chỉ xác định phông chữ chính.

00:03:13.000 --> 00:03:22.000
Nếu nút được chọn bao gồm các ký tự mà phông chữ chính không có glyphs, phông chữ dự phòng sẽ được sử dụng cho những ký tự đó.

00:03:22.000 --> 00:03:33.000
Tiếp theo, bảng Phông chữ hiển thị bản tóm tắt các thuộc tính phông chữ cơ bản, như kích thước phông chữ, kiểu dáng, trọng lượng và độ co giãn.

00:03:33.000 --> 00:03:38.000
Ngoài ra còn có một phần hiển thị các thuộc tính tính năng phông chữ được hỗ trợ và các giá trị đã sử dụng của chúng.

00:03:38.000 --> 00:03:53.000
Những thứ này chuyển đổi các khía cạnh đặc biệt của một kiểu chữ như chữ ghép, viết hoa nhỏ thay vì ký tự viết thường, kiểu số đặc biệt và nhiều kiểu khác, tùy thuộc vào những gì phông chữ hỗ trợ.

00:03:53.000 --> 00:03:59.000
Mới trong năm nay, bảng Phông chữ hiển thị các cảnh báo cho các kiểu in đậm hoặc xiên tổng hợp.

00:03:59.000 --> 00:04:04.000
Phong cách tổng hợp là gì? Hãy lấy chữ in nghiêng làm ví dụ.

00:04:04.000 --> 00:04:11.000
Các kiểu in nghiêng thường được cung cấp trong các tệp phông chữ của riêng chúng, tách biệt với các kiểu cho các kiểu thẳng đứng thông thường.

00:04:11.000 --> 00:04:18.000
Khi thiếu một kiểu in nghiêng phù hợp, WebKit sẽ tạo ra một biểu diễn nhân tạo cho điều đó.

00:04:18.000 --> 00:04:26.000
Nó chạy một thuật toán trên kiểu phông chữ thẳng đứng thông thường và làm lệch các glyph riêng lẻ để tạo ra một kiểu xiên.

00:04:26.000 --> 00:04:30.000
Cái này được gọi là xiên tổng hợp.

00:04:30.000 --> 00:04:34.000
Các nhà thiết kế phông chữ chú ý rất nhiều khi tạo ra các kiểu in nghiêng.

00:04:34.000 --> 00:04:44.000
Thông thường, đây không phải là phiên bản nghiêng của phong cách thẳng đứng, mà thay vào đó chúng là chữ thảo, được thiết kế đặc biệt để truyền tải một thẩm mỹ cụ thể.

00:04:44.000 --> 00:04:51.000
Một cái gì đó tương tự xảy ra đối với in đậm tổng hợp, trong đó nét vẽ của các glyphs được làm dày hơn một cách nhân tạo.

00:04:51.000 --> 00:04:54.000
Hãy nhớ rằng không phải tất cả các phông chữ đều hỗ trợ điều này.

00:04:54.000 --> 00:05:00.000
Trình kiểm tra web hiện hiển thị cảnh báo khi sử dụng in đậm hoặc xiên tổng hợp.

00:05:00.000 --> 00:05:07.000
Nó hiển thị bên cạnh trọng lượng hoặc kiểu tổng hợp trong phần thuộc tính cơ bản của bảng Phông chữ.

00:05:07.000 --> 00:05:12.000
Cảnh báo này có thể là một gợi ý rằng tệp phông chữ dự kiến không được tải.

00:05:12.000 --> 00:05:19.000
Nhưng đôi khi, có thể tệp phông chữ không hỗ trợ các giá trị chính xác mà bạn yêu cầu.

00:05:19.000 --> 00:05:22.000
Đó là nơi mà các phông chữ biến đổi có thể giúp ích.

00:05:22.000 --> 00:05:24.000
Phông chữ biến đổi là gì?

00:05:24.000 --> 00:05:38.000
Nói một cách đơn giản, đó là một định dạng phông chữ có thể bao gồm, trong một tệp duy nhất, tất cả thông tin cần thiết để tạo ra nhiều biến thể kiểu cho một phông chữ, chẳng hạn như trọng lượng, chiều rộng, độ nghiêng và các biến thể khác.

00:05:38.000 --> 00:05:46.000
Và đối với mỗi kiểu được hỗ trợ, các phông chữ biến đổi cung cấp một phổ giá trị so với chỉ một vài giá trị rời rạc trong các tệp phông chữ tĩnh.

00:05:46.000 --> 00:05:53.000
Điều này giúp bạn linh hoạt hơn rất nhiều để chọn phong cách chính xác phù hợp với nội dung của bạn.

00:05:53.000 --> 00:05:56.000
Phông chữ biến đổi thậm chí còn có khả năng hơn.

00:05:56.000 --> 00:06:08.000
Một nhà thiết kế phông chữ có thể cấu hình hầu hết mọi khía cạnh của phông chữ, từ độ dày của nét vẽ, đường cong của glyphs, chiều rộng của các ký tự và nhiều thứ khác.

00:06:08.000 --> 00:06:12.000
Các khả năng thực sự rất lớn.

00:06:12.000 --> 00:06:18.000
Tất cả các khía cạnh của phông chữ biến đổi có thể được cấu hình được thể hiện dưới dạng trục biến thể.

00:06:18.000 --> 00:06:26.000
Để biết cái nào có sẵn, bạn phải đọc tài liệu của phông chữ hoặc sử dụng một công cụ đặc biệt tiết lộ thông tin này.

00:06:26.000 --> 00:06:28.000
Thanh tra Web có thể giúp đỡ ở đây.

00:06:28.000 --> 00:06:37.000
Khi bạn kiểm tra một phần tử sử dụng phông chữ biến đổi, bảng Phông chữ sẽ hiển thị cho bạn danh sách các trục biến thể được hỗ trợ.

00:06:37.000 --> 00:06:59.000
Đối với mỗi cái, nó hiển thị thẻ trục của nó - một mã định danh bốn ký tự - một nhãn trục tùy chọn, các giá trị tối thiểu và tối đa được hỗ trợ, cũng như giá trị hiện tại hoặc giá trị mặc định nếu một giá trị không được chỉ định trong CSS.

00:06:59.000 --> 00:07:08.000
Năm nay, chúng tôi đã thêm các điều khiển tương tác để chỉnh sửa các giá trị của trục biến thể và xem kết quả trực tiếp trên trang đã kiểm tra.

00:07:08.000 --> 00:07:12.000
Điều này cung cấp cho bạn một cách tuyệt vời để điều chỉnh các kiểu phông chữ cho đến khi chúng vừa phải.

00:07:12.000 --> 00:07:15.000
Để tôi chỉ cho bạn.

00:07:15.000 --> 00:07:19.000
Đây là một trang web tôi đang xây dựng cho một blog nhiếp ảnh du lịch.

00:07:19.000 --> 00:07:27.000
Tôi có bố cục đúng như tôi muốn, với một thư viện ảnh và điều hướng theo nhãn, nhưng tôi vẫn không chắc chắn về giao diện của tiêu đề.

00:07:27.000 --> 00:07:34.000
Tôi sẽ nhấp chuột phải để kiểm tra phần tử tiêu đề.

00:07:34.000 --> 00:07:39.000
Trong bảng Phông chữ, tôi có thể thấy điều này đang sử dụng một phông chữ thay đổi.

00:07:39.000 --> 00:07:45.000
Tôi có thể nói vì tôi có những điều khiển này cho các trục biến thể có sẵn mà tôi có thể chơi xung quanh.

00:07:45.000 --> 00:07:50.000
Ví dụ, tôi có thể kéo thanh trượt cho trục Trọng lượng.

00:07:50.000 --> 00:07:58.000
Điều này ngay lập tức thay đổi trọng lượng phông chữ của tiêu đề trực tiếp trên trang đã được kiểm tra.

00:07:58.000 --> 00:08:05.000
Chú ý cách thuộc tính trọng lượng phông chữ CSS tương ứng được ghi vào bảng Kiểu.

00:08:05.000 --> 00:08:10.000
Một phông chữ tĩnh sẽ chỉ có một vài mặt phông chữ cho trọng lượng theo gia số 100.

00:08:10.000 --> 00:08:15.000
Nhưng với phông chữ biến đổi, tôi có thể chọn bất kỳ giá trị nào trong phạm vi của trục biến đổi.

00:08:15.000 --> 00:08:24.000
Chúng ta cũng hãy thử trục biến thiên cho Chiều rộng để xem nó trông rộng hơn hoặc hẹp hơn như thế nào.

00:08:24.000 --> 00:08:35.000
Tôi cũng có thể nhập vào trường nhập giá trị trục hoặc tôi có thể giữ các phím ArrowUp hoặc ArrowDown để thay đổi giá trị theo gia số chính xác.

00:08:35.000 --> 00:08:38.000
Tôi thích phiên bản hơi cô đọng này.

00:08:38.000 --> 00:08:43.000
Tôi muốn nó táo bạo hơn một chút, nhưng tôi muốn nó giữ chiều rộng này.

00:08:43.000 --> 00:08:48.000
Phông chữ biến đổi này cũng cung cấp một trục biến đổi tùy chỉnh để thay đổi Cấp độ của phông chữ.

00:08:48.000 --> 00:08:59.000
Khi tôi kéo thanh trượt cho điều này, nhận thấy rằng các ký tự riêng lẻ trở nên dày hơn tại chỗ mà không thay đổi vị trí như họ đã làm khi tôi thay đổi trục Trọng lượng.

00:08:59.000 --> 00:09:02.000
Cái này trông rất đẹp.

00:09:02.000 --> 00:09:13.000
Để tích hợp những thay đổi này trở lại dự án của mình, tôi có thể sao chép các thuộc tính CSS mới từ bảng Kiểu hoặc từ bảng Thay đổi.

00:09:13.000 --> 00:09:18.000
Chúng tôi đã xem cách kiểm tra kiểu chữ và cách điều chỉnh kiểu phông chữ với các phông chữ thay đổi.

00:09:18.000 --> 00:09:28.000
Bây giờ, hãy chuyển sang một tính năng mới khác trong Trình kiểm tra web cho phép bạn mô phỏng tùy chọn của người dùng để bạn có thể đảm bảo nội dung bạn đang xây dựng phù hợp với nhu cầu của người dùng.

00:09:28.000 --> 00:09:52.000
Tất cả các sản phẩm của Apple đều cung cấp nhiều cài đặt khác nhau cho phép mọi người định cấu hình thiết bị của họ để thích ứng với nhu cầu và sở thích của họ, như cài đặt Trợ năng trên macOS điều khiển những thứ như trình đọc màn hình tích hợp, VoiceOver hoặc tùy chọn Hiển thị, điều khiển giảm chuyển động, tăng độ tương phản màu, bộ lọc màu

00:09:52.000 --> 00:09:56.000
Một trong những điều phổ biến nhất mà mọi người làm trên thiết bị của họ là duyệt web.

00:09:56.000 --> 00:10:01.000
Vì vậy, thật hợp lý khi xây dựng các trang web và ứng dụng web cố gắng chào đón mọi người.

00:10:01.000 --> 00:10:09.000
Để làm điều đó, đôi khi bạn cần trải nghiệm web giống như cách những người khác làm khi họ đặt tùy chọn người dùng.

00:10:09.000 --> 00:10:17.000
Để kiểm tra trang web của bạn với, ví dụ, tùy chọn giảm chuyển động, bạn có thể vào Cài đặt Trợ năng trên macOS và đặt nó ở đó.

00:10:17.000 --> 00:10:23.000
Nhưng điều đó sẽ ảnh hưởng đến toàn bộ hệ thống, không chỉ Safari và trang web của bạn.

00:10:23.000 --> 00:10:28.000
Những gì bạn thường muốn là đặt nó chỉ cho trang bạn đang kiểm tra.

00:10:28.000 --> 00:10:35.000
Để giúp bạn điều đó, chúng tôi đã giới thiệu một công cụ mới trong Trình kiểm tra web để mô phỏng sở thích của người dùng.

00:10:35.000 --> 00:10:40.000
Nhấp vào biểu tượng mới trong tab Elements để hiển thị cửa sổ bật lên Ghi đè tùy chọn của người dùng.

00:10:40.000 --> 00:10:48.000
Tại đây, bạn sẽ tìm thấy một bộ chuyển đổi để ghi đè tùy chọn của người dùng chỉ cho trang được kiểm tra trong khi Trình kiểm tra web đang mở.

00:10:48.000 --> 00:10:57.000
Các tùy chọn này ánh xạ đến các tính năng phương tiện CSS mà bạn có thể sử dụng để điều chỉnh phong cách và hành vi của trang web của mình.

00:10:57.000 --> 00:11:04.000
Ví dụ, ưu tiên cho bảng màu ánh xạ đến tính năng phương tiện ưu tiên-màu-sơ đồ trong CSS.

00:11:04.000 --> 00:11:11.000
Đây là cách sử dụng nó: bạn có thể đặt kiểu của một phần tử cho bảng màu sáng mặc định.

00:11:11.000 --> 00:11:19.000
Sau đó, sử dụng tính năng phương tiện prefers-color-scheme để kiểm tra xem bảng màu tối có được ưu tiên hay không và cập nhật các kiểu.

00:11:19.000 --> 00:11:24.000
Kiểm tra cách trang thích ứng bằng cách sử dụng cửa sổ bật lên Ghi đè tùy chọn của người dùng.

00:11:24.000 --> 00:11:29.000
Trong phần Giao diện, ghi đè tùy chọn bảng màu thành Tối.

00:11:29.000 --> 00:11:34.000
Biểu tượng thay đổi màu sắc để cho biết ghi đè được áp dụng.

00:11:34.000 --> 00:11:41.000
Các kiểu cho bảng màu tối sẽ được áp dụng trong khi ghi đè đang hoạt động và Trình kiểm tra web đang mở.

00:11:41.000 --> 00:11:45.000
Điều khiển này cho bảng màu từng là một nút độc lập.

00:11:45.000 --> 00:11:51.000
Bây giờ nó tham gia các điều khiển khác để ghi đè tùy chọn trong cửa sổ bật lên.

00:11:51.000 --> 00:11:56.000
Tiếp theo, tôi sẽ chỉ cho bạn cách ghi đè ưu tiên cho chuyển động giảm.

00:11:56.000 --> 00:12:00.000
Phần tiếp theo này hiển thị một hình ảnh động với rất nhiều chuyển động.

00:12:00.000 --> 00:12:05.000
Nếu bạn nhạy cảm với điều này, bạn có thể muốn bỏ qua ba phút tiếp theo của video này.

00:12:05.000 --> 00:12:14.000
Quay lại trang của tôi, những hình ảnh động này chạy khi tôi nhấp vào một bức ảnh để phóng to nó có lẽ hơi quá.

00:12:14.000 --> 00:12:21.000
Một số người có thể bị mất phương hướng bởi hình ảnh động với chuyển động nhanh và đột ngột, đặc biệt là khi nó xảy ra trên trục z.

00:12:21.000 --> 00:12:25.000
Nó có thể gây khó chịu, như buồn nôn hoặc đau đầu.

00:12:25.000 --> 00:12:29.000
Đây chắc chắn không phải là một trải nghiệm đáng hoan nghênh đối với họ.

00:12:29.000 --> 00:12:35.000
Mọi người có thể đặt tùy chọn giảm chuyển động trên thiết bị của họ để báo hiệu rằng họ muốn các trang web và ứng dụng web thích ứng.

00:12:35.000 --> 00:12:38.000
Các nhà phát triển web của chúng tôi nên tôn trọng điều đó.

00:12:38.000 --> 00:12:43.000
Đây là nơi tính năng truyền thông CSS thích-giảm-chuyển động hữu ích.

00:12:43.000 --> 00:12:47.000
Nếu hình ảnh động chỉ để trang trí, bạn có thể xóa nó.

00:12:47.000 --> 00:12:52.000
Nhưng hãy nhớ rằng, một số hình ảnh động rất hữu ích để truyền đạt ý nghĩa trong một giao diện.

00:12:52.000 --> 00:12:55.000
Loại bỏ chúng có thể ảnh hưởng đến khả năng sử dụng.

00:12:55.000 --> 00:13:03.000
Một hình ảnh động mờ dần và tinh tế hơn vẫn có thể hoạt động tốt để truyền đạt sự thay đổi và cũng đáp ứng nhu cầu của mọi người.

00:13:03.000 --> 00:13:05.000
Hãy thử thay đổi đó trên trang web của tôi.

00:13:05.000 --> 00:13:14.000
Đầu tiên, tôi sẽ kiểm tra ảnh và chọn phần tử hình trong tab Phần tử của Trình kiểm tra web.

00:13:14.000 --> 00:13:20.000
Điều này tiết lộ tất cả các quy tắc CSS phù hợp của nó trong bảng Kiểu.

00:13:20.000 --> 00:13:24.000
Đây là thuộc tính CSS đặt hoạt ảnh với rất nhiều chuyển động.

00:13:24.000 --> 00:13:27.000
Bây giờ nó chạy cho tất cả mọi người.

00:13:27.000 --> 00:13:36.000
Tiếp theo, tôi sẽ nhấp vào vị trí mã nguồn của quy tắc CSS này để chuyển đến vị trí được xác định trong biểu định kiểu.

00:13:36.000 --> 00:13:43.000
Điều này mở bảng điều khiển Nguồn và đặt tôi ngay bên cạnh Quy tắc CSS có hình ảnh động mà tôi muốn thay đổi.

00:13:43.000 --> 00:13:48.000
Tôi sẽ bỏ bình luận về khối mã này mà tôi đã chuẩn bị trước đó.

00:13:48.000 --> 00:13:52.000
Nó được bảo vệ bởi tính năng truyền thông CSS giảm chuyển động ưa thích.

00:13:52.000 --> 00:14:02.000
Ở đây, tôi thay đổi hình ảnh động thành mờ dần, thay vì hình ảnh phóng to ảnh, và tôi cũng tăng thời lượng hoạt hình để nó không cảm thấy đột ngột.

00:14:02.000 --> 00:14:08.000
Bây giờ tôi sẽ nhấp lại vào một hình ảnh trên trang để xem nó trông như thế nào.

00:14:08.000 --> 00:14:12.000
Ồ! Nó vẫn chạy cùng một hình ảnh động.

00:14:12.000 --> 00:14:18.000
Điều đó đang xảy ra bởi vì tôi đã xác định hình ảnh động mới được bảo vệ bởi tính năng truyền thông chuyển động giảm ưu tiên.

00:14:18.000 --> 00:14:23.000
Nhưng trang vẫn tôn trọng giá trị hệ thống mặc định cho tùy chọn này, được đặt thành Tắt.

00:14:23.000 --> 00:14:26.000
Hãy điều chỉnh điều đó.

00:14:26.000 --> 00:14:28.000
Tôi sẽ nhấp lại vào tab Elements.

00:14:28.000 --> 00:14:34.000
Ở đây, tôi sẽ mở cửa sổ bật lên Ghi đè Tùy chọn Người dùng.

00:14:34.000 --> 00:14:41.000
Trong phần Trợ năng, tôi sẽ mở menu bật lên để ghi đè tùy chọn của người dùng cho "Giảm chuyển động".

00:14:41.000 --> 00:14:48.000
Tôi sẽ thay đổi nó từ giá trị mặc định trên hệ thống của mình và đặt nó thành Bật.

00:14:48.000 --> 00:14:53.000
Bây giờ, tôi sẽ nhấp lại vào một bức ảnh trên trang của mình.

00:14:53.000 --> 00:14:57.000
Và nhìn kìa. Bức ảnh bây giờ từ từ mờ dần vào tầm nhìn.

00:14:57.000 --> 00:14:59.000
Không còn chuyển động mất phương hướng nữa.

00:14:59.000 --> 00:15:04.000
Đây là một trải nghiệm tốt hơn cho những ai thích giảm chuyển động.

00:15:04.000 --> 00:15:09.000
Tôi sẽ nhớ tích hợp những thay đổi này trở lại dự án của mình.

00:15:09.000 --> 00:15:18.000
Mục cuối cùng trong cửa sổ bật lên Ghi đè tùy chọn của người dùng, "Tăng độ tương phản", ánh xạ đến tính năng phương tiện CSS tương phản ưa thích.

00:15:18.000 --> 00:15:24.000
Lý tưởng nhất, bạn muốn xây dựng nội dung có mức độ tương phản màu cao cho mọi người.

00:15:24.000 --> 00:15:32.000
Nhưng nếu hệ thống thiết kế của bạn hạn chế bạn, hãy sử dụng tính năng phương tiện này để điều chỉnh phong cách của bạn cho những người được hưởng lợi từ độ tương phản tăng lên.

00:15:32.000 --> 00:15:36.000
Sau đó, kiểm tra xem các kiểu trên trang được kiểm tra có thích ứng với nhau không.

00:15:36.000 --> 00:15:41.000
Ghi đè tùy chọn cho "Tăng độ tương phản" với Bật.

00:15:41.000 --> 00:15:46.000
Chúng tôi hy vọng bạn sử dụng các tính năng này để xây dựng nội dung mà thậm chí nhiều người có thể thích sử dụng hơn.

00:15:46.000 --> 00:15:52.000
Tiếp theo, tôi muốn nói với bạn về các huy hiệu phần tử mới trong tab Phần tử của Trình kiểm tra web.

00:15:52.000 --> 00:16:00.000
Trong chế độ xem cây nút của tab Elements, bạn đã có thể thấy các huy hiệu bên cạnh các phần tử hoạt động như các vùng chứa CSS Flex hoặc CSS Grid.

00:16:00.000 --> 00:16:06.000
Huy hiệu phần tử cung cấp một cách nhanh chóng để xác định trong nháy mắt các nút quan tâm cụ thể.

00:16:06.000 --> 00:16:12.000
Trong trường hợp này, các nút tạo ra bối cảnh bố cục CSS Grid hoặc Flex.

00:16:12.000 --> 00:16:19.000
Bạn có thể nhấp vào lưới và huy hiệu phần tử linh hoạt để chuyển đổi lớp phủ trang chuyên biệt cho nút đó.

00:16:19.000 --> 00:16:24.000
Màu nổi bật của huy hiệu phù hợp với màu của lớp phủ trang.

00:16:24.000 --> 00:16:33.000
Các lớp phủ trang CSS Grid và Flexbox hiển thị các hướng dẫn tiết lộ các dòng, khoảng trống và không gian có sẵn xác định bố cục.

00:16:33.000 --> 00:16:41.000
Để tìm hiểu thêm về cách gỡ lỗi CSS Grid và bố cục Flexbox với lớp phủ trang, hãy xem các phiên này từ những năm trước.

00:16:41.000 --> 00:16:53.000
Một trong những vấn đề bố cục CSS khó gỡ lỗi nhất là cuộn không mong muốn, giống như một vùng chứa cuộn theo chiều ngang vì nội dung bên trong nó không phù hợp với chiều rộng có sẵn.

00:16:53.000 --> 00:17:00.000
Loại vấn đề này có thể ẩn nấp mà không bị phát hiện trong một thời gian dài khi các thanh cuộn không hiển thị theo mặc định.

00:17:00.000 --> 00:17:06.000
Để giúp bạn xác định cuộn không mong muốn, chúng tôi đã thêm một huy hiệu phần tử mới hiển thị bên cạnh các vùng chứa cuộn.

00:17:06.000 --> 00:17:14.000
Nó cung cấp một gợi ý trực quan nhanh chóng trong cây nút khi nội dung của một phần tử tràn ra giới hạn của nó và một thanh cuộn được áp dụng.

00:17:14.000 --> 00:17:18.000
Hãy xem xét một ví dụ phổ biến về cuộn không mong muốn và cách khắc phục nó.

00:17:18.000 --> 00:17:26.000
Quay lại trang của tôi, tôi thấy những nhãn này ở đầu thư viện ảnh xuất hiện được bố trí đẹp mắt để sử dụng tất cả không gian nằm ngang có sẵn.

00:17:26.000 --> 00:17:32.000
Nhưng khi tôi cố gắng vuốt, tôi nhận thấy có một cuộn ngang ngắn trong vùng chứa này.

00:17:32.000 --> 00:17:35.000
Đây là thứ tôi không muốn.

00:17:35.000 --> 00:17:39.000
Và nhãn cuối cùng bị cắt một chút.

00:17:39.000 --> 00:17:43.000
Nó thậm chí còn tồi tệ hơn khi tôi thay đổi kích thước cửa sổ.

00:17:43.000 --> 00:17:49.000
Trong cây nút trong tab Elements, tôi nhận thấy có một huy hiệu "cuộn" bên cạnh vùng chứa cho các nhãn.

00:17:49.000 --> 00:17:55.000
Tôi sẽ nhấp vào phần tử này để hiển thị các Quy tắc CSS phù hợp của nó trong bảng Kiểu.

00:17:55.000 --> 00:17:58.000
Hộp đựng Flexbox này trông đúng.

00:17:58.000 --> 00:18:05.000
Làm thế nào về các mặt hàng linh hoạt của nó, bản thân nhãn?

00:18:05.000 --> 00:18:10.000
Giá trị quá chính xác này cho thuộc tính chiều rộng tối thiểu có vẻ lạ.

00:18:10.000 --> 00:18:20.000
Có lẽ đó là nỗ lực ngây thơ của tôi để nói với trình duyệt chính xác phải làm gì thay vì nói với trình duyệt những gì tôi muốn và để nó làm toán.

00:18:20.000 --> 00:18:24.000
Để khắc phục điều này, tôi sẽ bình luận về tuyên bố chiều rộng tối thiểu này.

00:18:24.000 --> 00:18:28.000
Bây giờ, mỗi nhãn chiếm nhiều dung lượng như nó cần.

00:18:28.000 --> 00:18:31.000
Nhưng vẫn còn rất nhiều không gian không sử dụng.

00:18:31.000 --> 00:18:37.000
Để khắc phục điều này, tôi sẽ thêm một thuộc tính linh hoạt với giá trị là 1.

00:18:37.000 --> 00:18:42.000
Điều này phân phối không gian không sử dụng cho từng nhãn để chúng lấp đầy thùng chứa.

00:18:42.000 --> 00:18:51.000
Và không còn cuộn ngang không mong muốn nữa, như đã được xác nhận bởi huy hiệu "Scroll" hiện đang bị thiếu bên cạnh vùng chứa trong cây nút.

00:18:51.000 --> 00:18:55.000
Tiếp theo, tôi muốn nói với bạn về huy hiệu Sự kiện mới.

00:18:55.000 --> 00:19:00.000
Nó xuất hiện bên cạnh các phần tử có trình nghe sự kiện JavaScript được đính kèm với chúng.

00:19:00.000 --> 00:19:09.000
Nó hoạt động cho cả các sự kiện tích hợp, như sự kiện con trỏ hoặc giao diện người dùng, cũng như các sự kiện JavaScript tùy chỉnh mà bạn gửi trong mã của mình.

00:19:09.000 --> 00:19:19.000
Tìm kiếm các phần tử có huy hiệu Sự kiện bên cạnh chúng trong cây nút và nhấp vào huy hiệu để hiển thị cửa sổ bật lên với tất cả các trình nghe sự kiện được đính kèm với phần tử đó.

00:19:19.000 --> 00:19:31.000
Tại đây, bạn có thể có cái nhìn tổng quan cho từng trình nghe sự kiện: loại sự kiện, tên của hàm JavaScript xử lý sự kiện và vị trí trong mã nguồn nơi hàm đó được xác định.

00:19:31.000 --> 00:19:40.000
Các tùy chọn cấu hình khác nhau cho trình nghe sự kiện, như liệu nó sủi bọt qua cây DOM hay nó tự động bị xóa sau khi chạy chỉ một lần.

00:19:40.000 --> 00:19:46.000
Sau đó, có tùy chọn vô hiệu hóa trình nghe sự kiện để bạn có thể gỡ lỗi mã của mình mà không cần chạy.

00:19:46.000 --> 00:19:51.000
Hoặc nếu bạn muốn gỡ lỗi từng bước, bạn có thể đặt điểm dừng sự kiện cho nó.

00:19:51.000 --> 00:19:56.000
Điều này sẽ tạm dừng thực thi JavaScript vào lần tới khi trình xử lý được gọi.

00:19:56.000 --> 00:20:02.000
Đây là thời điểm tốt để nói về những cải tiến mà chúng tôi đã thực hiện đối với trải nghiệm gỡ lỗi với các điểm dừng.

00:20:02.000 --> 00:20:07.000
Khi gỡ lỗi JavaScript, bạn có thể quen với việc thêm các câu lệnh console.log() vào mã của mình.

00:20:07.000 --> 00:20:17.000
Mặt khác, Breakpoints là một cách mạnh mẽ để gỡ lỗi bằng cách tạm dừng và bước qua JavaScript mà không cần phải thay đổi nguồn của bạn.

00:20:17.000 --> 00:20:26.000
Nếu bạn chưa từng sử dụng các điểm ngắt trước đây, cách dễ nhất để bắt đầu là nhấp vào một số dòng trên tệp tập lệnh trong máng xối của tab Nguồn.

00:20:26.000 --> 00:20:30.000
Điều này đặt một điểm ngắt JavaScript trên dòng đó của tập lệnh.

00:20:30.000 --> 00:20:37.000
Lần tới khi dòng đó sắp chạy, Web Inspector thay vào đó sẽ tạm dừng thực thi JavaScript tại thời điểm đó.

00:20:37.000 --> 00:20:49.000
Trong khi tạm dừng, bạn có thể quan sát ngăn xếp cuộc gọi, kiểm tra trạng thái của các đối tượng và biến trong phạm vi và thậm chí thực hiện các thay đổi đối với chúng thông qua Bảng điều khiển.

00:20:49.000 --> 00:20:58.000
Bạn có thể tiếp tục thực thi JavaScript hoặc bạn có thể bước qua mã từng biểu thức một, sử dụng các điều khiển bước ở trên cùng.

00:20:58.000 --> 00:21:03.000
Bạn có thể định cấu hình điểm dừng bằng cách nhấp chuột phải vào nó và chọn Chỉnh sửa điểm dừng.

00:21:03.000 --> 00:21:11.000
Ở đây, có nhiều tùy chọn bạn có thể đặt để kiểm soát khi điểm dừng được nhấn và thậm chí chạy các hành động khi có.

00:21:11.000 --> 00:21:13.000
Hãy nhìn vào một vài trong số chúng.

00:21:13.000 --> 00:21:17.000
Bạn có thể kiểm soát khi điểm dừng được nhấn bằng cách đặt điều kiện cho nó.

00:21:17.000 --> 00:21:22.000
Điều này được đánh giá là JavaScript trong cùng một phạm vi nơi điểm dừng của bạn được đặt.

00:21:22.000 --> 00:21:26.000
Khi điều kiện là đúng, điểm dừng sẽ đạt được.

00:21:26.000 --> 00:21:30.000
Đôi khi, bạn có thể thấy việc bỏ qua điểm dừng nhiều lần dễ dàng hơn.

00:21:30.000 --> 00:21:36.000
Ví dụ, trong khi ở trong một vòng lặp mà bạn không quan tâm đến việc dừng lại trong vài lần lặp đầu tiên.

00:21:36.000 --> 00:21:40.000
Tại đây, bạn có thể đặt số lần để bỏ qua điểm dừng.

00:21:40.000 --> 00:21:46.000
Bạn cũng có thể chạy các hành động khi nhấn vào điểm dừng, chẳng hạn như đánh giá một đoạn JavaScript.

00:21:46.000 --> 00:21:49.000
Điều này chạy trong cùng một phạm vi nơi điểm dừng được đặt.

00:21:49.000 --> 00:21:54.000
Bạn có thể sử dụng cái này để sửa đổi trạng thái tập lệnh của mình trước khi tiếp tục.

00:21:54.000 --> 00:22:02.000
Bạn cũng có thể ghi lại tin nhắn vào bảng điều khiển bằng các biểu thức có quyền truy cập vào trạng thái của các biến và đối tượng tại thời điểm JavaScript bị tạm dừng.

00:22:02.000 --> 00:22:09.000
Điều này tương tự như việc thêm câu lệnh console.log() vào mã của bạn, nhưng không cần phải sửa đổi nguồn của bạn.

00:22:09.000 --> 00:22:15.000
Thay vì ghi lại các biến và đối tượng vào bảng điều khiển, bạn cũng có thể sử dụng hành động Biểu thức thăm dò.

00:22:15.000 --> 00:22:22.000
Điều này cho phép bạn kiểm tra trạng thái của biểu thức đã cho trong bảng thanh bên chi tiết của tab Nguồn.

00:22:22.000 --> 00:22:31.000
Tất nhiên, những hành động này rất hữu ích, nhưng đôi khi bạn chỉ muốn chạy chúng mà không thực sự dừng lại ở điểm dừng và phải tiếp tục thủ công.

00:22:31.000 --> 00:22:37.000
Trong những trường hợp đó, hãy sử dụng tùy chọn để tự động tiếp tục sau khi đánh giá các biểu thức.

00:22:37.000 --> 00:22:45.000
Tùy chọn này làm cho hành động Log messages hoạt động giống như một câu lệnh console.log(): nó ghi nhật ký, nhưng nó không tạm dừng.

00:22:45.000 --> 00:22:53.000
Tương tự như vậy, bạn có thể đánh giá một số JavaScript tại vị trí điểm dừng và tiếp tục như thể nó đã có trong mã nguồn của bạn.

00:22:53.000 --> 00:22:56.000
Có nhiều loại điểm dừng khác mà bạn có thể đặt.

00:22:56.000 --> 00:23:29.000
Nhấp vào nút Dấu cộng trong phần Điểm ngắt để hiển thị danh sách tất cả các điểm ngắt bạn có thể đặt, chẳng hạn như Điểm ngắt URL kích hoạt khi yêu cầu mạng sắp được thực hiện thông qua các phương thức như fetch() hoặc XMLHTTPRequest, các điểm ngắt sự kiện như chúng ta đã thấy trước đó từ huy hiệu Sự kiện cho "nhấp chuột", các điểm

00:23:29.000 --> 00:23:38.000
Các điểm ngắt tượng trưng rất hữu ích để gỡ lỗi các cuộc gọi đến các hàm JavaScript tích hợp sẵn hoặc tạm dừng nhiều chức năng có cùng tên.

00:23:38.000 --> 00:23:43.000
Khi thêm một điểm dừng Biểu tượng, bạn có thể cụ thể hoặc chung chung như bạn muốn.

00:23:43.000 --> 00:23:56.000
Hoặc khớp chính xác với tên hàm, bao gồm độ phân giải chữ hoa chữ thường hoặc sử dụng biểu thức chính quy nếu bạn muốn phá vỡ nhiều hàm khớp với mẫu hoặc nếu bạn không nhớ tên hàm hoàn chỉnh.

00:23:56.000 --> 00:24:02.000
Hãy xem các điểm ngắt Symbolic giúp gỡ lỗi sự cố mà tôi gặp phải trong mã của mình như thế nào.

00:24:02.000 --> 00:24:07.000
Mỗi bức ảnh trên trang của tôi có một nút chia sẻ cho phép tôi chia sẻ liên kết đến nó với bạn bè.

00:24:07.000 --> 00:24:12.000
Nhưng tôi đã nhận được một báo cáo lỗi rằng URL họ nhận được không trỏ đến trang ảnh.

00:24:12.000 --> 00:24:15.000
Hãy điều tra.

00:24:15.000 --> 00:24:19.000
Đã lâu rồi kể từ khi tôi làm việc này, và tôi không nhớ nó được xây dựng như thế nào.

00:24:19.000 --> 00:24:24.000
Có nhiều cách để gỡ lỗi này, nhưng tôi sẽ thử một điểm dừng Biểu tượng.

00:24:24.000 --> 00:24:33.000
Tôi sẽ chuyển sang tab Nguồn và nhấp để thêm điểm dừng Biểu tượng mới.

00:24:33.000 --> 00:24:40.000
Bất cứ mã nào chạy ở cuối của tôi, cuối cùng nó phải gọi API trình duyệt navigator.share() hiển thị cửa sổ bật lên hệ thống.

00:24:40.000 --> 00:24:45.000
Hãy đặt một điểm dừng trước khi hàm share() được gọi.

00:24:45.000 --> 00:24:49.000
Tôi sẽ nhấp vào để đặt điểm dừng Biểu tượng của mình.

00:24:49.000 --> 00:24:54.000
Và bây giờ tôi sẽ nhấp vào nút chia sẻ trên một bức ảnh trên trang của mình.

00:24:54.000 --> 00:25:00.000
Và hãy nhìn xem, Web Inspector đã tạm dừng trước khi navigator.share() được gọi.

00:25:00.000 --> 00:25:04.000
Tôi sẽ di chuột qua đối tượng dữ liệu được chuyển đến phương thức này.

00:25:04.000 --> 00:25:07.000
Ở đây, tôi có thể thấy nội dung của đối tượng.

00:25:07.000 --> 00:25:12.000
Có vẻ như giá trị của khóa URL được chia sẻ thực sự sai.

00:25:12.000 --> 00:25:15.000
Cái này đến từ đâu?

00:25:15.000 --> 00:25:21.000
Trong phần Ngăn xếp cuộc gọi của tab Nguồn, tôi có thể thấy chuỗi các chức năng đã được gọi để đến thời điểm này.

00:25:21.000 --> 00:25:24.000
Có vẻ như trình xử lý sự kiện nhấp chuột đã được gọi trước đó.

00:25:24.000 --> 00:25:29.000
Tôi sẽ chọn mục nhập của nó trong Ngăn xếp cuộc gọi để chuyển đến chức năng đó.

00:25:29.000 --> 00:25:35.000
Ở đây, tôi có thể thấy mã xây dựng đối tượng dữ liệu được chuyển đến hàm sharePhoto().

00:25:35.000 --> 00:25:40.000
Và khi nhìn vào nhận xét mã ở đây, tôi định thực hiện điều này, nhưng tôi quên mất.

00:25:40.000 --> 00:25:42.000
Hãy sửa nó ngay bây giờ.

00:25:42.000 --> 00:25:46.000
Tôi sẽ nhấp để đặt điểm dừng trên dòng này.

00:25:46.000 --> 00:25:51.000
Sau đó, tôi sẽ nhấp chuột phải và chọn Chỉnh sửa Điểm dừng.

00:25:51.000 --> 00:25:57.000
Tôi không cần thiết lập một điều kiện, nhưng tôi sẽ cấu hình nó để chạy một hành động JavaScript.

00:25:57.000 --> 00:26:09.000
Bên trong trường biểu thức, tôi sẽ sửa đổi đối tượng dữ liệu để sửa thuộc tính url trước khi nó được chuyển đến hàm chia sẻ.

00:26:09.000 --> 00:26:17.000
Tôi không cần điểm dừng này dừng lại ở đây, vì vậy tôi sẽ nhấp vào tùy chọn để tự động tiếp tục sau khi đánh giá biểu thức này.

00:26:17.000 --> 00:26:22.000
Tiếp theo, tôi sẽ nhấp vào nút để tiếp tục thực thi JavaScript.

00:26:22.000 --> 00:26:27.000
Bây giờ, khi tôi nhấp vào nút chia sẻ, điểm dừng Biểu tượng mà tôi đã đặt trước đó sẽ đạt được một lần nữa.

00:26:27.000 --> 00:26:32.000
Nhưng bây giờ đối tượng dữ liệu mà nó nhận được có giá trị URL phù hợp.

00:26:32.000 --> 00:26:39.000
Hành động JavaScript từ điểm dừng khác đã sửa đổi giá trị và gửi nó đến hàm này mà không cần tạm dừng.

00:26:39.000 --> 00:26:43.000
Điều này xác nhận rằng thay đổi tôi đã thực hiện ở đó thực sự khắc phục được sự cố.

00:26:43.000 --> 00:26:48.000
Đây chỉ là một ví dụ về nhiều quy trình gỡ lỗi tuyệt vời được kích hoạt bởi các điểm dừng.

00:26:48.000 --> 00:26:54.000
Còn rất nhiều thứ nữa, và tôi khuyến khích bạn thử chúng trong các dự án của mình.

00:26:54.000 --> 00:27:04.000
Chúng tôi đã đề cập rất nhiều trong phiên này, từ các công cụ kiểm tra kiểu chữ mới, đến ghi đè tùy chọn người dùng, sử dụng huy hiệu phần tử mới và chúng tôi đã xem xét các cải tiến điểm dừng.

00:27:04.000 --> 00:27:07.000
Và đó chỉ là làm trầy xước bề mặt.

00:27:07.000 --> 00:27:14.000
Có nhiều tính năng và cải tiến mới khác trong Web Inspector năm nay mà chúng tôi không có thời gian để đề cập trong phiên này.

00:27:14.000 --> 00:27:17.000
Và có rất nhiều thứ mà Web Inspector có thể làm.

00:27:17.000 --> 00:27:26.000
Nếu bạn muốn tìm hiểu thêm về những tính năng này và nhiều tính năng khác mà bạn có thể sử dụng, hãy truy cập webkit.org để tìm các bài đăng và tài liệu blog chuyên sâu.

00:27:26.000 --> 00:27:28.000
Chúng tôi cũng muốn nghe ý kiến của bạn.

00:27:28.000 --> 00:27:39.000
Nếu bạn gặp sự cố hoặc có ý tưởng về cách chúng tôi có thể cải thiện Trình kiểm tra web, vui lòng cho chúng tôi biết bằng cách gửi sự cố trên trình theo dõi lỗi của WebKit cho sản phẩm Trình kiểm tra.

00:27:39.000 --> 00:27:43.000
Tôi cũng muốn khuyến khích bạn tải xuống Bản xem trước Công nghệ Safari.

00:27:43.000 --> 00:27:54.000
Nó được phát hành vài tuần một lần và chứa các công cụ và công nghệ mới nhất trong WebKit, cũng như các bản sửa lỗi và cải tiến, trước khi chúng đến phiên bản Safari tiếp theo.

00:27:54.000 --> 00:28:05.000
Trước khi tôi đi, nếu bạn muốn tìm hiểu thêm về những gì mới cho các nhà phát triển trong Safari năm nay, hãy xem các phiên tuyệt vời sau: "Khám phá lại các tính năng của nhà phát triển Safari" và "Có gì mới trong CSS."

00:28:05.000 --> 23:59:59.000
Cảm ơn vì đã xem.

