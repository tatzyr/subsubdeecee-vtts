WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:19.000
Ellie: Xin chào, tôi là Ellie Gattozzi, Giám đốc Thiết kế Giảng dạy tại Apple, và tôi sẽ nói về việc làm cho các tính năng có thể khám phá được với TipKit.

00:00:19.000 --> 00:00:35.000
Bạn sẽ học cách tạo mẹo đầu tiên của mình, thêm các quy tắc để chỉ định ai sẽ xem mẹo, quản lý khi nào nó được hiển thị và loại bỏ để kiểm soát tần suất nhắn tin giáo dục trong ứng dụng của bạn và kiểm tra mẹo của bạn.

00:00:35.000 --> 00:00:40.000
Nhưng trước khi nhảy vào, một chút thông tin cơ bản về TipKit.

00:00:40.000 --> 00:00:46.000
Bạn làm việc trên các tính năng mà bạn biết mọi người sẽ yêu thích, nhưng trước tiên, họ cần khám phá chúng.

00:00:46.000 --> 00:00:52.000
TipKit là một khuôn khổ mới giúp bạn dễ dàng hiển thị các mẹo trong ứng dụng của mình.

00:00:52.000 --> 00:01:01.000
Là nhóm Sản phẩm Hướng dẫn hoạt động trên tất cả giáo dục người dùng của Apple, chúng tôi đã thiết kế TipKit với mục đích giáo dục đặc biệt.

00:01:01.000 --> 00:01:13.000
Ví dụ, TipKit có thể dạy ai đó về một tính năng hoàn toàn mới, giúp khám phá một tính năng ẩn hoặc chỉ ra cách nhanh hơn để hoàn thành một nhiệm vụ.

00:01:13.000 --> 00:01:25.000
Và nó có sẵn trên iPhone, iPad, Mac, Apple Watch và Apple TV.

00:01:25.000 --> 00:01:30.000
Với điều đó, tôi sẽ bắt đầu tạo ra một mẹo.

00:01:30.000 --> 00:01:35.000
Có một tính năng, Favoriting a Backyard, trong ứng dụng Backyard Birds.

00:01:35.000 --> 00:01:42.000
Sự ưu ái giúp một người dễ dàng đến được những sân sau mà họ quan tâm nhất, điều này khiến nó trở thành một ứng cử viên tuyệt vời cho các mẹo.

00:01:42.000 --> 00:01:48.000
Khi tôi đã xác định được tính năng cho mẹo, tôi đã sẵn sàng chuyển sang Xcode.

00:01:48.000 --> 00:01:53.000
Tôi sẽ bắt đầu bằng cách xác định một mẹo mới cho tính năng Yêu thích Sân sau.

00:01:53.000 --> 00:01:57.000
Các mẹo được tạo thành từ một tiêu đề và tin nhắn, vì vậy tôi sẽ thêm chúng.

00:01:57.000 --> 00:02:15.000
Các mẹo hữu ích có các cụm từ hành động trực tiếp như tiêu đề cho biết tính năng này là gì và tin nhắn với thông tin hoặc hướng dẫn lợi ích dễ nhớ để người dùng biết lý do tại sao họ muốn sử dụng tính năng này và sau đó có thể tự hoàn thành nhiệm vụ.

00:02:15.000 --> 00:02:18.000
Đây là một vài ví dụ về các mẹo hiệu quả.

00:02:18.000 --> 00:02:25.000
Tất cả những điều này đều có thể hành động, hướng dẫn và dễ nhớ.

00:02:25.000 --> 00:02:29.000
Đây chỉ là một vài ví dụ về thời điểm không sử dụng TipKit.

00:02:29.000 --> 00:02:36.000
Đầu tiên là quảng cáo và thứ hai là thông báo lỗi, cả hai đều không mang tính giáo dục.

00:02:36.000 --> 00:02:42.000
Trong phần ba, thật tuyệt khi tính năng này tốt hơn, nhưng mọi người không cần phải làm gì cả.

00:02:42.000 --> 00:02:48.000
Điều cuối cùng hữu ích, nhưng quá phức tạp để đọc và ghi nhớ trong thời điểm này.

00:02:48.000 --> 00:02:50.000
Bây giờ quay lại mẹo của tôi.

00:02:50.000 --> 00:02:59.000
Tôi đã có tiêu đề và tin nhắn của mình, vì vậy tiếp theo, tôi sẽ đưa vào cấu trúc cơ bản để xem mẹo và định cấu hình TipsCenter.

00:02:59.000 --> 00:03:11.000
TipsCenter cho phép chức năng TipKit chính, bao gồm các mẹo và các sự kiện liên quan của chúng tồn tại giữa các lần khởi chạy ứng dụng và giúp kiểm tra các mẹo dễ dàng hơn.

00:03:11.000 --> 00:03:18.000
Một phiên bản chia sẻ mặc định của TipsCenter được cung cấp và là những gì tôi đã thêm vào đây.

00:03:18.000 --> 00:03:22.000
Với TipsCenter được cấu hình, bây giờ tôi có thể thấy mẹo.

00:03:22.000 --> 00:03:26.000
Nó trông đẹp, nhưng nó có thể trông đẹp hơn.

00:03:26.000 --> 00:03:36.000
Tôi sẽ thay đổi màu văn bản thành màu chàm để nó khớp với ứng dụng và đặt một biểu tượng để giúp thu hút sự chú ý và liên kết trực quan mẹo với tính năng này.

00:03:36.000 --> 00:03:41.000
Tôi đã chọn biểu tượng ngôi sao vì mẹo là về sự yêu thích.

00:03:41.000 --> 00:03:48.000
Nếu tính năng của bạn có các cài đặt có thể được tùy chỉnh, bạn có thể muốn thêm một nút hành động.

00:03:48.000 --> 00:03:54.000
Các nút hành động có thể đưa mọi người trực tiếp đến các cài đặt đó để họ có thể điều chỉnh nhanh chóng.

00:03:54.000 --> 00:04:05.000
Hoặc nếu bạn cảm thấy có nhiều thông tin hơn mà mọi người sẽ thấy đặc biệt hữu ích, một lựa chọn khác là liên kết đến các tài nguyên bổ sung, chẳng hạn như quy trình giới thiệu.

00:04:05.000 --> 00:04:09.000
Được rồi, tôi có mẹo hướng dẫn của mình và nó trông rất tuyệt.

00:04:09.000 --> 00:04:13.000
Bây giờ tôi sẽ xác định cách điều trị và vị trí tốt nhất cho nó.

00:04:13.000 --> 00:04:22.000
Có hai loại chế độ xem mẹo: Đầu tiên là chế độ xem bật lên, cho phép mẹo xuất hiện trên giao diện người dùng ứng dụng của bạn.

00:04:22.000 --> 00:04:31.000
Nó có thể trỏ trực tiếp đến một nút hoặc phần tử khác và đặc biệt hữu ích cho việc chỉ đạo người dùng mà không thay đổi màn hình ứng dụng hiện tại.

00:04:31.000 --> 00:04:36.000
Trên tvOS, chế độ xem cửa sổ bật lên được sử dụng độc quyền.

00:04:36.000 --> 00:04:45.000
Thứ hai là chế độ xem nội tuyến, điều chỉnh giao diện người dùng của ứng dụng để tạm thời phù hợp với nó để không có giao diện người dùng nào bị chặn.

00:04:45.000 --> 00:04:53.000
Khi sử dụng một trong hai chế độ xem, thật hữu ích khi mẹo xuất hiện gần với nút hoặc phần tử có liên quan mà bạn đang gọi.

00:04:53.000 --> 00:05:04.000
Để yêu thích một sân sau, tôi sẽ đi với chế độ xem cửa sổ bật lên và đặt nó sao cho nó chỉ vào nút ngôi sao ở góc trên cùng bên phải.

00:05:04.000 --> 00:05:06.000
Và đó là mẹo đầu tiên của ứng dụng của tôi.

00:05:06.000 --> 00:05:09.000
Nó trông rất tuyệt và đang ở trong bối cảnh.

00:05:09.000 --> 00:05:17.000
Nhưng để thực sự tận dụng sức mạnh của TipKit để tiếp cận đối tượng lý tưởng vào thời điểm tốt nhất, chúng tôi sẽ muốn thêm một số quy tắc.

00:05:17.000 --> 00:05:22.000
Tôi sẽ chuyển nó cho Charlie để nói về cách đưa các mẹo lên cấp độ tiếp theo.

00:05:22.000 --> 00:05:23.000
Charlie: Cảm ơn, Ellie.

00:05:23.000 --> 00:05:29.000
Xin chào, tôi là Charlie Parks, Giám đốc Kỹ thuật Phần mềm từ nhóm Sản phẩm Giảng dạy.

00:05:29.000 --> 00:05:40.000
Khám phá một tính năng mới có thể gợi lên cảm giác ngạc nhiên và thích thú, nhưng chỉ khi tính năng đó được người đó quan tâm và bất kỳ sự giáo dục nào về nó không bị coi là spam hoặc không liên quan.

00:05:40.000 --> 00:05:47.000
Mẹo về việc yêu thích sân sau rất hữu ích, nhưng nó có thể không dành cho tất cả mọi người, đặc biệt là những người đã phát hiện ra tính năng này.

00:05:47.000 --> 00:05:52.000
Nó cũng có thể ít được quan tâm hơn đối với những người không thường xuyên sử dụng ứng dụng.

00:05:52.000 --> 00:06:02.000
Tại Apple, chúng tôi tin rằng giáo dục trong ứng dụng nên tập trung vào những người sẽ được hưởng lợi từ nó và chúng tôi mong muốn tránh cản trở các cá nhân trong khi họ đang cố gắng hoàn thành điều gì đó trong một ứng dụng.

00:06:02.000 --> 00:06:17.000
Để đảm bảo tiền boa chỉ được hiển thị cho đối tượng phù hợp nhất vào thời điểm lý tưởng nhất, TipKit cung cấp một số quy tắc đủ điều kiện mà bạn có thể sử dụng một mình hoặc cùng nhau để xác định chính xác thời điểm tiền boa nên được hiển thị.

00:06:17.000 --> 00:06:21.000
Có hai loại quy tắc chính. Đầu tiên là một quy tắc dựa trên tham số.

00:06:21.000 --> 00:06:29.000
Các quy tắc dựa trên tham số là liên tục và phù hợp nhất để hiển thị các mẹo dựa trên loại giá trị Swift mà bạn muốn viết một biểu thức xung quanh.

00:06:29.000 --> 00:06:32.000
Thứ hai là một quy tắc dựa trên sự kiện.

00:06:32.000 --> 00:06:39.000
Các quy tắc dựa trên sự kiện cho phép bạn xác định một hành động phải được thực hiện trước khi một người đủ điều kiện nhận tiền boa.

00:06:39.000 --> 00:06:45.000
Đối với mẹo Sân sau Yêu thích của tôi, điều đầu tiên tôi muốn làm là đảm bảo rằng người đó đã đăng nhập vào tài khoản của họ.

00:06:45.000 --> 00:06:48.000
Tôi sẽ thực hiện một quy tắc dựa trên tham số để thực hiện điều đó.

00:06:48.000 --> 00:06:52.000
Đầu tiên, tôi sẽ đặt giá trị ban đầu của tham số thành sai.

00:06:52.000 --> 00:06:55.000
Sau đó, tôi sẽ thêm cái này vào các quy tắc của mẹo.

00:06:55.000 --> 00:07:00.000
Tuyệt vời. Tôi đã thu hẹp ai sẽ nhận được tiền boa, nhưng bây giờ tôi muốn thu hẹp nó hơn nữa.

00:07:00.000 --> 00:07:06.000
Tôi muốn mọi người có thể sử dụng ứng dụng và khám phá tính năng một cách tự nhiên trước khi thúc đẩy họ.

00:07:06.000 --> 00:07:17.000
Cách tôi sẽ làm điều đó là tạo một quy tắc dựa trên sự kiện để đảm bảo mẹo chỉ hiển thị sau khi một người đã đến Chế độ xem chi tiết sân sau ít nhất ba lần.

00:07:17.000 --> 00:07:20.000
Vì vậy, trước tiên, tôi sẽ tạo ra sự kiện.

00:07:20.000 --> 00:07:27.000
Sau đó, tôi sẽ yêu cầu quy tắc đếm số lần tôi muốn sự kiện kích hoạt trước khi quy tắc được đánh giá là đúng.

00:07:27.000 --> 00:07:34.000
Trong trường hợp này, tôi muốn người đó vào Chế độ xem chi tiết sân sau ba lần trước khi tôi trình bày tiền boa.

00:07:34.000 --> 00:07:37.000
Điều cuối cùng tôi cần làm là quyên góp sự kiện.

00:07:37.000 --> 00:07:43.000
Vì vậy, trong BackyardDetailView, tôi sẽ quyên góp sự kiện bất cứ khi nào chế độ xem xuất hiện.

00:07:43.000 --> 00:07:47.000
Những quy tắc này đang kết hợp với nhau, nhưng nếu tôi muốn thắt chặt chúng hơn một chút thì sao?

00:07:47.000 --> 00:07:54.000
Cho đến nay, tôi đã tập trung vào những người thường xuyên đến Chế độ xem chi tiết sân sau, nhưng chưa bao giờ yêu thích sân sau.

00:07:54.000 --> 00:08:00.000
Bây giờ, tôi cũng chỉ muốn hiển thị mẹo cho những cá nhân thường xuyên sử dụng ứng dụng.

00:08:00.000 --> 00:08:12.000
Tôi sẽ thêm công cụ sửa đổi truy vấn ngày vào quy tắc dựa trên sự kiện của mình để đảm bảo nó sẽ chỉ được đánh giá là đúng nếu ai đó đã vào Chế độ xem chi tiết sân sau ba lần trong năm ngày qua.

00:08:12.000 --> 00:08:24.000
Một tính năng TipKit rất mạnh mẽ khác là khả năng tạo các khoản đóng góp tùy chỉnh bằng cách thêm các loại liên quan vào mỗi khoản đóng góp sự kiện và truy vấn các sự kiện dựa trên các loại đó.

00:08:24.000 --> 00:08:34.000
Sử dụng các loại liên quan, tôi có thể tinh chỉnh thêm quy tắc dựa trên sự kiện, vì vậy nó chỉ khớp khi ai đó đã đi đến một Chế độ xem chi tiết sân sau cụ thể.

00:08:34.000 --> 00:08:40.000
Đầu tiên, tôi sẽ tạo một DetailViewDonation và cung cấp ID của chế độ xem sân sau cụ thể.

00:08:40.000 --> 00:08:46.000
Sau đó, trong khoản đóng góp của tôi, tôi sẽ bao gồm ID của khung cảnh sân sau mà một người hiện đang ở.

00:08:46.000 --> 00:08:53.000
Khi cả hai đều được thiết lập, tôi sẽ cập nhật quy tắc của mình để truy vấn các sự kiện dựa trên ID sân sau duy nhất.

00:08:53.000 --> 00:08:57.000
Khi xác định các khoản đóng góp tùy chỉnh này, hãy ghi nhớ kích thước của dữ liệu đang được lưu trữ.

00:08:57.000 --> 00:09:03.000
Kích thước càng lớn, truy vấn sẽ thực hiện càng chậm và ít hiệu quả.

00:09:03.000 --> 00:09:11.000
Các quy tắc trong TipKit rất dễ soạn và chúng cung cấp một cách đơn giản mạnh mẽ để đảm bảo rằng các mẹo được hiển thị cho những người sẽ nhận được nhiều lợi ích nhất từ chúng.

00:09:11.000 --> 00:09:18.000
Các quy tắc có thể chung chung hoặc cụ thể khi cần thiết và có thể được kết hợp để nhắm mục tiêu đối tượng lý tưởng vào thời điểm tốt nhất.

00:09:18.000 --> 00:09:26.000
Khi một mẹo xuất hiện trong ứng dụng của tôi, tôi không muốn nó ở trên màn hình mãi mãi và tôi không muốn nó kéo dài nếu một người đã sử dụng tính năng được mô tả trong mẹo.

00:09:26.000 --> 00:09:34.000
Và nếu tôi có nhiều mẹo, tôi không muốn tất cả chúng xuất hiện cùng một lúc bởi vì điều đó có thể gây choáng ngợp và cản trở những gì người đó đang cố gắng làm.

00:09:34.000 --> 00:09:41.000
TipKit cung cấp một số hành vi hiển thị và loại bỏ, vì vậy các mẹo xuất hiện với nhịp độ tốt và chỉ miễn là chúng hữu ích.

00:09:41.000 --> 00:09:46.000
Giả sử rằng tôi đã thêm một số mẹo nữa vào ứng dụng của mình, vì vậy bây giờ tôi có năm mẹo trong ứng dụng Backyard Birds.

00:09:46.000 --> 00:09:51.000
Các mẹo đều hữu ích nhưng sẽ kém hiệu quả hơn nếu tất cả chúng xuất hiện cùng một lúc.

00:09:51.000 --> 00:09:58.000
Với TipKit, tôi có thể đặt tần suất hiển thị cho các mẹo, để chúng xuất hiện theo nhịp lý tưởng hơn.

00:09:58.000 --> 00:10:04.000
Trong TipsCenter, tôi có thể chỉ định khoảng thời gian phải trôi qua trước khi một mẹo khác có thể xuất hiện.

00:10:04.000 --> 00:10:18.000
Tôi có thể sử dụng .daily nếu tôi muốn có một chương trình tip mỗi 24 giờ, .hourly nếu tôi muốn có một chương trình tip cứ sau 60 phút, hoặc tôi có thể chỉ định thời lượng tùy chỉnh bằng cách cung cấp bất kỳ giá trị TimeInterval hợp lệ nào.

00:10:18.000 --> 00:10:23.000
Và nếu tôi thực sự cảm thấy rằng giáo dục là cần thiết ngay lập tức, tôi cũng có thể sử dụng công cụ sửa đổi .immediate.

00:10:23.000 --> 00:10:33.000
Bằng cách này, mọi người sẽ thấy bất kỳ mẹo nào mà họ đủ điều kiện cho thời điểm họ đủ điều kiện cho họ, ngay cả khi một mẹo khác xuất hiện gần đây hoặc xuất hiện trên màn hình.

00:10:33.000 --> 00:10:41.000
Thay vì bỏ qua tần suất hiển thị ở cấp độ TipsCenter, có thể hữu ích hơn nếu bỏ qua nó trên cơ sở một lần, mỗi lần.

00:10:41.000 --> 00:10:47.000
Để làm như vậy, tôi có thể thêm tùy chọn .ignoresDisplayFrequency vào mẹo cụ thể.

00:10:47.000 --> 00:10:57.000
Bây giờ, chỉ có mẹo cụ thể đó sẽ hiển thị người thứ hai đủ điều kiện, trong khi phần còn lại của mẹo trong ứng dụng của tôi sẽ tiếp tục tuân theo nhịp hiển thị mà tôi đã đặt ở cấp độ TipsCenter.

00:10:57.000 --> 00:11:01.000
Một khi các mẹo xuất hiện, tôi muốn chúng chỉ ở trên màn hình miễn là chúng hữu ích.

00:11:01.000 --> 00:11:13.000
Vì vậy, nếu ai đó sử dụng tính năng được mô tả trong mẹo, có nghĩa là họ đã thực hiện hành động hoặc nếu họ đủ điều kiện nhận tiền boa nhưng vẫn không quan tâm đến nó, tiền boa nên bị loại bỏ.

00:11:13.000 --> 00:11:27.000
Giả sử người sử dụng ứng dụng đã đáp ứng tất cả các quy tắc để hiển thị mẹo: họ đã đăng nhập, đã mở Chế độ xem chi tiết sân sau ba lần trong năm ngày qua, nhưng chưa bao giờ nhấn vào nút yêu thích trên bất kỳ sân sau nào.

00:11:27.000 --> 00:11:40.000
Khi họ nhìn thấy mẹo và nhấn vào nút yêu thích, tôi sẽ gọi phương thức vô hiệu hóa với lý do ".userPerformedAction" để biểu thị rằng kết quả mong muốn đã được thực hiện và mẹo sẽ bị loại bỏ.

00:11:40.000 --> 00:11:45.000
Một cách khác mà tiền boa có thể bị loại bỏ là nếu tiền boa được hiển thị nhiều hơn .maxDisplayCount đã xác định.

00:11:45.000 --> 00:11:55.000
Trong trường hợp này, một khi mẹo hiển thị năm lần và không có hành động nào được thực hiện, nó sẽ không hiển thị vào lần tiếp theo khi cá nhân vào Chế độ xem chi tiết sân sau.

00:11:55.000 --> 00:12:01.000
Đây là một số cách mà các mẹo có thể bị loại bỏ bằng cách sử dụng chức năng tích hợp sẵn mà TipKit cung cấp.

00:12:01.000 --> 00:12:10.000
Nhưng vì bạn biết ứng dụng của mình tốt nhất, bạn có thể bỏ qua một mẹo dựa trên bất kỳ tương tác hoặc tiêu chí nào bạn thấy phù hợp bằng cách sử dụng phương thức .invalidate().

00:12:10.000 --> 00:12:16.000
TipKit cũng có thể đồng bộ hóa trạng thái mẹo qua iCloud để đảm bảo rằng các mẹo được nhìn thấy trên một thiết bị sẽ không được nhìn thấy trên thiết bị kia.

00:12:16.000 --> 00:12:29.000
Ví dụ, nếu ai đó sử dụng ứng dụng đã cài đặt nó trên cả iPad và iPhone và các tính năng giống hệt nhau trên cả hai thiết bị đó, có lẽ tốt nhất là không nên giáo dục họ trên cả hai thiết bị về tính năng này.

00:12:29.000 --> 00:12:35.000
Tôi sẽ giao lại cho Ellie ngay bây giờ để nói về việc thử nghiệm các API mà TipKit cung cấp và một số bước tiếp theo.

00:12:35.000 --> 00:12:47.000
Ellie: Để làm cho việc kiểm tra trở nên dễ dàng, TipKit đi kèm với một số API tiện lợi mà bạn có thể sử dụng để giải quyết các quy tắc đủ điều kiện để bạn có thể hiển thị hoặc ẩn các mẹo khi cần thiết.

00:12:47.000 --> 00:12:52.000
Bạn có thể kiểm tra tất cả các mẹo trong ứng dụng của mình mà không cần phải đáp ứng các quy tắc được đặt ra cho chúng.

00:12:52.000 --> 00:12:57.000
Để làm như vậy, hãy thêm .showAllTips vào cấu hình của TipsCenter.

00:12:57.000 --> 00:13:11.000
Nếu bạn chỉ muốn một số mẹo nhất định hiển thị khi kiểm tra, hãy sử dụng .showTips và vượt qua các ID mẹo cụ thể hoặc sử dụng .hideTips để ngăn các mẹo cụ thể hiển thị.

00:13:11.000 --> 00:13:20.000
Và nếu bạn muốn đảm bảo rằng không có mẹo nào hiển thị, vì vậy bạn có thể tập trung vào một tính năng khác trong ứng dụng của mình, hãy sử dụng .hideAllTips.

00:13:20.000 --> 00:13:30.000
Bạn cũng có thể sử dụng .resetDatastore để xóa tất cả thông tin trong kho dữ liệu TipKit, đặt trạng thái nguyên sơ ở mỗi bản dựng của ứng dụng.

00:13:30.000 --> 00:13:38.000
Tất cả các tùy chọn thử nghiệm giống nhau mà bạn có thể gọi qua API cũng có sẵn dưới dạng đối số khởi chạy mà bạn có thể thêm vào sơ đồ dự án của mình.

00:13:38.000 --> 00:13:44.000
Bạn có thể sử dụng bất kỳ thứ gì trong số này để kiểm tra nhanh tại chỗ hoặc kiểm tra đầy đủ chức năng.

00:13:44.000 --> 00:13:46.000
Và với điều đó, bạn đã sẵn sàng.

00:13:46.000 --> 00:13:56.000
Bạn đã tạo mẹo của mình, thêm các quy tắc của mình, đặt tần suất cho các mẹo trong ứng dụng của mình và hiện đang thử nghiệm để mọi thứ hoạt động như mong đợi.

00:13:56.000 --> 00:14:02.000
Tóm lại, các mẹo rất tuyệt vời để giúp người dùng khám phá các tính năng trong ứng dụng của bạn.

00:14:02.000 --> 00:14:13.000
Hãy nhớ giữ cho các mẹo của bạn ngắn gọn, có hướng dẫn và có thể hành động, đồng thời sử dụng các quy tắc dễ xác định nhưng mạnh mẽ để nhắm mục tiêu đến đối tượng lý tưởng.

00:14:13.000 --> 00:14:25.000
Mã mẫu của TipKit sẽ có sẵn trên developer.apple.com và theo dõi các nguyên tắc giao diện người dùng TipKit để có thêm thông tin về việc tạo các mẹo tuyệt vời.

00:14:25.000 --> 00:14:34.000
Bây giờ hãy xem lại ứng dụng của bạn để biết các cơ hội khám phá và khi bạn đang làm việc trên các tính năng mới, hãy ghi nhớ TipKit.

00:14:34.000 --> 23:59:59.000
Thay mặt cho nhóm Sản phẩm Hướng dẫn, cảm ơn vì đã xem.

