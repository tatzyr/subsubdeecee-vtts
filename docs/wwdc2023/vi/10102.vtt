WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:14.000
Jerry: Xin chào, tôi là Jerry, Giám đốc Kỹ thuật cho Siri và Phím tắt Ứng dụng.

00:00:14.000 --> 00:00:19.000
Hôm nay, tôi sẽ chia sẻ với bạn cách bạn có thể làm nổi bật ứng dụng của mình với Phím tắt ứng dụng.

00:00:19.000 --> 00:00:27.000
Tôi sẽ bắt đầu bằng cách xem xét lý do tại sao bạn nên áp dụng Phím tắt ứng dụng để giúp ứng dụng của bạn tạo ra các hành động nhanh chóng, theo thói quen có thể được sử dụng từ khắp nơi trên hệ điều hành.

00:00:27.000 --> 00:00:31.000
Sau đó, tôi sẽ xem xét những điều cơ bản của việc triển khai Phím tắt ứng dụng.

00:00:31.000 --> 00:00:40.000
Sau đó, tôi sẽ xem xét cách làm cho Phím tắt Ứng dụng của bạn trở nên tuyệt vời cho cả việc sử dụng hình ảnh và giọng nói, cũng như những cách mới Phím tắt Ứng dụng đã được cải thiện trong iOS 17.

00:00:40.000 --> 00:00:48.000
Và cuối cùng, tôi sẽ kết thúc bằng cách xem xét các cách mới Phím tắt ứng dụng có thể được mở rộng trên một số thiết bị Apple ngoài iPhone.

00:00:48.000 --> 00:00:54.000
Để bắt đầu, Phím tắt ứng dụng giúp bạn dễ dàng khám phá và sử dụng chức năng của ứng dụng.

00:00:54.000 --> 00:01:00.000
Chúng sẽ tự động có sẵn ngay sau khi ứng dụng của bạn được cài đặt và không yêu cầu thiết lập người dùng.

00:01:00.000 --> 00:01:08.000
Không giống như trong iOS 15 trở về trước, không cần sử dụng ứng dụng Phím tắt hoặc sử dụng nút Thêm vào Siri để thiết lập Phím tắt ứng dụng trước khi sử dụng.

00:01:08.000 --> 00:01:13.000
Phím tắt ứng dụng có thể được chạy từ Siri bằng cách nói một trong những cụm từ kích hoạt của chúng.

00:01:13.000 --> 00:01:25.000
Chúng cũng nổi bật ngay trong kết quả tìm kiếm khi tìm kiếm trong Spotlight và chúng được tìm thấy trong ứng dụng Phím tắt nơi chúng có thể là một phần của Phím tắt và Tự động hóa người dùng mạnh mẽ.

00:01:25.000 --> 00:01:37.000
Phím tắt ứng dụng có thể giúp nâng cao khả năng hiển thị các tính năng của ứng dụng cho người dùng trên toàn hệ thống và là điểm khởi chạy tuyệt vời cho cả hai chức năng mở ứng dụng của bạn hoặc đơn giản là làm mọi thứ trong nền, vì vậy người dùng có thể duy trì sự tập trung của họ.

00:01:37.000 --> 00:01:48.000
Chúng là những cách nhanh chóng, đáng nhớ để giảm ma sát khi sử dụng các tính năng cốt lõi của ứng dụng của bạn và cũng giúp chúng có thể sử dụng được cho nhiều ngữ cảnh hơn, bao gồm rảnh tay chỉ bằng giọng nói của bạn hoặc trong nhà với HomePod.

00:01:48.000 --> 00:01:56.000
Với các Phím tắt Ứng dụng đáng nhớ nhắm mục tiêu các tính năng quan trọng nhất của ứng dụng, bạn có thể giúp mọi người khám phá, ghi nhớ và xây dựng thói quen xung quanh việc sử dụng ứng dụng của mình.

00:01:56.000 --> 00:02:03.000
Ví dụ, trong suốt phiên này, tôi sẽ làm việc với một ứng dụng giả định có tên là "Demo" để quản lý danh sách việc cần làm của mình.

00:02:03.000 --> 00:02:07.000
Tôi muốn giới thiệu một chút chức năng mới, tóm tắt danh sách của tôi, cho hệ thống.

00:02:07.000 --> 00:02:14.000
Điều này sẽ cho phép tôi có ý tưởng nhanh về những gì còn lại để làm thông qua Phím tắt hoặc bằng cách hỏi Siri.

00:02:14.000 --> 00:02:17.000
Loại tính năng nhanh chóng và nhẹ này hoàn hảo cho Phím tắt ứng dụng.

00:02:17.000 --> 00:02:22.000
Họ để mọi người có được những gì họ cần từ ứng dụng của tôi một cách liền mạch và lên đường.

00:02:22.000 --> 00:02:34.000
Tôi sẽ nhanh chóng hướng dẫn cách bạn triển khai Ý định ứng dụng để tóm tắt danh sách việc cần làm và sau đó triển khai Phím tắt ứng dụng, vì vậy người dùng của tôi có thể tóm tắt danh sách bằng lệnh bằng lời nói từ Phím tắt và được đánh dấu trong Tiêu điểm.

00:02:34.000 --> 00:02:44.000
Phím tắt ứng dụng được xây dựng bằng khung App Intents, khung Swift duy nhất của chúng tôi được xây dựng từ đầu để giúp xây dựng ý định tuyệt vời ngay trong mã nguồn Swift của bạn nhanh hơn và dễ dàng hơn.

00:02:44.000 --> 00:02:48.000
Tất cả các Phím tắt Ứng dụng bắt đầu bằng cách xác định một ý định trong mã nguồn của bạn.

00:02:48.000 --> 00:02:57.000
Ý định đại diện cho các nhiệm vụ riêng lẻ có thể được hoàn thành với ứng dụng của bạn, như tạo danh sách việc cần làm, tóm tắt nội dung của nó hoặc kiểm tra một mục.

00:02:57.000 --> 00:03:02.000
Sau khi bạn tạo một ý định ứng dụng, bạn có thể tạo một phím tắt ứng dụng với nó, vì vậy nó có thể được sử dụng từ Spotlight hoặc Siri.

00:03:02.000 --> 00:03:07.000
Điều này liên kết ý định của bạn với các cụm từ, tiêu đề và biểu tượng kích hoạt Siri cần thiết.

00:03:07.000 --> 00:03:13.000
Khi bạn có cả hai định nghĩa, tất cả những gì bạn phải làm là xây dựng và kiểm tra ứng dụng của mình để xem nó hoạt động.

00:03:13.000 --> 00:03:16.000
Tôi sẽ bắt đầu bằng cách tạo một phím tắt ứng dụng rất đơn giản.

00:03:16.000 --> 00:03:22.000
Phím tắt ứng dụng này sẽ cho phép tôi tạo một danh sách việc cần làm trống mới ngay từ Spotlight hoặc Siri bằng cách nhập tên của danh sách.

00:03:22.000 --> 00:03:29.000
Thực hiện điều này sẽ là một quá trình hai bước đơn giản: xác định ý định của ứng dụng và xác định phím tắt ứng dụng.

00:03:29.000 --> 00:03:32.000
Tôi bắt đầu bằng cách nhập khung App Intents.

00:03:32.000 --> 00:03:37.000
Và sau đó tôi triển khai một cấu trúc mới cho ý định của mình, phù hợp với giao thức AppIntent.

00:03:37.000 --> 00:03:44.000
Tôi bao gồm chức năng thực tế của ý định của mình trong phương thức thực hiện sẽ được hệ thống gọi.

00:03:44.000 --> 00:03:48.000
Và cuối cùng, tôi triển khai cấu trúc AppShortcutsProvider.

00:03:48.000 --> 00:03:51.000
Mỗi ứng dụng có thể có tối đa một cấu trúc phù hợp với giao thức này.

00:03:51.000 --> 00:03:56.000
Trong AppShortcutsProvider, tôi có thể chỉ định tất cả các phím tắt ứng dụng mà ứng dụng của tôi hỗ trợ.

00:03:56.000 --> 00:03:58.000
Ở đây tôi đã thêm phím tắt ứng dụng Tạo Danh sách.

00:03:58.000 --> 00:04:04.000
Mỗi phím tắt ứng dụng có một vài thành phần: Ý định sẽ được gọi khi được kích hoạt.

00:04:04.000 --> 00:04:08.000
Các cụm từ mà Siri nên nhận ra để thực hiện phím tắt ứng dụng này.

00:04:08.000 --> 00:04:11.000
Bạn có thể có nhiều trong số này cho mỗi Phím tắt Ứng dụng.

00:04:11.000 --> 00:04:17.000
Một tiêu đề ngắn và tên hình ảnh hệ thống, vì vậy hệ thống biết cách thể hiện phím tắt ứng dụng này một cách trực quan.

00:04:17.000 --> 00:04:20.000
Đó là tất cả những gì tôi cần thực hiện cho một phím tắt ứng dụng đơn giản.

00:04:20.000 --> 00:04:28.000
Bằng cách chạy ứng dụng của mình, tôi có thể ngay lập tức bắt đầu tạo danh sách việc cần làm ngay từ Siri hoặc ứng dụng Phím tắt, tất cả chỉ bằng cách tạo hai cấu trúc trong mã của tôi.

00:04:28.000 --> 00:04:35.000
Tuy nhiên, tôi muốn thử một cái gì đó nâng cao hơn một chút, nơi tôi có thể tóm tắt nhanh các nhiệm vụ của mình bằng cách cung cấp một danh sách cụ thể để tóm tắt.

00:04:35.000 --> 00:04:39.000
Điều này sẽ chạm vào hai khái niệm chính trong Ý định ứng dụng: Thực thể và truy vấn.

00:04:39.000 --> 00:04:42.000
Hãy thử nó đi.

00:04:42.000 --> 00:04:45.000
Đầu tiên, tôi cần triển khai Ý định ứng dụng SummarizeList.

00:04:45.000 --> 00:04:50.000
Giống như trước đây, tôi cần tạo một cấu trúc phù hợp với giao thức AppIntent.

00:04:50.000 --> 00:04:53.000
Đối với cấu trúc TodoList, tôi đã để lại một triển khai sơ khai.

00:04:53.000 --> 00:04:55.000
Tôi sẽ quay lại với điều đó.

00:04:55.000 --> 00:05:01.000
Tôi đã có một chức năng tiện lợi trong ứng dụng của mình để trả về bản tóm tắt của một danh sách, vì vậy tôi sẽ chỉ sử dụng nó.

00:05:01.000 --> 00:05:05.000
Tôi có thể trả lại bản tóm tắt này dưới dạng hộp thoại tùy chỉnh như một phần của kết quả ý định ứng dụng.

00:05:05.000 --> 00:05:09.000
Điều này sẽ cho phép Siri nói hoặc hiển thị kết quả.

00:05:09.000 --> 00:05:14.000
Mọi ý định đều cần một tiêu đề mà hệ thống có thể hiển thị.

00:05:14.000 --> 00:05:20.000
Ý định có thể lấy đầu vào bằng cách khai báo các biến và chú thích chúng bằng trình bao bọc thuộc tính @Parameter.

00:05:20.000 --> 00:05:27.000
Trong trường hợp này, tôi đã tham khảo một cấu trúc ToDoList, như đã đề cập, hiện tại chỉ còn sơ khai.

00:05:27.000 --> 00:05:33.000
Bây giờ tôi muốn nói với bạn về hai khái niệm hữu ích cho nhiều ý định của ứng dụng: thực thể và truy vấn.

00:05:33.000 --> 00:05:37.000
Thực thể là các khái niệm liên quan đến ứng dụng của bạn mà người dùng của bạn sẽ muốn tham khảo.

00:05:37.000 --> 00:05:45.000
Trong ứng dụng của tôi, thật hợp lý khi có một thực thể danh sách việc cần làm, vì đó là một đối tượng hợp lý mà mọi người sẽ muốn tham khảo khi thực hiện các tác vụ trong ứng dụng của tôi.

00:05:45.000 --> 00:05:51.000
Trong các ứng dụng khác, bạn có thể có các thực thể cho người dùng, tài liệu, đơn đặt hàng, v.v.

00:05:51.000 --> 00:05:56.000
Các thực thể từ ứng dụng của bạn có thể được đưa vào sử dụng trong ý định ứng dụng khi những ý định đó sử dụng các thực thể làm tham số đầu vào.

00:05:56.000 --> 00:06:01.000
Trong ứng dụng của tôi, ý định "SummarizeList" của tôi lấy một thực thể danh sách việc cần làm làm tham số.

00:06:01.000 --> 00:06:08.000
Để tìm các trường hợp thực thể phù hợp với các thông số của ý định ứng dụng, hệ thống dựa vào các truy vấn.

00:06:08.000 --> 00:06:14.000
Trong thời gian chạy, hệ thống khởi tạo và gọi các đối tượng truy vấn để tìm các thực thể dựa trên các tham số tìm kiếm khác nhau.

00:06:14.000 --> 00:06:18.000
Các truy vấn trả về các trường hợp của các thực thể có liên quan cho hệ thống.

00:06:18.000 --> 00:06:21.000
Hệ thống sau đó sử dụng các thực thể này khi chạy một ý định.

00:06:21.000 --> 00:06:29.000
Đối với ứng dụng của mình, tôi sẽ cần triển khai thực thể danh sách việc cần làm, cũng như một truy vấn để giúp hệ thống tìm kiếm các danh sách việc cần làm có liên quan.

00:06:29.000 --> 00:06:32.000
Quay lại phím tắt ứng dụng tóm tắt danh sách mà tôi đang làm.

00:06:32.000 --> 00:06:36.000
Tôi sẽ mở rộng việc triển khai ToDoList sơ khai của mình bằng cách phù hợp với AppEntity.

00:06:36.000 --> 00:06:43.000
Tôi sẽ triển khai thuộc tính typeDisplayRepresentation để hệ thống biết cách mô tả loại thực thể này.

00:06:43.000 --> 00:06:49.000
Tương tự như vậy, tôi sẽ triển khai displayRepresentation, vì vậy hệ thống biết cách mô tả trường hợp cụ thể này.

00:06:49.000 --> 00:06:57.000
Lưu ý rằng nếu tôi muốn thực thể được hiển thị ở cấp cao nhất trong Tiêu điểm hoặc Phím tắt, các thực thể của tôi cần có hình ảnh hoặc biểu tượng trong biểu diễn hiển thị.

00:06:57.000 --> 00:07:01.000
Và cuối cùng, tôi khai báo một truy vấn mặc định cho thực thể này.

00:07:01.000 --> 00:07:04.000
Tôi đã triển khai một truy vấn đơn giản cho thực thể danh sách việc cần làm của mình.

00:07:04.000 --> 00:07:09.000
Tối thiểu, truy vấn của tôi phải có khả năng truy xuất danh sách việc cần làm theo mã định danh của nó.

00:07:09.000 --> 00:07:11.000
Tôi cũng sẽ muốn triển khai các Thực thể được đề xuất.

00:07:11.000 --> 00:07:15.000
Điều này cho phép ứng dụng của tôi kiểm soát danh sách việc cần làm mà tôi nghĩ phù hợp nhất với người dùng của mình.

00:07:15.000 --> 00:07:20.000
Hệ thống sẽ sử dụng các thực thể được đề xuất này để tự động điền vào phím tắt ứng dụng của tôi.

00:07:20.000 --> 00:07:29.000
Chỉ với ý định của ứng dụng SummarizeList và các cấu trúc truy vấn và thực thể liên quan của nó, giờ đây tôi có thể sử dụng chức năng này từ bên trong ứng dụng Phím tắt và như một phần của Tự động hóa.

00:07:29.000 --> 00:07:31.000
Tuy nhiên, tôi vẫn chưa hoàn thành.

00:07:31.000 --> 00:07:36.000
Tôi muốn đảm bảo rằng chức năng này có thể truy cập được từ Siri và được giới thiệu đầy đủ trong Spotlight.

00:07:36.000 --> 00:07:40.000
Để làm điều này, tôi cần triển khai một phím tắt ứng dụng.

00:07:40.000 --> 00:07:43.000
Tôi sẽ bắt đầu bằng cách mở rộng AppShortcutsProvider mà tôi đã bắt đầu trước đó.

00:07:43.000 --> 00:07:46.000
Tôi sẽ thêm một Phím tắt Ứng dụng mới vào cái hiện có.

00:07:46.000 --> 00:07:51.000
Tôi cũng sẽ bao gồm một loạt các cụm từ nói sẽ gọi Phím tắt ứng dụng của tôi từ Siri.

00:07:51.000 --> 00:07:56.000
Lưu ý rằng thay vì sử dụng tên ứng dụng của tôi trực tiếp trong chuỗi, tôi đã sử dụng một mã thông báo đặc biệt.

00:07:56.000 --> 00:08:02.000
Điều này cho phép Siri không chỉ nhận ra tên chính của ứng dụng của tôi mà còn bất kỳ từ đồng nghĩa tên ứng dụng nào mà tôi đã xác định.

00:08:02.000 --> 00:08:06.000
Tôi cũng đã thêm tham số của ý định, "danh sách", vào một số cụm từ.

00:08:06.000 --> 00:08:14.000
Phím tắt ứng dụng hỗ trợ mở rộng các cụm từ kích hoạt với các tham số được xác định trước để người dùng có thể cung cấp tham số ngay lập tức khi gọi Siri.

00:08:14.000 --> 00:08:22.000
Trong trường hợp này, hệ thống sẽ gọi phương thức Thực thể được đề xuất trên ToDoListQuery của tôi để lấy mảng các giá trị có thể có.

00:08:22.000 --> 00:08:25.000
Lưu ý rằng tôi cũng đã cung cấp một cụm từ không có tham số "danh sách".

00:08:25.000 --> 00:08:33.000
Đây là một ý tưởng hay nói chung để nếu Phím tắt Ứng dụng của tôi được sử dụng mà không có danh sách, Siri hoặc Phím tắt có thể nhắc người dùng chọn một.

00:08:33.000 --> 00:08:38.000
Phím tắt ứng dụng tự động nhắc một giá trị trước khi thực hiện ý định nếu tham số không phải là tùy chọn.

00:08:38.000 --> 00:08:44.000
Đối với các tham số tùy chọn, bạn có thể nhắc thủ công một giá trị bên trong phương thức thực hiện của mình.

00:08:44.000 --> 00:08:49.000
Như trước đây, chúng ta cần bao gồm một tiêu đề ngắn và hình ảnh hệ thống.

00:08:49.000 --> 00:08:57.000
Chọn một tiêu đề ngắn và hình ảnh hệ thống tốt rất quan trọng, vì chúng là những thứ đầu tiên người dùng của tôi sẽ thấy khi họ tìm kiếm ứng dụng của tôi trong Spotlight.

00:08:57.000 --> 00:09:03.000
Phím tắt ứng dụng hỗ trợ các tham số có bộ giá trị tham số nổi tiếng cố định mà bạn có thể chỉ định trước cho Siri.

00:09:03.000 --> 00:09:09.000
Chúng không hỗ trợ các giá trị kết thúc mở như "Tìm kiếm ứng dụng của tôi cho X", trong đó X có thể là bất kỳ đầu vào nào từ người dùng.

00:09:09.000 --> 00:09:18.000
Bạn có thể sử dụng các tham số là App Enums, trong trường hợp đó, các giá trị được biết trước thời hạn hoặc bạn có thể sử dụng các tham số là App Entities để hoàn toàn năng động.

00:09:18.000 --> 00:09:24.000
Tất cả những gì bạn cần làm là trả về một danh sách các thực thể trong truy vấn của bạn thông qua các Thực thể được đề xuất, như trong ứng dụng của tôi.

00:09:24.000 --> 00:09:29.000
Và bước cuối cùng, tôi cần gọi updateAppShortcutParameters trên đối tượng AppShortcutsProvider của mình.

00:09:29.000 --> 00:09:38.000
Gọi phương thức này báo hiệu cho hệ thống rằng các tham số Phím tắt Ứng dụng của bạn đã thay đổi và sẽ khiến hệ thống gọi các Thực thể được đề xuất trên bất kỳ truy vấn liên quan nào để tìm nạp lại chúng.

00:09:38.000 --> 00:09:41.000
Tôi cần phải làm điều này mỗi khi danh sách việc cần làm của tôi thay đổi.

00:09:41.000 --> 00:09:45.000
Điều đó bao gồm các bổ sung và xóa, nhưng cũng có các đột biến như đổi tên.

00:09:45.000 --> 00:09:52.000
Ví dụ, nếu bất kỳ phần nào trong displayRepresentation của các thực thể của tôi đã thay đổi, tôi sẽ cần gọi phương thức này.

00:09:52.000 --> 00:09:56.000
Điều quan trọng cần nhớ là cũng gọi điều này khi ứng dụng của bạn ra mắt lần đầu tiên.

00:09:56.000 --> 00:10:03.000
Các cụm từ Phím tắt Ứng dụng tham chiếu các tham số thực thể sẽ không hoạt động cho đến khi hệ thống lần đầu tiên tìm nạp thành công các thực thể.

00:10:03.000 --> 00:10:07.000
Và đó là tất cả những gì tôi cần thực hiện cho Lối tắt Ứng dụng Danh sách Tóm tắt của mình.

00:10:07.000 --> 00:10:12.000
Bây giờ khi sử dụng ứng dụng của mình, tôi có thể nói, "Này, Siri. Tóm tắt danh sách cửa hàng tạp hóa của tôi với Demo."

00:10:12.000 --> 00:10:15.000
Và ngay lập tức nhận được phản hồi bằng lời nói và hình ảnh.

00:10:15.000 --> 00:10:22.000
Chỉ với một lượng nhỏ mã, giờ đây tôi đã giúp mọi người dễ dàng có được thông tin họ cần một cách nhanh chóng, liền mạch hơn.

00:10:22.000 --> 00:10:28.000
Khi bạn đã triển khai một Phím tắt ứng dụng chính thức tuyệt vời, điều quan trọng là phải giúp người dùng của bạn khám phá nó.

00:10:28.000 --> 00:10:36.000
Có hai cách mạnh mẽ để mọi người có thể khám phá Phím tắt ứng dụng của bạn trong suốt quá trình sử dụng thiết bị của họ: Spotlight và Siri Tips.

00:10:36.000 --> 00:10:40.000
Spotlight là một trong những cách phổ biến nhất mà mọi người khởi chạy ứng dụng trên iPhone và iPad.

00:10:40.000 --> 00:10:44.000
Phần Spotlight Top Hits không chỉ hiển thị các ứng dụng mà còn cả Phím tắt ứng dụng của chúng.

00:10:44.000 --> 00:10:48.000
Đây là một cách tuyệt vời để làm cho Phím tắt Ứng dụng của bạn có thể khám phá được.

00:10:48.000 --> 00:10:53.000
Mọi người có thể tìm thấy Phím tắt ứng dụng của bạn ngay lập tức khi họ tìm kiếm ứng dụng của bạn và ứng dụng của bạn là ứng dụng hàng đầu.

00:10:53.000 --> 00:10:59.000
Hoặc họ có thể tìm thấy chúng bằng cách tìm kiếm tiêu đề của chính Phím tắt ứng dụng, như "Danh sách tóm tắt" tại đây.

00:10:59.000 --> 00:11:06.000
Ngoài Spotlight, Siri Tip là một cách tuyệt vời để cho phép người dùng khám phá Phím tắt ứng dụng của bạn trong khi họ vẫn đang sử dụng ứng dụng của bạn.

00:11:06.000 --> 00:11:11.000
Ở đây tôi đã thêm một cái vào chế độ xem danh sách, vì đó giống như nơi mọi người sẽ thấy mẹo này hữu ích.

00:11:11.000 --> 00:11:18.000
Chế độ xem Mẹo có sẵn trong cả SwiftUI và UIKit, và chúng tôi đã cung cấp một số kiểu, vì vậy chúng trông tuyệt vời trong bất kỳ ứng dụng nào.

00:11:18.000 --> 00:11:23.000
Mẹo Siri được đặt tốt nhất theo ngữ cảnh để chúng có liên quan đến nội dung trên màn hình.

00:11:23.000 --> 00:11:31.000
Giữa Spotlight và Siri Tips, có nhiều cách để người dùng của bạn tìm hiểu về Phím tắt ứng dụng cả trong và ngoài ứng dụng của bạn.

00:11:31.000 --> 00:11:38.000
Nếu bạn muốn tìm hiểu sâu hơn về cả Ý định ứng dụng và Phím tắt ứng dụng, hãy xem hai phiên từ WWDC22.

00:11:38.000 --> 00:11:53.000
"Đi sâu vào Ý định ứng dụng" rất tuyệt vời để có cái nhìn tổng quan về khung Ý định ứng dụng và "Phím tắt ứng dụng triển khai với Ý định ứng dụng" khám phá nhiều trải nghiệm người dùng hơn có sẵn trong các Phím tắt ứng dụng, chẳng hạn như định hướng giữa nhiều giá trị tham số có thể có.

00:11:53.000 --> 00:12:03.000
Bây giờ tôi đã triển khai Phím tắt ứng dụng đầu tiên của mình, tôi muốn nói với bạn về những gì mới trong năm nay để giúp bạn tận dụng tối đa Phím tắt ứng dụng và tất cả các tính năng mới tuyệt vời của iOS 17.

00:12:03.000 --> 00:12:08.000
Trong iOS 17, chúng tôi đã cập nhật cách Ý định ứng dụng và Phím tắt ứng dụng được hiển thị trong ứng dụng Phím tắt.

00:12:08.000 --> 00:12:15.000
Thiết kế mới này cho phép mọi người tìm thấy ý định ứng dụng của bạn dễ dàng hơn và cho phép truy cập một lần chạm vào các hành động quan trọng nhất của ứng dụng.

00:12:15.000 --> 00:12:18.000
Phím tắt ứng dụng hiện cũng có vị trí nổi bật trong Spotlight.

00:12:18.000 --> 00:12:30.000
Không chỉ các Phím tắt Ứng dụng được sử dụng thường xuyên được hiển thị ở đây, mà chúng tôi còn đã thêm các API mới trong năm nay để làm cho Phím tắt Ứng dụng của bạn trở nên đặc biệt hơn về mặt hình ảnh và cũng giới thiệu khả năng Spotlight để làm nổi bật các thực thể quan tâm.

00:12:30.000 --> 00:12:38.000
Thiết lập Tự động hóa Phím tắt đã được thiết kế lại để dễ sử dụng hơn và Phím tắt Ứng dụng của bạn được giới thiệu, vì vậy mọi người có thể bắt đầu với chúng đơn giản hơn.

00:12:38.000 --> 00:12:48.000
Để tận dụng tất cả các tính năng mới tuyệt vời này và thu hút sự chú ý đến Phím tắt ứng dụng của bạn, chúng tôi đã giới thiệu các API mới xung quanh màu sắc, hình thu nhỏ thực thể và tiêu đề ngắn có biểu tượng.

00:12:48.000 --> 00:12:53.000
Các API mới này được yêu cầu cho tất cả các Phím tắt Ứng dụng và sẽ giúp ứng dụng của bạn thực sự nổi bật.

00:12:53.000 --> 00:12:55.000
Tôi sẽ bắt đầu với màu sắc.

00:12:55.000 --> 00:13:02.000
Bây giờ bạn có thể thiết lập hai màu trong danh sách Thông tin của ứng dụng mà hệ thống sẽ sử dụng khi ứng dụng của bạn xuất hiện trong Tiêu điểm hoặc Phím tắt.

00:13:02.000 --> 00:13:09.000
Cân nhắc áp dụng các màu tương tự như phong cách trong ứng dụng của bạn, vì vậy bạn có thể mang một chút trải nghiệm trong ứng dụng của mình vào phần còn lại của hệ thống.

00:13:09.000 --> 00:13:14.000
Tiếp theo, mỗi trường hợp thực thể trong ứng dụng của bạn hiện có thể có một hình thu nhỏ tùy chọn.

00:13:14.000 --> 00:13:18.000
Đây là một phần mở rộng của DisplayRepresentation API hiện có.

00:13:18.000 --> 00:13:28.000
Hình thu nhỏ của bạn có thể được cung cấp dưới dạng URL nơi hình ảnh cư trú, đối tượng Dữ liệu đại diện cho hình ảnh, tài nguyên hình ảnh đi kèm được đặt tên hoặc tên hình ảnh hệ thống.

00:13:28.000 --> 00:13:34.000
Chọn một hình ảnh độc đáo và đặc biệt cho các thực thể của bạn sẽ giúp làm cho vẻ ngoài Spotlight của bạn hấp dẫn hơn.

00:13:34.000 --> 00:13:38.000
Và cuối cùng, mọi phím tắt ứng dụng hiện nay đều yêu cầu một tiêu đề ngắn và hình ảnh hệ thống.

00:13:38.000 --> 00:13:43.000
Khi được hiển thị trong Tiêu điểm hoặc Phím tắt, tiêu đề ngắn và hình ảnh hệ thống được sử dụng để tạo kiểu cho hành động.

00:13:43.000 --> 00:13:47.000
Chọn một cái gì đó đặc biệt và đại diện cho những gì phím tắt ứng dụng của bạn làm.

00:13:47.000 --> 00:13:56.000
Ngoài tất cả các cách mới tuyệt vời của Phím tắt ứng dụng được giới thiệu trực quan trong hệ thống, chúng tôi cũng đã thực hiện những cải tiến lớn trong năm nay về cách Phím tắt ứng dụng có thể được sử dụng với Siri.

00:13:56.000 --> 00:14:04.000
Trong iOS 16, Siri sẽ chỉ nhận ra các cụm từ kích hoạt Phím tắt Ứng dụng của bạn nếu chúng được nói chính xác như bạn đã xác định chúng trong các tệp mã nguồn và chuỗi của mình.

00:14:04.000 --> 00:14:09.000
Nhưng những người sử dụng ứng dụng của bạn có thể sử dụng các từ và cụm từ khác nhau khi cố gắng truy cập Phím tắt ứng dụng của bạn.

00:14:09.000 --> 00:14:24.000
Ví dụ, trong ứng dụng của tôi, tôi đã cung cấp, "Tóm tắt danh sách cửa hàng tạp hóa của tôi bằng Demo", dưới dạng một cụm từ, vì vậy nó kích hoạt Phím tắt ứng dụng của tôi như mong đợi khi nói, nhưng một cái gì đó khá giống và hợp lý như, "Hãy cho tôi biết tóm tắt danh sách hàng tạp hóa của tôi với

00:14:24.000 --> 00:14:29.000
Trong iOS 17, chúng tôi cung cấp cho bạn khả năng nói tự nhiên hơn để kích hoạt Phím tắt ứng dụng của bạn.

00:14:29.000 --> 00:14:36.000
Điều này tận dụng lợi thế của việc học máy trên thiết bị để cho phép các cụm từ tương tự như những cụm từ bạn đã cung cấp trong Phím tắt ứng dụng của mình cũng hoạt động.

00:14:36.000 --> 00:14:41.000
Điều này được cung cấp bởi một Chỉ số Tương đồng Ngữ nghĩa mới.

00:14:41.000 --> 00:14:49.000
Với tính năng kết hợp linh hoạt mới này, mọi người có thể sử dụng các cách tự nhiên hơn để gọi các phím tắt ứng dụng và bạn không cần phải cung cấp mọi cụm từ khác nhau có thể.

00:14:49.000 --> 00:14:53.000
Và quan trọng nhất, không cần thay đổi mã để có được sự phù hợp linh hoạt.

00:14:53.000 --> 00:14:59.000
Chỉ cần xây dựng lại ứng dụng của bạn với Xcode 15 và các cụm từ tương tự như những cụm từ bạn đã có sẽ hoạt động.

00:14:59.000 --> 00:15:11.000
Nếu bạn chưa sẵn sàng áp dụng kết hợp linh hoạt, bạn có thể chọn không tham gia bằng cách tắt cài đặt xây dựng "Bật khớp linh hoạt phím tắt ứng dụng" và hoàn nguyên chỉ khớp chính xác trên các cụm từ phím tắt ứng dụng của bạn.

00:15:11.000 --> 00:15:17.000
Để giúp mở rộng hơn nữa tính tự nhiên của các cụm từ Phím tắt Ứng dụng, cũng có một API từ đồng nghĩa mới.

00:15:17.000 --> 00:15:24.000
Đây là một bổ sung nhỏ cho DisplayRepresentation API để bạn có thể xác định các từ đồng nghĩa bổ sung cho các trường hợp AppEntities và AppEnum.

00:15:24.000 --> 00:15:30.000
Điều này sẽ mở rộng hơn nữa phạm vi tiếp cận của Phím tắt Ứng dụng của bạn bằng cách giúp bạn có thể nói chuyện tự nhiên hơn với Siri.

00:15:30.000 --> 00:15:37.000
Ví dụ, trong ứng dụng của tôi, bây giờ tôi có thể tham khảo danh sách của mình bằng các tên thay thế ngay trong cụm từ kích hoạt.

00:15:37.000 --> 00:15:42.000
Các từ đồng nghĩa cũng hoạt động nếu Siri nhắc tôi một danh sách, nếu tôi không chỉ định trước một danh sách.

00:15:42.000 --> 00:15:50.000
Những từ đồng nghĩa này được liên kết với từng trường hợp của một thực thể và nếu chúng thay đổi, bạn nên gọi lại updateAppShortcutParameters.

00:15:50.000 --> 00:15:54.000
Để hỗ trợ Kết hợp Linh hoạt, cũng có một API Cụm từ Phủ định mới.

00:15:54.000 --> 00:16:01.000
Bạn chỉ cần sử dụng cái này nếu bạn thấy rằng các cụm từ không thuộc về Phím tắt Ứng dụng của bạn dù sao cũng gọi ứng dụng của bạn không chính xác.

00:16:01.000 --> 00:16:10.000
Trong trường hợp này, "Gửi bản tóm tắt Demo đến cửa hàng tạp hóa của tôi", có thể kích hoạt không chính xác Phím tắt ứng dụng của tôi, vì vậy tôi sẽ đưa điều này vào các cụm từ phủ định của mình.

00:16:10.000 --> 00:16:17.000
Và cuối cùng, việc thử nghiệm Phím tắt ứng dụng với Siri có thể chậm, yêu cầu bạn xây dựng và khởi chạy ứng dụng của mình và nói chuyện với Siri mỗi lần.

00:16:17.000 --> 00:16:22.000
Điều này đặc biệt tốn thời gian nếu bạn muốn kiểm tra ở nhiều ngôn ngữ.

00:16:22.000 --> 00:16:30.000
Để giúp tác giả Phím tắt Ứng dụng nhanh hơn và dễ dàng hơn, chúng tôi đang giới thiệu một công cụ mới mạnh mẽ trong Xcode được gọi là Xem trước Phím tắt Ứng dụng.

00:16:30.000 --> 00:16:35.000
Bạn nên lưu ý rằng Bản xem trước Phím tắt Ứng dụng chỉ khả dụng khi chạy Xcode 15 trên macOS Sonoma.

00:16:35.000 --> 00:16:39.000
Hãy cùng xem bản demo.

00:16:39.000 --> 00:16:43.000
Ở đây tôi có dự án cho ứng dụng Demo của mình, nơi trước đây tôi đã triển khai Phím tắt ứng dụng.

00:16:43.000 --> 00:16:51.000
Tôi có thể kiểm tra Phím tắt ứng dụng của mình bằng cách khởi chạy ứng dụng của mình và nói chuyện với Siri, nhưng tôi muốn chỉ cho bạn cách nhanh hơn để xem trước nhanh hiệu ứng của cụm từ.

00:16:51.000 --> 00:16:55.000
Tính năng mới này có thể được tìm thấy trong Sản phẩm, Xem trước Phím tắt Ứng dụng.

00:16:55.000 --> 00:17:01.000
Nó yêu cầu xây dựng ứng dụng của tôi trước để Chỉ số Tương tự Ngữ nghĩa có cơ hội tạo ra.

00:17:01.000 --> 00:17:09.000
Sau khi xây dựng, tôi có thể chỉ cần chọn ứng dụng của mình ở bên trái và ngay lập tức bắt đầu nhập các cụm từ mà tôi nghĩ mọi người có thể nói chuyện với Siri.

00:17:09.000 --> 00:17:13.000
Hãy thử một vài cụm từ mà tôi biết sẽ hoạt động, vì đó là cụm từ tôi đã định nghĩa trong mã của mình.

00:17:13.000 --> 00:17:16.000
Tóm tắt danh sách mua sắm với Demo.

00:17:16.000 --> 00:17:21.000
Điều đó khớp chính xác với ý định SummarizeList của tôi.

00:17:21.000 --> 00:17:25.000
Hãy thử một cụm từ tương tự như cụm từ đầu tiên, nhưng không phải là cụm từ tôi đã cung cấp.

00:17:25.000 --> 00:17:30.000
Đưa cho tôi bản tóm tắt danh sách mua sắm với Demo.

00:17:30.000 --> 00:17:37.000
Nhờ Kết hợp linh hoạt, cụm từ này cũng khớp với cùng một mục đích mà tôi không cần phải làm bất kỳ công việc bổ sung nào.

00:17:37.000 --> 00:17:43.000
Bây giờ hãy thử với cụm từ thứ ba có thể hơi quá khác một chút để có thể nhận ra một cách đáng tin cậy.

00:17:43.000 --> 00:17:46.000
Đưa cho tôi ý chính của danh sách mua sắm với Demo.

00:17:46.000 --> 00:17:49.000
Điều này không khớp với bất kỳ Phím tắt Ứng dụng nào trong ứng dụng của tôi.

00:17:49.000 --> 00:18:01.000
Tôi có thể nhanh chóng thêm một cụm từ mới vào Phím tắt ứng dụng của mình, xây dựng lại và kiểm tra lại cụm từ đó.

00:18:01.000 --> 00:18:05.000
Đưa cho tôi ý chính của danh sách mua sắm với Demo.

00:18:05.000 --> 00:18:10.000
Và cụm từ mới khớp, và tôi có thể xác minh điều đó mà không cần chạy ứng dụng của mình.

00:18:10.000 --> 00:18:13.000
Bây giờ tôi muốn kiểm tra ứng dụng của mình bằng tiếng Quan Thoại.

00:18:13.000 --> 00:18:19.000
Thay vì chuyển đổi ngôn ngữ điện thoại của tôi, chạy ứng dụng của tôi và hỏi Siri, tôi có thể chỉ cần sử dụng bộ chọn ngôn ngữ trong Xem trước.

00:18:19.000 --> 00:18:22.000
Điều này cho phép tôi ngay lập tức kiểm tra một cụm từ mới.

00:18:22.000 --> 00:18:32.000
Và ở đó, cụm từ tiếng Quan Thoại hoạt động như mong đợi, tất cả mà tôi không cần sử dụng thiết bị phát triển.

00:18:32.000 --> 00:18:41.000
Xem trước phím tắt ứng dụng là một giải pháp thay thế nhanh hơn để kiểm tra thủ công cách Phím tắt ứng dụng của bạn hoạt động với Siri và nó sẽ giúp việc phát triển Phím tắt ứng dụng của bạn dễ dàng hơn.

00:18:41.000 --> 00:18:48.000
Trong iOS 17, chúng tôi cũng đang cải thiện cách bạn có thể bản địa hóa các cụm từ kích hoạt Phím tắt Ứng dụng của mình, cùng với định dạng tệp Danh mục Chuỗi mới.

00:18:48.000 --> 00:18:53.000
Trước đây, bạn bị giới hạn về số lượng cụm từ bạn có thể có cho mỗi Phím tắt ứng dụng ở mỗi ngôn ngữ.

00:18:53.000 --> 00:19:00.000
Ví dụ, nếu bạn xác định năm cụm từ cho một Phím tắt Ứng dụng trong mã Swift của mình, bạn sẽ bị giới hạn ở năm cụm từ ở mỗi ngôn ngữ.

00:19:00.000 --> 00:19:08.000
Trong iOS 17, với sự trợ giúp của String Catalogs, chúng tôi đang dỡ bỏ giới hạn này để bạn có thể có nhiều cụm từ cần thiết một cách tự nhiên cho mỗi và mọi ngôn ngữ.

00:19:08.000 --> 00:19:13.000
Bạn nên lưu ý rằng tính năng này chỉ khả dụng cho các ứng dụng nhắm mục tiêu iOS 17 sau này.

00:19:13.000 --> 00:19:16.000
Tận dụng tính năng mới này thật đơn giản.

00:19:16.000 --> 00:19:29.000
Nếu bạn chưa áp dụng Phím tắt ứng dụng trong ứng dụng của mình trước năm nay, chỉ cần tạo một Danh mục Chuỗi mới có tên là "AppShortcuts".

00:19:29.000 --> 00:19:37.000
Sau khi xây dựng lại ứng dụng của bạn, bạn sẽ thấy các cụm từ bạn đã xác định trong AppShortcutsProvider được điền tự động.

00:19:37.000 --> 00:19:45.000
Khi bạn chỉnh sửa mã nguồn Swift của mình và xây dựng lại, định dạng Danh mục Chuỗi mới sẽ tự động theo kịp bất kỳ cụm từ nào bạn thêm hoặc xóa.

00:19:45.000 --> 00:19:55.000
Ngoài ra, nếu bạn đã áp dụng Phím tắt ứng dụng trước năm nay, chỉ cần di chuyển tệp AppShortcuts.strings của bạn sang Danh mục Chuỗi.

00:19:55.000 --> 00:19:59.000
Nhấp chuột phải vào nó trong Xcode và làm theo trợ lý di chuyển.

00:19:59.000 --> 00:20:08.000
Sau khi hoàn thành và xây dựng lại, bạn sẽ thấy các cụm từ của mình được điền tự động, giữ nguyên bất kỳ bản địa hóa nào bạn có thể đã thực hiện.

00:20:08.000 --> 00:20:14.000
Sau khi chuyển sang Danh mục chuỗi, bạn có thể thêm các cụm từ bổ sung cho từng ngôn ngữ mà không bị giới hạn.

00:20:14.000 --> 00:20:20.000
Kết hợp linh hoạt, Xem trước Phím tắt Ứng dụng mới và Danh mục Chuỗi sẽ làm cho Phím tắt Ứng dụng tốt hơn nhiều với Siri.

00:20:20.000 --> 00:20:26.000
Dưới đây là một số mẹo để làm cho các cụm từ kích hoạt của bạn trở nên tuyệt vời: Điều quan trọng là chọn các cụm từ đáng nhớ.

00:20:26.000 --> 00:20:34.000
Người dùng ứng dụng của bạn sẽ có rất nhiều ứng dụng khác trên điện thoại của họ hỗ trợ Phím tắt ứng dụng và trên thực tế, họ sẽ gặp khó khăn trong việc nhớ chính xác cách diễn đạt các phím tắt của mình.

00:20:34.000 --> 00:20:37.000
Tận dụng các từ đồng nghĩa tên ứng dụng.

00:20:37.000 --> 00:20:41.000
Điều này sẽ giúp mở rộng hơn nữa cách người dùng của bạn có thể gọi Phím tắt Ứng dụng của bạn.

00:20:41.000 --> 00:20:45.000
Tránh sử dụng các khóa giữ chỗ không thể đọc được của con người trong mã nguồn Swift của bạn.

00:20:45.000 --> 00:20:52.000
Nếu bạn tham khảo bất kỳ tham số nào trong cụm từ của mình, chúng phải được xác định bởi các trình giữ chỗ chuỗi nội suy mà tôi đã trình bày trước đó.

00:20:52.000 --> 00:20:58.000
Điều này là cần thiết để thời gian chạy tải và lấp đầy các trình giữ chỗ này một cách chính xác trong thời gian chạy.

00:20:58.000 --> 00:21:04.000
Ngoài ra, có một số hạn chế đối với Phím tắt ứng dụng mà bạn nên biết khi bạn đang áp dụng chúng trong ứng dụng của mình.

00:21:04.000 --> 00:21:07.000
Ứng dụng của bạn có thể có tối đa mười Phím tắt Ứng dụng.

00:21:07.000 --> 00:21:11.000
Bạn có thể có tối đa 1.000 cụm từ kích hoạt cho toàn bộ ứng dụng của mình.

00:21:11.000 --> 00:21:14.000
Lưu ý rằng điều này bao gồm tất cả các kết hợp các tham số.

00:21:14.000 --> 00:21:20.000
Vì vậy, ví dụ, một tham số với mười giá trị có thể sẽ mở rộng số lượng cụm từ hiệu quả theo hệ số mười.

00:21:20.000 --> 00:21:26.000
Bạn có thể tránh đạt đến giới hạn này bằng cách đảm bảo rằng bất kỳ tham số nào trong cụm từ không có quá nhiều giá trị có thể có.

00:21:26.000 --> 00:21:33.000
Thử nghiệm với Bản xem trước Phím tắt Ứng dụng cũng sẽ giúp đảm bảo bạn không xác định các cụm từ dư thừa có thể được kết hợp linh hoạt bao phủ.

00:21:33.000 --> 00:21:37.000
Tất cả các cụm từ kích hoạt phải chứa tên ứng dụng của bạn hoặc từ đồng nghĩa tên ứng dụng.

00:21:37.000 --> 00:21:44.000
Để có hướng dẫn về cách xác định các từ đồng nghĩa tên ứng dụng bổ sung, hãy tham khảo liên kết được liên kết với video này.

00:21:44.000 --> 00:21:48.000
Các phím tắt ứng dụng mở ứng dụng hiện đủ điều kiện để được hiển thị trong Spotlight.

00:21:48.000 --> 00:21:55.000
Nếu bạn có ý định ứng dụng mở ứng dụng của mình với một thực thể, bạn nên tuân thủ ý định ứng dụng đó với giao thức OpenIntent.

00:21:55.000 --> 00:22:05.000
Bây giờ tôi đã xem xét cách tạo trải nghiệm Phím tắt ứng dụng tuyệt vời, hãy nói về cách bạn có thể mang lại trải nghiệm tuyệt vời tương tự này trên nhiều loại thiết bị hơn iPhone.

00:22:05.000 --> 00:22:11.000
Phím tắt ứng dụng hiện hoạt động trên Apple Watch, nhưng bạn nên lưu ý một số hạn chế để có được trải nghiệm tốt nhất có thể.

00:22:11.000 --> 00:22:16.000
Phím tắt ứng dụng trên Apple Watch phải đến từ ứng dụng watchOS được cài đặt trên chính thiết bị.

00:22:16.000 --> 00:22:20.000
Các phím tắt ứng dụng từ thiết bị iOS được ghép nối không thể chạy trên Đồng hồ.

00:22:20.000 --> 00:22:29.000
Điều này có nghĩa là nếu bạn đã cài đặt ứng dụng iOS trên iPhone, nhưng không phải ứng dụng watchOS tương ứng, Phím tắt ứng dụng của bạn sẽ không hoạt động từ watchOS.

00:22:29.000 --> 00:22:35.000
Kết hợp linh hoạt với Siri không khả dụng trên Apple Watch, vì vậy các cụm từ phải được nói chính xác.

00:22:35.000 --> 00:22:43.000
Hỗ trợ Apple Watch đã được giới thiệu trong watchOS 9.2 và có sẵn trên tất cả các thiết bị chạy phiên bản đó trở lên.

00:22:43.000 --> 00:22:46.000
Các phím tắt ứng dụng hiện cũng có thể được phát hiện trên Apple Watch.

00:22:46.000 --> 00:22:53.000
Cũng giống như trên iOS, ứng dụng Phím tắt trên watchOS nổi bật với các Phím tắt Ứng dụng có sẵn trên thiết bị.

00:22:53.000 --> 00:22:56.000
Thứ hai, Phím tắt ứng dụng hiện được hỗ trợ trên HomePod.

00:22:56.000 --> 00:23:02.000
Điều này yêu cầu ứng dụng hỗ trợ Phím tắt ứng dụng được cài đặt trên thiết bị iOS hoặc iPadOS đồng hành.

00:23:02.000 --> 00:23:10.000
Không giống như chạy trên iOS hoặc iPadOS, nơi Phím tắt ứng dụng có thể dẫn đến khởi chạy ứng dụng, trên HomePod, Phím tắt ứng dụng có thể hoàn toàn không khởi chạy ứng dụng.

00:23:10.000 --> 00:23:18.000
Ví dụ, chỉ cần có ứng dụng Demo trên iPhone của mình, tôi có thể nói với HomePod của mình, "Này, Siri. Tóm tắt danh sách cửa hàng tạp hóa của tôi với Demo."

00:23:18.000 --> 00:23:25.000
Hỗ trợ HomePod cho Phím tắt Ứng dụng có sẵn từ phiên bản 16.2 trở lên.

00:23:25.000 --> 00:23:29.000
Khi thiết kế Phím tắt ứng dụng cho HomePod, hãy cân nhắc rằng nó là một thiết bị chỉ có giọng nói.

00:23:29.000 --> 00:23:36.000
Đảm bảo rằng bạn đang trả lại hộp thoại rõ ràng và súc tích để Siri nói, vì sẽ không có bất kỳ hình ảnh tương ứng nào.

00:23:36.000 --> 00:23:42.000
Lớp IntentDialog có một trình khởi tạo nhận cả chuỗi "đầy đủ" và "hỗ trợ".

00:23:42.000 --> 00:23:47.000
HomePod sẽ sử dụng hộp thoại "đầy đủ", trong khi các thiết bị trực quan như iPhone sẽ sử dụng hộp thoại "hỗ trợ" thay thế.

00:23:47.000 --> 00:23:54.000
Điều này cho phép bạn ngắn gọn hơn khi người dùng có thể tham chiếu đầu ra trực quan, nhưng vẫn mô tả đầy đủ nếu không có màn hình.

00:23:54.000 --> 00:24:05.000
Để được hướng dẫn thêm về cách thiết kế Phím tắt ứng dụng, bao gồm các trường hợp chỉ sử dụng bằng giọng nói, hãy xem phiên "Thiết kế phím tắt ứng dụng" từ WWDC22.

00:24:05.000 --> 00:24:08.000
Tôi muốn kết thúc bằng cách nhắc lại một số điều quan trọng rút ra.

00:24:08.000 --> 00:24:16.000
Phím tắt ứng dụng giúp nâng cao khả năng hiển thị các tính năng của ứng dụng của bạn trên toàn hệ thống và giảm ma sát đối với việc sử dụng theo thói quen cho ứng dụng của bạn.

00:24:16.000 --> 00:24:26.000
Phím tắt ứng dụng dễ khám phá hơn bao giờ hết, với vị trí nổi bật ngay trong Spotlight giúp thúc đẩy việc sử dụng ứng dụng của bạn nhiều hơn và nhiều tùy chọn kiểu dáng hơn để giúp ứng dụng của bạn nổi bật.

00:24:26.000 --> 00:24:33.000
Phím tắt ứng dụng với Siri được cải thiện đáng kể với Khớp linh hoạt, cho phép người dùng kích hoạt Phím tắt ứng dụng bằng giọng nói của họ dễ dàng hơn.

00:24:33.000 --> 00:24:40.000
Và việc phát triển và thử nghiệm Phím tắt Ứng dụng nhanh hơn và dễ dàng hơn với công cụ Xem trước Phím tắt Ứng dụng mới trong Xcode.

00:24:40.000 --> 00:24:47.000
Để tìm hiểu sâu hơn về Ý định ứng dụng và Phím tắt ứng dụng, có hai phiên nữa từ năm nay bạn nên kiểm tra.

00:24:47.000 --> 00:24:51.000
Với tất cả những cải tiến này, tôi nghĩ Phím tắt ứng dụng sẽ rất phù hợp với ứng dụng và người dùng của bạn.

00:24:51.000 --> 00:24:54.000
Tôi rất mong được xem tất cả các Phím tắt Ứng dụng tuyệt vời mà bạn sẽ tạo.

00:24:54.000 --> 23:59:59.000
♪ ♪

