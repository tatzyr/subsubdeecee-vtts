WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
Christopher: Xin chào và chào mừng!

00:00:11.000 --> 00:00:15.000
Tên tôi là Christopher, và tôi là một kỹ sư phần mềm trong nhóm ScreenCaptureKit.

00:00:15.000 --> 00:00:24.000
Tôi sẽ có sự tham gia của đồng nghiệp Natalie Lindsay, và cùng nhau chúng ta sẽ giới thiệu các tính năng mới sẽ nâng cao khả năng chụp màn hình trong các ứng dụng của bạn.

00:00:24.000 --> 00:00:31.000
ScreenCaptureKit được giới thiệu trong macOS 12.3 để giúp bạn tạo trải nghiệm chia sẻ màn hình cho ứng dụng của mình.

00:00:31.000 --> 00:00:43.000
ScreenCaptureKit cung cấp các API cho phép bạn tùy chỉnh nội dung bạn muốn chia sẻ, với các điều khiển phù hợp với nhu cầu ứng dụng của bạn, tất cả đều có thể được áp dụng động cho các luồng của bạn.

00:00:43.000 --> 00:00:54.000
Khung cung cấp nội dung chất lượng cao với trọng tâm là hiệu suất lên đến độ phân giải gốc và tốc độ khung hình của màn hình của bạn, tất cả trong khi vẫn có quyền riêng tư với các biện pháp bảo vệ toàn cầu.

00:00:54.000 --> 00:00:59.000
Năm nay, ScreenCaptureKit cung cấp một số API dành cho nhà phát triển tích hợp với các tính năng mới của macOS.

00:00:59.000 --> 00:01:08.000
Presenter Overlay là một tính năng cho phép mọi người làm cho việc chia sẻ màn hình và thuyết trình của họ trở nên cá nhân hơn bằng cách nhúng mình vào nội dung đã chụp.

00:01:08.000 --> 00:01:14.000
Với bộ chọn chia sẻ màn hình mới, bạn sẽ có thể tích hợp trải nghiệm toàn hệ thống cho những gì bạn chụp trong chia sẻ màn hình của mình.

00:01:14.000 --> 00:01:24.000
Cuối cùng, chụp màn hình không chỉ dành cho các luồng trực tiếp và năm nay, có một API hoàn toàn mới cho phép bạn chụp ảnh màn hình độ nét cao của bất kỳ nội dung nào bạn chọn.

00:01:24.000 --> 00:01:28.000
Mọi người tương tác với nhau mỗi ngày, trên toàn thế giới.

00:01:28.000 --> 00:01:32.000
Những tương tác này là nơi chúng ta chia sẻ suy nghĩ và ý tưởng của mình và giải quyết các vấn đề quan trọng.

00:01:32.000 --> 00:01:35.000
Họ vừa chuyên nghiệp vừa mang tính cá nhân.

00:01:35.000 --> 00:01:40.000
Cuối cùng, các ứng dụng của bạn có thể hoạt động liền mạch với một hiệu ứng video mới được gọi là Presenter Overlay.

00:01:40.000 --> 00:01:50.000
Khi chia sẻ nội dung, Presenter Overlay nâng cao sự hiện diện của người thuyết trình bằng cách bao gồm người thuyết trình lên trên nội dung được chia sẻ, thêm dấu ấn cá nhân cho các cuộc gọi từ xa hiệu quả hơn.

00:01:50.000 --> 00:02:03.000
Lớp phủ nhỏ đặt người thuyết trình vào một cửa sổ có thể di chuyển, nhờ vào thuật toán phân đoạn nâng cao, trong khi lớp phủ lớn tách khuôn mặt và thân của người thuyết trình khỏi nền và sau đó xếp lớp nội dung màn hình giữa chúng để có hiệu ứng nhập vai hơn.

00:02:03.000 --> 00:02:08.000
Presenter Overlay có sẵn với mọi ứng dụng sử dụng ScreenCaptureKit.

00:02:08.000 --> 00:02:21.000
Đối với mỗi SCStream được tạo, ScreenCaptureKit sẽ thông báo cho bộ chọn chia sẻ màn hình và bản xem trước trực tiếp với các điều khiển cho luồng sẽ được hiển thị trong mục thanh menu Video mới.

00:02:21.000 --> 00:02:29.000
Thanh menu Video sẽ hiển thị mọi ứng dụng có luồng hoạt động và sẽ hiển thị bản xem trước trực tiếp các luồng được liên kết với bất kỳ ứng dụng nào.

00:02:29.000 --> 00:02:36.000
Từ thanh menu này, người ta sẽ có thể kiểm soát nội dung luồng bằng cách trình bày bộ chọn chia sẻ màn hình trên toàn luồng.

00:02:36.000 --> 00:02:43.000
Đây cũng là nơi Lớp phủ Người thuyết trình được bật, nhúng khung máy ảnh vào luồng nội dung.

00:02:43.000 --> 00:02:49.000
Và người ta cũng có thể sử dụng điều này để kiểm soát luồng, như thay thế hoặc kết thúc chia sẻ màn hình.

00:02:49.000 --> 00:02:55.000
Có những tính năng hữu ích khác ở đây để tùy chỉnh hiệu ứng máy ảnh và micrô.

00:02:55.000 --> 00:03:01.000
Mọi ứng dụng sử dụng ScreenCaptureKit và máy ảnh cùng nhau sẽ tự động có các tính năng này hoạt động.

00:03:01.000 --> 00:03:06.000
Hiện tại, một luồng có các khung nội dung được gửi đến quy trình của nó từ ScreenCaptureKit.

00:03:06.000 --> 00:03:15.000
Bây giờ, khi một ứng dụng bắt đầu sử dụng máy ảnh trong khi phát trực tuyến đang hoạt động, Presenter Overlay được cung cấp trong mục menu video.

00:03:15.000 --> 00:03:22.000
Sau khi được bật, ScreenCaptureKit sẽ lấy máy ảnh và áp dụng kết xuất cho luồng đã chọn mà ứng dụng của bạn đang chạy.

00:03:22.000 --> 00:03:26.000
Bạn sẽ tự động nhận được các khung tổng hợp từ luồng hoạt động.

00:03:26.000 --> 00:03:31.000
Vậy điều gì sẽ xảy ra nếu tôi muốn biết rõ ràng khi nào Lớp phủ Người thuyết trình đã được áp dụng?

00:03:31.000 --> 00:03:35.000
Hãy bắt đầu với việc tạo một luồng mới và thêm bản thân làm đại diện.

00:03:35.000 --> 00:03:42.000
Sau đó, bạn sẽ triển khai lệnh gọi lại đại diện mới trên SCStream, outputEffectDidStart.

00:03:42.000 --> 00:03:46.000
Đây là cách bạn sẽ được thông báo khi Presenter Overlay đã được áp dụng.

00:03:46.000 --> 00:03:51.000
Khi được thông báo, bạn muốn kiểm tra xem hiệu ứng đã bắt đầu hay dừng lại.

00:03:51.000 --> 00:04:00.000
Presenter Overlay là một tính năng hệ thống macOS mới và có một số cân nhắc mà ứng dụng của bạn có thể muốn thực hiện khi lớp phủ được áp dụng.

00:04:00.000 --> 00:04:06.000
Khi Presenter Overlay được bật, AVCaptureSession sẽ không gửi luồng camera trực tiếp điển hình.

00:04:06.000 --> 00:04:10.000
Đó là bởi vì máy ảnh của bạn sẽ được sử dụng trực tiếp trong lớp phủ.

00:04:10.000 --> 00:04:15.000
Đây sẽ là thời điểm tuyệt vời để cập nhật giao diện người dùng ứng dụng để giải thích cho sự thay đổi này.

00:04:15.000 --> 00:04:23.000
Ví dụ, các ứng dụng hội nghị truyền hình có thể muốn điều chỉnh đồng bộ hóa âm thanh và video của bạn để tính đến nội dung được chia sẻ được trộn với máy ảnh.

00:04:23.000 --> 00:04:28.000
Bạn cũng có thể muốn ẩn ô máy ảnh của người thuyết trình để có giao diện tối ưu hơn.

00:04:28.000 --> 00:04:35.000
Presenter Overlay là một tính năng máy ảnh và video, vì vậy ứng dụng của bạn nên tối ưu hóa cho tốc độ khung hình cao hơn.

00:04:35.000 --> 00:04:47.000
Ngoài Presenter Overlay, bạn cũng có thể tận dụng công cụ chọn chia sẻ màn hình mới trên toàn hệ thống, cho phép ứng dụng của bạn tích hợp hoàn toàn với một số tính năng tập trung vào cách mọi người sẽ chọn nội dung họ muốn chia sẻ.

00:04:47.000 --> 00:04:51.000
Đây là những cấu trúc chung mà bạn sử dụng để tạo luồng.

00:04:51.000 --> 00:04:57.000
Hiện tại, bạn gọi vào SCSharableContent để nhận tất cả nội dung màn hình có sẵn mà bạn có thể chia sẻ.

00:04:57.000 --> 00:05:00.000
Bạn sẽ sử dụng nó để tạo ra một SCContentFilter.

00:05:00.000 --> 00:05:05.000
SCContentFilter là những gì bạn sẽ sử dụng để xác định những gì bạn sẽ chụp.

00:05:05.000 --> 00:05:13.000
Hiện tại, bạn xây dựng nó từ SCSharableContent nhưng, mới trong năm nay, bạn sẽ có thể nhận được bộ lọc nội dung thông qua bộ chọn.

00:05:13.000 --> 00:05:16.000
Có hai cách mà người chọn sẽ tạo ra SCContentFilters.

00:05:16.000 --> 00:05:20.000
Đầu tiên, nội dung mong muốn có thể được chia sẻ thông qua bộ chọn hệ thống.

00:05:20.000 --> 00:05:25.000
Thứ hai, nội dung có thể được chọn ngay từ cửa sổ đang mở.

00:05:25.000 --> 00:05:30.000
Trong cả hai trường hợp, hệ thống chia sẻ SCContentFilter với ứng dụng của bạn.

00:05:30.000 --> 00:05:34.000
Nhưng làm thế nào để bạn đưa các bộ lọc nội dung mới vào ứng dụng của mình?

00:05:34.000 --> 00:05:38.000
Bằng cách sử dụng API mới, SCContentSharingPicker.

00:05:38.000 --> 00:05:51.000
SCContentSharingPicker hoạt động như giao diện giữa ứng dụng của bạn và hệ điều hành, cung cấp các cuộc gọi lại đại diện cho ứng dụng của bạn với các yêu cầu luồng mới, bộ lọc nội dung mới và cập nhật cho các luồng và bộ lọc nội dung hiện tại.

00:05:51.000 --> 00:06:00.000
SCContentSharingPicker có bộ chọn nội dung cấp hệ thống tích hợp cho phép người ta chọn nội dung dựa trên cửa sổ, ứng dụng hoặc thậm chí hiển thị.

00:06:00.000 --> 00:06:16.000
Cho dù người ta bắt đầu lựa chọn nội dung thông qua một nút trong ứng dụng của bạn, thanh menu Video mới hay trực tiếp từ cửa sổ, ứng dụng của bạn có thể tận dụng SCContentSharingPicker để thêm, xóa hoặc thay thế lựa chọn đang hoạt động cho bất kỳ luồng nào đang diễn ra của bạn.

00:06:16.000 --> 00:06:24.000
Nó cũng có một cuộc gọi lại yêu cầu luồng tích hợp cho phép ứng dụng của bạn biết khi nào một luồng mới được yêu cầu.

00:06:24.000 --> 00:06:31.000
Và cuối cùng, nó đi kèm với tùy chỉnh theo luồng, nơi bạn có thể xác định cách trải nghiệm hệ thống được áp dụng cho mỗi luồng.

00:06:31.000 --> 00:06:44.000
Các cấu trúc để lấy bộ lọc cho SCStream bây giờ đi từ việc sử dụng SCSharableContent đến sử dụng giao diện chọn hệ thống với singleton SCContentSharingPicker để chuyển lại SCContentFilter.

00:06:44.000 --> 00:06:50.000
Hãy để tôi chỉ cho bạn cách ứng dụng của bạn dễ dàng tận dụng bộ chọn chia sẻ màn hình mới này.

00:06:50.000 --> 00:06:58.000
Bạn sẽ bắt đầu với ví dụ được chia sẻ cho SCContentSharingPicker và thêm self làm người quan sát để bạn có thể nhận được tất cả các cuộc gọi lại lớp thích hợp.

00:06:58.000 --> 00:07:03.000
Để hệ thống nhận ra phiên bản chọn của tôi, hãy đặt nó là hoạt động.

00:07:03.000 --> 00:07:11.000
Sau khi hoạt động, hệ thống sẽ biết về bộ chọn của bạn và ứng dụng của bạn sẽ được đưa vào Giao diện người dùng Hệ thống và mọi người sẽ có thể tương tác với nó.

00:07:11.000 --> 00:07:21.000
Bạn muốn tạo một luồng nơi mọi người được phép chọn cửa sổ thông qua bộ chọn, vì vậy bạn sẽ gọi trình chọn phương thức singleton.hiện tại và chuyển bằng không và một kiểu bộ chọn mà bạn muốn trình bày.

00:07:21.000 --> 00:07:28.000
Khi mọi người nhấn nút giao diện người dùng của bạn, bộ chọn sẽ được hiển dụng, cho phép họ chọn các cửa sổ mà họ muốn chụp.

00:07:28.000 --> 00:07:34.000
Sau khi nội dung đó đã được chọn, bạn sẽ được thông báo qua cuộc gọi lại của người quan sát về một bộ lọc mới.

00:07:34.000 --> 00:07:40.000
Và bây giờ bạn có thể tự do tạo một luồng mới hoặc cập nhật một luồng hiện có bằng bộ lọc này.

00:07:40.000 --> 00:07:43.000
Các cuộc gọi lại quan sát còn lại cũng quan trọng không kém.

00:07:43.000 --> 00:07:47.000
Thiết lập lại bộ chọn bằng cách làm cho nó hoạt động và trình bày nó.

00:07:47.000 --> 00:07:51.000
Bạn cũng sẽ muốn biết liệu người chọn có thất bại khi bạn yêu cầu trình bày nó hay không.

00:07:51.000 --> 00:07:57.000
Nếu nó không thành công, bạn sẽ muốn đăng một thông báo trong ứng dụng của mình để thông báo cho mọi người.

00:07:57.000 --> 00:08:06.000
Ngoài ra, nếu bộ chọn đã được trình bày nhưng bị hủy, có nghĩa là không có nội dung nào được chọn, bạn muốn đảm bảo rằng bạn đặt trạng thái cho luồng của mình cho phù hợp.

00:08:06.000 --> 00:08:13.000
SCContentSharingPicker cũng đi kèm với các phương pháp cho phép bạn tùy chỉnh cách hệ thống sẽ hoạt động ở cấp độ mỗi luồng.

00:08:13.000 --> 00:08:18.000
SCContentSharingPickerConfiguration cho phép một số tùy chỉnh.

00:08:18.000 --> 00:08:27.000
AllowedPickingModes cho hệ thống biết chế độ chọn nào được phép giữa các cửa sổ, ứng dụng và lựa chọn hiển thị cho các bộ lọc nội dung.

00:08:27.000 --> 00:08:35.000
Nó cũng cho phép khai báo rõ ràng các ID cửa sổ bị loại trừ và ID gói không được phép chọn bởi trải nghiệm hệ thống.

00:08:35.000 --> 00:08:42.000
Nếu bạn có một luồng mà bạn không muốn mọi người thay đổi, SCContentSharingPickerConfiguration có một thuộc tính có thể thực thi tính năng đó.

00:08:42.000 --> 00:08:45.000
Đầu tiên, bạn sẽ nhận được một phiên bản chọn được chia sẻ.

00:08:45.000 --> 00:08:49.000
Bắt đầu với việc thêm bản thân làm người quan sát và đặt bộ chọn hoạt động.

00:08:49.000 --> 00:08:52.000
Bây giờ, thiết lập các cài đặt cấu hình thích hợp.

00:08:52.000 --> 00:08:59.000
Đối với luồng này, có lẽ bạn muốn loại trừ một lựa chọn của hai ứng dụng cụ thể và không muốn cho phép chọn lại.

00:08:59.000 --> 00:09:07.000
Khi cấu hình được thiết lập, hãy gọi cấu hình bộ trên bộ chọn, chuyển cấu hình và luồng ứng dụng.

00:09:07.000 --> 00:09:11.000
Bây giờ người chọn sẽ biết chính xác cách cư xử cho một luồng nhất định.

00:09:11.000 --> 00:09:19.000
Cũng lưu ý rằng mỗi luồng có thể có cấu hình bộ chọn khác nhau để phù hợp nhất với nhu cầu của ứng dụng.

00:09:19.000 --> 00:09:28.000
Tóm lại, tất cả các luồng ScreenCaptureKit hiện được tích hợp vào trải nghiệm macOS, cho phép bất kỳ ứng dụng nào tận dụng các tính năng mới như Presenter Overlay.

00:09:28.000 --> 00:09:36.000
Và tôi đã giới thiệu cho bạn SCContentSharingPicker, API mới để tích hợp ứng dụng của bạn vào giao diện người dùng chọn hệ thống mới.

00:09:36.000 --> 00:09:44.000
Nhưng chụp màn hình trong ứng dụng của bạn không chỉ là về các luồng trực tiếp, vì vậy tôi muốn chuyển nó cho đồng nghiệp của tôi, Natalie, để nói thêm về API ảnh chụp màn hình mới này.

00:09:44.000 --> 00:09:45.000
Natalie: Cảm ơn, Christopher.

00:09:45.000 --> 00:09:52.000
Năm nay, có một API mới trong ScreenCaptureKit được thiết kế để giúp bạn dễ dàng lấy ảnh tĩnh ngay trên màn hình của mình.

00:09:52.000 --> 00:09:57.000
API ảnh chụp màn hình mới mang lại những lợi ích của việc phát trực tuyến ScreenCaptureKit cho ảnh chụp màn hình.

00:09:57.000 --> 00:10:07.000
Các tính năng như lọc nâng cao theo ứng dụng hoặc cửa sổ, nhiều định dạng pixel và không gian màu, và các tùy chọn khác như khả năng hiển thị con trỏ có sẵn cho bạn.

00:10:07.000 --> 00:10:16.000
Bây giờ bạn sẽ có thể lấy một cách hiệu quả một hình ảnh của nội dung màn hình chính xác mà bạn muốn bằng cách sử dụng các cấu trúc ScreenCaptureKit quen thuộc.

00:10:16.000 --> 00:10:19.000
API mới không đồng bộ.

00:10:19.000 --> 00:10:25.000
Đối với hình ảnh đầu ra của bạn, bạn có thể chọn giữa định dạng CMSampleBuffer hoặc CGImage.

00:10:25.000 --> 00:10:32.000
Tùy chọn CMSampleBuffer có sẵn các định dạng pixel bổ sung, điều này thật tuyệt nếu bạn quan tâm đến các định dạng cụ thể.

00:10:32.000 --> 00:10:38.000
Nếu bạn đã sử dụng CGImage trong mã của mình, thì việc sử dụng định dạng này sẽ dễ tích hợp hơn.

00:10:38.000 --> 00:10:49.000
Ở cả hai định dạng, ảnh chụp màn hình của bạn sẽ sử dụng gần như tất cả các tùy chọn cấu hình giống như phát trực tuyến ScreenCaptureKit và sẽ tuân theo quy trình thiết lập tương tự.

00:10:49.000 --> 00:10:57.000
Nếu bạn đang sử dụng CGWindowListCreateImage, có một vài điều sẽ giúp quá trình chuyển đổi sang ScreenCaptureKit dễ dàng hơn.

00:10:57.000 --> 00:11:06.000
Tất cả các tùy chọn hình ảnh cửa sổ mà bạn có sẵn cho API CGWindowList có thể được tìm thấy bên trong lớp SCStreamConfiguration trong ScreenCaptureKit.

00:11:06.000 --> 00:11:15.000
Các tùy chọn danh sách cửa sổ, như lấy tất cả các cửa sổ phía trên một ID cửa sổ nhất định, được cung cấp bên trong SCShareableContent.

00:11:15.000 --> 00:11:25.000
Và nếu bạn đã quen làm việc với đầu ra CGImage, API ảnh chụp màn hình mới cung cấp định dạng đầu ra CGImage dễ dàng tích hợp vào mã hiện có của bạn.

00:11:25.000 --> 00:11:35.000
Chụp ảnh màn hình theo một luồng tương tự như phát trực tuyến ScreenCaptureKit, nhưng thay vì tạo SCStream, bạn sẽ gọi API ảnh chụp màn hình.

00:11:35.000 --> 00:11:44.000
Để bắt đầu, giống như để tạo một luồng, hãy sử dụng SCShareableContent để có được nội dung mong muốn của bạn và tạo SCContentFilter của bạn.

00:11:44.000 --> 00:11:50.000
Đừng quên thiết lập SCStreamConfiguration của bạn với tất cả các tùy chọn bạn muốn cho ảnh chụp màn hình của mình.

00:11:50.000 --> 00:11:57.000
Khi bạn có bộ lọc nội dung và cấu hình luồng, hãy gọi API ảnh chụp màn hình và chuyển chúng vào.

00:11:57.000 --> 00:12:07.000
API là một phương thức lớp trên lớp SCScreenshotManager, vì vậy bạn sẽ không cần tạo một đối tượng SCScreenshotManager để chụp ảnh màn hình.

00:12:07.000 --> 00:12:14.000
Khi hình ảnh chụp màn hình đã sẵn sàng, nó sẽ được trả lại cho bạn không đồng bộ theo bất kỳ định dạng nào bạn đã chọn.

00:12:14.000 --> 00:12:20.000
Bạn cũng có thể sử dụng bộ chọn hệ thống mới để tạo bộ lọc nội dung của mình và sau đó sử dụng nó để gọi API ảnh chụp màn hình.

00:12:20.000 --> 00:12:27.000
Đây sẽ là một cách tuyệt vời để cho phép mọi người chọn nội dung họ muốn một cách trực quan.

00:12:27.000 --> 00:12:37.000
Khi đến lúc chụp ảnh màn hình, có hai phiên bản API để lựa chọn, tùy thuộc vào những gì bạn cần: một cho loại đầu ra CMSampleBuffer và một cho loại đầu ra CGImage.

00:12:37.000 --> 00:12:44.000
Ngoài ra, hai phiên bản hoạt động theo cùng một cách và sẽ trả lại ảnh chụp màn hình của bạn không đồng bộ.

00:12:44.000 --> 00:12:48.000
Đây là một ví dụ mã về cách bạn có thể sử dụng API ảnh chụp màn hình.

00:12:48.000 --> 00:12:53.000
Bắt đầu bằng cách thiết lập SCContentFilter và SCStreamConfiguration của bạn.

00:12:53.000 --> 00:12:59.000
Khi bạn đã chuẩn bị sẵn những thứ đó, bạn có thể gọi API ảnh chụp màn hình, đợi nó quay trở lại và bạn sẽ nhận được ảnh chụp màn hình của mình.

00:12:59.000 --> 00:13:02.000
Và đó là tất cả những gì mới trong ScreenCaptureKit.

00:13:02.000 --> 00:13:13.000
Tóm lại, có một API mới để tạo SCContentFilters sử dụng giao diện người dùng cấp hệ thống để tạo trải nghiệm chia sẻ màn hình tích hợp đầy đủ với ứng dụng của bạn.

00:13:13.000 --> 00:13:24.000
Hiệu ứng video Lớp phủ Người thuyết trình Mới mang đến trải nghiệm chia sẻ màn hình năng động hơn và API ảnh chụp màn hình mới cho phép bạn chụp ảnh màn hình một lần với sức mạnh của ScreenCaptureKit.

00:13:24.000 --> 00:13:33.000
Để biết thêm thông tin về ScreenCaptureKit, hãy chắc chắn kiểm tra các phiên từ năm ngoái, "Gặp gỡ ScreenCaptureKit" và "Đưa ScreenCaptureKit lên một tầm cao mới."

00:13:33.000 --> 23:59:59.000
Cảm ơn vì đã xem.

