WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:14.000
Alex: Xin chào. Tên tôi là Alex. Tôi đến từ nhóm Kỹ thuật Video.

00:00:14.000 --> 00:00:21.000
Hôm nay, đồng nghiệp Antoine của tôi và tôi sẽ chia sẻ với bạn những gì mới trong RoomPlan.

00:00:21.000 --> 00:00:34.000
RoomPlan sử dụng các thuật toán học máy tinh vi được cung cấp bởi ARKit để phát hiện tường, cửa sổ, cửa ra vào, lỗ mở và các vật thể xác định phòng khác.

00:00:34.000 --> 00:00:42.000
RoomCaptureView API của chúng tôi cho phép bạn tích hợp trải nghiệm quét trực tiếp vào ứng dụng của mình.

00:00:42.000 --> 00:00:50.000
Sau khi quét xong, ứng dụng của bạn có thể trình bày mô hình 3D kết quả và xuất sang tệp USDZ.

00:00:50.000 --> 00:00:54.000
Trong phiên này, chúng ta sẽ nói về những gì mới trong RoomPlan.

00:00:54.000 --> 00:01:02.000
Chúng ta sẽ bắt đầu với một cách mới để kết hợp RoomPlan với ARKit bằng cách sử dụng ARSession tùy chỉnh.

00:01:02.000 --> 00:01:07.000
Sau đó, chúng tôi sẽ chuyển sự chú ý sang hỗ trợ MultiRoom của chúng tôi.

00:01:07.000 --> 00:01:14.000
Chúng tôi cung cấp một MultiRoom API mới để hợp nhất các bản quét phòng riêng lẻ thành một cấu trúc lớn hơn.

00:01:14.000 --> 00:01:20.000
Tiếp theo, chúng tôi sẽ hiển thị hỗ trợ VoiceOver mới cho RoomCaptureView.

00:01:20.000 --> 00:01:32.000
Cuối cùng, chúng tôi sẽ xem xét một số cải tiến trong các đại diện và cải tiến RoomPlan đối với các chức năng xuất của chúng tôi để kích hoạt quy trình làm việc mới.

00:01:32.000 --> 00:01:36.000
Hãy bắt đầu với hỗ trợ ARSession tùy chỉnh.

00:01:36.000 --> 00:01:48.000
Như đã đề cập trước đó, RoomPlan đang dựa vào thông tin từ ARKit để phát hiện tường, cửa sổ, cửa ra vào, lỗ mở và các vật thể khác trong quá trình quét.

00:01:48.000 --> 00:01:53.000
Đối với điều này, RoomCaptureSession đang chạy với ARSession mặc định.

00:01:53.000 --> 00:02:02.000
Tính năng mới trong iOS 17, RoomPlan có thể sử dụng ARSession tùy chỉnh với ARWorldTrackingConfiguration.

00:02:02.000 --> 00:02:10.000
Điều này cho phép một số cách mới để kết hợp việc sử dụng RoomPlan và ARKit trong cùng một quy trình làm việc.

00:02:10.000 --> 00:02:12.000
Hãy xem xét một số ví dụ.

00:02:12.000 --> 00:02:28.000
Một cách để sử dụng RoomPlan với ARSession tùy chỉnh là kết hợp kết quả RoomPlan với hình học cảnh ARKit và phát hiện mặt phẳng để tương tác nhập vai hơn giữa nội dung ảo và hình học trong thế giới thực.

00:02:28.000 --> 00:02:40.000
Hơn nữa, bạn có thể thu thập các biểu diễn ảnh của một không gian bằng cách sử dụng chụp ảnh chất lượng cao từ ARKit để tạo danh sách bất động sản phong phú hơn với RoomPlan.

00:02:40.000 --> 00:02:51.000
Và nếu bạn đang sử dụng RoomPlan như một phần của trải nghiệm AR hiện có, bạn có thể kết hợp các kết quả từ RoomPlan mà không làm gián đoạn ARAnchors hiện tại của mình.

00:02:51.000 --> 00:02:56.000
Đây chỉ là một vài trường hợp sử dụng mà ARSession tùy chỉnh có thể cung cấp.

00:02:56.000 --> 00:03:02.000
Hãy cùng xem một số mã để xem cách bạn chuyển ARSession tùy chỉnh sang RoomPlan.

00:03:02.000 --> 00:03:07.000
Đây là chức năng init và stop trong RoomPlan trước đó.

00:03:07.000 --> 00:03:12.000
Và đây là cách bạn chuyển một ARSession tùy chỉnh sang hàm init.

00:03:12.000 --> 00:03:20.000
Bất kỳ ARSession tùy chỉnh nào với ARWorldTrackingConfiguration sẽ được vinh danh bên trong RoomCaptureSession.

00:03:20.000 --> 00:03:29.000
Ngoài ra, chức năng dừng hiện bao gồm một tùy chọn mới để xác định xem bạn có muốn tạm dừng ARSession cơ bản hay không.

00:03:29.000 --> 00:03:37.000
Bạn có thể đặt Boolean thành false trong trường hợp bạn muốn ARSession của mình tiếp tục chạy sau khi RoomCaptureSession dừng lại.

00:03:37.000 --> 00:03:53.000
Trong phần tiếp theo, chúng ta sẽ thấy cách làm việc với ARSession cho phép quy trình làm việc mới, như hợp nhất nhiều lần quét thành một cấu trúc lớn hơn Hãy chuyển sự chú ý của chúng ta sang hỗ trợ MultiRoom.

00:03:53.000 --> 00:03:55.000
Hỗ trợ MultiRoom là gì?

00:03:55.000 --> 00:04:02.000
Trong RoomPlan trước đây, bạn có thể thực hiện một lần quét và nhận mô hình 3D cho một phòng đơn.

00:04:02.000 --> 00:04:13.000
Giả sử bạn đã thực hiện một vài lần quét các phòng khác nhau trong một ngôi nhà, chẳng hạn như phòng ăn, nhà bếp, phòng khách, hành lang và phòng ngủ.

00:04:13.000 --> 00:04:17.000
Nếu bạn muốn hợp nhất chúng, bạn sẽ phải đối mặt với một số thách thức.

00:04:17.000 --> 00:04:26.000
Đầu tiên, tất cả chúng đều nằm trong hệ tọa độ riêng của chúng, có nghĩa là nguồn gốc và hướng của tọa độ thế giới là khác nhau đối với mỗi phòng.

00:04:26.000 --> 00:04:37.000
Thứ hai, ngay cả khi bạn khâu chúng theo cách thủ công, cuối cùng bạn sẽ có các bức tường trùng lặp và các vật thể có khả năng trùng lặp.

00:04:37.000 --> 00:04:41.000
Trước tiên hãy giải quyết các hệ tọa độ khác nhau.

00:04:41.000 --> 00:04:47.000
Những gì chúng tôi muốn đạt được ở đây là thực hiện tất cả các lần quét trong cùng một hệ tọa độ.

00:04:47.000 --> 00:04:52.000
Hai cách tiếp cận được đề xuất ở đây để quét nhiều phòng.

00:04:52.000 --> 00:04:55.000
Đầu tiên, sử dụng ARSession liên tục.

00:04:55.000 --> 00:04:59.000
Thứ hai, sử dụng bản địa hóa lại ARSession.

00:04:59.000 --> 00:05:02.000
Hãy xem cách sử dụng ARSession liên tục.

00:05:02.000 --> 00:05:08.000
Trong RoomPlan trước đây, khi RoomCaptureSession dừng lại, ARSession bị tạm dừng.

00:05:08.000 --> 00:05:12.000
Mỗi lần quét có một hệ tọa độ khác nhau.

00:05:12.000 --> 00:05:20.000
API mới của chúng tôi hiện có một đối số mới trong hàm dừng, chúng tôi có thể đặt pauseARSession thành false.

00:05:20.000 --> 00:05:32.000
Điều này cho phép ARSession tiếp tục chạy cho lần quét tiếp theo, ngay cả lần quét sau đó, cho đến khi cuối cùng chúng tôi quyết định tạm dừng ARSession một lần nữa.

00:05:32.000 --> 00:05:39.000
Sử dụng cách tiếp cận này, chúng tôi có thể đảm bảo cùng một ARSession chạy trên một số lần quét.

00:05:39.000 --> 00:05:45.000
Điều này sẽ cho phép chúng ta có một hệ tọa độ thế giới chung cho tất cả các lần quét của chúng ta.

00:05:45.000 --> 00:05:49.000
Hãy xem cái này hoạt động như thế nào trong mã.

00:05:49.000 --> 00:05:55.000
Đây là một ví dụ để chạy RoomCaptureSession với ARSession liên tục.

00:05:55.000 --> 00:05:59.000
Chúng tôi bắt đầu lần quét đầu tiên với RoomCaptureSession.run.

00:05:59.000 --> 00:06:01.000
Sau đó, đây là phần quan trọng.

00:06:01.000 --> 00:06:09.000
Với API mới trong RoomCaptureSession.stop, chúng ta cần đặt pauseARSession thành false.

00:06:09.000 --> 00:06:13.000
Điều này sẽ giữ cho ARSession chạy cho lần quét tiếp theo.

00:06:13.000 --> 00:06:19.000
Sau đó, chúng tôi sử dụng cùng một phiên bản roomCaptureSession cho lần quét thứ hai.

00:06:19.000 --> 00:06:22.000
Sau đó, chúng tôi dừng lần quét thứ hai.

00:06:22.000 --> 00:06:29.000
Cuối cùng, chúng ta có thể nhận được kết quả quét thứ nhất và thứ hai trong cùng một hệ tọa độ.

00:06:29.000 --> 00:06:38.000
Một cách tiếp cận khác để thực hiện quét phòng riêng lẻ trong cùng một không gian tọa độ là sử dụng định vị lại ARSession.

00:06:38.000 --> 00:06:49.000
Cách tiếp cận này phù hợp nhất nếu bạn đang quét phòng riêng lẻ vào những thời điểm khác nhau, chẳng hạn như quay lại cùng một địa điểm vào ngày hoặc tuần tới.

00:06:49.000 --> 00:06:52.000
Hãy cùng xem cái này hoạt động như thế nào.

00:06:52.000 --> 00:06:57.000
Một lần nữa, đây là một lần quét duy nhất để có được mô hình 3D của một phòng đơn.

00:06:57.000 --> 00:07:07.000
Vì chúng tôi dừng RoomCaptureSession và tạm dừng ARSession, để định vị lại hoạt động cho các lần quét trong tương lai, chúng tôi cần lưu ARWorldMap vào đĩa.

00:07:07.000 --> 00:07:18.000
Nếu bạn muốn tiếp tục quá trình quét trước đó khi ARSession bị tạm dừng, bây giờ bạn có thể tiếp tục quét bằng cách tải ARWorldMap từ ARSession đã tạm dừng.

00:07:18.000 --> 00:07:30.000
Sử dụng ARWorldMap này, bạn có thể định vị lại so với môi trường quét trước đó để đảm bảo rằng một loạt các lần quét đều chia sẻ một hệ tọa độ chung.

00:07:30.000 --> 00:07:36.000
Hãy xem xét các mã mẫu cho quy trình quét với việc định vị lại.

00:07:36.000 --> 00:07:40.000
Đầu tiên, chúng tôi chạy lần quét đầu tiên.

00:07:40.000 --> 00:07:44.000
Sau đó, chúng tôi dừng lần quét đầu tiên bằng cách tạm dừng ARSession.

00:07:44.000 --> 00:07:52.000
Sau đó, để tái bản địa hóa hoạt động, chúng ta cần lưu ARWorldMap khi ARSession bị tạm dừng.

00:07:52.000 --> 00:07:57.000
Trước khi chạy lần quét thứ hai, chúng ta cần khôi phục ARWorldMap trước đó của mình.

00:07:57.000 --> 00:08:01.000
Đầu tiên, chúng tôi tải ARWorldMap.

00:08:01.000 --> 00:08:07.000
Và chúng tôi chỉ định ARWorldMap đã tải cho ARWorldTrackingConfiguration. initialWorldMap.

00:08:07.000 --> 00:08:12.000
Sau đó, chúng tôi chạy ARSession để kích hoạt tái định vị hóa.

00:08:12.000 --> 00:08:17.000
Sau khi hoàn tất việc định vị lại, ARSession trước đó sẽ được tải.

00:08:17.000 --> 00:08:22.000
Tọa độ thế giới hiện tại được liên kết với tọa độ thế giới trước đó.

00:08:22.000 --> 00:08:24.000
Sau đó chúng ta có thể chạy lần quét thứ hai.

00:08:24.000 --> 00:08:27.000
Cuối cùng, chúng tôi dừng lần quét thứ hai.

00:08:27.000 --> 00:08:35.000
Với tất cả các bước này, kết quả quét thứ nhất và thứ hai nằm trong cùng một tọa độ thế giới 3D.

00:08:35.000 --> 00:08:42.000
Chúng tôi đã thấy hai cách tiếp cận để liên kết nhiều lần quét trong cùng một hệ tọa độ 3D.

00:08:42.000 --> 00:08:51.000
Tiếp theo, chúng ta sẽ xem xét cách hợp nhất chúng thành một cấu trúc kết hợp bằng cách sử dụng API MultiRoom mới của chúng tôi.

00:08:51.000 --> 00:08:57.000
Đối với mỗi lần quét, chúng tôi có thể chạy RoomBuilder API để tạo ra CapturedRoom riêng lẻ.

00:08:57.000 --> 00:09:09.000
Như đã trình bày trước đây, với việc định vị lại ARSession và ARSession liên tục, tất cả CapturedRooms đều nằm trong cùng một không gian thế giới 3D.

00:09:09.000 --> 00:09:14.000
Đây là đầu ra từ RoomBuilder với ba CapturedRooms.

00:09:14.000 --> 00:09:24.000
Bây giờ chúng tôi cung cấp một API hợp nhất mới, StructureBuilder, để hợp nhất tất cả chúng thành một cấu trúc lớn, CapturedStructure.

00:09:24.000 --> 00:09:30.000
Tiếp theo, hãy xem các mã mẫu cho StructureBuilder API.

00:09:30.000 --> 00:09:35.000
Đây là cách chúng tôi sử dụng StructureBuilder API để hợp nhất nhiều lần quét.

00:09:35.000 --> 00:09:40.000
Đầu tiên, chúng tôi tạo một phiên bản StructureBuilder với tùy chọn cấu hình.

00:09:40.000 --> 00:09:46.000
Sau đó, chúng tôi tạo một Mảng để tải nhiều CapturedRooms, mà chúng tôi đã quét trước đó.

00:09:46.000 --> 00:09:54.000
Sau đó, chúng tôi gọi StructureBuilder API để lấy capturedStructure, đây là kết quả được hợp nhất.

00:09:54.000 --> 00:09:59.000
Cuối cùng, chúng ta có thể xuất capturedStructure sang tệp USDZ.

00:09:59.000 --> 00:10:02.000
Và đây là định nghĩa CapturedStructure.

00:10:02.000 --> 00:10:06.000
Đầu tiên, nó có một tài sản gồm các phòng.

00:10:06.000 --> 00:10:09.000
Đó là một mảng các trường hợp CapturedRoom.

00:10:09.000 --> 00:10:18.000
Sau đó, nó có các thuộc tính cho các bức tường, cửa ra vào, cửa sổ, lỗ mở và đồ vật được hợp nhất.

00:10:18.000 --> 00:10:24.000
Cuối cùng, nó có chức năng xuất sang tệp USDZ.

00:10:24.000 --> 00:10:27.000
Hãy xem MultiRoom hoạt động.

00:10:27.000 --> 00:10:37.000
Chúng tôi cung cấp cho bạn một sample.app, cho phép bạn hợp nhất nhiều lần quét với StructureBuilder API và xuất sang tệp USDZ.

00:10:37.000 --> 00:10:43.000
Tệp USDZ của chúng tôi đã sẵn sàng để xem trước trong cả iOS và macOS.

00:10:43.000 --> 00:10:54.000
Bạn có thể tiến thêm một bước nữa bằng cách tải tệp USDZ của mình vào Công cụ tạo nội dung kỹ thuật số như Blender.

00:10:54.000 --> 00:11:03.000
Sau khi chúng tôi áp dụng một số làm đẹp cho mô hình 3D, kết quả có thể trông thậm chí còn tốt hơn.

00:11:03.000 --> 00:11:11.000
Cuối cùng, hãy nói về một số cân nhắc để có được trải nghiệm MultiRoom tốt nhất với sự hỗ trợ của MultiRoom.

00:11:11.000 --> 00:11:23.000
MultiRoom hoạt động tốt nhất cho các ngôi nhà dân cư một tầng, với thiết lập điển hình từ một đến bốn phòng ngủ, phòng khách, nhà bếp và phòng ăn.

00:11:23.000 --> 00:11:34.000
Để quét và hợp nhất các phòng riêng lẻ, chúng tôi đề xuất tổng diện tích tối đa là 2.000 feet vuông hoặc khoảng 186 mét vuông.

00:11:34.000 --> 00:11:47.000
Hơn nữa, nên có ánh sáng tốt từ 50 lux trở lên để đảm bảo RoomPlan có thể quét với luồng video rõ ràng và hiệu suất theo dõi AR tốt.

00:11:47.000 --> 00:11:55.000
Bây giờ, đây là Antoine để cho chúng tôi biết về những cải tiến hơn nữa cho RoomPlan trong iOS 17.

00:11:55.000 --> 00:11:56.000
Antoine: Cảm ơn, Alex.

00:11:56.000 --> 00:12:00.000
Đón từ đây, hãy nói về khả năng tiếp cận.

00:12:00.000 --> 00:12:09.000
Khi chúng ta nói về kết xuất, hầu hết chúng ta đều nghĩ về phương thức thị giác, nhưng đối với những người có thị lực kém, phương thức này không phải là phương thức hữu ích nhất.

00:12:09.000 --> 00:12:18.000
Năm nay, RoomPlan đã thêm phản hồi âm thanh khi VoiceOver được bật, cho phép điện thoại của bạn cung cấp hướng dẫn về quét và mô tả những gì nó nhìn thấy.

00:12:18.000 --> 00:12:20.000
VoiceOver: Di chuyển thiết bị để bắt đầu.

00:12:20.000 --> 00:12:22.000
Hướng camera ở cạnh dưới của bức tường.

00:12:22.000 --> 00:12:25.000
Một lò sưởi. Một bức tường.

00:12:25.000 --> 00:12:27.000
Một cửa sổ.

00:12:27.000 --> 00:12:32.000
Antoine: Bây giờ hãy nói về thông tin mới mà RoomPlan có thể thu thập từ một căn phòng và cách nó được hiển thị.

00:12:32.000 --> 00:12:36.000
RoomPlan giúp bạn dễ dàng quét nhiều loại phòng.

00:12:36.000 --> 00:12:43.000
Tuy nhiên, cho đến nay, nó bị giới hạn để thể hiện chính xác một tập hợp hữu hạn các tình huống trong phòng.

00:12:43.000 --> 00:12:55.000
RoomPlan hiện hỗ trợ nhiều loại phòng thậm chí còn lớn hơn, bao gồm tường nghiêng và tường cong, nhưng cũng có các yếu tố nhà bếp lõm như máy rửa chén, lò nướng hoặc bồn rửa.

00:12:55.000 --> 00:13:01.000
RoomPlan cũng đã được cải tiến để phát hiện cấu hình của các đối tượng thuộc một danh mục nhất định.

00:13:01.000 --> 00:13:11.000
Ví dụ, có rất nhiều loại ghế sofa, từ ghế đơn đến ghế hình chữ L, và trên ghế sofa hình vuông đơn giản mà RoomPlan sẽ phát hiện trong phiên bản mới.

00:13:11.000 --> 00:13:20.000
Khi chúng tôi giới thiệu RoomPlan, chúng tôi đã nói về hai yếu tố mà RoomPlan có thể quét: bề mặt và đồ vật.

00:13:20.000 --> 00:13:24.000
Bây giờ, chúng tôi đang thêm các yếu tố mới để mô tả các khu vực bên trong một căn phòng.

00:13:24.000 --> 00:13:27.000
Chúng tôi gọi chúng là các phần.

00:13:27.000 --> 00:13:35.000
Các bức tường bây giờ có thể được mô tả như đa giác, để xử lý các bức tường không đồng nhất như tường nghiêng hoặc tường có dầm.

00:13:35.000 --> 00:13:40.000
Cho đến nay, các bức tường và cửa sổ cong là một phần của API chỉ dành cho dữ liệu.

00:13:40.000 --> 00:13:46.000
Bây giờ, kết quả cuối cùng từ RoomCaptureView cũng có thể hiển thị các bức tường cong.

00:13:46.000 --> 00:13:54.000
Bên cạnh các loại bề mặt, các loại sàn là một bổ sung khác cũng có thể được mô tả như một đa giác.

00:13:54.000 --> 00:14:01.000
Các đối tượng hiện có các thuộc tính để mô tả tốt hơn các cấu hình khác nhau bên trong một danh mục.

00:14:01.000 --> 00:14:05.000
Các bề mặt và đối tượng bây giờ có một biến mẹ mới.

00:14:05.000 --> 00:14:08.000
Nó chứa số nhận dạng của cha mẹ chúng.

00:14:08.000 --> 00:14:17.000
Ví dụ, cha mẹ của cửa sổ là một bức tường, cha mẹ của một chiếc ghế có thể là một cái bàn, và cha mẹ của máy rửa chén có thể là một nơi lưu trữ.

00:14:17.000 --> 00:14:21.000
Hãy trình bày chi tiết tất cả những cải tiến đó bằng các ví dụ.

00:14:21.000 --> 00:14:26.000
Mỗi phần mô tả các khu vực khác nhau trong phòng hoặc ngôi nhà của bạn.

00:14:26.000 --> 00:14:35.000
Một phần có nhãn trong số những thứ sau: phòng khách, phòng ngủ, phòng tắm, nhà bếp và phòng ăn.

00:14:35.000 --> 00:14:41.000
Nó có một vị trí nhất định, ở một tầng nhất định.

00:14:41.000 --> 00:14:48.000
Các bức tường không đồng nhất có thể được hiển thị dưới dạng đa giác bằng cách sử dụng biến polygonCorner.

00:14:48.000 --> 00:14:56.000
Sàn hiện được biểu diễn dưới dạng hình chữ nhật trong quá trình quét và được làm đẹp như một đa giác khi quá trình quét kết thúc.

00:14:56.000 --> 00:15:01.000
Cha mẹ của máy rửa bát, lò nướng và bồn rửa hiện được khắc trong kết xuất.

00:15:01.000 --> 00:15:06.000
Khi chúng tôi giới thiệu RoomPlan, các danh mục đã được sử dụng để mô tả một đối tượng.

00:15:06.000 --> 00:15:10.000
Tuy nhiên, đại diện này có những hạn chế.

00:15:10.000 --> 00:15:12.000
Hãy lấy ví dụ về một chiếc ghế.

00:15:12.000 --> 00:15:21.000
Một số loại ghế có thể đại diện cho loại này, ví dụ như ghế đẩu, ghế ăn hoặc ghế văn phòng.

00:15:21.000 --> 00:15:23.000
Tất cả họ đều có một mục đích khác nhau.

00:15:23.000 --> 00:15:29.000
Để có sự thể hiện tốt hơn của các đối tượng, chúng tôi hiện đang thêm các thuộc tính.

00:15:29.000 --> 00:15:35.000
Trong ví dụ này, sử dụng các thuộc tính, chúng tôi có sự hiểu biết trung thực hơn về những gì đã được quét.

00:15:35.000 --> 00:15:41.000
Trong RoomPlan API, các thuộc tính có sẵn thông qua một mảng đa hình của enums.

00:15:41.000 --> 00:15:46.000
Tuy nhiên, enums không phải là cách tốt nhất để hiểu các thuộc tính.

00:15:46.000 --> 00:15:51.000
Trong phần tiếp theo, chúng ta sẽ khám phá những cách mới để đi đến một đại diện hấp dẫn hơn.

00:15:51.000 --> 00:15:59.000
Các thuộc tính, cùng với các thông tin mới khác được thu thập trong quá trình quét, hiện có thể được đưa vào kết quả đã xuất của chúng tôi.

00:15:59.000 --> 00:16:11.000
Có hai bổ sung cho loại dữ liệu mà bây giờ chúng ta có thể xuất: một tệp để tìm lại siêu dữ liệu từ nút USDZ và một cấu trúc để làm phong phú thêm USDZ đã xuất với các mô hình.

00:16:11.000 --> 00:16:19.000
Khi xuất một Phòng dưới dạng lưới, chúng tôi tạo ra một USDZ chứa một cây nút cho các bề mặt và đối tượng.

00:16:19.000 --> 00:16:24.000
Năm nay, chúng tôi đã thêm một nhóm phần chứa các trung tâm phần.

00:16:24.000 --> 00:16:35.000
Tuy nhiên, khi làm như vậy, chúng tôi thiếu một lượng thông tin đáng kể từ quá trình quét của mình, ví dụ như kích thước của tường và đối tượng, cũng như các thuộc tính đối tượng.

00:16:35.000 --> 00:16:39.000
Một tệp ánh xạ bây giờ có thể được tạo ra khi xuất một căn phòng.

00:16:39.000 --> 00:16:51.000
Đó là một từ điển được mã hóa của String to UUID tạo ra cầu nối giữa tên nút duy nhất USDZ và phần tử CapturedRoom, được xác định duy nhất bởi mã định danh của nó.

00:16:51.000 --> 00:16:55.000
Hãy xem nó mở ra như thế nào trong RoomPlan API.

00:16:55.000 --> 00:17:08.000
Trong phiên bản trước của RoomPlan, một phòng có thể được xuất theo hai cách: dưới dạng USDZ, thông qua hàm xuất và dưới dạng JSON hoặc Plist, mã hóa cấu trúc CapturedRoom.

00:17:08.000 --> 00:17:19.000
Mới trong iOS 17, chỉ định URL siêu dữ liệu để ánh xạ phòng đến USDZ trong chức năng xuất, bạn có thể liên hệ hai thông tin đã xuất.

00:17:19.000 --> 00:17:26.000
Bằng cách này, khi hiển thị phòng quét của bạn, bạn có thể truy vấn thông tin bổ sung về một bề mặt hoặc một đối tượng.

00:17:26.000 --> 00:17:40.000
Cùng với tệp ánh xạ mới, chúng tôi đang giới thiệu Nhà cung cấp mô hình để thay thế các đối tượng, từng được biểu diễn dưới dạng hộp, bằng các mô hình khớp với các thuộc tính đã được quét.

00:17:40.000 --> 00:17:48.000
Những gì chúng tôi muốn làm ở đây là liên kết một đối tượng với mô hình 3D và cụ thể hơn là với URL của nó.

00:17:48.000 --> 00:17:57.000
Bằng cách này, chúng ta sẽ có thể thay thế hộp giới hạn được sử dụng để đại diện cho đối tượng, bằng một kết xuất hấp dẫn và trung thực hơn.

00:17:57.000 --> 00:18:03.000
Với mục đích đó, một cấu trúc mới có sẵn trong RoomPlan: ModelProvider.

00:18:03.000 --> 00:18:08.000
ModelProvider ánh xạ các danh mục và tập hợp các thuộc tính cho các URL Mô hình.

00:18:08.000 --> 00:18:16.000
Từ một đối tượng có danh mục và thuộc tính, bạn có thể yêu cầu ModelProvider cung cấp cho bạn URL mô hình tương ứng.

00:18:16.000 --> 00:18:32.000
Bây giờ khái quát hóa nó cho toàn bộ căn phòng, đó là một tập hợp các phần, bề mặt và đối tượng với các danh mục và thuộc tính, một phiên bản ModelProvider được chỉ định trong chức năng xuất có thể liên kết các URL Mô hình 3D với từng đối tượng của căn phòng.

00:18:32.000 --> 00:18:40.000
Bây giờ chúng ta đã có một cấu trúc để xử lý liên kết mô hình, hãy xem cách chúng ta có thể làm việc với Nhà cung cấp mô hình.

00:18:40.000 --> 00:18:43.000
Có nhiều cách để điền ModelProvider.

00:18:43.000 --> 00:18:50.000
Ví dụ, bạn có thể tìm nạp các mô hình phù hợp với một tập hợp các thuộc tính từ cơ sở dữ liệu hoặc chú thích một danh mục hiện có.

00:18:50.000 --> 00:18:56.000
Ở đây, chúng tôi sẽ hướng dẫn bạn một ví dụ rất đơn giản về việc tạo danh mục tài sản nhỏ của riêng bạn.

00:18:56.000 --> 00:18:59.000
Chúng tôi sẽ tạo và sử dụng một danh mục trong bốn bước.

00:18:59.000 --> 00:19:04.000
Đầu tiên, chúng tôi sẽ phân tích các danh mục và thuộc tính mà RoomPlan hỗ trợ.

00:19:04.000 --> 00:19:08.000
Sau đó, chúng tôi sẽ liên kết một mô hình cho mỗi danh mục và bộ thuộc tính.

00:19:08.000 --> 00:19:12.000
Sau đó, chúng tôi sẽ khởi tạo một ModelProvider.

00:19:12.000 --> 00:19:17.000
Và cuối cùng, chúng tôi sẽ sử dụng nó để xuất phòng của chúng tôi.

00:19:17.000 --> 00:19:22.000
Hãy xem cách khám phá các thuộc tính và tạo một nhà cung cấp mô hình bằng cách sử dụng một số mô hình.

00:19:22.000 --> 00:19:26.000
Đầu tiên, chúng tôi lặp lại tất cả các danh mục mà RoomPlan hỗ trợ.

00:19:26.000 --> 00:19:30.000
Sau đó, chúng tôi tạo một thư mục cho mỗi danh mục được hỗ trợ.

00:19:30.000 --> 00:19:33.000
Chúng ta có thể thêm các mô hình vào mỗi thư mục sau.

00:19:33.000 --> 00:19:40.000
Sau đó, đối với mỗi danh mục, chúng tôi yêu cầu các kết hợp thuộc tính được RoomPlan hỗ trợ.

00:19:40.000 --> 00:19:44.000
Đối với mỗi tập hợp các thuộc tính được hỗ trợ, chúng tôi tạo một thư mục.

00:19:44.000 --> 00:19:51.000
Trong mỗi thư mục đó, bạn có thể thêm một mô hình 3D tương ứng với danh mục hoặc tập hợp các thuộc tính.

00:19:51.000 --> 00:19:57.000
Bây giờ nội dung trong danh mục của chúng tôi đã sẵn sàng, chúng tôi cần tạo một tệp chỉ mục cho nó.

00:19:57.000 --> 00:20:01.000
Đây là một cấu trúc ví dụ sẽ xử lý một chỉ mục danh mục.

00:20:01.000 --> 00:20:07.000
Nó chứa một mảng các phần tử, mỗi phần tử chứa một danh mục hoặc một tập hợp các thuộc tính.

00:20:07.000 --> 00:20:11.000
Mỗi phần tử có một tham chiếu đến đường dẫn của một mô hình tương ứng.

00:20:11.000 --> 00:20:18.000
Bây giờ chúng ta có thể lưu tệp chỉ mục của mình dưới dạng danh sách và danh mục của chúng ta dưới dạng một gói.

00:20:18.000 --> 00:20:29.000
Mỗi lần chúng tôi muốn xuất một phòng với các mô hình hoặc mỗi lần chúng tôi muốn sử dụng một nhà cung cấp mô hình để liên kết một đối tượng với một mô hình, bây giờ chúng tôi có thể sử dụng gói danh mục này để tạo một ModelProvider.

00:20:29.000 --> 00:20:45.000
Tất cả những gì chúng ta phải làm là lặp lại thông qua các danh mục và thuộc tính danh mục của mình, tìm URL mô hình tương ứng, liên kết URL mô hình với một danh mục nếu không có thuộc tính hoặc liên kết URL mô hình với một bộ thuộc tính.

00:20:45.000 --> 00:20:54.000
Bước cuối cùng là gọi hàm xuất, chỉ định URL đầu ra, phiên bản nhà cung cấp mô hình và tùy chọn .model.

00:20:54.000 --> 00:21:00.000
Et thì đấy! Những gì chúng tôi nhận được là một USDZ với các mô hình 3D tương ứng với bản quét của bạn.

00:21:00.000 --> 00:21:12.000
Để tiến xa hơn, bạn có thể tùy ý đưa USDZ vào các công cụ DCC như Blender để thêm ánh sáng và bóng tối để có kết quả thực tế hơn có thể thu được chỉ trong vài phút.

00:21:12.000 --> 00:21:18.000
Để giúp bạn tạo ra kết quả hấp dẫn, chúng tôi đã thêm một danh mục được điền sẵn vào mã mẫu của mình.

00:21:18.000 --> 00:21:21.000
Quay lại với bạn, Alex!

00:21:21.000 --> 00:21:22.000
Alex: Cảm ơn, Antoine.

00:21:22.000 --> 00:21:25.000
Hãy cùng xem những gì chúng ta đã chia sẻ hôm nay.

00:21:25.000 --> 00:21:39.000
Đầu tiên, hỗ trợ ARSession tùy chỉnh cho phép các trường hợp sử dụng mới như chụp ảnh và video chất lượng cao cùng với quá trình quét để cải thiện danh sách bất động sản.

00:21:39.000 --> 00:21:49.000
Bây giờ, bạn cũng có thể quét nhiều phòng và sử dụng StructureBuilder API mới để tạo ra một mô hình 3D hợp nhất của toàn bộ ngôi nhà.

00:21:49.000 --> 00:21:59.000
Để cải thiện trải nghiệm quét cho người dùng thị lực kém, RoomPlan hiện hỗ trợ VoiceOver khi sử dụng RoomCaptureView.

00:21:59.000 --> 00:22:06.000
Các thuộc tính đối tượng mới của RoomPlan cho phép bạn thể hiện chính xác hơn một căn phòng được quét.

00:22:06.000 --> 00:22:17.000
Và cuối cùng, bây giờ bạn có thể sử dụng API xuất mới của chúng tôi để gán các mô hình 3D từ danh mục tùy chỉnh cho các đối tượng được quét tương ứng.

00:22:17.000 --> 00:22:19.000
Đó là RoomPlan trong iOS 17.

00:22:19.000 --> 23:59:59.000
Chúng tôi nóng lòng muốn xem bạn làm gì với nó.

