WEBVTT

00:00:00.000 --> 00:00:11.000
♪ ♪

00:00:11.000 --> 00:00:14.000
Kevin Cathey: Xin chào, tên tôi là Kevin, và tôi làm việc trên Previews.

00:00:14.000 --> 00:00:25.000
Xây dựng phần mềm, và đặc biệt là các ứng dụng, là một quá trình thực sự lặp đi lặp lại và sáng tạo, vì vậy bạn muốn có cách nhanh nhất để kiểm tra mã của mình và trải nghiệm những gì bạn đang làm trở nên sống động.

00:00:25.000 --> 00:00:33.000
Đó là lý do tại sao chúng tôi đã xem trước; vì vậy bạn có thể có phản hồi trực quan gần như tức thì để bạn có thể tập trung vào việc sáng tạo.

00:00:33.000 --> 00:00:35.000
Và các bản xem trước được xây dựng để linh hoạt.

00:00:35.000 --> 00:00:41.000
Bạn có thể sử dụng chúng trên toàn bộ ứng dụng của mình với các loại chế độ xem, dữ liệu và thiết bị khác nhau.

00:00:41.000 --> 00:00:47.000
Cho dù bạn chưa quen với các bản xem trước hay bạn đã sử dụng chúng trong một thời gian, tôi muốn giúp bạn tận dụng tối đa chúng.

00:00:47.000 --> 00:00:48.000
Chúng tôi sẽ làm điều này trong ba phần.

00:00:48.000 --> 00:00:51.000
Đầu tiên, chúng tôi sẽ xem xét các bản xem trước là gì.

00:00:51.000 --> 00:00:58.000
Thật hữu ích khi hiểu một chút về cách chúng hoạt động và cách chúng liên quan đến phần còn lại của mã trong dự án của bạn.

00:00:58.000 --> 00:01:04.000
Thứ hai, có hai cách khác nhau để bạn có thể cung cấp nội dung cho các bản xem trước của mình: lượt xem và tiện ích.

00:01:04.000 --> 00:01:09.000
Tôi sẽ chỉ cho bạn cách viết những thứ này và một số quy trình làm việc độc đáo của chúng trong Xcode.

00:01:09.000 --> 00:01:17.000
Và cuối cùng, khi bạn bắt đầu áp dụng các bản xem trước trong dự án của mình, có một số tình huống hoặc câu hỏi phổ biến mà bạn nhất định phải gặp phải.

00:01:17.000 --> 00:01:23.000
Tôi muốn cung cấp cho bạn một vài mẹo và thủ thuật để giúp xem trước thêm trong dự án của bạn.

00:01:23.000 --> 00:01:25.000
Hãy bắt đầu nào.

00:01:25.000 --> 00:01:27.000
Vậy bản xem trước là gì?

00:01:27.000 --> 00:01:31.000
Bản xem trước là một đoạn mã tạo và định cấu hình chế độ xem.

00:01:31.000 --> 00:01:37.000
Chúng được viết ở cấp cao nhất của tệp nguồn, có nghĩa là chúng không được lồng vào bên trong bất kỳ loại hoặc chức năng nào.

00:01:37.000 --> 00:01:40.000
Và chúng thực sự có thể đơn giản như thế này.

00:01:40.000 --> 00:01:44.000
Bạn sử dụng macro #Preview và trả về một chế độ xem.

00:01:44.000 --> 00:01:50.000
Các bản xem trước được biên dịch vào ứng dụng của bạn, ngay bên cạnh phần còn lại của mã ứng dụng và tài nguyên của bạn.

00:01:50.000 --> 00:01:55.000
Bởi vì các bản xem trước của bạn có thể truy cập các biểu tượng và tài nguyên này, các bản xem trước thực sự linh hoạt.

00:01:55.000 --> 00:02:02.000
Bạn có thể làm bất cứ điều gì bạn cần để thiết lập bản xem trước cho bất kỳ chế độ xem nào trong ứng dụng của mình và nó sẽ xuất hiện ngay trong khung vẽ trong Xcode.

00:02:02.000 --> 00:02:06.000
Nhưng các bản xem trước cũng là về việc lặp lại nhanh hơn.

00:02:06.000 --> 00:02:11.000
Khi bạn chỉnh sửa bất kỳ mã Swift nào trong dự án của mình, Xcode sẽ tự động thực hiện hai việc.

00:02:11.000 --> 00:02:18.000
Đầu tiên, nó sẽ kiểm tra thay đổi bạn đã thực hiện và biên dịch lại số lượng mã tối thiểu.

00:02:18.000 --> 00:02:20.000
Và sau đó, thứ hai, chạy lại bản xem trước của bạn.

00:02:20.000 --> 00:02:30.000
Điều này có nghĩa là bạn có thể tập trung vào việc viết và lặp lại mã của mình và Xcode sẽ tự động xử lý việc xây dựng, chạy và cập nhật các bản xem trước của bạn.

00:02:30.000 --> 00:02:39.000
Và, một khi bạn đã xác định bản xem trước, Xcode có thể tự động chạy bản xem trước đó trong các ngữ cảnh khác nhau mà không cần bạn phải viết bất kỳ mã bổ sung nào.

00:02:39.000 --> 00:02:45.000
Ví dụ, bạn có thể kiểm tra nó ở chế độ tối hoặc các kích thước và hướng loại khác nhau.

00:02:45.000 --> 00:02:51.000
Đây không phải là một phép loại suy hoàn hảo, nhưng có thể hữu ích khi nghĩ đến các bản xem trước tương tự như các bài kiểm tra.

00:02:51.000 --> 00:02:55.000
Giống như các bài kiểm tra, các bản xem trước chạy mã thực trong dự án thực của bạn.

00:02:55.000 --> 00:02:58.000
Chúng tôi không mô phỏng hoặc giải thích mã.

00:02:58.000 --> 00:03:06.000
Điều này có nghĩa là bạn tự tin rằng những gì bạn đang thử nghiệm và xem trước cũng đại diện cho những gì những người sẽ sử dụng ứng dụng của bạn sẽ trải nghiệm.

00:03:06.000 --> 00:03:15.000
Thứ hai, đầu tư vào các bài kiểm tra viết và xem trước, cuối cùng chúng sẽ giúp bạn phát triển nhanh hơn. Thậm chí một chút cũng có thể đi một chặng đường dài.

00:03:15.000 --> 00:03:19.000
Thứ ba, bạn có thể kiểm tra và xem trước các lớp khác nhau của ứng dụng của mình.

00:03:19.000 --> 00:03:31.000
Ví dụ, với các bài kiểm tra, bạn có thể có các bài kiểm tra giao diện người dùng cấp cao thực hiện một phần đáng kể chức năng của ứng dụng và bạn có thể có các bài kiểm tra đơn vị nhỏ hơn kiểm tra các thành phần riêng lẻ.

00:03:31.000 --> 00:03:40.000
Tương tự, bạn có thể có các bản xem trước cho các chế độ xem bao gồm rất nhiều ứng dụng của mình và bạn có thể có các bản xem trước hiển thị các chế độ xem lá riêng lẻ.

00:03:40.000 --> 00:03:43.000
Đó là một cái nhìn nhanh về cách các bản xem trước hoạt động.

00:03:43.000 --> 00:03:48.000
Tiếp theo, hãy tập trung vào cách bạn viết chúng và các loại nội dung bạn có thể xem trước.

00:03:48.000 --> 00:03:54.000
Bất kể bạn xem trước những gì, mọi bản xem trước bạn xác định đều có cùng một hình dạng cơ bản với ba phần.

00:03:54.000 --> 00:04:00.000
Đầu tiên, bắt đầu với trình khởi tạo macro Xem trước ở cấp cao nhất của tệp nguồn.

00:04:00.000 --> 00:04:04.000
Sau đó, trả về một hoặc nhiều nội dung đóng cuối.

00:04:04.000 --> 00:04:10.000
Đây là nơi bạn có thể định cấu hình giao diện người dùng của mình cho chính xác kịch bản mà bạn muốn xem trước.

00:04:10.000 --> 00:04:19.000
Và đó là tất cả những gì cần thiết để tạo bản xem trước, nhưng bạn cũng có thể tùy chọn định cấu hình bản xem trước để linh hoạt hơn nữa.

00:04:19.000 --> 00:04:28.000
Bạn có thể đặt tên cho nó và tùy thuộc vào nội dung của bản xem trước, bạn có thể cần hoặc muốn vượt qua cấu hình bổ sung trong trình khởi tạo.

00:04:28.000 --> 00:04:30.000
Chúng ta sẽ xem xét một số ví dụ về điều này.

00:04:30.000 --> 00:04:34.000
Hãy nói về loại nội dung bạn có thể xem trước.

00:04:34.000 --> 00:04:38.000
Có hai loại chính: chế độ xem và vật dụng.

00:04:38.000 --> 00:04:43.000
Lượt xem có thể đến từ SwiftUI, UIKit hoặc AppKit.

00:04:43.000 --> 00:04:47.000
Đối với SwiftUI, chỉ cần trả lại bất kỳ chế độ xem nào mà bạn đang làm việc.

00:04:47.000 --> 00:04:54.000
Nhưng bạn không cần phải chỉ vượt qua chế độ xem mà bạn đang thực hiện; Bạn có thể đặt nó trong bất kỳ chế độ xem nào khác mà bạn cần.

00:04:54.000 --> 00:04:59.000
Và điều này rất hữu ích vì đôi khi bạn muốn làm việc trên một chế độ xem trong một số bối cảnh rộng hơn.

00:04:59.000 --> 00:05:05.000
Ví dụ, một chế độ xem luôn thực sự có ý định nằm trong Danh sách.

00:05:05.000 --> 00:05:12.000
Đây cũng là nơi để đính kèm các công cụ sửa đổi cung cấp dữ liệu thông qua môi trường nếu các chế độ xem bạn đang xem trước cần nó.

00:05:12.000 --> 00:05:16.000
Xem trước giống như những cảnh mà bạn xác định ở cấp cao nhất của ứng dụng.

00:05:16.000 --> 00:05:19.000
Các cảnh đóng vai trò là điểm vào ứng dụng của bạn.

00:05:19.000 --> 00:05:22.000
Bạn thiết lập dữ liệu và bạn chuyển nó qua chế độ xem của mình.

00:05:22.000 --> 00:05:31.000
Các bản xem trước phục vụ cùng một mục đích, vì vậy bạn có thể sử dụng bản xem trước để thiết lập dữ liệu và nội dung và sau đó chuyển chúng vào các chế độ xem mà bạn đang xem trước.

00:05:31.000 --> 00:05:34.000
Khi nói đến việc cấu hình bản xem trước, bạn có thể đặt tên cho nó.

00:05:34.000 --> 00:05:43.000
Và các bản xem trước dựa trên chế độ xem, như SwiftUI, hỗ trợ chuyển một hoặc nhiều đặc điểm cấu hình dưới dạng danh sách đối số đa dạng.

00:05:43.000 --> 00:05:48.000
Ví dụ, bạn có thể đặt hướng bắt đầu cho thiết bị mà bạn đang xem trước.

00:05:48.000 --> 00:05:53.000
Hình dạng của API giống nhau đối với UIKit và AppKit.

00:05:53.000 --> 00:05:59.000
Thay vì chế độ xem SwiftUI, chỉ cần tạo bộ điều khiển chế độ xem và định cấu hình nó khi cần thiết.

00:05:59.000 --> 00:06:04.000
Ngoài bộ điều khiển chế độ xem, bạn cũng có thể xem trước trực tiếp UIView hoặc NSView.

00:06:04.000 --> 00:06:08.000
Vì vậy, có rất nhiều sự linh hoạt tùy thuộc vào những gì bạn đang cố gắng xây dựng.

00:06:08.000 --> 00:06:19.000
Tôi muốn cho bạn thấy những gì chúng ta đã nói cho đến nay để bạn có thể hiểu cách bắt đầu sử dụng các bản xem trước và một số công cụ giúp các bản xem trước trở nên linh hoạt.

00:06:19.000 --> 00:06:23.000
Tôi đang viết một ứng dụng tạo ảnh ghép.

00:06:23.000 --> 00:06:29.000
Tôi có thể chọn ảnh, tôi có thể chọn bố cục và thêm bộ lọc.

00:06:29.000 --> 00:06:34.000
Hãy đến Xcode và khám phá các tính năng của khung Xem trước.

00:06:34.000 --> 00:06:38.000
Tôi đã bắt đầu viết chế độ xem cho phép tôi thêm bộ lọc vào hình ảnh.

00:06:38.000 --> 00:06:41.000
Để giúp tôi lặp lại chế độ xem này, tôi sẽ cần xem trước.

00:06:41.000 --> 00:06:49.000
Để bắt đầu, tôi sẽ đảm bảo chế độ canvas được bật bằng cách đi đến phía trên bên phải của trình chỉnh sửa và nhấp vào menu tùy chọn.

00:06:49.000 --> 00:06:56.000
Chế độ canvas được bật theo mặc định cho các dự án mới, nhưng nếu bạn có một dự án hiện có, bạn có thể cần bật tính năng này lên.

00:06:56.000 --> 00:07:04.000
Nhưng ngay cả khi chế độ canvas được bật, canvas vẫn bị ẩn trừ khi có bản xem trước được xác định trong tệp, vì vậy hãy thêm một bản.

00:07:04.000 --> 00:07:09.000
Khi tôi bắt đầu gõ #Preview, Xcode gợi ý một bản xem trước cho tôi.

00:07:09.000 --> 00:07:17.000
Khi tôi chấp nhận hoàn thành, Xcode sẽ xây dựng và chạy bản xem trước của tôi, và chế độ xem của tôi xuất hiện ngay trong khung vẽ.

00:07:17.000 --> 00:07:20.000
Có ba chế độ khác nhau mà tôi có thể sử dụng để làm việc theo chế độ xem của mình.

00:07:20.000 --> 00:07:24.000
Những thứ này xuất hiện ở góc dưới cùng bên trái của khung vẽ.

00:07:24.000 --> 00:07:27.000
Chế độ đầu tiên và mặc định là chế độ trực tiếp hoặc tương tác.

00:07:27.000 --> 00:07:38.000
Tôi dành phần lớn thời gian của mình ở chế độ này vì tôi có thể tương tác với chế độ xem của mình trong khung vẽ như kéo các thanh trượt này.

00:07:38.000 --> 00:07:44.000
Tôi cũng có thể kiểm tra hoạt ảnh và tôi có thể gọi và trả lời mã không đồng bộ.

00:07:44.000 --> 00:07:48.000
Chế độ thứ hai là lựa chọn, hoặc chế độ tĩnh.

00:07:48.000 --> 00:07:54.000
Chế độ này chụp nhanh chế độ xem của tôi và cho phép tôi tương tác với các yếu tố trong khung vẽ.

00:07:54.000 --> 00:08:00.000
Nhấp vào chế độ xem sẽ làm nổi bật dòng mã đã xuất hiện trong trình chỉnh sửa nguồn.

00:08:00.000 --> 00:08:08.000
Và nếu tôi nhấp đúp vào một số chế độ xem văn bản nhất định, như Nhãn này, nó sẽ di chuyển tiêu điểm đến trình chỉnh sửa nguồn để tôi có thể nhanh chóng thay đổi nó.

00:08:08.000 --> 00:08:12.000
Vignette là một nhãn hiệu ngắn gọn hơn.

00:08:12.000 --> 00:08:14.000
Hãy nói về môi trường.

00:08:14.000 --> 00:08:17.000
Đó là, môi trường xem trước.

00:08:17.000 --> 00:08:22.000
Khung vẽ đang hiển thị cho tôi bản xem trước của tôi ở chế độ sáng, nhưng nếu tôi muốn xem nó ở chế độ tối thì sao?

00:08:22.000 --> 00:08:29.000
Tôi có thể chỉnh sửa mã của mình để đặt bảng màu, nhưng đôi khi tôi chỉ muốn nhanh chóng kiểm tra nó ở chế độ tối và có thể thực hiện một số chỉnh sửa.

00:08:29.000 --> 00:08:33.000
Thay vào đó, tôi sẽ sử dụng cửa sổ bật lên Cài đặt Thiết bị trong khung vẽ.

00:08:33.000 --> 00:08:38.000
Ở thanh dưới cùng, nhấp vào biểu tượng điều khiển để hiển thị cài đặt.

00:08:38.000 --> 00:08:46.000
Bây giờ tôi có thể bật chế độ tối hoặc kích thước loại động cụ thể.

00:08:46.000 --> 00:08:52.000
Nhưng nếu tôi muốn xem tầm nhìn của mình trông như thế nào trong cả hai bảng màu cùng một lúc thì sao?

00:08:52.000 --> 00:08:58.000
Chà, đối với điều này, tôi sẽ sử dụng chế độ xem trước thứ ba: các biến thể.

00:08:58.000 --> 00:09:12.000
Khi tôi nhấp vào chế độ biến thể ở dưới cùng của khung vẽ, tôi có thể chọn cài đặt thiết bị nào tôi muốn xem tất cả các giá trị, như bảng màu hoặc tất cả các kích thước loại động.

00:09:12.000 --> 00:09:23.000
Tôi có thể kiểm tra một biến thể riêng lẻ bằng cách nhấp vào nó, và sau đó tôi có thể lướt qua từng biến thể.

00:09:23.000 --> 00:09:24.000
Hừm.

00:09:24.000 --> 00:09:29.000
Khi tôi đạt đến các kích thước loại động lớn hơn này, tầm nhìn của tôi thực sự bắt đầu sụp đổ, phải không?

00:09:29.000 --> 00:09:30.000
Hãy sửa nó.

00:09:30.000 --> 00:09:37.000
Thay vì VStack, tôi sẽ sử dụng Biểu mẫu, hoàn hảo cho các nhóm điều khiển.

00:09:37.000 --> 00:09:41.000
Và các biểu mẫu trông tuyệt vời khi các điều khiển được đặt trong Phần.

00:09:41.000 --> 00:09:44.000
Hãy biến mỗi HStack thành một Phần.

00:09:44.000 --> 00:09:50.000
Tôi có thể thực hiện những thay đổi này trên tất cả các trường hợp HStack của mình bằng cách tận dụng lợi thế của việc chỉnh sửa đa con trỏ.

00:09:50.000 --> 00:09:59.000
Tôi sẽ chọn HStack đầu tiên, sau đó nhấn Command-Option-E để tìm và chèn con trỏ cho mỗi trường hợp HStack.

00:09:59.000 --> 00:10:05.000
Tôi sẽ thay đổi từng cái này thành Phần.

00:10:05.000 --> 00:10:11.000
Tôi cũng muốn có một tiêu đề cho mỗi Phần, được cung cấp trong phần đóng thứ hai.

00:10:11.000 --> 00:10:18.000
Mũi tên xuống và thêm phần đóng cuối bổ sung.

00:10:18.000 --> 00:10:21.000
Hãy sử dụng các Nhãn mà chúng tôi đã có cho các tiêu đề này.

00:10:21.000 --> 00:10:29.000
Mũi tên quay lại Nhãn và nhấn Command-Option-Right Brace để di chuyển Nhãn xuống tiêu đề.

00:10:29.000 --> 00:10:32.000
Và wow, quan điểm của chúng tôi trông đẹp hơn rất nhiều.

00:10:32.000 --> 00:10:38.000
Các tính năng tương tự này đều hoạt động tốt với chế độ xem AppKit và UIKit và bộ điều khiển chế độ xem.

00:10:38.000 --> 00:10:48.000
Tôi sẽ chuyển tab sang bộ điều khiển chế độ xem hiển thị bộ lọc bằng CoreImage và chuyển khung vẽ trở lại chế độ trực tiếp.

00:10:48.000 --> 00:10:53.000
Bây giờ, tôi đã thực hiện bản xem trước cho bộ điều khiển chế độ xem này và nó trông thực sự giống với bộ điều khiển SwiftUI.

00:10:53.000 --> 00:10:59.000
Trong macro xem trước, tôi đã tạo một bộ điều khiển chế độ xem và tôi đã chuyển cho nó một hình ảnh mẫu.

00:10:59.000 --> 00:11:08.000
Nhưng tôi muốn kiểm tra hình ảnh này với bộ lọc được áp dụng, vì vậy tôi sẽ thêm mã để chuyển bộ lọc vào bộ điều khiển chế độ xem của mình.

00:11:08.000 --> 00:11:13.000
Và, à, nở hoa và họa tiết. Không bao giờ già đi.

00:11:13.000 --> 00:11:17.000
Bên cạnh việc cấu hình bộ điều khiển chế độ xem của mình, tôi cũng có thể định cấu hình bản xem trước.

00:11:17.000 --> 00:11:22.000
Bất kỳ bản xem trước nào cũng có thể có tên tùy chọn làm đối số đầu tiên.

00:11:22.000 --> 00:11:29.000
Và với các bản xem trước, như SwiftUI và UIKit, tôi có thể thêm một hoặc nhiều đặc điểm trong danh sách đa dạng sau tên.

00:11:29.000 --> 00:11:35.000
Ví dụ, tôi có thể đặt bản xem trước để bắt đầu ở ngang.

00:11:35.000 --> 00:11:40.000
Đó là một chuyến tham quan nhanh về việc viết bản xem trước chế độ xem.

00:11:40.000 --> 00:11:44.000
Danh mục nội dung chính thứ hai mà bạn có thể xem trước là các tiện ích.

00:11:44.000 --> 00:11:49.000
Các tiện ích thực sự làm nổi bật tốc độ xem trước có thể nhanh như thế nào.

00:11:49.000 --> 00:11:51.000
Có hai loại tiện ích bạn có thể xem trước.

00:11:51.000 --> 00:11:57.000
Đầu tiên, các tiện ích sử dụng nhà cung cấp dòng thời gian tạo ra các mục nhập riêng lẻ.

00:11:57.000 --> 00:12:05.000
Trong Xcode, bạn có thể xem trước toàn bộ nhà cung cấp dòng thời gian hoặc bạn có thể tạo dòng thời gian của riêng mình cho các mục nhập ngay tại đó trong bản xem trước.

00:12:05.000 --> 00:12:08.000
Hãy đến Xcode để xem một ví dụ về từng thứ này.

00:12:08.000 --> 00:12:16.000
Ứng dụng cắt dán hình ảnh của tôi có một tiện ích với nhà cung cấp dòng thời gian hiển thị cho tôi ảnh ghép được xây dựng ngẫu nhiên mỗi giờ.

00:12:16.000 --> 00:12:22.000
Đối với nhà cung cấp dòng thời gian của tôi, tôi sẽ xem trước với ba điều: Đầu tiên, tiện ích tôi muốn xem trước.

00:12:22.000 --> 00:12:25.000
Thứ hai, nhà cung cấp dòng thời gian.

00:12:25.000 --> 00:12:31.000
Và, thứ ba, gia đình tiện ích để sử dụng để xem trước.

00:12:31.000 --> 00:12:37.000
Đó là một lượng nhỏ mã, nhưng nó mang lại cho tôi một số quy trình làm việc tuyệt vời trong Xcode.

00:12:37.000 --> 00:12:44.000
Mặc dù tiện ích này sẽ xây dựng một ảnh ghép ngẫu nhiên mỗi giờ, tôi không cần đợi một giờ để xem mọi mục nhập trong dòng thời gian.

00:12:44.000 --> 00:12:48.000
Xem trước ảnh chụp nhanh từng mục nhập dòng thời gian và hiển thị chúng trong khung vẽ.

00:12:48.000 --> 00:12:55.000
Tôi có thể nhấp qua chúng, hoặc sử dụng các phím mũi tên.

00:12:55.000 --> 00:13:09.000
Và khi tôi làm vậy, Xcode giao tiếp với tiện ích của tôi và hiển thị sự chuyển tiếp với hoạt ảnh giữa các mục nhập này, cho phép tôi phát hiện bất kỳ vấn đề nào, không chỉ trong giao diện người dùng, mà còn trong các thay đổi giữa các điểm khác nhau của dòng thời gian.

00:13:09.000 --> 00:13:13.000
Giống như ở đây, giữa các mục 8 và 9.

00:13:13.000 --> 00:13:16.000
Hình ảnh động ở đây không tuyệt vời. Nó chỉ mờ dần.

00:13:16.000 --> 00:13:24.000
Tôi muốn sửa kịch bản này, nhưng nhà cung cấp dòng thời gian của tôi là ngẫu nhiên, vì vậy tôi không biết liệu tôi có thấy kịch bản này một lần nữa khi tôi đang thử nghiệm hay không.

00:13:24.000 --> 00:13:28.000
Đây là nơi dòng thời gian của các mục cụ thể có ích.

00:13:28.000 --> 00:13:32.000
Tôi có thể tạo ra kịch bản chính xác mà tôi muốn lặp lại.

00:13:32.000 --> 00:13:46.000
Tôi sẽ thay đổi timelineProvider: trong Xem trước thành chỉ timeline, và sau đó, thay vì trả lại một nhà cung cấp timeline, tôi sẽ trả lại hai mục sao chép trường hợp tôi muốn sửa.

00:13:46.000 --> 00:13:53.000
Nhưng mã tôi cần sửa cho quá trình chuyển đổi này nằm trong một tệp khác và tôi không muốn mất bản xem trước này khi tôi điều hướng đi.

00:13:53.000 --> 00:13:58.000
Thuận tiện, tôi có thể giữ bản xem trước trong khung vẽ bằng cách sử dụng ghim.

00:13:58.000 --> 00:14:08.000
Nếu tôi nhấp vào nút ghim ở phía trên bên trái của khung vẽ, nó sẽ giữ cho bản xem trước hoạt động ngay cả khi tôi điều hướng đến một tệp khác.

00:14:08.000 --> 00:14:13.000
Đây là chế độ xem vẽ ảnh ghép và chứa quá trình chuyển đổi.

00:14:13.000 --> 00:14:23.000
Để giúp tôi tập trung vào việc khắc phục sự cố, trong khung vẽ, tôi có thể nhấn nút phát trong dòng thời gian và nút vòng lặp.

00:14:23.000 --> 00:14:29.000
Bây giờ Xcode sẽ tiếp tục phát lại quá trình chuyển đổi này trong khi tôi sửa mã.

00:14:29.000 --> 00:14:31.000
Và, à, đây là vấn đề.

00:14:31.000 --> 00:14:39.000
Khi ảnh ghép bao gồm các hàng, tôi có một chuyển tiếp đính kèm, nhưng tôi không có khi ảnh ghép bao gồm các cột.

00:14:39.000 --> 00:14:43.000
Tôi có thể sao chép và dán phần chuyển đổi.

00:14:43.000 --> 00:14:49.000
Và điều đó tốt hơn, nhưng nó đang làm sinh động ra khỏi rìa sau.

00:14:49.000 --> 00:14:53.000
Tôi nghĩ đẩy ra khỏi đáy sẽ tốt hơn.

00:14:53.000 --> 00:14:55.000
Và chúng ta bắt đầu.

00:14:55.000 --> 00:15:05.000
Với các bản xem trước, tôi đã có thể lặp lại nhanh chóng, không chỉ với nhà cung cấp dòng thời gian của mình, mà tôi còn có thể tinh chỉnh hoạt ảnh bằng cách sử dụng các sự kiện cụ thể.

00:15:05.000 --> 00:15:11.000
Nó thực sự làm cho việc xây dựng và lặp lại trên giao diện người dùng của tôi nhanh hơn và thú vị hơn.

00:15:11.000 --> 00:15:18.000
Quy trình làm việc của các tiện ích tương tự này cũng có sẵn cho loại tiện ích thứ hai mà bạn có thể xem trước: các hoạt động trực tiếp.

00:15:18.000 --> 00:15:28.000
API trông gần giống nhau nhưng thay vì cung cấp nhà cung cấp dòng thời gian và các mục nhập, bạn cung cấp một tập hợp các thuộc tính hoạt động trực tiếp và một tập hợp các trạng thái.

00:15:28.000 --> 00:15:29.000
Đây là một ví dụ.

00:15:29.000 --> 00:15:34.000
Đầu tiên, chuyển các thuộc tính bạn muốn sử dụng trong trình khởi tạo.

00:15:34.000 --> 00:15:38.000
Sau đó, thứ hai, chuyển các trạng thái nội dung cho các thuộc tính đó.

00:15:38.000 --> 00:15:50.000
Ví dụ: nếu bạn đang xây dựng một tiện ích để đặt bánh pizza, bạn có thể cung cấp một bộ trạng thái tùy chỉnh về cách nướng và giao bánh pizza đó, sau đó kiểm tra hình ảnh động giữa tất cả các trạng thái đó.

00:15:50.000 --> 00:15:54.000
Tôi chỉ đang làm xước bề mặt của những gì bạn có thể làm với các tiện ích xem trước.

00:15:54.000 --> 00:15:59.000
Kiểm tra phiên "Mang Widgets vào cuộc sống" để tìm hiểu thêm.

00:15:59.000 --> 00:16:06.000
Khi chúng ta chuyển sang phần cuối cùng của cuộc nói chuyện này, tôi muốn giúp bạn tận dụng tối đa các bản xem trước bằng văn bản trong dự án của mình.

00:16:06.000 --> 00:16:15.000
Chúng tôi sẽ khảo sát ba kịch bản khác nhau ảnh hưởng đến việc thiết lập dự án của bạn, cung cấp dữ liệu và tận dụng khả năng của các thiết bị của chúng tôi.

00:16:15.000 --> 00:16:19.000
Đầu tiên, tôi muốn nói về việc xem trước nội dung trong các mục tiêu thư viện.

00:16:19.000 --> 00:16:24.000
Điều này bao gồm các khuôn khổ, gói Swift hoặc thư viện động.

00:16:24.000 --> 00:16:27.000
Có nhiều lý do khiến bạn có thể sử dụng thư viện.

00:16:27.000 --> 00:16:35.000
Ví dụ, bạn có thể đang sử dụng các thư viện để mô đun hóa dự án của mình hoặc bạn có thể đang phát triển một thư viện để phân phối cho những người khác.

00:16:35.000 --> 00:16:44.000
Các bản xem trước hoạt động tốt trong các mục tiêu này, nhưng điều thú vị là bạn có thể tận dụng các mục tiêu thư viện để xem trước thêm trong bất kỳ dự án nào.

00:16:44.000 --> 00:16:50.000
Bước đầu tiên trong việc tận dụng các thư viện là hiểu được tệp thực thi mà Previews sử dụng để chạy mã của bạn.

00:16:50.000 --> 00:16:55.000
Các bản xem trước cần một tệp thực thi, một ứng dụng hoặc một tiện ích, để khởi chạy và hiển thị các bản xem trước.

00:16:55.000 --> 00:17:00.000
Thông thường đây là ứng dụng của bạn, nhưng nếu bạn không có ứng dụng, nó hoạt động như thế nào?

00:17:00.000 --> 00:17:04.000
Xem trước sử dụng ba thứ để tìm ra cái nào có thể thực thi để sử dụng.

00:17:04.000 --> 00:17:06.000
Một, các tệp nguồn mà bạn đang làm việc.

00:17:06.000 --> 00:17:11.000
Thứ hai, các mục tiêu chứa các tệp đó và tất cả các phụ thuộc của các mục tiêu đó.

00:17:11.000 --> 00:17:18.000
Sau đó, thứ ba, các bản xem trước giao nhau các phụ thuộc mục tiêu đó với các mục tiêu trong sơ đồ mà bạn đã chọn.

00:17:18.000 --> 00:17:22.000
Các bản xem trước sẽ chỉ chọn một ứng dụng nằm trong sơ đồ đang hoạt động.

00:17:22.000 --> 00:17:24.000
Hãy xem xét một vài ví dụ.

00:17:24.000 --> 00:17:30.000
Trong trường hợp đơn giản nhất, bạn có thể đang làm việc trong một tệp nguồn duy nhất là thành viên của mục tiêu ứng dụng.

00:17:30.000 --> 00:17:34.000
Có lẽ không có gì ngạc nhiên khi đây là ứng dụng chúng tôi sẽ sử dụng để xem trước.

00:17:34.000 --> 00:17:37.000
Nhưng nếu bạn có tệp nguồn đó trong hai mục tiêu thì sao?

00:17:37.000 --> 00:17:42.000
Ví dụ, phiên bản dùng thử của ứng dụng của bạn và phiên bản đầy đủ của ứng dụng của bạn.

00:17:42.000 --> 00:17:43.000
Đây là nơi mà kế hoạch xuất hiện.

00:17:43.000 --> 00:17:47.000
Các bản xem trước sẽ chỉ sử dụng ứng dụng nằm trong sơ đồ đang hoạt động.

00:17:47.000 --> 00:17:57.000
Đây là một ví dụ khác: Giả sử bạn có hai tệp Swift đang mở, mỗi tệp thuộc về một gói cũng có thể được nhập bởi một gói khác, sau đó tất cả đều được nhập bởi một ứng dụng.

00:17:57.000 --> 00:18:02.000
Chúng tôi sẽ duyệt qua các tệp đó để tìm tệp thực thi phổ biến đầu tiên ở trên cùng.

00:18:02.000 --> 00:18:09.000
Với ý nghĩ đó, bây giờ chúng ta có thể quay lại câu hỏi mà chúng ta đã bắt đầu: nếu tôi không có ứng dụng gì cả thì sao?

00:18:09.000 --> 00:18:16.000
Trong trường hợp này, các bản xem trước tạo một ứng dụng thay mặt bạn, được gọi là XCPreviewAgent, sẽ tải thư viện của bạn.

00:18:16.000 --> 00:18:24.000
Tất cả điều này xảy ra tự động cho bạn, nhưng thật hữu ích khi biết cách thức hoạt động của nó và đặc biệt là tên của quy trình này để bạn có thể biết mã của mình đang chạy ở đâu.

00:18:24.000 --> 00:18:32.000
Ví dụ: nếu có báo cáo sự cố cho XCPreviewAgent, bạn có thể biết nó đang xảy ra trong mã của mình và tìm ra vấn đề ở đâu.

00:18:32.000 --> 00:18:38.000
Tuy nhiên, bạn có thể tận dụng các mục tiêu thư viện để làm cho các bản xem trước hoạt động tốt hơn trong dự án của bạn theo ít nhất hai cách.

00:18:38.000 --> 00:18:44.000
Chúng ta có thể dành nhiều thời gian để nói về từng thứ này, nhưng ít nhất tôi muốn đề cập ngắn gọn đến chúng.

00:18:44.000 --> 00:18:54.000
Đầu tiên, nếu bạn mô đun hóa ứng dụng của mình thành các thư viện, bạn có thể tạo các sơ đồ nhỏ hơn để có thời gian xây dựng tốt hơn hoặc chỉ để có thể tập trung vào một phần của dự án của bạn.

00:18:54.000 --> 00:19:02.000
Và mặc dù bạn đang sử dụng một sơ đồ nhỏ hơn với một tập hợp con các mục tiêu của mình, bạn vẫn có thể nhận được toàn bộ sức mạnh của các bản xem trước.

00:19:02.000 --> 00:19:12.000
Thứ hai, nếu sau đó bạn mô đun hóa mã thành các thư viện, có thể có các chế độ xem cần các quyền được yêu cầu hoặc các khóa Info.plist mà mục tiêu ứng dụng của bạn đang cung cấp.

00:19:12.000 --> 00:19:17.000
Bạn vẫn có thể xem trước những lượt xem này bằng cách tạo một ứng dụng nhỏ chỉ để xem trước.

00:19:17.000 --> 00:19:19.000
Đây là cách.

00:19:19.000 --> 00:19:31.000
Giả sử tôi đang tạo một chế độ xem sử dụng thư viện Ảnh, yêu cầu khóa Info.plist cụ thể và tôi đã đặt chế độ xem đó vào thư viện - ví dụ: SamplePhotoLibraryUtilities.

00:19:31.000 --> 00:19:35.000
Tôi có thể xem trước với các khả năng phù hợp bằng cách tạo một mục tiêu ứng dụng mới.

00:19:35.000 --> 00:19:38.000
Sau đó, tôi sẽ thêm bất kỳ khả năng nào tôi cần.

00:19:38.000 --> 00:19:49.000
Trong trường hợp này, tôi cần thêm khóa Info.plist, vì vậy tôi sẽ vào cài đặt xây dựng, lọc chuỗi sử dụng thư viện Ảnh và đặt nó.

00:19:49.000 --> 00:19:55.000
Tiếp theo, tôi sẽ đảm bảo thư viện của tôi với chế độ xem tôi đang làm việc được nhúng vào ứng dụng của tôi.

00:19:55.000 --> 00:20:03.000
Sử dụng tab giai đoạn xây dựng, tôi sẽ thêm nó làm phụ thuộc mục tiêu và nhúng nó với giai đoạn tệp sao chép.

00:20:03.000 --> 00:20:09.000
Bây giờ tôi đã sẵn sàng để chọn sơ đồ chỉ chứa ứng dụng xem trước này và thư viện của tôi.

00:20:09.000 --> 00:20:17.000
Khi tôi xem trước chế độ xem của mình, nó sẽ sử dụng ứng dụng tôi vừa tạo để xem trước và tất cả các phím Info.plist phù hợp sẽ được đặt đúng chỗ.

00:20:17.000 --> 00:20:25.000
Điều này cho phép tôi tận dụng các sơ đồ nhỏ hơn với thời gian xây dựng nhanh hơn trong khi vẫn giữ khả năng xem trước tất cả các chế độ xem mà tôi đang thực hiện.

00:20:25.000 --> 00:20:30.000
Tiếp theo, hãy nói về cách đưa dữ liệu và tài sản vào bản xem trước của bạn.

00:20:30.000 --> 00:20:36.000
Tôi đã lẻn cái này vào một bản demo trước đó, nhưng tôi muốn quay lại và xem lại những gì tôi đã làm.

00:20:36.000 --> 00:20:40.000
Hãy quay lại bộ điều khiển chế độ xem mà chúng ta đã xem trước đó đã hiển thị bộ lọc.

00:20:40.000 --> 00:20:44.000
Khi tôi định cấu hình bản xem trước, tôi đã chuyển một hình ảnh mẫu.

00:20:44.000 --> 00:20:48.000
Hình ảnh này đến từ một danh mục tài sản trong dự án của tôi.

00:20:48.000 --> 00:20:56.000
Nếu tôi tiết lộ trình điều hướng dự án, danh mục nội dung được đặt ở đây, bên trong thư mục Nội dung xem trước.

00:20:56.000 --> 00:21:06.000
Những hình ảnh này rất tuyệt vời trong quá trình phát triển để giúp tôi kiểm tra các kịch bản khác nhau và không yêu cầu cấu hình mọi thiết bị tôi kiểm tra bằng ảnh.

00:21:06.000 --> 00:21:09.000
Nhưng tôi không muốn gửi những thứ này trong ứng dụng của mình.

00:21:09.000 --> 00:21:13.000
Tôi có thể tránh điều đó với một tính năng gọi là Tài sản Phát triển.

00:21:13.000 --> 00:21:21.000
Đây là những thư mục trong dự án của tôi mà tôi định cấu hình trong cài đặt xây dựng của mình và mọi thứ trong các thư mục đó sẽ bị xóa khỏi ứng dụng của tôi khi tôi gửi đến App Store.

00:21:21.000 --> 00:21:27.000
Điều này có thể bao gồm danh mục tài sản hoặc bất kỳ tài nguyên nào bạn sử dụng để giúp bạn xem trước.

00:21:27.000 --> 00:21:32.000
Hãy thêm thư mục Nội dung Xem trước này làm đường dẫn nội dung phát triển.

00:21:32.000 --> 00:21:40.000
Trong cài đặt dự án, chuyển đến tab cài đặt xây dựng và tôi có thể lọc các tài sản phát triển.

00:21:40.000 --> 00:21:51.000
Sau khi nhấp đúp để chỉnh sửa, tôi có thể nhập đường dẫn theo cách thủ công hoặc tôi có thể kéo thư mục Nội dung Xem trước vào cửa sổ bật lên.

00:21:51.000 --> 00:21:56.000
Với điều đó được thêm vào, bây giờ đường dẫn này sẽ bị xóa khỏi ứng dụng của tôi khi tôi gửi đến App Store.

00:21:56.000 --> 00:22:08.000
Đường dẫn tài sản phát triển được thiết lập tự động khi bạn tạo một dự án hoặc mục tiêu ứng dụng mới, nhưng bạn có thể thêm các đường dẫn bổ sung hoặc thêm chúng vào các loại mục tiêu khác hoặc các dự án hiện có.

00:22:08.000 --> 00:22:14.000
Bản demo đó nêu bật cách một cách cung cấp tài sản cho bản xem trước của bạn bằng cách thêm chúng vào dự án của bạn bằng cách sử dụng tài sản phát triển.

00:22:14.000 --> 00:22:21.000
Điều này hoạt động tốt nếu bạn muốn chia sẻ tất cả các tài sản này trên tất cả các thiết bị và trong nhóm của mình.

00:22:21.000 --> 00:22:27.000
Nhưng có một cách khác để cung cấp dữ liệu và hình ảnh nếu bạn đang muốn bắt đầu và chạy nhanh chóng.

00:22:27.000 --> 00:22:31.000
Nhiều người trong chúng ta đã có tài sản và dữ liệu trên thiết bị của mình.

00:22:31.000 --> 00:22:34.000
Xem trước cũng cho phép bạn tận dụng những thứ đó.

00:22:34.000 --> 00:22:40.000
Các trình mô phỏng trong Xcode có thể làm được rất nhiều và là một điểm khởi đầu tuyệt vời cho hầu hết sự phát triển.

00:22:40.000 --> 00:22:45.000
Các bản xem trước hoạt động tốt trong trình giả lập và chúng cũng hoạt động tốt trên các thiết bị vật lý.

00:22:45.000 --> 00:22:50.000
Có những lý do tại sao bạn muốn xem trước trên thiết bị mà ứng dụng của bạn cuối cùng sẽ xuất xưởng.

00:22:50.000 --> 00:22:54.000
Ví dụ, bạn muốn truy cập vào máy ảnh hoặc cảm biến.

00:22:54.000 --> 00:23:01.000
Một lý do khác là thiết bị của bạn có thể đã có rất nhiều dữ liệu thực trên đó, ví dụ như ảnh hoặc tệp.

00:23:01.000 --> 00:23:07.000
Tôi muốn chỉ cho bạn một ví dụ về cách tận dụng dữ liệu thiết bị của bạn.

00:23:07.000 --> 00:23:16.000
Một chế độ xem khác mà tôi đang làm việc có một nút cho phép tôi chọn ảnh từ thư viện ảnh iCloud của mình và sau đó chọn bố cục để tạo ảnh ghép mới.

00:23:16.000 --> 00:23:25.000
Tôi muốn kiểm tra điều đó giống như cách tôi đã lặp lại trên các chế độ xem khác của mình, nhưng tôi cần sử dụng một thiết bị có nhiều lựa chọn ảnh.

00:23:25.000 --> 00:23:31.000
Tôi sẽ thay đổi thiết bị nào được sử dụng để xem trước bằng cách sử dụng bộ chọn thiết bị xem trước ở dưới cùng của khung vẽ.

00:23:31.000 --> 00:23:34.000
Hãy đi sâu vào một số lựa chọn.

00:23:34.000 --> 00:23:42.000
Hầu hết thời gian, bạn có thể gắn bó với chế độ Tự động, chế độ này sẽ theo dõi họ thiết bị của điểm đến chạy mà bạn đã chọn.

00:23:42.000 --> 00:23:47.000
Ở phía đối diện theo nghĩa đen của menu là menu con More.

00:23:47.000 --> 00:23:55.000
Điều này liệt kê tất cả các thiết bị giả lập bạn đã thêm vào trong cửa sổ Thiết bị, vì vậy bạn có thể chọn chính xác kiểu máy bạn muốn.

00:23:55.000 --> 00:23:59.000
Tuy nhiên, đôi khi, bạn chỉ muốn chọn một thiết bị theo tính năng của nó.

00:23:59.000 --> 00:24:08.000
Phần giữa của menu cung cấp các thiết bị theo các tính năng phổ biến nên bạn không cần phải nhớ chính xác kiểu máy nào có Touch ID chẳng hạn.

00:24:08.000 --> 00:24:21.000
Nhưng tôi muốn sử dụng thiết bị này bên cạnh tôi, vì vậy tôi có thể truy cập bộ ảnh lớn từ thư viện của mình.

00:24:21.000 --> 00:24:25.000
Bộ chọn thiết bị xem trước cũng bao gồm bất kỳ thiết bị nào được kết nối với máy Mac của tôi.

00:24:25.000 --> 00:24:35.000
Khi tôi chọn một trong những thiết bị được kết nối này, Xcode sẽ xây dựng và xem trước dành riêng cho thiết bị này, bỏ qua hoàn toàn trình giả lập.

00:24:35.000 --> 00:24:40.000
Và cứ như vậy, tôi có tầm nhìn của mình đang chạy trên một thiết bị thực.

00:24:40.000 --> 00:24:46.000
Nhưng chỉ vì nó có trên thiết bị của tôi không có nghĩa là tôi không thể sử dụng các tính năng của bản xem trước mà chúng ta đã nói đến cho đến nay.

00:24:46.000 --> 00:24:50.000
Tôi vẫn có thể sử dụng tất cả các chế độ của canvas và thậm chí đặt cài đặt thiết bị.

00:24:50.000 --> 00:24:57.000
Ví dụ, cái này trông như thế nào trong Chế độ tối?

00:24:57.000 --> 00:25:00.000
Và các bản cập nhật mã của tôi hiển thị ngay lập tức trên thiết bị của tôi.

00:25:00.000 --> 00:25:14.000
Chế độ xem này cần tiêu đề điều hướng, vì vậy tôi sẽ thêm Tiêu đề điều hướng vào mã, và sau đó, tôi sẽ tùy chỉnh tiêu đề và xem lại nó trên thiết bị ngay lập tức.

00:25:14.000 --> 00:25:17.000
Điều đó thật nhanh!

00:25:17.000 --> 00:25:21.000
Bây giờ tôi đã sẵn sàng để kiểm tra tích hợp thư viện Ảnh của mình bằng cách sử dụng tất cả các hình ảnh trên điện thoại này.

00:25:21.000 --> 00:25:31.000
Tôi sẽ nhấn Thêm từ Ảnh, chọn một số ảnh-- Aww, con sóc này rất dễ thương-- và nhấn Thêm.

00:25:31.000 --> 00:25:33.000
Khung cảnh này đang hoạt động rất tốt.

00:25:33.000 --> 00:25:38.000
Ảnh của tôi xuất hiện trong bộ chọn bố cục và tôi có thể nhanh chóng kiểm tra các bố cục khác nhau.

00:25:38.000 --> 00:25:39.000
Tôi thích điều này.

00:25:39.000 --> 00:25:45.000
Chỉnh sửa trong Xcode và trải nghiệm quan điểm của tôi trở nên sống động trên điện thoại của tôi không bao giờ cũ.

00:25:45.000 --> 00:25:50.000
Và đó là ba mẹo và thủ thuật để sử dụng bản xem trước trong dự án của bạn.

00:25:50.000 --> 00:26:01.000
Một vài điều cần kết thúc: API Xem trước cung cấp cho bạn sự linh hoạt để xác định các bản xem trước cho giao diện người dùng trên toàn bộ ứng dụng của bạn và cho tất cả các nền tảng của chúng tôi.

00:26:01.000 --> 00:26:06.000
Bạn có thể sử dụng SwiftUI, UIKit, AppKit và nhiều loại tiện ích.

00:26:06.000 --> 00:26:11.000
Các bản xem trước cũng linh hoạt trong việc cho phép bạn định cấu hình bản xem trước của mình chính xác theo cách bạn cần.

00:26:11.000 --> 00:26:20.000
Bạn có thể chuyển dữ liệu và tài sản mẫu, thiết lập môi trường trong mã và tận dụng các tính năng trong Xcode để kiểm tra các cài đặt thiết bị khác nhau.

00:26:20.000 --> 00:26:34.000
Và các bản xem trước cũng cung cấp cho bạn sự linh hoạt trong việc xem trước trên các thiết bị khác nhau, cho dù đó là sự tiện lợi của trình giả lập ngay trong khung vẽ hay bằng cách sử dụng thiết bị vật lý để có độ trung thực cao nhất hoặc truy cập dữ liệu và ảnh.

00:26:34.000 --> 00:26:38.000
Nhưng bạn vẫn nhận được tất cả các tính năng của bản xem trước bất kể bạn chọn thiết bị nào.

00:26:38.000 --> 00:26:50.000
Cuối cùng, nếu bạn mô đun hóa ít nhất các phần của ứng dụng của mình vào thư viện, bạn có thể tạo các sơ đồ trong Xcode để có thời gian xây dựng tốt hơn và tập trung vào một thứ bạn đang làm.

00:26:50.000 --> 00:26:53.000
Các bản xem trước ở đây để giúp bạn sáng tạo.

00:26:53.000 --> 23:59:59.000
Cảm ơn vì đã xem.

