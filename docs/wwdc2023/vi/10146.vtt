WEBVTT

00:00:00.000 --> 00:00:03.000
♪ Hip-hop nhạc cụ êm dịu ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:11.000
Xin chào!

00:00:11.000 --> 00:00:14.000
Tôi là Ilya Veygman, một kỹ sư của Core Location.

00:00:14.000 --> 00:00:18.000
Tôi ở đây hôm nay để nói chuyện với bạn về Vị trí cốt lõi cho điện toán không gian.

00:00:18.000 --> 00:00:26.000
Cho dù bạn là người hoàn toàn mới đối với hệ sinh thái của Apple hay một nhà phát triển App Store lâu năm, bạn có thể có rất nhiều câu hỏi về những thứ mà hệ thống này có thể làm.

00:00:26.000 --> 00:00:33.000
xrOS rất tuyệt vời trong việc cho bạn thấy thành quả của trí tưởng tượng của bạn, trong khi Core Location ở đó để giúp bạn có một mỏ neo trong thế giới thực.

00:00:33.000 --> 00:00:39.000
Hôm nay, tôi ở đây để nói với bạn tất cả về cách thực hiện điều đó với Core Location.

00:00:39.000 --> 00:00:43.000
Đối với những người bạn hoàn toàn mới đối với hệ sinh thái nhà phát triển Apple, chào mừng!

00:00:43.000 --> 00:00:50.000
Tôi muốn bắt đầu với một ví dụ đơn giản để cho bạn thấy việc thêm vị trí vào ứng dụng của bạn thực sự đơn giản như thế nào.

00:00:50.000 --> 00:00:54.000
Đối với các nhà phát triển có kinh nghiệm, không bao giờ đau lòng khi xem lại những điều cơ bản của một người.

00:00:54.000 --> 00:01:02.000
Vì vậy, hãy bắt đầu bằng cách xem xét một số mã mẫu cho ứng dụng demo này được liên kết với phiên của đồng nghiệp của tôi, "Khám phá các bản cập nhật vị trí được sắp xếp hợp lý."

00:01:02.000 --> 00:01:11.000
Trong diễn viên này, chúng tôi yêu cầu cập nhật trực tiếp từ CLLocationUpdate và chúng tôi sẽ tải chúng không đồng bộ ở đây khi chúng có sẵn.

00:01:11.000 --> 00:01:17.000
Để biết thêm chi tiết về API cập nhật vị trí, vui lòng tham khảo phiên được liên kết với bản demo này.

00:01:17.000 --> 00:01:26.000
Các ứng dụng phải yêu cầu sự cho phép của người dùng trước khi truy cập thông tin nhạy cảm như vị trí, vì vậy ở đây, chúng tôi gọi API này để làm như vậy.

00:01:26.000 --> 00:01:30.000
Trong ví dụ đơn giản này, chúng tôi làm điều đó khi chế độ xem.

00:01:30.000 --> 00:01:36.000
Chúng tôi cũng phải đảm bảo rằng chúng tôi đặt chuỗi này trong thông tin của ứng dụng trong Cài đặt Xây dựng.

00:01:36.000 --> 00:01:46.000
Một lần nữa, các ứng dụng phải xin phép người dùng trước khi họ có thể nhận được thông tin nhạy cảm như vị trí và chuỗi này ở đó để giải thích cho người dùng tại sao.

00:01:46.000 --> 00:01:50.000
Sau đó nó sẽ được hiển thị trong một lời nhắc được hiển thị cho người dùng yêu cầu quyền truy cập này.

00:01:50.000 --> 00:01:53.000
Vì vậy, hãy xem cái này trông như thế nào khi chúng ta chạy nó trong trình giả lập.

00:01:53.000 --> 00:01:59.000
Một lần nữa, trong ứng dụng này, chúng tôi yêu cầu truy cập vị trí ngay lập tức vì đó là một ví dụ đơn giản.

00:01:59.000 --> 00:02:01.000
Điều này sẽ không phải lúc nào cũng xảy ra với các ứng dụng của bạn.

00:02:01.000 --> 00:02:06.000
Bạn có thể thấy rằng chúng tôi nhận được lời nhắc hỏi người dùng liệu họ có cấp quyền truy cập vào thông tin cá nhân của họ hay không.

00:02:06.000 --> 00:02:14.000
Bây giờ trước khi tiếp tục, hãy trò chuyện thêm một chút về cách Core Location xử lý quyền riêng tư của người dùng trên hệ thống này.

00:02:14.000 --> 00:02:22.000
Ngay cả khi bạn chưa quen với hệ sinh thái nhà phát triển của chúng tôi, bạn có thể đã biết rằng Apple tập trung nhiều vào quyền riêng tư trong trải nghiệm người dùng của mình.

00:02:22.000 --> 00:02:26.000
Truy cập vị trí không phải là ngoại lệ đối với câu châm ngôn này.

00:02:26.000 --> 00:02:33.000
Trước khi bạn có thể nhận được thông tin cập nhật về vị trí địa lý, trước tiên bạn phải yêu cầu người dùng cho phép truy cập thông tin vị trí của họ.

00:02:33.000 --> 00:02:37.000
Bạn sẽ không nhận được cập nhật vị trí mà không có sự đồng ý của người dùng.

00:02:37.000 --> 00:02:48.000
Bạn có thể yêu cầu sự đồng ý trên hệ thống này bằng cách tạo trình quản lý vị trí và gọi requestWhenInUseAuthorization, cùng với việc đặt chuỗi mô tả sử dụng trong Info.plist của ứng dụng của bạn.

00:02:48.000 --> 00:02:52.000
Điều này, một lần nữa, cho người dùng biết lý do tại sao ứng dụng của bạn cần biết vị trí của họ.

00:02:52.000 --> 00:02:58.000
Cuối cùng, bạn chỉ nên yêu cầu quyền truy cập này trong ngữ cảnh khi ứng dụng của bạn thực sự cần nó.

00:02:58.000 --> 00:03:05.000
Điều này không chỉ tốt hơn từ góc độ riêng tư, nó còn đảm bảo người dùng có nhiều khả năng cho phép truy cập hơn.

00:03:05.000 --> 00:03:11.000
Nhớ lại rằng chúng tôi đã làm điều này trong mã mẫu của mình vì nó là một ví dụ rất đơn giản và bắt đầu yêu cầu cập nhật vị trí ngay lập tức.

00:03:11.000 --> 00:03:14.000
Vậy lời nhắc này trông như thế nào và nó hiển thị điều gì?

00:03:14.000 --> 00:03:18.000
Người dùng sẽ thấy lời nhắc từ ứng dụng của bạn tương tự như ở đây.

00:03:18.000 --> 00:03:24.000
Điều này có thể trông quen thuộc với những người bạn đang xem, những người đã có kinh nghiệm phát triển iOS.

00:03:24.000 --> 00:03:31.000
Người dùng có thể cấp quyền truy cập vị trí chỉ cho phiên này, trong khi sử dụng ứng dụng hoặc từ chối hoàn toàn.

00:03:31.000 --> 00:03:40.000
Người dùng cũng có thể chọn cấp cho ứng dụng của bạn kiến thức về vị trí chính xác hoặc gần đúng của họ bằng cách sử dụng nút được đánh dấu, giống như trên iOS.

00:03:40.000 --> 00:03:52.000
Để biết thêm thông tin về cách thức hoạt động chính xác so với vị trí gần đúng này, vui lòng tham khảo "Có gì mới trong vị trí" từ WWDC20, được tổ chức bởi một phiên bản trẻ hơn của bản thân tôi.

00:03:52.000 --> 00:03:54.000
Vì vậy, quay lại bản demo.

00:03:54.000 --> 00:04:04.000
Sau khi chúng tôi cấp cho ứng dụng này quyền truy cập vào vị trí chính xác và cho phép nó trong khi sử dụng, bây giờ chúng tôi có thể bắt đầu nhận cập nhật vị trí và xem ứng dụng của chúng tôi nhận được cập nhật vị trí.

00:04:04.000 --> 00:04:07.000
Vậy chính xác thì ý tôi là gì khi nói "vị trí chính xác"?

00:04:07.000 --> 00:04:11.000
Đó là, tai nghe có thể biết chính xác vị trí của người dùng như thế nào?

00:04:11.000 --> 00:04:17.000
Đối với một đơn vị, bạn nên mong đợi độ chính xác tương tự như của máy Mac, vì vậy đó là khoảng 100 mét.

00:04:17.000 --> 00:04:24.000
Điều này sẽ đủ cho các ứng dụng như những ứng dụng được sử dụng để tìm nhà hàng, công viên gần đó và các điểm tham quan khác.

00:04:24.000 --> 00:04:35.000
Tuy nhiên, nếu iPhone của bạn ở gần đó, thiết bị này có thể tận dụng các kết nối hiện có giữa hai thiết bị này để cải thiện độ chính xác vị trí mà bạn sẽ nhận được từ tai nghe để ở cùng cấp độ với iPhone.

00:04:35.000 --> 00:04:40.000
Thiết bị của bạn thậm chí còn hoạt động tốt hơn khi kết hợp với phần cứng Apple khác của chúng tôi.

00:04:40.000 --> 00:04:49.000
Điều này mở ra một loạt các ứng dụng hoàn toàn mới có thể chạy trên hệ thống điện toán không gian như hệ thống này, chẳng hạn như cập nhật thời tiết chính xác, gắn thẻ địa lý và hơn thế nữa.

00:04:49.000 --> 00:04:57.000
Bây giờ đối với cả người mới đến và nhà phát triển có kinh nghiệm, bạn cũng đã nghe tôi nói rằng một ứng dụng đủ điều kiện để nhận cập nhật vị trí trong khi người dùng đang sử dụng nó.

00:04:57.000 --> 00:05:02.000
Điều này có nghĩa là khá đơn giản trên iPhone hoặc đồng hồ, nhưng nó có ý nghĩa gì đối với chúng ta?

00:05:02.000 --> 00:05:06.000
Xét cho cùng, trải nghiệm người dùng rất khác so với iPhone hoặc đồng hồ.

00:05:06.000 --> 00:05:09.000
Vì vậy, hãy nói về điều đó.

00:05:09.000 --> 00:05:19.000
Hãy để chúng tôi gọi lại "Có gì mới ở vị trí cốt lõi" từ năm 2019, nơi chúng tôi đã thảo luận về cách thức và thời điểm các ứng dụng tiền cảnh được coi là đang được sử dụng trên iOS.

00:05:19.000 --> 00:05:21.000
Đối với một nền tảng như iPhone, điều này khá rõ ràng.

00:05:21.000 --> 00:05:26.000
Chỉ có thể thực sự có một ứng dụng được đặt trước tại bất kỳ thời điểm nào.

00:05:26.000 --> 00:05:32.000
Ngoài ra còn có một khoảng thời gian gia hạn ngắn sau khi ứng dụng được nền trong khi nó vẫn có thể nhận được các bản cập nhật vị trí.

00:05:32.000 --> 00:05:33.000
Vậy còn ở đây thì sao?

00:05:33.000 --> 00:05:39.000
Ứng dụng của bạn trên nền tảng này có thể hoàn toàn nhập vai hoặc bạn có thể có các ứng dụng chạy trong một cái gì đó giống như một cửa sổ.

00:05:39.000 --> 00:05:40.000
"Vị trí cốt lõi xử lý điều này như thế nào?

00:05:40.000 --> 00:05:42.000
Có lẽ bạn đang thắc mắc.

00:05:42.000 --> 00:05:45.000
Để có trải nghiệm hoàn toàn nhập vai, điều này thật đơn giản.

00:05:45.000 --> 00:05:56.000
Miễn là người dùng đang chạy ứng dụng của bạn, chúng tôi coi nó đang được sử dụng và đủ điều kiện để nhận cập nhật vị trí, giả sử rằng người dùng đã đồng ý cho ứng dụng của bạn để có được vị trí của họ.

00:05:56.000 --> 00:06:03.000
Trên hệ thống này, Core Location cung cấp thông tin vị trí cho ứng dụng của bạn, miễn là người dùng gần đây đã xem ứng dụng.

00:06:03.000 --> 00:06:15.000
Nói một cách dí dỏm, trên nền tảng này, chúng tôi xem xét các ứng dụng đang chạy trong một cửa sổ đủ điều kiện để nhận các bản cập nhật vị trí nếu người dùng đồng ý cung cấp vị trí của họ cho họ và nếu người dùng gần đây đã xem ứng dụng.

00:06:15.000 --> 00:06:17.000
Hãy xem xét điều này một cách cụ thể hơn.

00:06:17.000 --> 00:06:22.000
Hãy tưởng tượng rằng cả hai ứng dụng này đã được phép truy cập vào vị trí của người dùng trong khi sử dụng.

00:06:22.000 --> 00:06:29.000
Miễn là người dùng không tương tác hoặc xem một trong hai ứng dụng, sẽ không ai có thể nhận được cập nhật vị trí.

00:06:29.000 --> 00:06:40.000
Nếu người dùng bắt đầu xem - nghĩa là tương tác với - ứng dụng bên trái, ứng dụng đó hiện có thể nhận được cập nhật vị trí, trong khi ứng dụng bên phải vẫn không thể, ngay cả khi nó nằm trong tầm nhìn ngoại vi của người dùng.

00:06:40.000 --> 00:06:52.000
Và điều này sẽ vẫn đúng cho đến khi người dùng tìm một nơi khác, chẳng hạn như ở ứng dụng bên phải hoặc di chuyển hai ứng dụng lại với nhau để họ có thể xem cả hai ứng dụng cùng một lúc.

00:06:52.000 --> 00:06:59.000
Cũng giống như trong iOS, cũng có một khoảng thời gian ân hạn trước khi Core Location xem xét ứng dụng không còn được sử dụng nữa.

00:06:59.000 --> 00:07:16.000
Điều này có nghĩa là nếu người dùng nhìn vào một ứng dụng ở bên trái, thì vào ứng dụng bên phải trước khi nhìn vào một nơi khác, sẽ có một khoảng thời gian ngắn - một vài giây - khi cả hai ứng dụng vẫn đủ điều kiện để có được vị trí trước khi Core Location coi các ứng dụng này là không sử dụng.

00:07:16.000 --> 00:07:33.000
Chúng tôi cảm thấy rằng một mô hình truy cập vị trí như vậy cung cấp trải nghiệm tốt trên nền tảng này trong khi vẫn tôn trọng quyền riêng tư của người dùng, vì người dùng sẽ không theo dõi vị trí của họ nếu không có sự cho phép hoặc kiến thức của họ, đặc biệt là vì thiết bị này được dự định sử dụng tương tác, thay vì như một thứ gì đó

00:07:33.000 --> 00:07:38.000
Như vậy, các ứng dụng sẽ không thể cập nhật vị trí trong khi chúng không chạy.

00:07:38.000 --> 00:07:43.000
Tương tự, các bản cập nhật từ API giám sát của chúng tôi sẽ không được phân phối.

00:07:43.000 --> 00:07:54.000
Vì vậy, điều này đưa tôi đến một thứ khác mà nhiều nhà phát triển đã có ứng dụng sử dụng vị trí cho nền tảng Apple có thể đang tự hỏi: Ứng dụng của tôi sẽ hoạt động như thế nào khi chạy ở chế độ tương thích?

00:07:54.000 --> 00:08:00.000
Vậy điều gì sẽ xảy ra nếu tôi chỉ chạy ứng dụng iPhone hoặc iPad của mình mà không có thay đổi mã cho một thiết bị chạy xrOS?

00:08:00.000 --> 00:08:02.000
Hãy nói về điều đó một chút.

00:08:02.000 --> 00:08:08.000
Như đã thảo luận, "tính hữu ích" của "trong khi đang sử dụng" bắt nguồn từ nơi người dùng đã xem gần đây.

00:08:08.000 --> 00:08:12.000
Và các ứng dụng chỉ đủ điều kiện để có được vị trí khi người dùng đang xem chúng.

00:08:12.000 --> 00:08:17.000
Vậy còn các ứng dụng yêu cầu Luôn ủy quyền thì sao?

00:08:17.000 --> 00:08:23.000
Các ứng dụng nhắc nhở cho Luôn luôn sẽ có yêu cầu của họ được chuyển hướng đến yêu cầu ủy quyền trong khi sử dụng.

00:08:23.000 --> 00:08:29.000
Tương tự, bạn sẽ thấy rằng Luôn luôn không phải là một tùy chọn cho ứng dụng của bạn trong Cài đặt.

00:08:29.000 --> 00:08:35.000
Vị trí trên hệ thống này hoạt động tốt nhất để cập nhật một lần hoặc liên tục trong khi ứng dụng của bạn đang được sử dụng.

00:08:35.000 --> 00:08:43.000
Nếu ứng dụng iPhone hoặc iPad tương thích của bạn sử dụng giám sát khu vực hoặc CLMonitor mới của chúng tôi, nó sẽ không được phân phối các sự kiện.

00:08:43.000 --> 00:08:56.000
Cân nhắc xem ứng dụng iOS của bạn có được thiết kế theo cách giả định rằng một API cụ thể luôn được hỗ trợ và có thể hoạt động theo những cách bất ngờ nếu, ví dụ, API giám sát không bao giờ cung cấp các sự kiện.

00:08:56.000 --> 00:09:02.000
Tương tự, hãy xem xét liệu ứng dụng của bạn có dựa vào việc cập nhật vị trí trong nền trong khi nó không chạy hay không.

00:09:02.000 --> 00:09:16.000
Để tìm hiểu thêm về API của chúng tôi nói chung, đặc biệt là những gì mới trong năm nay, tôi khuyên bạn nên xem hai phiên khác này từ các đồng nghiệp của tôi, cũng như bất kỳ phiên nào khác của chúng tôi từ những năm trước, đặc biệt nếu bạn là người mới tham gia hệ sinh thái của chúng tôi.

00:09:16.000 --> 00:09:29.000
"Khám phá các bản cập nhật vị trí được sắp xếp hợp lý" thảo luận về một số phát triển mới trong API của chúng tôi, đặc biệt là xung quanh cách chúng tôi khuyên bạn nên nhận các bản cập nhật vị trí và cách chúng tôi đã làm cho API của mình tương thích hơn với Swift đồng thời.

00:09:29.000 --> 00:09:40.000
"Gặp gỡ Giám sát Vị trí Cốt lõi" thảo luận thêm về những phát triển mới trong việc giám sát API và cách chúng tôi đã mô phỏng lại cách một ứng dụng có thể nhận thông báo về các sự kiện như lối vào và lối ra địa lý.

00:09:40.000 --> 00:09:46.000
Nếu vị trí là điều bạn quan tâm đến ứng dụng của mình, tôi chắc chắn rằng bạn sẽ thấy đây là thời gian được sử dụng tốt.

00:09:46.000 --> 00:09:52.000
xrOS cung cấp một trải nghiệm thực sự thú vị mà tôi chắc chắn rằng nhiều người trong số các bạn đã mong đợi trong một thời gian khá dài.

00:09:52.000 --> 00:10:03.000
Chúng tôi cũng vậy, và chúng tôi đã làm việc chăm chỉ để đảm bảo rằng bạn có thể cung cấp trải nghiệm người dùng tốt nhất có thể cho cả các ứng dụng được thiết kế dành riêng cho thiết bị này và cho các ứng dụng iPhone hoặc iPad tương thích đó.

00:10:03.000 --> 00:10:14.000
Chúng tôi cũng muốn đảm bảo rằng quyền riêng tư của người dùng được tôn trọng theo những cách tốt nhất có thể và quá trình chuyển đổi sang nền tảng này diễn ra liền mạch nhất có thể đối với những bạn có ứng dụng hiện có trong cửa hàng của chúng tôi.

00:10:14.000 --> 00:10:23.000
Bây giờ đã nói, hãy xem xét các ứng dụng tương thích của bạn có thể hoạt động như thế nào trong trường hợp khi chúng không nhận được thông báo về các sự kiện như thay đổi khu vực hoặc lượt truy cập.

00:10:23.000 --> 00:10:31.000
Tôi chắc chắn khuyến khích bạn xem bất kỳ phiên nào khác, cả cụ thể cho Vị trí cốt lõi và tính toán không gian nói chung, điều này có thể thu hút sở thích của bạn.

00:10:31.000 --> 00:10:34.000
Cảm ơn bạn và tận hưởng phần còn lại của WWDC.

00:10:34.000 --> 23:59:59.000
♪

