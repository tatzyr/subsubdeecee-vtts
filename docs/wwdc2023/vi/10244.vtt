WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
Ethan: Xin chào!

00:00:11.000 --> 00:00:15.000
Và chào mừng đến với "Tạo tài liệu phong phú với Swift-DocC".

00:00:15.000 --> 00:00:18.000
Tôi là Ethan, một kỹ sư trong nhóm Swift-DocC.

00:00:18.000 --> 00:00:31.000
Xcode 15 mang đến tất cả các khả năng mới cho tài liệu Swift-DocC của bạn, điều này sẽ không chỉ làm cho tài liệu của bạn nổi bật mà còn cung cấp cho bạn các công cụ hiệu quả hơn để dạy người đọc về ứng dụng hoặc khuôn khổ của bạn.

00:00:31.000 --> 00:00:40.000
Và với trình chỉnh sửa Xem trước Tài liệu hoàn toàn mới của Xcode 15, bạn sẽ có thể lặp lại tài liệu của mình mà không cần rời khỏi trình chỉnh sửa Nguồn.

00:00:40.000 --> 00:00:42.000
Tôi nóng lòng muốn cho bạn xem nó.

00:00:42.000 --> 00:00:46.000
Hãy bắt đầu với một cái nhìn tổng quan nhanh về Swift-DocC.

00:00:46.000 --> 00:00:58.000
Swift-DocC là một trình biên dịch tài liệu được tích hợp trực tiếp vào Xcode cho phép bạn viết và xuất bản tài liệu phong phú cho dự án của mình ngay bên cạnh mã nguồn của bạn.

00:00:58.000 --> 00:01:10.000
Bạn sử dụng kết hợp các nhận xét tài liệu được viết trực tiếp trong nguồn và các tệp Markdown độc lập để viết cả nội dung khái niệm cấp cao và tài liệu kỹ thuật chi tiết.

00:01:10.000 --> 00:01:20.000
Tài liệu này tương thích ngay với các giải pháp lưu trữ web tĩnh, cho phép xuất bản đơn giản các dịch vụ như GitHub Pages và Netlify.

00:01:20.000 --> 00:01:30.000
Và tất nhiên, tài liệu của bạn cũng sẽ xuất hiện trong cửa sổ tài liệu tích hợp sẵn của Xcode và tích hợp vào trình chỉnh sửa Nguồn của Xcode với Trợ giúp Nhanh.

00:01:30.000 --> 00:01:38.000
Điều này có nghĩa là tài liệu bạn viết sẽ tự động có sẵn cho bất kỳ ai có quyền truy cập vào mã nguồn của bạn mà không cần bất kỳ công việc bổ sung nào từ phía bạn.

00:01:38.000 --> 00:01:47.000
Kể từ khi phát hành Swift-DocC trong Xcode 13, dự án Swift-DocC đã được mở nguồn và hiện đang được phát triển mở.

00:01:47.000 --> 00:01:59.000
Chúng tôi đã làm việc với cộng đồng Swift để thêm hỗ trợ ghi lại tất cả các dự án của bạn, bao gồm hỗ trợ cho cả ứng dụng và khuôn khổ cho dù được viết bằng Swift, Objective-C hay thậm chí là kết hợp cả hai.

00:01:59.000 --> 00:02:05.000
Xcode 15 đưa trải nghiệm viết tài liệu Swift-DocC lên một tầm cao mới.

00:02:05.000 --> 00:02:15.000
Trình chỉnh sửa Xem trước Tài liệu cung cấp cho bạn chế độ xem thời gian thực về phiên bản được hiển thị của tài liệu khi bạn nhập, cung cấp phản hồi với mỗi lần nhấn phím.

00:02:15.000 --> 00:02:30.000
Và với khả năng tác giả hoàn toàn mới như bố cục dựa trên lưới, hỗ trợ video, biểu tượng trang tùy chỉnh và thậm chí các chủ đề hoàn toàn tùy chỉnh, bạn có thể tạo tài liệu thực sự đặt làm riêng thực sự ủng hộ dự án của mình.

00:02:30.000 --> 00:02:35.000
Phiên này sẽ tập trung vào một số khả năng nâng cao hơn của Swift-DocC.

00:02:35.000 --> 00:02:45.000
Vì vậy, nếu đây là lần đầu tiên bạn tìm hiểu về Swift-DocC, trước tiên tôi khuyên bạn nên xem "Gặp gỡ tài liệu DocC trong Xcode" và "Nâng cao tài liệu DocC của bạn trong Xcode".

00:02:45.000 --> 00:02:57.000
Hai phiên này giới thiệu khuôn khổ mà chúng tôi sẽ cải thiện tài liệu cho ngày hôm nay và hướng dẫn bạn trong quá trình thêm các phần tài liệu đầu tiên của bạn vào một dự án hoàn toàn mới.

00:02:57.000 --> 00:03:05.000
Chúng ta sẽ bắt đầu ngày hôm nay bằng cách bao gồm một quy trình làm việc mới để viết tài liệu với trình chỉnh sửa Xem trước Tài liệu của Xcode 15.

00:03:05.000 --> 00:03:13.000
Chúng tôi sẽ sử dụng trình chỉnh sửa mới khi chúng tôi tận dụng một số khả năng Swift-DocC mới để nâng cao tài liệu hiện có cho một khuôn khổ.

00:03:13.000 --> 00:03:21.000
Tiếp theo, chúng tôi sẽ tạo một chủ đề tùy chỉnh cho tài liệu để phiên bản web trông giống như ở nhà với một trang web hiện có.

00:03:21.000 --> 00:03:31.000
Cuối cùng, sau khi xuất bản tài liệu lên web, chúng tôi sẽ tham quan các khả năng điều hướng hoàn toàn mới đến với tất cả các trang web Swift-DocC với Xcode 15.

00:03:31.000 --> 00:03:34.000
Hãy đi sâu vào.

00:03:34.000 --> 00:03:41.000
Trong vài năm qua, các đồng đội của tôi và tôi đã làm việc trên một gói Swift có tên SlothCreator.

00:03:41.000 --> 00:03:48.000
SlothCreator là một khuôn khổ có thể được nhập vào các ứng dụng iOS và được sử dụng để lập danh mục, tùy chỉnh và hiển thị các con lười nhỏ.

00:03:48.000 --> 00:03:55.000
Chúng tôi muốn SlothCreator được sử dụng trong nhiều ứng dụng iOS hơn vì vậy chúng tôi đã xem xét các cách chúng tôi có thể cải thiện tài liệu của nó.

00:03:55.000 --> 00:03:59.000
Tôi đã mở gói SlothCreator Swift trong Xcode 15.

00:03:59.000 --> 00:04:02.000
Hãy bắt đầu bằng cách đánh giá trạng thái hiện tại của tài liệu của nó.

00:04:02.000 --> 00:04:08.000
Tôi sẽ di chuyển chuột đến menu Sản phẩm và chọn Xây dựng Tài liệu.

00:04:08.000 --> 00:04:15.000
Xcode sẽ xây dựng dự án của tôi cùng với tài liệu của nó và sau đó mở cửa sổ tài liệu.

00:04:15.000 --> 00:04:22.000
Đây là thứ bạn có thể thử trong các dự án của riêng mình, ngay cả khi bạn chưa viết bất kỳ tài liệu cụ thể nào cho Swift-DocC.

00:04:22.000 --> 00:04:34.000
Swift-DocC tự động tạo các trang cho API có liên quan trong dự án của bạn, bao gồm bất kỳ nhận xét tài liệu nào bạn có thể đã viết cho họ, vì vậy bạn có thể ngạc nhiên bởi mức độ hữu ích của tài liệu ngay lập tức.

00:04:34.000 --> 00:04:50.000
Và thậm chí tốt hơn, khi bạn chọn Build Documentation, Xcode cũng sẽ tạo tài liệu cho tất cả các phụ thuộc của dự án của bạn, vì vậy nếu bạn phụ thuộc vào bất kỳ thư viện bên thứ ba nào, chẳng hạn như SlothCreator, chúng cũng sẽ xuất hiện.

00:04:50.000 --> 00:04:53.000
Đây là trang tài liệu cấp cao nhất của SlothCreator.

00:04:53.000 --> 00:04:59.000
Nó bắt đầu bằng một câu tóm tắt và sau đó là tổng quan về khuôn khổ là gì.

00:04:59.000 --> 00:05:02.000
Tôi sẽ cuộn xuống trang một chút đến phần Chủ đề.

00:05:02.000 --> 00:05:08.000
Các chủ đề được sử dụng để sắp xếp các trang khác nhau trong tài liệu của bạn thành các nhóm logic.

00:05:08.000 --> 00:05:14.000
Đầu tiên chúng tôi có Essentials chứa tài liệu giới thiệu cho những người mới tham gia khuôn khổ.

00:05:14.000 --> 00:05:21.000
Sau đó, có một nhóm chứa các biểu tượng giúp tạo ra con lười, chăm sóc và cho con lười ăn, v.v.

00:05:21.000 --> 00:05:28.000
Các nhóm chủ đề được tổ chức tốt là chìa khóa để tạo tài liệu có thể khám phá và dễ tiếp cận cho dự án của bạn.

00:05:28.000 --> 00:05:38.000
Tôi khuyên bạn nên xem "Cải thiện khả năng khám phá nội dung Swift-DocC của bạn" để tìm hiểu về một số kỹ thuật nâng cao giúp người đọc duyệt tài liệu của bạn một cách dễ dàng.

00:05:38.000 --> 00:05:41.000
Hãy mở tài liệu cho cấu trúc Sloth.

00:05:41.000 --> 00:05:45.000
Tôi sẽ nhấp vào nó ngay bây giờ.

00:05:45.000 --> 00:05:58.000
Sloth thực sự được ghi chép đầy đủ với tổng quan tốt chứa các liên kết nội tuyến đến các trang có liên quan, ví dụ mã để giúp tôi bắt đầu và các nhóm Chủ đề được tổ chức tốt giúp khám phá các biểu tượng liên quan.

00:05:58.000 --> 00:06:02.000
Tôi sẽ sử dụng nút quay lại để điều hướng trở lại trang cấp cao nhất cho SlothCreator.

00:06:02.000 --> 00:06:04.000
Và tôi sẽ tiếp tục cuộn xuống trang.

00:06:04.000 --> 00:06:07.000
Tôi thực sự hài lòng với cách mọi thứ được tổ chức ở đây.

00:06:07.000 --> 00:06:14.000
Nhưng ở cuối trang, tôi thực sự thấy một biểu tượng mà tôi chưa từng thấy trước đây, mô-đun SwiftUI.

00:06:14.000 --> 00:06:21.000
Chà, hóa ra biểu tượng này đang xuất hiện vì tính năng Swift-DocC mới trong Xcode 15, hỗ trợ tiện ích mở rộng.

00:06:21.000 --> 00:06:27.000
Với Xcode 15, giờ đây bạn có thể ghi lại các tiện ích mở rộng bạn thực hiện cho các loại thuộc các khuôn khổ khác.

00:06:27.000 --> 00:06:36.000
Tiện ích mở rộng là một tính năng ngôn ngữ Swift mạnh mẽ cho phép bạn thêm chức năng vào một loại mà bạn có thể không có quyền truy cập vào mã nguồn gốc.

00:06:36.000 --> 00:06:42.000
Ví dụ, bạn có thể mở rộng giao thức Xem của SwiftUI để bao gồm một số chức năng bổ sung cho ứng dụng của bạn.

00:06:42.000 --> 00:06:47.000
Bây giờ bạn có thể ghi lại các biểu tượng tiện ích mở rộng đó ngay bên cạnh phần còn lại của ứng dụng hoặc khuôn khổ của bạn.

00:06:47.000 --> 00:06:56.000
Chức năng mới này hoàn toàn được thúc đẩy bởi sự đóng góp của cộng đồng và liên quan đến những thay đổi phối hợp trên cả Swift-DocC và trình biên dịch Swift.

00:06:56.000 --> 00:07:01.000
Hãy xem cách chúng ta có thể tận dụng nó ở đây để cải thiện tài liệu cho SlothCreator.

00:07:01.000 --> 00:07:05.000
Tôi sẽ nhấp vào mô-đun mở rộng SwiftUI ngay bây giờ.

00:07:05.000 --> 00:07:11.000
SlothCreator đã mở rộng cấu trúc Hình ảnh của SwiftUI nên nó xuất hiện ở đây dưới dạng tiện ích mở rộng.

00:07:11.000 --> 00:07:17.000
Tôi sẽ mở trang Hình ảnh và bây giờ tôi có thể thấy một trình khởi tạo đã được thêm vào.

00:07:17.000 --> 00:07:25.000
Tài liệu cho trình khởi tạo này có những điều cơ bản đúng, nhưng nó có vẻ không hoàn toàn giống với chất lượng với cấu trúc Sloth mà tôi đã xem trước đó.

00:07:25.000 --> 00:07:27.000
Tôi muốn cải thiện nó.

00:07:27.000 --> 00:07:36.000
Tôi sẽ mở tệp Swift có chứa tiện ích mở rộng của mình bằng cách di chuyển chuột đến trình điều hướng Dự án và chọn tệp ImageExtensions.

00:07:36.000 --> 00:07:40.000
Và tôi sẽ đóng trình điều hướng Dự án.

00:07:40.000 --> 00:07:46.000
Đây là tuyên bố cho trình khởi tạo hình ảnh dựa trên Sloth.

00:07:46.000 --> 00:07:54.000
Ngay phía trên tờ khai là nhận xét tài liệu của biểu tượng, được xác định bởi ba dấu gạch chéo về phía trước hàng đầu của nó.

00:07:54.000 --> 00:08:05.000
Tôi muốn thêm một số tài liệu bổ sung vào trình khởi tạo này và cách tốt nhất để viết tài liệu với Xcode 15 là với trình chỉnh sửa Xem trước Tài liệu mới.

00:08:05.000 --> 00:08:13.000
Để kích hoạt trình chỉnh sửa trợ lý Xem trước Tài liệu, trước tiên hãy chọn menu tùy chọn trình chỉnh sửa.

00:08:13.000 --> 00:08:16.000
Sau đó, chọn mục Trợ lý.

00:08:16.000 --> 00:08:21.000
Nhấp vào thanh nhảy của trợ lý biên tập viên để chọn chế độ trợ lý.

00:08:21.000 --> 00:08:25.000
Cuối cùng, chọn Xem trước Tài liệu.

00:08:25.000 --> 00:08:27.000
Và nó đây rồi.

00:08:27.000 --> 00:08:35.000
Xem trước tài liệu bây giờ sẽ vẫn hoạt động khi bạn di chuyển giữa các tệp nguồn Swift, tệp tiêu đề Objective-C và tệp Markdown tài liệu.

00:08:35.000 --> 00:08:51.000
Hãy thử nó trong SlothCreator.

00:08:51.000 --> 00:08:52.000
Tuyệt vời.

00:08:52.000 --> 00:08:56.000
Tôi sẽ bắt đầu bằng cách tạo một phần Thảo luận.

00:08:56.000 --> 00:09:02.000
Swift-DocC sử dụng dòng đầu tiên của nhận xét tài liệu làm câu tóm tắt hoặc tóm tắt cho trang.

00:09:02.000 --> 00:09:05.000
Đoạn tiếp theo được sử dụng như một phần Thảo luận.

00:09:05.000 --> 00:09:15.000
Tôi sẽ viết rằng bạn... "Sử dụng trình khởi tạo này để hiển thị biểu diễn hình ảnh của một con lười nhất định."

00:09:15.000 --> 00:09:22.000
Khi tôi nhập, bản xem trước tài liệu cập nhật theo thời gian thực, hiển thị cho tôi phiên bản được hiển thị của tài liệu biểu tượng.

00:09:22.000 --> 00:09:27.000
Tiếp theo, tôi muốn thêm một ví dụ mã để chỉ ra cách trình khởi tạo này có thể được sử dụng trong thực tế.

00:09:27.000 --> 00:09:34.000
Tôi sẽ bắt đầu bằng cách tạo một khối mã bằng cách sử dụng cú pháp khối mã có hàng rào của Markdown.

00:09:34.000 --> 00:09:40.000
Tôi sẽ chỉ định "swift" là ngôn ngữ nguồn nên được sử dụng để tô sáng cú pháp.

00:09:40.000 --> 00:09:45.000
Và tôi sẽ dán vào ví dụ mã của mình.

00:09:45.000 --> 00:09:50.000
Ví dụ minh họa cách tạo chế độ xem SwiftUI hiển thị hình ảnh của một con lười băng.

00:09:50.000 --> 00:09:57.000
Và vì ví dụ liên quan đến giao diện người dùng, tôi nghĩ sẽ rất tốt nếu bao gồm một ảnh chụp màn hình ở đây về chế độ xem kết quả sẽ trông như thế nào.

00:09:57.000 --> 00:10:01.000
Tôi đã chuẩn bị một cái trên máy tính để bàn của mình.

00:10:01.000 --> 00:10:08.000
Nhưng để thực sự sử dụng ảnh chụp màn hình trong tài liệu của mình, trước tiên tôi sẽ cần thêm hình ảnh vào danh mục tài liệu của SlothCreator.

00:10:08.000 --> 00:10:20.000
Danh mục tài liệu là một thư mục các tệp bạn có thể thêm vào gói Swift hoặc dự án Xcode của mình để cung cấp nội dung tài liệu bổ sung dưới dạng tệp Markdown, hình ảnh và video.

00:10:20.000 --> 00:10:24.000
Đây là nơi bạn sẽ đặt các bài báo và hướng dẫn dạng dài hơn.

00:10:24.000 --> 00:10:29.000
Bất kỳ hình ảnh hoặc video nào bạn thêm vào sau đó có thể được tham chiếu từ các nhận xét tài liệu.

00:10:29.000 --> 00:10:43.000
Nếu tôi mở rộng trình điều hướng Dự án, tôi có thể thấy rằng SlothCreator đã có danh mục tài liệu, vì vậy tôi sẽ chỉ kéo cả phiên bản chế độ sáng và tối trong ảnh chụp màn hình của mình.

00:10:43.000 --> 00:10:49.000
Tôi có thể đặt hình ảnh ở bất cứ đâu tôi thích trong danh mục tài liệu và Swift-DocC sẽ tìm thấy chúng.

00:10:49.000 --> 00:10:56.000
Điều này mang lại cho tôi sự linh hoạt trong cách tôi chọn tổ chức danh mục, tuy nhiên cấu trúc nó có ý nghĩa nhất đối với tôi và nhóm của tôi.

00:10:56.000 --> 00:11:02.000
Sau đó, khi tôi muốn đưa một hình ảnh vào một trang, tôi chỉ tham chiếu hình ảnh đó bằng tên tệp cơ sở của nó.

00:11:02.000 --> 00:11:10.000
Cũng cần lưu ý rằng các hình ảnh và tệp khác có trong danh mục tài liệu chỉ dành cho tài liệu.

00:11:10.000 --> 00:11:16.000
Vì vậy, ví dụ, nếu bạn muốn đưa một hình ảnh vào ứng dụng của mình, bạn sẽ sử dụng danh mục tài sản.

00:11:16.000 --> 00:11:19.000
Bây giờ tôi đã sẵn sàng để thêm ảnh chụp màn hình vào tài liệu của mình.

00:11:19.000 --> 00:11:26.000
Tôi sẽ sử dụng cú pháp hình ảnh của Markdown, cung cấp cả mô tả dưới dạng văn bản thay thế và tên tệp của hình ảnh.

00:11:26.000 --> 00:11:29.000
Lưu ý rằng tôi vừa sử dụng tên tệp cơ sở ở đây.

00:11:29.000 --> 00:11:34.000
DocC sẽ tự động tìm ra các phiên bản chế độ sáng và tối thích hợp.

00:11:34.000 --> 00:11:39.000
Tôi sẽ hoàn thành tài liệu với một số văn bản kết luận.

00:11:39.000 --> 00:11:41.000
Tốt.

00:11:41.000 --> 00:11:48.000
Trình chỉnh sửa Xem trước Tài liệu đã làm cho việc tạo tài liệu mở rộng cho biểu tượng này trở nên đơn giản và thú vị.

00:11:48.000 --> 00:11:54.000
Tiếp theo, tôi muốn tổ chức phương pháp này tốt hơn bằng cách đưa nó vào nhóm Chủ đề ở trang cấp cao nhất.

00:11:54.000 --> 00:12:01.000
Tôi sẽ kích hoạt trình điều hướng Dự án và chọn tệp Đánh dấu "SlothCreator" trong danh mục tài liệu của mình.

00:12:01.000 --> 00:12:07.000
Trình chỉnh sửa Xem trước Tài liệu hiện đang hiển thị nội dung được hiển thị cho trang cấp cao nhất của SlothCreator.

00:12:07.000 --> 00:12:13.000
Tôi thực sự thích cách tôi có thể sử dụng trình chỉnh sửa xem trước để hiểu rõ hơn về cách hoạt động cú pháp của DocC.

00:12:13.000 --> 00:12:20.000
Ví dụ, tôi có thể thấy rằng các nhóm chủ đề được xác định bởi các tiêu đề cấp ba bên dưới tiêu đề Chủ đề cấp hai.

00:12:20.000 --> 00:12:27.000
Để đặt một trang vào một nhóm chủ đề, bạn tạo một mục danh sách dưới một trong những tiêu đề cấp ba đó và liên kết đến trang.

00:12:27.000 --> 00:12:31.000
Tôi sẽ làm điều này ngay bây giờ cho loại Hình ảnh SwiftUI mở rộng.

00:12:31.000 --> 00:12:40.000
Vì phần mở rộng Hình ảnh được sử dụng để hiển thị con lười trong giao diện người dùng, tôi nghĩ nó thuộc về các biểu tượng khác liên quan đến việc hiển thị con lười trong nhóm chủ đề Lượt xem Con lười.

00:12:40.000 --> 00:12:42.000
Tôi sẽ liên kết đến nó ở đó.

00:12:42.000 --> 00:12:48.000
Việc hoàn thành mã sẽ giúp tôi, bằng cách cung cấp tham chiếu đến loại.

00:12:48.000 --> 00:12:55.000
Tuyệt vời, bây giờ tài liệu cho phần mở rộng Hình ảnh của SlothCreator vừa được ghi chép đầy đủ vừa được tổ chức tốt.

00:12:55.000 --> 00:13:04.000
Kể từ lần đầu tiên chúng tôi xuất bản tài liệu cho SlothCreator, chúng tôi đã nhận được phản hồi yêu cầu một dự án mã mẫu thể hiện một số nguyên tắc cơ bản của khuôn khổ.

00:13:04.000 --> 00:13:10.000
Để giải quyết vấn đề này, chúng tôi đã tập hợp một ứng dụng nhỏ có tên Slothy phụ thuộc vào SlothCreator.

00:13:10.000 --> 00:13:18.000
Đồng nghiệp của tôi đã tập hợp một bản thảo sơ bộ của một bài báo mà chúng tôi muốn đưa vào tài liệu chính của SlothCreator liên kết đến mẫu Slothy mới.

00:13:18.000 --> 00:13:20.000
Hãy kiểm tra nó.

00:13:20.000 --> 00:13:36.000
Tôi sẽ bắt đầu bằng cách thêm bản thảo sơ bộ của bài báo vào danh mục tài liệu của SlothCreator.

00:13:36.000 --> 00:13:39.000
Nội dung ở đây đã thực sự hay rồi.

00:13:39.000 --> 00:13:47.000
Nó hướng dẫn tôi qua các khả năng khác nhau của ứng dụng mẫu và thậm chí bao gồm ảnh chụp màn hình của ứng dụng và liên kết đến kho lưu trữ nơi mọi người có thể tải xuống mẫu.

00:13:47.000 --> 00:13:49.000
Nhưng tôi nghĩ tôi có thể cải thiện nó.

00:13:49.000 --> 00:13:53.000
May mắn thay, một số tính năng Swift-DocC mới giúp điều này trở nên khả thi.

00:13:53.000 --> 00:13:57.000
Cú pháp tác giả của Swift-DocC được xây dựng trên Markdown.

00:13:57.000 --> 00:14:06.000
Nếu bạn đã quen thuộc với Markdown, bạn nên ở ngay tại nhà định dạng nội dung của mình bằng các liên kết, hình ảnh, văn bản in đậm và in nghiêng, và thậm chí cả bảng.

00:14:06.000 --> 00:14:17.000
Swift-DocC sau đó mở rộng cú pháp Markdown cơ bản đó với các chỉ thị cho phép bạn tận dụng các tính năng được xây dựng có mục đích cho tài liệu của mình.

00:14:17.000 --> 00:14:25.000
Tôi sẽ sử dụng một số chỉ thị này ngay bây giờ để đánh bóng bài viết mã mẫu Slothy, nhưng hãy nhớ rằng những chỉ thị này nhằm mục đích được sử dụng một cách sáng tạo.

00:14:25.000 --> 00:14:30.000
Không có một cách nào đúng để sử dụng chúng hoặc thậm chí một loại trang phù hợp để sử dụng chúng.

00:14:30.000 --> 00:14:39.000
Hãy suy nghĩ về cách bạn có thể sử dụng các chỉ thị này theo cách riêng của mình để làm cho tài liệu cho dự án của bạn dễ thực hiện hơn, hấp dẫn hơn và thú vị hơn.

00:14:39.000 --> 00:14:46.000
Trước khi đi sâu vào và chỉnh sửa bố cục của bài báo, tôi muốn bắt đầu bằng cách xác định các vấn đề cụ thể của nó.

00:14:46.000 --> 00:14:52.000
Bằng cách đó tôi có thể chắc chắn rằng tôi thực sự đang thực hiện những cải tiến khi tôi áp dụng một số chỉ thị mới này.

00:14:52.000 --> 00:14:55.000
Điều đầu tiên nổi bật với tôi là những gì không nổi bật.

00:14:55.000 --> 00:15:04.000
Trang này được tạo kiểu giống như bất kỳ bài viết nào khác, mặc dù có mã mẫu có thể sẽ đặc biệt thú vị đối với người đọc của tôi.

00:15:04.000 --> 00:15:11.000
Và đến thời điểm đó, điều quan trọng nhất mà bài viết này đang làm, là liên kết đến kho lưu trữ nguồn cho mã mẫu đó.

00:15:11.000 --> 00:15:17.000
Mặc dù vậy, liên kết mã mẫu rất khó xác định và khám phá.

00:15:17.000 --> 00:15:20.000
Chuyển sang nội dung nội dung của bài báo.

00:15:20.000 --> 00:15:24.000
Nội dung này được xây dựng xung quanh hai cặp hình ảnh-đoạn văn.

00:15:24.000 --> 00:15:28.000
Mỗi đoạn văn có một hình ảnh liên quan mà nó đang mô tả.

00:15:28.000 --> 00:15:30.000
Có hai vấn đề ở đây.

00:15:30.000 --> 00:15:34.000
Đầu tiên, các hình ảnh không được liên kết rõ ràng với các đoạn văn của chúng.

00:15:34.000 --> 00:15:38.000
Và thứ hai, những hình ảnh đang chiếm quá nhiều chỗ.

00:15:38.000 --> 00:15:45.000
Những hình ảnh ở đây nhằm làm nổi bật các đoạn văn tương ứng của chúng, nhưng bản thân chúng không thú vị lắm.

00:15:45.000 --> 00:15:50.000
Cuối cùng, ở cuối trang là một phần mô tả hỗ trợ bản địa hóa của SlothCreator.

00:15:50.000 --> 00:15:55.000
Ở đây có ba phiên bản khác nhau của cùng một ảnh chụp màn hình bằng ba ngôn ngữ khác nhau.

00:15:55.000 --> 00:16:05.000
Nhưng bởi vì chúng chỉ được xếp chồng lên nhau theo chiều dọc, cả hai đều mất tất cả sự liên kết với đoạn bản địa hóa và chúng chỉ chiếm quá nhiều chỗ một cách trực quan.

00:16:05.000 --> 00:16:10.000
Hãy xem cách chúng ta có thể giải quyết bốn vấn đề này bằng Swift-DocC.

00:16:10.000 --> 00:16:13.000
Hãy bắt đầu với nội dung nội dung của bài báo.

00:16:13.000 --> 00:16:18.000
Tôi nghĩ giải pháp phù hợp cho các cặp hình ảnh-đoạn là đặt chúng vào lưới.

00:16:18.000 --> 00:16:25.000
Điều này sẽ nhấn mạnh tốt hơn tầm quan trọng của đoạn văn so với hình ảnh và gắn hình ảnh tốt hơn vào đoạn văn tương ứng của chúng.

00:16:25.000 --> 00:16:30.000
Các lưới trong Swift-DocC được định nghĩa là các hàng và cột linh hoạt.

00:16:30.000 --> 00:16:35.000
Tôi sẽ bắt đầu bằng cách xác định một hàng chứa hai cột.

00:16:35.000 --> 00:16:44.000
Sau đó tôi sẽ đặt đoạn văn ở cột đầu tiên và hình ảnh ở cột thứ hai.

00:16:44.000 --> 00:16:53.000
Tôi thích cách hình ảnh bây giờ được gắn tốt hơn với đoạn văn liên quan của nó, nhưng tôi nghĩ trong trường hợp này, đoạn văn nên được ưu tiên hơn hình ảnh.

00:16:53.000 --> 00:16:56.000
Hãy tăng kích thước của cột chứa đoạn văn.

00:16:56.000 --> 00:17:03.000
Tôi có thể làm điều này bằng cách thêm tham số kích thước vào cột đầu tiên và chỉ định giá trị lớn hơn giá trị mặc định của một.

00:17:03.000 --> 00:17:07.000
Tham số kích thước được sử dụng để thiết lập khoảng của một cột nhất định.

00:17:07.000 --> 00:17:13.000
Tôi sẽ thử cung cấp kích thước ba.

00:17:13.000 --> 00:17:18.000
Cột đầu tiên của tôi hiện đang trải dài trên ba cột trong lưới bốn cột.

00:17:18.000 --> 00:17:20.000
Điều đó có vẻ hơi quá lớn.

00:17:20.000 --> 00:17:25.000
Kích thước của hai thì sao?

00:17:25.000 --> 00:17:27.000
Sự cân bằng giữa văn bản và hình ảnh trông rất tuyệt.

00:17:27.000 --> 00:17:29.000
Hoàn hảo.

00:17:29.000 --> 00:17:39.000
Hãy thử cấu hình tương tự với cặp hình ảnh đoạn thứ hai.

00:17:39.000 --> 00:17:43.000
Đây chắc chắn là một cải tiến, nhưng trang bây giờ cảm thấy hơi mất cân bằng.

00:17:43.000 --> 00:17:50.000
Hãy thử lật hình ảnh và đoạn văn.

00:17:50.000 --> 00:17:51.000
Đáng yêu.

00:17:51.000 --> 00:17:54.000
Bài báo này thực sự đang đến với nhau bây giờ.

00:17:54.000 --> 00:18:02.000
Vấn đề mà chúng tôi đã xác định với phần bản địa hóa là các hình ảnh đang chiếm quá nhiều không gian dọc và do đó mất ngữ cảnh.

00:18:02.000 --> 00:18:09.000
Trình điều hướng tab là giải pháp hoàn hảo ở đây, cho phép tôi thu gọn nhiều phần tử thành một.

00:18:09.000 --> 00:18:12.000
Hãy thử nó đi.

00:18:12.000 --> 00:18:18.000
Tôi sẽ tạo cấu trúc ban đầu của trình điều hướng tab với ba tab.

00:18:18.000 --> 00:18:27.000
Trình điều hướng tab được xác định bởi một chỉ thị TabNavigator chứa chứa một số lượng tùy ý các chỉ thị Tab con.

00:18:27.000 --> 00:18:31.000
Mỗi tab cung cấp tên của nó như một tham số.

00:18:31.000 --> 00:18:43.000
Tôi sẽ đặt ba hình ảnh bên trong các tab tương ứng của chúng.

00:18:43.000 --> 00:18:53.000
Bây giờ người đọc của tôi có thể nhấp qua từng tab để truy cập ảnh chụp màn hình mà họ quan tâm.

00:18:53.000 --> 00:19:00.000
Để tiến thêm một bước nữa, tôi muốn thêm một video nhanh thực sự thu hút người đọc của tôi và khiến họ hào hứng với mẫu.

00:19:00.000 --> 00:19:09.000
Swift-DocC có một chỉ thị video cho việc này mà tôi sẽ chèn ngay bây giờ.

00:19:09.000 --> 00:19:19.000
Tôi sẽ cung cấp một hình ảnh áp phích sẽ được hiển thị trước khi video được phát, bản thân video và mô tả.

00:19:19.000 --> 00:19:20.000
Tốt.

00:19:20.000 --> 00:19:23.000
Hãy chuyển sang phần giới thiệu.

00:19:23.000 --> 00:19:30.000
Một trong những vấn đề đầu tiên tôi nhận thấy là việc khám phá liên kết để truy cập kho lưu trữ mã nguồn của mẫu khó khăn như thế nào.

00:19:30.000 --> 00:19:35.000
Swift-DocC có một chỉ thị kêu gọi hành động được thiết kế chính xác cho việc này.

00:19:35.000 --> 00:19:40.000
Tôi sẽ bắt đầu bằng cách thêm một chỉ thị vùng chứa siêu dữ liệu ở đầu trang.

00:19:40.000 --> 00:19:45.000
Các chỉ thị siêu dữ liệu được sử dụng để chỉ định thông tin bổ sung không được hiển thị trực tiếp trên trang.

00:19:45.000 --> 00:19:53.000
Trong trường hợp này, tôi muốn đính kèm lời kêu gọi hành động vào trang.

00:19:53.000 --> 00:19:57.000
Tôi đã cung cấp URL đích và mục đích cho lời kêu gọi hành động.

00:19:57.000 --> 00:19:59.000
Lưu ý rằng tôi đã sử dụng mục đích "liên kết".

00:19:59.000 --> 00:20:10.000
Ngoài ra, tôi có thể sử dụng "tải xuống" nếu liên kết này dẫn trực tiếp đến tải xuống, nhưng trong trường hợp này tôi đang liên kết đến kho lưu trữ nguồn, vì vậy "liên kết" là lựa chọn tốt hơn.

00:20:10.000 --> 00:20:16.000
Cuối cùng, tôi muốn bài viết này nổi bật khác với phần còn lại của các bài viết trong tài liệu của SlothCreator.

00:20:16.000 --> 00:20:21.000
Tôi muốn chắc chắn rằng người đọc không bỏ lỡ rằng trang này chứa mã mẫu.

00:20:21.000 --> 00:20:26.000
Hóa ra Swift-DocC có hỗ trợ đặc biệt cho các bài viết bao gồm mã mẫu.

00:20:26.000 --> 00:20:33.000
Tôi sẽ chỉ định rằng loại trang của tôi là mã mẫu bằng cách cung cấp chỉ thị PageKind với đối số "mã mẫu".

00:20:33.000 --> 00:20:41.000
Trang được kết xuất hiện có tiêu đề "Mã mẫu" và biểu tượng trang nẹp xoăn để làm cho nó nổi bật như một bài viết mã mẫu.

00:20:41.000 --> 00:20:48.000
Ngày nay, Swift-DocC chỉ có hai giá trị được hỗ trợ cho chỉ thị PageKind; "bài viết" và "mã mẫu".

00:20:48.000 --> 00:21:05.000
Chúng tôi rất muốn nghe về các loại trang mặc định khác sẽ thú vị với bạn và vì Swift-DocC là một dự án mã nguồn mở, Diễn đàn Swift là một nơi tuyệt vời để thảo luận về loại điều này và bất kỳ phản hồi hoặc ý tưởng nào khác mà bạn có thể có về cách DocC có thể đáp ứng tốt hơn nhu cầu tài liệu của bạn.

00:21:05.000 --> 00:21:11.000
Tôi nghĩ rằng các nhà phát triển quan tâm đến việc sử dụng SlothCreator trong ứng dụng của họ sẽ thực sự hào hứng với bài viết này.

00:21:11.000 --> 00:21:13.000
Nó hấp dẫn, chu đáo và vui vẻ.

00:21:13.000 --> 00:21:21.000
Tôi muốn chắc chắn rằng họ tìm thấy nó, vì vậy hãy quay lại trang cấp cao nhất của SlothCreator và tìm một nơi nổi bật để liên kết đến nó.

00:21:21.000 --> 00:21:24.000
Đầu tiên, tôi sẽ sắp xếp bài viết mới thành một nhóm Chủ đề.

00:21:24.000 --> 00:21:40.000
Trong trường hợp này, tôi nghĩ nhóm Essentials là thích hợp nhất vì chúng tôi mong đợi những người mới đến với khuôn khổ SlothCreator sẽ quan tâm đến mẫu Slothy.

00:21:40.000 --> 00:21:47.000
Đây là một khởi đầu tốt, nhưng tôi muốn tiến thêm một bước nữa và giới thiệu bài viết này phía trên phần chủ đề chung chung hơn của trang.

00:21:47.000 --> 00:21:50.000
Chỉ thị Liên kết là hoàn hảo cho việc này.

00:21:50.000 --> 00:21:58.000
Tôi sẽ tạo một phần Nổi bật và sau đó chèn chỉ thị Liên kết.

00:21:58.000 --> 00:22:01.000
Liên kết là một cách tuyệt vời để làm nổi bật các trang.

00:22:01.000 --> 00:22:05.000
Bạn có thể sử dụng nó để bao gồm hình ảnh thẻ và mô tả của một trang theo cách nâng cao hơn.

00:22:05.000 --> 00:22:14.000
Chỉ thị Liên kết chấp nhận một tham số kiểu trực quan xác định cách hiển thị liên kết và sau đó là danh sách các liên kết trong nội dung của nó, giống như một nhóm Chủ đề.

00:22:14.000 --> 00:22:24.000
Tôi sẽ liên kết đến mẫu Slothy.

00:22:24.000 --> 00:22:38.000
Các liên kết hỗ trợ một số kiểu hình ảnh, từ một danh sách cơ bản hiển thị rất giống như một phần chủ đề mặc định, đến một lưới chi tiết.

00:22:38.000 --> 00:22:44.000
Tôi nghĩ kiểu lưới rất đẹp, nhưng tôi muốn bao gồm một hình ảnh tùy chỉnh để đại diện cho mẫu Slothy ở đây.

00:22:44.000 --> 00:22:46.000
Hãy quay lại Markdown cho Slothy.

00:22:46.000 --> 00:22:54.000
Để làm cho bài viết Slothy được chuẩn bị tốt nhất để trình bày trong phần Liên kết dựa trên lưới, tôi cần cung cấp một hình ảnh trang trong siêu dữ liệu của nó.

00:22:54.000 --> 00:23:01.000
Hãy làm điều đó ngay bây giờ.

00:23:01.000 --> 00:23:11.000
Tôi sẽ chỉ định mục đích của "thẻ" để hình ảnh này được sử dụng bất cứ khi nào bài viết Slothy được hiển thị dưới dạng thẻ, sau đó cung cấp nguồn hình ảnh của tôi và mô tả dưới dạng văn bản thay thế.

00:23:11.000 --> 00:23:20.000
Khi tôi quay lại trang cấp cao nhất cho SlothCreator Slothy hiện được hiển thị với hình ảnh trang tùy chỉnh của nó.

00:23:20.000 --> 00:23:31.000
Tôi cũng sẽ giới thiệu bài viết "Bắt đầu với Sloths".

00:23:31.000 --> 00:23:36.000
Để hoàn thiện, tôi cũng sẽ thêm một số siêu dữ liệu bổ sung vào trang cấp cao nhất.

00:23:36.000 --> 00:23:40.000
Tôi sẽ bắt đầu bằng cách tạo một chỉ thị Siêu dữ liệu giống như chúng ta đã làm trước đây.

00:23:40.000 --> 00:23:48.000
Và sau đó tôi sẽ cung cấp một hình ảnh trang.

00:23:48.000 --> 00:23:52.000
Lần này tôi chỉ định mục đích "biểu tượng" thay vì "thẻ".

00:23:52.000 --> 00:24:00.000
Vì vậy, hình ảnh này sẽ được sử dụng ở bất cứ nơi nào biểu tượng của trang được hiển thị, bao gồm cả trong thanh bên điều hướng và phần giới thiệu của trang.

00:24:00.000 --> 00:24:09.000
Cuối cùng, tôi sẽ đặt một màu trang tùy chỉnh.

00:24:09.000 --> 00:24:23.000
Theo mặc định, các trang cấp cao nhất sử dụng màu xanh lam, nhưng Swift-DocC cung cấp một số màu tiêu chuẩn tích hợp sẵn, như vàng, tím và cam.

00:24:23.000 --> 00:24:35.000
SlothCreator thường sử dụng màu xanh lá cây làm màu nhấn của nó, vì vậy tôi nghĩ sẽ rất tuyệt nếu tạo ra trải nghiệm gắn kết hơn bằng cách sử dụng nó ở đây.

00:24:35.000 --> 00:24:36.000
Ồ.

00:24:36.000 --> 00:24:41.000
Tài liệu của SlothCreator đã đi một chặng đường dài chỉ trong một khoảng thời gian ngắn.

00:24:41.000 --> 00:24:51.000
Chúng tôi đã có thể sử dụng các chỉ thị bố cục như Hàng và Cột, Điều hướng Tab và Video để làm cho dòng bài viết mã mẫu này tốt hơn và thu hút người đọc của chúng tôi.

00:24:51.000 --> 00:24:58.000
Chúng tôi đã sử dụng các chỉ thị siêu dữ liệu như CallToAction và PageKind để thêm một mức độ đánh bóng bổ sung.

00:24:58.000 --> 00:25:08.000
Và chúng tôi đã gắn kết tất cả lại với nhau bằng cách nâng cao nội dung nổi bật với chỉ thị Liên kết và thêm một số thương hiệu vào trang cấp cao nhất của chúng tôi với các chỉ thị PageColor và PageImage.

00:25:08.000 --> 00:25:12.000
Tôi thực sự vui mừng được chia sẻ tài liệu cập nhật của SlothCreator.

00:25:12.000 --> 00:25:22.000
Nhưng trước khi chúng tôi xuất bản bản phát hành mới đó lên web, hãy tối ưu hóa bản trình bày trực tuyến tài liệu của SlothCreator với một chủ đề tùy chỉnh.

00:25:22.000 --> 00:25:26.000
Tài liệu của SlothCreator được xuất bản như một phần của trang web sản phẩm lớn hơn.

00:25:26.000 --> 00:25:34.000
Tôi muốn đảm bảo rằng trang web tài liệu phù hợp trực quan với trang web sản phẩm sử dụng cùng một bảng màu và bộ phông chữ.

00:25:34.000 --> 00:25:39.000
Hãy xem cách chúng ta có thể đạt được điều đó với chủ đề tùy chỉnh trong Swift-DocC.

00:25:39.000 --> 00:25:50.000
Swift-DocC hỗ trợ tùy chỉnh hoàn toàn cách tạo kiểu trực quan như màu sắc, đường viền, biểu tượng và phông chữ được hiển thị trên một triển khai nhất định của một trang web tài liệu.

00:25:50.000 --> 00:26:01.000
Những tùy chỉnh này được thực hiện trong một tệp JSON đặc biệt mà bạn đưa vào danh mục tài liệu của mình và chúng cho phép bạn tích hợp tốt hơn trang web tài liệu của mình với phần còn lại của sự hiện diện trực tuyến của bạn.

00:26:01.000 --> 00:26:08.000
Bạn có thể sử dụng các công cụ theo chủ đề của Swift-DocC để phù hợp với phong cách công ty cụ thể hoặc để phù hợp hơn với trang web tiếp thị hoặc blog cá nhân.

00:26:08.000 --> 00:26:15.000
Tuy nhiên, chủ đề không phải là công cụ phù hợp cho mọi tùy chỉnh tài liệu mà bạn có thể muốn thực hiện.

00:26:15.000 --> 00:26:26.000
Ví dụ: nếu bạn quan tâm đến việc tùy chỉnh giao diện của một trang cụ thể, như chúng tôi đã làm với trang mã mẫu của SlothCreator, bạn nên sử dụng chỉ thị trên trang đó thay vì chủ đề tùy chỉnh.

00:26:26.000 --> 00:26:30.000
Tùy chỉnh chủ đề trên toàn trang web, không dành riêng cho trang.

00:26:30.000 --> 00:26:36.000
Cũng cần lưu ý rằng các chủ đề Swift-DocC có chủ ý cụ thể cho việc triển khai.

00:26:36.000 --> 00:26:46.000
Vì vậy, nếu bạn mở tài liệu của mình trong Xcode, tài liệu của bạn sẽ tiếp tục được hiển thị với chủ đề Xcode và trông tuyệt vời cùng với tất cả các tài liệu còn lại được trình bày ở đó.

00:26:46.000 --> 00:26:55.000
Điều này có nghĩa là bạn có thể tập trung chủ đề tùy chỉnh của mình vào sự hiện diện web của trang web mà không phải lo lắng về việc nó có thể ảnh hưởng đến trải nghiệm đọc trong Xcode như thế nào.

00:26:55.000 --> 00:27:04.000
Nhưng nó cũng có nghĩa là nếu bạn muốn một tùy chỉnh xuất hiện cả trong Xcode và trên web, tốt hơn hết bạn nên sử dụng một chỉ thị cho nó.

00:27:04.000 --> 00:27:07.000
Hãy cùng xem chủ đề tùy chỉnh của SlothCreator.

00:27:07.000 --> 00:27:19.000
Các chủ đề trong Swift-DocC được xác định bởi tệp JSON với tên cụ thể "theme-settings.json" mà bạn đặt vào danh mục tài liệu dự án của mình.

00:27:19.000 --> 00:27:23.000
Có một số loại tùy chỉnh khác nhau mà bạn thực hiện với tệp cài đặt chủ đề.

00:27:23.000 --> 00:27:28.000
Đối với SlothCreator, tôi sẽ tùy chỉnh màu sắc và phông chữ của trang web.

00:27:28.000 --> 00:27:35.000
Những tùy chỉnh đó được đặt trong các phần "màu sắc" và "kiểu chữ" tương ứng.

00:27:35.000 --> 00:27:40.000
SlothCreator sử dụng một sắc thái cụ thể của màu xanh lá cây trong các tài liệu tiếp thị của mình.

00:27:40.000 --> 00:27:45.000
Tôi đã đặt màu trang cấp cao nhất của SlothCreator thành màu xanh lá cây bằng cách sử dụng chỉ thị PageColor.

00:27:45.000 --> 00:27:52.000
Bây giờ tôi có thể đặt màu xanh lá cây cụ thể thành màu tôi muốn sử dụng biến màu "xanh lá cây tiêu chuẩn".

00:27:52.000 --> 00:28:02.000
Và bởi vì SlothCreator là một khuôn khổ khá nghiêm túc nhắm vào các chuyên gia lười biếng nghiêm túc, tôi muốn sử dụng phông chữ Serif trong tài liệu trực tuyến của nó.

00:28:02.000 --> 00:28:07.000
Tôi có thể làm điều đó với biến kiểu chữ "html-font".

00:28:07.000 --> 00:28:12.000
Tất nhiên, những tùy chỉnh này chỉ là khởi đầu của những gì có thể với chủ đề Swift-DocC.

00:28:12.000 --> 00:28:18.000
Tôi khuyên bạn nên đọc tài liệu của Swift-DocC nếu bạn quan tâm đến việc tiến xa hơn.

00:28:18.000 --> 00:28:29.000
Bây giờ chúng tôi đã định cấu hình tệp "theme-settings.json", tôi sẽ thêm nó vào danh mục tài liệu của mình.

00:28:29.000 --> 00:28:42.000
Kho lưu trữ kiểm soát nguồn của SlothCreator đã được cấu hình với sự tích hợp liên tục sử dụng công cụ dòng lệnh "xcodebuild" để xây dựng và triển khai tài liệu của SlothCreator bất cứ khi nào chúng tôi đẩy một cam kết mới.

00:28:42.000 --> 00:28:48.000
Đây là một quy trình làm việc tuyệt vời đảm bảo tài liệu của chúng tôi luôn được cập nhật với những thay đổi mới nhất trong khuôn khổ.

00:28:48.000 --> 00:28:55.000
Nếu bạn quan tâm đến việc thiết lập quy trình làm việc tương tự cho dự án của riêng mình, hãy xem phần Swift-DocC trong tài liệu của Xcode.

00:28:55.000 --> 00:28:59.000
Tôi thực sự vui mừng được xuất bản những thay đổi mà chúng tôi đã cùng nhau đưa ra.

00:28:59.000 --> 00:29:03.000
Hãy cam kết và thúc đẩy ngay bây giờ để kích hoạt triển khai mới của trang web.

00:29:03.000 --> 00:29:10.000
Tôi sẽ di chuyển chuột đến góc trên bên trái của cửa sổ Xcode và kích hoạt trình điều hướng Điều khiển Nguồn.

00:29:10.000 --> 00:29:27.000
Tôi sẽ thực hiện tất cả các thay đổi của mình, thêm thông báo cam kết, cam kết và đẩy.

00:29:27.000 --> 00:29:29.000
Bây giờ tôi sẽ mở trang web của SlothCreator.

00:29:29.000 --> 00:29:32.000
Đây là trang chủ của trang web sản phẩm của SlothCreator.

00:29:32.000 --> 00:29:36.000
Nó sử dụng các phông chữ và màu sắc cụ thể phù hợp với thương hiệu của SlothCreator.

00:29:36.000 --> 00:29:40.000
Tôi sẽ nhấp vào nút "Đọc tài liệu".

00:29:40.000 --> 00:29:43.000
Và đây là tài liệu của SlothCreator.

00:29:43.000 --> 00:29:48.000
Phiên bản trang web có chủ đề tùy chỉnh mà chúng tôi đã áp dụng, với phông chữ đặc biệt và màu xanh lá cây.

00:29:48.000 --> 00:29:55.000
Nó cũng có biểu tượng tùy chỉnh mà chúng tôi đã đặt và phần nổi bật hấp dẫn với bài viết mã mẫu Slothy hoàn toàn mới.

00:29:55.000 --> 00:29:58.000
Tôi sẽ mở liên kết "Xem mã mẫu" để mở nó.

00:29:58.000 --> 00:30:01.000
Tôi thực sự hài lòng với cách bài báo này diễn ra.

00:30:01.000 --> 00:30:11.000
Và tất nhiên, các trang web Swift-DocC cũng tiếp tục đi kèm với thanh bên điều hướng tuyệt vời, giúp việc điều hướng qua trang mà tôi đã sắp xếp trong các phần Chủ đề của SlothCreator trở nên dễ dàng.

00:30:11.000 --> 00:30:20.000
Ở trên cùng là nhóm Essentials nơi chúng tôi đặt bài viết mã mẫu Slothy cùng với bài viết "Bắt đầu" và cấu trúc Sloth.

00:30:20.000 --> 00:30:25.000
Tôi sẽ mở rộng cấu trúc Sloth bằng cách nhấp vào tam giác hiển thị ở bên trái của nó.

00:30:25.000 --> 00:30:31.000
Điều này cho phép tôi duyệt qua các con của cấu trúc, và tất nhiên, những biểu tượng này cũng được tổ chức tốt trong các nhóm chủ đề.

00:30:31.000 --> 00:30:34.000
Hãy kiểm tra trình khởi tạo hình ảnh mà chúng tôi đã ghi lại trước đó.

00:30:34.000 --> 00:30:42.000
Tôi sẽ cuộn xuống phần Sloth Views, mở rộng biểu tượng mở rộng Hình ảnh và nhấp vào trình khởi tạo.

00:30:42.000 --> 00:30:44.000
Và chúng ta đang ở đây.

00:30:44.000 --> 00:30:54.000
Tôi thích cách thanh bên điều hướng cho phép tôi với tư cách là tác giả tài liệu để tạo ra trải nghiệm duyệt web trực quan cho các nhà phát triển thực sự hướng dẫn họ thông qua API trong dự án của tôi.

00:30:54.000 --> 00:31:02.000
Nhưng đôi khi với tư cách là một người đọc tài liệu, tôi biết chính xác mình đang tìm kiếm trang nào và chỉ cần một cách dễ dàng để chuyển thẳng đến đó.

00:31:02.000 --> 00:31:10.000
Các trang web Swift-DocC được xây dựng bằng Xcode 15 có tính năng điều hướng nhanh hoàn toàn mới giúp việc nhảy giữa các trang trở nên nhanh chóng.

00:31:10.000 --> 00:31:17.000
Điều hướng nhanh Swift-DocC là một nỗ lực khác do cộng đồng định hướng mà chúng tôi thực sự vui mừng mang đến cho tất cả các trang web Swift-DocC.

00:31:17.000 --> 00:31:25.000
Tương tự như tính năng Mở nhanh của Xcode, nó cho phép bạn chuyển thẳng đến một trang chỉ bằng cách kích hoạt phím tắt và nhập tên của nó.

00:31:25.000 --> 00:31:26.000
Hãy thử nó đi.

00:31:26.000 --> 00:31:32.000
Tôi sẽ nhấn Shift-Command-O để kích hoạt điều hướng nhanh.

00:31:32.000 --> 00:31:38.000
Tôi có thể ngay lập tức bắt đầu lọc trên tất cả các trang trong tài liệu của SlothCreator.

00:31:38.000 --> 00:31:46.000
Ví dụ, nếu tôi đang tìm kiếm một bài viết bắt đầu, tôi có thể chỉ cần gõ "bắt đầu".

00:31:46.000 --> 00:31:47.000
Và nó đây rồi.

00:31:47.000 --> 00:31:54.000
Tôi thậm chí còn nhận được bản xem trước của tài liệu ở phía bên tay phải.

00:31:54.000 --> 00:31:58.000
Tôi sẽ nhấn Enter để điều hướng đến trang.

00:31:58.000 --> 00:32:02.000
Nhưng có lẽ tôi cần một lời nhắc nhở về sức mạnh lười biếng khác nhau là gì.

00:32:02.000 --> 00:32:09.000
Tôi sẽ nhấn Shift-Command-O một lần nữa, và gõ "power".

00:32:09.000 --> 00:32:13.000
Đây là PowerPicker, và sau đó là một thuộc tính "sức mạnh".

00:32:13.000 --> 00:32:16.000
À, đây rồi, Power enum.

00:32:16.000 --> 00:32:23.000
Lần này tôi sẽ vào liên kết "Xem thêm" để mở trang.

00:32:23.000 --> 00:32:27.000
Và cứ như vậy, tôi có thể đọc về tất cả các sức mạnh lười biếng có sẵn.

00:32:27.000 --> 00:32:36.000
Với cả cửa sổ bật lên Điều hướng Nhanh mới và thanh bên Điều hướng hiện có, Swift-DocC làm cho việc duyệt qua tài liệu của bạn trở thành một trải nghiệm thực sự tuyệt vời.

00:32:36.000 --> 00:32:43.000
Swift-DocC trong Xcode 15 đi kèm với các công cụ mới mạnh mẽ để tạo các trang web tài liệu thực sự độc đáo.

00:32:43.000 --> 00:32:46.000
Dùng thử trình chỉnh sửa Xem trước Tài liệu mới.

00:32:46.000 --> 00:32:51.000
Bạn có thể vui vẻ khám phá các bố cục trang khác nhau và biết chúng sẽ hiển thị như thế nào trong thời gian thực.

00:32:51.000 --> 00:33:00.000
Các chỉ thị mới như Hàng và Cột, Liên kết và PageImage sẽ cho phép bạn tạo tài liệu nổi bật và ủng hộ dự án của mình.

00:33:00.000 --> 00:33:09.000
Và cân nhắc xem bạn có nên thêm một chủ đề tùy chỉnh để làm cho phiên bản web của tài liệu của bạn tích hợp tốt hơn với thương hiệu dự án hoặc sự hiện diện trực tuyến hiện có của bạn hay không.

00:33:09.000 --> 00:33:16.000
Để cập nhật thông tin mới nhất với Swift-DocC, hãy xem phiên "Có gì mới trong Swift-DocC" từ WWDC22.

00:33:16.000 --> 00:33:26.000
Phiên này đi sâu vào quy trình xuất bản mới được vận chuyển với Xcode 14, chỉ cho bạn chính xác cách xuất bản lên các dịch vụ lưu trữ tĩnh như các trang GitHub.

00:33:26.000 --> 00:33:36.000
Và nếu bạn quan tâm đến việc đưa tài liệu của mình đi xa hơn nữa với hướng dẫn từng bước, tôi khuyên bạn nên xem "Xây dựng hướng dẫn tương tác bằng DocC".

00:33:36.000 --> 00:33:43.000
Tôi rất hào hứng khi thấy tài liệu bạn thiết kế và xuất bản với Swift-DocC và Xcode 15.

00:33:43.000 --> 00:33:46.000
Cảm ơn bạn rất nhiều.

00:33:46.000 --> 23:59:59.000
♪ ♪

