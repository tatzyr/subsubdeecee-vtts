WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:15.000
Justin: Xin chào! Tên tôi là Justin, và tôi là một phần của nhóm Ảnh.

00:00:15.000 --> 00:00:22.000
Hôm nay tôi sẽ đưa bạn qua những cải tiến mới cho hệ thống Bộ chọn Ảnh và tất cả các API mới tuyệt vời mà bạn có thể sử dụng trong ứng dụng của mình.

00:00:22.000 --> 00:00:26.000
Chúng tôi đã giới thiệu giao diện người dùng chọn được thiết kế lại trong iOS 14.

00:00:26.000 --> 00:00:30.000
Nó có nhiều tính năng tuyệt vời như tìm kiếm và lưới có thể phóng to.

00:00:30.000 --> 00:00:35.000
Thậm chí tốt hơn, bạn không cần yêu cầu bất kỳ quyền truy cập thư viện ảnh nào để sử dụng nó.

00:00:35.000 --> 00:00:41.000
Chúng tôi thực sự khuyên bạn nên thay thế bộ chọn tùy chỉnh của mình bằng bộ chọn hệ thống bất cứ khi nào có thể.

00:00:41.000 --> 00:00:44.000
API cũng thực sự dễ sử dụng.

00:00:44.000 --> 00:00:51.000
Chỉ với một vài dòng mã, bạn có thể trình bày bộ chọn và nhận hình ảnh do người dùng chọn.

00:00:51.000 --> 00:00:56.000
Phiên "Có gì mới trong bộ chọn Ảnh" năm ngoái đã nói sâu về API mới.

00:00:56.000 --> 00:01:07.000
Trong phiên này, tôi sẽ tập trung vào các API mới mà bạn có thể tận dụng để nhúng bộ chọn hệ thống vào ứng dụng của mình, giúp trải nghiệm chọn ảnh liền mạch hơn.

00:01:07.000 --> 00:01:19.000
Sau đó, tôi cũng sẽ thảo luận về menu Tùy chọn mới, cũng như các phương pháp hay nhất nếu bạn muốn hỗ trợ ảnh HDR, video HDR và video chế độ Điện ảnh.

00:01:19.000 --> 00:01:25.000
Nhưng trước khi chúng ta đi sâu vào, hãy nhanh chóng tóm tắt lại mô hình truy cập của bộ chọn.

00:01:25.000 --> 00:01:28.000
Đây là người chọn mà bạn đã thấy một lúc trước.

00:01:28.000 --> 00:01:34.000
Mặc dù có vẻ như nó đang chạy trong ứng dụng của bạn, nhưng nó thực sự đang chạy trong một quy trình riêng biệt, được hiển thị trên ứng dụng của bạn.

00:01:34.000 --> 00:01:41.000
Ứng dụng của bạn không thể truy cập trực tiếp vào bộ chọn và thậm chí không chụp ảnh màn hình nội dung bộ chọn.

00:01:41.000 --> 00:01:47.000
Chỉ những gì người dùng thực sự chọn mới được chuyển trở lại ứng dụng của bạn.

00:01:47.000 --> 00:01:54.000
Năm nay, chúng tôi sẽ mang đến nhiều tùy chọn cấu hình hơn cho bộ chọn ngoài quy trình.

00:01:54.000 --> 00:02:04.000
Công cụ sửa đổi ".photosPickerDisabledCapabilities" mới cho phép bạn vô hiệu hóa một số khả năng chọn nhất định, vì vậy bạn có thể triển khai phiên bản của riêng mình.

00:02:04.000 --> 00:02:11.000
Ví dụ, nút "Hủy" và nút "Thêm" có thể bị ẩn nếu bạn vô hiệu hóa các hành động lựa chọn.

00:02:11.000 --> 00:02:24.000
Công cụ sửa đổi ".photosPickerAccessoryVisibility" mới cho phép bạn ẩn giao diện người dùng phụ kiện xung quanh nội dung bộ chọn, như thanh điều hướng và thanh công cụ.

00:02:24.000 --> 00:02:32.000
Bạn thậm chí có thể chỉ định kích thước và vị trí của bộ chọn bằng cách sử dụng các công cụ sửa đổi SwiftUI tiêu chuẩn như ".frame" và ".padding".

00:02:32.000 --> 00:02:40.000
Bạn có thể tự hỏi: "Nếu nút "Thêm" bị ẩn, làm thế nào ứng dụng của tôi có thể nhận tài sản do người dùng đã chọn ở chế độ nhiều lựa chọn?"

00:02:40.000 --> 00:02:47.000
Bây giờ bạn có thể đặt hành vi lựa chọn thành ".liên tục" để nhận các bản cập nhật lựa chọn trực tiếp.

00:02:47.000 --> 00:02:59.000
Và cuối cùng, bạn có thể sử dụng công cụ sửa đổi ".photosPickerStyle(.inline)" mới để nhúng bộ chọn vào ứng dụng của mình, thay vì trình bày nó dưới dạng một trang tính riêng biệt.

00:02:59.000 --> 00:03:05.000
Mặc dù bộ chọn được nhúng, nó vẫn được hiển thị trong một quy trình riêng biệt.

00:03:05.000 --> 00:03:13.000
Một số người dùng có thể lo lắng khi họ thấy ứng dụng của bạn hiển thị tất cả ảnh của họ mà không nhắc truy cập thư viện.

00:03:13.000 --> 00:03:25.000
Chúng tôi muốn giúp người dùng cảm thấy an toàn khi sử dụng ứng dụng của bạn, vì vậy lần đầu tiên bộ chọn nhúng được hiển thị, giao diện người dùng giới thiệu sẽ tự động xuất hiện giải thích rằng ứng dụng của bạn chỉ có thể truy cập các ảnh đã chọn.

00:03:25.000 --> 00:03:31.000
Huy hiệu quyền riêng tư của Ảnh chỉ ra rằng bộ chọn là riêng tư và không được xử lý.

00:03:31.000 --> 00:03:39.000
Nếu ứng dụng của bạn đã trình chọn kích thước đầy đủ, một biểu ngữ có thể loại bỏ sẽ xuất hiện khi người dùng nâng cấp lên iOS 17.

00:03:39.000 --> 00:03:45.000
Giao diện người dùng Cài đặt Quyền riêng tư cũng được cập nhật với lời giải thích chi tiết hơn.

00:03:45.000 --> 00:03:50.000
Ngoài ra, chúng tôi đã thực hiện một số thay đổi đối với lời nhắc cấp phép truy cập thư viện.

00:03:50.000 --> 00:03:56.000
Để tìm hiểu thêm về những thay đổi đó, bạn có thể xem phiên "Có gì mới trong quyền riêng tư".

00:03:56.000 --> 00:04:00.000
Được rồi, chúng ta hãy quay lại API thực tế.

00:04:00.000 --> 00:04:06.000
Tôi sẽ xem xét các trường hợp sử dụng của họ trước, và sau đó tôi sẽ giải thích chi tiết từng API.

00:04:06.000 --> 00:04:12.000
Nếu bạn muốn nhúng bộ chọn ngoài quy trình, hãy sử dụng công cụ sửa đổi ".photosPickerStyle".

00:04:12.000 --> 00:04:19.000
Để đặt giao diện người dùng của riêng bạn xung quanh bộ chọn, ".photosPickerAccessoryVisibility" là giao diện người dùng để sử dụng.

00:04:19.000 --> 00:04:26.000
Nó cũng có một đối số tùy chọn cho phép bạn điều khiển các phụ kiện xung quanh các cạnh được chỉ định.

00:04:26.000 --> 00:04:30.000
Giá trị mặc định là tất cả các cạnh.

00:04:30.000 --> 00:04:37.000
Nếu bạn muốn thực hiện thay thế của riêng mình cho một số tính năng chọn, hãy sử dụng công cụ sửa đổi ".photosPicker DisabledCapabilities".

00:04:37.000 --> 00:04:48.000
Và cuối cùng, nếu bạn cần điều chỉnh hoặc phản hồi các cập nhật lựa chọn trong thời gian thực, hãy đảm bảo "selectionBehavior" được đặt thành ".continuous".

00:04:48.000 --> 00:04:52.000
Vậy chính xác thì cái gì được coi là phụ kiện?

00:04:52.000 --> 00:05:00.000
Trên iOS, phụ kiện trên cùng là thanh điều hướng và phụ kiện dưới cùng là thanh công cụ.

00:05:00.000 --> 00:05:07.000
Trên iPadOS và macOS, phụ kiện hàng đầu là thanh bên khi nó hiển thị.

00:05:07.000 --> 00:05:12.000
Các phụ kiện trên và dưới tương tự như những gì iOS có.

00:05:12.000 --> 00:05:23.000
Tiếp theo, tôi sẽ hướng dẫn bạn các khả năng chọn có thể bị vô hiệu hóa và cách chúng sẽ ảnh hưởng đến giao diện người dùng chọn.

00:05:23.000 --> 00:05:28.000
Thanh tìm kiếm sẽ bị ẩn nếu khả năng tìm kiếm bị vô hiệu hóa.

00:05:28.000 --> 00:05:34.000
Nếu điều hướng bộ sưu tập bị vô hiệu hóa, tab album sẽ bị ẩn.

00:05:34.000 --> 00:05:39.000
Trên iPadOS và macOS, thanh bên cũng sẽ bị ẩn.

00:05:39.000 --> 00:05:47.000
Nếu khu vực dàn dựng bị vô hiệu hóa, nút thanh công cụ sẽ được thay thế bằng nhãn trạng thái.

00:05:47.000 --> 00:05:56.000
Nếu bạn vô hiệu hóa các hành động lựa chọn mà không có lựa chọn liên tục, chỉ có nút "Hủy" sẽ bị ẩn và nút "Thêm" vẫn sẽ hiển thị.

00:05:56.000 --> 00:06:01.000
Nếu không, ứng dụng của bạn sẽ không thể nhận được bất kỳ lựa chọn người dùng nào.

00:06:01.000 --> 00:06:08.000
Cả hai nút sẽ bị ẩn nếu bạn cũng đặt hành vi lựa chọn thành ".liên tục".

00:06:08.000 --> 00:06:11.000
Hãy xem xét các phong cách chọn mới ngay bây giờ.

00:06:11.000 --> 00:06:19.000
Ngoài kiểu ".presentation" và kiểu ".inline", bộ chọn cũng hỗ trợ một kiểu ".compact" khác.

00:06:19.000 --> 00:06:23.000
Đây là kiểu ".presentation" mặc định.

00:06:23.000 --> 00:06:28.000
Đây là phong cách ".inline" với tất cả các phụ kiện được ẩn.

00:06:28.000 --> 00:06:31.000
Và đây là phong cách ".compact".

00:06:31.000 --> 00:06:39.000
Bộ chọn một hàng cho phép bạn nhúng nó ở nhiều nơi hơn, nơi không gian thẳng đứng có sẵn bị hạn chế nghiêm trọng.

00:06:39.000 --> 00:06:43.000
Đã đến lúc một bản demo kết nối mọi thứ lại với nhau.

00:06:43.000 --> 00:06:48.000
Tôi đã tạo một ứng dụng đơn giản cho phép tôi chú thích hình ảnh bằng mô tả văn bản.

00:06:48.000 --> 00:06:52.000
Hãy để tôi chỉ cho bạn những gì nó có thể làm ngay bây giờ.

00:06:52.000 --> 00:07:02.000
Tôi có thể trình bày bộ chọn dưới dạng bảng phương thức, chọn một số hình ảnh và thêm một số mô tả.

00:07:02.000 --> 00:07:07.000
Đối với bản demo, tôi muốn thay thế nút "Chọn ảnh" bằng bộ chọn được nhúng.

00:07:07.000 --> 00:07:15.000
Hãy để tôi thêm công cụ sửa đổi ".photosPickerStyle(.inline)" và dùng thử.

00:07:15.000 --> 00:07:27.000
Nó hoạt động, nhưng nó trông vẫn chưa đẹp.

00:07:27.000 --> 00:07:38.000
Tôi vẫn cần nhấn vào nút "Thêm" để cập nhật danh sách và nếu bộ chọn thay đổi kích thước, thanh công cụ sẽ không được mở rộng đến cạnh dưới của thiết bị.

00:07:38.000 --> 00:07:39.000
Nhưng đừng lo lắng.

00:07:39.000 --> 00:07:43.000
Chỉ với một vài chỉnh sửa, nó có thể trông đẹp hơn rất nhiều.

00:07:43.000 --> 00:07:55.000
Đầu tiên, vì bộ chọn có thể xử lý các khu vực an toàn một cách duyên dáng, tôi có thể sử dụng công cụ sửa đổi ".ignoresSafeArea" để bộ chọn có thể mở rộng ra cạnh dưới của màn hình.

00:07:55.000 --> 00:08:03.000
Tiếp theo, tôi sẽ đảm bảo danh sách có thể được cập nhật ngay khi tôi chọn một bức ảnh trong bộ chọn.

00:08:03.000 --> 00:08:07.000
Thực ra, nó rất dễ thay đổi.

00:08:07.000 --> 00:08:13.000
Đặt hành vi lựa chọn thành ".liên tục" là tất cả những gì tôi cần làm.

00:08:13.000 --> 00:08:20.000
Vì danh sách hiện đã được cập nhật trực tiếp, tôi không thực sự cần phải giữ các nút thanh điều hướng nữa.

00:08:20.000 --> 00:08:32.000
Tôi có thể xóa chúng bằng cách sử dụng công cụ sửa đổi ".photosPicker DisabledCapabilities".

00:08:32.000 --> 00:08:34.000
Bộ chọn hiện đã hoạt động đầy đủ.

00:08:34.000 --> 00:08:39.000
Nhưng tôi muốn chắc chắn rằng bộ chọn trông cũng đẹp.

00:08:39.000 --> 00:08:43.000
Tôi nghĩ tôi nên ẩn thanh điều hướng và thanh công cụ.

00:08:43.000 --> 00:08:47.000
Tôi cũng muốn cho người chọn một chiều cao cố định.

00:08:47.000 --> 00:08:59.000
Tôi có thể sử dụng công cụ sửa đổi ".photosPicker AccessoryVisibility" để ẩn các thanh và điều chỉnh chiều cao của bộ chọn như bất kỳ chế độ xem SwiftUI nào khác.

00:08:59.000 --> 00:09:17.000
Bây giờ nó trông thật tuyệt.

00:09:17.000 --> 00:09:23.000
Chỉ trong vài phút, tôi đã cập nhật ứng dụng của mình để hiển thị bộ chọn nhúng mới.

00:09:23.000 --> 00:09:27.000
Tôi sẽ xây dựng và chạy để chúng ta có thể kiểm tra nó trên một thiết bị thực.

00:09:27.000 --> 00:09:32.000
Tôi có thể sử dụng lưới có thể phóng to để nhanh chóng điều hướng đến bức ảnh tôi muốn chọn.

00:09:32.000 --> 00:09:36.000
Những bức ảnh đã chọn sẽ tự động xuất hiện trong ứng dụng của tôi.

00:09:36.000 --> 00:09:44.000
Trải nghiệm chọn ảnh của ứng dụng của tôi được cải thiện đáng kể với bộ chọn nhúng mới.

00:09:44.000 --> 00:09:46.000
Đó là nó cho bản demo.

00:09:46.000 --> 00:09:56.000
Tôi đã sử dụng iPhone trong bản demo, nhưng API tương tự có sẵn trên iOS, iPadOS và macOS.

00:09:56.000 --> 00:10:02.000
Ngoài SwiftUI, API tương tự cũng có sẵn cho các ứng dụng UIKit và AppKit.

00:10:02.000 --> 00:10:06.000
Hãy cùng xem UIKit và AppKit API.

00:10:06.000 --> 00:10:12.000
Bộ chọn nhúng có sẵn thông qua cùng một API Cấu hình PHPicker.

00:10:12.000 --> 00:10:18.000
Bây giờ bạn có thể đặt "lựa chọn" thành ".liên tục" để chọn hành vi lựa chọn liên tục.

00:10:18.000 --> 00:10:24.000
Bạn cũng có thể đặt "mode" thành ".compact" để định cấu hình bộ chọn thành bố cục hàng đơn.

00:10:24.000 --> 00:10:37.000
Bạn có thể sử dụng "edgesWithoutContentMargins" để ẩn các phụ kiện như thanh điều hướng và "disabledCapabilities" để vô hiệu hóa khả năng chọn nhất định.

00:10:37.000 --> 00:10:49.000
Không giống như SwiftUI API nơi bạn có thể sử dụng công cụ sửa đổi ".photosPickerStyle(.inline)" để nhúng bộ chọn, bạn sẽ cần thêm nó làm bộ điều khiển chế độ xem con vào bộ điều khiển vùng chứa của mình.

00:10:49.000 --> 00:10:57.000
Bạn có thể đặt khung của bộ chọn theo cách thủ công hoặc sử dụng các ràng buộc Bố cục Tự động để kích thước và định vị chế độ xem bộ chọn.

00:10:57.000 --> 00:11:04.000
Sau khi thêm chế độ xem phụ, bạn chỉ cần thông báo cho bộ chọn rằng nó đã được thêm vào.

00:11:04.000 --> 00:11:12.000
API "PHPickerConfiguration.Update" mới cho phép bạn cập nhật bộ chọn trong khi nó được hiển thị cho người dùng.

00:11:12.000 --> 00:11:21.000
Bạn cũng có thể bỏ chọn hoặc sắp xếp lại các tài sản đã chọn bằng cách sử dụng các API "deselectAsset" và "moveAsset" hiện có.

00:11:21.000 --> 00:11:28.000
Tiếp theo, tôi sẽ nói về menu Tùy chọn mới và nó sẽ ảnh hưởng đến ứng dụng của bạn như thế nào.

00:11:28.000 --> 00:11:34.000
Trình đơn Tùy chọn mới cung cấp cho người dùng nhiều quyền kiểm soát hơn đối với những gì họ có thể chia sẻ với ứng dụng của bạn.

00:11:34.000 --> 00:11:47.000
Theo mặc định, tất cả siêu dữ liệu hình ảnh đều được bao gồm, nhưng giờ đây người dùng có thể chọn xóa siêu dữ liệu nhạy cảm, như vị trí, khỏi các ảnh đã chọn.

00:11:47.000 --> 00:11:56.000
Nếu bạn đang sử dụng API "PhotosPicker" và "Transferable", bạn không cần phải thực hiện bất kỳ công việc áp dụng nào để hỗ trợ menu Tùy chọn mới.

00:11:56.000 --> 00:12:03.000
Tương tự, không cần công việc áp dụng nếu bạn đang sử dụng API "PHPickerViewController".

00:12:03.000 --> 00:12:12.000
Trình đơn Tùy chọn sẽ không được hỗ trợ cho các ứng dụng sử dụng API "UIImagePickerController" kế thừa hoặc có quyền truy cập thư viện đầy đủ.

00:12:12.000 --> 00:12:16.000
Được rồi, đó là menu Tùy chọn.

00:12:16.000 --> 00:12:25.000
Bây giờ tôi sẽ nói về cách bạn có thể hỗ trợ hình ảnh HDR, video HDR và video chế độ Điện ảnh nếu bạn sử dụng bộ chọn hệ thống.

00:12:25.000 --> 00:12:32.000
Bộ chọn có thể tự động chuyển mã tài sản sang các định dạng tương thích, như JPEG, theo mặc định.

00:12:32.000 --> 00:12:39.000
Tuy nhiên, tài sản được chuyển mã có thể không chứa tất cả thông tin có trong tài sản gốc.

00:12:39.000 --> 00:12:44.000
Vì vậy, nếu bạn muốn nhận nội dung HDR, tốt nhất bạn nên tránh chuyển mã tự động.

00:12:44.000 --> 00:12:55.000
Bạn có thể lấy ảnh và video ở định dạng gốc bằng cách sử dụng chính sách mã hóa ".current" và yêu cầu một loại nội dung chung, như ".image" hoặc ".movie".

00:12:55.000 --> 00:13:04.000
Yêu cầu các loại nội dung cụ thể, như ".jpeg", vẫn có thể chuyển mã tài sản ngay cả khi chính sách mã hóa được đặt thành ".current".

00:13:04.000 --> 00:13:10.000
Để biết thêm thông tin về việc thêm hỗ trợ cho HDR, bạn có thể xem phiên "Hỗ trợ hình ảnh HDR trong ứng dụng của bạn" trong năm nay.

00:13:10.000 --> 00:13:16.000
Đây là một ví dụ mã nhận hình ảnh ở định dạng gốc của chúng.

00:13:16.000 --> 00:13:24.000
Bạn có thể thấy rằng "preferredItemEncoding" được đặt thành ".current" và "importedContentType" là ".image".

00:13:24.000 --> 00:13:32.000
Nếu một video chế độ Điện ảnh được chọn, bộ chọn sẽ cung cấp cho bạn phiên bản kết xuất của nó, với tất cả hiệu ứng chiều sâu được nướng vào.

00:13:32.000 --> 00:13:40.000
Nếu bạn muốn nhận được tất cả các điểm quyết định, bạn cần yêu cầu quyền truy cập thư viện ảnh và sử dụng PhotoKit để tìm nạp video thay thế.

00:13:40.000 --> 00:13:48.000
Để tìm hiểu thêm về video chế độ Điện ảnh, bạn có thể xem phiên "Hỗ trợ video chế độ Điện ảnh trong ứng dụng của bạn".

00:13:48.000 --> 00:13:56.000
Để kết thúc, bộ chọn nhúng mới mang lại rất nhiều tính linh hoạt và tôi nóng lòng muốn xem bạn có thể làm gì với nó.

00:13:56.000 --> 00:14:06.000
Trình đơn Tùy chọn cung cấp cho người dùng nhiều quyền kiểm soát hơn đối với những gì cần chia sẻ, vì vậy vui lòng tránh yêu cầu quyền truy cập thư viện ảnh trừ khi thực sự cần thiết.

00:14:06.000 --> 00:14:08.000
Cảm ơn bạn, và mã hóa vui vẻ!

00:14:08.000 --> 23:59:59.000
♪ ♪

