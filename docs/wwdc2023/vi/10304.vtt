WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:13.000
Onur Tackin: Xin chào. Tên tôi là Onur Tackin.

00:00:13.000 --> 00:00:21.000
Tôi là Giám đốc Kỹ thuật, và hôm nay, tôi sẽ giới thiệu cho bạn cách tích hợp với các giá đỡ iPhone có động cơ bằng DockKit.

00:00:21.000 --> 00:00:38.000
Trong video này, tôi sẽ nói về DockKit là gì, sau đó đi sâu vào cách nó hoạt động ngay lập tức, hướng dẫn cách bạn có thể tùy chỉnh ứng dụng của mình bằng DockKit và cuối cùng chuyển động như một khả năng sử dụng hình ảnh động của thiết bị.

00:00:38.000 --> 00:00:42.000
Vậy, DockKit là gì?

00:00:42.000 --> 00:00:48.000
DockKit là khung cho phép iPhone hoạt động như máy tính trung tâm cho giá đỡ máy ảnh có động cơ.

00:00:48.000 --> 00:00:59.000
Giá đỡ DockKit mở rộng trường nhìn cho bất kỳ máy ảnh iPhone nào lên 360 độ xoay và độ nghiêng 90 độ bằng cách hỗ trợ mô hình chuyển động Pitch và Yaw và trình theo dõi hệ thống tự động.

00:00:59.000 --> 00:01:08.000
Điều này cho phép người dùng tập trung vào nội dung của họ và không phải lo lắng về việc ở trong khung hình trong bất kỳ ứng dụng máy ảnh nào.

00:01:08.000 --> 00:01:18.000
Những giá đỡ này có thể bao gồm các nút đơn giản để theo dõi nguồn và vô hiệu hóa, và đèn báo LED để cho bạn biết nếu theo dõi đang hoạt động và bạn đang ở trong khung.

00:01:18.000 --> 00:01:22.000
Bạn ghép nối điện thoại với giá đỡ và sau đó nó tốt để đi.

00:01:22.000 --> 00:01:28.000
Tất cả điều kỳ diệu xảy ra trong ứng dụng và dịch vụ hệ thống trên chính iPhone.

00:01:28.000 --> 00:01:39.000
Do điều khiển động cơ và theo dõi đối tượng đang được xử lý ở cấp hệ thống, bất kỳ ứng dụng nào sử dụng API máy ảnh iOS đều có thể tận dụng lợi thế của DockKit.

00:01:39.000 --> 00:01:52.000
Điều đó tạo cơ hội cho những trải nghiệm tốt hơn và các tính năng mới trong các ứng dụng cho Quay video, Phát trực tiếp, Hội nghị truyền hình, Thể dục, Doanh nghiệp, Giáo dục, Chăm sóc sức khỏe, v.v.

00:01:52.000 --> 00:02:01.000
Thay vì chỉ nói về DockKit, hãy để tôi chứng minh điều đó với bạn.

00:02:01.000 --> 00:02:04.000
Trước mặt tôi, tôi có một giá đỡ DockKit nguyên mẫu.

00:02:04.000 --> 00:02:06.000
Tôi đã ghép nối nó với iPhone.

00:02:06.000 --> 00:02:10.000
Khi ở trên giá đỡ, điện thoại sẽ giao tiếp với đế cắm được ghép nối thông qua DockKit.

00:02:10.000 --> 00:02:12.000
Bây giờ, hãy thử xem.

00:02:12.000 --> 00:02:19.000
Tôi sẽ khởi chạy ứng dụng Camera tích hợp và khi tôi nhấn nút này ở đây, nó sẽ bắt đầu theo dõi.

00:02:19.000 --> 00:02:22.000
Khi tôi di chuyển quanh bàn, bến tàu theo dõi tôi.

00:02:22.000 --> 00:02:26.000
Chú ý đèn LED màu xanh lá cây nhấp nháy để biểu thị tôi đang ở trong khung hình.

00:02:26.000 --> 00:02:34.000
Bây giờ, hãy để tôi chuyển sang camera sau.

00:02:34.000 --> 00:02:39.000
Chú ý cách dock phản ứng bằng cách xoay 180 độ để đưa tôi vào trường nhìn.

00:02:39.000 --> 00:02:40.000
Siêu ngầu.

00:02:40.000 --> 00:02:44.000
Nhưng điều này không hoạt động chỉ với ứng dụng Camera tích hợp.

00:02:44.000 --> 00:02:51.000
Bất kỳ ứng dụng nào sử dụng API máy ảnh đều có thể được sử dụng với dock.

00:02:51.000 --> 00:02:54.000
Ví dụ, hãy thử FILMICPRO.

00:02:54.000 --> 00:03:02.000
Đây là cùng một FILMICPRO mà bạn có thể tải xuống từ App Store ngay hôm nay.

00:03:02.000 --> 00:03:06.000
Khi tôi khởi chạy ứng dụng, nó mặc định là camera phía sau.

00:03:06.000 --> 00:03:09.000
Và tất cả những điều này hoạt động ngay lập tức.

00:03:09.000 --> 00:03:13.000
Với giá đỡ DockKit, bạn có thể tương tác với không gian và các vật thể xung quanh bạn.

00:03:13.000 --> 00:03:26.000
Ví dụ, tôi có thể vào chồng sách của mình ở đây và nói về sách của mình, hoặc tôi có thể sắp xếp lại không gian của mình, tương tác với các đồ vật.

00:03:26.000 --> 00:03:42.000
Hãy xem, các ứng dụng DockKit cho phép người kể chuyện tập trung vào câu chuyện thay vì lo lắng về trường nhìn.

00:03:42.000 --> 00:03:49.000
Với trí thông minh hình ảnh tích hợp của iPhone và động cơ mượt mà, những giá đỡ này thực sự trở nên sống động.

00:03:49.000 --> 00:03:52.000
Hãy đi sâu vào cách thức hoạt động của nó.

00:03:52.000 --> 00:04:08.000
Trình theo dõi hệ thống DockKit chạy bên trong đường ống xử lý máy ảnh, phân tích khung máy ảnh thông qua suy luận tích hợp, quyết định chủ đề nào cần theo dõi, ước tính quỹ đạo đối tượng và đóng khung đối tượng một cách thích hợp bằng cách điều khiển động cơ.

00:04:08.000 --> 00:04:22.000
Giống như cách một nhà quay phim quan sát các sự kiện trong thế giới thực và điều chỉnh phối cảnh của máy ảnh, DockKit suy ra một đối tượng từ khung máy ảnh và điều chỉnh động cơ thông qua các lệnh truyền động đến dock.

00:04:22.000 --> 00:04:28.000
Điều khiển động cơ đạt được thông qua trình nền DockKit quản lý và giao tiếp với giá đỡ DockKit.

00:04:28.000 --> 00:04:37.000
Các lệnh truyền động được gửi đến chân đế thông qua giao thức DockKit và phản hồi cảm biến được sử dụng để đóng vòng lặp trên điều khiển động cơ.

00:04:37.000 --> 00:04:45.000
Để xử lý việc theo dõi, khung máy ảnh được phân tích thông qua suy luận ISP và được chuyển đến DockKit với tốc độ 30 khung hình mỗi giây.

00:04:45.000 --> 00:04:50.000
Có một Khung Hiểu biết Trực quan dưới mui xe để giúp giải quyết các kịch bản nhiều người.

00:04:50.000 --> 00:04:57.000
Các hộp giới hạn khuôn mặt và cơ thể được tạo ra và cung cấp cho trình theo dõi cấp hệ thống đa mô hình.

00:04:57.000 --> 00:05:06.000
Trình theo dõi tạo ra một bản nhạc cho mỗi người hoặc đối tượng được theo dõi và chạy một bộ lọc EKF thống kê để làm mịn các khoảng trống và lỗi từ suy luận.

00:05:06.000 --> 00:05:10.000
Xét cho cùng, các tín hiệu trong thế giới thực không phải lúc nào cũng hoàn hảo.

00:05:10.000 --> 00:05:21.000
Các ước tính theo dõi cho đối tượng được kết hợp với phản hồi về vị trí và vận tốc của động cơ, cũng như IMU điện thoại để đi đến các lệnh quỹ đạo và thiết bị truyền động cuối cùng.

00:05:21.000 --> 00:05:25.000
Thông thường, nhiều đối tượng có thể có mặt trong một khung hình.

00:05:25.000 --> 00:05:30.000
Theo mặc định, DockKit theo dõi chủ đề chính với khung trung tâm.

00:05:30.000 --> 00:05:37.000
Nếu họ tham gia vào người thứ hai hoặc đối tượng, thì DockKit cũng sẽ cố gắng đóng khung người hoặc đối tượng đó.

00:05:37.000 --> 00:05:43.000
Ví dụ, ở đây chúng ta có Mahmut, Steve, Dhruv và Vamsi.

00:05:43.000 --> 00:05:46.000
Mahmut là chủ đề chính được biểu thị bằng hộp giới hạn màu xanh lá cây.

00:05:46.000 --> 00:05:52.000
Lưu ý rằng có các hộp giới hạn cho cơ thể cũng như khuôn mặt được phát hiện.

00:05:52.000 --> 00:06:03.000
Ngay cả khi các thành viên khác trong nhóm cản trở Mahmut và băng qua các con đường, trình theo dõi vẫn tiếp tục theo dõi đối tượng chính.

00:06:03.000 --> 00:06:12.000
Khi nhận dạng hoặc suy luận cho kết quả không chính xác do tắc nghẽn, trình theo dõi thống kê sẽ sửa lỗi và có thể tiếp tục theo dõi Mahmut.

00:06:12.000 --> 00:06:17.000
Đó là cách DockKit hoạt động mà bạn không cần phải thêm bất kỳ mã bổ sung nào vào ứng dụng của mình.

00:06:17.000 --> 00:06:24.000
Tuy nhiên, mọi thứ trở nên thực sự thú vị khi bạn tích hợp với DockKit để cung cấp các tính năng mới mà khách hàng của bạn sẽ yêu thích.

00:06:24.000 --> 00:06:30.000
Hãy cùng khám phá cách bạn có thể kiểm soát phụ kiện DockKit.

00:06:30.000 --> 00:06:33.000
Điều này sẽ liên quan đến việc có được một tham chiếu đến bến tàu.

00:06:33.000 --> 00:06:43.000
Từ đó, bạn có thể chọn thay đổi khung, chỉ định những gì đang được theo dõi hoặc điều khiển trực tiếp động cơ sau khi dừng theo dõi hệ thống.

00:06:43.000 --> 00:06:47.000
Đầu tiên, bạn sẽ muốn đăng ký thay đổi trạng thái phụ kiện dock.

00:06:47.000 --> 00:06:54.000
Thông báo kết nối hoặc tháo nối xảy ra khi một người gắn hoặc tháo iPhone khỏi phụ kiện đế cắm tương thích.

00:06:54.000 --> 00:07:01.000
Thông báo là điều kiện tiên quyết để sửa đổi hành vi theo dõi.

00:07:01.000 --> 00:07:05.000
Bạn có thể truy vấn trạng thái của dock thông qua các sự kiện DockAccessoryManager State.

00:07:05.000 --> 00:07:09.000
Các trạng thái liên quan duy nhất là Docked và Undocked.

00:07:09.000 --> 00:07:12.000
Kết nối được quản lý bởi chính DockKit.

00:07:12.000 --> 00:07:18.000
Trạng thái Docked cũng có nghĩa là iPhone được kết nối với dock thông qua DockKit Protocol.

00:07:18.000 --> 00:07:23.000
Thông qua các sự kiện trạng thái, ứng dụng của bạn cũng có thể nhận được trạng thái của nút theo dõi.

00:07:23.000 --> 00:07:29.000
Một khi bạn biết rằng iPhone đã được gắn vào đế, bạn có thể kiểm soát các khía cạnh khác của phụ kiện.

00:07:29.000 --> 00:07:36.000
Một trong những điều hữu ích nhất là ứng dụng của bạn quản lý cách cắt video.

00:07:36.000 --> 00:07:40.000
Có hai cách bạn có thể kiểm soát việc cắt xén trường nhìn của máy ảnh.

00:07:40.000 --> 00:07:50.000
Đầu tiên, bạn có thể chỉ cần chọn căn chỉnh trái, giữa hoặc phải của khung tự động hoặc bạn có thể chỉ định một khu vực quan tâm cụ thể.

00:07:50.000 --> 00:07:54.000
Hãy xem qua các trường hợp mà bạn có thể muốn chọn cái này hay cái kia.

00:07:54.000 --> 00:07:59.000
Theo mặc định, DockKit sẽ giữ chủ đề của bạn ở giữa khung.

00:07:59.000 --> 00:08:06.000
Điều này hoạt động tốt cho những thứ đơn giản như phát trực tuyến video, nhưng có những trường hợp sử dụng mà điều này có thể không lý tưởng.

00:08:06.000 --> 00:08:13.000
Ví dụ, điều gì sẽ xảy ra nếu ứng dụng của bạn chèn các lớp phủ đồ họa tùy chỉnh, như logo này, vào khung video?

00:08:13.000 --> 00:08:19.000
Trong trường hợp này, bạn muốn đảm bảo rằng chủ đề của bạn không bị che khuất bởi tác phẩm nghệ thuật.

00:08:19.000 --> 00:08:23.000
Bạn có thể sửa lỗi này bằng cách thay đổi chế độ đóng khung.

00:08:23.000 --> 00:08:30.000
Ở đây, tôi đang chỉ định "phải" để giúp cân bằng với đồ họa được căn chỉnh với một phần ba bên trái của khung hình.

00:08:30.000 --> 00:08:36.000
Và với đoạn mã đơn giản đó, bố cục hoàn hảo cho chuỗi mở đầu của video này.

00:08:36.000 --> 00:08:43.000
Một cách khác để kiểm soát việc cắt xén là chỉ định một khu vực quan tâm cụ thể trong khung hình video.

00:08:43.000 --> 00:08:46.000
Lấy ứng dụng hội nghị truyền hình này làm ví dụ.

00:08:46.000 --> 00:08:50.000
Tất cả các khung hình video được dự định cắt theo tỷ lệ khung hình vuông.

00:08:50.000 --> 00:08:57.000
Tuy nhiên, khung mặc định của DockKit có thể khiến khuôn mặt của ai đó bị cắt đứt.

00:08:57.000 --> 00:09:02.000
Bạn có thể khắc phục điều này bằng cách đặt vùng quan tâm trên phụ kiện DockKit.

00:09:02.000 --> 00:09:07.000
Góc trên bên trái của màn hình iPhone được coi là điểm xuất phát.

00:09:07.000 --> 00:09:11.000
Các khu vực quan tâm được xác định trong tọa độ chuẩn hóa.

00:09:11.000 --> 00:09:18.000
Trong ví dụ này, tôi đang nói với phụ kiện DockKit rằng khu vực quan tâm là một hình vuông ở giữa.

00:09:18.000 --> 00:09:24.000
Với việc điều chỉnh theo khu vực quan tâm, đối tượng được cắt xén hoàn hảo trong khung hình.

00:09:24.000 --> 00:09:31.000
Với DockKit, bạn cũng có thể thực hiện điều khiển động cơ tùy chỉnh trong ứng dụng của mình cho tiện ích hoặc như một khả năng chi trả.

00:09:31.000 --> 00:09:35.000
Điều này có thể mở ra nhiều cơ hội tính năng mới.

00:09:35.000 --> 00:09:46.000
Vì DockKit cho phép theo dõi hệ thống theo mặc định, bạn sẽ cần đặt giá trị này thành sai trước khi kiểm soát động cơ hoặc thực hiện theo dõi tùy chỉnh của riêng bạn.

00:09:46.000 --> 00:09:51.000
Giá đỡ DockKit hoạt động trên hai trục quay: X và Y.

00:09:51.000 --> 00:10:00.000
Độ nghiêng hoặc cụ thể là vòng quay Pitch xung quanh trục X thẳng hàng với động cơ phía sau điểm dock nam châm.

00:10:00.000 --> 00:10:08.000
Đối với pan, được gọi là Yaw, vòng quay quanh trục Y thẳng hàng với động cơ ở chân đế của giá đỡ.

00:10:08.000 --> 00:10:12.000
Hãy xem ví dụ về việc kiểm soát điều này trong mã.

00:10:12.000 --> 00:10:21.000
Giả sử bạn muốn di chuyển động cơ ở tốc độ thấp 0,2 radian mỗi giây sang phải trong khi giảm 0,1 radian mỗi giây.

00:10:21.000 --> 00:10:28.000
Đầu tiên bạn xác định vectơ vận tốc ban đầu, sau đó gửi vectơ đó đến dock.

00:10:28.000 --> 00:10:32.000
Bạn có thể tiếp tục chuyển động trong 2 giây bằng cách ngủ nhiệm vụ.

00:10:32.000 --> 00:10:41.000
Và đảo ngược hướng với một vectơ khác để di chuyển sang trái ở 0,2 rad/s và Pitch lên với 0,1 rad/s.

00:10:41.000 --> 00:10:45.000
Bây giờ, đó không phải là tất cả những gì có thể khi ứng dụng của bạn tích hợp với DockKit.

00:10:45.000 --> 00:10:51.000
Ngoài việc điều khiển động cơ trực tiếp, bạn cũng có thể kiểm soát Suy luận.

00:10:51.000 --> 00:10:57.000
Bạn có thể sử dụng khung Vision, mô hình ML tùy chỉnh của riêng bạn hoặc bất kỳ thuật toán nhận thức nào mà ứng dụng của bạn cần.

00:10:57.000 --> 00:11:03.000
Từ đầu ra suy luận tùy chỉnh, bạn xây dựng các quan sát để đưa vào DockKit để theo dõi đối tượng.

00:11:03.000 --> 00:11:06.000
Vậy, quan sát là gì?

00:11:06.000 --> 00:11:13.000
Quan sát là bất kỳ hộp giới hạn hình chữ nhật nào đại diện cho một đối tượng quan tâm trong khung máy ảnh.

00:11:13.000 --> 00:11:16.000
Đó là, những gì bạn muốn theo dõi.

00:11:16.000 --> 00:11:23.000
Nó có thể là một khuôn mặt, hoặc một con vật, hoặc thậm chí là một bàn tay.

00:11:23.000 --> 00:11:28.000
Thành thật mà nói, bất kỳ đối tượng hoặc điểm nào mà bạn có thể quan sát theo thời gian.

00:11:28.000 --> 00:11:33.000
Các hộp giới hạn được xác định trong tọa độ chuẩn hóa dựa trên điểm gốc phía dưới bên trái.

00:11:33.000 --> 00:11:45.000
Ví dụ, để tạo một quan sát cho khuôn mặt được phát hiện này, tôi sẽ sử dụng một hộp giới hạn khoảng 0,25, 0,5, với chiều rộng và chiều cao bằng tỷ lệ phần trăm của khung hình ảnh tổng thể.

00:11:45.000 --> 00:11:53.000
Để tạo ra một quan sát, bạn xây dựng một CGRect trong tọa độ chuẩn hóa và xây dựng một Quan sát từ nó.

00:11:53.000 --> 00:12:00.000
Khi bạn làm như vậy, bạn muốn xác định rằng loại quan sát là "humanFace" hoặc "object".

00:12:00.000 --> 00:12:09.000
Bằng cách sử dụng tùy chọn "humanFace", bạn có thể đảm bảo rằng việc tối ưu hóa khung và theo dõi nhiều người ở cấp hệ thống vẫn có hiệu lực.

00:12:09.000 --> 00:12:13.000
Một khi các quan sát được tạo ra, chúng có thể được cung cấp cho trình theo dõi.

00:12:13.000 --> 00:12:16.000
Bạn bắt đầu bằng cách lấy thông tin máy ảnh hiện tại.

00:12:16.000 --> 00:12:34.000
Trong trường hợp này, tôi chỉ định rằng hướng được "đã sửa" để cho DockKit biết tọa độ liên quan đến góc dưới bên trái của màn hình và không cần chuyển đổi, sau đó chuyển mảng quan sát và thông tin máy ảnh đến phụ kiện dock.

00:12:34.000 --> 00:12:42.000
Bây giờ, tin tốt là, bạn không cần phải tính toán các hộp giới hạn của nhiều thứ bạn có thể muốn quan sát và theo dõi hoàn toàn bằng tay.

00:12:42.000 --> 00:13:00.000
Khung Tầm nhìn rất phù hợp để suy luận tùy chỉnh, vì nó đã bao gồm nhiều yêu cầu tích hợp trả về các hộp giới hạn có thể dễ dàng chuyển đổi thành các quan sát có thể theo dõi được, bao gồm Phát hiện tư thế cơ thể, Phát hiện tư thế cơ thể động vật và thậm chí Nhận dạng mã vạch.

00:13:00.000 --> 00:13:08.000
Và hệ tọa độ cho Vision giống nhau cho DockKit, vì vậy bạn có thể chuyển chúng trực tiếp mà không cần bất kỳ chuyển đổi nào.

00:13:08.000 --> 00:13:12.000
Bạn chỉ cần cho DockKit biết hướng thiết bị là gì.

00:13:12.000 --> 00:13:17.000
Bây giờ, hãy cùng thực hiện các quan sát tùy chỉnh trong mã.

00:13:17.000 --> 00:13:25.000
Trong trường hợp này, tôi muốn thay thế theo dõi khuôn mặt và cơ thể mặc định bằng theo dõi bằng cách sử dụng yêu cầu Phát hiện tư thế bằng tay.

00:13:25.000 --> 00:13:37.000
Bắt đầu bằng cách tạo yêu cầu Vision và trình xử lý yêu cầu-- cho trường hợp sử dụng này, tôi đang sử dụng VNDetectHumanHandPoseRequest-- sau đó, thực hiện yêu cầu.

00:13:37.000 --> 00:13:41.000
Bạn có thể xây dựng một Quan sát dựa trên các điểm được công nhận.

00:13:41.000 --> 00:13:52.000
Để đơn giản, tôi đang tập trung vào điểm của đầu ngón tay cái, nhưng tôi có thể sử dụng bất kỳ khớp ngón tay nào khác hoặc toàn bộ bàn tay để xây dựng quan sát.

00:13:52.000 --> 00:13:57.000
Và cuối cùng, bạn chuyển các quan sát đến DockKit để theo dõi.

00:13:57.000 --> 00:14:14.000
Với điều đó, hãy xem nó hoạt động!

00:14:14.000 --> 00:14:19.000
Tôi sẽ khởi chạy ứng dụng máy ảnh tùy chỉnh của mình và bắt đầu theo dõi.

00:14:19.000 --> 00:14:24.000
Khi tôi di chuyển bàn tay của mình, di chuyển sang trái, lưu ý chân đế xoay sang trái để theo sau.

00:14:24.000 --> 00:14:29.000
Và sau đó, khi tôi di chuyển tay sang phải, giá đỡ đi theo hướng ngược lại.

00:14:29.000 --> 00:14:36.000
Nếu tôi quét tay lên, giá đỡ sẽ nghiêng để giữ tay tôi trong khung và theo sau một lần nữa khi tôi quét tay xuống.

00:14:36.000 --> 00:14:41.000
Hoàn hảo.

00:14:41.000 --> 00:14:49.000
Với khả năng điều khiển động cơ trực tiếp thông qua DockKit APIs, bạn có thể đưa thiết bị vào cuộc sống thông qua hoạt ảnh!

00:14:49.000 --> 00:14:55.000
Chuyển động của bến tàu có thể được sử dụng như một khả năng để xác nhận hoặc như một cách để truyền tải cảm xúc.

00:14:55.000 --> 00:15:08.000
Bạn có thể tạo các hình ảnh động tùy chỉnh của riêng mình thông qua điều khiển động cơ trực tiếp để mô phỏng tương tác vật lý với điện thoại, như đẩy hoặc kéo, hoặc bạn có thể tận dụng một trong các hình ảnh động tích hợp sẵn.

00:15:08.000 --> 00:15:15.000
Các hình ảnh động tích hợp sẵn là Có, Không, Wakeup và Kapow.

00:15:15.000 --> 00:15:20.000
Bạn có thể thấy hoạt ảnh Wakeup đang hoạt động mỗi khi thiết bị khởi động xảy ra.

00:15:20.000 --> 00:15:30.000
Quay trở lại ứng dụng theo dõi tay tùy chỉnh mà tôi vừa trình diễn, bạn có thể kích hoạt hình ảnh động tích hợp bất cứ khi nào một cử chỉ tay cụ thể xảy ra.

00:15:30.000 --> 00:15:36.000
Để làm điều này, trước tiên bạn cần đào tạo một mô hình Phân loại Hành động Tay tùy chỉnh.

00:15:36.000 --> 00:15:39.000
Điều này được thực hiện dễ dàng bằng cách sử dụng ứng dụng Create ML.

00:15:39.000 --> 00:15:48.000
Để biết thêm thông tin về việc tạo ra một trong những mô hình này, hãy nhớ xem video "Phân loại tư thế và hành động tay" từ năm 2021.

00:15:48.000 --> 00:15:53.000
Bất cứ khi nào mô hình tùy chỉnh dự đoán rằng cử chỉ tay đã xảy ra, bạn có thể kích hoạt hình ảnh động.

00:15:53.000 --> 00:16:01.000
Bắt đầu bằng cách tắt theo dõi hệ thống đầu tiên, sau đó bắt đầu hoạt ảnh - trong trường hợp này là Kapow.

00:16:01.000 --> 00:16:08.000
Hình ảnh động sẽ bắt đầu từ vị trí hiện tại của giá đỡ và sẽ thực hiện không đồng bộ.

00:16:08.000 --> 00:16:13.000
Khi hoạt ảnh được thực thi, bạn sẽ muốn bật lại tính năng theo dõi hệ thống.

00:16:13.000 --> 00:16:20.000
Bây giờ, quay lại bản demo để xem nó hoạt động.

00:16:20.000 --> 00:16:24.000
Ứng dụng sẽ tiếp tục theo dõi bàn tay của tôi khi tôi lùi lại một chút.

00:16:24.000 --> 00:16:29.000
Nếu tôi làm một cử chỉ rằng tôi đang đẩy máy ảnh, kapow!

00:16:29.000 --> 00:16:33.000
Máy ảnh xoay qua lại theo chuyển động con lắc.

00:16:33.000 --> 00:16:36.000
Hãy làm điều đó một lần nữa vì điều đó rất vui.

00:16:36.000 --> 00:16:39.000
Và kapow!

00:16:39.000 --> 00:16:44.000
Bạn có thể sử dụng những hình ảnh động như thế này để kết thúc một trải nghiệm, hoặc thể hiện điều gì đó, bất cứ điều gì.

00:16:44.000 --> 00:16:51.000
Tôi khuyến khích bạn thử nghiệm điều này, và bằng mọi cách, hãy cân nhắc việc tạo hình ảnh động của riêng bạn bằng cách sử dụng điều khiển động cơ tùy chỉnh.

00:16:51.000 --> 00:16:59.000
Với DockKit, khả năng theo dõi các đối tượng bằng cách sử dụng giá đỡ có động cơ được giới thiệu, cung cấp cho các ứng dụng trường nhìn 360 độ.

00:16:59.000 --> 00:17:04.000
Các đối tượng có thể được theo dõi ở cấp độ hệ thống hoặc bằng các ứng dụng sử dụng suy luận tùy chỉnh.

00:17:04.000 --> 00:17:11.000
Và bạn có thể sử dụng chuyển động cơ học trong các ứng dụng của mình như một khả năng để truyền đạt cảm xúc hoặc tiện ích.

00:17:11.000 --> 00:17:20.000
Để tìm hiểu thêm về các cách bạn có thể sử dụng khung Vision để theo dõi tùy chỉnh trong DockKit, hãy nhớ xem video phát hiện tư thế động vật.

00:17:20.000 --> 23:59:59.000
Tôi nóng lòng chờ bạn có được những phụ kiện tuyệt vời này và để xem những trải nghiệm bạn sẽ mang đến cho ứng dụng của mình khi sử dụng chúng.

