WEBVTT

00:00:00.000 --> 00:00:03.000
♪ 부드러운 기악 힙합 ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:15.000
안녕하세요, 제 이름은 Shuai Song이고, 저는 AR Quick Look 팀의 엔지니어입니다.

00:00:15.000 --> 00:00:21.000
오늘, 퀵 룩 공간 경험을 위한 3D 모델을 만드는 방법을 안내해 드리겠습니다.

00:00:21.000 --> 00:00:32.000
그것에 들어가기 전에, 먼저 퀵 룩이 무엇이며 새로운 플랫폼에서 3D 콘텐츠를 제시하는 데 어떻게 사용할 수 있는지 살펴봅시다.

00:00:32.000 --> 00:00:44.000
또 다른 세션인 "공간 컴퓨팅을 위한 빠른 찾기"에서, 우리는 새로운 룸 플랜 API를 사용하여 만든 방의 사랑스러운 3D 모델을 보여주었습니다.

00:00:44.000 --> 00:00:56.000
우리는 응용 프로그램 창에서 USDZ 파일을 드래그하여 이 모델을 퀵 룩으로 가져왔고, 이는 우리가 떨어뜨린 바로 퀵 룩 미리보기를 엽니다.

00:00:56.000 --> 00:01:03.000
여기에서 친숙한 제스처를 사용하여 퀵 룩과 내 콘텐츠와 상호 작용할 수 있습니다.

00:01:03.000 --> 00:01:14.000
이 모델 뒤에 숨겨진 이야기를 더 깊이 파고들기 전에, 시스템이 퀵 룩에서 3D 콘텐츠를 어떻게 제공하는지에 대해 조금 더 이야기해 봅시다.

00:01:14.000 --> 00:01:20.000
이 플랫폼에서, 퀵 룩은 볼륨 창에 3D 모델을 표시합니다.

00:01:20.000 --> 00:01:26.000
볼륨 창은 다른 앱과 함께 공유할 수 있도록 경계를 정의했습니다.

00:01:26.000 --> 00:01:32.000
사람들은 공간에서 볼륨을 재배치할 수 있으며 다른 각도에서 볼 수 있다.

00:01:32.000 --> 00:01:38.000
3D 모델은 항상 볼륨의 중심에 배치됩니다.

00:01:38.000 --> 00:01:47.000
모델이 처음 나타나면, 퀵 룩은 콘텐츠가 당신을 직접 향하도록 볼륨 창의 방향을 정할 것입니다.

00:01:47.000 --> 00:01:55.000
여기에서 3D 모델 아래의 볼륨 창 막대를 사용하여 공간에서 콘텐츠를 자유롭게 재배치할 수 있습니다.

00:01:55.000 --> 00:02:06.000
퀵 룩은 사람들이 미리보기 세션에 있을 때 모델의 크기를 조정하는 방법에 따라 볼륨 크기를 자동으로 조정합니다.

00:02:06.000 --> 00:02:18.000
콘텐츠가 애니메이션을 사용하는 경우, 모든 애니메이션을 퀵 룩 볼륨의 정의된 범위 내에 유지하는 것이 좋습니다.

00:02:18.000 --> 00:02:23.000
우리는 방금 퀵 룩이 당신의 3D 콘텐츠를 어떻게 제시하는지에 대한 기본 사항을 다루었습니다.

00:02:23.000 --> 00:02:30.000
퀵 룩이 모델 크기와 규모를 어떻게 사용하는지에 관해서는 추가적인 고려 사항이 있습니다.

00:02:30.000 --> 00:02:32.000
한 번 보자.

00:02:32.000 --> 00:02:45.000
3D 모델을 로드할 때, 퀵 룩은 USDZ의 메타데이터에 정의된 metersPerUnit를 존중하여 실제 세계에 대한 스케일 단위를 결정합니다.

00:02:45.000 --> 00:02:59.000
사람들이 자산의 규모를 시각화할 수 있도록, 퀵 룩은 특정 크기 범위 내에 작성된 경우 처음에 100% 규모로 모델을 제시하려고 노력할 것이다.

00:02:59.000 --> 00:03:02.000
예를 들어 보자.

00:03:02.000 --> 00:03:13.000
퀵 룩은 이 주석 자동차와 같은 작은 규모로도 모든 콘텐츠를 즐길 수 있도록 최소 규모를 부과합니다.

00:03:13.000 --> 00:03:25.000
퀵 룩은 또한 다른 앱과 함께 너무 많은 공간을 차지하지 않도록 매우 큰 물체를 볼 경우 상한선을 사용하고 있습니다.

00:03:25.000 --> 00:03:36.000
이 찻주전자와 같이 그 사이에 크기가 있는 물체의 경우, 퀵 룩은 우주에서 처음 발사되었을 때 모델의 실제 크기를 사용합니다.

00:03:36.000 --> 00:03:45.000
볼륨 창 아래의 버튼을 탭하여 항상 실제 크기로 모델을 볼 수 있다는 것을 기억하세요.

00:03:45.000 --> 00:03:56.000
이제 퀵 룩이 모델의 크기를 어떻게 처리하는지 알았으니, 퀵 룩이 콘텐츠를 제시할 때 추가하는 두 가지를 더 살펴봅시다: 지상면과 그림자.

00:03:56.000 --> 00:04:10.000
퀵 룩은 모델의 크기와 지면에 대한 위치를 더 잘 이해할 수 있도록 모델 아래에 지상면과 그림자를 자동으로 표시합니다.

00:04:10.000 --> 00:04:19.000
퀵 룩이 당신을 위해 이 일을 하고 있기 때문에, 모델에 자신의 지상면과 그림자를 추가하지 않는 것이 좋습니다.

00:04:19.000 --> 00:04:24.000
지금까지, 우리는 퀵 룩이 당신의 3D 콘텐츠를 어떻게 보여줄지에 대한 기본 사항을 다루었습니다.

00:04:24.000 --> 00:04:28.000
이 세션의 나머지 부분에 대한 안건을 안내해 드리겠습니다.

00:04:28.000 --> 00:04:33.000
먼저, 우리는 3D 모델을 만드는 몇 가지 방법을 살펴볼 것이다.

00:04:33.000 --> 00:04:41.000
다음으로, 우리는 당신이 콘텐츠의 시각적 품질을 검사하고 필요에 따라 조정할 수 있는 방법에 대해 이야기할 것입니다.

00:04:41.000 --> 00:04:48.000
마지막으로, 우리는 당신의 3D 콘텐츠가 훌륭한 성능으로 렌더링되고 실행될 수 있도록 하는 방법을 다룰 것입니다.

00:04:48.000 --> 00:04:51.000
3D 콘텐츠 준비를 시작합시다.

00:04:51.000 --> 00:04:58.000
퀵 룩은 USDZ를 3D 모델을 처리하는 기본 형식으로 받아들인다.

00:04:58.000 --> 00:05:07.000
USDZ는 Apple 플랫폼을 위한 3D 콘텐츠의 핵심이며 가볍고 그늘에 최적화되도록 설계되었습니다.

00:05:07.000 --> 00:05:12.000
USDZ 파일을 어떻게 만들 수 있는지 살펴봅시다.

00:05:12.000 --> 00:05:16.000
USDZ 파일을 만드는 방법에는 여러 가지가 있다.

00:05:16.000 --> 00:05:26.000
먼저, 이전에 iOS용 USDZ 파일을 만든 적이 있다면, 이 새로운 플랫폼에서 Quick Look에 동일한 파일을 사용할 수 있습니다.

00:05:26.000 --> 00:05:38.000
처음부터 새 USDZ 파일을 만들고 싶다면, 전문 디지털 콘텐츠 제작 도구를 사용하여 3D 콘텐츠를 만든 다음 USDZ 파일로 내보낼 수 있습니다.

00:05:38.000 --> 00:05:49.000
RealityKit Object Capture API를 사용하여 3D 모델을 스캔하고 실제 개체의 USDZ 파일을 만들 수도 있습니다.

00:05:49.000 --> 00:06:00.000
오브젝트 캡처는 다양한 세부 수준에서 3D 모델을 만드는 데 도움이 되는 샘플 앱과 함께 엔드 투 엔드 사진 측량 솔루션을 제공합니다.

00:06:00.000 --> 00:06:05.000
개체 캡처는 iOS와 macOS 장치 모두에서 지원됩니다.

00:06:05.000 --> 00:06:16.000
마지막으로, 집에 2D 또는 3D 평면도를 만들 수 있는 방법을 찾고 있다면, RoomPlan API로 처리해 드립니다.

00:06:16.000 --> 00:06:23.000
내가 아까 보여줬던 3D 룸 모델에 대한 뒷이야기가 있다고 내가 어떻게 말했는지 기억해?

00:06:23.000 --> 00:06:31.000
우리의 3D 디자이너 제리가 이 3D 모델을 만드는 데 사용한 워크플로우에 대해 자세히 알아봅시다.

00:06:31.000 --> 00:06:37.000
먼저, Jerry는 RoomPlan 샘플 애플리케이션을 사용하여 그의 방을 스캔하기 시작한다.

00:06:37.000 --> 00:06:48.000
짧은 시간 후에, 그는 방의 3D 레이아웃을 미리 보거나 USDZ 파일을 Mac으로 바로 내보내서 놓을 수 있다.

00:06:48.000 --> 00:06:56.000
다음으로, 제리는 그의 디자인 개념을 실현하기 위해 3D 모델을 3D 콘텐츠 제작 도구로 가져온다.

00:06:56.000 --> 00:06:59.000
여기 그 일의 결과가 있습니다.

00:06:59.000 --> 00:07:01.000
이 모델은 멋져 보여.

00:07:01.000 --> 00:07:08.000
벽, 바닥 및 기타 방 요소에 재료와 질감이 추가된 것을 볼 수 있습니다.

00:07:08.000 --> 00:07:14.000
이제, 제리가 만든 방 모델은 퀵 룩에서 거의 미리 볼 준비가 되었다.

00:07:14.000 --> 00:07:21.000
운 좋게도, 다음 단계를 정말 쉽게 만드는 Reality Composer Pro라는 새로운 도구가 있습니다.

00:07:21.000 --> 00:07:34.000
퀵 룩을 위해 3D 모델을 미리 보는 것은 모델의 실제 품질을 검사하고 필요에 따라 조정하기 위한 콘텐츠 제작 워크플로우에서 정말 중요한 단계입니다.

00:07:34.000 --> 00:07:37.000
좀 더 자세히 살펴보자.

00:07:37.000 --> 00:07:42.000
여기 메인 뷰에 3D 모델이 로드된 Reality Composer Pro가 있습니다.

00:07:42.000 --> 00:07:54.000
Reality Composer Pro의 오른쪽 상단 모서리에 있는 이 버튼을 클릭하기만 하면 장치의 Quick Look에서 3D 모델을 쉽게 미리 볼 수 있습니다.

00:07:54.000 --> 00:07:59.000
그리고 여기 퀵 룩에서 실행되는 동일한 3D 모델이 있습니다.

00:07:59.000 --> 00:08:04.000
우리가 지금 알아차릴 수 있는 한 가지는 초기 모델 방향이 제대로 보이지 않는다는 것이다.

00:08:04.000 --> 00:08:16.000
이전에 논의한 바와 같이, 3D 모델의 가장 흥미로운 부분이 매력적인 경험을 만들기 위해 당신을 향해 제시되도록 하는 것이 중요합니다.

00:08:16.000 --> 00:08:19.000
우리가 이걸 어떻게 고칠 수 있는지 보자.

00:08:19.000 --> 00:08:22.000
퀵 룩은 오른쪽 좌표계를 사용하고 있다.

00:08:22.000 --> 00:08:33.000
이것을 알면, 우리는 콘텐츠 제작 도구 또는 Reality Composer Pro에서 3D 모델의 방향을 쉽게 수정할 수 있습니다.

00:08:33.000 --> 00:08:42.000
우리의 경우, 우리는 모델의 거실을 볼 수 있도록 수직 축에서 모델을 회전해야 합니다.

00:08:42.000 --> 00:08:49.000
이렇게 y축 주위에 90도를 두면 이것을 고칠 수 있습니다.

00:08:49.000 --> 00:08:57.000
Reality Composer Pro의 장치 미리보기를 다시 사용하여 모델의 변경 사항을 확인해 봅시다.

00:08:57.000 --> 00:09:03.000
이제 방향이 고정되었고, 우리는 이 멋진 모델에 대해 훨씬 더 잘 볼 수 있다.

00:09:03.000 --> 00:09:12.000
좋아, 이 자산을 더 탐구하고, 다른 관점을 얻고 여기서 몇 가지 세부 사항을 더 보자.

00:09:12.000 --> 00:09:20.000
그렇게 하려면, 핀치와 드래그 제스처를 사용하여 3D 모델을 회전하고 다른 측면에서 볼 수 있습니다.

00:09:20.000 --> 00:09:25.000
이것은 나에게 우리 방의 다른 부분에 대한 정말 좋은 전망을 준다.

00:09:25.000 --> 00:09:31.000
또한 양손 핀치 제스처를 사용하여 모델의 크기를 조정하고 자세한 내용을 볼 수 있습니다.

00:09:31.000 --> 00:09:44.000
이제 장치의 퀵 룩에서 3D 모델을 검사하는 방법을 보았으므로, 콘텐츠의 시각적 품질을 향상시키기 위한 몇 가지 고려 사항에 대해 이야기해 봅시다.

00:09:44.000 --> 00:09:52.000
여러 물체가 같은 위치에 렌더링될 때, 그것들은 겹치고 하나의 깜박이는 물체로 나타날 수 있다.

00:09:52.000 --> 00:10:06.000
이 문제를 줄이기 위해, 3D 생성 도구를 사용하여 중첩을 제거하거나 깜박이는 물체 사이의 거리를 늘려 메쉬 형상을 최적화할 수 있습니다.

00:10:06.000 --> 00:10:22.000
고주파 일반 지도를 사용하지 마세요. 특히 당신이 움직이거나 3D 모델에 가까운 상황에서 원치 않는 시각적 아티팩트를 만들 수 있는 앨리어싱 문제가 발생하기 때문입니다.

00:10:22.000 --> 00:10:35.000
잎과 같은 작거나 얇은 물체를 렌더링할 때, 시스템은 변하기 쉬운 래스터화 속도 하에서 시간이 지남에 따라 일관되게 샘플링되지 않을 수 있으며, 이는 주변부에서 깜박이는 원인이 될 수 있다.

00:10:35.000 --> 00:10:47.000
이 문제를 최소화하기 위해, 미세한 지오메트리 세부 사항을 불투명도 텍스처에 저장한 다음 대신 더 큰 삼각형 격자가 있는 지오메트리를 사용하여 렌더링할 수 있습니다.

00:10:47.000 --> 00:10:56.000
가변 래스터화 속도에 대해 자세히 알아보려면 "공간 컴퓨팅을 위한 렌더링 탐색" 세션을 확인하세요.

00:10:56.000 --> 00:10:59.000
다음으로, 공연에 관심을 돌봅시다.

00:10:59.000 --> 00:11:09.000
여기서, 우리는 퀵룩 3D 콘텐츠의 해부학과 매끄럽고 원활한 퀵룩 공간 경험을 보장하기 위해 할 수 있는 일을 살펴볼 것입니다.

00:11:09.000 --> 00:11:11.000
시작하자.

00:11:11.000 --> 00:11:18.000
퀵 룩에서 렌더링되는 콘텐츠의 3D 성능을 결정하는 많은 요인이 있습니다.

00:11:18.000 --> 00:11:31.000
3D 모델의 파일 크기, 텍스처의 수와 해상도, 심지어 모델에 사용하는 재료의 복잡성과 같은 것들.

00:11:31.000 --> 00:11:43.000
성능을 위해 3D 모델 최적화를 어디서부터 시작해야 할지 알기 위해서는, 먼저 자산에 존재할 수 있는 잠재적인 한계를 식별해야 합니다.

00:11:43.000 --> 00:11:52.000
이 작업을 단순화하기 위해, 우리는 올해 당신의 작업 흐름을 크게 개선할 수 있는 몇 가지 유용한 새로운 도구를 도입했습니다.

00:11:52.000 --> 00:11:55.000
한 번 보자.

00:11:55.000 --> 00:12:01.000
여기, 우리는 당신에게 통계 패널을 보여주기 위해 Reality Composer Pro로 돌아왔습니다.

00:12:01.000 --> 00:12:15.000
이 패널은 삼각형의 수와 콘텐츠와 함께 사용되는 텍스처 메모리의 양과 같은 3D 모델 특성에 대한 많은 유용한 정보를 제공합니다.

00:12:15.000 --> 00:12:20.000
당신이 사용할 수 있는 또 다른 훌륭한 도구는 RealityKit Trace입니다.

00:12:20.000 --> 00:12:25.000
이 도구는 훨씬 더 진보된 런타임 프로파일링을 가능하게 한다.

00:12:25.000 --> 00:12:30.000
RealityKit Trace는 특정 렌더링 파이프라인에 대한 통찰력을 제공합니다.

00:12:30.000 --> 00:12:37.000
3D 콘텐츠로 개별 렌더링 프레임에 더 많은 정보를 얻을 수 있습니다.

00:12:37.000 --> 00:12:52.000
여러 캡처된 프레임을 분석하여 RealityKit Trace를 사용하여 잠재적인 성능 문제 또는 제한을 식별하고 진단하고 권장 사항을 제공할 수 있습니다.

00:12:52.000 --> 00:12:56.000
RealityKit Trace는 Xcode로 계속 구축됩니다.

00:12:56.000 --> 00:13:04.000
퀵 룩에서 콘텐츠를 프로파일링하는 데 사용하려면, 퀵 룩 프로세스에 첨부해야 합니다.

00:13:04.000 --> 00:13:12.000
Reality Composer Pro와 RealityKit Trace에 대한 자세한 내용은 아래 세션을 확인하세요.

00:13:12.000 --> 00:13:26.000
이제 잠재적인 성능 제한에 대한 프로파일링을 수행하는 데 도움이 되는 몇 가지 도구를 살펴보았으므로, 성능을 위해 3D 콘텐츠를 최적화하는 데 도움이 되는 몇 가지 모범 사례를 살펴보겠습니다.

00:13:26.000 --> 00:13:33.000
앞서, 나는 퀵 룩의 3D 콘텐츠의 성능을 결정하는 다양한 요인들을 언급했다.

00:13:33.000 --> 00:13:42.000
이제, 그에 따라 콘텐츠를 최적화하기 위해 할 수 있는 일의 관점에서 그것들을 하나씩 살펴봅시다.

00:13:42.000 --> 00:13:46.000
먼저 파일 크기에 맞게 모델을 최적화하는 것입니다.

00:13:46.000 --> 00:13:58.000
사용자가 콘텐츠와 상호 작용하기 전에 오랜 시간을 기다리는 것을 원하지 않기 때문에 파일 크기가 작을수록 다운로드가 빨라지고 로딩 시간이 빨라집니다.

00:13:58.000 --> 00:14:05.000
여기서 비결은 자산 품질과 파일 크기 사이의 최적화된 균형을 찾는 것이다.

00:14:05.000 --> 00:14:12.000
예를 들어, 덜 상세한 질감이나 저품질 오디오 소스를 사용할 수 있습니다.

00:14:12.000 --> 00:14:18.000
때때로, 자산은 여러 반복 주기에 걸쳐 개발된다.

00:14:18.000 --> 00:14:26.000
종종, 여기에는 자산과 연결된 기본 오디오, 애니메이션 및 텍스처의 변경 사항이 포함됩니다.

00:14:26.000 --> 00:14:35.000
파일 크기를 최소한으로 유지하려면, 배포되는 최종 패키지에 실제로 사용되는 것만 포함해야 합니다.

00:14:35.000 --> 00:14:46.000
예를 들어, 더 이상 장면에 사용되지 않는 이전 버전의 오디오 파일은 배포하기 전에 최종 자산에서 제거되어야 합니다.

00:14:46.000 --> 00:14:55.000
마지막으로, 더 나은 공유 경험을 보장하기 위해, 파일 크기를 25메가바이트 미만으로 유지하는 것이 좋습니다.

00:14:55.000 --> 00:15:01.000
다음으로, 성능을 위해 3D 콘텐츠 형상을 최적화하는 방법을 살펴봅시다.

00:15:01.000 --> 00:15:10.000
다시 말하지만, 비결은 훌륭한 수준의 세부 사항을 보여주는 것과 훌륭한 성과를 달성하는 것 사이의 올바른 균형을 찾는 것이다.

00:15:10.000 --> 00:15:25.000
모델이 다른 지오메트리로 숨겨져 있거나 완전히 덮인 부품을 사용하는 경우, 화면에 표시되지 않는 경우, 성능 예산을 절약하기 위해 제거해도 괜찮습니다.

00:15:25.000 --> 00:15:33.000
또한, 시스템 부하를 줄이기 위해 작은 메쉬를 하나의 더 큰 메쉬로 병합하는 것을 고려해 보세요.

00:15:33.000 --> 00:15:42.000
단일 모델의 경우, 200개의 메쉬 부품과 100k 미만의 정점 이하로 유지하는 것이 좋습니다.

00:15:42.000 --> 00:15:48.000
메쉬 디테일과 장면의 다른 자산의 균형을 맞추는 것을 항상 명심하세요.

00:15:48.000 --> 00:15:51.000
다음으로, 질감을 살펴봅시다.

00:15:51.000 --> 00:15:55.000
텍스처는 많은 메모리 사용에 기여할 수 있다.

00:15:55.000 --> 00:16:06.000
자동화된 텍스처는 메모리를 덜 소비하여 더 많은 자산을 동시에 로드할 수 있으며 복잡한 장면이 원활하게 실행되도록 도와줍니다.

00:16:06.000 --> 00:16:12.000
텍스처 예산을 절약하는 한 가지 방법은 비색 입력에 그레이스케일을 사용하는 것입니다.

00:16:12.000 --> 00:16:25.000
어떤 경우에는 그레이스케일 이미지를 색상 텍스처를 통해 개별 채널로 포장하여 여러 그레이스케일 지도를 단일 텍스처에 저장할 수 있습니다.

00:16:25.000 --> 00:16:33.000
가능하다면, 질감에서 로드하는 대신 재료에 일정한 값을 사용하세요.

00:16:33.000 --> 00:16:46.000
모델이 단일 PBR 재료만 사용하는 경우, 2K x 2K의 최대 텍스처 크기와 채널 텍스처당 16비트 대신 8비트를 사용하는 것이 좋습니다.

00:16:46.000 --> 00:16:56.000
마지막으로, 3D 모델에 가장 많은 가치와 리얼리즘을 더하는 영역에 항상 텍스처 예산을 지출하세요.

00:16:56.000 --> 00:16:59.000
다음은 재료입니다.

00:16:59.000 --> 00:17:03.000
재료는 3D 모델의 표면 특성을 정의한다.

00:17:03.000 --> 00:17:13.000
그들은 색상과 물체가 반짝이는 또는 반사적인 모습으로 나타나는지 여부를 포함하여 시스템이 모델을 렌더링하는 방법을 지정합니다.

00:17:13.000 --> 00:17:25.000
3D 모델에 대한 재료를 최적화할 때, 메쉬 부품을 결합하여 동일한 재료와 공유하여 로딩 시간을 줄일 수 있습니다.

00:17:25.000 --> 00:17:35.000
이것이 도움이 되는 이유는 3D 모델에 사용자 지정 재료가 있을 때 시스템이 처음 로드될 때 컴파일해야 하기 때문입니다.

00:17:35.000 --> 00:17:40.000
화면 크기와 재료의 복잡성의 균형을 맞추세요.

00:17:40.000 --> 00:17:53.000
예를 들어, 화면의 작은 부분이 투명하거나 투명해야 한다면, 그 작은 영역에만 별도의 재료를 사용하는 것이 더 효율적입니다.

00:17:53.000 --> 00:17:58.000
당신은 항상 겹치는 투명성을 염두에 두어야 합니다.

00:17:58.000 --> 00:18:10.000
실시간으로 투명한 물체를 렌더링하는 것은 일반적으로 불투명한 물체에 비해 더 많은 계산이 필요하므로, 정말로 필요할 때만 겹치는 투명성을 가지고 있습니다.

00:18:10.000 --> 00:18:24.000
또한, 구운 조명이 있거나 메쉬의 일부 부분이 조명이 필요하지 않은 경우, 실시간 조명 계산을 절약하기 위해 MaterialX Unlit 표면을 사용하는 것이 좋습니다.

00:18:24.000 --> 00:18:26.000
다음으로, 물리학을 살펴봅시다.

00:18:26.000 --> 00:18:42.000
물리학 시뮬레이션은 때때로 계산 비용이 많이 들 수 있으며, 특히 물리학 시스템이 충돌 감지를 수행하고 중력과 스프링과 같은 현실적인 효과를 시뮬레이션하는 경우 더욱 그렇습니다.

00:18:42.000 --> 00:18:52.000
물리학을 사용하여 콘텐츠 성능을 극대화하려면, 사용되는 총 충돌기 수를 줄이려고 시도할 수 있습니다.

00:18:52.000 --> 00:19:07.000
때때로 당신은 당신의 콘텐츠가 물리학 시뮬레이션에 참여하기를 원하지만, 당신의 콘텐츠에는 다른 물체에 의해 움직이거나 영향을 받지 않아야 하는 엔티티가 포함됩니다. 예를 들어, 가상 공을 튕기게 하는 벽.

00:19:07.000 --> 00:19:15.000
이 경우, 물리 계산을 줄이기 위해 정적 충돌기를 사용하는 것이 좋습니다.

00:19:15.000 --> 00:19:17.000
다음으로, 애니메이션에 대해 이야기해 봅시다.

00:19:17.000 --> 00:19:24.000
3D 모델에 애니메이션을 추가하는 것은 콘텐츠에 생명을 불어넣을 수 있는 좋은 방법입니다.

00:19:24.000 --> 00:19:28.000
가끔, 당신이 필요한 것은 유휴 애니메이션뿐입니다.

00:19:28.000 --> 00:19:37.000
이 경우, 효율적이고 사실적인 애니메이션을 만드는 데 도움이 되도록 애니메이션의 정점당 가중치를 제한하십시오.

00:19:37.000 --> 00:19:49.000
변형이나 스킨 애니메이션의 기하학을 최적화하려고 할 때, 이전에 제공한 것과 동일한 기하학 지침을 따르는 것을 잊지 마세요.

00:19:49.000 --> 00:19:52.000
다음은 당신의 콘텐츠와 함께 파티클 시스템을 사용하는 것입니다.

00:19:52.000 --> 00:20:03.000
이것은 연기가 있는 현실적인 화재나 로켓의 배기 가스와 같은 정교한 시각 효과를 구축하기 위한 가장 강력한 도구 중 하나이다.

00:20:03.000 --> 00:20:10.000
잘못 사용하면, 입자는 퀵 룩 3D 경험에서 병목 현상이 될 수 있습니다.

00:20:10.000 --> 00:20:21.000
이러한 이유로, 입자 방출기의 사용을 제한하고 화면의 입자 수를 최소한으로 유지하는 것이 좋습니다.

00:20:21.000 --> 00:20:26.000
종종, 당신은 더 적은 입자로 비슷한 시각 효과를 만들 수 있습니다.

00:20:26.000 --> 00:20:38.000
비슷한 효과를 얻기 위해 더 단순하거나 작은 모양과 스타일을 실험하면 시스템에서 오버드로를 줄이는 데 도움이 될 것입니다.

00:20:38.000 --> 00:20:41.000
그것은 우리가 방금 겪은 꽤 많은 일들이었다.

00:20:41.000 --> 00:20:45.000
당신을 위해 그 권장 사항을 요약해 봅시다.

00:20:45.000 --> 00:20:51.000
퀵룩 3D 콘텐츠의 성능에 중요한 많은 요소가 있습니다.

00:20:51.000 --> 00:21:01.000
이 새로운 플랫폼은 사람들이 서로 함께 실행되는 여러 앱과 콘텐츠에 참여할 수 있도록 설계되었습니다.

00:21:01.000 --> 00:21:11.000
이것은 콘텐츠의 성능이 사람들이 하는 다른 앱이나 장면의 영향을 받을 수도 있다는 것을 의미합니다.

00:21:11.000 --> 00:21:17.000
이러한 이유로, 다양한 시나리오에서 3D 모델을 테스트하는 것이 좋습니다.

00:21:17.000 --> 00:21:31.000
이 세션에서 공유했듯이, 콘텐츠의 시각적 품질을 확인하거나 3D 성능에 영향을 미칠 수 있는 제한을 찾고 싶으시다면, 사용할 수 있는 많은 도구가 있습니다.

00:21:31.000 --> 00:21:42.000
여기서 좋은 점은 더 나은 비주얼을 갖는 것과 동시에 부드러운 퀵 룩 시청 경험을 보장하는 것 사이의 적절한 균형을 찾는 것입니다.

00:21:42.000 --> 00:21:55.000
퀵 룩과 앱과 웹사이트에서 3D 콘텐츠를 볼 수 있도록 하는 방법에 대해 자세히 알아보려면, "공간 컴퓨팅을 위한 퀵 룩 발견"이라는 다른 강연을 확인하세요.

00:21:55.000 --> 00:21:57.000
봐줘서 고마워!

00:21:57.000 --> 23:59:59.000
♪

