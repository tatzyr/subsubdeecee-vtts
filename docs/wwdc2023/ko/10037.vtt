WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
리처드: 안녕하세요, 저는 리처드입니다.

00:00:11.000 --> 00:00:19.000
오늘, 저는 스위프트 차트의 몇 가지 흥미로운 새로운 기능에 대해 이야기하게 되어 기쁩니다: 파이 차트, 선택 및 스크롤.

00:00:19.000 --> 00:00:21.000
파이 차트부터 시작합시다.

00:00:21.000 --> 00:00:29.000
스위프트 차트는 모든 종류의 데이터 시각화를 만들 수 있도록 구성 가능하고 사용자 정의 가능한 빌딩 블록을 제공합니다.

00:00:29.000 --> 00:00:33.000
오늘날, 스위프트 차트 제품군의 새로운 것은 맛있고 아름다운 파이 차트이다.

00:00:33.000 --> 00:00:39.000
파이 차트는 단순하고 친숙한 모양을 통해 총 가치가 다양한 범주로 어떻게 구성되는지 보여준다.

00:00:39.000 --> 00:00:46.000
예를 들어, 여기 내 친구들의 푸드 트럭의 팬케이크 판매 데이터를 시각화하는 차트가 있습니다.

00:00:46.000 --> 00:00:53.000
원형 차트에는 축이 없으며, 정밀도가 중요하지 않은 캐주얼 설정에 적합합니다.

00:00:53.000 --> 00:01:01.000
웨지가 어떻게 완전한 원을 구성하는지에 대한 광범위한 이해로, 그들은 부분 대 전체 관계를 시각화하는 데 직관적이다.

00:01:01.000 --> 00:01:06.000
사람들이 파이 차트를 좋아하는 한 가지 중요한 이유는 둥글고 접근하기 쉬운 모양 때문이다.

00:01:06.000 --> 00:01:13.000
이미 익숙한 마크 기반 구성 구문을 사용하여 원형 차트를 만들 수 있습니다.

00:01:13.000 --> 00:01:17.000
새로운 마크 유형인 SectorMark를 소개합니다.

00:01:17.000 --> 00:01:20.000
섹터마크는 파이의 조각을 나타낸다.

00:01:20.000 --> 00:01:23.000
그것은 극지방에 위치해 있다.

00:01:23.000 --> 00:01:27.000
이 극지방이 아니라 극지방 좌표계.

00:01:27.000 --> 00:01:32.000
섹터의 크기는 그것이 나타내는 가치에 비례한다.

00:01:32.000 --> 00:01:35.000
반경을 따라, 당신은 섹터의 모양을 사용자 정의할 수 있습니다.

00:01:35.000 --> 00:01:41.000
내부 반경을 늘리면, 원형 차트는 도넛 차트가 된다.

00:01:41.000 --> 00:01:45.000
SectorMark를 사용하면 모든 종류의 파이 차트와 도넛 차트를 쉽게 만들 수 있습니다.

00:01:45.000 --> 00:01:48.000
한 가지 예를 보여드릴게요.

00:01:48.000 --> 00:01:58.000
우리 친구들의 국제 팬케이크 푸드 트럭 사업은 작년에 6가지 스타일의 팬케이크를 판매하면서 일일 매출에서 크고 활력을 불어넣는 성장을 보였다.

00:01:58.000 --> 00:02:05.000
이번 여름에, 나는 그들이 판매 앱을 개선할 수 있도록 또 다른 도전을 했다.

00:02:05.000 --> 00:02:09.000
나는 팬케이크의 베스트셀러 스타일을 시각화하는 차트로 시작한다.

00:02:09.000 --> 00:02:13.000
그것을 위해, 그 앱은 현재 간단한 스택 막대 차트를 가지고 있다.

00:02:13.000 --> 00:02:19.000
그것은 BarMark를 가지고 있으며, 판매는 X 차원을 따라 쌓여 있다.

00:02:19.000 --> 00:02:26.000
범주형 데이터이기 때문에, 카테고리는 각 누적 막대의 전경 스타일로 반영됩니다.

00:02:26.000 --> 00:02:35.000
이 차트는 작업을 완료하지만, 화면의 사용 가능한 공간을 활용하고 데이터를 돋보이게 하기 위해 원형 차트로 바꾸자.

00:02:35.000 --> 00:02:45.000
내가 해야 할 일은 섹터마크와 각도에 대한 바마크와 인수 x를 바꾸는 것이다.

00:02:45.000 --> 00:02:48.000
그렇게 간단해!

00:02:48.000 --> 00:02:53.000
SectorMark와 함께, 나는 판매 수량을 나타내기 위해 각도를 사용한다.

00:02:53.000 --> 00:02:58.000
원형 차트에 제공하는 각도 값은 자동으로 전체 원으로 정규화됩니다.

00:02:58.000 --> 00:03:03.000
나는 또한 몇 가지 스타일 커스터마이징을 적용할 수 있다.

00:03:03.000 --> 00:03:08.000
angularInset은 섹터 사이에 간격을 만들기 위해 섹터에 설정할 수 있다.

00:03:08.000 --> 00:03:17.000
여기서, 나는 섹터의 각도 삽입을 1.5점으로 설정했기 때문에, 두 섹터 사이의 간격은 삽입의 두 배, 3포인트 너비이다.

00:03:17.000 --> 00:03:22.000
나는 또한 나에게 멋지게 둥근 파이 크러스트를 주는 코너 반경을 설정했다.

00:03:22.000 --> 00:03:27.000
그것은 이미 몇 줄의 코드로 멋져 보인다.

00:03:27.000 --> 00:03:33.000
다른 모습을 시도하려면, 이 차트를 도넛 차트로 바꾸자.

00:03:33.000 --> 00:03:37.000
나는 내부 반경을 파이의 전체 반경의 비율로 설정했다.

00:03:37.000 --> 00:03:43.000
나에게는 황금 비율이 거의 맞는 것처럼 보이지만, 당신은 도넛의 다른 두께를 좋아할 수도 있습니다.

00:03:43.000 --> 00:03:49.000
판매된 모든 팬케이크 중에서, 우리는 현재 차트 위에 표시된 확실한 승자인 카차파가 있다.

00:03:49.000 --> 00:03:55.000
하지만 도넛 차트는 중앙에 비어 있기 때문에, 나는 텍스트를 차트의 중앙으로 옮기고 싶다.

00:03:55.000 --> 00:03:58.000
나는 그 텍스트를 차트 배경에 넣었다.

00:03:58.000 --> 00:04:05.000
나는 텍스트가 도넛 구멍 중앙에 있는지 확인하기 위해 몇 가지 위치 계산을 사용한다.

00:04:05.000 --> 00:04:09.000
이제 그것은 멋지게 보이는 도넛 차트이다.

00:04:09.000 --> 00:04:12.000
그래서 그건 파이 차트와 도넛 차트야.

00:04:12.000 --> 00:04:19.000
그것들은 당신의 데이터로 인상을 남길 수 있는 좋은 방법이며, 큰 화면에서 절대적으로 놀랍습니다.

00:04:19.000 --> 00:04:24.000
다음으로, 저는 선택부터 시작하여 몇 가지 차트 상호 작용 기능에 대해 자세히 알아보고 싶습니다.

00:04:24.000 --> 00:04:30.000
차트에서 상호 작용을 활성화함으로써, 당신은 점진적으로 추가 세부 사항을 공개하고 있습니다.

00:04:30.000 --> 00:04:38.000
상호 작용은 사람들이 터치와 같은 다양한 형태의 입력을 사용하여 자연스럽게 데이터를 탐색하도록 장려한다.

00:04:38.000 --> 00:04:46.000
선택은 차트와 소통할 수 있는 직접적인 방법이며, 심박수 차트와 같은 Apple이 디자인한 차트는 완벽한 예입니다.

00:04:46.000 --> 00:04:52.000
축을 따라 점을 선택하면, 차트는 추가 정보를 보여줄 것이다.

00:04:52.000 --> 00:04:57.000
이 아이디어를 팬케이크 판매 앱으로 가져오자.

00:04:57.000 --> 00:05:03.000
앱의 한 차트는 두 도시에서 매일의 평균 판매를 시각화합니다.

00:05:03.000 --> 00:05:14.000
이 차트에서 값 선택을 활성화하여 선택한 날짜에 판매된 팬케이크 수를 보여주는 팝오버를 통해 자세한 판매 번호를 공개할 것입니다.

00:05:14.000 --> 00:05:18.000
이것이 차트가 정의되는 방식이다. 각 도시에는 데이터 시리즈가 있다.

00:05:18.000 --> 00:05:23.000
시리즈의 각 요소에는 요일과 판매 횟수가 있다.

00:05:23.000 --> 00:05:26.000
그런 다음 그 선들은 도시 이름으로 스타일이 지정됩니다.

00:05:26.000 --> 00:05:34.000
제스처를 캡처하기 위해 SwiftUI 뷰를 오버레이할 수 있는 chartOverlay 수정자에 이미 익숙할 수 있습니다.

00:05:34.000 --> 00:05:39.000
하지만 iOS 17에서는 새로운 chartXSelection 수정자를 사용할 수 있습니다.

00:05:39.000 --> 00:05:47.000
그것은 나를 위해 모든 제스처 인식을 처리하고 선택한 값을 바인딩에 저장합니다.

00:05:47.000 --> 00:05:56.000
선택 수정자는 X축을 따라 원시 날짜 값을 제공하므로, 라인 차트의 데이터 포인트와 일치하도록 계산된 속성을 정의합니다.

00:05:56.000 --> 00:06:03.000
값이 선택되었을 때 팝오버를 표시하기 위해 차트를 확장해 봅시다.

00:06:03.000 --> 00:06:09.000
값이 선택되면, 나는 선택 지표로 수직 규칙 표시를 추가한다.

00:06:09.000 --> 00:06:16.000
규칙 표시가 선 표시 뒤에 유지되도록 Z 인덱스를 기본 0 값보다 낮게 설정했습니다.

00:06:16.000 --> 00:06:20.000
이제 선택 표시기 위에 팝오버를 만들어 봅시다.

00:06:20.000 --> 00:06:25.000
사용자 지정 SwiftUI 보기를 사용하여 주석으로 이것을 할 수 있습니다.

00:06:25.000 --> 00:06:32.000
주석은 일반적으로 차트 내에 위치하지만, 이 경우 팝오버는 차트의 경계를 넘어 확장됩니다.

00:06:32.000 --> 00:06:37.000
여기가 내가 주석을 위한 오버플로 해상도가 필요한 곳이다.

00:06:37.000 --> 00:06:44.000
X축에서, 나는 팝오버가 차트의 수평 경계를 지나서 움직이지 않게 차트에 맞게 만든다.

00:06:44.000 --> 00:06:53.000
Y축에서, 주석이 차트 바로 위에 있을 수 있도록 오버플로 해상도를 비활성화합니다.

00:06:53.000 --> 00:06:59.000
선택 바인딩과 주석이 있는 규칙 표시로, 나는 이제 대화형 라인 차트를 가지고 있다.

00:06:59.000 --> 00:07:07.000
스위프트 차트는 호버 제스처가 값 선택의 기본값인 macOS에서도 선택을 지원합니다.

00:07:07.000 --> 00:07:14.000
단일 값 선택 외에도, 이 차트 선택 수정자의 변형을 사용하면 범위를 선택할 수 있습니다.

00:07:14.000 --> 00:07:21.000
iOS에서 기본값은 두 손가락 탭 제스처이며, macOS에서는 드래그 제스처입니다.

00:07:21.000 --> 00:07:32.000
스위프트 차트를 사용하면 선택을 위한 사용자 지정 제스처를 제공할 수 있으며, ChartProxy를 사용하면 제스처 위치에 따라 값을 선택할 수 있습니다.

00:07:32.000 --> 00:07:39.000
X와 Y 좌표의 차트 외에도, 차트 값 선택은 파이 차트와 도넛 차트와 원활하게 작동합니다.

00:07:39.000 --> 00:07:43.000
섹터를 탭하고 강조하는 것은 매우 재미있다.

00:07:43.000 --> 00:07:47.000
그래서 선택은 당신의 차트에서 추가 정보를 공개하는 것에 관한 것이었습니다.

00:07:47.000 --> 00:07:51.000
상호 작용의 또 다른 중요한 부분은 데이터를 탐색하는 것이다.

00:07:51.000 --> 00:07:54.000
스크롤에 대해 이야기해 봅시다.

00:07:54.000 --> 00:08:00.000
나는 1년 내내 일일 팬케이크 판매를 시각화하는 차트를 만들고 싶다.

00:08:00.000 --> 00:08:06.000
화면에 365일을 모두 맞추는 것은 비현실적일 것이므로, 스크롤할 수 있어야 한다.

00:08:06.000 --> 00:08:10.000
스크롤을 활성화하려면, 저는 단순히 chartScrollableAxes 수정자를 호출합니다.

00:08:10.000 --> 00:08:17.000
chartXVisibleDomain으로, 나는 30일의 보이는 창을 시간 간격으로 설정했다.

00:08:17.000 --> 00:08:26.000
현재 보이는 도메인에서 총 팬케이크 판매를 표시하려면 chartScrollPosition을 사용하여 현재 날짜를 바인딩에 저장합니다.

00:08:26.000 --> 00:08:31.000
이제 난 그냥 내 손가락을 가지고 스크롤할 수 있어.

00:08:31.000 --> 00:08:38.000
플롯을 스크롤할 수 있을 뿐만 아니라, 축 내용을 스크롤할 수 있으며, 버터처럼 매끄럽다.

00:08:38.000 --> 00:08:41.000
스크롤은 몇 가지 다른 방법으로 사용자 정의할 수 있습니다.

00:08:41.000 --> 00:08:45.000
예를 들어, 저는 항상 날짜 단위로 스냅하기 위해 스크롤하고 싶습니다.

00:08:45.000 --> 00:08:49.000
이것은 우리에게 스크롤 행동을 가져다 준다.

00:08:49.000 --> 00:08:58.000
ScrollTargetBehavior는 스크롤 뷰 콘텐츠를 값과 정렬할 수 있는 SwiftUI 및 Swift 차트에 새로 추가되었습니다.

00:08:58.000 --> 00:09:04.000
내가 원했던 스냅 동작을 위해, 나는 그것을 하루의 첫 시간과 일치하도록 설정했다.

00:09:04.000 --> 00:09:10.000
majorAlignment는 스와이프 동작을 정의하여 한 단계 더 사용자 정의합니다.

00:09:10.000 --> 00:09:19.000
여기서, 나는 그것을 한 달의 첫날로 설정했다, 그래서 내가 스와이프하여 차트를 훑어볼 때, 나는 항상 매달의 첫날에 착륙할 것이다.

00:09:19.000 --> 00:09:25.000
스크롤 가능한 차트는 SwiftUI의 스크롤 뷰에 대한 최신 개선 사항 위에 구축되었습니다.

00:09:25.000 --> 00:09:29.000
자세한 내용은 Beyond Scroll Views를 확인하세요.

00:09:29.000 --> 00:09:34.000
스위프트 차트는 데이터를 시각화할 수 있는 무한한 가능성을 제공합니다.

00:09:34.000 --> 00:09:43.000
X와 Y 좌표의 차트를 넘어, 파이 차트는 이제 애플이 디자인한 차트를 만들기 위한 API 제품군의 일부입니다.

00:09:43.000 --> 00:09:46.000
원형 차트는 간단하면서도 강력한 시각화이다.

00:09:46.000 --> 00:09:50.000
그들은 부분 대 전체 데이터 관계를 나타낼 때 가장 잘 작동한다.

00:09:50.000 --> 00:10:00.000
선택 및 스크롤과 같은 상호 작용 기능은 데이터 시각화에서 완전히 새로운 차원을 가능하게 하여 사용자가 데이터를 탐색할 때 운전석에 앉게 합니다.

00:10:00.000 --> 00:10:04.000
베이킹 파이와 도넛 차트를 즐기세요.

00:10:04.000 --> 23:59:59.000
♪ ♪

