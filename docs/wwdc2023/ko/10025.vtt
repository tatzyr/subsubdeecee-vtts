WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:12.000
Artem: 안녕하세요, 제 이름은 Artem입니다.

00:00:12.000 --> 00:00:15.000
저는 애플 푸시 알림 팀의 엔지니어입니다.

00:00:15.000 --> 00:00:18.000
푸시 알림 콘솔을 소개하게 되어 기쁩니다.

00:00:18.000 --> 00:00:25.000
푸시 알림을 앱에 통합하는 데 도움이 되는 몇 가지 기능을 결합한 새로운 도구입니다.

00:00:25.000 --> 00:00:31.000
콘솔에서 몇 가지 알림을 보내는 것으로 시작하겠습니다. 이는 테스트를 처음부터 끝까지 하는 데 도움이 될 수 있습니다.

00:00:31.000 --> 00:00:36.000
다음으로, 나는 배달 로그 기능을 사용하여 몇 가지 일반적인 문제를 분석할 것이다.

00:00:36.000 --> 00:00:43.000
그리고 마지막으로, 인증 및 장치 토큰으로 작업하기 위해 활용할 수 있는 몇 가지 추가 도구를 소개해 드리겠습니다.

00:00:43.000 --> 00:00:47.000
우선, 저는 몇 가지 푸시 알림 기본 사항을 다룰 것입니다.

00:00:47.000 --> 00:00:54.000
푸시 알림은 애플리케이션이나 웹사이트에서 사용자의 장치로 전송되는 짧은 메시지입니다.

00:00:54.000 --> 00:00:59.000
그것들은 당신의 앱의 기능을 확장할 수 있는 믿을 수 없을 정도로 강력한 도구입니다.

00:00:59.000 --> 00:01:05.000
초당 수백만 개의 푸시 알림이 Apple 기기에 전달되어 사용자 경험을 풍부하게 합니다.

00:01:05.000 --> 00:01:12.000
이러한 알림은 실시간으로 전달되며 사용자에게 시기적절하고 관련 있는 정보를 제공하도록 설계되었습니다.

00:01:12.000 --> 00:01:18.000
이것은 당신의 애플리케이션을 업데이트할 때 더 역동적인 경험을 가능하게 합니다.

00:01:18.000 --> 00:01:25.000
푸시 알림은 사용자 참여를 높이는 데 도움이 될 수 있으며, 앱을 항상 최신 상태로 유지할 수 있습니다.

00:01:25.000 --> 00:01:29.000
여기 그것이 어떻게 작동하는지에 대한 간략한 개요가 있습니다.

00:01:29.000 --> 00:01:38.000
푸시 알림 전달을 가능하게 하는 백엔드는 Apple 푸시 알림 서비스 또는 줄여서 APNs라고 합니다.

00:01:38.000 --> 00:01:44.000
알림 이야기는 사용자에게 앱의 알림을 허용하라는 메시지를 표시할 때 시작됩니다.

00:01:44.000 --> 00:01:51.000
사용자가 동의하면, 장치 토큰은 APNs에 의해 생성되고 장치로 전송됩니다.

00:01:51.000 --> 00:01:57.000
그 토큰은 특정 장치에서 당신의 앱을 고유하게 식별합니다.

00:01:57.000 --> 00:02:03.000
보통 토큰은 향후 사용을 위해 저장하는 애플리케이션 서버로 전달됩니다.

00:02:03.000 --> 00:02:12.000
서버가 푸시 알림을 보내고 싶을 때, 저장된 장치 토큰을 사용하여 APNs를 통해 알림을 처리합니다.

00:02:12.000 --> 00:02:18.000
그런 다음 APNs는 해당 토큰과 함께 장치의 앱에 알림을 전달합니다.

00:02:18.000 --> 00:02:26.000
장치 토큰은 변경될 수 있으므로, 정확하고 신뢰할 수 있는 배송을 위해 서버 측에서 최신 상태로 유지하는 것이 필수적입니다.

00:02:26.000 --> 00:02:33.000
푸시 알림 콘솔은 APNs와 상호 작용하기 위한 다양한 도구를 제공하는 새로운 도구입니다.

00:02:33.000 --> 00:02:40.000
앱을 개발하고 푸시 알림을 추가하는 경우, 처음부터 끝까지 빠르게 테스트할 수 있는 방법을 원할 수 있습니다.

00:02:40.000 --> 00:02:43.000
그곳이 전송 기능이 유용한 곳이다.

00:02:43.000 --> 00:02:46.000
나는 뒷마당 새 앱을 개발하고 있어.

00:02:46.000 --> 00:02:52.000
지금은 봄이고, 몇몇 새들이 겨울 땅에서 돌아오고 있기 때문에, 나는 사용자들에게 그것에 대해 알리고 싶다.

00:02:52.000 --> 00:02:55.000
나는 새로운 알림을 만들 거야.

00:02:55.000 --> 00:03:04.000
이름을 지정하고, 휴대폰에서 앱의 장치 토큰을 제공한 다음, 일부 페이로드 속성을 채우세요.

00:03:04.000 --> 00:03:09.000
제목에 앱 이름을 사용하겠습니다.

00:03:09.000 --> 00:03:22.000
자막은 "중요한 업데이트"라고 말할 것이다. 그리고 몸은 "로빈스가 돌아왔다"라는 메시지가 될 것이다.

00:03:22.000 --> 00:03:30.000
이제 준비되었으니, 나는 보내기를 클릭할 거야.

00:03:30.000 --> 00:03:35.000
장치가 푸시를 받으면, 알림을 표시합니다.

00:03:35.000 --> 00:03:42.000
이 페이지에서 보낸 알림의 기록은 왼쪽 사이드바에 당신의 편의를 위해 보존됩니다.

00:03:42.000 --> 00:03:46.000
나는 마지막 알림을 재사용하고 싶지만, 메시지를 약간 바꾸고 싶다.

00:03:46.000 --> 00:03:53.000
방금 보낸 메시지를 복사하고 새 알림을 만들 거야.

00:03:53.000 --> 00:03:57.000
여기, 이름을 지어주세요.

00:03:57.000 --> 00:04:04.000
그런 다음 원시 JSON 형식으로 페이로드를 입력할 수 있는 이 스위치를 전환하세요.

00:04:04.000 --> 00:04:18.000
방금 복사한 페이로드를 삽입하고 메시지를 다른 것으로만 변경할 것입니다.

00:04:18.000 --> 00:04:25.000
동일한 장치 토큰을 공급한 다음, 보내세요.

00:04:25.000 --> 00:04:30.000
그리고 그 장치는 업데이트된 알림을 받는다.

00:04:30.000 --> 00:04:35.000
콘솔을 사용하면 다양한 유형의 알림과 다양한 속성을 테스트할 수 있습니다.

00:04:35.000 --> 00:04:39.000
당신은 환경을 지정할 수 있습니다...

00:04:39.000 --> 00:04:44.000
다른 푸시 유형을 시도해 보세요...

00:04:44.000 --> 00:04:49.000
정확한 만료일을 설정하세요...

00:04:49.000 --> 00:04:53.000
다른 우선순위를 시도해봐...

00:04:53.000 --> 00:05:00.000
그리고 모든 종류의 페이로드를 보내세요.

00:05:00.000 --> 00:05:03.000
다음으로, 배송 로그 기능을 다루겠습니다.

00:05:03.000 --> 00:05:11.000
때때로 당신이 보낸 알림을 받지 못하는 상황이 있어, 무슨 일이 일어났는지 불확실하게 됩니다.

00:05:11.000 --> 00:05:14.000
이 도구를 사용하면 그러한 사례를 분석하는 데 도움이 될 수 있습니다.

00:05:14.000 --> 00:05:21.000
알림이 APNs 스택을 통해 이동함에 따라 전달 과정을 반영하는 이벤트가 기록됩니다.

00:05:21.000 --> 00:05:27.000
그리고 이제 알림이 전송될 때 APNs가 반환하는 새 헤더를 사용하여 해당 정보를 검색할 수 있습니다.

00:05:27.000 --> 00:05:29.000
이게 작동하는 방식이야.

00:05:29.000 --> 00:05:36.000
이 장치는 저전력 모드를 활성화하여 알림을 받지 못하는 상황을 에뮬레이트할 수 있습니다.

00:05:36.000 --> 00:05:46.000
그런 다음, 나는 보내기 탭으로 가서 알림 중 하나를 다시 보낸다.

00:05:46.000 --> 00:06:02.000
이름을 지정하고, 페이로드를 붙여넣고, 장치 토큰을 제공하고, 만료일을 나중에 설정하겠습니다.

00:06:02.000 --> 00:06:08.000
하지만 이번에는 "보내기"를 클릭한 후 알림이 장치에 나타나지 않습니다.

00:06:08.000 --> 00:06:19.000
무슨 일이 일어났는지 알아내기 위해, 나는 APNs가 HTTP 응답에서 반환하는 새로운 유형의 ID인 "apns-unique-id"를 복사할 것이다.

00:06:19.000 --> 00:06:27.000
"배달 로그" 탭으로 전환한 후, 방금 복사한 ID를 넣을 수 있는 검색 필드가 표시됩니다.

00:06:27.000 --> 00:06:34.000
검색을 실행하면, APNs 스택을 통과할 때 알림의 기록을 볼 수 있습니다.

00:06:34.000 --> 00:06:41.000
여기서 마지막 이벤트는 "장치 전원 고려 사항을 위해 저장됨"이며, 이는 메시지가 전달되지 않은 이유를 설명합니다.

00:06:41.000 --> 00:06:50.000
이 경우, 전화기는 저전력 모드에 있었기 때문에 배터리를 절약하기 위해 몇 가지 알림을 받는 것을 연기했다.

00:06:50.000 --> 00:07:00.000
저전력 모드가 비활성화되면, 알림이 수신되어 장치에 표시됩니다.

00:07:00.000 --> 00:07:07.000
배달된 후, 해당 업데이트는 배달 로그에서도 볼 수 있습니다.

00:07:07.000 --> 00:07:10.000
이 도구를 사용하면 다양한 상황을 분석할 수 있습니다.

00:07:10.000 --> 00:07:17.000
각 역사 이벤트는 무슨 일이 일어났는지뿐만 아니라 해당 툴팁에서 그 이유를 설명한다.

00:07:17.000 --> 00:07:27.000
예를 들어, 장치가 오프라인인 경우 알림은 APNs 저장소로 이동하거나 앱이 장치에서 제거된 경우 폐기될 수 있습니다.

00:07:27.000 --> 00:07:31.000
도구 작업을 시작할 때 더 많은 예시를 찾을 수 있습니다.

00:07:31.000 --> 00:07:37.000
이 기능은 일반 APNs API를 통해 전송된 알림에도 사용할 수 있습니다.

00:07:37.000 --> 00:07:43.000
이 정보를 쿼리하려면 APNs 응답에서 "apns-unique-id"를 기록해야 합니다.

00:07:43.000 --> 00:07:54.000
그리고 콘솔에서 보낸 알림의 경우, "배달 로그" 탭으로 전환할 필요가 없으며, 전송 페이지 자체에서 동일한 정보를 사용할 수 있습니다.

00:07:54.000 --> 00:08:07.000
앱을 APNs와 통합하면, 인증 및 알림 전송에 사용되는 다양한 유형의 토큰으로 작업할 수 있으며, 콘솔은 또한 작업하는 데 도움이 되는 다양한 편리한 도구를 제공합니다.

00:08:07.000 --> 00:08:10.000
먼저 인증을 다루자.

00:08:10.000 --> 00:08:18.000
APNs를 사용한 인증에는 두 가지 유형이 있습니다: 인증서 기반과 토큰 기반.

00:08:18.000 --> 00:08:26.000
인증서 기반 인증은 SSL 인증서에 의존하여 서버와 APN 간의 신뢰할 수 있는 연결을 설정합니다.

00:08:26.000 --> 00:08:33.000
Apple Developer 포털 내에서 각 앱과 환경에 대한 인증서를 만들고 관리해야 합니다.

00:08:33.000 --> 00:08:40.000
인증서는 만료되며 주기적으로 갱신되어야 한다는 것을 명심하세요.

00:08:40.000 --> 00:08:49.000
토큰 기반 인증은 공급자 서버와 APNs 간의 안전하고 효율적인 인증을 위해 JSON 웹 토큰을 사용합니다.

00:08:49.000 --> 00:08:55.000
Apple Developer 계정과 연결된 개인 키로 서명된 토큰을 생성해야 합니다.

00:08:55.000 --> 00:08:59.000
개인 키는 인증서처럼 만료되지 않습니다.

00:08:59.000 --> 00:09:05.000
푸시 알림 콘솔의 일환으로, 이제 당신을 위한 인증 토큰을 생성할 수 있는 도구가 있습니다.

00:09:05.000 --> 00:09:13.000
개발자 포털에서 얻은 개인 키를 제공하기만 하면 됩니다...

00:09:13.000 --> 00:09:16.000
그리고 연관된 키 ID.

00:09:16.000 --> 00:09:21.000
이 조각들을 공급한 후, 새로운 토큰이 생성될 것이다.

00:09:21.000 --> 00:09:25.000
그런 다음 그것을 사용하여 APNs에 대한 요청을 인증할 수 있습니다.

00:09:25.000 --> 00:09:32.000
이 토큰의 유효 기간은 한 시간을 초과할 수 없으므로 주기적으로 회전해야 합니다.

00:09:32.000 --> 00:09:36.000
그리고 토큰을 생성할 때, 당신의 키는 어디에도 업로드되지 않습니다.

00:09:36.000 --> 00:09:40.000
그것은 당신의 브라우저에서만 사용되므로, 당신의 개인 정보는 보존됩니다.

00:09:40.000 --> 00:09:48.000
이미 토큰을 가지고 있지만 작동하지 않을 수도 있다고 생각한다면, 다른 도구인 인증 토큰 유효성 검사기를 활용할 수 있습니다.

00:09:48.000 --> 00:09:56.000
방금 생성한 토큰을 가져간 다음 유효성 검사 도구에 붙여넣을 것입니다.

00:09:56.000 --> 00:10:06.000
여기서, 저는 이 경우와 같이 토큰이 유효하다는 것을 확인하거나 그렇지 않은 이유를 제공하는 유효성 검사 결과를 다시 얻을 수 있습니다.

00:10:06.000 --> 00:10:19.000
예를 들어, 얼마 전에 사용한 토큰을 제공할 때, 유효성 검사 결과는 "발행된" 주장이 너무 오래되었다고 알려주며, 이는 토큰이 만료되었음을 의미합니다.

00:10:19.000 --> 00:10:22.000
그리고 마지막으로, 장치 토큰 유효성 검사기가 있습니다.

00:10:22.000 --> 00:10:29.000
기억하듯이, 이 토큰은 알림을 보낼 때 수신자를 지정하는 데 사용됩니다.

00:10:29.000 --> 00:10:33.000
그들은 구체적인 환경과 푸시 타입에 묶여 있다.

00:10:33.000 --> 00:10:40.000
토큰을 입력하면, 토큰이 유효한 환경과 푸시 유형을 알려주는 응답을 받게 될 것입니다.

00:10:40.000 --> 00:10:50.000
예를 들어, 이전에 시연에 사용된 토큰을 제공할 때, 경고 및 배경 푸시 유형과 개발 환경에 유효하다는 것을 알 수 있습니다.

00:10:50.000 --> 00:10:59.000
이러한 기능을 사용하는 것을 즐기고 푸시 알림을 앱에 더 쉽게 통합하여 사람들에게 새로운 흥미로운 기능을 제공하기를 바랍니다.

00:10:59.000 --> 00:11:01.000
오늘 시작해.

00:11:01.000 --> 00:11:04.000
통합을 테스트하기 위해 푸시 알림을 보내세요.

00:11:04.000 --> 00:11:09.000
배송 로그를 검토하고 배송 과정에 대한 더 나은 통찰력을 얻으세요.

00:11:09.000 --> 00:11:14.000
콘솔에서 토큰을 검증하고 새로운 토큰을 생성하세요.

00:11:14.000 --> 00:11:23.000
클라이언트에서 푸시 알림을 구현하는 방법에 대한 자세한 내용은 WWDC20의 "푸시 알림 프라이머" 비디오를 확인하세요.

00:11:23.000 --> 00:11:25.000
봐줘서 고마워.

00:11:25.000 --> 23:59:59.000
♪ ♪

