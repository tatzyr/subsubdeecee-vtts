WEBVTT

00:00:00.000 --> 00:00:04.000
♪ 부드러운 기악 힙합 ♪

00:00:04.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:12.000
미켈 에스타니 로드리게스: 안녕하세요, 저는 미켈 에스타니 로드리게스입니다.

00:00:12.000 --> 00:00:17.000
로레나 파즈미노: 저는 로레나 파즈미노이고, 우리는 애플 디자인 팀 출신입니다.

00:00:17.000 --> 00:00:22.000
오늘, 우리는 공간 사용자 인터페이스를 디자인하는 방법에 대해 이야기할 것입니다.

00:00:22.000 --> 00:00:34.000
이 플랫폼을 시작할 수 있도록, 우리는 기존 플랫폼과의 일관성과 친숙함을 유지하는 동시에 몰입감 있고 공간적인 경험에 적응하기 위해 특정 요소를 진화시키는 시각적 언어를 구축했습니다.

00:00:34.000 --> 00:00:44.000
미켈: 우리는 환경에서 읽을 수 있고 사용할 수 있는 앱 아이콘과 인터페이스를 만들 때 고려해야 할 UI 기초와 디자인 원칙에 대해 이야기하는 것으로 시작할 것입니다.

00:00:44.000 --> 00:00:51.000
그런 다음 우리는 인체 공학적이고 타겟팅하기 쉬운 레이아웃을 만들기 위해 주요 개념과 모범 사례를 검토할 것입니다.

00:00:51.000 --> 00:01:05.000
그리고 마지막으로, 우리는 이 플랫폼이 어떻게 당신의 앱을 화면에서 공간으로 가져올 수 있는지 보여줌으로써 결론을 내릴 것이며, 당신이 이미 익숙하고 일부는 완전히 새로운 모든 시스템 구성 요소를 안내합니다.

00:01:05.000 --> 00:01:09.000
UI 기초에 대해 자세히 알아봅시다.

00:01:09.000 --> 00:01:13.000
이것들은 우리가 이 섹션에서 다룰 핵심 디자인 원칙이다.

00:01:13.000 --> 00:01:16.000
앱 아이콘에 대해 이야기해 봅시다.

00:01:16.000 --> 00:01:25.000
우리는 홈 뷰를 친숙하게 유지하고 싶었고 한 걸음 더 나아가 앱 아이콘을 당신의 공간에서 입체적이고 사실적으로 만들었습니다.

00:01:25.000 --> 00:01:28.000
사람들이 그들을 볼 때, 그들은 확장한다.

00:01:28.000 --> 00:01:35.000
그리고 이 시스템은 층 사이의 미묘한 깊이를 강화하기 위해 반사 하이라이트와 그림자를 추가하여 이 시각 효과를 향상시킵니다.

00:01:35.000 --> 00:01:39.000
그렇다면 어떻게 훌륭한 아이콘을 디자인할 수 있나요?

00:01:39.000 --> 00:01:42.000
우선, 여러 층을 사용하세요.

00:01:42.000 --> 00:01:46.000
다른 플랫폼은 시차 효과를 만들기 위해 레이어를 사용한다.

00:01:46.000 --> 00:01:53.000
여기서, 평평한 층을 사용하는 것만으로도, 시스템은 이 진정한 3D 효과를 만들 수 있다.

00:01:53.000 --> 00:02:00.000
모든 앱 아이콘은 최대 세 개의 레이어, 배경 레이어 및 최대 두 개의 전경 레이어를 가질 수 있습니다.

00:02:00.000 --> 00:02:06.000
각 레이어는 정사각형 이미지이며, 크기는 1024 x 1024 픽셀이다.

00:02:06.000 --> 00:02:10.000
두 전경 레이어 모두 투명한 배경을 가져야 한다.

00:02:10.000 --> 00:02:14.000
배경 레이어를 가장자리에서 가장자리 정사각형 이미지로 디자인하세요.

00:02:14.000 --> 00:02:18.000
그러면 모든 층은 원형 마스크로 잘릴 것이다.

00:02:18.000 --> 00:02:27.000
그리고 마지막으로, 레이어가 서로 일치할 때, 유리 레이어가 자동으로 적용되어 깊이, 반사 하이라이트 및 그림자를 추가합니다.

00:02:27.000 --> 00:02:29.000
그래픽을 중심으로 유지하려고 노력하세요.

00:02:29.000 --> 00:02:33.000
만약 그들이 가장자리에 너무 가깝다면, 그들은 확장되었을 때 중심에서 벗어난 것처럼 보일 수 있다.

00:02:33.000 --> 00:02:37.000
반투명 픽셀의 큰 영역을 사용하지 마세요.

00:02:37.000 --> 00:02:42.000
불투명도가 줄어든 레이어는 그 뒤에 드리워진 그림자와 섞일 것이다.

00:02:42.000 --> 00:02:45.000
그리고 그것이 당신이 3차원 앱 아이콘을 쉽게 만들 수 있는 방법입니다.

00:02:45.000 --> 00:02:48.000
다음으로, 재료에 대해 이야기해 봅시다.

00:02:48.000 --> 00:02:58.000
사람들이 앱 아이콘을 탭하면, 앱은 이와 같은 다양한 장소, 넓은 일광실, 비행기와 같은 작은 공간 또는 야간에 실행됩니다.

00:02:58.000 --> 00:03:02.000
앱은 주변 환경의 조명 조건에 적응해야 합니다.

00:03:02.000 --> 00:03:12.000
그것들은 주변 공간에 배치하기 쉽고, 어떤 거리에서도 사용하기 쉽고, 어떤 조명 조건에서도 보기 쉬워야 합니다.

00:03:12.000 --> 00:03:17.000
그리고 그것이 우리가 새로운 시각 언어인 유리 재료를 디자인한 이유입니다.

00:03:17.000 --> 00:03:22.000
이 시스템 정의의 아름다운 유리창은 당신의 물리적 세계의 일부로 느껴집니다.

00:03:22.000 --> 00:03:28.000
그리고 그것의 독특한 특성은 사람들의 주변 환경과 가상 콘텐츠의 빛을 보여줄 수 있게 해준다.

00:03:28.000 --> 00:03:34.000
또한, 반사 하이라이트와 그림자는 당신의 공간에서의 규모와 위치를 강화합니다.

00:03:34.000 --> 00:03:43.000
그리고 그것은 포함된 UI를 위한 캔버스로 작동하며, 더 가볍게 느껴지고 신체 감각을 더합니다.

00:03:43.000 --> 00:03:49.000
이 가벼운 소재는 또한 사람들에게 다른 앱이나 사람들처럼 창문 뒤에 무엇이 있을지에 대한 느낌을 준다.

00:03:49.000 --> 00:03:55.000
훌륭한 공간 경험을 제공하려면, 주변 환경을 인식하는 것이 중요합니다.

00:03:55.000 --> 00:03:58.000
창문에 단색을 사용하지 마세요.

00:03:58.000 --> 00:04:05.000
너무 많은 불투명한 창문은 수축을 느끼고 인터페이스가 무겁게 느껴질 수 있다.

00:04:05.000 --> 00:04:14.000
유리는 조명에 동적으로 반응하며, 낮에서 밤으로의 전환처럼 공간의 일부를 느끼도록 대비와 색상 균형을 조정합니다.

00:04:14.000 --> 00:04:20.000
iOS와 macOS와 달리, 이 플랫폼은 뚜렷한 밝거나 어두운 모습을 가지고 있지 않다.

00:04:20.000 --> 00:04:27.000
대신, 유리와 UI는 밝고 어두운 배경 앞에 놓으면 자연스럽게 적응한다.

00:04:27.000 --> 00:04:38.000
시스템 정의의 생생한 재료는 이 기능을 잘 활용하여 다양한 시나리오와 조명 조건에서 앱이 멋지게 보이도록 합니다. 살펴봅시다.

00:04:38.000 --> 00:04:40.000
먼저, 우리는 유리창으로 시작한다.

00:04:40.000 --> 00:04:46.000
사이드바와 같은 앱의 섹션을 분리하려면, 더 어두운 재료를 사용하세요.

00:04:46.000 --> 00:04:51.000
또는 버튼과 같은 대화형 요소에 주의를 끄는 더 가벼운 재료.

00:04:51.000 --> 00:04:58.000
또는 입력 필드와 같은 표준 구성 요소의 대비를 높이기 위해 더 어두운 재료를 사용하는 것을 고려할 수도 있습니다.

00:04:58.000 --> 00:05:02.000
음악 앱이 모든 UI 요소와 함께 어떻게 보이는지는 다음과 같습니다.

00:05:02.000 --> 00:05:06.000
보시다시피, 텍스트의 기본값은 흰색입니다.

00:05:06.000 --> 00:05:13.000
그래서, 이와 같은 락업을 디자인하고 싶고, 더 가벼운 버튼을 추가하고 싶다고 상상해 보세요.

00:05:13.000 --> 00:05:16.000
그것을 유리 재료 위에 놓는 것은 좋다.

00:05:16.000 --> 00:05:21.000
또는 더 많은 대비를 얻고 싶다면, 그 뒤에 더 어두운 셀을 사용하세요.

00:05:21.000 --> 00:05:28.000
가독성에 영향을 미치고 대비를 줄이기 때문에 더 가벼운 재료를 서로 위에 쌓지 마세요.

00:05:28.000 --> 00:05:33.000
이제, 타이포그래피가 이 플랫폼에 어떻게 정확하게 적용되었는지 보여드리겠습니다.

00:05:33.000 --> 00:05:38.000
친숙하게 유지하기 위해, 모든 글꼴 스타일은 모든 플랫폼에서 작동하는 의미론적 이름을 사용합니다.

00:05:38.000 --> 00:05:45.000
그들은 우리의 포인트 기반 유닛 시스템에서 조정되어 어떤 거리에서도 읽을 수 있도록 합니다.

00:05:45.000 --> 00:05:49.000
더 알아보려면, "공간 디자인의 원칙" 세션을 확인하세요.

00:05:49.000 --> 00:05:53.000
우리는 또한 가독성을 향상시키기 위해 글꼴 가중치 중 일부를 수정했습니다.

00:05:53.000 --> 00:05:56.000
좀 더 자세히 살펴보자.

00:05:56.000 --> 00:06:03.000
생생한 재료에 대한 텍스트의 대비를 개선하기 위해, 글꼴 무게는 약간 더 무겁게 수정되었다.

00:06:03.000 --> 00:06:07.000
예를 들어, iOS에서는 본문 텍스트 스타일에 일반 가중치를 사용합니다.

00:06:07.000 --> 00:06:10.000
이 플랫폼에서, 우리는 매체를 사용한다.

00:06:10.000 --> 00:06:17.000
그리고 제목의 경우, 세미볼드 대신, 우리는 항상 텍스트를 선명하게 유지하면서 볼드체를 사용합니다.

00:06:17.000 --> 00:06:22.000
결과적으로, 추적은 가독성을 돕기 위해 약간 증가했다.

00:06:22.000 --> 00:06:31.000
우리가 플랫폼에서 공유하는 잘 알려진 글꼴 스타일 외에도, 우리는 당신이 사용할 수 있는 광범위한 편집 스타일 레이아웃을 활용하는 두 가지 새로운 글꼴 스타일을 추가했습니다.

00:06:31.000 --> 00:06:36.000
다음은 아케이드의 엑스트라 라지 타이틀 1의 예입니다.

00:06:36.000 --> 00:06:38.000
좋아, 그렇지?

00:06:38.000 --> 00:06:46.000
윈도우가 믿을 수 없을 정도로 큰 크기로 확장할 수 있지만, 사용자 지정 더 작거나 가벼운 글꼴은 여전히 읽기 어려울 수 있습니다.

00:06:46.000 --> 00:06:55.000
그것을 개선하기 위해, 무게를 늘리거나 시스템 글꼴과 같이 최적화된 가독성을 위해 설계된 서체를 사용하는 것을 고려하십시오.

00:06:55.000 --> 00:06:57.000
다음으로, 활기에 대해 이야기해 봅시다.

00:06:57.000 --> 00:07:02.000
이것은 시스템 전반에 걸쳐 가독성을 유지하는 가장 중요한 세부 사항 중 하나이다.

00:07:02.000 --> 00:07:11.000
생동감은 재료 위에 표시되는 전경 콘텐츠를 밝게 하고 그 뒤에 있는 것에서 빛과 색을 앞으로 당겨서 작동합니다.

00:07:11.000 --> 00:07:19.000
이 플랫폼에서는 배경이 끊임없이 바뀔 수 있기 때문에, 텍스트가 항상 읽을 수 있도록 실시간으로 활기가 업데이트됩니다.

00:07:19.000 --> 00:07:23.000
내 말이 무슨 뜻인지 보여주기 위해, 예를 들어 보자.

00:07:23.000 --> 00:07:31.000
생동감은 유리 재료 위에서 작동하여 가독성을 향상시키고 시스템 재료를 더 풍부하고 정교하게 만듭니다.

00:07:31.000 --> 00:07:34.000
가능하면 시스템 구성 요소를 사용하세요.

00:07:34.000 --> 00:07:38.000
기본적으로, 그들은 이 활기 효과를 이용한다.

00:07:38.000 --> 00:07:41.000
잠시 멈추고 활기를 끄자.

00:07:41.000 --> 00:07:46.000
우리가 방금 보았듯이, 활기는 가독성과 재료의 외관을 향상시킨다.

00:07:46.000 --> 00:07:50.000
차이점을 보여주기 위해 켜고 끌게요.

00:07:50.000 --> 00:07:54.000
이제 당신이 그것을 어떻게 활용할 수 있는지 봅시다.

00:07:54.000 --> 00:07:58.000
활기를 사용하여 텍스트, 기호 및 채우기의 계층 구조를 나타내세요.

00:07:58.000 --> 00:08:03.000
세 가지 모드가 있다: 1차, 2차, 3차.

00:08:03.000 --> 00:08:06.000
표준 텍스트에 기본을 사용하세요.

00:08:06.000 --> 00:08:12.000
또는 설명 텍스트, 각주 및 자막에 보조를 사용하세요.

00:08:12.000 --> 00:08:18.000
당신은 유리 재료가 그 뒤에 있는 것의 색을 보여주기 때문에 다양한 색상이 될 수 있다는 것을 보았습니다.

00:08:18.000 --> 00:08:24.000
유리 위에 있는 다채로운 요소는 유리의 색이 비슷한지 보기 어려울 수 있다.

00:08:24.000 --> 00:08:30.000
대부분의 경우, 항상 명확하게 볼 수 있도록 흰색 텍스트나 기호를 사용하는 것을 고려하십시오.

00:08:30.000 --> 00:08:36.000
색상을 사용해야 하는 경우, 사람들이 볼 수 있도록 배경 레이어 또는 전체 버튼에 사용하세요.

00:08:36.000 --> 00:08:47.000
가능한 경우, 가독성을 위해 보정되고 유리의 색조와 대비를 유지하기 위해 동적으로 적응하기 때문에 사용자 지정 색상 대신 시스템 색상을 사용하십시오.

00:08:47.000 --> 00:08:57.000
그래서 그것들은 당신의 앱이 이 플랫폼에서 향상되도록 하기 위해 재료, 타이포그래피 및 활기와 같은 핵심 구성 요소에 대한 디자인 원칙과 업데이트입니다.

00:08:57.000 --> 00:09:06.000
이제 화면에서 공간으로 앱을 가져갈 때 쉽게 타겟팅할 수 있는 인체공학적 레이아웃을 만드는 방법을 보여줄 로레나에게 넘겨줄 것입니다.

00:09:06.000 --> 00:09:08.000
로레나: 고마워, 미켈.

00:09:08.000 --> 00:09:13.000
편안하게 느낄 수 있도록 콘텐츠를 배치하는 가장 좋은 방법을 탐구하는 것부터 시작합시다.

00:09:13.000 --> 00:09:17.000
그런 다음 타겟팅하기 쉽도록 콘텐츠의 크기를 적절하게 조정하는 방법을 보여주세요.

00:09:17.000 --> 00:09:25.000
그리고 마지막으로, 우리의 새롭고 아름다운 눈 초점 피드백과 함께 작동하는 레이아웃을 만드는 방법을 보여주세요.

00:09:25.000 --> 00:09:34.000
사람들은 주로 이 플랫폼에서 눈과 손으로 상호 작용하기 때문에, 사람들의 신체적 편안함과 안전을 우선시하는 경험을 만드는 것이 중요합니다.

00:09:34.000 --> 00:09:44.000
그 어느 때보다도, 당신은 디자인의 인체 공학을 고려해야 하며, 콘텐츠의 배치가 의도적이며 눈이나 목의 피로를 유발하지 않도록 해야 합니다.

00:09:44.000 --> 00:09:53.000
예를 들어, 목의 운동 범위 때문에, 대부분의 사람들은 머리를 위아래로 돌리는 것보다 오른쪽과 왼쪽으로 더 쉽게 돌린다.

00:09:53.000 --> 00:10:01.000
그러니 UI를 사람들의 시야에 유지하고 너무 높거나 너무 멀리 내려놓는 것에 주의하세요.

00:10:01.000 --> 00:10:07.000
앱에 큰 캔버스가 필요하다면, 키가 큰 것보다 더 넓은 종횡비로 가세요.

00:10:07.000 --> 00:10:12.000
예를 들어, Freeform에서 캔버스는 수직이 아닌 수평으로 확장된다.

00:10:12.000 --> 00:10:19.000
사람들이 당신의 콘텐츠를 편안하게 볼 수 있도록 앱에서 가장 중요한 정보를 중심으로 하는 것을 우선시하세요.

00:10:19.000 --> 00:10:24.000
이제 콘텐츠 배치에 대한 모범 사례를 다루었으니, 콘텐츠 크기에 대해 이야기해 봅시다.

00:10:24.000 --> 00:10:33.000
각 사람은 독특하고 우리의 눈은 한 사람에서 다른 사람으로 약간의 차이가 있기 때문에 요소는 타겟팅하기 쉬운 크기를 사용해야 합니다.

00:10:33.000 --> 00:10:36.000
세부 사항에 들어가자.

00:10:36.000 --> 00:10:44.000
인터랙티브 요소는 최소 60개의 공간이 있는 탭 대상 영역이 있어야 쉽게 선택할 수 있습니다.

00:10:44.000 --> 00:10:54.000
이것은 UI 요소가 주변에 충분한 공간을 추가하는 한 44점인 표준 버튼과 같이 시각적으로 더 작을 수 있다는 것을 의미합니다.

00:10:54.000 --> 00:11:06.000
따라서 이 버튼의 경우, 항상 주변에 최소 8개의 빈 공간이 있어야 하므로 최소 목표 영역이 60점인 것을 충족해야 합니다.

00:11:06.000 --> 00:11:16.000
기억하기 쉬운 것은, 스택에 여러 개의 버튼이 있어야 한다면, 그 사이에 최소 16개의 간격이 있는 표준 시스템 버튼을 사용하세요.

00:11:16.000 --> 00:11:22.000
이제, 공개 컨트롤과 같은 시각적으로 더 작은 요소를 사용해야 한다고 가정해 봅시다.

00:11:22.000 --> 00:11:28.000
섹션 헤더와 같은 영역에서 28점인 미니 버튼을 사용할 수 있습니다.

00:11:28.000 --> 00:11:35.000
이 버튼은 작아 보일 수 있지만, 주변에 60점의 공간이 있기 때문에, 선택하기 쉽습니다.

00:11:35.000 --> 00:11:37.000
또 다른 예를 살펴봅시다.

00:11:37.000 --> 00:11:44.000
여기, 이 버튼은 옆에 있는 텍스트가 상호 작용하지 않기 때문에 여전히 충분한 공간이 있습니다.

00:11:44.000 --> 00:11:51.000
마찬가지로, 크고 초대형 버튼을 사용하면 주변 간격이 덜 필요합니다.

00:11:51.000 --> 00:11:58.000
그래서, 항상 모든 대화형 요소에 최소 60개의 공간을 제공하는 것을 잊지 마세요.

00:11:58.000 --> 00:12:04.000
이제 레이아웃에서 요소의 크기를 조정하는 방법에 대해 이야기했으므로, 초점 피드백에 대해 이야기해 봅시다.

00:12:04.000 --> 00:12:09.000
포커스 피드백은 이 플랫폼의 모든 대화형 요소에 내장된 강력한 도구입니다.

00:12:09.000 --> 00:12:17.000
사람들이 시스템 제공 구성 요소를 볼 때, 그들은 자동으로 미묘한 시각적 밝기 또는 호버 효과를 표시합니다.

00:12:17.000 --> 00:12:25.000
이 호버 효과는 사람들이 인터페이스의 어느 부분이 상호 작용하는지 보는 것만으로 이해할 수 있게 해준다.

00:12:25.000 --> 00:12:31.000
공유 버튼과 같이 항목이 비활성 상태가 되면, 더 이상 포커스 피드백을 제공하지 않습니다.

00:12:31.000 --> 00:12:40.000
이것은 사람들에게 그들이 의도된 요소에 집중하고 있다는 확신을 주며, 이는 그들이 손가락을 두드려 그것을 선택할 수 있다는 것을 의미한다.

00:12:40.000 --> 00:12:44.000
레이아웃을 만들 때, 호버 효과를 고려하는 것이 중요합니다.

00:12:44.000 --> 00:12:54.000
예를 들어, 목록이나 메뉴를 만드는 경우, 호버 효과가 겹치는 것을 피하기 위해 각 항목 사이에 소량의 패딩을 고려해야 합니다.

00:12:54.000 --> 00:12:57.000
네 점이 추천된다.

00:12:57.000 --> 00:13:05.000
락업을 설계할 때, 사람들이 그것에 집중할 때 시스템이 호버 효과를 표시할 수 있는 모양을 포함하세요.

00:13:05.000 --> 00:13:08.000
여기, 그 아래에 텍스트가 있는 이미지가 있습니다.

00:13:08.000 --> 00:13:11.000
각 잠금은 하나의 대화형 요소이다.

00:13:11.000 --> 00:13:16.000
사람들이 볼 때 밝아지도록 사용자 지정 지역을 정의해야 합니다.

00:13:16.000 --> 00:13:21.000
이것은 그들이 전체 영역이 선택할 수 있는 단일 요소라는 것을 이해하는 데 도움을 준다.

00:13:21.000 --> 00:13:25.000
그리고 각각의 모양을 포함하는 사이에 작은 공간을 두는 것을 잊지 마세요.

00:13:25.000 --> 00:13:34.000
명심해야 할 또 다른 것은 중첩된 요소가 서로 동심원으로 유지하는 상대적인 모서리 반경과 패딩을 갖도록 하는 것이다.

00:13:34.000 --> 00:13:40.000
모서리의 크기를 조정하는 방법을 알아내는 데 도움이 되도록, 이 간단한 공식을 사용할 수 있습니다.

00:13:40.000 --> 00:13:48.000
중첩된 요소의 모서리 반경과 외부 컨테이너 사이의 패딩은 외부 모서리 반경을 얻습니다.

00:13:48.000 --> 00:13:56.000
그리고 기억하세요, 모서리를 매끄럽게 유지하기 위해, 그것들을 연속적인 모서리로 설정해야 합니다.

00:13:56.000 --> 00:14:04.000
시스템 전반에 걸쳐, 모든 요소는 창의 관계에서 모서리의 요소에 이르기까지 서로 동심원이다.

00:14:04.000 --> 00:14:11.000
그러니 중첩된 요소들을 서로 동심원으로 유지하는 것을 잊지 마세요. 이것은 그들이 함께 속한 것처럼 느끼는 데 도움이 될 것이기 때문입니다.

00:14:11.000 --> 00:14:17.000
이제 레이아웃을 만들기 위한 모범 사례를 다루었으니, 사용할 구성 요소를 자세히 살펴보겠습니다.

00:14:17.000 --> 00:14:24.000
이 섹션에서는 기존 플랫폼에서 지식을 활용하여 공간 컴퓨팅에 적용하는 방법을 보여드리겠습니다.

00:14:24.000 --> 00:14:32.000
입력 모델에 대한 간략한 개요로 시작한 다음, 창, 탭 바 및 사이드바로 앱의 핵심 구조를 설정하는 방법에 대해 자세히 알아보겠습니다.

00:14:32.000 --> 00:14:36.000
그런 다음 우리는 콘텐츠를 제시하는 새로운 방법에 대해 이야기할 것이다.

00:14:36.000 --> 00:14:39.000
그리고 마지막으로, 우리는 양식을 탐구할 것이다.

00:14:39.000 --> 00:14:42.000
입력으로 시작합시다.

00:14:42.000 --> 00:14:49.000
앞서 언급했듯이, 사람들은 눈, 손, 목소리로 장치와 상호 작용합니다.

00:14:49.000 --> 00:14:55.000
그들은 주로 멀리서 요소를 보고 손가락을 두드려서 이것을 한다.

00:14:55.000 --> 00:15:00.000
그러나, 사람들은 또한 그것을 만져서 요소를 직접 선택할 수 있다.

00:15:00.000 --> 00:15:13.000
또한, 사람들은 키보드나 트랙패드를 연결하여 다양한 입력으로 시스템과 상호 작용할 수 있습니다.

00:15:13.000 --> 00:15:21.000
시스템과 상호 작용하는 것은 마법처럼 느껴지지만, 요소가 각 모델에 대해 적절한 피드백을 제공해야 한다는 것을 의미합니다.

00:15:21.000 --> 00:15:28.000
우리의 모든 시스템 구성 요소는 각 입력을 지원하도록 제작되었습니다. 그래서, 시스템 구성 요소를 사용하세요.

00:15:28.000 --> 00:15:35.000
그들은 당신이 인터페이스를 빠르게 만들 수 있도록 도와주므로 이 새로운 매체에서 당신의 앱을 독특하게 만드는 것을 찾는 데 시간을 할애할 수 있습니다.

00:15:35.000 --> 00:15:40.000
입력에 대해 자세히 알아보려면, "공간 입력을 위한 디자인" 세션을 확인하세요.

00:15:40.000 --> 00:15:44.000
이제, 몇 가지 예를 살펴봅시다.

00:15:44.000 --> 00:15:49.000
iOS에 익숙하다면, 이 플랫폼의 많은 구성 요소가 당신에게 친숙해 보일 것입니다.

00:15:49.000 --> 00:15:54.000
창, 탭 바, 사이드바부터 시작합시다.

00:15:54.000 --> 00:15:57.000
iOS 앱의 핵심 구조부터 시작합시다.

00:15:57.000 --> 00:16:06.000
불투명한 재료가 있고 모든 요소가 맨 위에 앉을 수 있는 캔버스를 제공하는 창이 필요합니다.

00:16:06.000 --> 00:16:14.000
미켈이 말했듯이, 창문은 사람들이 그들의 공간에서 앱을 유동적으로 움직일 수 있도록 아래에 창 막대가 있는 유리 재료로 만들어졌다.

00:16:14.000 --> 00:16:19.000
마찬가지로, 그 위에, 당신은 당신의 콘텐츠를 갖게 될 것입니다.

00:16:19.000 --> 00:16:32.000
수평으로 배치된 창 하단의 iPhone에는 메인 내비게이션을 위한 탭 바 컨트롤러가 있어 한 번의 탭으로 앱의 최상위 섹션에 빠르게 액세스할 수 있습니다.

00:16:32.000 --> 00:16:38.000
여기서, 탭 바는 수직이며, 창의 왼쪽에 고정된 위치에 떠 있다.

00:16:38.000 --> 00:16:48.000
방해가 되고 쉽게 접근할 수 있도록 설계되었으며, 필요한 곳에 있으며, 사람들이 주요 콘텐츠를 빼앗지 않고도 앱에서 어디에 있는지 볼 수 있습니다.

00:16:48.000 --> 00:16:55.000
일반적으로, 당신은 그 느낌을 가볍게 유지하고 싶기 때문에, 여섯 개 이상의 항목을 가지고 있는 것을 피하세요.

00:16:55.000 --> 00:16:59.000
사람들이 탭 바를 볼 때, 그들은 항목을 빠르게 선택할 수 있다.

00:16:59.000 --> 00:17:07.000
그리고 그들이 그것을 조금 더 오래 본다면, 그것은 자동으로 확장되어 각 섹션에 대한 라벨을 보여준다.

00:17:07.000 --> 00:17:15.000
사람들이 외면하면 자동으로 다시 닫혀 사람들이 콘텐츠에 집중할 수 있게 해준다.

00:17:15.000 --> 00:17:23.000
이 예제의 앨범과 같이 하위 탐색을 제공해야 하는 경우, 사이드바는 탭 표시줄 옆 창에 있습니다.

00:17:23.000 --> 00:17:27.000
이것은 사람들에게 그들이 그 탭에서 어디에 있는지에 대한 명확한 감각을 준다.

00:17:27.000 --> 00:17:34.000
이제 앱의 핵심 구조를 다루었으니, 우리가 추가한 새로운 프레젠테이션 스타일인 장식품으로 들어가 봅시다.

00:17:34.000 --> 00:17:41.000
사진 앱에는 몇 년, 몇 달, 며칠 사이를 탐색할 수 있는 상단 중앙에 플로팅 액세서리 요소가 있습니다.

00:17:41.000 --> 00:17:49.000
이 플랫폼에서, 우리는 스크린에 묶여 있지 않기 때문에, 그 액세서리는 창문 약간 앞에 있는 하단에 장식품으로 배치됩니다.

00:17:49.000 --> 00:17:57.000
이것은 사람들에게 계층 구조를 만들기 위해 깊이를 사용하여 쉽게 접근할 수 있는 추가적인 지속적인 컨트롤을 제공한다.

00:17:57.000 --> 00:18:00.000
장식품은 도구 모음을 제시하는 좋은 방법이다.

00:18:00.000 --> 00:18:05.000
그들은 사람들이 편리한 장소에서 콘텐츠와 관련된 빠른 작업을 수행할 수 있게 해준다.

00:18:05.000 --> 00:18:08.000
그리고 그들은 당신의 앱에 약간의 깊이를 더합니다.

00:18:08.000 --> 00:18:16.000
장식품은 보통 버튼 모음이고 자체 유리 용기에 앉아 있기 때문에, 이곳은 테두리 없는 버튼을 사용하기에 완벽한 장소입니다.

00:18:16.000 --> 00:18:24.000
이 경우, 이것들이 상호 작용하는 요소라는 것은 분명하며, 사람들이 그것들을 볼 때 여전히 호버 효과를 얻을 것이다.

00:18:24.000 --> 00:18:27.000
여기 음악 앱에서 장식품의 또 다른 훌륭한 용도가 있습니다.

00:18:27.000 --> 00:18:34.000
지금 재생 중인 컨트롤은 앱의 어디에 있든 지속되는 장식품으로 표시됩니다.

00:18:34.000 --> 00:18:39.000
이것은 사람들이 음악을 제어하면서 다음 노래를 검색할 수 있게 해준다.

00:18:39.000 --> 00:18:45.000
장식품이 창문의 하단 가장자리에 있을 때, 하단 가장자리와 20점 겹치도록 놓으세요.

00:18:45.000 --> 00:18:51.000
이것은 장식품이 너무 많은 콘텐츠를 차단하지 않고 메인 창과 통합된 것처럼 느낄 수 있도록 도와줍니다.

00:18:51.000 --> 00:19:01.000
그리고 그들은 정말 멋져 보여, 스크롤할 때 유리를 통해 내용물에서 색을 끌어당긴다.

00:19:01.000 --> 00:19:05.000
장식품은 완전히 나타나고 사라질 수 있다.

00:19:05.000 --> 00:19:09.000
그러나, 그것은 하나의 콘텐츠에 집중하는 동안에만 권장된다.

00:19:09.000 --> 00:19:14.000
예를 들어, 사진을 보거나 영화를 보는 것.

00:19:14.000 --> 00:19:22.000
이 예에서처럼, 탭 한 번으로, 우리는 사람들이 주요 경험에서 주의를 산만하게 하지 않고 중요한 컨트롤에 빠르게 접근할 수 있도록 합니다.

00:19:22.000 --> 00:19:29.000
또한, 장식품은 확장하거나, 추가 콘텐츠를 제시하거나, 심지어 자체 내비게이션 계층 구조를 가질 수 있다.

00:19:29.000 --> 00:19:32.000
그러니 앱에서 장식품이 어디에 맞는지 찾으세요.

00:19:32.000 --> 00:19:37.000
그것들은 유연하며 콘텐츠를 막지 않고 앱에 깊이를 제공합니다.

00:19:37.000 --> 00:19:42.000
이제 장식품을 다루었으니, 메뉴, 팝오버, 시트로 들어가 봅시다.

00:19:42.000 --> 00:19:49.000
iPad에서 메뉴는 호출 버튼의 앞쪽 가장자리에 정렬되며, 메뉴가 열리면 버튼이 어두워집니다.

00:19:49.000 --> 00:19:54.000
팝오버는 호출 요소를 가리키고 탐색 표시줄은 비활성 상태가 됩니다.

00:19:54.000 --> 00:19:58.000
이 플랫폼에서는 메뉴와 팝오버를 창 밖으로 확장할 수 있습니다.

00:19:58.000 --> 00:20:06.000
그것들은 기본적으로 중앙에 나타나며, 콘텐츠가 항상 사용자가 보고 있는 바로 그 곳에 나타나도록 한다.

00:20:06.000 --> 00:20:12.000
항상 명심해야 할 한 가지는 그것들을 호출하는 버튼을 선택한 상태로 바꾸는 것이다.

00:20:12.000 --> 00:20:18.000
이 플랫폼에서, 우리는 항상 흰색 배경에 검은색 라벨을 사용하여 버튼이 선택되어 있음을 보여줍니다.

00:20:18.000 --> 00:20:25.000
이것은 사람들이 화살표 없이 어떤 버튼이 팝오버를 호출했는지에 대한 명확한 피드백을 받을 수 있도록 도와줍니다.

00:20:25.000 --> 00:20:32.000
이 플랫폼에서는 일반적으로, 선택되지 않는 한 흰색 배경의 버튼을 사용하지 마세요.

00:20:32.000 --> 00:20:34.000
마지막으로, 시트에 대해 이야기해 봅시다.

00:20:34.000 --> 00:20:40.000
이 시스템에서 시트는 모달 뷰로 표시되며, 앱의 중앙에 나타납니다.

00:20:40.000 --> 00:20:43.000
모달은 부모 창과 동일한 Z 위치를 포함한다.

00:20:43.000 --> 00:20:46.000
부모 창은 뒤로 밀고 어두워진다.

00:20:46.000 --> 00:20:54.000
이것은 경험에 초점을 맞추고 시트가 기각될 때까지 사람들이 부모 보기와 상호 작용하는 것을 방지합니다.

00:20:54.000 --> 00:21:02.000
다른 시트를 제시해야 하는 경우, 2차 모달이 모든 것을 뒤로 밀어내는 디밍의 추가 레이어와 함께 앞에 나타날 수 있습니다.

00:21:02.000 --> 00:21:05.000
그러니 옆에서 다시 살펴보자.

00:21:05.000 --> 00:21:13.000
Z에서 이 모든 요소를 쌓고 있기 때문에, 중첩된 뷰에 푸시 내비게이션을 사용하는 것을 고려해 보세요.

00:21:13.000 --> 00:21:17.000
다음은 모달에서 푸시 내비게이션의 빠른 예입니다.

00:21:17.000 --> 00:21:21.000
보조 보기는 닫는 대신 뒤로 버튼을 표시할 것이다.

00:21:21.000 --> 00:21:26.000
또한, 닫기 및 뒤로 버튼이 왼쪽 상단 모서리에 어떻게 있는지 주목하세요.

00:21:26.000 --> 00:21:31.000
시스템 패턴으로, 항상 왼쪽 상단 모서리에 닫기 버튼을 배치하세요.

00:21:31.000 --> 00:21:43.000
미켈: 이제 앱을 구축하고 시스템 구성 요소를 사용하는 기본 사항을 이해했으므로, 앱을 특별하게 만드는 것과 창 외부 공간을 활용하여 풍부한 공간적 순간을 만드는 방법에 대해 생각해 보세요.

00:21:43.000 --> 00:21:59.000
예를 들어, 사진에서 우리는 브라우징 경험을 친숙하게 유지하고 공간 캡처와 같은 이미지를 경험할 수 있는 새로운 방법을 만드는 데 집중하여 순간을 재현하고 독특하고 특별한 방식으로 콘텐츠를 경험할 수 있는 몰입형 방법을 제공합니다.

00:21:59.000 --> 00:22:07.000
우리는 주변 환경과 조화를 이루는 재료를 사용하여 접근 가능하고 친숙하며 직관적인 앱을 설계하고 개발하는 방법을 다루었습니다.

00:22:07.000 --> 00:22:16.000
다양한 계층의 깊이와 시각적으로 매력적일 뿐만 아니라 이 새로운 플랫폼에서 친숙하고 사용하기 쉬운 끝없는 구성 요소를 활용하는 인터페이스.

00:22:16.000 --> 00:22:31.000
우리의 모든 시스템 구성 요소는 다양한 입력을 지원하도록 설계되었으며, 나머지 Apple 생태계와의 일관성을 유지하여 디자이너 또는 개발자로서 획기적인 몰입형 공간적 경험을 생성하는 데 집중할 수 있습니다.

00:22:31.000 --> 00:22:32.000
봐줘서 고마워.

00:22:32.000 --> 00:22:34.000
둘 다: 안녕!

00:22:34.000 --> 23:59:59.000
♪

