WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
폴: 안녕.

00:00:11.000 --> 00:00:15.000
저는 폴이고, SF 심볼 앱에서 일하고 있습니다.

00:00:15.000 --> 00:00:24.000
그들의 소개 이후, SF 심볼은 애플 플랫폼을 그들이 하는 방식으로 보이고 느끼게 하는 것의 큰 부분이었다.

00:00:24.000 --> 00:00:32.000
기호는 일관성이 있다; 애플의 플랫폼에는 수천 개의 기호가 내장되어 있으며, 공통된 시각적 디자인과 행동을 공유한다.

00:00:32.000 --> 00:00:36.000
그들은 앱과 인터페이스를 즉시 친숙하게 만들 수 있다.

00:00:36.000 --> 00:00:50.000
기호는 사용자 정의할 수 있습니다. 필요에 맞는 내장 기호가 없는 경우, SF 기호 앱을 사용하여 시스템에서 제공하는 것과 동일한 강력한 기능을 갖춘 자신만의 기호를 만들 수 있습니다.

00:00:50.000 --> 00:00:53.000
그리고 물론, 상징은 표현력이 있다.

00:00:53.000 --> 00:00:58.000
기호는 소량의 스크린 부동산에서 복잡한 개념을 전달할 수 있다.

00:00:58.000 --> 00:01:01.000
그들은 언어를 초월하는 방식으로 아이디어를 전달할 수 있다.

00:01:01.000 --> 00:01:06.000
그리고 그들은 당신의 앱을 더 생생하고 장난스럽게 만들 수 있습니다.

00:01:06.000 --> 00:01:13.000
그리고 이제, SF 심볼 5와 함께, 심볼은 애니메이션으로 완전히 새로운 차원의 표현력을 얻고 있다.

00:01:13.000 --> 00:01:17.000
그리고 SF 심볼 앱은 당신이 이 새로운 차원을 탐험하는 데 도움을 주기 위해 여기에 있습니다.

00:01:17.000 --> 00:01:45.000
오늘, 우리는 SF Symbols 앱을 사용하여 새로운 애니메이션 효과를 테스트하는 방법, 새로운 사용자 지정 기호를 만들고 기존 사용자 지정 기호를 업데이트하여 모든 새로운 애니메이션 기능과 완벽하게 작동하도록 하는 방법, 사용자 지정 기호를 기반으로 친숙하고 인식 가능한 기호를 만드는 새로운 방법, 그리고 마지막으로 앱에서 사용하는 기호가 이전 플랫폼에서도 멋지게 보이도록 하는 방법을 살펴볼 것입니다.

00:01:45.000 --> 00:01:51.000
그래서 SF Symbols 앱을 실행하고 몇 가지 예를 살펴보는 것으로 시작합시다.

00:01:51.000 --> 00:01:55.000
투어의 첫 번째 정류장은 사이드바의 새로운 탭입니다.

00:01:55.000 --> 00:02:02.000
이것은 애니메이션 검사기이며, 짐작할 수 있듯이, 새로운 애니메이션 효과를 미리 보는 데 사용할 수 있습니다.

00:02:02.000 --> 00:02:05.000
더 잘 보기 위해 갤러리 뷰로 전환합시다.

00:02:05.000 --> 00:02:13.000
그리고 우리는 실험하기 위해 내장된 스피커 기호 중 하나를 잡을 것이다.

00:02:13.000 --> 00:02:17.000
이 팝업 버튼에서 새로운 애니메이션 효과를 선택할 수 있습니다.

00:02:17.000 --> 00:02:19.000
바운스 애니메이션은 시작하기에 좋은 장소이다.

00:02:19.000 --> 00:02:33.000
미리보기 버튼을 누르면 메인 갤러리 보기와 그 아래의 기호 행과 사이드바의 미리보기 영역에서 애니메이션이 재생되는 것을 볼 수 있으므로 모든 다른 렌더링 모드에서 볼 수 있습니다.

00:02:33.000 --> 00:02:38.000
미리보기 버튼 주변에서 애니메이션을 구성하기 위한 컨트롤을 볼 수 있습니다.

00:02:38.000 --> 00:02:51.000
기호가 위쪽으로 튕겨야 하는지 아니면 아래쪽으로 튕겨야 하는지, 기호의 레이어가 별도로 튕겨지거나 전체 기호가 한 번에 튕겨지기를 원하는지와 같은 옵션을 선택할 수 있습니다.

00:02:51.000 --> 00:02:58.000
이러한 설정 중 일부를 변경했을 때, 미리보기 영역 아래의 라벨이 "자동"에서 "수정됨"으로 변경되었습니다.

00:02:58.000 --> 00:03:03.000
앱의 코드를 작성할 때, 모든 애니메이션 유형에는 기본 설정이 제공됩니다.

00:03:03.000 --> 00:03:11.000
SF 심볼 앱을 실행하면, 기본 설정이 미리 선택되어 있으며, 여기에 "자동"이라는 단어가 표시됩니다.

00:03:11.000 --> 00:03:18.000
기본값이 아닌 다른 것으로 전환하면, 설정을 변경했다는 것을 알리기 위해 여기에 "수정됨"이라는 단어가 표시됩니다.

00:03:18.000 --> 00:03:23.000
여기에 나타나는 재설정 버튼을 클릭하여 기본값으로 돌아갈 수 있습니다.

00:03:23.000 --> 00:03:37.000
원하는 구성을 찾으면, 코드에서 직접 지정하려면, 이 버튼을 클릭하여 Swift 또는 Objective-C API에 필요한 효과의 이름을 복사할 수 있습니다.

00:03:37.000 --> 00:03:41.000
하지만 새로운 애니메이션을 다시 확인해 봅시다.

00:03:41.000 --> 00:03:47.000
이 스피커 기호는 또한 다양한 색상을 지원합니다.

00:03:47.000 --> 00:03:53.000
그럼 가변 색상 애니메이션을 시도해 봅시다.

00:03:53.000 --> 00:04:01.000
누적 옵션을 선택하면, 가변 색상 레이어가 점진적으로 활성화된 다음, 모두 함께 퇴색합니다.

00:04:01.000 --> 00:04:06.000
우리가 Iterative를 선택할 때, 한 번에 하나의 레이어만 활성화됩니다.

00:04:06.000 --> 00:04:13.000
그리고 우리는 이 구성이 어떻게 다른 느낌을 만드는지 보기 위해 반전 옵션을 켤 수 있습니다.

00:04:13.000 --> 00:04:16.000
그래서 그것은 새로운 애니메이션 효과를 빠르게 살펴보는 것이다.

00:04:16.000 --> 00:04:24.000
우리는 시스템을 제공하는 SF 기호를 사용하여 미리 보고 있지만, 항상 그렇듯이, 내장된 기호는 이야기의 절반에 불과합니다.

00:04:24.000 --> 00:04:31.000
앱에 사용자 지정 기호가 있는 경우, SF 기호 앱은 애니메이션 각광을 공유할 준비가 되었는지 확인하는 데 도움이 될 수 있습니다.

00:04:31.000 --> 00:04:38.000
이제, 저는 작년에 딸과 함께 퍼즐 큐브를 푸는 연습을 돕기 위해 앱을 작업할 때 몇 가지 사용자 지정 기호를 가지고 있습니다.

00:04:38.000 --> 00:04:46.000
올해, 저는 스피드큐빙을 졸업했기 때문에, 큐브를 해결하는 데 얼마나 걸리는지 추적할 수 있도록 앱을 업데이트하고 싶습니다.

00:04:46.000 --> 00:04:51.000
작년의 사용자 지정 기호를 잡고 애니메이션을 준비하기 시작합시다.

00:04:51.000 --> 00:04:54.000
여기 우리가 작년에 만든 3x3 큐브 기호가 있습니다.

00:04:54.000 --> 00:05:11.000
우리는 계층 및 다색 렌더링을 위해 주석을 달았고, 다양한 색상을 적용할 수 있도록 앞면을 다른 레이어로 나누었다.

00:05:11.000 --> 00:05:18.000
내 기호는 가변 색상을 가지고 있기 때문에, 상자에서 바로 가변 색상 애니메이션을 지원합니다.

00:05:18.000 --> 00:05:22.000
나는 이것을 로딩 표시기에 사용할 수 있다.

00:05:22.000 --> 00:05:26.000
다른 애니메이션을 봅시다.

00:05:26.000 --> 00:05:29.000
펄스는 내 해결 타이머가 일시 중지될 때 좋을 것이다.

00:05:29.000 --> 00:05:37.000
하지만 미리보기 버튼을 누르면, By Layer 설정을 선택했음에도 불구하고 전체 기호가 펄럭입니다.

00:05:37.000 --> 00:05:44.000
주석 목록에는 By Layer 설정을 사용할 때 어떤 레이어가 펄스해야 하는지 지정할 수 있는 새로운 컨트롤이 있습니다.

00:05:44.000 --> 00:05:49.000
내 기호의 레이어 중 어느 것도 표시되지 않으면, 전체 기호가 깜박일 것이다.

00:05:49.000 --> 00:05:57.000
그래서 앞면을 구성하는 모든 레이어를 펄스로 표시하고 다시 미리 봅시다.

00:05:57.000 --> 00:05:59.000
그게 우리가 원하는 행동이야.

00:05:59.000 --> 00:06:02.000
내 타이머가 일시 정지되면 이것은 멋져 보일 것이다.

00:06:02.000 --> 00:06:07.000
다른 모든 애니메이션은 모션을 사용하므로, 그것이 우리가 다음으로 확인해야 한다.

00:06:07.000 --> 00:06:21.000
SF Symbols 앱의 버전 4 또는 이전 버전에서 내보낸 기호가 있거나 Xcode 14와 호환되도록 내보낸 경우 모션 정보가 포함되지 않으며 항상 앱에서 전체 기호로 이동합니다.

00:06:21.000 --> 00:06:29.000
하지만 Xcode 15에서 사용하기 위해 이 버전의 SF Symbols 앱 버전 5에서 내보낼 때 어떤 일이 일어나는지 봅시다.

00:06:29.000 --> 00:06:35.000
나는 바운스 애니메이션으로 돌아가서 퍼즐 큐브 기호로 플레이할 것이다.

00:06:35.000 --> 00:06:37.000
그건 많은 움직임이야!

00:06:37.000 --> 00:06:42.000
기본적으로, 기호의 모든 레이어는 By Layer가 선택되면 독립적으로 이동합니다.

00:06:42.000 --> 00:06:47.000
이제, 나는 심볼 애니메이션에 대해 꽤 흥분되지만, 이것은 너무 좋은 것일 수 있다.

00:06:47.000 --> 00:06:51.000
우리는 주석의 새로운 기능으로 이것을 고칠 수 있다.

00:06:51.000 --> 00:06:56.000
이제 모든 하위 레이어를 함께 애니메이션화할 수 있는 레이어 그룹을 만들 수 있습니다.

00:06:56.000 --> 00:07:04.000
나는 앞면을 구성하는 모든 레이어를 선택하고 새로운 레이어 그룹에 추가할 것이다.

00:07:04.000 --> 00:07:14.000
레이어 그룹 내부에서, 모든 레이어는 여전히 자체 주석과 설정을 유지하지만, 이제 모두 함께 움직인다.

00:07:14.000 --> 00:07:21.000
이제 움직임이 적지만, 큐브의 다른 조각들이 따로 움직이는 것은 여전히 조금 이상해 보인다.

00:07:21.000 --> 00:07:34.000
그러니 우리 기호의 모든 레이어를 실행 취소하고 선택하고 그것들을 모두 하나의 그룹에 추가합시다.

00:07:34.000 --> 00:07:36.000
그것은 이 상징의 정신과 일치한다.

00:07:36.000 --> 00:07:43.000
큐브의 다른 얼굴들은 실제로 따로 움직이지 않으며, 이 그림에서 깊이가 다른 수준에 있지 않다.

00:07:43.000 --> 00:07:52.000
이 모든 레이어를 함께 그룹화함으로써, 우리는 코드가 레이어별로 요청하더라도 큐브가 항상 단일 단위로 애니메이션되도록 했습니다.

00:07:52.000 --> 00:08:00.000
궁극적으로, 당신은 사용자 지정 기호를 개별적으로 살펴보고 어떤 모션 그룹이 각각에 적합한지 결정해야 합니다.

00:08:00.000 --> 00:08:06.000
이제, 나는 이전에 상징의 강점 중 하나가 일관성과 친숙함이라고 언급했다.

00:08:06.000 --> 00:08:11.000
이것은 사용자 지정 기호로 작업할 때 기억해야 할 중요한 개념입니다.

00:08:11.000 --> 00:08:13.000
여기 제가 작년에 작업했던 또 다른 사용자 지정 기호가 있습니다.

00:08:13.000 --> 00:08:17.000
그것은 내 퍼즐 큐브이지만, 채워진 원 위에 놓여 있다.

00:08:17.000 --> 00:08:22.000
이 원형 인클로저는 SF 심볼의 일반적인 디자인 요소이다.

00:08:22.000 --> 00:08:28.000
내장 라이브러리에는 이 비디오 기호와 같은 유사한 원형 처리를 사용하는 많은 기호가 있습니다.

00:08:28.000 --> 00:08:41.000
그리고 원형 테두리나 슬래시 또는 배지와 같은 수정자와 같은 SF 심볼 레퍼토리 전반에 걸쳐 이러한 종류의 재사용 가능한 디자인 패턴의 다른 많은 예가 있습니다.

00:08:41.000 --> 00:08:49.000
이러한 치료의 일관성은 SF 심볼을 즉시 알아볼 수 있고 친숙하게 만드는 핵심 요소 중 하나이다.

00:08:49.000 --> 00:08:55.000
사용자 지정 기호는 친숙함의 모든 이점을 얻기 위해 이러한 치료법과 일치하도록 노력해야 한다.

00:08:55.000 --> 00:08:59.000
그렇다면 내 사용자 지정 기호가 시스템과 일치하는지 어떻게 확인할 수 있을까요?

00:08:59.000 --> 00:09:07.000
음, 나는 시스템 기호 라이브러리를 통해 비슷한 기호의 예를 찾고 새로운 그림을 그릴 수 있다.

00:09:07.000 --> 00:09:22.000
그리고 나는 기호가 각각의 다른 렌더링 모드에서 어떻게 주석이 되는지, 레이어별로 애니메이션될 때 어떻게 움직이는지, 어떻게 맥박이 뛰는지, 그리고 이 인클로저에서 가변 색상 설정이 어떻게 바뀔 수 있는지 볼 수 있었다.

00:09:22.000 --> 00:09:30.000
그리고 나서 나는 다른 인클로저, 슬래시 또는 배지와 같은 다른 일반적인 디자인 패턴에 대해 같은 일을 할 수 있다.

00:09:30.000 --> 00:09:33.000
하지만 그건 기억해야 할 게 많아.

00:09:33.000 --> 00:09:39.000
그리고 나는 차라리 내 퍼즐 큐브의 최상층을 푸는 가장 빠른 방법을 기억하기 위해 그 정신적 공간을 사용하고 싶다.

00:09:39.000 --> 00:09:51.000
SF 기호에 대한 우리의 목표 중 하나는 항상 사용자 지정 기호가 시스템 제공 기호와 함께 가능한 한 쉽게 일치하여 일관되고 친숙한 경험을 제공할 수 있도록 돕는 것입니다.

00:09:51.000 --> 00:09:57.000
그래서 올해 우리는 심볼 구성 요소를 소개하게 되어 매우 기쁩니다.

00:09:57.000 --> 00:10:05.000
심볼 구성 요소는 시스템이 제공하는 SF 심볼처럼 보이고 느껴지는 예술 작품과 행동을 제공한다.

00:10:05.000 --> 00:10:16.000
사용자 지정 기호 중 하나를 가지고 기호 구성 요소와 결합하면, 즉시 내장된 친구처럼 보이고 느껴지는 새로운 기호를 얻을 수 있습니다.

00:10:16.000 --> 00:10:20.000
몇 가지 구성 요소를 내 믿음직한 퍼즐 큐브 기호와 결합하여 어떻게 작동하는지 봅시다.

00:10:20.000 --> 00:10:27.000
사용자 지정 기호의 컨텍스트 메뉴를 가져오고 기호와 구성 요소 결합을 선택하는 것으로 시작하겠습니다.

00:10:27.000 --> 00:10:33.000
나타나는 시트에서, 나는 구성 요소 라이브러리를 살펴보고 내가 사용하고 싶은 것을 선택할 수 있다.

00:10:33.000 --> 00:10:38.000
인클로저, 배지 및 슬래시 구성 요소가 있습니다.

00:10:38.000 --> 00:10:45.000
우리는 slash, badge.plus, circle, 그리고 circle.fill로 시작할 것이다.

00:10:45.000 --> 00:10:47.000
그리고 그게 다야.

00:10:47.000 --> 00:10:51.000
이 새로운 기호가 내 사용자 지정 기호 라이브러리에 나타난 것을 볼 수 있으며, 이미 멋져 보입니다.

00:10:51.000 --> 00:10:55.000
플러스 배지는 다색을 위해 올바르게 색칠되어 있다.

00:10:55.000 --> 00:11:02.000
슬래시는 이미 그 뒤에 있는 퍼즐 큐브와 별도로 움직이고 있다.

00:11:02.000 --> 00:11:12.000
그리고 .circle.fill 버전은 이미 계층 모드에서 기본 레이어를 사용하도록 설정되어 있지만, 그 뒤의 원을 통해 흑백으로 지울 수 있습니다.

00:11:12.000 --> 00:11:17.000
그리고 그것은 심지어 내 다양한 색상 설정을 보존했다.

00:11:17.000 --> 00:11:28.000
기본 기호의 모양과 디자인에 따라, 주석 컨트롤이 일반적으로 있는 사이드바에서 할 수 있는 몇 가지 추가 조정을 할 수 있습니다.

00:11:28.000 --> 00:11:38.000
예를 들어, 시각적 아티팩트를 피하기 위해 배지의 위치를 약간 찌르거나, 심지어 기호의 반대편으로 옮기고 싶을 수도 있습니다.

00:11:38.000 --> 00:11:47.000
또는 기호가 충분히 덮여 있는지 확인하기 위해 슬래시의 길이를 변경하고 싶을 수도 있습니다.

00:11:47.000 --> 00:11:53.000
이제, 당신은 또한 당신의 새로운 상징이 상징하는 모든 다른 저울과 가중치에서 멋지게 보이는지 확인하고 싶을 것입니다.

00:11:53.000 --> 00:11:58.000
세 개의 저울과 아홉 개의 가중치로, 그것은 총 27개의 다른 변형이다.

00:11:58.000 --> 00:12:08.000
하지만 좋은 소식은 심볼 구성 요소가 대부분의 작업을 처리하는 가변 템플릿으로 구동된다는 것입니다.

00:12:08.000 --> 00:12:18.000
가변 템플릿은 SF 심볼 3에 도입되었습니다. 소규모로 세 개의 도면만 제공하면 됩니다: 초경량, 레귤러 및 블랙 가중치에 대해 각각 하나씩.

00:12:18.000 --> 00:12:29.000
그런 다음, 각 도면에서 사용한 베지어 경로가 호환되는 한, 시스템은 도면을 함께 혼합하여 나머지 24개의 가능한 변형을 만들 수 있습니다.

00:12:29.000 --> 00:12:34.000
그리고 네가 나에게 묻는다면, 3의 가격으로 27개의 기호를 얻는 것은 꽤 좋은 거래이다.

00:12:34.000 --> 00:12:42.000
심볼 구성 요소는 같은 방식으로 작동합니다: 스몰 + 울트라라이트, 스몰 + 레귤러 및 스몰 + 블랙 변형을 제어할 수 있습니다.

00:12:42.000 --> 00:12:50.000
갤러리 보기 상단에 미리보기 세트가 있으므로 세 가지 다른 가중치로 기호를 보고 빠르게 전환할 수 있습니다.

00:12:50.000 --> 00:13:00.000
많은 경우, 내가 이 슬래시를 더 길게 했을 때 했던 것처럼 레귤러 웨이트를 조정하기만 하면 되며, 변경 사항은 초경량과 블랙으로 이월될 것입니다.

00:13:00.000 --> 00:13:13.000
하지만 인클로저의 겹침과 같은 문제가 발생하거나 기호의 모양이 다른 정렬이 필요한 경우, 초경량 또는 블랙 가중치에서 재정의 확인란을 클릭하고 추가 조정을 할 수 있습니다.

00:13:13.000 --> 00:13:17.000
나는 더 많은 호흡 공간을 주기 위해 동봉된 큐브의 저울을 조금 낮출 것이다.

00:13:17.000 --> 00:13:24.000
이 시스템은 세미볼드와 같은 가중치를 자동으로 만들 때 이러한 새로운 조정을 고려할 것이다.

00:13:24.000 --> 00:13:29.000
그리고 사실, 그 시스템은 이와 같은 인클로저를 위해 무대 뒤에서 더 많은 일을 하고 있다.

00:13:29.000 --> 00:13:50.000
기본 기호가 인클로저에 맞도록 축소됨에 따라, 시스템은 기본 기호의 가변 템플릿을 사용하여 무게 보상을 적용하여 크기가 감소함에 따라 기호의 무게와 두께를 증가시킵니다. 이것은 더 크고 밀폐되지 않은 버전과 그것을 둘러싼 원과 일관되게 보이는 데 도움이 됩니다.

00:13:50.000 --> 00:14:00.000
그리고 기호 구성 요소의 다른 많은 부분과 마찬가지로, 동봉된 기호의 무게에 대한 추가 미세 조정을 수행하여 원하는 최종 시각적 결과를 얻을 수 있습니다.

00:14:00.000 --> 00:14:03.000
그리고 그것이 상징적인 구성 요소가 얼마나 강력한지이다.

00:14:03.000 --> 00:14:14.000
그것들은 시스템이 제공하는 SF 심볼 레퍼토리와 일치하는 행동과 삽화와 함께 기존 사용자 지정 기호를 기반으로 새로운 기호를 만드는 빠르고 쉬운 방법입니다.

00:14:14.000 --> 00:14:22.000
기호 구성 요소는 필요한 경우 무게 보상을 적용할 수 있도록 가변 템플릿으로 만든 사용자 지정 기호와 함께 작동해야 한다는 것을 기억하십시오.

00:14:22.000 --> 00:14:30.000
이것은 또한 변수 템플릿에 있을 수 있는 개별 변형의 재정의가 구성 요소와 결합될 때 무시된다는 것을 의미합니다.

00:14:30.000 --> 00:14:37.000
그리고 마지막으로, 구성 요소를 사용하여 생성된 기호에서 편집 가능한 템플릿을 내보낼 수 없다는 점에 유의하십시오.

00:14:37.000 --> 00:14:45.000
심볼 구성 요소는 일단 조정한 후 도면을 처리하도록 설계되었으므로 수동으로 편집할 필요가 없습니다.

00:14:45.000 --> 00:14:50.000
올해 SF 심볼 앱에는 40개 이상의 구성 요소가 포함되어 있습니다.

00:14:50.000 --> 00:14:54.000
마무리하기 전에, 고려해야 할 중요한 영역이 하나 더 있다.

00:14:54.000 --> 00:15:04.000
새로운 기능을 채택할 때, 앱을 사용하는 많은 사람들이 오래된 플랫폼에 있으며, 놀라운 인앱 경험을 할 자격이 있다는 것을 기억하는 것도 중요합니다.

00:15:04.000 --> 00:15:17.000
우리는 당신의 기호가 앱이 지원하는 모든 플랫폼에서 원하는 대로 보이고 작동할 수 있도록 SF 심볼 앱 내의 경험을 재설계했습니다.

00:15:17.000 --> 00:15:27.000
기호의 모양과 구조를 수정하기 위해 편집 가능한 템플릿을 내보내면, 이전에 템플릿에 표시된 채워진 모양 대신 와이어프레임 보기를 볼 수 있습니다.

00:15:27.000 --> 00:15:37.000
모션에 최적화된 기호에는 종종 느낌표 배지 주변의 추가 테두리와 같이 렌더링 중에 다른 모양의 일부를 지우는 데 사용되는 모양이 포함됩니다.

00:15:37.000 --> 00:15:49.000
우리는 그리기 단계에서 기호를 구성하는 모양에 초점을 맞추고, 앱에서 기호에 주석을 달 때까지 기다렸다가 어떤 모양이 색을 그리고 어떤 모양이 지워지는지 표시하는 것이 더 낫다는 것을 발견했습니다.

00:15:49.000 --> 00:15:53.000
템플릿의 이 와이어프레임 스타일은 당신이 그렇게 하는 데 도움이 됩니다.

00:15:53.000 --> 00:15:57.000
템플릿을 내보낼 때 새로운 호환성 선택기도 있습니다.

00:15:57.000 --> 00:16:02.000
기본적으로, 당신은 최신의 가장 위대한 기호를 얻을 수 있으며, 그 중 다수는 모션을 위해 다시 그려졌습니다.

00:16:02.000 --> 00:16:09.000
하지만 오래된 플랫폼을 대상으로 하는 경우, SF 심볼 앱은 해당 플랫폼에 더 적합한 템플릿을 제공할 것입니다.

00:16:09.000 --> 00:16:24.000
예를 들어, iOS 15와 macOS Monterey에 해당하는 SF Symbols 3을 대상으로 하는 경우, 모션에 사용하는 레이어 구조가 SF Symbols 3에서 완전히 지원되지 않았기 때문에 모션에 최적화되지 않은 더 간단한 그림을 얻을 수 있습니다.

00:16:24.000 --> 00:16:38.000
그리고 iOS 14와 macOS Big Sur에 해당하는 SF Symbols 2를 대상으로 하는 경우, SF Symbols 3에 가변 템플릿이 도입되었기 때문에 자동으로 정적 템플릿을 받게 됩니다.

00:16:38.000 --> 00:16:41.000
사용자 지정 기호에 주석을 달 때 동일한 개념이 적용됩니다.

00:16:41.000 --> 00:16:46.000
기본적으로, 당신은 앱이 제공하는 모든 주석 기능에 접근할 수 있습니다.

00:16:46.000 --> 00:16:52.000
하지만 특정 플랫폼을 대상으로 하는 기호를 설정할 수 있으며, 앱은 기호가 준비되었는지 확인하는 데 도움이 될 것입니다.

00:16:52.000 --> 00:17:05.000
예를 들어, SF 기호 3 또는 이전 버전을 선택하면 SF 기호 4까지 흑백 주석을 사용자 정의할 수 없었기 때문에 더 이상 기호의 흑백 주석을 편집할 수 없습니다.

00:17:05.000 --> 00:17:12.000
그리고 마지막으로, 기호를 Xcode용으로 내보낼 준비가 되면, 어떤 버전의 Xcode를 사용할지 앱에 알리기만 하면 됩니다.

00:17:12.000 --> 00:17:22.000
앱은 내보내기에 가장 적합한 파일 형식을 선택하고, 이전 플랫폼을 대상으로 하는 앱으로 컴파일할 때 파일이 제대로 작동하는지 확인하는 데 도움을 줄 것입니다.

00:17:22.000 --> 00:17:28.000
그래서 SF Symbols 앱으로 애니메이션을 할 준비가 된 기호를 만드는 것이 얼마나 쉽고 빠른지.

00:17:28.000 --> 00:17:36.000
애니메이션 관리자, 새로운 주석 기능, 기호 구성 요소 및 호환성 검사를 사용하면 몇 번의 클릭만으로 사용할 수 있습니다.

00:17:36.000 --> 00:17:39.000
그건 사실 내가 스피드큐빙을 배운 경험과 많이 비슷해.

00:17:39.000 --> 00:17:53.000
고려해야 할 많은 각도, 다양한 움직이는 부분이 있으며, 관리해야 할 많은 정보처럼 보이지만, 올바른 도구를 사용하면 얼마나 빨리 놀랄 것입니다...

00:17:53.000 --> 00:17:54.000
모든 게 다 합쳐졌어.

00:17:54.000 --> 00:17:56.000
봐줘서 고마워.

00:17:56.000 --> 23:59:59.000
♪ ♪

