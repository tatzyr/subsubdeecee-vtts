WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
니나: 안녕.

00:00:11.000 --> 00:00:15.000
제 이름은 니나 파리포비치이고, 저는 watchOS 소프트웨어 엔지니어입니다.

00:00:15.000 --> 00:00:23.000
이 코드와 함께 세션에서, 우리는 watchOS 9 SDK로 빌드된 기존 앱을 사용하여 watchOS 10용으로 업데이트할 것입니다.

00:00:23.000 --> 00:00:33.000
우리는 시스템 차원의 재설계와 함께 앱을 아름답게 보이게 하는 데 사용할 수 있는 새로운 디자인 패러다임과 SwiftUI API에 대해 이야기할 것입니다.

00:00:33.000 --> 00:00:38.000
샘플 프로젝트는 이 세션과 관련된 리소스 목록에 연결되어 있습니다.

00:00:38.000 --> 00:00:45.000
watchOS 10을 함께 빌드할 수 있도록 지금 다운로드를 시작하는 것이 좋습니다.

00:00:45.000 --> 00:00:49.000
우리가 뛰어들기 전에, 우리의 기존 프로젝트를 살펴봅시다.

00:00:49.000 --> 00:00:59.000
우리가 업데이트할 앱은 아름다운 뒷마당 정원과 호기심 많은 방문객을 만들고 관리할 수 있는 앱인 Backyard Birds입니다.

00:00:59.000 --> 00:01:02.000
오늘 앱에는 뒷마당 목록이 있다.

00:01:02.000 --> 00:01:08.000
각 뒷마당에는 활동과 상태를 보여주는 세부적인 전망이 있다.

00:01:08.000 --> 00:01:12.000
음식이나 물이 부족하면, 그것들을 얹을 수 있다.

00:01:12.000 --> 00:01:17.000
우리는 또한 각 뒷마당에서 모든 새 방문객을 볼 수 있다.

00:01:17.000 --> 00:01:22.000
watchOS 10은 앱을 볼 수 있는 흥미롭고 신선한 새로운 모습을 제공합니다.

00:01:22.000 --> 00:01:33.000
아직 하지 않았다면, "Meet watchOS 10"과 "Design and build apps for watchOS 10"을 확인하여 이 세션에서 적용할 디자인 원칙에 대한 자세한 정보를 얻으십시오.

00:01:33.000 --> 00:01:40.000
이제 Xcode를 열어 앱 업데이트를 시작합시다.

00:01:40.000 --> 00:01:45.000
여기 watchOS 9를 위해 제작되고 실행되는 현재 Backyard Birds 앱이 있습니다.

00:01:45.000 --> 00:01:51.000
우리는 뒷마당 세부 사항으로 전환하는 뒷마당 목록을 본다.

00:01:51.000 --> 00:01:56.000
먼저, watchOS10 SDK를 기반으로 구축해 봅시다.

00:01:56.000 --> 00:01:58.000
그 앱은 이미 멋져 보인다.

00:01:58.000 --> 00:02:11.000
우리는 스크롤할 때 전환되는 큰 제목과 탐색 모음 아래의 콘텐츠를 흐리게 하는 새로운 자료와 같은 새로운 시스템 기능을 봅니다.

00:02:11.000 --> 00:02:21.000
뒷마당을 탭하면 셀이 생기고, 우리는 왼쪽 상단에 보이는 시스템 전체 도구 모음 버튼 스타일을 자동으로 채택했습니다.

00:02:21.000 --> 00:02:31.000
스크롤한 다음 리필을 탭하면, 새로운 흐릿한 배경 자료가 있는 모달을 제공합니다.

00:02:31.000 --> 00:02:37.000
뒷마당 새를 사용하는 사람들은 자신의 뒷마당에서 무슨 일이 일어나고 있는지 가장 신경 쓴다.

00:02:37.000 --> 00:02:45.000
현재, 그들이 앱을 실행할 때, 그들이 가장 먼저 하는 일은 목록의 뒷마당을 탭하여 세부 보기에서 무슨 일이 일어나고 있는지 보는 것이다.

00:02:45.000 --> 00:02:53.000
watchOS 10에서는 NavigationSplitView로 앱의 구조를 수정하여 일을 더 쉽게 만들 수 있습니다.

00:02:53.000 --> 00:03:03.000
이것은 사람들이 뒷마당의 세부 보기로 직접 시작한 다음 친구의 마당을 방문하고 싶을 때 목록으로 다시 팝업할 수 있게 해준다.

00:03:03.000 --> 00:03:12.000
세부 보기가 우리 앱의 가장 중요한 부분이기 때문에, 우리는 NavigationSplitView를 구현하여 강조할 수 있습니다.

00:03:12.000 --> 00:03:17.000
NavigationSplitView는 강력한 소스 목록과 세부 관계가 있을 때 훌륭합니다.

00:03:17.000 --> 00:03:28.000
그것은 사람들이 직접 시작함으로써 세부 사항에 집중할 수 있게 해주며, 여전히 소스 목록에서 다른 야드로 쉽게 전환할 수 있게 해준다.

00:03:28.000 --> 00:03:34.000
우리는 이미 iOS와 iPadOS의 Backyard Birds에 그것을 사용하고 있습니다.

00:03:34.000 --> 00:03:39.000
NavigationSplitView가 우리 앱에 아주 잘 어울릴 것 같습니다.

00:03:39.000 --> 00:03:45.000
ContentView에서, 우리는 NavigationStack을 NavigationSplitView로 바꿀 것이다.

00:03:45.000 --> 00:03:53.000
그런 다음 우리는 navigationDestination의 내용을 NavigationSplitView의 세부 사항으로 이동할 것입니다.

00:03:53.000 --> 00:04:03.000
마지막으로, 우리는 watchOS 10에서 사용할 수 있는 새로운 목록 선택 API를 채택하여 NavigationSplitView에서 제공하는 세부 보기를 구동할 것입니다.

00:04:03.000 --> 00:04:10.000
시작하려면, NavigationStack을 NavigationSplitView로 바꾸자.

00:04:10.000 --> 00:04:15.000
우리는 NavigationSplitView의 루트에 있는 뒷마당 목록을 남길 수 있습니다.

00:04:15.000 --> 00:04:24.000
navigationDestination 수정자를 제거하고 BackyardView를 상세 보기 빌더로 이동합시다.

00:04:24.000 --> 00:04:38.000
선택된 백야드는 선택 사항이기 때문에, 포장을 풀고 대체 보기를 제공합시다.

00:04:38.000 --> 00:04:42.000
마지막으로, 선택 바인딩을 사용하는 목록 이니셜라이저를 사용합시다.

00:04:42.000 --> 00:04:57.000
목록의 선택 매개 변수에 대한 값을 제공할 때, 선택 바인딩은 NavigationSplitView 내에서 제공하는 세부 보기를 구동합니다.

00:04:57.000 --> 00:04:58.000
좋아.

00:04:58.000 --> 00:05:02.000
이제 기본적으로 선택한 야드의 상세 보기를 볼 수 있습니다.

00:05:02.000 --> 00:05:07.000
우리가 세부 사항을 직접 시작하기 때문에, 우리는 navigationTitle을 제거할 수 있습니다.

00:05:07.000 --> 00:05:14.000
우리는 소스 목록 버튼을 사용하여 나머지 뒷마당을 다시 볼 수 있습니다.

00:05:14.000 --> 00:05:20.000
그리고 세부 보기를 다시 탭하면 아름다운 전체 화면 애니메이션을 볼 수 있습니다.

00:05:20.000 --> 00:05:25.000
지금 당장, 뒷마당 전망은 스크롤 가능한 콘텐츠의 긴 목록이다.

00:05:25.000 --> 00:05:39.000
우리의 목록은 이미 뚜렷한 기능 세트, 오늘의 보기, 서식지 보기 및 방문자 보기를 가진 세 개의 다른 섹션으로 나뉘어져 있습니다.

00:05:39.000 --> 00:05:47.000
대신 TabView를 사용하고 각 섹션에 대한 탭을 만들어 앱의 시각적 선명도를 향상시킬 수 있습니다.

00:05:47.000 --> 00:05:55.000
TabView는 콘텐츠를 전체 화면 보기로 나눌 수 있는 방법을 제공하며, 각 탭은 명확하고 뚜렷한 목적을 가지고 있습니다.

00:05:55.000 --> 00:06:00.000
뷰를 빠르게 스크롤할 수 있도록 디지털 크라운 기능을 유지하고 싶습니다.

00:06:00.000 --> 00:06:05.000
새로운 수직 페이지 스타일은 내가 TabView로 이것을 할 수 있게 해준다.

00:06:05.000 --> 00:06:11.000
사람들은 탭 사이를 빠르게 탐색할 수 있으며 심지어 단일 탭 내에서 스크롤할 수도 있습니다.

00:06:11.000 --> 00:06:18.000
Xcode로 돌아가서 TabView를 사용하기 위해 세부 보기를 업데이트해 봅시다.

00:06:18.000 --> 00:06:26.000
BackyardView에서 각 섹션을 각각의 보기로 이동하고 목록을 TabView로 교체해 봅시다.

00:06:26.000 --> 00:06:34.000
TabView의 각 페이지는 화면의 전체 크기를 차지하기 때문에 섹션과 칸막이가 필요하지 않습니다.

00:06:34.000 --> 00:06:51.000
섹션 헤더를 navigationTitles로 다시 추가합시다.

00:06:51.000 --> 00:06:58.000
마지막으로, tabViewStyle 수정자를 사용하고 verticalPage를 원하는지 지정해 봅시다.

00:06:58.000 --> 00:07:00.000
우리 거의 다 왔어.

00:07:00.000 --> 00:07:05.000
우리가 페이징할 때, 우리는 뷰가 각 탭에 정착하는 것을 본다.

00:07:05.000 --> 00:07:15.000
사람들이 모든 방문자를 더 쉽게 볼 수 있도록, 우리는 VisitorView를 목록으로 포장할 수 있습니다.

00:07:15.000 --> 00:07:21.000
이제, TabView는 자식 목록 보기에 하나의 탭을 지정할 것이다.

00:07:21.000 --> 00:07:27.000
목록이 화면 높이를 초과하면, 보기를 스크롤할 수 있게 됩니다.

00:07:27.000 --> 00:07:35.000
수직 TabView 내에 스크롤 가능한 콘텐츠가 있다면, 가능할 때마다 마지막 탭에 배치하세요.

00:07:35.000 --> 00:07:45.000
나는 또한 사람들이 음식과 수위를 쉽게 구별할 수 있도록 서식지 보기를 두 개의 별도의 탭으로 나눌 것이다.

00:07:45.000 --> 00:07:51.000
이를 위해, 나는 TabView에 더 잘 맞는 나만의 게이지를 만들었다.

00:07:51.000 --> 00:08:08.000
TabView에서, 음식에 대한 하나의 인스턴스와 물에 대한 하나의 인스턴스를 만들어 HabitatView를 새로운 GaugeView로 교체합시다.

00:08:08.000 --> 00:08:10.000
그거 멋지다.

00:08:10.000 --> 00:08:14.000
이제 리필 기능을 다시 추가하기만 하면 됩니다.

00:08:14.000 --> 00:08:18.000
이를 위해, 나는 도구 모음을 사용할 것이다.

00:08:18.000 --> 00:08:26.000
도구 모음은 watchOS 10에서 모든 화면 크기에서 일관된 새로운 배치 옵션으로 향상되었습니다.

00:08:26.000 --> 00:08:30.000
새로운 하단 바 배치는 컨트롤을 하기에 좋은 장소이다.

00:08:30.000 --> 00:08:38.000
하단 막대에 리필 버튼을 추가하여 이 배치 옵션을 사용할 것입니다.

00:08:38.000 --> 00:08:48.000
새로운 HabitatGaugeView로 돌아가서, 우리는 도구 모음을 추가한 다음 ToolbarGroup을 사용하여 하단 막대 배치를 지정할 것입니다.

00:08:48.000 --> 00:09:00.000
나는 스페이서를 사용하여 도구 모음의 후행 모서리에 버튼을 추가할 것이다.

00:09:00.000 --> 00:09:06.000
우리는 이제 훨씬 더 많은 공간을 가지고 있으며, 해비타트 요약에 집중하는 것이 더 쉽다.

00:09:06.000 --> 00:09:11.000
나는 사람들이 TabView를 탐색할 때 방향을 잡는 것을 돕기 위해 더 많은 일을 하고 싶다.

00:09:11.000 --> 00:09:17.000
게다가, 뒷마당의 음식과 물이 부족하다면, 나는 이것에 주의를 기울이고 싶다.

00:09:17.000 --> 00:09:21.000
우리는 배경 그라디언트를 적용하여 이것을 달성할 수 있다.

00:09:21.000 --> 00:09:30.000
각 탭의 제목은 도움이 되지만, 색상은 눈길을 높이고 세부 보기 내에서 우리가 있는 위치를 강화하는 좋은 방법이 될 것이다.

00:09:30.000 --> 00:09:36.000
우리는 또한 음식이나 물이 부족한 경우 뒷마당의 상태를 강조하기 위해 그것을 사용할 수 있습니다.

00:09:36.000 --> 00:09:43.000
시스템 그라디언트는 전경 요소와의 대비를 유지하면서 이것을 중계하는 좋은 방법이다.

00:09:43.000 --> 00:09:49.000
이것을 달성하기 위해 색상 그라디언트가 있는 컨테이너 배경 수정자를 사용합시다.

00:09:49.000 --> 00:09:53.000
먼저 원래의 배경을 제거합시다.

00:09:53.000 --> 00:10:01.000
우리는 현재 음식과 수위에 따라 배경색을 결정하는 기능을 BackyardView에 추가할 수 있습니다.

00:10:01.000 --> 00:10:07.000
레벨이 낮으면, 배경은 리필할 시간임을 나타내기 위해 빨간색이 될 것이다.

00:10:07.000 --> 00:10:11.000
나는 또한 몇 가지 유용한 계산 변수를 추가할 것이다.

00:10:11.000 --> 00:10:18.000
이제 우리는 이 계산된 속성을 containerBackground 수정자에 전달할 수 있습니다.

00:10:18.000 --> 00:10:24.000
수정자는 색상 그라디언트와 ContainerBackgroundPlacement를 전달할 ShapeStyle을 사용합니다.

00:10:24.000 --> 00:10:33.000
여기서, 우리는 그것이 TabView를 위한 것을 지정할 것이다.

00:10:33.000 --> 00:10:37.000
나는 또한 배경이 바뀔 때 게이지 색상을 바꾸고 싶다.

00:10:37.000 --> 00:10:43.000
같은 계산된 색상 변수를 전달해 봅시다.

00:10:43.000 --> 00:10:55.000
앱의 악센트 색상을 사용하여 TabView 내의 다른 보기에 containerBackground 수정자를 적용합시다.

00:10:55.000 --> 00:11:01.000
스크롤할 때, 그라디언트가 전경 요소와 잘 대조되는 것을 볼 수 있습니다.

00:11:01.000 --> 00:11:08.000
그리고 도구 모음 버튼을 탭하면 배경 그라디언트가 어떻게 변하는지 볼 수 있습니다.

00:11:08.000 --> 00:11:14.000
마지막으로, 나는 중요한 정보를 강조하기 위해 자료를 사용하고 싶다.

00:11:14.000 --> 00:11:20.000
자료는 여러 플랫폼에서 사용할 수 있으며 watchOS10에서 앱을 보는 것은 처음이다.

00:11:20.000 --> 00:11:27.000
그것들은 전경과 배경 요소를 구별하는 동시에 시각적 번영을 추가하는 좋은 방법이다.

00:11:27.000 --> 00:11:32.000
마지막으로, 그들은 화면에서 정보를 표면화하거나 강화할 수 있다.

00:11:32.000 --> 00:11:36.000
앱에는 재료와 활기를 사용할 수 있는 곳이 몇 군데 있다.

00:11:36.000 --> 00:11:39.000
한 번 보자.

00:11:39.000 --> 00:11:46.000
우선, 뒷마당 제목에서 그림자 배경을 대체하고 대신 재료 배경을 사용하고 싶습니다.

00:11:46.000 --> 00:12:00.000
셀의 배경은 다채롭고, 자료를 추가하면 제목을 명확하게 하는 데 도움이 될 것이다.

00:12:00.000 --> 00:12:07.000
사람들은 요약 보기에서 볼 수 있는 각 뒷마당의 새 방문객 수에 대해 정말 신경을 쓴다.

00:12:07.000 --> 00:12:14.000
사람들이 뒷마당의 세부 보기에 들어가지 않고도 그것을 볼 수 있도록 목록 보기에서 그것을 표면화하는 것이 좋을 것이다.

00:12:14.000 --> 00:12:20.000
나는 그것을 다른 오버레이로 추가하고 숫자에 대한 물질적 배경을 제공할 것이다.

00:12:20.000 --> 00:12:27.000
watchOS 앱은 어두운 배경을 사용하는 경향이 있으므로, 자료의 기본값은 어두운 변형이다.

00:12:27.000 --> 00:12:36.000
뒷마당은 가볍고 다채롭기 때문에, 나는 이것들을 가벼운 변형으로 바꿀 것이다.

00:12:36.000 --> 00:12:42.000
그리고 그것으로, 우리의 Backyard Birds 앱은 이제 watchOS 10용으로 업데이트되었습니다.

00:12:42.000 --> 00:12:46.000
우리가 방금 만든 모든 큰 변화를 검토해 봅시다.

00:12:46.000 --> 00:12:50.000
우리는 NavigationSplitView를 목록에 추가했습니다.

00:12:50.000 --> 00:12:56.000
그런 다음 목록을 수직 탭뷰로 교체했습니다.

00:12:56.000 --> 00:13:03.000
우리는 각 뒷마당이 있는 도구 모음에 기능과 아름다운 그라디언트를 추가했습니다.

00:13:03.000 --> 00:13:08.000
끝내기 위해, 우리는 유용한 정보를 표면화하기 위해 재료를 사용했다.

00:13:08.000 --> 00:13:10.000
나랑 같이 코딩해줘서 고마워.

00:13:10.000 --> 00:13:16.000
올해는 Apple Watch에게 큰 해이며, 더 많은 세션을 살펴보시기 바랍니다.

00:13:16.000 --> 00:13:23.000
Backyard Birds와 함께 더 나아가려면, "Apple Watch의 스마트 스택을 위한 위젯 구축"으로 가세요.

00:13:23.000 --> 23:59:59.000
당신의 앱이 watchOS 10에서 빛날 수 있도록 업데이트를 빨리 보고 싶습니다.

