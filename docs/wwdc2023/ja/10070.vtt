WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:14.000
こんにちは、私の名前はジェレミーで、メディアエクスペリエンスソフトウェアエンジニアです。

00:00:14.000 --> 00:00:19.000
この講演では、アプリでビデオ再生のための素晴らしい空間体験を作成する方法について説明します。

00:00:19.000 --> 00:00:27.000
優れたエクスペリエンスは、プラットフォーム用に最適化され、強力なメディア機能を活用し、システム全体と統合されます。

00:00:27.000 --> 00:00:31.000
まず、最小限のアプリでメディア体験を探ります。

00:00:31.000 --> 00:00:35.000
次に、より高度なUI機能について説明します。

00:00:35.000 --> 00:00:39.000
次に、ビデオを表示する他の方法をいくつか確認します。

00:00:39.000 --> 00:00:42.000
最後に、オプションを比較します。

00:00:42.000 --> 00:00:49.000
iOSまたはtvOSでメディアAPIを使用したことがある場合、これは身近に感じるかもしれません。

00:00:49.000 --> 00:00:57.000
このプラットフォームは、これらの同じAPIに基づいて構築され、そのユニークな機能のためにそれらを拡張します。

00:00:57.000 --> 00:01:04.000
AVFoundationは、ストリーミング、解析、デコード、同期など、映画を再生するすべての作業を処理します。

00:01:04.000 --> 00:01:13.000
また、AVKitはAVFoundationとUIフレームワークに基づいて構築され、各プラットフォームに合わせてカスタマイズおよび統合された再生体験を作成します。

00:01:13.000 --> 00:01:23.000
このプラットフォームでは、AVFoundationは、3Dビデオなどの独自の機能を利用する新しいメディアフォーマットをサポートするように強化されました。

00:01:23.000 --> 00:01:29.000
これらの形式の詳細については、このセッションを参照してください。

00:01:29.000 --> 00:01:42.000
AVFoundationはまた、RealityKitを使用して高性能で高品質でレンダリングするように強化されているため、ビデオをあなたの周りの世界にシームレスに合成することができ、オーディオもあなたの周りの世界にも反応します。

00:01:42.000 --> 00:01:54.000
また、AVKitのAVPlayerViewControllerは、RealityKitのパワーとプラットフォームのユニークな機能を利用して、高度に洗練された体験を生み出すように拡張されました。

00:01:54.000 --> 00:02:00.000
これには、あなたが期待するすべての再生コントロールが含まれますが、多くのユニークな機能もあります。

00:02:00.000 --> 00:02:03.000
アプリでこれを利用するには何が必要ですか?

00:02:03.000 --> 00:02:07.000
まず、XcodeターゲットはこのプラットフォームのSDKで構築する必要があります。

00:02:07.000 --> 00:02:14.000
iOS SDKで構築された互換性のあるiOSアプリは、iOSと互換性のある体験を得ることができます。

00:02:14.000 --> 00:02:19.000
iOSやtvOSと同じようにAVPlayerViewControllerを使用してください。

00:02:19.000 --> 00:02:23.000
そして最後に、ウィンドウを埋めるようにビューコントローラーを提示します。

00:02:23.000 --> 00:02:26.000
これをいくつかのコードで実証しましょう。

00:02:26.000 --> 00:02:30.000
まず、AVFoundationとAVKitをインポートします。

00:02:30.000 --> 00:02:35.000
次に、AVPlayerViewControllerを作成し、AVPlayerを接続します。

00:02:35.000 --> 00:02:41.000
次に、コンテンツURLを使用して新しいプレーヤーアイテムを作成し、プレーヤーに設定します。

00:02:41.000 --> 00:02:51.000
ビューコントローラーにプレーヤーを設定した後にアイテムを追加すると、プレーヤーはメディアの読み込みを開始する前に表示方法を理解するため、パフォーマンスを向上させることができます。

00:02:51.000 --> 00:02:57.000
次に、SwiftUIで使用するには、そのコードをUIViewControllerRepresentableでラップします。

00:02:57.000 --> 00:03:01.000
私たちはこれをPlayerViewと呼びます。

00:03:01.000 --> 00:03:06.000
次に、MoviePlayingAppと呼ばれるアプリを作成します。

00:03:06.000 --> 00:03:11.000
定義したばかりのビューコントローラーを追加すると、ウィンドウがいっぱいになります。

00:03:11.000 --> 00:03:15.000
そのように、あなたは映画再生アプリを持っています。

00:03:15.000 --> 00:03:21.000
このコードが他のAppleプラットフォームで書くものと非常によく似ていると思うなら、それはそうだからです。

00:03:21.000 --> 00:03:27.000
AVPlayerViewControllerとAVPlayerは多くの重労働をしているので、その必要はありません。

00:03:27.000 --> 00:03:32.000
このようなシンプルなアプリのメディア体験をお見せしましょう。

00:03:32.000 --> 00:03:36.000
アプリが起動する前に、部屋だけが見えます。

00:03:36.000 --> 00:03:43.000
アプリが起動すると、正面に大きな画面が表示され、部屋が暗くなり、素敵な雰囲気を作り出します。

00:03:43.000 --> 00:03:49.000
移動中、画面は所定の位置にとどまり、オーディオは画面に固定されたままになります。

00:03:49.000 --> 00:03:54.000
再生コントロールを表示するには、画面を見てタップします。

00:03:54.000 --> 00:03:57.000
コントロールはビデオのすぐ前に浮かんでいます。

00:03:57.000 --> 00:04:01.000
遊んでいる間、何もしないで、彼らは自分自身で消えます。

00:04:01.000 --> 00:04:05.000
または、画面を見てもう一度タップして消します。

00:04:05.000 --> 00:04:14.000
画面の下にあるウィンドウバーをつかんで位置を変更します。

00:04:14.000 --> 00:04:18.000
画面の隅をつかんでサイズを変更します。

00:04:18.000 --> 00:04:25.000
画面のサイズが変更されると、スムーズにアニメーション化され、ビデオのアスペクト比と一致することに注意してください。

00:04:25.000 --> 00:04:29.000
デジタルクラウンを回して音量を調整します。

00:04:29.000 --> 00:04:35.000
または、デジタルクラウンを使用して、このような環境を開きます。

00:04:35.000 --> 00:04:37.000
私はこのように映画を見るのが大好きです。

00:04:37.000 --> 00:04:42.000
あなたはこれを自分で経験しなければなりません。

00:04:42.000 --> 00:04:48.000
さて、再生コントロールをより詳しく調べて、それらが提供する機能を見てみましょう。

00:04:48.000 --> 00:04:50.000
これが私たちのプレイヤーインターフェースです。

00:04:50.000 --> 00:04:55.000
右上には、すばやく調整したりミュートしたりするためのボリュームコントロールがあります。

00:04:55.000 --> 00:05:00.000
前述したように、デジタルクラウンで音量を調整することもできます。

00:05:00.000 --> 00:05:05.000
左下には、おなじみの再生/一時停止ボタンと戻る/前進ボタンがあります。

00:05:05.000 --> 00:05:09.000
下の真ん中には、映画の別の時間にジャンプするスクラバーがあります。

00:05:09.000 --> 00:05:15.000
そして、右下には、より多くのオプションを備えたこのボタンがあります。

00:05:15.000 --> 00:05:18.000
再生速度を調整するオプションを次に示します。

00:05:18.000 --> 00:05:29.000
ムービーに複数のオーディオトラックまたはキャプショントラックが含まれている場合は、これらのオプションを使用して、オーディオトラックの言語を選択するか、優先言語でキャプションを有効にします。

00:05:29.000 --> 00:05:32.000
この最後のオプションは調光効果です。

00:05:32.000 --> 00:05:38.000
私は本当にそれらに集中するために暗闇の中で映画を見るのが大好きですが、時にはビデオが私の唯一の焦点ではありません。

00:05:38.000 --> 00:05:42.000
ここでは、私の周りにあるものをよりよく見るために、調光効果をオフにすることができます。

00:05:42.000 --> 00:05:45.000
組み込まれている基本を取り上げました。

00:05:45.000 --> 00:05:49.000
では、より高度な機能をいくつか探りましょう。

00:05:49.000 --> 00:05:55.000
サムネイルスクラブは、スクラブ中にビデオの小さな画像を表示し、コンテンツのシームレスなナビゲーションを可能にします。

00:05:55.000 --> 00:06:04.000
コントロールは、トリックプレイトラックとも呼ばれるIフレームのみのプレイリストを持つHLSストリームをスクラブすると、自動的にサムネイルを表示します。

00:06:04.000 --> 00:06:09.000
幅145ピクセルの小さなトリックプレイトラックが好ましい。

00:06:09.000 --> 00:06:15.000
詳細については、このドキュメントを参照してください。

00:06:15.000 --> 00:06:21.000
ロゴ、要約、または広告のタイムラインにメディアを挿入する必要がある場合があります。

00:06:21.000 --> 00:06:25.000
インタースティシャルサポートは、この能力を可能にします。

00:06:25.000 --> 00:06:31.000
インタースティシャルが存在する場合、コントロールは自動的にタイムラインのインジケーターでそれらを反映します。

00:06:31.000 --> 00:06:41.000
これらのインタースティシャルは、AVPlayerInterstital EventControllerでプログラムで設定することも、HLSストリーム内で記述することもできます。

00:06:41.000 --> 00:06:45.000
詳細については、このセッションを参照してください。

00:06:45.000 --> 00:06:49.000
ビデオ再生アプリで一般的に使用される追加のUIオプションがいくつかあります。

00:06:49.000 --> 00:06:55.000
コンテキストアクションを使用すると、イントロをスキップしたり、次のエピソードを再生したりするなどのボタンを追加できます。

00:06:55.000 --> 00:06:58.000
彼らはタイトルとオプションの画像を持つことができます。

00:06:58.000 --> 00:07:05.000
カスタム情報ビューコントローラーは、コンテンツに関するメタデータを表示したり、関連するコンテンツを提案したりするために使用できます。

00:07:05.000 --> 00:07:09.000
これらのAPIは、他のAppleプラットフォームと同じように機能します。

00:07:09.000 --> 00:07:13.000
詳細については、このセッションを参照してください。

00:07:13.000 --> 00:07:18.000
あなたのアプリは、没入型スペースと呼ばれる機能であなたを別の場所に移動させることもできます。

00:07:18.000 --> 00:07:23.000
アプリが没入型スペースを作成すると、そのスペースがどのように見えるかを決めることができます。

00:07:23.000 --> 00:07:35.000
さらに良いことに、ビデオ画面は自動的にその空間に移動し、予測可能なサイズと位置に固定され、毎回優れた視野角が保証されます。

00:07:35.000 --> 00:07:40.000
そして、コントロールは切り離して近づき、操作しやすくします。

00:07:40.000 --> 00:07:43.000
いくつかのコードをチェックしてみましょう。

00:07:43.000 --> 00:07:46.000
これが以前のMoviePlayingAppです。

00:07:46.000 --> 00:07:48.000
まず、没入型スペースを追加します。

00:07:48.000 --> 00:07:52.000
3Dコンテンツは、RealityKitエンティティによって記述されます。

00:07:52.000 --> 00:07:58.000
次に、PlayerViewのonAppearを使用してスペースを開きます。

00:07:58.000 --> 00:08:02.000
イマーシブスペースがドッキング時にムービープレーヤーを収容するように設計されていることを確認してください。

00:08:02.000 --> 00:08:09.000
スペースの構築と表示方法の詳細については、このセッションを参照してください。

00:08:09.000 --> 00:08:15.000
AVPlayerViewControllerは徹底的に洗練され、このプラットフォームでの素晴らしい体験のために設計されています。

00:08:15.000 --> 00:08:18.000
私たちは本当にAVPlayerViewControllerがあなたのために働くことを望んでいます。

00:08:18.000 --> 00:08:27.000
したがって、提案したい機能や行動がある場合は、ユースケースに合わせて引き続き改善できるようにフィードバックを提供してください。

00:08:27.000 --> 00:08:32.000
さて、誰かがカスタム再生コントロールを構築する必要があるまれな状況がまだある可能性があります。

00:08:32.000 --> 00:08:35.000
その場合は、フィードバックをお寄せください。

00:08:35.000 --> 00:08:39.000
また、AVPlayerViewControllerを使用することをお勧めします。

00:08:39.000 --> 00:08:43.000
コントロールを非表示にして、カスタムUIのオーバーレイを指定できます。

00:08:43.000 --> 00:08:54.000
これは、私たちが実証したように、AVPlayerViewControllerが単なる再生コントロールを超えて多くのシステム統合機能を提供するため、低レベルのAPIを使用するよりも好まれます。

00:08:54.000 --> 00:08:59.000
そして、あなたは素晴らしいシステム統合機能を手に入れ続けるでしょう。

00:08:59.000 --> 00:09:04.000
AVPlayerViewControllerのフルスクリーン体験を探りました。

00:09:04.000 --> 00:09:08.000
では、ビデオ再生の他のユースケースを見てみましょう。

00:09:08.000 --> 00:09:12.000
時々、映画がウィンドウでインラインで再生されたいことがあります。

00:09:12.000 --> 00:09:15.000
ドキュメントの一部であるか、プレビューを再生することができます。

00:09:15.000 --> 00:09:21.000
AVPlayerViewControllerインラインは、この状況にも最適です。

00:09:21.000 --> 00:09:23.000
インラインビューはどうやって取得しますか?

00:09:23.000 --> 00:09:27.000
ウィンドウを埋めることなく表示されるたびに、このモードが自動的に使用されます。

00:09:27.000 --> 00:09:32.000
そのインラインコントロールもOS用に再設計されています。

00:09:32.000 --> 00:09:40.000
注：ビデオはAVPlayerLayerを使用してウィンドウ内で合成されるため、3Dビデオを表示することはできません。

00:09:40.000 --> 00:09:45.000
アプリが3Dシーンのエンティティとしてビデオを再生したい場合があります。

00:09:45.000 --> 00:09:49.000
スプラッシュスクリーンやビデオトランジションである可能性があります。

00:09:49.000 --> 00:09:55.000
このような場合、再生コントロールは望まなく、ドッキングのようなシステム統合も望まいません。

00:09:55.000 --> 00:10:00.000
そのような場合は、RealityKitのVideoPlayerComponentを使用してください。

00:10:00.000 --> 00:10:05.000
VideoPlayerComponentは、RealityKitエンティティをAVPlayerに接続します。

00:10:05.000 --> 00:10:09.000
他のエンティティと同じように、RealityKitのシーンに配置できます。

00:10:09.000 --> 00:10:16.000
ビデオのアスペクト比の正しいメッシュを作成し、キャプションの表示をサポートします。

00:10:16.000 --> 00:10:20.000
可能な限り、AVPlayerLayerよりもそれを好む。

00:10:20.000 --> 00:10:29.000
RealityKitのビデオの最適化を利用するため、AVPlayerLayerよりも優れたパフォーマンスを発揮し、新しい3Dビデオフォーマットをサポートしています。

00:10:29.000 --> 00:10:34.000
詳細については、このセッションを参照してください。

00:10:34.000 --> 00:10:40.000
時には、ビデオがエフェクトとして使用される3Dシーンでビデオを使用したいと思うかもしれません。

00:10:40.000 --> 00:10:46.000
この場合、独自のジオメトリを作成し、ビデオの表示方法をより詳細に制御できます。

00:10:46.000 --> 00:10:52.000
VideoMaterialは、任意のジオメトリにビデオを表示する低レベルのAPIです。

00:10:52.000 --> 00:10:58.000
これは、元のアスペクト比を確保できず、キャプションを表示する機能がないことを意味します。

00:10:58.000 --> 00:11:03.000
詳細については、この関連講演をチェックしてください。

00:11:03.000 --> 00:11:07.000
私たちは、いくつかの追加のUI機能と他のいくつかのユースケースについて話しました。

00:11:07.000 --> 00:11:11.000
DestinationVideoサンプルアプリは、これらの機能のいくつかを示しています。

00:11:11.000 --> 00:11:16.000
ビデオを選択するためのビデオブラウザがあり、没入型スペースで再生します。

00:11:16.000 --> 00:11:18.000
ここにあります。

00:11:18.000 --> 00:11:23.000
情報ページを表示するビデオを選択すると、没入型スペースが開きます。

00:11:23.000 --> 00:11:28.000
プレビュー用のカスタムUIコントロールを備えたインラインプレーヤーの使用に注目してください。

00:11:28.000 --> 00:11:32.000
では、映画を再生します。

00:11:32.000 --> 00:11:40.000
プレイヤーUIが表示され、最適な表示のために固定サイズと場所で没入型スペースにすぐにドッキングします。

00:11:40.000 --> 00:11:54.000
もう1つの素晴らしいディテールは、画面がこのような没入型スペースにドッキングされると、再生コントロールが切り離され、少し近づき、対話がより便利になるということです。

00:11:54.000 --> 00:11:55.000
リストボタンをタップします。

00:11:55.000 --> 00:12:06.000
このアプリは、ビデオを見ながらコンテンツや関連コンテンツに関する詳細情報を表示するためのカスタム情報ビューコントローラーを提供しています。

00:12:06.000 --> 00:12:15.000
ビデオの終わり近くで、右下隅に「次に再生」というラベルの付いたコンテキストアクションボタンが表示されます。

00:12:15.000 --> 00:12:18.000
ビデオ再生の空間体験を取り上げました。

00:12:18.000 --> 00:12:25.000
それは美しいビジュアルと素晴らしい空間オーディオで、あなたの目の前に浮かぶ大きなスクリーンを持っています。

00:12:25.000 --> 00:12:32.000
それはあなたがする必要があるすべての再生コントロールが含まれており、他のいくつかの再生ユースケースについて話しました。

00:12:32.000 --> 00:12:35.000
アプリにビデオを表示する方法はいくつかあります。

00:12:35.000 --> 00:12:37.000
それらを比較しましょう。

00:12:37.000 --> 00:12:39.000
これらはビデオを表示するためのAPIです。

00:12:39.000 --> 00:12:42.000
それぞれが異なる能力を持っています。

00:12:42.000 --> 00:12:45.000
必要なメディア体験に正しいAPIを使用してください。

00:12:45.000 --> 00:12:49.000
メディアが正確に表示され、アクセス可能であることを確認してください。

00:12:49.000 --> 00:12:56.000
RealityKitでレンダリングすることで、プラットフォームに最適化され、3Dビデオフォーマットを有効にしていることを確認してください。

00:12:56.000 --> 00:13:00.000
そして、プラットフォームに合わせて調整された強力な再生コントロールがあることを確認してください。

00:13:00.000 --> 00:13:06.000
そして、素晴らしい経験を得るために、システム全体と統合されていることを確認してください。

00:13:06.000 --> 00:13:16.000
AVPlayerViewControllerを使用すると、アプリは他のAppleプラットフォームで使用している機能や、このプラットフォームの新しいユニークな機能を最大限に活用できます。

00:13:16.000 --> 00:13:21.000
ユーザーに素晴らしい映画再生体験を提供できます。

00:13:21.000 --> 00:13:28.000
空間メディア機能は、人々がまったく新しい方法でビデオを体験する機会を表しています。

00:13:28.000 --> 00:13:32.000
開始するには、DestinationVideoサンプルプロジェクトをチェックしてください。

00:13:32.000 --> 00:13:36.000
これは、ここで議論されている機能の多くを示しています。

00:13:36.000 --> 00:13:40.000
そして、これらの関連する講演をチェックしてください。

00:13:40.000 --> 00:13:45.000
これらの強力なツールであなたが作るものを人々が見るのが待ちきれません。

00:13:45.000 --> 00:13:48.000
しかし今、私はショーを見に戻らなければなりません。

00:13:48.000 --> 00:13:50.000
楽しんで！

00:13:50.000 --> 23:59:59.000
♪

