WEBVTT

00:00:01.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:13.000
アダム:こんにちは。私の名前はアダムで、SharePlayチームのエンジニアです。

00:00:13.000 --> 00:00:18.000
今日は、多くの人が求めていたエキサイティングな新機能について話します。 

00:00:18.000 --> 00:00:24.000
セッションのタイトルで推測したように、SharePlayでファイルを共有することについて話します。

00:00:24.000 --> 00:00:27.000
まず、添付ファイルの転送の意味について話します。

00:00:27.000 --> 00:00:33.000
ファイル、または共有したい大量のデータを「添付ファイル」と呼びます。 

00:00:33.000 --> 00:00:38.000
次に、GroupActivitiesの新しいAPIであるGroupSessionJournalについて説明します。

00:00:38.000 --> 00:00:48.000
その後、遅いジョイナーについて話し、最後に、DrawTogetherアプリでGroupSessionJournalを採用するのがどれほど簡単かを確認します。

00:00:48.000 --> 00:00:51.000
添付ファイルの転送の意味から始めましょう。

00:00:51.000 --> 00:00:53.000
描画アプリを通して話しましょう。

00:00:53.000 --> 00:00:58.000
GroupSessionMessengerを使用して、2つのデバイス間で図面を同期できるようにしています。

00:00:58.000 --> 00:01:01.000
しかし、キャンバスに画像をドロップするとどうなりますか?

00:01:01.000 --> 00:01:08.000
さて、GroupSessionMessengerのサイズ制限のため、以前はSharePlayを利用できませんでした。

00:01:08.000 --> 00:01:17.000
しかし、今では、デバイス間で超高速なメッセージングを提供するのと同じAppleインフラストラクチャで、添付ファイルも転送できるようになりました。

00:01:17.000 --> 00:01:25.000
だから今、あなたの犬のかわいい写真をキャンバスに落とすと、それはこれまで以上に速く私たちのクラウドインフラストラクチャを介して転送されます。

00:01:25.000 --> 00:01:39.000
これは、転送に必要なデータを最小限に抑え、アイドル待機時間を最小限に抑えるために、Appleテクノロジーの複数のレイヤーを利用して、すべてを可能な限り迅速に体験し、そのすべてがシステム層で行われます。

00:01:39.000 --> 00:01:40.000
しかし、そうではありません。

00:01:40.000 --> 00:01:50.000
SharePlayはユーザーのプライバシーを念頭に置いて構築されているため、転送するデータがデバイス間でエンドツーエンドで暗号化されていることを確認しながら、これらすべて行われます。

00:01:50.000 --> 00:01:53.000
Appleは転送されるデータの内容について知らない。

00:01:53.000 --> 00:01:58.000
そして、これは餅のかわいい犬の写真のためだけでなく、あなたが望むものなら何でもかまいません!

00:01:58.000 --> 00:02:03.000
PDFのようなファイルを持っていますか？頑張れ！音声録音や注釈はどうですか?

00:02:03.000 --> 00:02:09.000
コラボレーションされているユーザーコンテンツは、この新しいAPIによってこれまで以上に高速になりました。

00:02:09.000 --> 00:02:12.000
さて、APIはどのように見えますか?

00:02:12.000 --> 00:02:14.000
さて、すぐに飛び込みましょう!

00:02:14.000 --> 00:02:19.000
慣れ親しむ主な目的は「GroupSessionJournal」です。

00:02:19.000 --> 00:02:22.000
このオブジェクトはiOS 17では初めてです。

00:02:22.000 --> 00:02:27.000
「GroupSessionMessenger」に慣れているように、「GroupSession」で初期化されます。

00:02:27.000 --> 00:02:31.000
しかし、このオブジェクトの目的を理解することが重要です。

00:02:31.000 --> 00:02:36.000
これは、GroupSession全体のすべての人にとって一貫性を保つオブジェクトです。

00:02:36.000 --> 00:02:44.000
これは、ジャーナルで実行するアクションがすべての人に影響し、ジャーナル上のプロパティが同様にすべての人に同期されることを意味します。

00:02:44.000 --> 00:02:46.000
いくつかの例を見ていきましょう。

00:02:46.000 --> 00:02:52.000
ジャーナルを取得したら、「添付ファイル」AsyncSequenceを介して添付ファイルの突然変異を観察できます。

00:02:52.000 --> 00:02:57.000
また、「追加」機能を使用して、任意のカスタム添付ファイルをアップロードできます。

00:02:57.000 --> 00:03:01.000
あなたがしなければならないのは、あなたのタイプを譲渡可能なプロトコルに準拠させるだけです!

00:03:01.000 --> 00:03:15.000
だから今、あるデバイスが「追加」を呼び出すと、「添付ファイル」AsyncSequenceが新しい添付ファイルを与えるだけでなく、GroupSessionの全員が同じイベントが発生し、アップロードしている添付ファイルを読み込むことができます!

00:03:15.000 --> 00:03:23.000
同様に、「remove」関数を呼び出して添付ファイルを削除すると、全員の「添付ファイル」AsyncSequenceがイベントに合わせて更新されます。

00:03:23.000 --> 00:03:24.000
そして、それはほとんどそれです。

00:03:24.000 --> 00:03:30.000
この新しいAPIで添付ファイルをどれだけ簡単にアップロードして受信できるかがわかります。

00:03:30.000 --> 00:03:37.000
DrawTogetherアプリでこれを実装する前に、この新しいAPIを利用する際のいくつかの大きな考慮事項について話しましょう。

00:03:37.000 --> 00:03:43.000
そして、添付ファイルのサイズは無限大ではなく、実際には100MBに制限されています。

00:03:43.000 --> 00:03:47.000
これは、ユーザーエクスペリエンスについて慎重に考えるために行われます。

00:03:47.000 --> 00:03:54.000
これらの経験は高速である必要があり、デバイスは非常に高速でデータをアップロードおよびダウンロードすることしかできません。

00:03:54.000 --> 00:03:58.000
したがって、送信される添付ファイルのサイズを常に最小限にする必要があります。

00:03:58.000 --> 00:04:06.000
つまり、描画アプリの場合、キャンバスで許可されている写真を100MB以下に制限するかもしれません。

00:04:06.000 --> 00:04:18.000
ユーザー生成コンテンツを中心としたデータはここでは完璧ですが、映画のようにユーザーが生成していないより大きな添付ファイルは、ユーザーのデバイスではなく、独自のサーバーから提供する必要があります。

00:04:18.000 --> 00:04:21.000
次に、ライフサイクルがあります。

00:04:21.000 --> 00:04:27.000
ジャーナルに掲載されたものはすべて、グループセッションに誰かがいる限り存在します。

00:04:27.000 --> 00:04:35.000
これは、ジャーナルに添付ファイルを追加した人がGroupSessionから切断された場合でも、添付ファイルが固執することを意味します。

00:04:35.000 --> 00:04:41.000
しかし、全員がGroupSessionを離れると、添付ファイルは彼らと一緒に削除されます。

00:04:41.000 --> 00:04:47.000
GroupSessionMessengerとの統合に慣れている場合は、このトピックを覚えているかもしれません：遅いジョイナー。

00:04:47.000 --> 00:04:58.000
通常、新しい人がGroupSessionに参加すると、アプリケーションは、グループの残りの部分に追いつくように、その人にあなたの世界の状態を再送信する必要があります。

00:04:58.000 --> 00:05:08.000
これは、GroupSessionMessengerを採用するアプリケーションによって管理され、各デバイスがキャッチアップが必要な人にメッセージを送信することを含み、これはかなり高価になる可能性があります。

00:05:08.000 --> 00:05:10.000
次の例を見てみましょう。 

00:05:10.000 --> 00:05:12.000
グループセッションに2人いるとしましょう。

00:05:12.000 --> 00:05:16.000
アダムとブライアンがいます。一方、クララはまだ参加していません。

00:05:16.000 --> 00:05:20.000
だから、クララが加わる前に、アダムとブライアンは楽しく絵を描いています。

00:05:20.000 --> 00:05:25.000
アダムは先に進んで犬の骨を描き、ブライアンも彼の側でそれを更新します。

00:05:25.000 --> 00:05:31.000
今、クララは先に進んで参加しますが、彼女が参加するとき、彼女のキャンバスは空です!

00:05:31.000 --> 00:05:36.000
彼女のデバイスは、彼女が彼らに追いつくように、アダムとブライアンがやっていた情報を取得する必要があります。

00:05:36.000 --> 00:05:47.000
この時点で、アダムとブライアンは、彼らが世界の状態を理解しているものをクララに送らなければならず、クララのデバイスは収束して、彼女が同じポイントにいるようにします。

00:05:47.000 --> 00:05:55.000
さて、これらの図面の場所に添付ファイルを追加すると、アダムとブライアンから送信されたメッセージはかなり大きくなることができます。

00:05:55.000 --> 00:05:57.000
ご想像のとおり、これは問題になります。

00:05:57.000 --> 00:06:03.000
1つのデバイスに画像を与えるためだけに、各人に100MBを再アップロードさせるでしょう。

00:06:03.000 --> 00:06:08.000
さて、今、遅い参加者がGroupSessionJournalであなたのために処理されます。

00:06:08.000 --> 00:06:18.000
レイトジョイナーは、他の人から再アップロードすることなく、ジャーナルにアップロードされた添付ファイルを受け取るため、より高速で帯域幅の広範な経験が少なくなります。

00:06:18.000 --> 00:06:28.000
今、それは多くの情報だったので、楽しい部分に飛び込んで、職場の魔法を見て、DrawTogetherアプリでGroupSessionJournalを採用する方法を見てみましょう。

00:06:28.000 --> 00:06:31.000
これは私たちが変更するDrawTogetherアプリです。

00:06:31.000 --> 00:06:37.000
ご覧のとおり、下部にはSharePlayセッションを開始できるボタンと、セッションをリセットするためのゴミ箱ボタンがあります。

00:06:37.000 --> 00:06:44.000
下部にキャンバスに載せたい写真を選択できるボタンがあれば、かなりいいと思います。そして、この下部に。

00:06:44.000 --> 00:06:48.000
SwiftUIはこれを簡単に始めるので、すぐに飛び込みましょう!

00:06:48.000 --> 00:06:51.000
修正する必要がある4つの主要なコンポーネントがあります。

00:06:51.000 --> 00:06:53.000
まず、私たちの「キャンバス」モデルがあります。

00:06:53.000 --> 00:06:57.000
これは、アプリ全体のメインモデルオブジェクトです。

00:06:57.000 --> 00:07:04.000
ローカル参加者とリモート参加者の両方のすべてのストロークを追跡し、GroupActivitiesへのインターフェースです。

00:07:04.000 --> 00:07:06.000
それから、私たちは3つの見解を持っています。

00:07:06.000 --> 00:07:21.000
他の2つのビューのすべてのサブビューを持つ「ContentView」、先ほど見た下部のボタンを維持する「ControlBar」ビューと、ストロークのためにモデルからすべてのオブジェクトを描画する「CanvasView」、そしてすぐに画像もあります。

00:07:21.000 --> 00:07:23.000
私たちのモデルから始めましょう。

00:07:23.000 --> 00:07:25.000
2つのことを追跡するためにこれが必要です。

00:07:25.000 --> 00:07:31.000
まず、ジャーナルから取得したすべての画像は、新しい構造体「CanvasImage」で追跡します。

00:07:31.000 --> 00:07:37.000
第二に、1つを配置しようとしている場合は、ローカルで選択された画像とすべての画像。

00:07:37.000 --> 00:07:46.000
それでは、Canvasに「GroupSessionJournal」を作成し、configureGroupSession関数で行うすべての添付ファイルを処理しましょう。

00:07:46.000 --> 00:07:54.000
そして、ローカルで選択した画像をジャーナルに追加する関数を作成し、ビューから呼び出すことができます。

00:07:54.000 --> 00:08:00.000
今、私たちはすべての非UIピースを手に入れました、先に進んでいくつかのビューを変更しましょう。

00:08:00.000 --> 00:08:03.000
写真を選択するボタンから始めます。 

00:08:03.000 --> 00:08:09.000
以前のことを覚えているなら、ControlBarにこのボタンを追加したいと思いました。

00:08:09.000 --> 00:08:21.000
先に進んでPhotosUIをインポートし、「PhotosPicker」ビューを使用して新しいボタンを追加し、「selectedImageData」でモデルに直接配置しましょう。

00:08:21.000 --> 00:08:29.000
先に進み、選択した写真を視覚化し、キャンバス上の必要な場所に移動できるPhotoPlacementViewと呼ばれるシンプルなビューを作成しました。

00:08:29.000 --> 00:08:33.000
さあ、そのビューをContentViewに追加しましょう。

00:08:33.000 --> 00:08:35.000
私たちの進捗状況を見てみましょう。

00:08:35.000 --> 00:08:39.000
セッションを開始し、写真ボタンが表示されます。

00:08:39.000 --> 00:08:44.000
写真を選んで、バム！ドラッグできる画像があります。

00:08:44.000 --> 00:08:52.000
さて、最後の部分は、モデルからすべての画像を視覚化するために「キャンバス」ビューを変更することです。

00:08:52.000 --> 00:08:59.000
試してみると、画像の最後の場所を選択するとすぐに、画像が両側に表示されることがわかります。

00:08:59.000 --> 00:09:00.000
ふぅ。

00:09:00.000 --> 00:09:03.000
今、私たちは終わり、私たちはかなりクールな経験をしたと思います。

00:09:03.000 --> 00:09:05.000
チューニングしてくれてありがとう。

00:09:05.000 --> 00:09:12.000
このセッションを見たので、GroupActivitiesでどのような素晴らしい体験を構築できるかを確認してください。

00:09:12.000 --> 00:09:19.000
GroupActivitiesをまだ採用していない場合は、SharePlayがアプリにとって何を意味するのかのイントロとして、「SharePlayをアプリに追加」をチェックしてください。

00:09:19.000 --> 00:09:28.000
また、このDrawTogetherアプリをどのように始めたか、またはGroupActivitiesを採用する方法の例を見たい場合は、「GroupActivitiesでカスタムエクスペリエンスを構築する」をチェックしてください。

00:09:28.000 --> 00:09:31.000
もう一度ありがとう、そして私たちはあなたが作るものを見るのが待ちきれません!

00:09:31.000 --> 23:59:59.000
♪ ♪

