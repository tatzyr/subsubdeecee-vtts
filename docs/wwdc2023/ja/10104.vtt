WEBVTT

00:00:01.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:12.000
アレックス：こんにちは、私はアレックス・エイブラメッツです。

00:00:12.000 --> 00:00:15.000
「メディアアプリをHomePodと統合する」へようこそ。

00:00:15.000 --> 00:00:19.000
私はホームのためのエキサイティングで新しいSiri機能を紹介するためにここにいます。

00:00:19.000 --> 00:00:27.000
iOS 17以降、HomePodの所有者は、iPhoneまたはiPadにインストールされているアプリを使用して、Siriにメディアを再生するように頼むことができます。

00:00:27.000 --> 00:00:35.000
この新しいSiri機能により、現在SiriKit Media IntentsをサポートしているアプリがHomePodでコンテンツをシームレスに再生できるようになります。

00:00:35.000 --> 00:00:40.000
まず、HomePodで再生するメディアアプリの拡張サポートを紹介します。

00:00:40.000 --> 00:00:45.000
次に、サポートされているユースケースと経験を取り上げ、それらを実装するための最良の方法を示します。

00:00:45.000 --> 00:00:50.000
最後に、この機能がホームとどのように統合されているかについて話します。

00:00:50.000 --> 00:00:55.000
より多くのメディアアプリのHomePodサポートについて、まずは始めましょう。

00:00:55.000 --> 00:01:04.000
HomePodがリクエストを処理すると、SiriKitのインテントがiPhoneに送信され、そこでSiriがアプリを起動し、AirPlayのコンテンツをスピーカーに戻します。

00:01:04.000 --> 00:01:08.000
このセッションの後半でAirPlayのサポートについて詳しく説明します。

00:01:08.000 --> 00:01:18.000
要求を満たすために、HomePodはWi-Fi経由でiPhoneと通信します。つまり、デバイスはリクエスト時に同じネットワーク上にある必要があります。

00:01:18.000 --> 00:01:21.000
デバイスは物理的に近接している必要はありません。

00:01:21.000 --> 00:01:29.000
リビングルームでスピーカーと話していて、寝室で携帯電話が充電されている場合、HomePodは正常に再生されます。

00:01:29.000 --> 00:01:36.000
メディアを再生するためのSiriのリクエストは、AirPlayをサポートするほとんどのスピーカーを含む、複数の目的地で動作します。

00:01:36.000 --> 00:01:42.000
今日、SiriKit Media Intentsをサポートするアプリは、追加の変更なしでこの機能を使用できます。

00:01:42.000 --> 00:01:48.000
後で、ユーザーエクスペリエンスとパフォーマンスをさらに向上させることができるいくつかのことについて話します。

00:01:48.000 --> 00:01:56.000
HomePodでネイティブにサポートされていないアプリの再生、追加、アフィニティ要求は、プライマリiPhoneにルーティングされます。

00:01:56.000 --> 00:02:02.000
HomePodでは、メディアの検索や検索をリクエストすると再生されることに注意してください。

00:02:02.000 --> 00:02:08.000
Siriは、認識されたホームユーザーのデバイスにリクエストをルーティングするために音声認識に依存します。

00:02:08.000 --> 00:02:15.000
さらに、曲の「いいね」または「追加」のリクエストは、Siriを使わずにAirPlayされたコンテンツでも機能します。

00:02:15.000 --> 00:02:21.000
現在、多くの既存のメディアアプリがHomePodで利用可能になり、音楽だけではありません。

00:02:21.000 --> 00:02:22.000
多くの種類のメディアがサポートされています。

00:02:22.000 --> 00:02:27.000
音楽、オーディオブック、ポッドキャスト、ラジオ、瞑想など。

00:02:27.000 --> 00:02:34.000
SiriKit Mediaのインテントに新しいサポートを追加するアプリは、HomePodで自動的にサポートされます。

00:02:34.000 --> 00:02:37.000
あなたのアプリが今日iOSでできることはすべてHomePodで動作します。

00:02:37.000 --> 00:02:44.000
たとえば、アプリユーザーは、アーティスト、アルバム、曲、音楽ジャンル、ヒット曲の再生を依頼できます。

00:02:44.000 --> 00:02:49.000
リクエストでアプリ名が使用されると、SiriはアプリがiPhoneにインストールされているかどうかを確認します。

00:02:49.000 --> 00:02:56.000
アプリがインストールされている場合、SiriはAirPlay接続を確立し、アプリに再生を開始するように頼みます。

00:02:56.000 --> 00:03:00.000
たぶん、あなたのアプリはポッドキャストやオーディオブックを聴くことです。

00:03:00.000 --> 00:03:07.000
これで、ニュースに追いついたり、HomePodで現在のオーディオブックを聴き続けることができます。

00:03:07.000 --> 00:03:12.000
Siriは、速度の変更、早送り、再生制御のリクエストを理解します。

00:03:12.000 --> 00:03:18.000
アプリに固有のリクエストで、メディアインテントでカバーされていないリクエストは、アプリインテントを使用して実装できます。

00:03:18.000 --> 00:03:24.000
「App Intentsの機能強化を探る」やその他の関連セッションをチェックしてください。

00:03:24.000 --> 00:03:26.000
では、アプリにSiriを追加するにはどうすればよいですか?

00:03:26.000 --> 00:03:35.000
SiriKit Media Intentsをサポートするために必要なものについて説明し、すべてが確実に機能し、素晴らしい体験を提供することを確認することについて話しましょう。

00:03:35.000 --> 00:03:38.000
メディアインテントを既存のサポートを持つアプリは、単に機能します。

00:03:38.000 --> 00:03:48.000
たとえば、SoundCloudがiPhoneにインストールされていて、HomePodにSoundCloudで何かを再生するように頼んだ場合、メディアはスピーカーで再生されます。

00:03:48.000 --> 00:03:53.000
Siri経由での再生サポートをアプリに追加するには、いくつかの簡単な手順が含まれています。

00:03:53.000 --> 00:04:00.000
インテント拡張機能を追加し、検索と再生でSiriコールバックを配線するためのいくつかの方法を実装する必要があります。

00:04:00.000 --> 00:04:11.000
2019年の「SiriKitメディアインテントの紹介」ビデオと2020年の「SiriKitメディアインテントをより多くのプラットフォームに拡張する」に詳細な手順があります。

00:04:11.000 --> 00:04:15.000
曲を再生できるサンプルアプリからコードを調べてみましょう。

00:04:15.000 --> 00:04:23.000
ここでは、リクエストが「Push it」という名前のエンティティ用であることを確認し、その場合はメディアアイテムを返します。

00:04:23.000 --> 00:04:25.000
試してみましょう。 

00:04:25.000 --> 00:04:28.000
ねえSiri、コントロールオーディオでデュークスの「Push It」を再生して。

00:04:28.000 --> 00:04:31.000
Siri：「Push It」がiPhoneから再生中になりました。

00:04:31.000 --> 00:04:40.000
アレックス:この曲は期待どおりに再生されます!

00:04:40.000 --> 00:04:42.000
では、何か他のことを尋ねましょう。

00:04:42.000 --> 00:04:44.000
ねえSiri、コントロールオーディオでジャズを演奏して。

00:04:44.000 --> 00:04:47.000
Siri: あなたのコントロールオーディオライブラリでは見つかりませんでした。

00:04:47.000 --> 00:04:51.000
アレックス：今回、Siriは何も見つからなかったと言った。

00:04:51.000 --> 00:04:59.000
これは、私のアプリがジャンルの再生をサポートしていないため、関数が「サポートされていない」応答を返したために起こりました。

00:04:59.000 --> 00:05:01.000
しかし、私はSiriの反応をより良くすることができます!

00:05:01.000 --> 00:05:09.000
「サポートされていないメディアタイプ」や、アプリに有効なログインが必要ななど、再生できないより具体的な理由を提供できます。

00:05:09.000 --> 00:05:15.000
そのような場合、Siriは問題の解決に役立つ応答を提供します。

00:05:15.000 --> 00:05:25.000
次に、コードを変更し、リクエストが音楽ジャンルを再生する場合、より具体的なエラーコードを返すガードステートメントを追加します。

00:05:25.000 --> 00:05:28.000
ねえSiri、コントロールオーディオでジャズを演奏して。

00:05:28.000 --> 00:05:31.000
Siri: コントロールオーディオはその再生をサポートしていません。

00:05:31.000 --> 00:05:37.000
アレックス：それで、今、Siriはアプリがその再生をサポートしていないと言っていますが、これはより有用な応答です。

00:05:37.000 --> 00:05:41.000
Siriのリクエストが行われたとき、あなたのアプリは何を受け取るのか疑問に思うかもしれません。

00:05:41.000 --> 00:05:46.000
前の例では、「mediaName」フィールドと「mediaType」フィールドについて議論しました。

00:05:46.000 --> 00:05:50.000
あなたのアプリが得るかもしれない最も一般的な意図のいくつかを見直しましょう。

00:05:50.000 --> 00:05:56.000
アプリ名だけで簡単な「プレイ」は、検索条件なしでインテントを送信します。

00:05:56.000 --> 00:05:59.000
音楽アプリは、パーソナルミックスやステーションを再生できます。

00:05:59.000 --> 00:06:05.000
ポッドキャストやオーディオブックアプリは、最後に再生されたアイテムを再開する場合があります。

00:06:05.000 --> 00:06:10.000
「アプリで音楽を再生する」リクエストの場合、「音楽」は「mediaType」に変換されます。

00:06:10.000 --> 00:06:14.000
エンティティ名の「再生」リクエストは、mediaNameフィールドのみを提供します。

00:06:14.000 --> 00:06:23.000
曲、アーティスト、ポッドキャストなど、エンティティの種類を決定するのはアプリ次第です。

00:06:23.000 --> 00:06:30.000
「song」とその名前に言及すると、Songに等しいmediaTypeとmediaNameフィールドが生成されます。

00:06:30.000 --> 00:06:33.000
これは「人気ヒット」を求めることがどのように振る舞うかです。

00:06:33.000 --> 00:06:39.000
メディア名は「音楽」に設定され、ソートオーダーは「人気」になります。

00:06:39.000 --> 00:06:43.000
次に何かを再生するように頼むと、アプリにキューに追加するように指示されます。

00:06:43.000 --> 00:06:48.000
「Playbackqueuelocation」の値が「next」であることに注意してください。

00:06:48.000 --> 00:06:57.000
アプリがニュース、ポッドキャスト、オーディオブックをサポートしている場合、「私のオーディオブックを再生する」、「最新のニュースを再生する」、「ハイテクニュースポッドキャストを再生する」などのリクエストを受け取ることがあります。

00:06:57.000 --> 00:07:05.000
アプリに送信される予定のリクエストについて、Siriが生成した意図を探求し、実験する必要があります。

00:07:05.000 --> 00:07:10.000
結果を解決した後、Siriはインテント拡張機能の「ハンドル」ステップを実行します。

00:07:10.000 --> 00:07:15.000
「handleInApp」と「continueInApp」の2つの応答のうちの1つを返すことができます。

00:07:15.000 --> 00:07:20.000
「HandleInApp」は、アプリを起動してバックグラウンドで再生するようにシステムに指示します。

00:07:20.000 --> 00:07:24.000
「ContinueInApp」は、フォアグラウンドでアプリを起動するようにシステムに求めます。

00:07:24.000 --> 00:07:32.000
オーディオを再生するリクエストの場合、バックグラウンド再生は、電話のロックを解除する必要が不要なため、より良い体験が得られます。

00:07:32.000 --> 00:07:39.000
HomePodにリクエストが行われると、あなたの携帯電話がどこにもない可能性があるため、さらに顕著になります。

00:07:39.000 --> 00:07:44.000
Siriコールバックに対するアプリの応答は合理的に高速である必要があることを覚えておいてください。

00:07:44.000 --> 00:07:47.000
遅いリクエストはしばしば放棄されるか、単にタイムアウトされます。

00:07:47.000 --> 00:07:51.000
アプリが最大10秒以内に応答することを確認してください。

00:07:51.000 --> 00:08:00.000
できるだけ速くすることが望ましいですが、10秒後、Siriの反応は一般的になり、あまり役に立ちません。

00:08:00.000 --> 00:08:06.000
曲やポッドキャストが好きだとSiriに伝えたい場合、またはプレイリストに追加したい場合はどうなりますか?

00:08:06.000 --> 00:08:14.000
INAddMediaIntentとINUpdateMediaAffinityIntentをサポートすることで、アプリはこれらのリクエストに対応できます。

00:08:14.000 --> 00:08:18.000
実装はINPlayMediaIntentと非常によく似ています。

00:08:18.000 --> 00:08:24.000
AirPlayedコンテンツの場合、Siriは話す人のiPhoneにリクエストを送信します。

00:08:24.000 --> 00:08:30.000
アプリとSiriの統合をより堅牢にするために、いくつかのことを確認しましょう。

00:08:30.000 --> 00:08:32.000
まず、個人的なアプリの語彙です。

00:08:32.000 --> 00:08:39.000
個人的なアプリの語彙を使用して、あなたのアプリは、要求が含まれる可能性のあるユーザー固有のエンティティのシステムに通知することができます。

00:08:39.000 --> 00:08:46.000
これらには、個人のプレイリスト、購入したオーディオブック、ポッドキャスト、お気に入りのアーティスト、または著者が含まれます。

00:08:46.000 --> 00:08:54.000
通常、フォアグラウンドアプリのみが再生を開始できますが、Siriのリクエスト中に、アプリはバックグラウンドでオーディオを開始できます。

00:08:54.000 --> 00:09:01.000
これが機能するためには、そのセッションをアクティブにする前に、オーディオセッションを適切に設定しておくことが非常に重要です。

00:09:01.000 --> 00:09:06.000
これは、HomePod、iOS、CarPlayなど、サポートされているすべてのプラットフォームに適用されます。

00:09:06.000 --> 00:09:13.000
この例では、オーディオカテゴリを再生に設定することで、アプリはオーディオを再生することをシステムに通知します。

00:09:13.000 --> 00:09:21.000
オーディオカテゴリ、モード、およびルート共有ポリシーは、システムがオーディオ再生と中断をどのように処理するかに影響します。

00:09:21.000 --> 00:09:29.000
モードを「スポークンオーディオ」に設定すると、コンテンツの音量を一時的に減らすのではなく、中断されたときに再生が一時停止します。

00:09:29.000 --> 00:09:38.000
これは、リスナーがコンテンツの重要な部分を見逃さないように、ポッドキャストやオーディオブックを再生するアプリに特に便利です。

00:09:38.000 --> 00:09:45.000
セッションをアクティブにする前に、オーディオカテゴリが「.playback」に設定されていない場合に何が起こるかを見てみましょう。

00:09:45.000 --> 00:09:48.000
ねえ、Siri、コントロールオーディオでデュークスの「Push It」を再生して。

00:09:48.000 --> 00:09:51.000
Siri：「Push It」がiPhoneから再生中になりました。

00:09:51.000 --> 00:09:59.000
アレックス：アプリがフォアグラウンドにある間、オーディオは再生されますが、アプリがバックグラウンドに入ると、たとえば電話をロックすると、再生が停止します。

00:09:59.000 --> 00:10:03.000
それは機能しますが、あなたが期待する方法ではありません。

00:10:03.000 --> 00:10:09.000
オーディオセッションを正しく設定するためにコードを変更するとどうなるか調べてみましょう。

00:10:09.000 --> 00:10:13.000
ねえ、Siri、コントロールオーディオでデュークスの「Push It」を再生して。

00:10:13.000 --> 00:10:15.000
Siri: これがあなたのiPhoneからの「プッシュ」です。

00:10:15.000 --> 00:10:21.000
アレックス：電話をロックすると、オーディオが再生され続けます。

00:10:21.000 --> 00:10:26.000
♪ ♪

00:10:26.000 --> 00:10:40.000
HomePodとiPhoneは多くのことができるので、アプリからのオーディオ再生が着信、ナビゲーションプロンプト、Siriリクエスト、または何か他のものを再生する他のアプリによって中断されることは珍しくありません。

00:10:40.000 --> 00:10:49.000
特に部屋の誰かがHomePodと話していて、iPhoneが手元にない場合は、アプリが再生を継続できるように、中断を処理することが重要です。

00:10:49.000 --> 00:10:52.000
さて、AirPlayについて話しましょう。

00:10:52.000 --> 00:11:14.000
システムがアプリからコンテンツをAirPlayに正常に実行するには、次のことを行うようにしてください。先に述べたように、オーディオカテゴリ、モード、およびルート共有ポリシーを適切に設定し、MPNowPlayingInfoCenterを使用して現在再生中のアイテムについてシステムに通知し、MPRemoteCommandCenterを使用して、再生、一時停止、スキップなどのリモートコマンドを受信します。

00:11:14.000 --> 00:11:18.000
これらの手順では、AirPlayスピーカーで再生するアプリからメディアを取得します。

00:11:18.000 --> 00:11:26.000
しかし、オーディオデータは別のデバイスに配信されているため、システムはバッファを必要とし、スムーズな再生を確実にするためにいくつかのデータを蓄積します。

00:11:26.000 --> 00:11:31.000
これにより、メディアが再開または停止されるたびに遅延が発生する可能性があります。

00:11:31.000 --> 00:11:35.000
バッファリングされた再生にAPIの1つを使用すると、この懸念が解消されます。

00:11:35.000 --> 00:11:41.000
このトピックの詳細については、「AirPlay体験の調整」という今年のセッションをチェックしてください。

00:11:41.000 --> 00:11:46.000
次に、この機能に関する追加の考慮事項について説明します。

00:11:46.000 --> 00:11:51.000
iPhoneやiPadを複数持っている場合はどうなりますか?Siriはどれを使うべきかをどうやって知るのですか?

00:11:51.000 --> 00:12:01.000
答えは、SiriがSiriKit MediaリクエストをプライマリiPhoneにルーティングすることです。これは、Apple IDと「探す」の設定で位置情報を共有するように設定されているものです。

00:12:01.000 --> 00:12:10.000
Siriはこれらの要求を満たすために他のデバイスと通信するため、要求するユーザーはホームに登録し、私の声の認識を有効にする必要があります。

00:12:10.000 --> 00:12:14.000
この設定はホームアプリで見つけることができます。

00:12:14.000 --> 00:12:18.000
この機能が機能するためには、パーソナルリクエストを有効にする必要はありません。

00:12:18.000 --> 00:12:29.000
「Recognize My Voice」が有効になっていない場合、またはホームに登録されていない場合は、あなたや他の人のデバイスからメディアを再生できないことに注意してください。

00:12:29.000 --> 00:12:42.000
アプリをインストールしたばかりの場合、またはSiriにそこから再生するように頼んだことがない場合は、アプリを使用して再生する最初のリクエストは、iOSデバイスに誘導し、Siriがアプリデータにアクセスする許可を要求します。

00:12:42.000 --> 00:12:47.000
この許可は、アプリから再生するための最初のSiriリクエストにのみ必要です。

00:12:47.000 --> 00:12:51.000
私があなたを手放す前に、ここにあなたが覚えておくべきことがあります。

00:12:51.000 --> 00:12:57.000
SiriKit Mediaのインテントサポートを追加することは、アプリがHomePodで動作するために必要なことです。

00:12:57.000 --> 00:13:06.000
バッファ付き再生を追加し、より複雑なクエリをサポートし、Siriにより多くのコンテキストを提供することで、ユーザーエクスペリエンスをさらに向上させることができます。

00:13:06.000 --> 00:13:07.000
ありがとう！

00:13:07.000 --> 00:13:09.000
あなたのアプリがHomePodで動作するのを見るのが待ちきれません!

00:13:09.000 --> 23:59:59.000
♪ ♪

