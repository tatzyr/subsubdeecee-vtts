WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:22.000
こんにちは、私はWebKit Developer ExperienceチームのエンジニアであるPatrickです。今日は、SafariでWeb開発者が利用できる機能のツアーにあなたを連れて行くことに興奮しています。

00:00:22.000 --> 00:00:35.000
Safariには、Web開発者やデザイナーが、Webページ、Webアプリ、JavaScriptとWebビューを備えたアプリ、拡張機能などを検査するための豊富なツールセットにアクセスできる機能が含まれています。

00:00:35.000 --> 00:00:43.000
また、これらのツールは、Macとペアリングすると、iOS、iPadOS、tvOS、およびxrOS間でシームレスに機能します。

00:00:43.000 --> 00:00:54.000
今日は、macOSでWebページを検査するのに役立つツールを簡単に見ることから始めて、Safariで利用可能な開発者ツールの幅をカバーします。

00:00:54.000 --> 00:01:03.000
次に、Safari、iOS、iPadOS、xrOSシミュレータでレスポンシブレイアウトをプレビューする方法を見ていきます。

00:01:03.000 --> 00:01:15.000
次に、Macを超えて、iPhoneやxrOSを実行しているデバイスなどの他のデバイスで実行されているコンテンツをMacでデバッグする方法を見ていきます。

00:01:15.000 --> 00:01:23.000
次に、WebDriverを使用して、クロスブラウザとクロスプラットフォームの方法で自動テストを実行する方法を見ていきます。

00:01:23.000 --> 00:01:32.000
最後に、再設計された機能フラグ設定を使用して、将来のWebプラットフォームの機能を探索する方法を見ていきます。

00:01:32.000 --> 00:01:39.000
しかし、これらのトピックを掘り下げる前に、Safariで開発者機能を使用したことがない場合は、それらを有効にする必要があります。

00:01:39.000 --> 00:01:44.000
Safariの設定で、ウェブ開発者向けの機能を表示するオプションを見つけることができます。

00:01:44.000 --> 00:01:49.000
そこに行くには、メニューバーからSafariを選択し、[設定]を選択します。

00:01:49.000 --> 00:01:52.000
[設定] ウィンドウで、[詳細設定] タブをクリックします。

00:01:52.000 --> 00:01:57.000
ここでは、ウェブ開発者向けの機能を表示するチェックボックスがあります。

00:01:57.000 --> 00:01:59.000
設定を有効にします。

00:01:59.000 --> 00:02:09.000
ウェブ開発者向けの機能を有効にしたので、Safariのツールを使用して開いているウェブページを検査する方法を簡単に見てみましょう。

00:02:09.000 --> 00:02:14.000
これは私が取り組んできたウェブページで、背景色をちょうど良い色にしようとしていました。

00:02:14.000 --> 00:02:20.000
そして、本当にすべてをまとめるのは、宇宙飛行士のヘルメットから色をつかむことだと思います。

00:02:20.000 --> 00:02:27.000
Webインスペクタを使用して、このページの背景グラデーションの一部となる色を選択する方法を見てみましょう。

00:02:27.000 --> 00:02:32.000
Web Inspectorをすばやく開いて、作業中のページを検査するには、2つの方法があります。

00:02:32.000 --> 00:02:43.000
1つ目は、Webコンテンツの設計と開発に役立つ主要なツールを見つけやすくするために、今年考え直した開発メニューです。

00:02:43.000 --> 00:02:49.000
メニューには、Webインスペクタをタブまたはタスクに直接開くことができるいくつかの項目があります。

00:02:49.000 --> 00:02:56.000
特定のタブにジャンプするのではなく、Webインスペクタを開きたかったので、ここで[Webインスペクタを表示]を選択します。

00:02:56.000 --> 00:03:01.000
しかし、私があなたに見せたいWebインスペクタを開くための別の便利な方法があります。

00:03:01.000 --> 00:03:16.000
Web ページのどこでも、Control キーを押しながらクリックしてコンテキスト メニューを表示し、Inspect Element を選択します。Inspect Element は Web インスペクタを表示するだけでなく、要素を選択し、詳細サイドバーにスタイルやその他の情報を表示します。

00:03:16.000 --> 00:03:22.000
Inspect Elementアイテムの使用は、Webインスペクタが表示された後でも機能します。

00:03:22.000 --> 00:03:37.000
同じ方法で別の要素を選択するか、要素選択ツールを使用して、セレクタ、マージン、形状アウトライン、アクセシビリティロールなどのレイアウト情報など、ホバリングする各要素に関する情報を表示できます。

00:03:37.000 --> 00:03:42.000
要素選択モードでクリックすると、その要素はWebインスペクタで選択されます。

00:03:42.000 --> 00:03:48.000
しかし、Webインスペクタを開いたので、ページの背景グラデーションを見てみたい。

00:03:48.000 --> 00:03:54.000
私は本当に彼らのバイザーからいくつかの色をサンプリングすることによって、宇宙飛行士をもっと家に作りたいです。

00:03:54.000 --> 00:04:01.000
グラデーションを編集するには、スタイルサイドバーのグラデーションの横にあるプレビュースウォッチをクリックします。

00:04:01.000 --> 00:04:14.000
編集したいグラデーションの部分を選択し、カラーピッカーを使用して、宇宙飛行士のバイザーなど、画面上のどこかから色をつかみます。

00:04:14.000 --> 00:04:17.000
うーん、それは私の好みには少し明るすぎます。

00:04:17.000 --> 00:04:19.000
これはあまり良い考えではなかったのかもしれません。

00:04:19.000 --> 00:04:21.000
以前はもっと良く見えたと思います。

00:04:21.000 --> 00:04:27.000
Command-Zで変更を取り消して、今のところ同じ色にします。

00:04:27.000 --> 00:04:33.000
もちろん、これはWebインスペクタがWebページを検査するのに役立つ多くの方法の1つにすぎません。

00:04:33.000 --> 00:04:45.000
Webインスペクタで利用可能なツールについて詳しく知りたい場合は、WWDC21の「Webインスペクタの新機能」と「Webインスペクタの改善を発見する」を必ずチェックしてください。

00:04:45.000 --> 00:04:56.000
次に、ページのユーザーのディスプレイに適応する能力をテストすることで、Webページのデザインを洗練することを目的とした別のツールを見てみましょう。

00:04:56.000 --> 00:05:05.000
Safariには、このタスク用のレスポンシブデザインモードと呼ばれるツールがあり、レスポンシブデザインモードの入力項目を使用して開発メニューからアクセスできます。

00:05:05.000 --> 00:05:16.000
以前にレスポンシブデザインモードを使用したことがある場合は、任意の画面サイズでコンテンツのレイアウトの応答性に集中できるように調整を行ったことに気付いたかもしれません。

00:05:16.000 --> 00:05:21.000
ウィンドウや画面よりも大きなビューポートサイズを試すことができます。

00:05:21.000 --> 00:05:33.000
ビューポートの側面にあるハンドルをドラッグすると、ビューポートは拡大縮小してすべてのページを表示し続け、テキストや画像などの要素を新しいビューポートに合わせてリフローします。

00:05:33.000 --> 00:05:40.000
ビューポートの上に独自の幅と高さを入力して、特定のサイズをターゲットにすることもできます。

00:05:40.000 --> 00:05:49.000
幅と高さの右側には、ビューポートがレンダリングされている実際のサイズの割合であるスケールファクターが表示されます。

00:05:49.000 --> 00:06:06.000
ここでは、ビューポートの現在の高さが800ピクセルであるため、スケール係数は100%ではありませんが、ウィンドウはビューポート全体を表示するのに十分な高さではなかったため、Safariはビューポートの表示をフルサイズの78%に縮小しました。

00:06:06.000 --> 00:06:20.000
レスポンシブデザインモードでは、ピクセル比を変更することもできます。これにより、さまざまなディスプレイのピクセル比に合わせた画像アセットやその他のスタイリングを提供することで、応答性の余分な次元をテストできます。

00:06:20.000 --> 00:06:42.000
画像タグのソースセット、画像がどこでも使用できるCSS画像セット機能、解像度メディアクエリなど、Web上のディスプレイのピクセル比に応答する方法はいくつかあり、ディスプレイのピクセル比に応じて、ボーダーサイズなど、ページのスタイルのあらゆる側面を微調整できます。

00:06:42.000 --> 00:06:52.000
しかし、時には、macOSだけでなく、iOS、iPadOS、xrOSでもページの応答性をテストしようとしているかもしれません。

00:06:52.000 --> 00:06:59.000
今年新しく、Safariからシミュレーターにすばやく飛び込む機能を導入しました。

00:06:59.000 --> 00:07:07.000
シミュレータは、物理的なデバイスを必要とせずに、iOS、iPadOS、およびxrOSでWebコンテンツをテストするのに最適な方法です。

00:07:07.000 --> 00:07:14.000
iOSとiPadOSのシミュレータはXcodeに含まれており、それらのプラットフォームにはSafariが含まれています。

00:07:14.000 --> 00:07:17.000
XcodeはMac App Storeで無料でダウンロードできます。

00:07:17.000 --> 00:07:25.000
そして、Xcodeを一度実行して設定を完了すると、次回Safariを起動するとシミュレータが利用可能になります。

00:07:25.000 --> 00:07:34.000
「シミュレータで開く」をクリックすると、インストールされているシミュレータのリストが表示され、現在実行中のシミュレータが簡単にアクセスできるように一番上に表示されます。

00:07:34.000 --> 00:07:44.000
Xcodeがインストールされていない場合、または他のデバイス用のシミュレータを追加したい場合は、メニューのリンクをたどってドキュメントを表示して、始めるのに役立ちます。

00:07:44.000 --> 00:07:47.000
シミュレーターで現在のページを開きましょう。

00:07:47.000 --> 00:07:55.000
このシミュレータはすでに実行されていましたが、シミュレータがまだ実行されていない場合は、起動します。

00:07:55.000 --> 00:08:03.000
注意すべき重要なことは、シミュレータとmacOSのSafariのページレイアウトの違いです。

00:08:03.000 --> 00:08:12.000
ほぼ同じ幅でも、iOSのSafariは、より多くの画面の不動産が利用可能であるかのようにページをレイアウトすることに注意してください。

00:08:12.000 --> 00:08:27.000
シミュレータの他の優れた側面の1つは、スムーズなスクロールやダブルタップでズームなど、ユーザーがiOSで動作することを期待する動作をテストして、iPhoneを持っていなくても優れたユーザーエクスペリエンスを確保できることです。

00:08:27.000 --> 00:08:40.000
また、シミュレータでWebページを開いたら、シミュレータを見つけて、検査するシミュレータでWebページを選択することで、開発メニューからWebインスペクタを使用して検査することもできます。

00:08:40.000 --> 00:08:47.000
その後、Webインスペクタが独自のウィンドウで開き、シミュレータから選択したページを検査します。

00:08:47.000 --> 00:08:55.000
iOSとiPadOSに加えて、xrOSシミュレータを利用して、そのプラットフォームでウェブコンテンツをテストできます。

00:08:55.000 --> 00:09:04.000
シミュレータがインストールされていない場合は、[シミュレータで開く]メニューから[シミュレーターを追加]を選択して、追加方法を確認してください。

00:09:04.000 --> 00:09:14.000
シミュレータをインストールしたら、MacのSafariを使用してウェブコンテンツを検査するなど、iOSシミュレータと同じ方法で使用できます。

00:09:14.000 --> 00:09:20.000
Safariの開発メニューでシミュレータを見つけ、検査したいコンテンツを選択します。

00:09:20.000 --> 00:09:33.000
実際、macOSのSafariからシミュレータを検査できるだけでなく、MacのSafariからiOS、iPadOS、tvOS、xrOSデバイスを検査することもできます。

00:09:33.000 --> 00:09:49.000
シミュレータとは異なり、Safariやその他のアプリで開いているWebページのリストを提供することをデバイスに選択するために、Macを使用して検査する前に、デバイス上のコンテンツの検査を有効にする必要があります。

00:09:49.000 --> 00:09:53.000
iOSとiPadOSの場合、設定アプリからこれを行うことができます。

00:09:53.000 --> 00:09:59.000
下にスクロールしてSafariを選択し、一番下までスクロールして[詳細設定]を選択します。

00:09:59.000 --> 00:10:02.000
次に、Webインスペクタを切り替えます。

00:10:02.000 --> 00:10:07.000
最後に、ケーブルを使ってデバイスをMacに接続します。

00:10:07.000 --> 00:10:15.000
ここでは、Safariウィンドウやホーム画面のウェブアプリなど、iPadでいくつかのウェブコンテンツを開きました。

00:10:15.000 --> 00:10:20.000
では、このコンテンツを調べるためにMacに戻りましょう。

00:10:20.000 --> 00:10:28.000
Macの開発メニューから、以前に使用したシミュレータと同じ場所に接続したデバイスのエントリが表示されます。

00:10:28.000 --> 00:10:38.000
また、シミュレータと同様に、Safariで開いたWebページ、ホーム画面のWebアプリ、さらにはサービスワーカーなど、検査可能なコンテンツが表示されます。

00:10:38.000 --> 00:10:45.000
先ほどと同様に、ホーム画面のウェブアプリなど、メニューから検査可能なコンテンツを選択できます。

00:10:45.000 --> 00:10:52.000
そして、以前と同様に、Webインスペクタが表示され、Macからデバイス上のコンテンツを検査します。

00:10:52.000 --> 00:10:58.000
しかし、Macからデバイスを検査するために常にケーブルを使用する必要がなければ、それは素晴らしいことではないでしょうか?

00:10:58.000 --> 00:11:04.000
Macに戻って、ネットワーク経由でデバイスに接続する方法を見てみましょう。 もう一度見てみましょう。

00:11:04.000 --> 00:11:09.000
開発メニューに戻ると、「ネットワーク経由で接続」というタイトルの項目があります。

00:11:09.000 --> 00:11:18.000
一度選択すると、Macとデバイスの両方が同じネットワーク上にある限り、ワイヤを必要とせずにデバイスを接続できるようになりました。

00:11:18.000 --> 00:11:24.000
また、デバイスでその設定を有効にすると、デバイスのプラグを抜いてワイヤレスで検査できるようになりました。

00:11:24.000 --> 00:11:31.000
今年は、macOS Sonomaを実行しているMacからxrOSデバイスを検査することもできます。

00:11:31.000 --> 00:11:37.000
しかし、始めるのはiOSやiPadOSとは少し異なります。

00:11:37.000 --> 00:11:44.000
Macへの有線接続なしでデバイスを検査できるように、ネットワークを介してこのプラットフォームとのペアリングをサポートします。

00:11:44.000 --> 00:11:47.000
同僚のデバイスとペアリングしましょう。

00:11:47.000 --> 00:11:53.000
開始するには、[設定]を開き、[アプリ]、[Safari]の順に選択します。

00:11:53.000 --> 00:12:00.000
一番下までスクロールして[詳細設定]を選択し、Webインスペクタを有効にします。

00:12:00.000 --> 00:12:04.000
次に、デバイスをMacとペアリングする必要があります。

00:12:04.000 --> 00:12:08.000
Macとデバイスの両方が同じネットワークに接続されていることを確認する必要があります。

00:12:08.000 --> 00:12:13.000
次に、設定アプリから「一般」を選択し、「リモートデバイス」を選択します。

00:12:13.000 --> 00:12:19.000
リモートデバイスの画面が表示されている間、あなたのデバイスはmacOSからペアリングできます。

00:12:19.000 --> 00:12:26.000
Macで、Safariで開発メニューを開き、デバイスのサブメニューから「開発に使用」を選択します。

00:12:26.000 --> 00:12:34.000
デバイスでは、6桁のペアリングコードが表示され、Macではペアリングコードを入力するウィンドウが表示されます。

00:12:34.000 --> 00:12:38.000
Macにコードを入力してください。

00:12:38.000 --> 00:12:46.000
コードを入力すると、ペアリングは自動的に完了し、Macはデバイスのリモートデバイスリストに表示されます。

00:12:46.000 --> 00:12:56.000
デバイスがペアリングされたら、Safariを開き、iOSデバイスと同じようにMacでウェブページやその他のコンテンツを検査できます。

00:12:56.000 --> 00:12:58.000
要素選択モードでも機能します。

00:12:58.000 --> 00:13:07.000
macOSで以前と同じように要素選択モードに入り、Webページで検査したいノードを見て、ピンチして選択します。

00:13:07.000 --> 00:13:16.000
xrOS用のWebコンテンツの設計と開発について詳しく知りたい場合は、「Meet Safari for spatial computing」をチェックしてください。

00:13:16.000 --> 00:13:20.000
ウェブコンテンツは、Safariやウェブアプリを超えて広がっています。

00:13:20.000 --> 00:13:32.000
ウェブページとJavaScriptは、Appleのプラットフォーム全体で100万以上のアプリで使用されており、今年の新機能は、そのコンテンツをアプリのリリースバージョンで検査可能にする機能です。

00:13:32.000 --> 00:13:40.000
アプリは、ユーザーインターフェイスの一部にWebコンテンツを使用するか、JavaScriptを使用してアプリの一部を制御できます。

00:13:40.000 --> 00:13:53.000
このような場合、macOS 13.3以降、iOSとiPadOS 16.4以降、およびxrOSで利用可能なAPIがあり、アプリのコンテンツの検査を可能にします。

00:13:53.000 --> 00:14:00.000
このAPIは、WKWebViewとJSContextの両方で利用できます。

00:14:00.000 --> 00:14:11.000
検査可能にするときに、各JSContextに名前を指定することをお勧めします。これは、複数のJSContextを区別できるように、Safariの開発メニューに表示されます。

00:14:11.000 --> 00:14:23.000
また、アプリケーションがコンテンツの検査を有効にすると、デバイスから他のWebコンテンツを検査するのと同じように、Safariの開発メニューから検査できます。

00:14:23.000 --> 00:14:34.000
デバイス間でコンテンツを検査してデバッグできるようになったので、WebDriverでコンテンツが期待どおりに動作し続けることを確認する方法について話しましょう。

00:14:34.000 --> 00:14:42.000
ウェブが進化するにつれて、Webページが期待どおりに動作することを確認するために、Webページを継続的にテストすることが重要です。

00:14:42.000 --> 00:14:54.000
WebDriverは、ブラウザ固有のコードを必要とせずに、プラットフォーム間ですべての主要なブラウザでサポートされているWebコンテンツのテストを自動化するためのクロスブラウザAPIです。

00:14:54.000 --> 00:15:16.000
HTTPリクエストを受け入れるローカルWebサーバーをホストしているため、さまざまなテストセットアップから自動化コマンドを受け入れることができ、要素の検索、要素のアクセシビリティロールの取得、JavaScriptの実行、さらにはスクリーンショットの取得など、Webページに対して自動テストを実行するために使用できる多数のコマンドを提供します。

00:15:16.000 --> 00:15:22.000
ほとんどの場合、サードパーティのライブラリを使用してWebDriverと対話します。

00:15:22.000 --> 00:15:31.000
そのような人気のあるライブラリの1つは、Python、Java、PHP、JavaScriptなどでAPIを提供するSeleniumです。

00:15:31.000 --> 00:15:37.000
以下は、SeleniumでSafariを自動化するために使用できるPythonスクリプトの例です。

00:15:37.000 --> 00:15:41.000
Safariのデフォルトオプションを持つドライバーが作成されます。

00:15:41.000 --> 00:15:47.000
次に、webkit.orgのWeb Inspectorのドキュメントに移動します。

00:15:47.000 --> 00:15:52.000
そこに着いたら、検索フィールドを見つけて「デバイス」と入力します。

00:15:52.000 --> 00:15:58.000
最後に、デバイス設定のリンクがまだあると主張します。

00:15:58.000 --> 00:16:05.000
そして、すべて終わったら、Safariが開いたウィンドウをクリーンアップできるように、自動化セッションを終了します。

00:16:05.000 --> 00:16:07.000
このスクリプトを実行しましょう。

00:16:07.000 --> 00:16:13.000
オレンジ色のタイトルバーで新しいウィンドウが作成され、このウィンドウが自動化されていることを示します。

00:16:13.000 --> 00:16:17.000
テストは、ユーザーと同じようにタイピングのようなインタラクションを実行することがわかります。

00:16:17.000 --> 00:16:22.000
信じられないかもしれませんが、それは何が起こっているのかを見やすくするために減速されました。

00:16:22.000 --> 00:16:27.000
全速力で、テストは始まるとすぐに終わります。

00:16:27.000 --> 00:16:32.000
そして、これはWebDriverとSafariで可能なことの味にすぎません。

00:16:32.000 --> 00:16:39.000
テストは、iOSとiPadOSのシミュレータだけでなく、物理的なiPhoneやiPadでも実行できます。

00:16:39.000 --> 00:16:46.000
今日利用可能なものを探索したので、ウェブプラットフォームの未来を探求する方法を見てみましょう。 ウェブプラットフォームの未来を探求する方法を見てみましょう。

00:16:46.000 --> 00:16:49.000
ウェブは絶えず進化しています。

00:16:49.000 --> 00:16:59.000
潜在的な将来のツールや技術を見るのはエキサイティングであり、ウェブブラウザで出荷される前に実験を始めるのはさらにエキサイティングです。

00:16:59.000 --> 00:17:08.000
Safariでは、機能フラグを選択して開発メニューから開くことができる新しい機能フラグ設定を使用して、これらの機能を有効にすることができます。

00:17:08.000 --> 00:17:13.000
機能フラグは、以前はSafariで実験的機能と呼ばれていたものです。

00:17:13.000 --> 00:17:22.000
機能フラグは、アニメーション、CSS、JavaScript、メディアなどのトピックごとに整理され、機能を簡単に見つけることができます。

00:17:22.000 --> 00:17:25.000
そして、機能も検索可能です。

00:17:25.000 --> 00:17:30.000
たとえば、色を検索して、関連するすべての機能を見つけることができます。

00:17:30.000 --> 00:17:32.000
機能を有効にするのも速いです。

00:17:32.000 --> 00:17:35.000
チェックボックスにチェックを入れるだけで、準備完了です。

00:17:35.000 --> 00:17:49.000
また、CSS Masonry Layoutが有効になっており、デフォルト以外の状態を示すために太字のフォントで表示されているなど、有効な機能を一目ですぐに見ることができます。

00:17:49.000 --> 00:17:59.000
Masonry Layoutなどの今後の機能や、今年Safariで出荷されるその他の新しいCSS機能の詳細については、「CSSの新機能」をご覧ください。

00:17:59.000 --> 00:18:05.000
また、ウィンドウの右側に各機能のステータスがあることに気付いたかもしれません。

00:18:05.000 --> 00:18:09.000
各機能は4つのステータスのいずれかに分類されます。

00:18:09.000 --> 00:18:16.000
最初のステータスであるStableは、最近Safariで出荷を開始し、デフォルトでオンになっている機能を表します。

00:18:16.000 --> 00:18:29.000
これらの機能は、機能が問題を引き起こしているかどうかを判断したり、すべてのブラウザでまだ出荷されていない機能の機能の欠如をサイトが適切に処理していることを確認するために切り替えることができます。

00:18:29.000 --> 00:18:35.000
安定した機能は、最終的に切り替え可能な機能のリストから削除されます。

00:18:35.000 --> 00:18:45.000
次に、テスト可能な機能は、プライムタイムの準備ができていないが、早期フィードバックの準備ができているか、実装の過程にある機能です。

00:18:45.000 --> 00:18:54.000
それらは完全に完全ではないかもしれませんが、テスト可能な機能は、仕様がWeb開発者のために機能することを確認するために、機能が基づいている標準を知らせるのに役立ちます。

00:18:54.000 --> 00:18:58.000
これらの機能はデフォルトで無効になっています。

00:18:58.000 --> 00:19:01.000
最後の共通機能のステータスはプレビューです。

00:19:01.000 --> 00:19:06.000
このステータスは、開発者がテストを開始する準備ができている機能のためのものです。

00:19:06.000 --> 00:19:11.000
これらの機能はテスト可能な機能よりも完全ですが、まだバグがあるかもしれません。

00:19:11.000 --> 00:19:18.000
これらの機能はSafariではデフォルトで無効になっていますが、Safari Technology Previewではデフォルトで有効になっています。

00:19:18.000 --> 00:19:33.000
Safari Technology Previewは約2週間ごとにリリースされ、当社のプラットフォームに含まれているSafariのバージョンに表示される前に、Webプラットフォーム機能の最新のアップデートへの早期アクセスを提供します。

00:19:33.000 --> 00:19:36.000
開発者機能の機能ステータスもあります。

00:19:36.000 --> 00:19:44.000
これらは、開発用のWebKitの動作を調整したり、テスト用に非推奨のAPIを再度有効にしたりする設定です。

00:19:44.000 --> 00:19:52.000
各機能フラグのデフォルト設定は、顧客が一般的にあなたのコンテンツをどのように体験するかであることを覚えておいてください。

00:19:52.000 --> 00:19:59.000
また、Safariを更新すると、機能フラグが自動的にデフォルトの状態にリセットされることを覚えておくことも重要です。

00:19:59.000 --> 00:20:08.000
そして、あなたのような開発者を助けるために、Safariで利用可能なツールと機能のツアーの終わりに来ます。

00:20:08.000 --> 00:20:10.000
そして、私たちは表面を磨いただけです。

00:20:10.000 --> 00:20:21.000
今日話したすべてのことに加えて、Safariには、今年のSafariのこれらすべての機能や機能強化など、コンテンツのデバッグに役立つものがあります。

00:20:21.000 --> 00:20:32.000
また、利用可能なツールとその開始方法をこれまで以上に簡単に発見できるように、Web開発者向けのSafari機能の新しいドキュメントを作成しました。

00:20:32.000 --> 00:20:42.000
さらに、Webkit.orgでWebインスペクタの詳細なドキュメントを見つけて、Webインスペクタの機能の幅と深さを解凍するのに役立ちます。

00:20:42.000 --> 00:20:45.000
私たちもあなたから話を聞きたいです。

00:20:45.000 --> 00:20:59.000
バグに遭遇した場合、またはWeb開発者向けの機能を改善する方法について提案がある場合は、フィードバックアシスタントにフィードバックを送信し、フィードバックの領域としてSafariを選択し、[詳細]で[開発者ツール]を選択してください。

00:20:59.000 --> 00:21:09.000
私たちのプラットフォーム全体でコンテンツの開発、改良、テストを支援するために使用できるSafariの機能のツアーに参加して、今日ここで私たちの時間を楽しんだことを願っています。

00:21:09.000 --> 00:21:12.000
そして、あなたが何を作るかを見るのが待ちきれません。

00:21:12.000 --> 00:21:13.000
ありがとうございます。

00:21:13.000 --> 23:59:59.000
♪

