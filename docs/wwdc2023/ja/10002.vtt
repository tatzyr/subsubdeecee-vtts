WEBVTT

00:00:00.000 -> 00:00:10.000
♪ ♪

00:00:10.000 -> 00:00:16.000
キース・ホレマン：こんにちは、私の名前はキース・ホレマンで、アップルのインターネットテクノロジーチームの一員です。

00:00:16.000 -> 00:00:23.000
今日は、ネットワークリレーを使用してアプリのプライバシーとセキュリティを強化する方法について話します。

00:00:23.000 -> 00:00:28.000
このセッションは、ネットワークリレーに使用される技術を探ることから始めます。

00:00:28.000 -> 00:00:32.000
リレーは、Appleの多くのプライバシー機能で使用されています。

00:00:32.000 -> 00:00:41.000
私たちは、この技術が効果的で使いやすい方法が大好きで、今ではアプリでリレーを使用する2つの方法があります。

00:00:41.000 -> 00:00:47.000
まず、アプリ内のリレーを設定して、アプリのネットワークトラフィックを保護できます。

00:00:47.000 -> 00:00:57.000
第二に、VPNの代替手段として、企業内のプライベートリソースにアクセスするためのデバイスにリレーを拡張することができます。

00:00:57.000 -> 00:00:59.000
飛び込んで始めましょう。

00:00:59.000 -> 00:01:10.000
リレーは、iCloudプライベートリレー、メールプライバシー保護、SafariのトラッカーからのIPアドレスの非表示などの優れた機能の基礎を形成します。

00:01:10.000 -> 00:01:22.000
アプリは、非公開にしたいユーザーに関する機密情報を処理する場合があり、自分のサーバーがその情報をクライアントのIPアドレスに関連付けることができないようにしたい場合があります。

00:01:22.000 -> 00:01:31.000
これで、アプリは選択したリレーを使用して、すべてのユーザーに強力なプライバシー保護を提供できます。

00:01:31.000 -> 00:01:45.000
リレーは、パフォーマンスに最適化され、最新のトランスポートおよびセキュリティプロトコルを使用し、Appleプラットフォームで利用可能な最新のネットワークスタックにネイティブに組み込まれている特別なタイプのプロキシです。

00:01:45.000 -> 00:01:54.000
これらのリレーが使用するIETFによって定義された2つの標準プロトコルがあります。MASQUEとOblivious HTTPです。

00:01:54.000 -> 00:02:01.000
MASQUEリレーは、アプリのプライバシーを強化したり、プライベートリソースにアクセスしたりするのに最適な方法です。

00:02:01.000 -> 00:02:09.000
バックエンドサーバーを変更することなく、リレーを介して任意のTCPまたはUDP接続を送信できます。

00:02:09.000 -> 00:02:19.000
リレーサーバーをチェーン接続して、単一のエンティティがIPアドレスとブラウジングアクティビティをユーザーの詳細なプロファイルにまとめることはできません。

00:02:19.000 -> 00:02:24.000
これは、iCloudプライベートリレーの背後にある基盤技術です。

00:02:24.000 -> 00:02:29.000
リレーは、エンタープライズリソースにアクセスするための素晴らしい方法でもあります。

00:02:29.000 -> 00:02:36.000
リレーは、より良いユーザーエクスペリエンスを提供し、より高性能で、VPNよりも管理が簡単です。

00:02:36.000 -> 00:02:44.000
MASQUEリレーは、レガシープロキシプロトコルとは異なり、TLS 1.3を使用してプロキシへのすべてのトラフィックを保護します。

00:02:44.000 -> 00:02:55.000
MASQUEは、最新のトランスポートプロトコルであるQUICとHTTP/3を使用して、1つのトンネルで多くの接続を効率的にプロキシおよび多重化します。

00:02:55.000 -> 00:03:02.000
また、QUICがネットワークによってブロックされている場合は、HTTP/2の使用にフォールバックできます。

00:03:02.000 -> 00:03:18.000
アプリがプライベートであり、匿名メトリクスレポート、データベースルックアップ、DNSクエリなどの他のリクエストにリンクされていないことを確認したいHTTPリクエストを送信する場合は、Oblivious HTTPを使用することもできます。

00:03:18.000 -> 00:03:25.000
Oblivious HTTPを使用すると、1つのリレーホップで優れたパフォーマンスとプライバシーを得ることができます。

00:03:25.000 -> 00:03:34.000
MASQUEリレーとは異なり、Oblivious HTTPは任意のサーバーでは動作しません。サーバーはそれを明示的にサポートする必要があります。

00:03:34.000 -> 00:03:40.000
Oblivious HTTPの詳細については、「プライバシーの新機能」セッションをご覧ください。

00:03:40.000 -> 00:03:46.000
アプリによって作成されたプロキシ接続に、これらのリレータイプの両方を使用できます。

00:03:46.000 -> 00:03:53.000
これにより、アプリのプライバシーを高めるために、選択した特定のリレーサーバーを使用できます。

00:03:53.000 -> 00:04:03.000
新しいProxyConfigurationクラスでは、ネットワークフレームワーク、URLSession、およびWebKitでリレーを定義できます。

00:04:03.000 -> 00:04:12.000
3つのAPIはすべて、この共通のクラスを同様の方法で使用し、アプリ全体または特定の接続のリレーを定義できます。

00:04:12.000 -> 00:04:19.000
ProxyConfigurationオブジェクト内では、5つの異なるプロトコルに基づいてプロキシを定義できます。

00:04:19.000 -> 00:04:26.000
これは、MASQUEとOblivious HTTPの両方に新しいリレータイプを指定できる場所です。

00:04:26.000 -> 00:04:31.000
同じオブジェクトを使用して、レガシープロキシタイプの設定にも使用できます。

00:04:31.000 -> 00:04:41.000
以前に辞書を使用してURLSessionまたはWebKitでプロキシを設定していた場合、今はこの新しいオブジェクトの使用に切り替えるのに最適な時期です。

00:04:41.000 -> 00:04:51.000
レガシープロキシタイプの場合、プロキシへのTLSのサポートとSOCKSv5が新たに追加されたHTTP CONNECTを設定できます。

00:04:51.000 -> 00:04:58.000
HTTP/3経由でMASQUEリレーに接続するために使用されるProxyConfigurationを定義する方法は次のとおりです。

00:04:58.000 -> 00:05:08.000
まず、NWEndpointを使用してサーバー名またはURLを指定し、それを使用してリレーホップを定義します。

00:05:08.000 -> 00:05:16.000
これらのリレーホップには、HTTP/3、HTTP/2、またはその両方のサポートを指定できます。

00:05:16.000 -> 00:05:25.000
HTTP/2サーバーは、QUICプロトコルを使用したHTTP/3へのアクセスがネットワークによってブロックされた場合のバックアップとして使用されます。

00:05:25.000 -> 00:05:32.000
次に、リレーを「relayHops」配列パラメータに渡して、プロキシ設定を作成します。

00:05:32.000 -> 00:05:38.000
マルチホップリレー構成を定義したい場合は、ここで2つのリレーを渡すことができます。

00:05:38.000 -> 00:05:52.000
ネットワークフレームワークのNWConnectionでProxyConfigurationを使用するには、PrivacyContextを作成するか、デフォルトのコンテキストを使用して、そのコンテキストにプロキシ設定を追加します。

00:05:52.000 -> 00:06:00.000
NWParametersにコンテキストを設定し、接続を作成して開始するときにこれらのパラメータを渡します。

00:06:00.000 -> 00:06:07.000
今、この接続はプロキシを介してすべてのトラフィックを送信しています。

00:06:07.000 -> 00:06:13.000
URLSessionですでに定義したのと同じプロキシ設定を使用することもできます。

00:06:13.000 -> 00:06:21.000
これを行うには、URLSessionConfigurationのproxyConfigurations配列に設定を追加します。

00:06:21.000 -> 00:06:30.000
次に、通常どおりURLSessionでタスクを実行すると、プロキシも使用されます。

00:06:30.000 -> 00:06:37.000
同じプロキシ設定オブジェクトは、WebKitビューで行われた接続のプロキシにも使用できます!

00:06:37.000 -> 00:06:46.000
まず、Webビュー設定を初期化し、データストアを追加し、プロキシ設定をデータストアに追加します。

00:06:46.000 -> 00:06:50.000
次に、設定でウェブビューを初期化します。

00:06:50.000 -> 00:06:56.000
それが完了したら、要求されたURLをロードし、通常どおりWebKitビューを使用できます。

00:06:56.000 -> 00:07:02.000
現在、このWebkitビューもリレーを介してトラフィックを送信しています。

00:07:02.000 -> 00:07:09.000
独自のアプリにリレーを追加するだけでなく、iOS 17では、デバイス全体にリレーを設定できます。

00:07:09.000 -> 00:07:18.000
プライバシー機能を構築できるだけでなく、リレーを使用してプライベートエンタープライズネットワークリソースへのアクセスを提供するのに最適な方法です。

00:07:18.000 -> 00:07:23.000
エンタープライズリソースへのアクセスを提供するためにVPNを使用している可能性があります。

00:07:23.000 -> 00:07:30.000
リレーは、より良いユーザーエクスペリエンスを提供し、管理が簡単なVPNの代替手段です。

00:07:30.000 -> 00:07:39.000
ネットワークリレーは複雑なセッションネゴシエーションを必要とせず、実際のユーザーデータが転送される前により少ない往復を必要とすることがよくあります。

00:07:39.000 -> 00:07:47.000
これにより、ユーザーのプライベートリソースの最初のロードは、可能な限り最も応答性の高いインタラクションであることを保証します。

00:07:47.000 -> 00:07:56.000
リレーは、VPNに関連付けられているトンネル、仮想インターフェイス、および追加のIPアドレスの使用も回避します。

00:07:56.000 -> 00:08:05.000
複数のリレーを同時に設定できるため、異なるネットワークにある異なるプライベートドメインにアクセスする方が簡単です。

00:08:05.000 -> 00:08:14.000
VPNの代替としてリレーサーバーを使用したいエンタープライズ企業には、独自のインフラストラクチャで使用するオプションがあります。

00:08:14.000 -> 00:08:20.000
シスコは、Cisco Secure Edge製品の一部としてエンタープライズリレーサービスを提供しています。

00:08:20.000 -> 00:08:27.000
企業がユーザーにリモートアクセスを提供するためにこのオプションを採用することに興奮しています。

00:08:27.000 -> 00:08:32.000
デバイスにMASQUEリレー構成をインストールするには、2つの方法があります。

00:08:32.000 -> 00:08:42.000
エンタープライズ組織は、モバイルデバイス管理（MDM）を介して構成をプッシュして、新しいリレーペイロードタイプを使用してリレーを定義できます。

00:08:42.000 -> 00:08:48.000
これらのペイロードは、管理対象のアプリ、ドメイン、またはデバイス全体に適用できます。

00:08:48.000 -> 00:08:54.000
次に、NERelayManager APIを使用してリレーを定義するアプリを書くことができます。

00:08:54.000 -> 00:09:00.000
これらの構成は、特定のドメインまたはデバイス全体に適用できます。

00:09:00.000 -> 00:09:07.000
これらは両方とも、macOS、iOS、iPadOS、tvOSで利用できます。

00:09:07.000 -> 00:09:15.000
そして、ネットワーク拡張サポートがtvOSに追加された今、VPNもtvOS 17で新たにサポートされています。

00:09:15.000 -> 00:09:19.000
構成プロファイルを使用してリレーを設定する方法は次のとおりです。

00:09:19.000 -> 00:09:26.000
アプリのProxyConfiguration APIと同様に、リレーURLを定義します。

00:09:26.000 -> 00:09:36.000
VPNプロファイルと同様に、同じプロファイル内の証明書ペイロードを参照することで、エンタープライズサーバーへの認証にクライアント証明書を使用できます。

00:09:36.000 -> 00:09:42.000
ペイロードのMatchDomains部分に追加することで、リレーを特定のドメインに適用させることができます。

00:09:42.000 -> 00:09:50.000
次に、アプリがNERelayManager APIを使用してプログラムでデバイスにリレーを追加する方法を見ていきます。

00:09:50.000 -> 00:09:59.000
リレーを定義するには、NERelayオブジェクトを初期化してから、リレーのURLを設定する必要があります。

00:09:59.000 -> 00:10:05.000
ここでは、HTTP/2とHTTP/3の両方で同じリレーを使用しています。

00:10:05.000 -> 00:10:12.000
リレーで追加のHTTPヘッダーが必要な場合は、NERelayオブジェクトに追加してください。

00:10:12.000 -> 00:10:20.000
また、作成したばかりのNERelayオブジェクトを保存する場所であるため、共有NERelayManagerオブジェクトにアクセスする必要があります。

00:10:20.000 -> 00:10:28.000
リレーをデバイス全体ではなく特定のドメインのみに適用する場合は、それらのドメインをmatchDomains配列に追加します。

00:10:28.000 -> 00:10:36.000
最後のステップは、リレーが有効になっていることを確認し、NERelayManagerオブジェクトをシステム環境設定にインストールすることです。

00:10:36.000 -> 00:10:38.000
リレーの動作を見てみましょう。

00:10:38.000 -> 00:10:42.000
私はマウンテンバイクが大好きで、自分の自転車店もオープンしました。

00:10:42.000 -> 00:10:49.000
私の店には、オンラインストアと、すべての注文を追跡できる内部ウェブサイトがあります。

00:10:49.000 -> 00:10:53.000
そのウェブサイトは私の内部ネットワーク上にあり、従業員のみが利用できます。

00:10:53.000 -> 00:11:01.000
Safariを開いて、未完了の注文を確認しようとすると、内部ネットワーク上にいないため、表示されません。

00:11:01.000 -> 00:11:07.000
リレー構成をインストールすると、どこからでも内部ネットワークにアクセスできるようになります。

00:11:07.000 -> 00:11:17.000
先ほどのコードでサンプルリレーアプリを開くと、内部ドメインにアクセスしながらショップのリレーを使用するようにデバイス全体を設定できます。

00:11:17.000 -> 00:11:28.000
この設定は設定にも表示され、internal.example.comにアクセスするとリレーが使用されていることがわかります。

00:11:28.000 -> 00:11:37.000
さて、Safariに戻り、再び未処理の注文を見ようとすると、それらと、出荷に必要な注文の数を見ることができます。

00:11:37.000 -> 00:11:42.000
それは最初のロードで、シンプルで、速く、応答性があります。

00:11:42.000 -> 00:11:50.000
リレーは、パフォーマンスを損なうことなく、アプリのセキュリティとプライバシーを向上させることができる最新の標準ベースのプロキシです。

00:11:50.000 -> 00:11:58.000
アプリのMASQUEリレーとOblivious HTTPリレーを直接採用して、ユーザーのプライバシーを強化します。

00:11:58.000 -> 00:12:07.000
また、企業にとっては、VPNの使用を、管理が簡単で、よりシームレスなユーザーエクスペリエンスを提供するリレーに置き換え始めます。

00:12:07.000 -> 00:12:09.000
今日はお時間を割いていただきありがとうございます。

00:12:09.000 -> 23:59:59.000
あなたがリレーをどのように使うかを見るのが待ちきれません。

