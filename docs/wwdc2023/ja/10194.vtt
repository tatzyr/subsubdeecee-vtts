WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:12.000
マック・タイラー：「デザインダイナミックライブアクティビティ」へようこそ。

00:00:12.000 --> 00:00:21.000
私の名前はMacで、後で同僚のChanが参加し、今日はシステム全体でライブアクティビティを設計する際に考慮する必要があるすべてをカバーします。

00:00:21.000 --> 00:00:28.000
ロック画面から始めて、スタンバイを簡単に見て、ダイナミックアイランドのチャンからの深いダイビングで終わります。

00:00:28.000 --> 00:00:37.000
各コンテキストを経ながら、そのスペースのユニークな考慮事項と、それぞれの間でデザインを最適に適応させる方法に焦点を当てます。

00:00:37.000 --> 00:00:41.000
しかし、始める前に、ライブアクティビティ自体についてもう少し話しましょう。

00:00:41.000 --> 00:00:53.000
私たちの目標は、通知の限界を押し広げていた既存の経験のいくつかをよりよく対応し、より強力で直感的な方法で継続的な活動を追跡できる新しいシステムを作成することでした。

00:00:53.000 --> 00:01:00.000
ライブアクティビティは、豊富なグラフィカルレイアウトを使用して情報を表示し、楽しく活発な方法でシームレスにインラインで更新します。

00:01:00.000 --> 00:01:08.000
スポーツ、ライドシェアリング、配達追跡、ライブワークアウトは、これらの新機能を本当に活用できるいくつかの例です。

00:01:08.000 --> 00:01:16.000
しかし、誰かが数分から数時間追跡したいものは、ライブアクティビティになる可能性があり、探求すべきエキサイティングな新しいアイデアがたくさんあります。

00:01:16.000 --> 00:01:18.000
では、飛び込みましょう。

00:01:18.000 --> 00:01:23.000
ロック画面では、ライブアクティビティは通知と一緒にリストの一番上に表示されます。

00:01:23.000 --> 00:01:36.000
ここでは、各エッジの周りに同じ14ポイントのマージンを共有しているため、異なるレイアウトを使用していても、要素は両側できれいに整列し、リストをスキャンする際に一貫した視覚的なリズムを維持できます。

00:01:36.000 --> 00:01:43.000
ロック画面のライブアクティビティに情報をレイアウトするときは、通知レイアウト自体を複製しようとしないことが重要です。

00:01:43.000 --> 00:01:48.000
むしろ、表示している情報に固有のレイアウトを作成します。

00:01:48.000 --> 00:01:55.000
グラフィカルに豊かなレイアウトは、ライブアクティビティの重要な利点の1つであるため、時間をかけてこのステップを正しく行うことが重要です。

00:01:55.000 --> 00:02:03.000
最も有用だと思う情報について考え、それらの要素のサイズと規模に優先順位を付けて、一目で確認できます。

00:02:03.000 --> 00:02:10.000
タイマーライブアクティビティでは、名前と残りの期間を表示するだけでなく、タイマーを一時停止またはキャンセルするためのクイックコントロールも提供します。

00:02:10.000 --> 00:02:23.000
ボタンは、ライブアクティビティでインタラクティブな機能を提供するのに最適な方法ですが、有用な情報を表示できる多くのスペースを使用できるため、アクティビティ自体の重要な部分を制御している場合にのみ使用する必要があります。

00:02:23.000 --> 00:02:27.000
次に、あなたのライブ活動の性格について少し話しましょう。

00:02:27.000 --> 00:02:34.000
グラフィカルなレイアウトを設計する際には、使用できるアプリの色、図像、書体、その他の属性を考慮してください。

00:02:34.000 --> 00:02:40.000
目標と最高の最終結果は、ライブアクティビティとアプリが同じ視覚的美学と個性を共有しているように感じるときです。

00:02:40.000 --> 00:02:47.000
アプリのアイコンからインスピレーションを引き出すことは、多くの場合、誰かがあなたのライブアクティビティのデザインをアプリに関連付けるための最良の方法の1つです。

00:02:47.000 --> 00:02:54.000
ここでは、テレビのライブアクティビティは、アプリアイコンと同じ背景と前景色を共有し、2つのデザインを一緒に描くのに役立ちます。

00:02:54.000 --> 00:02:57.000
この接続を維持することは重要です。

00:02:57.000 --> 00:03:02.000
この視覚的な関連付けを壊す場合は、ライトモードとダークモードの間で色を変更しないでください。

00:03:02.000 --> 00:03:08.000
ライブアクティビティのデザインに大胆な色を組み込むことは、他の人から際立たせる明確な個性を作り出すのに役立ちます。

00:03:08.000 --> 00:03:15.000
また、それが表しているコンテンツに基づいて色を変更して、情報のよりダイナミックで魅力的なビジュアルを作成することもできます。

00:03:15.000 --> 00:03:24.000
ブランドの一部としてロゴマークを使用する場合は、アプリ全体のアイコンを使用するのではなく、レイアウト自体に組み込まれていないことを確認してください。

00:03:24.000 --> 00:03:33.000
ライブアクティビティが提供する背景と前景の色は、ロック画面からライブアクティビティを削除するためにスワイプするときに、一致する閉じるボタンを自動的に生成するためにシステムによって使用されます。

00:03:33.000 --> 00:03:40.000
結果のボタンが正しく見え、デザインに合わせて適切な色を提供していることを確認してください。

00:03:40.000 --> 00:03:44.000
次に、レイアウトでスペースを最も効率的に使用する方法について話しましょう。

00:03:44.000 --> 00:03:58.000
ロック画面には、ミュージックプレーヤー、通知、ライブアクティビティなど、さまざまな情報を一度に表示できるため、不要なときに追加のスペースを占有しないように、レイアウトができるだけコンパクトであることを確認することが重要です。

00:03:58.000 --> 00:04:05.000
要素のサイズと配置を調整して、よりフィットし、よりコンパクトになるように、デザインの高さを減らす方法を探してください。

00:04:05.000 --> 00:04:14.000
スペースを効率的に使用するもう1つの方法は、表示する情報が多かれ少なかれあるため、異なる瞬間間でライブアクティビティの高さを動的に変更することです。

00:04:14.000 --> 00:04:27.000
この例では、利用可能なドライバーを検索している間、表示する追加の詳細はあまりないため、乗車が受け入れられるまでレイアウトをコンパクトに保ち、関連する情報の残りの部分を移行することができます。

00:04:27.000 --> 00:04:35.000
そして、この場合、ゲームがハーフタイムに入ると、プレイバイプレイセクションはもはや関連性がなく、プレイが再開されるまで折りたたむことができます。

00:04:35.000 --> 00:04:38.000
これは私たちを移行に導きます。

00:04:38.000 --> 00:04:47.000
ライブアクティビティでこのような異なる瞬間間で更新する場合、レイアウトの高さを変更することに加えて、個々の要素自体にトランジションを適用することもできます。

00:04:47.000 --> 00:04:53.000
数値コンテンツの遷移を使用して、アクティビティの重要な数値をカウントアップまたはカウントダウンします。

00:04:53.000 --> 00:04:58.000
また、グラフィック要素とテキストのインとアウトをアニメーション化するには、コンテンツ置換トランジションを使用します。

00:04:58.000 --> 00:05:06.000
これらは、システムが提供するデフォルトのトランジションの一部ですが、要素のスケール、不透明度、位置のさまざまなアニメーションを組み合わせて、独自のトランジションを作成することもできます。

00:05:06.000 --> 00:05:13.000
この近くの友達の例では、マップが更新を受け取ると、ピンは新しい場所にスムーズに移行できます。

00:05:13.000 --> 00:05:19.000
更新間の要素の位置をアニメーション化することは、アクティビティのより視覚的な表現を生成する強力な方法です。

00:05:19.000 --> 00:05:29.000
リスト内のアイテムの位置をアニメーション化する場合は、新しい場所に移動し、他の行をフェードインおよびフェードアウトしている単一の行のみをアニメーション化することで、要素の重複を避けます。

00:05:29.000 --> 00:05:33.000
次に、警告について話しましょう。

00:05:33.000 --> 00:05:38.000
ユーザーの注意が必要な更新があったときに通知するために、ライブアクティビティで警告する必要があります。

00:05:38.000 --> 00:05:44.000
アラートは画面を照らし、標準の通知音を再生するので、アップデートを見逃すことはありません。

00:05:44.000 --> 00:05:49.000
この移行中にレイアウトでアラートを引き起こした情報を必ず強調してください。

00:05:49.000 --> 00:06:00.000
最後に、ライブアクティビティが終了し、関連性がなくなった場合は、短時間後にロック画面から削除してください。長すぎると迷惑になる可能性があり、毎回手動で却下する必要があります。

00:06:00.000 --> 00:06:04.000
次に、スタンバイに合わせてデザインを適応させる方法を見てみましょう。

00:06:04.000 --> 00:06:09.000
スタンバイは、iPhoneを周囲の情報ディスプレイとして使用できる新機能です。

00:06:09.000 --> 00:06:18.000
キッチンカウンター、机、またはベッドのそばに置き、表示したい情報を選択できるので、当然のことながらライブアクティビティを表示するのに最適です。

00:06:18.000 --> 00:06:27.000
スタンバイでは、レイアウトは200%スケールアップされ、デバイスのセンサー領域の下にレイアウト内のコンテンツを描画しないようにしてサイズを最大化します。

00:06:27.000 --> 00:06:35.000
ライブアクティビティで背景色を使用している場合、システムは自動的にこの色を拡張して残りのスペースを埋め、シームレスなフルスクリーンデザインを作成します。

00:06:35.000 --> 00:06:43.000
ライブアクティビティの端に描画されたグラフィック要素がある場合、背景が拡張されると、それらは切断され、壊れているように感じます。

00:06:43.000 --> 00:06:49.000
分割線または包含形状を使用して、レイアウトの異なる領域を分離し、この問題を回避することを検討してください。

00:06:49.000 --> 00:07:01.000
ライブアクティビティが表示している情報に応じて、スタンバイ時に背景を完全に削除し、代わりにレイアウトをデバイスのベゼルにシームレスにブレンドして、より柔らかくなったアンビエントの外観にすることを選択します。

00:07:01.000 --> 00:07:10.000
これの追加の利点の1つは、デバイスセンサーのマージンを考慮する必要がなくなったため、レイアウトをわずかに大きなスケールで表示できることです。

00:07:10.000 --> 00:07:22.000
スタンバイ用のライブアクティビティで他の調整を行うこともできますが、最も重要なことの1つは、デザインで使用しているすべてのアセットと画像が、この大きなサイズで表示するのに十分な解像度であることを確認することです。

00:07:22.000 --> 00:07:28.000
スタンバイのもう1つの特徴は、暗い場所でディスプレイを美しい赤い色合いに移行するエレガントなナイトモードです。

00:07:28.000 --> 00:07:36.000
あなたのライブアクティビティは自動的にこの治療を受けますが、このモードがアクティブなときに色が十分なコントラストを持っていることを確認するためにチェックする価値があります。

00:07:36.000 --> 00:07:39.000
次に、ダイナミックアイランドについて話す時間です。

00:07:39.000 --> 00:07:42.000
ここにすべての詳細に入るチャンがいます。

00:07:42.000 --> 00:07:43.000
チャン・カルナムニ:ありがとう、マック。

00:07:43.000 --> 00:07:53.000
ダイナミックアイランドは、私たちが一日を通して私たちのデバイスを使用するときに私たちに表面化される活動のさまざまなアラートと指標のための統一された家を提供するために作成されました。

00:07:53.000 --> 00:08:02.000
これは、あらゆる種類の異なるアラートとインジケーター間のシフトを有機的に形成できる単一のシステムレイヤーを提供するハードウェアとソフトウェアのブレンドです。

00:08:02.000 --> 00:08:09.000
その主な目標は、あなたの携帯電話のバックグラウンドで起こっていることに目を光らせ、それらと対話するための迅速な方法を提供することです。

00:08:09.000 --> 00:08:18.000
ダイナミックアイランドのものはすべて、一緒に家族のように感じながら、どのように見えるか、どのように感じるか、どのようにアニメーション化するかという点でユニークであるように設計されています。

00:08:18.000 --> 00:08:25.000
それぞれにユニークで活気のある体験をデザインすることで、それぞれが独自のアイデンティティを持つことができます。

00:08:25.000 --> 00:08:32.000
そして、経験の多様性は、あなたの心にそれぞれを固定し、それらを一目で区別する認知的負担を軽減するのに役立ちます。

00:08:32.000 --> 00:08:36.000
そして、これらの行動と感触も重要な側面です。

00:08:36.000 --> 00:08:49.000
生物学的な形と動きに触発されたダイナミックアイランドは、それが具現化するハードウェアの固定された性質との遊び心的なコントラストとして機能する意図的な弾力性で、生物のように感じるように設計されています。

00:08:49.000 --> 00:08:53.000
したがって、アプリに関しては、同じ原則が適用されます。

00:08:53.000 --> 00:08:57.000
これが何を意味するのかを探るために、ここにサイクリングアプリの例があります。

00:08:57.000 --> 00:09:04.000
ここでアクティビティが進行中なので、アプリを離れて他の場所に行くと、アプリはダイナミックアイランドに急降下します。

00:09:04.000 --> 00:09:09.000
これは、アプリがその空間に物理的に生息しているように感じるように設計されています。

00:09:09.000 --> 00:09:13.000
また、アプリから同じキャラクターとアイデンティティを引き継ぎます。

00:09:13.000 --> 00:09:23.000
これらの例では、これらの経験の外観は、アプリ自体と同じくらい多様で多様でありながら、独自の方法で家族で一緒に感じることを意図しています。

00:09:23.000 --> 00:09:28.000
アニメーションを使用し、ここでデータを継続的に更新すると、より生き生きとした気分になります。

00:09:28.000 --> 00:09:37.000
そして、余分な丸みを帯びた、より厚い形だけでなく、大きくて重い重量、読みやすいテキストだけでなく、アイデンティティを伝えるための色の使用と同様にうまく機能します。

00:09:37.000 --> 00:09:43.000
ダイナミックアイランドのために設計するとき、物事がその中に収まる方法は絶対に重要です。

00:09:43.000 --> 00:09:47.000
それは内部のものの形と配置に非常に敏感です。

00:09:47.000 --> 00:09:52.000
この形と調和した方法でオブジェクトや情報を配置することは本当に重要です。

00:09:52.000 --> 00:09:59.000
ダイナミックアイランド内で物事をうまくフィットさせるための重要な側面は、その形状と同心円になることです。

00:09:59.000 --> 00:10:05.000
これは、丸みを帯びた形が互いに内側に巣を作り、余白が均等になったときです。

00:10:05.000 --> 00:10:10.000
最適なフィット感を達成するために、その中に丸い形を置くときは、これを目指してください。

00:10:10.000 --> 00:10:14.000
これは丸みを帯びていない形状にも当てはまります。

00:10:14.000 --> 00:10:20.000
形状の視覚的な質量または重心は、島の壁の内側にうまく寄り添っているはずです。

00:10:20.000 --> 00:10:28.000
これを視覚化するための良いトリックは、オブジェクトをぼかし、結果の形状が外側の境界線にできるだけ同心円であることを確認することです。

00:10:28.000 --> 00:10:35.000
これは、ダイナミックアイランド内でできるだけ快適に感じるように、光学的に良い場所にコンテンツを配置します。

00:10:35.000 --> 00:10:46.000
そして、オブジェクトやテキストを配置するときは、島の周囲内に同心マージンを維持して、角に突っ込むのを避け、視覚的な緊張を避けるために、側壁から快適に遠ざけてください。

00:10:46.000 --> 00:10:55.000
これを達成するために、コンテンツを内側に押し込むか、コンテナを丸めることができ、全体的な形状の中で調和のとれたフィット感を確保することができます。

00:10:55.000 --> 00:11:05.000
コンテンツのブロックを分離するときは、コンテナの端まで描画するのではなく、インセットシェイプ内にコンテンツを配置するか、セパレータ線を使用します。

00:11:05.000 --> 00:11:09.000
ダイナミックアイランドには3つの異なるサイズクラスがあります。

00:11:09.000 --> 00:11:15.000
それはコンパクトビューと呼ばれるものに水平に成長し、より大きな拡張ビューに咲くことができます。

00:11:15.000 --> 00:11:19.000
最後に、小さなミニマルビューもあります。

00:11:19.000 --> 00:11:23.000
コンパクトなビューは、最も一般的に見られるビューです。

00:11:23.000 --> 00:11:28.000
このビューの目的は、人々が携帯電話を使用している間にアクティビティを監視するのを助けることです。

00:11:28.000 --> 00:11:36.000
アプリへの静的なリンクではなく、情報提供、アクティビティに関する最も重要なことを伝えることを目的としています。

00:11:36.000 --> 00:11:40.000
そして、それはあなたのアプリのアイデンティティを明確に反映しているはずです。

00:11:40.000 --> 00:11:46.000
重要な目標は、カプセル化を無駄なスペースなしでできるだけ狭くすることです。

00:11:46.000 --> 00:11:49.000
コンテンツがセンサー領域にぴったり合っていることを確認してください。

00:11:49.000 --> 00:11:53.000
このようにして、ダイナミックアイランドは必要以上に広くありません。

00:11:53.000 --> 00:11:57.000
そして、できるだけ多くのビューをコンテンツで満たすことを目指しています。

00:11:57.000 --> 00:11:59.000
左側の空きスペースに注目してください。

00:11:59.000 --> 00:12:08.000
単位などのものを切り捨てたり縮小したり、幅が広すぎたりバランスが崩れたりしないように、データの精度の低いバージョンを表示したりすることを検討してください。

00:12:08.000 --> 00:12:18.000
アプリの複数のセッションを一度に表示したい場合は、それらの表示の間にカチカチして、ユーザーに起こっていることすべてを見させ続けることを検討してください。

00:12:18.000 --> 00:12:28.000
また、可能であれば、プッシュ通知を送信するのではなく、セッション中にイベントをユーザーに警告する必要がある場合は、その情報を表示するために島を拡大してください。

00:12:28.000 --> 00:12:34.000
通知と同様に、ダイナミックアイランドはアプリの上のレイヤーに浮かんでいることに注意することが重要です。

00:12:34.000 --> 00:12:38.000
アプリは、島を指したり、島と対話したりするUIを描くべきではありません。

00:12:38.000 --> 00:12:41.000
拡張ビューについて話しましょう。

00:12:41.000 --> 00:12:51.000
警告に加えて、人々はダイナミックアイランドを押してこのビューにズームインし、より多くの情報を表示し、重要なコントロールにアクセスできます。

00:12:51.000 --> 00:12:56.000
少なすぎたり多すぎたりしないように、ここであなたの活動の本質にたどり着くようにしてください。

00:12:56.000 --> 00:13:02.000
これは、アプリのキャラクターを引き継ぎ、人々がそれを少し覗いているように感じさせる絶好の機会です。

00:13:02.000 --> 00:13:12.000
繰り返しますが、ここでダイナミックアイランドの視覚言語と調和し、丸みを帯びた厚い形とアイデンティティを確立するための色の自由な使用を強調することが重要です。

00:13:12.000 --> 00:13:17.000
この空間には、あなたのアプリの小さなバージョンが住んでいるように感じるはずです。

00:13:17.000 --> 00:13:23.000
展開されたビューをレイアウトするときは、2つのビューの間の物事の相対的な配置を維持してみてください。

00:13:23.000 --> 00:13:26.000
そうすれば、それらの間に一貫性があります。

00:13:26.000 --> 00:13:33.000
拡張されたビューは、より多くのコンテンツのための背の高いビューから、よりコンパクトなビューのための短いピルサイズのビューまでさまざまです。

00:13:33.000 --> 00:13:39.000
必要なスペースを決めるのはあなた次第ですが、それらの間の端にある高さは避けてください。

00:13:39.000 --> 00:13:44.000
また、コンテンツをレイアウトするときは、センサー領域に注意を喚起する「額」を上部に置かないでください。

00:13:44.000 --> 00:13:50.000
むしろ、センサーをできるだけしっかりと抱きしめ、その周りにコンテンツを包み込んでみてください。

00:13:50.000 --> 00:13:53.000
これはそれをほとんど消すのに役立ちます。

00:13:53.000 --> 00:13:57.000
最後に、ダイナミックアイランドも最小限の景色を持っています。

00:13:57.000 --> 00:14:01.000
このビューは、一度に行われている複数のセッションをジャグリングするときに表示されます。

00:14:01.000 --> 00:14:10.000
ここでは純粋に単なるロゴに戻すことを避け、この小さな状態でもセッションがどのように情報を伝え続けることができるかを考えてください。

00:14:10.000 --> 00:14:16.000
だから、今日話したように、ダイナミックアイランドは、あなたのアプリが住むことができるユニークな新しいシステムレイヤーです。

00:14:16.000 --> 00:14:28.000
そして、それのためにデザインするときは、ダイナミックアイランドの中で家にいるように感じながら、アプリに固有の方法でアプリのアイデンティティをこのスペースに適応させるなど、心に留めておくべきことがたくさんあります。

00:14:28.000 --> 00:14:35.000
また、島の丸い形と調和するように、要素のフィット感と配置に関する重要な考慮事項もあります。

00:14:35.000 --> 00:14:48.000
一緒に、ダイナミックアイランド内で構築するこれらの経験はすべて、新しい種類のマルチタスクとアプリと対話する新しい方法と考えることができ、以前は不可能だった私たちのデバイスを使用する経験と方法のロックを解除することができます。

00:14:48.000 --> 00:14:50.000
どこに持って行けるかを見るのは本当にエキサイティングです。

00:14:50.000 --> 23:59:59.000
ありがとうございます！

