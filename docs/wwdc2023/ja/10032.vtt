WEBVTT

00:00:00.000 --> 00:00:10.000
♪ ♪

00:00:10.000 --> 00:00:11.000
アレン：みなさん、こんにちは！

00:00:11.000 --> 00:00:18.000
私はアクセシビリティチームのエンジニアであるアレンで、WWDCの「Meet Assistive Access」へようこそ。

00:00:18.000 --> 00:00:25.000
Appleでは、当社の製品が誰にとってもアクセスしやすく、包括的であることを保証するよう努めています。

00:00:25.000 --> 00:00:33.000
私たちは、認知障害は、人々が私たちの技術とどのように相互作用するかにおいて、独自の課題を提示することができることを理解しています。

00:00:33.000 --> 00:00:41.000
支援アクセスは、障害を持つ人々の認知負荷を軽減するために、アプリや経験をコアに抽出するモードです。

00:00:41.000 --> 00:00:58.000
親、保護者、保護者などの信頼できるサポーターの助けを借りて、Assistive Accessの設定でカスタマイズすると、iPhoneやiPadで以前よりも独立してアプリを簡単にナビゲートして使用できるようになります。

00:00:58.000 --> 00:01:04.000
今日は、支援アクセスを設定してオンにする方法を発見し、それがどのように機能するかを探ります。

00:01:04.000 --> 00:01:10.000
次に、支援アクセスの目標とコアバリューのいくつかを探ります。

00:01:10.000 --> 00:01:15.000
Assistive Accessがオンになっているときにアプリケーションがどのように動作するかについて説明します。

00:01:15.000 --> 00:01:21.000
そして最後に、Assistive Accessでのアプリのプレゼンテーションについて考慮すべき追加事項について説明します。

00:01:21.000 --> 00:01:25.000
では、始めましょう。

00:01:25.000 --> 00:01:28.000
支援アクセスの設定は簡単です。

00:01:28.000 --> 00:01:36.000
前述のように、信頼できるサポーターは、設定アプリを使用して、デバイスを使用している人のニーズに合わせて支援アクセスをカスタマイズできます。

00:01:36.000 --> 00:01:43.000
設定を通じてこのモードに最初にアクセスすると、信頼できるサポーターが初期設定プロセスに案内されます。

00:01:43.000 --> 00:01:53.000
彼らは、実行が許可される優先アプリの選択から、バッテリーインジケーターが存在するかどうかの選択まで、支援アクセスの多くの側面をカスタマイズすることができます。

00:01:53.000 --> 00:02:00.000
支援アクセスは、その設定から、またはアクセシビリティショートカットを使用してオンにすることができます。

00:02:00.000 --> 00:02:12.000
支援アクセスに入ると、システムは設定で壁紙を変更する機能と通知を知らせるインターフェースを備えた新しいロック画面を表示します。

00:02:12.000 --> 00:02:22.000
ロック画面を通り過ぎると、新しいホーム画面が大きなアプリのアイコンと大きなテキストで表示されます。

00:02:22.000 --> 00:02:55.000
このモード用に特別に設計された5つのAppleアプリを含むように支援アクセスを設定しました。友人や家族からの電話を発信または受信するための「通話」、メッセージを送受信するための「メッセージ」、お気に入りのプレイリストにアクセスするための「音楽」、写真、ビデオ、セルフィーを撮るための「カメラ」、保存された写真やビデオを表示するための「写真」です。

00:02:55.000 --> 00:03:05.000
支援アクセスは、認知障害を軽減するための効果的な経験を生み出すことを目的とした一連の設計および開発目標で作られています。

00:03:05.000 --> 00:03:14.000
iOSとiPadOSの多くのアプリには、ボタン、アイコン、メニュー、画像など、たくさんのユーザーインターフェイスアイテムがあります。

00:03:14.000 --> 00:03:20.000
一部の人にとっては、このレベルの機能性と完全性は、操作が困難になる可能性があります。

00:03:20.000 --> 00:03:24.000
人々は気を散らすことなくタスクを完了できるはずです。

00:03:24.000 --> 00:03:32.000
支援アクセスは利用可能なオプションを減らすので、人々は興味のあるアイテムを見つけてナビゲートすることができます。

00:03:32.000 --> 00:03:40.000
より少ないステップとより少ないオプションは、タスクを完了するための明確な道筋を提供するのに役立ちます。

00:03:40.000 --> 00:03:44.000
エラーの認識と回復は難しい場合があります。

00:03:44.000 --> 00:03:57.000
人々がファイルを削除するなどの重要な行動に遭遇した場合、明確な指示を与えられ、継続する前に何が起こっているのかを理解する機会を与えられるべきです。

00:03:57.000 --> 00:04:05.000
これには、時間に依存するアクションを減らし、いつでも簡単に戻ることも含まれます。

00:04:05.000 --> 00:04:11.000
使い慣れたインタラクションやパターンを作成することは、支援アクセスにとって非常に重要です。

00:04:11.000 --> 00:04:21.000
予測可能性と快適さの感覚を確立し、テキストと画像の両方を見るようなマルチモーダル体験にも従事します。

00:04:21.000 --> 00:04:29.000
これは、認知の緊張を軽減し、インターフェイスを身近にし、インターフェイスが理解される可能性を高めます。

00:04:29.000 --> 00:04:40.000
複雑さを軽減し、人々がエラーを防ぐのを助け、使い慣れたインタラクションを作成することで、人々はより少ない難易度でiPhoneとiPadを使うことができます。

00:04:40.000 --> 00:04:46.000
それでは、Assistive Accessがオンになっているときにアプリがどのように動作するかを見てみましょう。

00:04:46.000 --> 00:04:50.000
支援アクセスでは、サードパーティのアプリが機能します。

00:04:50.000 --> 00:04:55.000
この設定では、アプリを追加しました。どのように見えるか見てみましょう。

00:04:55.000 --> 00:05:03.000
アプリを開くと、Assistive Accessは画面の下部に目立つように表示される大きな戻るボタンを追加します。

00:05:03.000 --> 00:05:09.000
戻るボタンのためのスペースを作るために、アプリはデフォルトで縮小されたフレームで表示されます。

00:05:09.000 --> 00:05:16.000
これは、個々のデバイスの画面サイズに基づいてアプリを設計した場合に備えて、アプリがまだ素晴らしく見えるようにするためです。

00:05:16.000 --> 00:05:23.000
さらに、ホーム画面に戻るには、戻るボタンをタップすることで実行できます。

00:05:23.000 --> 00:05:29.000
一部のアプリは、さまざまなデバイスや画面サイズに適応するように特別に設計されています。

00:05:29.000 --> 00:05:38.000
戻るボタンを除いて、アプリをフルスクリーンで実行できるようにする新しいinfo.plistキーを作成しました。

00:05:38.000 --> 00:05:45.000
UISupportsFullScreenInAssistiveAccessをinfo.plistファイルに追加し、その値をyesに設定します。

00:05:45.000 --> 00:05:52.000
このキーを使用して、任意の画面サイズに適応するようにアプリを設計したことをAssistive Accessに知らせます。

00:05:52.000 --> 00:06:00.000
私のアプリはオーディエンスのために設計されており、アダプティブなレイアウトを持っているので、このキーは私のアプリに関連しています。

00:06:00.000 --> 00:06:04.000
このキーを追加した後、私のアプリがどのように動作するかを見てみましょう。

00:06:04.000 --> 00:06:10.000
素晴らしい、私のアプリはAssistive Accessで利用可能なすべてのスペースを使用しています。

00:06:10.000 --> 00:06:14.000
アプリが同じことをできるようにする方法を見てみましょう。

00:06:14.000 --> 00:06:21.000
iPhoneとiPadの優れたアプリは、ユーザーのデバイスに関係なく適応する一貫したレイアウトを持つように設計されています。

00:06:21.000 --> 00:06:28.000
これは、アプリがデバイスや画面サイズに基づいてハードコードレイアウトをしないことを意味します。

00:06:28.000 --> 00:06:42.000
SwiftUIでは、開発者はスタックやグリッドなどのレイアウトコンテナを利用してビューを配置し、レイアウト修飾子を利用してビューのサイズ、位置、配置を調整または制限することができます。

00:06:42.000 --> 00:06:51.000
アプリにもっとカスタマイズされたレイアウトが必要な場合は、「SwiftUIでカスタムレイアウトを作成する」セッションをチェックしてください。

00:06:51.000 --> 00:06:56.000
UIKitでは、AutoLayoutを使用し、2つの重要な機能を利用できます。

00:06:56.000 --> 00:07:08.000
1つ目はセーフエリアです。これは、ダイナミックアイランドやホームインジケーターなどのシステムハードウェアやソフトウェア要素によって妨げられていない画面の部分です。

00:07:08.000 --> 00:07:16.000
safeAreaInsetsプロパティを使用して、インターフェイスの目に見える部分内にビューを配置します。

00:07:16.000 --> 00:07:24.000
レイアウトガイドは、画面上のコンテンツの配置と整列に役立つ長方形の領域を定義する2番目の機能です。

00:07:24.000 --> 00:07:32.000
safeAreaLayoutGuideプロパティを使用して、要素を調整し、コンテンツの周りに標準マージンを適用します。

00:07:32.000 --> 00:07:41.000
アプリを適応させる方法の詳細については、セッション「UIKit：あらゆるサイズと形状のアプリ」をチェックしてください。

00:07:41.000 --> 00:07:53.000
SwiftUIまたはUIKitを使用するかどうかにかかわらず、この新しいInfo.plistキーは、アダプティブレイアウトとともに、支援アクセスのすべてのユーザーがあなたのアプリで素晴らしい経験を持つことを保証することができます。

00:07:53.000 --> 00:07:59.000
支援アクセスでも、誰もがあなたのアプリを楽しんで使えるようにしましょう。

00:07:59.000 --> 00:08:01.000
見てくれてありがとう。

00:08:01.000 --> 23:59:59.000
♪ ♪

