WEBVTT

00:00:00.000 -> 00:00:04.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:04.000 -> 00:00:10.000
♪

00:00:10.000 -> 00:00:11.000
こんにちは！

00:00:11.000 -> 00:00:15.000
私はケリーで、プラットフォーム互換性エンジニアです。

00:00:15.000 -> 00:00:19.000
iPadOSとiOSは強力なプラットフォームです。

00:00:19.000 -> 00:00:24.000
あなたはすでに彼らのために構築された素晴らしいアプリを持っています、多分あなたは複数を持っています。

00:00:24.000 -> 00:00:29.000
これで、Appleの最新のプラットフォームで同じアプリを簡単に実行できます。

00:00:29.000 -> 00:00:35.000
iOSアプリの大半は、箱から出してすぐに見栄えが良く、気分がいいです。

00:00:35.000 -> 00:00:41.000
たとえば、シミュレータで変更されずに実行されているiPadカレンダーアプリをチェックしてください。

00:00:41.000 -> 00:00:47.000
iPadの見た目と感触で、すべてが期待どおりに機能します。

00:00:47.000 -> 00:01:00.000
さまざまなタイムラインを見たり、特定のイベントの詳細を拡大したり、新しいイベントを追加したりできます。

00:01:00.000 -> 00:01:06.000
そして、私がカバーしようとしている推奨事項に従って、iPadバージョンで実行されるマップ。

00:01:06.000 -> 00:01:09.000
私は地球を美しく回転させることができます。

00:01:09.000 -> 00:01:20.000
特定の目的地を調べることもできます...

00:01:20.000 -> 00:01:26.000
...そして有名なランドマークを訪れてください。

00:01:26.000 -> 00:01:32.000
このビデオでは、この新しいプラットフォームでiPadとiPhoneのアプリを紹介します。

00:01:32.000 -> 00:01:38.000
あなたのアプリが無料で得られる組み込みの動作をカバーすることから始めます。

00:01:38.000 -> 00:01:45.000
次に、アプリが知っておくべき機能の違いと、それらについて何をすべきかについて話します。

00:01:45.000 -> 00:01:55.000
最後に、Designed for iPadエクスペリエンスがアプリのニーズに最も適しているかどうかを判断する方法を説明します。

00:01:55.000 -> 00:01:59.000
この新しいプラットフォームは、iOSの基盤の上に構築されています。

00:01:59.000 -> 00:02:04.000
追加のシステムサポートにより、その共有基盤を強化します。

00:02:04.000 -> 00:02:13.000
この2つの組み合わせにより、あなたのアプリは何も変更することなく美しく実行される可能性が高くなります!

00:02:13.000 -> 00:02:18.000
iPadとiPhoneのアプリは、ライトモードスタイルで、このデバイスにウィンドウとして表示されます。

00:02:18.000 -> 00:02:34.000
システムは横向きのアプリのiPadバリアントを好みますが、アプリがiPhoneのみをサポートしている場合、システムはiPhoneのアスペクト比を縦向きで表示します。

00:02:34.000 -> 00:02:45.000
アプリが複数の向きをサポートしている場合、ウィンドウの右上隅に回転ボタンが用意されているため、人々は各シーンを自分の好みに合わせて回転させることができます。

00:02:45.000 -> 00:02:52.000
アプリの角をつかむと、システムはウィンドウを拡大し、アスペクト比を維持します。

00:02:52.000 -> 00:02:58.000
最小サイズまたは最大サイズに達すると、コーナーが跳ね返ってそれを反映します。

00:02:58.000 -> 00:03:05.000
スケーリングはシステムによって管理されるため、アプリはこのすべてのサポートを無料で利用できます。

00:03:05.000 -> 00:03:10.000
人々は自然な入力を介してこのデバイス上のコンテンツと対話します。

00:03:10.000 -> 00:03:17.000
彼らは何かを見て、一緒に指をタップしてそれを選択するか、手を差し伸べてコンテンツを直接タッチします。

00:03:17.000 -> 00:03:21.000
また、Bluetoothトラックパッドやゲームコントローラーを使用することもできます。

00:03:21.000 -> 00:03:34.000
これらのシステム定義のインタラクションメソッドはすべて、アプリがすでに慣れ親しんでいるイベントを送信するため、すでに使用しているのと同じイベント処理手法を引き続き活用できます。

00:03:34.000 -> 00:03:45.000
ドキュメントマネージャーやフォトピッカーなどのシステムビューは、システムの外観と一致し、アプリがプラットフォームのルックアンドフィールに適合するのに役立ちます。

00:03:45.000 -> 00:04:02.000
アプリがTouch IDまたはFace IDをサポートしている場合、LocalAuthenticationはOptic IDを介してこれらの実装を自動的に転送するため、アプリは追加の作業なしで最新の認証技術をサポートします。

00:04:02.000 -> 00:04:08.000
さて、このプラットフォームはiOSと異なる点がいくつかあります。

00:04:08.000 -> 00:04:12.000
このデバイス上のアプリは、縦向きまたは横向きで見ることができます。

00:04:12.000 -> 00:04:15.000
それはiPadに比べれば何も新しいことではない。

00:04:15.000 -> 00:04:21.000
しかし、iPadとは異なり、デバイス全体を回転させるという概念はありません。

00:04:21.000 -> 00:04:31.000
デバイスの向きはアプリの向きを知らせないため、アプリが新しいシーンに好む向きを指定することをお勧めします。

00:04:31.000 -> 00:04:36.000
人々は後でシステムの回転ボタンでシーンを回転させることができます。

00:04:36.000 -> 00:04:45.000
新しいUIPreferredDefaultInterface OrientationキーをアプリのInfo.plistに追加することで、好みを表現できます。

00:04:45.000 -> 00:04:49.000
提供しない場合、システムはデフォルトの向きを使用します。 システムはデフォルトの向きを使用します。

00:04:49.000 -> 00:04:55.000
このキーはこのプラットフォームに固有のものであり、他のプラットフォームには影響しません。

00:04:55.000 -> 00:05:02.000
新しいものではないにもかかわらず、このデバイスにも特別な意味を持つ他のいくつかのplistキーがあります。

00:05:02.000 -> 00:05:18.000
システムはUISupportedInterfaceOrientationsを使用して、アプリのウィンドウに回転ボタンが必要かどうかを判断し、App Store ConnectはUIRequiredDeviceCapabilitiesに依存して、アプリがこの新しいデバイスと互換性があるかどうかを判断します。

00:05:18.000 -> 00:05:23.000
すべての適切なアプリは、App Storeで自動的に利用可能になります。

00:05:23.000 -> 00:05:34.000
アプリがこのデバイスでは利用できない特定の機能に依存している場合、またはアプリがこのプラットフォームで意味をなさない理由がある場合は、App Store Connectで可用性を管理できます。

00:05:34.000 -> 00:05:40.000
詳細については、「Explore App Store Connect for spatial computing」をご覧ください。

00:05:40.000 -> 00:05:49.000
必要に応じて、これらのキーをInfo.plistに追加するか、既存の値がまだ正確で最新であることを確認してください。

00:05:49.000 -> 00:05:56.000
このデバイスのジェスチャーは、人々が目と手を使ってコンテンツと対話するため、異なる方法で機能します。

00:05:56.000 -> 00:06:03.000
各手が別々のタッチであるため、最大2つの同時入力があります。

00:06:03.000 -> 00:06:09.000
2回以下のタッチを期待するすべてのシステムジェスチャーはシームレスに機能します。

00:06:09.000 -> 00:06:20.000
カスタムジェスチャーリコグナイザもサポートされていますが、自然な入力期待でスムーズに実行するために更新する必要があるかもしれません。

00:06:20.000 -> 00:06:27.000
最も更新されたフレームワークの1つは、これまで以上に強力に大幅に進化したARKitです。

00:06:27.000 -> 00:06:37.000
私たちは、プラットフォームアーキテクチャとプライバシーのニーズの根本的な違いを考慮して、新しいAPIとエクスペリエンスをゼロから設計しました。

00:06:37.000 -> 00:06:46.000
つまり、既存のARViewsとARSessionsは、iPadやiPhoneのようにこのデバイスでは動作しません。

00:06:46.000 -> 00:06:58.000
「空間体験のためにARKitアプリを再想像する」ビデオをチェックして、このプラットフォーム用にアプリを再構築することで活用できるすべての新しいARKit機能について学んでください。

00:06:58.000 -> 00:07:07.000
このデバイスの位置情報サポートは、iPadによく似ています。位置情報はWi-Fi経由で近似することも、iPhone経由で共有することもできます。

00:07:07.000 -> 00:07:13.000
詳細については、「空間コンピューティングのコアロケーションを満たす」ビデオに記載されています。

00:07:13.000 -> 00:07:21.000
Look to Dictateは、人々が目と声だけを使ってアプリをすばやくナビゲートできる便利な新しい入力テクニックです。

00:07:21.000 -> 00:07:37.000
有効にすると、検索フィールドの虫眼鏡がマイクアイコンに取って代わり、マイクを見て検索に話すことができます。

00:07:37.000 -> 00:07:40.000
このAPIは検索バーで提供されています。

00:07:40.000 -> 00:07:50.000
このプラットフォームで実行されているiPadおよびiPhoneアプリでは、デフォルトで無効になっています。これにより、動作を確認し、有効にする場所を決定できます。

00:07:50.000 -> 00:07:58.000
また、iOSとiPadOSではノー操作なので、プラットフォームごとにサポートを条件付ける必要はありません。

00:07:58.000 -> 00:08:05.000
検索可能なビューに.searchDictationBehavior()修飾子を追加することで、SwiftUIでLook to Dictateを有効にすることができます。

00:08:05.000 -> 00:08:12.000
UIKit検索バーの場合、isLookToDictateEnabledをtrueに設定します。

00:08:12.000 -> 00:08:20.000
これらの変更をすべて処理する最善の方法は、常に同じ方法です。可用性チェックを使用します。

00:08:20.000 -> 00:08:25.000
フレームワークを呼び出す前に、フレームワークがサポートされていることを確認してください。

00:08:25.000 -> 00:08:30.000
多くのフレームワークには、あなたの便宜のためにこれらの機能が組み込まれています。

00:08:30.000 -> 00:08:37.000
特定のハードウェアの存在に依存する構成にアクセスするときは、同じことをすることを忘れないでください。

00:08:37.000 -> 00:08:46.000
たとえば、ヘッドセットにはiOSデバイスのフロントカメラとバックカメラよりも多くのカメラがありますが、それらのすべてがアプリが使用できるわけではありません。

00:08:46.000 -> 00:08:52.000
カメラを使用する前に、カメラが存在し、サポートされていることを確認してください。

00:08:52.000 -> 00:08:58.000
これらの慣行は、このデバイスだけでなく、すべてのデバイスでアプリをより堅牢にします。

00:08:58.000 -> 00:09:02.000
これは、このプラットフォームでのフレームワークの進化のサンプルにすぎません。

00:09:02.000 -> 00:09:11.000
いくつかのフレームワークは大きく成長し、SwiftUI、ARKit、RealityKitなど、このデバイスに特化したビデオがあります。

00:09:11.000 -> 00:09:17.000
残りのフレームワークのほとんどは、それらを採用する方法にいくつかの調整をしながら、常にそうであるように機能します。

00:09:17.000 -> 00:09:24.000
変更されたすべてのフレームワークに関する詳細情報は、開発者ドキュメントに記載されています。

00:09:24.000 -> 00:09:30.000
アプリにどのようなコード変更が必要かがわかったので、行動を起こす準備が整いました。

00:09:30.000 -> 00:09:42.000
xrOS SDKがインストールされると、XcodeはiOS SDKを使用するプロジェクトのサポート対象先にxrOSデバイス(iPad用に設計)を自動的に追加します。

00:09:42.000 -> 00:09:50.000
スキームがSDKに別のプラットフォームまたは自動を設定している場合は、Designed for iPadターゲットを手動で追加できます。

00:09:50.000 -> 00:09:57.000
それが設定されると、一致する名前の実行先が宛先ピッカーに表示されます。

00:09:57.000 -> 00:10:00.000
そのターゲットを選択し、ビルドし、実行します。

00:10:00.000 -> 00:10:03.000
それがすべてです! 

00:10:03.000 -> 00:10:08.000
iPadとiPhoneのアプリは、このデバイスで素晴らしい体験を提供します。

00:10:08.000 -> 00:10:14.000
広範なシステムサポートのおかげで、ほとんどのアプリはまったく変更を必要としません。

00:10:14.000 -> 00:10:24.000
iOS SDKに対してアプリを構築するか、xrOS SDKに対して再構築するかは、目標によって異なります。

00:10:24.000 -> 00:10:34.000
先に説明したように、各SDKで利用可能なフレームワークと、各フレームワーク内でサポートされている機能の違いがあります。

00:10:34.000 -> 00:10:42.000
iOS SDKでのみ利用可能な2つの大きなことがあります。SpriteKitとストーリーボードです。

00:10:42.000 -> 00:10:50.000
これらの技術のいずれかがアプリに不可欠な場合は、iPad用のデザインに固執する必要があります。

00:10:50.000 -> 00:10:56.000
iPadとiPhoneのアプリは、ライトモードスタイルでiPadのように感じるウィンドウに表示されます。

00:10:56.000 -> 00:11:01.000
シドニー・オペラハウスにズームインしたときのマップはこんな感じです。

00:11:01.000 -> 00:11:14.000
コンテンツがウィンドウの端までいっぱいになるが、それを超えて拡張せず、すべての色がマップがiPadやiPhoneで使用しているのと同じライトモードスタイルと一致していることに注目してください。

00:11:14.000 -> 00:11:21.000
xrOS用に設計されたアプリは、別のレベルの没入型空間体験のロックを解除します。

00:11:21.000 -> 00:11:30.000
ARKitやRealityKitのようないくつかのフレームワークは、このプラットフォーム用に設計されたアプリでのみ利用可能な機能を進化させました。

00:11:30.000 -> 00:11:39.000
これらのアップデートのおかげで可能なすべての新しい体験については、他のビデオやドキュメントを参照してください。

00:11:39.000 -> 00:11:54.000
Windowsに加えて、このデバイス用に設計されたアプリは、コンテンツに合わせて成長するコンテナ内の3Dオブジェクトを表示するボリュームや、没入型体験のための没入型スペースもサポートしています。

00:11:54.000 -> 00:11:58.000
基調講演のリハーサルスペースは、ヘッドセットで次のようになります。

00:11:58.000 -> 00:12:05.000
パススルーやその他のアプリを隠すことで、Keynoteはプレゼンテーションに完全に没頭し、集中できるようにします。

00:12:05.000 -> 00:12:12.000
ヘッドセットとシミュレータの両方で、このプラットフォーム用に設計されたアプリはシステムのルックアンドフィールを使用します。

00:12:12.000 -> 00:12:23.000
彼らの背景は、周囲の人々を接地し、読みやすさを促進するためにカラーバランスとコントラストを動的に調整するガラス素材です。

00:12:23.000 -> 00:12:27.000
また、新しいオーナメントAPIを利用することもできます。

00:12:27.000 -> 00:12:36.000
左側のタブバーや写真の下部にあるボタンのように、装飾品はウィンドウの側面に固定して機能を強化します。

00:12:36.000 -> 00:12:40.000
そして、彼らはアプリに窓の中に絵を描くためのより多くのスペースを残します。

00:12:40.000 -> 00:12:47.000
ほとんどの場合、装飾品はナビゲーションやツールバーに使用されます。

00:12:47.000 -> 00:12:57.000
xrOSの設計は、没入型体験を作成したり、新しいフレームワーク機能を採用したり、システムのルックアンドフィールに合わせたいアプリに最適です。

00:12:57.000 -> 00:13:04.000
アプリの既存の体験を維持したい場合は、iPad用のデザインがあなたのための道です。

00:13:04.000 -> 00:13:17.000
このプラットフォームはiOSとiPadOSと共通の基盤を共有しているので、どのSDKを選択しても、これらのプラットフォームで行う作業は、このプラットフォームでのあなたの経験に引き続き役立ちます。

00:13:17.000 -> 00:13:30.000
この新しいプラットフォームの設計がアプリに最も適していると判断した場合、「空間コンピューティングのためのSwiftUIに会う」と「空間コンピューティングのためのUIKitに会う」ビデオは、始めるのに最適な場所です。

00:13:30.000 -> 00:13:34.000
あなたの次のステップは、このエキサイティングな新しいプラットフォームであなたのアプリを試すことです!

00:13:34.000 -> 00:13:38.000
大多数のアプリは、コードの変更をまったくせずに動作します。

00:13:38.000 -> 00:13:55.000
私がカバーした互換性領域に特に注意してください。Info.plistキーが最新であることを確認し、興味のある新しいプラットフォームエクスペリエンスを選択し、使用する前にフレームワークの依存関係が利用可能であることを確認してください。

00:13:55.000 -> 00:14:05.000
すべて完了したら、「共有スペースのiPadとiPhoneアプリを強化する」を見て、このデバイスでiOSアプリを自宅にいるように感じさせる方法を学びましょう。

00:14:05.000 -> 00:14:09.000
ご覧いただきありがとうございます。この新しいプラットフォームであなたのアプリを試すのを楽しみにしています。

00:14:09.000 -> 23:59:59.000
♪

