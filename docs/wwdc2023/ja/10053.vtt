WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:11.000
こんにちは！

00:00:11.000 --> 00:00:17.000
私はプライバシーエンジニアリングのマイケルです。「プライバシーの新機能」へようこそ。

00:00:17.000 --> 00:00:22.000
アップルでは、プライバシーは基本的人権であると信じています。

00:00:22.000 --> 00:00:27.000
それを尊重し、保護することは、私たちの共通の責任のすべてです。

00:00:27.000 --> 00:00:36.000
このため、プライバシーは、Appleで新しく改良された機能の設計にどのようにアプローチするかの中心的な要素です。

00:00:36.000 --> 00:00:46.000
多くの製品やサービスが私たちのすべての生活の中心的な主力となっているので、あなたは人々を保護する上で重要なパートナーとなっています。

00:00:46.000 --> 00:01:01.000
人々がどのデータにアクセスし、どのような目的でアクセスされているかを理解し、制御するアプリで優れたプライバシー体験を提供することは、特に人生の敏感な部分でアプリを信頼するのに役立ちます。

00:01:01.000 --> 00:01:07.000
プライバシーの柱は、アプリにプライバシーを組み込む際の素晴らしいガイドです。

00:01:07.000 --> 00:01:17.000
これらはAppleで製品やサービスのプライバシーについて考えるために使用する4つの中心的なアイデアであるため、以前にそれらについて話すのを聞いたことがあるかもしれません。

00:01:17.000 --> 00:01:23.000
最初の柱はデータの最小化です。機能を構築するために必要なデータのみを使用します。

00:01:23.000 --> 00:01:34.000
これは、アクセスされたデータ機能の量から、アプリケーションサーバーと共有されるデータ、第三者と共有される可能性のあるデータまで、アプリのアーキテクチャ全体に適用されます。

00:01:34.000 --> 00:01:43.000
2つ目は、デバイス上の処理です。デバイスのパワーを活用して、データをローカルで処理し、サーバーとの共有を避けます。

00:01:43.000 --> 00:02:00.000
第三に、透明性と制御とは、人々がデータアクセスと処理の何を、なぜ、いつ、どこで理解していることを確認し、それが起こる前に適切な制御を与えることです。

00:02:00.000 --> 00:02:03.000
そしてまた、彼らが後で考えを変えることを可能にします。

00:02:03.000 --> 00:02:13.000
最後の柱はセキュリティ保護です。エンドツーエンドの暗号化など、他の柱を強化するために強力な技術的緩和策を適用します。

00:02:13.000 --> 00:02:37.000
アプリにプライバシーの柱を実装するために、採用できるプライバシー中心のデザインの新しいツールについて説明し、プライバシーのための重要なプラットフォームの変更に関する最新情報を提供し、最後に、Appleの最新プラットフォームの空間入力モデルがプライバシーを保護するためにどのように設計されたかについて話します。

00:02:37.000 --> 00:02:47.000
私は、優れたプライバシーを備えた優れたアプリを簡単に構築できるように、Appleのプラットフォームに搭載される新しいプライバシー強化技術から始めます。

00:02:47.000 --> 00:03:03.000
これには、ユーザーが共有を細かく制御しながら、アプリがシームレスにコンテンツにアクセスできるようにする一連の新しいAPIと、サーバーや人とのコミュニケーションをよりよく保護するための新しいAPIが含まれます。

00:03:03.000 --> 00:03:11.000
写真への低摩擦アクセスを提供するように設計された写真ピッカーの改善から始めます。

00:03:11.000 --> 00:03:24.000
長年にわたり、恥ずかしい子供時代の写真から最後のハイキング旅行まで、私たちの貴重な瞬間がますます多く撮影されるにつれて、私たちの写真ライブラリは大規模に成長しました。

00:03:24.000 --> 00:03:36.000
このため、アプリへの信頼を築くための基本的な方法は、どのデータをアプリと共有し、いつ共有するかについて、人々がきめ細かな決定を下すことができるようにすることです。

00:03:36.000 --> 00:03:46.000
したがって、誰かがあなたのアプリを使って前回の旅行から最も風光明媚な写真を共有したい場合は、アプリにすべての写真へのアクセスを許可することなく、そうすることができます。

00:03:46.000 --> 00:03:49.000
これは、フォトピッカーでできることです。

00:03:49.000 --> 00:03:58.000
このAPIは、フォトライブラリ全体にアクセスする許可を必要とせずに、選択した写真やビデオへのアクセスをアプリに提供します。

00:03:58.000 --> 00:04:08.000
また、iOS 17とmacOS Sonomaでは、ピッカーをアプリに完全に埋め込むことができ、完全にシームレスな体験ができます。

00:04:08.000 --> 00:04:20.000
写真はアプリの一部であるように見えますが、システムによってレンダリングされ、選択した場合にのみ共有されるため、ユーザーの写真は常に管理下にあります。

00:04:20.000 --> 00:04:45.000
新しいカスタマイズオプションを使用すると、このようなクロムなしでピッカーを表示するか、水平にスクロールできる最小限の1行の写真として表示するか、キャプションや位置情報などの写真メタデータの共有に関するコントロールを提供する新しいオプションメニューを使用して、フルピッカーのインラインバージョンとして表示するかを選択できます。

00:04:45.000 --> 00:04:58.000
フォトピッカーは、ライブラリ全体にアクセスするための許可を得たり、フォトピッキングフローを設計および実装したりすることを心配する必要がないため、写真を取得するための優れた迅速な方法です。

00:04:58.000 --> 00:05:05.000
フルアクセスを要求するのではなく、写真に個別にアクセスするためにピッカーを採用することを検討してください。

00:05:05.000 --> 00:05:13.000
ピッカーの新機能の詳細な説明については、ビデオ「写真ピッカーをアプリに埋め込む」をご覧ください。

00:05:13.000 --> 00:05:28.000
また、完全なフォトライブラリにアクセスするための強力な要件を持つアプリを開発している場合、iOS 17には、写真の数と共有されるもののサンプルを含む再設計された許可ダイアログがあります。

00:05:28.000 --> 00:05:34.000
これは、人々が何を共有するかについて彼らにとって正しい決定を下すのに役立ちます。

00:05:34.000 --> 00:05:45.000
好みは時間の経過とともに変化する可能性があるため、システムはアプリがフォトライブラリに完全にアクセスできるかどうかを定期的に人々に思い出させます。

00:05:45.000 --> 00:06:00.000
次は、macOS用のScreenCaptureKitの新しいAPIであるスクリーンキャプチャピッカーで、より良い体験を提供しながら、画面共有時にアプリに必要なウィンドウや画面のみを共有できるようにします。

00:06:00.000 --> 00:06:18.000
macOS Sonoma以前は、ユーザーが仮想ビデオ会議でプレゼンテーションを画面共有したい場合、設定アプリを介してフルスクリーンを記録する許可を会議アプリに付与する必要があり、その結果、経験が悪くなり、過剰共有のリスクが生じます。

00:06:18.000 --> 00:06:29.000
新しいSCContentSharingPicker APIを使用すると、macOS Sonomaは、人々が共有したい画面コンテンツを選択できるウィンドウピッカーを表示します。

00:06:29.000 --> 00:06:35.000
macOSは、選択したウィンドウまたは画面が選択されるとすぐにのみ共有するようにします。

00:06:35.000 --> 00:06:46.000
画面を記録するための明示的なアクションのため、アプリはスクリーンキャプチャセッションの期間中、選択したコンテンツを記録することが許可されています。

00:06:46.000 --> 00:06:59.000
これは、アプリが画面をキャプチャしたり、独自の画面コンテンツピッカーを構築したりするための個別の許可を取得する必要がないことを意味します。これはすべてSCContentSharingPickerによって処理されます。

00:06:59.000 --> 00:07:11.000
人々が常に認識していることを確認するために、macOS Sonomaには、アプリが画面を録画していることを思い出させる新しい画面共有メニューバー項目も含まれています。

00:07:11.000 --> 00:07:17.000
これを念頭に置いて、予想される場合にのみ画面コンテンツを録画してください。

00:07:17.000 --> 00:07:22.000
クリックすると、メニューが展開され、共有コンテンツのプレビューが表示されます。

00:07:22.000 --> 00:07:30.000
これにより、キャプチャセッションに画面コンテンツをすばやく追加または削除したり、完全に終了したりすることもできます。

00:07:30.000 --> 00:07:41.000
SCContentSharingPickerは、優先選択モードやアプリケーションなど、アプリのニーズに基づいて調整するためのカスタマイズオプションも提供します。

00:07:41.000 --> 00:07:46.000
詳細については、「ScreenCaptureKitの新機能」をご覧ください。

00:07:46.000 --> 00:07:56.000
カレンダーは、特に新しいイベントのみを作成するアプリの場合、アプリでシームレスな体験を可能にするもう1つの領域です。

00:07:56.000 --> 00:08:10.000
カレンダーは、医師の予約やフライト情報など、人々の生活の詳細なビューを提供します。そのため、アプリがアクセスを要求すると、人々は驚いたり、ノーと言ったりするかもしれません。

00:08:10.000 --> 00:08:23.000
カレンダーイベントを書くためのアクセスのみを求めているアプリの場合、イベントの追加に失敗したり、欲求不満になったり、コンサートや親友の誕生日パーティーを見逃したりすることさえあります。

00:08:23.000 --> 00:08:30.000
この問題を回避するために、カレンダーアクセスのためのAppleのプラットフォームには2つの重要な変更があります。

00:08:30.000 --> 00:08:41.000
まず、アプリが新しいカレンダーイベントのみを作成する場合、素晴らしいニュースがあります。EventKitUIを使用すると、アプリは許可を必要としません。

00:08:41.000 --> 00:08:51.000
これは、APIや機能を変更することなく、アプリの外部にEventKitUIビューコントローラーをレンダリングすることで可能になります。

00:08:51.000 --> 00:09:05.000
第二に、イベントを作成するための独自のUIを提供したい場合は、新しい追加のみのカレンダー権限があり、アプリはカレンダー上の他のイベントにアクセスせずにイベントを追加できます。

00:09:05.000 --> 00:09:16.000
これは、アプリがカレンダーのコンテンツを取得しているかどうかを心配することなく、アプリのイベントをユーザーの日に統合するもう1つの素晴らしい方法です。

00:09:16.000 --> 00:09:22.000
また、アプリが後で完全なカレンダーアクセスが必要な場合は、一度アップグレードを依頼することができます。

00:09:22.000 --> 00:09:26.000
ユーザーの意図にリンクされている場合は、このリクエストを行うのが最善です。

00:09:26.000 --> 00:09:35.000
予期しない時間や予期せぬ理由で尋ねられた場合、拒否され、アプリのエクスペリエンスが低下する可能性があります。

00:09:35.000 --> 00:09:41.000
意味のある目的の文字列を定義することで、アクセスが必要な理由を人々が理解するのに役立ちます。

00:09:41.000 --> 00:09:50.000
すべてのアプリへの書き込み専用アクセスの利点を提供するために、覚えておくべき重要なことが2つあります。

00:09:50.000 --> 00:10:00.000
アプリが以前にカレンダーアクセスを許可されている場合、デフォルトではiOS 17またはmacOS Sonomaへのアップグレード時に書き込み専用アクセス許可が設定されます。

00:10:00.000 --> 00:10:10.000
同様に、古いバージョンのEventKitとリンクしていて、アプリがカレンダーへのアクセスを要求した場合、システムは書き込みのみのアクセスのみを求めます。

00:10:10.000 --> 00:10:20.000
この場合、アプリがカレンダーイベントを取得しようとすると、システムは自動的にアプリをフルアクセスにアップグレードするように求められます。

00:10:20.000 --> 00:10:30.000
EventKitとEventKitUIをアプリに統合する方法の詳細については、「カレンダーとEventKitを発見」をご覧ください。

00:10:30.000 --> 00:10:44.000
次に、新しいOblivious HTTP APIです。これは、クライアントのIPアドレスをサーバーから隠し、潜在的に敏感なアプリの使用パターンをネットワークオペレーターから隠すのに役立ちます。

00:10:44.000 --> 00:10:51.000
人々が日常的にいつ、どのアプリを使用するかを知ることは、彼らの生活に深い洞察を与えることができます。

00:10:51.000 --> 00:11:02.000
携帯電話とWi-Fiネットワークのオペレーターは、誰かが接続しているサーバーを観察できるため、個人のアプリの使用状況や生活パターンを観察できます。

00:11:02.000 --> 00:11:11.000
そして、一部のネットワーク事業者は、人々があなたのアプリをどのように使用しているかについて学ぶために彼らの立場を利用することに興味があるかもしれません。

00:11:11.000 --> 00:11:18.000
これは、出会い系アプリや特定の健康状態のためのアプリなど、それらに特に敏感である可能性があります。

00:11:18.000 --> 00:11:30.000
IPアドレスは、インターネット上での通信に不可欠な要素です。ただし、IPアドレスは、誰かの場所や身元を判断するために悪用される可能性があります。

00:11:30.000 --> 00:11:43.000
クライアント分析など、アプリに匿名性が保証された機能を実装したい場合、IPアドレスへの露出は、さらなる課題につながる可能性があります。

00:11:43.000 --> 00:11:58.000
Appleプラットフォームは、誰と何を分離することで、人々のアプリの使用状況とIPアドレスを保護するために、Oblivious HTTP、略してOHTTPをサポートするようになりました。

00:11:58.000 --> 00:12:12.000
OHTTPは、軽量で、アプリケーション層で暗号化されたメッセージをプロキシし、高速なトランザクションサーバーインタラクションを可能にするように設計された標準化されたインターネットプロトコルです。

00:12:12.000 --> 00:12:22.000
OHTTPを使用すると、ネットワークオペレータはアプリケーションサーバーではなく、リレープロバイダーへの接続のみを観察できます。

00:12:22.000 --> 00:12:32.000
このアーキテクチャの礎石は、クライアントのIPアドレスと宛先サーバー名を知っているリレーですが、暗号化されたコンテンツはありません。

00:12:32.000 --> 00:12:44.000
リレーは常にアプリケーションサーバーへの接続を見ると仮定されるため、リレーが得る唯一の意味のある情報はクライアントIPです。

00:12:44.000 --> 00:12:49.000
アプリケーションサーバーへの最終的な接続はリレーによって行われます。

00:12:49.000 --> 00:13:00.000
リレーが第三者によって運営されている場合、単一の当事者が送信元IP、宛先IP、およびコンテンツを完全に可視化することはできません。

00:13:00.000 --> 00:13:12.000
これにより、匿名分析など、ユーザーを特定または追跡したくない機能に技術的な保証を追加することもできます。

00:13:12.000 --> 00:13:21.000
OHTTPのサポートにより、人々に有意義な影響を与える、より強力なインターネットプライバシー保護を構築する機会があります。

00:13:21.000 --> 00:13:30.000
iCloud Private Relayのようなサービスは、優れたパフォーマンスと強力なプライバシー保護のために、すでにOHTTPを利用しています。

00:13:30.000 --> 00:13:37.000
たとえば、プライベートリレーはそれを使用してすべてのDNSクエリを保護します。

00:13:37.000 --> 00:13:44.000
OHTTPを採用する方法の詳細については、ネットワークリレービデオをご覧ください。

00:13:44.000 --> 00:13:56.000
OHTTPを採用することは、実際のユーザー検出を実行するなど、システムアーキテクチャのIPアドレスを置き換える方法を考える必要があることを意味します。

00:13:56.000 --> 00:14:09.000
IPレピュテーションシステムをプライバシー保護の代替手段に置き換える方法については、WWDC22の「CAPTCHAをプライベートアクセストークンに置き換える」を参照してください。

00:14:09.000 --> 00:14:16.000
DNSクエリの暗号化は、ネットワークの使用状況を保護するためのもう1つの重要な部分です。

00:14:16.000 --> 00:14:22.000
方法については、WWDC20の「Enable Encrypted DNS」をご覧ください。

00:14:22.000 --> 00:14:34.000
最後の新しいツールは、コミュニケーションの安全性と、アプリ内の子供を保護するためにデバイス上の処理を利用する新しい機密コンテンツ分析フレームワークです。

00:14:34.000 --> 00:14:48.000
Appleのプラットフォームとあなたが構築するアプリは、子供たちが私たちの製品やサービスを使ってデジタル世界を探索し、家族や友人とコミュニケーションをとるにつれて、多くの家族の重要な部分となっています。

00:14:48.000 --> 00:15:01.000
コミュニケーションの安全性は、子供たちに警告し、ヌードを含む可能性のある写真を受け取ったり共有しようとした場合に有用なリソースを提供することで、家族が子供を安全に保つのに役立ちます。

00:15:01.000 --> 00:15:08.000
そして、これらの保護は、アプリだけでなく、Appleのプラットフォーム全体に適用されることが重要です。

00:15:08.000 --> 00:15:25.000
この目的のために、コミュニケーションの安全性はメッセージを超えて、AirDrop経由で共有するとき、FaceTimeにメッセージを残すとき、電話アプリで連絡先ポスターを共有するとき、および写真ピッカーで機密性の高いコンテンツも検出します。

00:15:25.000 --> 00:15:34.000
また、センシティブコンテンツ警告により、年齢に関係なく、すべての人がこれらの機能を利用できるようにします。

00:15:34.000 --> 00:15:42.000
そして今、新しい機密コンテンツ分析フレームワークを使用すると、アプリ内の機密コンテンツも検出できます。

00:15:42.000 --> 00:15:51.000
システムが提供するMLモデルと同じオンデバイス技術を利用するため、サーバーとコンテンツを共有する必要はありません。

00:15:51.000 --> 00:16:01.000
そして、このフレームワークを使用すると、大規模なMLモデルをトレーニングし、アプリにパックする複雑さに対処することなく、これは可能です。

00:16:01.000 --> 00:16:06.000
ほんの数行のコードでアプリへの統合が可能です。

00:16:06.000 --> 00:16:11.000
開始するには、SCSensitivityAnalyzerのインスタンスを作成します。

00:16:11.000 --> 00:16:22.000
analysisPolicy属性をチェックして、分析が必要かどうか、画像やビデオにヌードが含まれている場合にどのような介入を表示すべきかを決定できます。

00:16:22.000 --> 00:16:31.000
次に、分析したい写真のURLまたはCGImageでanalyzeImageメソッドを呼び出します。

00:16:31.000 --> 00:16:35.000
ビデオを分析するには、代わりにvideoAnalysisメソッドを呼び出してください。

00:16:35.000 --> 00:16:42.000
これはハンドラを返すので、進捗状況を追跡し、必要に応じて分析をキャンセルできます。

00:16:42.000 --> 00:16:47.000
分析結果を取得するには、ハンドラでhasSensitiveContentを呼び出します。

00:16:47.000 --> 00:16:53.000
isSensitiveがtrueの場合、画像またはビデオにヌードが含まれている可能性があります。

00:16:53.000 --> 00:17:06.000
この場合、アプリは、画像やビデオをぼかしたり、難読化したりする独自の介入と、コンテンツを表示するオプションを提供する必要があります。

00:17:06.000 --> 00:17:16.000
また、分析ポリシーをチェックして、通信安全または機密コンテンツ警告が有効になっているかどうかに応じて介入を調整します。

00:17:16.000 --> 00:17:23.000
介入に関するより詳細な設計ガイドラインは、Apple Developerのドキュメントに記載されています。

00:17:23.000 --> 00:17:28.000
これらは、アプリで優れたプライバシーを提供するために採用する新しいAPIです。

00:17:28.000 --> 00:17:36.000
それに加えて、Appleプラットフォームの既存の機能にいくつかのプライバシーの変更があります。

00:17:36.000 --> 00:17:46.000
これには、アプリ内のデータを保護できる新しい方法や、SafariやSafariアプリ拡張機能のプライバシーの改善が含まれます。

00:17:46.000 --> 00:17:55.000
まず、macOS用の新しいプライバシー保護は、同じデバイス上の他のアプリからアプリ内のデータを保護するのに役立つように設計されています。

00:17:55.000 --> 00:18:02.000
デスクトップ、ドキュメント、ダウンロードフォルダなどのディスク上の場所には、システム管理権限があります。

00:18:02.000 --> 00:18:08.000
これにより、アプリが個人データにアクセスできるとき、人々が制御できるようになります。

00:18:08.000 --> 00:18:17.000
このモデルは、プロジェクトのプレゼンテーションや予算のあるスプレッドシートなど、人々が直接やり取りするファイルでうまく機能します。

00:18:17.000 --> 00:18:29.000
一部のアプリケーションでは、送受信したメッセージのデータベースを持つメッセージングアプリや、休暇プランのメモアプリなど、さまざまな場所に個人データを保存する場合があります。

00:18:29.000 --> 00:18:38.000
これらのファイルは、多くの場合、ライブラリフォルダやアプリサンドボックスアプリ、アプリのデータコンテナなどの場所に保存されます。

00:18:38.000 --> 00:18:44.000
macOS Sonomaを使用すると、ユーザーは誰が自分のデータにアクセスできるかをさらに制御できます。

00:18:44.000 --> 00:18:55.000
具体的には、macOSは、アプリが別の開発者からアプリケーションデータコンテナ内のデータにアクセスする前に、許可を与えることを保証します。

00:18:55.000 --> 00:18:59.000
これは2つの方法でアプリケーションに影響を与える可能性があります。

00:18:59.000 --> 00:19:11.000
まず、アプリケーションがシステム管理データストアの外部にデータを保存する場合は、この新しい保護をユーザーのデータに拡張するためにApp Sandboxを採用してください。

00:19:11.000 --> 00:19:16.000
その後、アプリによって作成されたすべてのファイルが保護されます。

00:19:16.000 --> 00:19:23.000
すでにApp Sandboxを使用しているアプリは、この新しい保護を自動的に受けます。

00:19:23.000 --> 00:19:30.000
第二に、アプリが他のアプリからデータにアクセスする場合、許可を求める方法はいくつかあります。

00:19:30.000 --> 00:19:40.000
あなたの側で変更することなく、macOS Sonomaは、アプリが別のアプリのデータコンテナ内のファイルにアクセスするときに許可を求めます。

00:19:40.000 --> 00:19:48.000
許可は、アプリが開いている限り有効であり、アプリが終了すると、許可がリセットされます。

00:19:48.000 --> 00:19:52.000
予想される場合にのみ、他のアプリのファイルを読み取ろうとするべきです。

00:19:52.000 --> 00:19:59.000
プロンプトのタイミングが意外な場合、または目的が不明な場合は、アプリのアクセスが拒否される可能性があります。

00:19:59.000 --> 00:20:06.000
意味のある目的の文字列は、アプリがアクセスを要求している理由を人々が理解するのに役立ちます。

00:20:06.000 --> 00:20:13.000
他のアプリからファイルにアクセスするための明示的な許可を得るには、いくつかの代替方法があります。

00:20:13.000 --> 00:20:19.000
個々のファイルやフォルダにシームレスにアクセスするには、NSOpenPanelを使用してください。

00:20:19.000 --> 00:20:29.000
これは、プロセス外のmacOSファイルピッカーを示し、ユーザーが選択を確認すると、アプリは選択したリソースを読み書きできます。

00:20:29.000 --> 00:20:38.000
NSOpenPanelでは、選択をさらに簡単にするために、ピッカーにデフォルトで表示されるパスを指定することもできます。

00:20:38.000 --> 00:20:54.000
すでにフルディスクアクセスが許可されているバックアップユーティリティまたはディスク管理ツールの場合、これらのアプリのすべてのファイルへのアクセスを許可することをすでに選択しているため、アクセス時に追加のプロンプトは表示されません。

00:20:54.000 --> 00:21:03.000
さらに、チームIDで署名されたすべてのアプリは、許可プロンプトなしで、デフォルトで他のアプリのコンテナ内のデータにアクセスできます。

00:21:03.000 --> 00:21:10.000
したがって、アプリの以前のバージョンからデータをインポートする新しいアプリをリリースすると、これはシームレスに機能します。

00:21:10.000 --> 00:21:17.000
ただし、より制限的なポリシーを定義したい場合があります。

00:21:17.000 --> 00:21:32.000
たとえば、エディタ、ブラウザ、シェルなどのコードインタプリタを構築する場合、このアプリが開発したメッセージングアプリからデータにアクセスするときに、macOSに許可を求めることができます。

00:21:32.000 --> 00:21:45.000
これを行うには、アプリのInfo.plistでNSDataAccessSecurityPolicyを指定して、デフォルトの同じチームポリシーを明示的なAllowListに置き換えることができます。

00:21:45.000 --> 00:21:57.000
指定すると、リストされたプロセスとインストーラパッケージは、他のアプリが許可を必要とする間、追加の同意なしにアプリのデータにアクセスすることが許可されます。

00:21:57.000 --> 00:22:04.000
高度なデータ保護は、ユーザーのデータを保護するもう1つの機会です。

00:22:04.000 --> 00:22:15.000
高度なデータ保護は2022年に追加され、人々がiCloudに保存されているデータの大部分に対してエンドツーエンドの暗号化を有効にする方法を提供します。

00:22:15.000 --> 00:22:24.000
CloudKitを採用することで、誰かが高度なデータ保護を有効にするたびに、アプリによってCloudKitに保存されているデータをエンドツーエンドで暗号化できます。

00:22:24.000 --> 00:22:36.000
そして、これは、暗号化キー、暗号化操作、または複雑で危険な回復フローを管理するために、あなたの側で必要な変更なしで可能です。

00:22:36.000 --> 00:22:45.000
高度なデータ保護の大きなプライバシーの利点をユーザーに拡張するには、いくつかの手順に従うだけです。

00:22:45.000 --> 00:22:52.000
まず、CloudKitスキーマ内のすべてのフィールドに暗号化されたデータ型を使用するようにしてください。

00:22:52.000 --> 00:23:02.000
これにはデフォルトでCKAssetフィールドが含まれ、CloudKitのほとんどのデータ型には、EncryptedStringなどの暗号化されたバリアントがあります。

00:23:02.000 --> 00:23:10.000
次に、encryptedValues APIを使用して、CloudKitレコードにデータを取得または保存できます。

00:23:10.000 --> 00:23:18.000
すべての暗号化と復号化操作は、あなたの便宜のためにこのAPIによって抽象化されます。

00:23:18.000 --> 00:23:30.000
その結果、アプリのデータは、誰かがこの機能を有効にするたびに、高度なデータ保護から利用可能なセキュリティ侵害とプライバシー保護の完全な利益を受け取ります。

00:23:30.000 --> 00:23:41.000
コードサンプルを含む、アプリにCloudKitを採用する方法の説明については、WWDC21の「CloudKitの新機能」をご覧ください。

00:23:41.000 --> 00:23:48.000
次は、Safariプライベートブラウジングモードでの新しいフィンガープリントとトラッキング保護です。

00:23:48.000 --> 00:23:52.000
Safariはプライバシーを核に設計されている。

00:23:52.000 --> 00:24:06.000
プライベートブラウジングモードでは、タブが閉じられたときに、Safariが訪問したページ、検索履歴、または自動入力情報を記憶しないことを確認するなど、Safariで追加のプライバシー保護を可能にします。

00:24:06.000 --> 00:24:17.000
Safari 17のプライベートブラウジングモードは、高度な追跡とフィンガープリント保護を追加します。これには、ウェブサイト間の追跡を防止するための2つの新しい保護が含まれています。

00:24:17.000 --> 00:24:24.000
まず、Safariは既知の追跡リソースとフィンガープリントリソースが読み込まれるのを防ぎます。

00:24:24.000 --> 00:24:42.000
ウェブサイト開発者の場合は、プライベートブラウジングモードでウェブサイトの機能をテストしてください。ログインフロー、ウェブサイトからのクロスサイトナビゲーション、および画面、オーディオ、グラフィックスに関連するブラウザAPIの使用に焦点を当てます。

00:24:42.000 --> 00:24:52.000
高度な追跡と指紋保護なしでリロードして、ウェブサイトの動作の変化が新しい保護によるものかどうかを確認できます。

00:24:52.000 --> 00:25:03.000
これを行うには、macOSのリロードボタンを右クリックするか、iOSのページ設定ボタン、または通常のブラウジングモードでSafariでテストします。

00:25:03.000 --> 00:25:09.000
Webインスペクタを開いて、JavaScriptコンソールへの出力を調べることもできます。

00:25:09.000 --> 00:25:20.000
既知のトラッカーに連絡した結果としてブロックされたネットワーク要求は、「既知のトラッカーへの接続がブロックされました」で始まるメッセージとして表示されます。

00:25:20.000 --> 00:25:30.000
クロスウェブサイトトラッキングのもう1つの一般的な方法は、クエリパラメータなど、URLに埋め込まれた一意の識別子です。

00:25:30.000 --> 00:25:42.000
人々が追跡できる場所を制御できるようにするために、もう1つの新しい保護は、ブラウザのナビゲーションの一部として、およびリンクをコピーするときに追跡パラメータを削除することです。

00:25:42.000 --> 00:25:52.000
トラッキングパラメータが検出されると、SafariはURLの識別コンポーネントを削除し、識別不可能な部分はそのままにします。

00:25:52.000 --> 00:25:59.000
広告アトリビューションは、ウェブサイト全体で個人を特定せずに行うことができることを忘れないでください。

00:25:59.000 --> 00:26:09.000
たとえば、プライベートクリック測定は、広告アトリビューションの追跡パラメータに代わるプライバシーを保護する代替手段です。

00:26:09.000 --> 00:26:23.000
また、ダイレクトレスポンス広告のプライベートブラウジングモードでも利用できるようになりました。ここでは、ディスクにデータが書き込まれず、アトリビューションは単一のタブに基づいて単一のブラウジングコンテキストに制限されます。

00:26:23.000 --> 00:26:31.000
これは、プライベートブラウジングでの一時的なブラウジングとタブの分離のSafariの既存の厳格なモデルに従います。

00:26:31.000 --> 00:26:40.000
詳細については、WWDC21のビデオ「プライバシーを保護する広告アトリビューションを満たす」をご覧ください。

00:26:40.000 --> 00:26:47.000
最後のプラットフォームの変更は、Safariのアプリ拡張機能の新しい許可モデルです。

00:26:47.000 --> 00:26:56.000
Safari 17では、Appleがウェブ拡張機能のために開拓した許可モデルがアプリ拡張機能にも登場します。

00:26:56.000 --> 00:27:05.000
これは、拡張機能がサイトごとにアクセスできるWebページを選択できることを意味します。

00:27:05.000 --> 00:27:11.000
また、プライベートブラウジングモードで実行できる拡張機能を制御できるようにしています。

00:27:11.000 --> 00:27:23.000
これらの拡張機能の変更と、サイトごとに拡張機能の権限を付与する方法の詳細については、ビデオ「Safari拡張機能の新機能」をご覧ください。

00:27:23.000 --> 00:27:37.000
開発者向けの新しいツールとプラットフォームの変更の背後にあるプライバシーの原則は、新しい空間コンピューティングプラットフォームの入力モデルを含む、Appleで構築するすべての機能に広がっています。

00:27:37.000 --> 00:27:48.000
システムは本当に使いやすいです。周りを見回し、やり取りしたいものを決めて、タップするだけです。

00:27:48.000 --> 00:27:58.000
新しい許可はなく、すべてのアプリ開発者のための余分な作業はなく、アプリがどこを見ているかを追跡する心配もありません。

00:27:58.000 --> 00:28:03.000
結果は、優れたプライバシーを備えた素晴らしい新製品です。

00:28:03.000 --> 00:28:09.000
目と手のコントロールの開発に対するプライバシーエンジニアリングのアプローチを見てみましょう。

00:28:09.000 --> 00:28:14.000
まず、入力モデルが達成する必要がある高レベルの目標があります。

00:28:14.000 --> 00:28:22.000
入力エクスペリエンスは高速で流動的で、UI要素との自然な相互作用を可能にする必要があります。

00:28:22.000 --> 00:28:33.000
あらゆる種類のUI要素と対話する自信を提供するために、人々が見ているものについてリアルタイムのフィードバックを提供する必要があります。

00:28:33.000 --> 00:28:39.000
さらに、既存のiPhoneとiPadのアプリケーションは、箱から出してすぐに動作するはずです。

00:28:39.000 --> 00:28:47.000
そして最後に、アプリが基本的な入力を受け取るためだけに新しいアプリの許可を必要とすべきではありません。

00:28:47.000 --> 00:28:51.000
次に、入力モデルのプライバシー目標です。

00:28:51.000 --> 00:29:03.000
アプリが病状を含む目に関する敏感な詳細を学習するのを防ぐために、関連するシステムコンポーネントのみがアイカメラにアクセスできる必要があります。

00:29:03.000 --> 00:29:12.000
許可のないアクセスを有効にするには、アプリは人々の目や手の詳細を学ばずに動作できる必要があります。

00:29:12.000 --> 00:29:24.000
そして、人々が見ているものは、彼らが考えていることを明らかにすることができるので、人々が見ているものを学ぶことなくアプリが機能し、彼らが対話するものだけを学ぶことが重要です。

00:29:24.000 --> 00:29:29.000
これらの目標をすべて達成するためにAppleが設計したシステムを見てみましょう。

00:29:29.000 --> 00:29:38.000
入力システムの目と手を測定する内部および外部のカメラデータは、分離されたシステムプロセスで処理されます。

00:29:38.000 --> 00:29:53.000
これにより、目と手がどこにあるかを目とピンチ検出システムに測定し、アプリを含む他のすべてのシステムコンポーネントから複雑なカメラ処理を抽象化します。

00:29:53.000 --> 00:30:02.000
ホバーフィードバックシステムは、画面に表示されているものと目の位置を組み合わせて、ユーザーが見ているものを判断します。

00:30:02.000 --> 00:30:09.000
彼らがUI要素を見ている場合、システムはレンダリング時にハイライトレイヤーを追加します。

00:30:09.000 --> 00:30:23.000
これは、アプリのプロセスの外でレンダリングエンジンによって行われ、デバイスを使用している人にのみ表示されるため、アプリに情報を明らかにすることなく、見ているものを理解します。

00:30:23.000 --> 00:30:32.000
そして、ピンチジェスチャーが検出されるとすぐに、システムは強調表示されたUI要素の通常のタップイベントをアプリに配信します。

00:30:32.000 --> 00:30:41.000
このシステムアーキテクチャでは、カメラデータを入力イベントに変換する複雑さはオペレーティングシステムによって処理されます。

00:30:41.000 --> 00:30:47.000
これは、この新しいプラットフォームで入力を受信するために変更を必要としないことを意味します。

00:30:47.000 --> 00:31:01.000
デフォルトのシステム動作に加えて、UIKit、SwiftUI、およびRealityKitを使用すると、システムが提供するUI要素と同じプライバシー保護で、これらの効果をアプリのデザインに合わせて簡単に調整できます。

00:31:01.000 --> 00:31:07.000
タイプ、形状、およびホバー効果が適用される要素を変更できます。

00:31:07.000 --> 00:31:18.000
採用方法の詳細については、「空間コンピューティングのためのSwiftUIに会う」と「空間コンピューティングのためのウィンドウアプリを昇格する」をご覧ください。

00:31:18.000 --> 00:31:25.000
この空間入力モデルは、プライバシーの柱を実装することによって可能になります。

00:31:25.000 --> 00:31:31.000
システムは、システムの各コンポーネントがアクセスする必要があるデータ量を最小限に抑えます。

00:31:31.000 --> 00:31:35.000
すべての処理はデバイス上で行われます。

00:31:35.000 --> 00:31:41.000
意図的なインタラクションのみがアプリと共有されるため、人々はコントロールできます。

00:31:41.000 --> 00:31:48.000
そして、あなたが見ている場所は、オペレーティングシステムのカーネルによって強制されたプロセス分離を使用して保護されます。

00:31:48.000 --> 00:31:57.000
プライバシーをコアデザイン目標にすることで、優れた機能と優れたプライバシーの両方を提供することが可能です。

00:31:57.000 --> 00:32:25.000
Appleプラットフォーム全体の新しいプライバシーの変更について学ぶことが、優れたプライバシーを通じて信頼を築きやすくなるため、あなたを鼓舞するのに役立つことを願っています。 シームレスなユーザーコントロールを提供するコンテンツピッキングAPIを使用して、アプリがアクセスするデータを最小限に抑えます。 デバイス上の処理でセンシティブコンテンツ分析フレームワークを採用することで、アプリの子供を保護します。

00:32:25.000 --> 00:32:36.000
また、アプリのユーザーデータを保護するために、macOSのApp Sandboxなどのセキュリティ保護を採用し、CloudKitでデータを暗号化するようにしてください。

00:32:36.000 --> 00:32:38.000
このビデオをご覧いただきありがとうございます。

00:32:38.000 --> 00:32:41.000
あなたが何を作るかを見るのが待ちきれません。

00:32:41.000 --> 23:59:59.000
♪

