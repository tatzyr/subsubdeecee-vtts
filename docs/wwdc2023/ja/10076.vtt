WEBVTT

00:00:00.000 -> 00:00:04.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:04.000 -> 00:00:10.000
♪

00:00:10.000 -> 00:00:12.000
ミケル・エスタニー・ロドリゲス:こんにちは、私はミケル・エスタニー・ロドリゲスです。

00:00:12.000 -> 00:00:17.000
ロレーナ・パズミノ:そして、私はロレーナ・パズミノで、アップルデザインチームの出身です。

00:00:17.000 -> 00:00:22.000
今日は、空間的なユーザーインターフェイスを設計する方法について話します。

00:00:22.000 -> 00:00:34.000
このプラットフォームを使い始めるのを助けるために、没入型で空間的な経験に適応するために特定の要素を進化させながら、既存のプラットフォームとの一貫性と親しみやすさを維持するビジュアル言語を構築しました。

00:00:34.000 -> 00:00:44.000
Miquel: まず、環境で読みやすく使用可能なアプリアイコンとインターフェイスを作成する際に考慮すべきUIの基礎と設計原則について話します。

00:00:44.000 -> 00:00:51.000
次に、重要な概念とベストプラクティスについて、人間工学に基づいたターゲット設定が簡単なレイアウトを作成します。

00:00:51.000 -> 00:01:05.000
そして最後に、このプラットフォームがアプリを画面から空間にどのように持ち込むことができるかを示し、すべてのシステムコンポーネントを案内します。そのほとんどは、すでに慣れ親しんでおり、まったく新しいものもあります。

00:01:05.000 -> 00:01:09.000
UIの基礎を深く掘り下げてみましょう。

00:01:09.000 -> 00:01:13.000
これらは、このセクションで取り上げるコア設計原則です。

00:01:13.000 -> 00:01:16.000
アプリのアイコンについて話し始めましょう。

00:01:16.000 -> 00:01:25.000
私たちはホームビューを身近に保ちたかったので、さらに一歩進んで、あなたのスペースでアプリのアイコンを立体的で現実的なものにしました。

00:01:25.000 -> 00:01:28.000
人々がそれらを見ると、彼らは拡大します。

00:01:28.000 -> 00:01:35.000
そして、システムは、鏡面ハイライトとシャドウを追加して、レイヤー間の微妙な深さを強化することで、この視覚効果を高めます。

00:01:35.000 -> 00:01:39.000
では、どうすれば素晴らしいアイコンをデザインできますか?

00:01:39.000 -> 00:01:42.000
まず、複数のレイヤーを使用してください。

00:01:42.000 -> 00:01:46.000
他のプラットフォームでは、レイヤーを使用して視差効果を作成します。

00:01:46.000 -> 00:01:53.000
ここでは、フラットレイヤーを使用するだけで、システムはこの真の3D効果を生み出すことができます。

00:01:53.000 -> 00:02:00.000
すべてのアプリアイコンは、最大3つのレイヤー、背景レイヤー、最大2つの前景レイヤーを上部に持つことができます。

00:02:00.000 -> 00:02:06.000
各レイヤーは正方形の画像で、サイズは1024 x 1024ピクセルです。

00:02:06.000 -> 00:02:10.000
両方の前景層は透明な背景を持つ必要があります。

00:02:10.000 -> 00:02:14.000
背景レイヤーを端から端への正方形の画像としてデザインします。

00:02:14.000 -> 00:02:18.000
その後、すべてのレイヤーが円形のマスクでトリミングされます。

00:02:18.000 -> 00:02:27.000
そして最後に、レイヤーが一致すると、ガラスレイヤーが自動的に適用され、深さ、鏡面ハイライト、影が追加されます。

00:02:27.000 -> 00:02:29.000
グラフィックを中央に保つようにしてください。

00:02:29.000 -> 00:02:33.000
エッジに近すぎると、拡張時に中心から外れるように見える可能性があります。

00:02:33.000 -> 00:02:37.000
半透明のピクセルの大きな領域の使用は避けてください。

00:02:37.000 -> 00:02:42.000
不透明度が低下したレイヤーは、その背後にある影と混ざり合います。

00:02:42.000 -> 00:02:45.000
そして、それが3次元のアプリアイコンを簡単に作成する方法です。

00:02:45.000 -> 00:02:48.000
次に、材料について話しましょう。

00:02:48.000 -> 00:02:58.000
人々があなたのアプリのアイコンをタップすると、アプリはこのようなさまざまな場所、広い昼間の部屋、または飛行機のような小さなスペース、または夜間に起動します。

00:02:58.000 -> 00:03:02.000
アプリは周囲の照明条件に適応する必要があります。

00:03:02.000 -> 00:03:12.000
彼らはあなたの周りのスペースに簡単に配置でき、どんな距離でも使いやすく、どんな照明条件でも見やすいはずです。

00:03:12.000 -> 00:03:17.000
だからこそ、私たちは新しい視覚言語、ガラス素材を設計しました。

00:03:17.000 -> 00:03:22.000
このシステム定義の美しいガラス窓は、あなたの物理的な世界の一部を感じます。

00:03:22.000 -> 00:03:28.000
そして、そのユニークな特性により、人々の環境や仮想コンテンツからの光を披露することができます。

00:03:28.000 -> 00:03:34.000
さらに、鏡面のハイライトとシャドウは、あなたの空間におけるその規模と位置を強化します。

00:03:34.000 -> 00:03:43.000
そして、それはあなたの含まれているUIのためのキャンバスとして機能し、それを軽く感じさせ、それに物理的な感覚を追加します。

00:03:43.000 -> 00:03:49.000
この軽量素材はまた、他のアプリや人のように、窓の後ろに何があるかを人々に感じを与えます。

00:03:49.000 -> 00:03:55.000
素晴らしい空間体験を提供するには、周囲に注意することが重要です。

00:03:55.000 -> 00:03:58.000
窓に無地を使用することは避けてください。

00:03:58.000 -> 00:04:05.000
不透明な窓が多すぎると、収縮感を感じ、インターフェイスが重く感じることがあります。

00:04:05.000 -> 00:04:14.000
ガラスは照明に動的に反応し、コントラストとカラーバランスを調整して、昼から夜への移行のように、空間の一部を感じます。

00:04:14.000 -> 00:04:20.000
iOSやmacOSとは異なり、このプラットフォームには明確な明暗の外観はありません。

00:04:20.000 -> 00:04:27.000
代わりに、ガラスとUIは、明るい背景と暗い背景の前に置くと自然に適応します。

00:04:27.000 -> 00:04:38.000
システム定義の鮮やかな素材は、この機能を大いに活用し、さまざまなシナリオや照明条件でアプリが素晴らしく見えるようにします。それらを見てみましょう。

00:04:38.000 -> 00:04:40.000
まず、ガラス窓から始めます。

00:04:40.000 -> 00:04:46.000
サイドバーのようにアプリのセクションを分離したい場合は、より暗い素材を使用してください。

00:04:46.000 -> 00:04:51.000
または、ボタンなどのインタラクティブな要素に注意を喚起するためのより軽い素材。

00:04:51.000 -> 00:04:58.000
または、入力フィールドなどの標準コンポーネントのコントラストを高めるために、より暗い素材を使用することを検討することもできます。

00:04:58.000 -> 00:05:02.000
ミュージックアプリがすべてのUI要素でどのように見えるかは次のとおりです。

00:05:02.000 -> 00:05:06.000
ご覧のとおり、テキストのデフォルトは白です。

00:05:06.000 -> 00:05:13.000
だから、このようなロックアップを設計し、より軽いボタンを追加したいと想像してみてください。

00:05:13.000 -> 00:05:16.000
ガラス素材の上に置くのは素晴らしいことです。

00:05:16.000 -> 00:05:21.000
または、より多くのコントラストを取得したい場合は、その背後にある暗いセルを使用してください。

00:05:21.000 -> 00:05:28.000
読みやすさに影響し、コントラストを低下させるため、軽い素材を互いに重ねないようにしてください。

00:05:28.000 -> 00:05:33.000
さて、タイポグラフィがこのプラットフォームにどのように正確に適応されているかをお見せします。

00:05:33.000 -> 00:05:38.000
物事を慣れ親しんだ状態に保つために、すべてのフォントスタイルは、すべてのプラットフォームで動作するセマンティック名を使用します。

00:05:38.000 -> 00:05:45.000
彼らは私たちのポイントベースのユニットシステムで調整されており、どの距離でも読みやすいようにしています。

00:05:45.000 -> 00:05:49.000
詳細については、セッション「空間デザインの原則」をチェックしてください。

00:05:49.000 -> 00:05:53.000
また、読みやすさを向上させるために、いくつかのフォントの重みを変更しました。

00:05:53.000 -> 00:05:56.000
詳しく見てみましょう。 

00:05:56.000 -> 00:06:03.000
鮮やかな素材に対するテキストのコントラストを改善するために、フォントの重さはわずかに重いものに変更されました。

00:06:03.000 -> 00:06:07.000
たとえば、iOSでは、本文のテキストスタイルに通常の重みを使用します。

00:06:07.000 -> 00:06:10.000
このプラットフォームでは、メディアを使用しています。

00:06:10.000 -> 00:06:17.000
また、タイトルには、半太字の代わりに太字を使用し、テキストを常にクリアに保ちます。

00:06:17.000 -> 00:06:22.000
その結果、読みやすさを助けるために追跡がわずかに増加しました。

00:06:22.000 -> 00:06:31.000
プラットフォーム間で共有する有名なフォントスタイルに加えて、使用できる幅広いエディトリアルスタイルのレイアウトを利用する2つの新しいフォントスタイルを追加しました。

00:06:31.000 -> 00:06:36.000
以下は、アーケードの特大タイトル1の例です。

00:06:36.000 -> 00:06:38.000
かっこいいよね？

00:06:38.000 -> 00:06:46.000
Windowsは信じられないほど大きなサイズにスケールアップできますが、カスタムの小型または軽量フォントは依然として読みにくい場合があります。

00:06:46.000 -> 00:06:55.000
それを改善するには、重量を増やすか、システムフォントのような最適化された読みやすさのために設計された書体を使用することを検討してください。

00:06:55.000 -> 00:06:57.000
次に、活気について話しましょう。

00:06:57.000 -> 00:07:02.000
これは、システム全体で読みやすさを維持するための最も重要な詳細の1つです。

00:07:02.000 -> 00:07:11.000
活気は、素材の上に表示される前景のコンテンツを明るくし、その背後にあるものから光と色を前方に引っ張ることによって機能します。

00:07:11.000 -> 00:07:19.000
このプラットフォームでは、背景は常に変化する可能性があるため、テキストが常に読みやすいようにリアルタイムで更新されます。

00:07:19.000 -> 00:07:23.000
私が言いたいことを示すために、例を見てみましょう。

00:07:23.000 -> 00:07:31.000
鮮やかさがガラス素材の上に働き、読みやすさを高め、システム素材をより豊かで洗練されたものにします。

00:07:31.000 -> 00:07:34.000
可能であれば、必ずシステムコンポーネントを使用してください。

00:07:34.000 -> 00:07:38.000
デフォルトでは、彼らはこの活気効果を利用します。

00:07:38.000 -> 00:07:41.000
ちょっと立ち止まって、活気をオフにしましょう。

00:07:41.000 -> 00:07:46.000
先ほど見たように、活気は読みやすさと素材の見た目を向上させます。

00:07:46.000 -> 00:07:50.000
違いをお見せするために、オンとオフを切り替えましょう。

00:07:50.000 -> 00:07:54.000
では、それをどのように活用できるか見てみましょう。

00:07:54.000 -> 00:07:58.000
鮮やかさを使用して、テキスト、シンボル、塗りつぶしの階層を示します。

00:07:58.000 -> 00:08:03.000
一次、二次、三次の3つのモードがあります。

00:08:03.000 -> 00:08:06.000
標準テキストにはプライマリを使用します。

00:08:06.000 -> 00:08:12.000
または、説明テキスト、脚注、字幕にセカンダリを使用してください。

00:08:12.000 -> 00:08:18.000
ガラス素材は、その背後にあるものの色を示しているので、多くの異なる色になる可能性があるのを見ました。

00:08:18.000 -> 00:08:24.000
ガラスの上のカラフルな要素は、ガラスの色が似ているかどうかを見るのは難しいかもしれません。

00:08:24.000 -> 00:08:30.000
ほとんどの場合、常にはっきりと見えるように、白いテキストや記号の使用を検討してください。

00:08:30.000 -> 00:08:36.000
色を使用する必要がある場合は、背景レイヤーまたはボタン全体で使用して、人々がそれを見ることができるようにします。

00:08:36.000 -> 00:08:47.000
可能であれば、読みやすく調整され、ガラスの色相とコントラストを維持するために動的に適応しているため、カスタムカラーの代わりにシステムカラーを使用してください。

00:08:47.000 -> 00:08:57.000
これらは、このプラットフォームでアプリがアップグレードされるように、素材、タイポグラフィ、活気などのコアコンポーネントの設計原則と更新です。

00:08:57.000 -> 00:09:06.000
今、私はそれをロレーナに手渡すつもりです。ロレーナは、アプリを画面から空間にする際に、簡単にターゲットにできる人間工学に基づいたレイアウトを作成する方法を紹介します。

00:09:06.000 -> 00:09:08.000
ロレーナ:ありがとう、ミケル。

00:09:08.000 -> 00:09:13.000
快適に感じるようにコンテンツを配置するための最良の方法のいくつかを探ることから始めましょう。

00:09:13.000 -> 00:09:17.000
次に、ターゲットを絞りやすいようにコンテンツのサイズを適切に設定する方法を示します。

00:09:17.000 -> 00:09:25.000
そして最後に、新しくて美しいアイフォーカスのフィードバックで動作するレイアウトを作成する方法を紹介します。

00:09:25.000 -> 00:09:34.000
人々は主にこのプラットフォームで目と手と対話するため、人々の身体的な快適さと安全性を優先する経験を作成することが重要です。

00:09:34.000 -> 00:09:44.000
これまで以上に、デザインの人間工学を考慮し、コンテンツの配置が意図的であり、目や首の疲労を引き起こさないようにする必要があります。

00:09:44.000 -> 00:09:53.000
例えば、首の可動域のため、ほとんどの人が上下するのではなく、頭を右と左に回す方が簡単です。

00:09:53.000 -> 00:10:01.000
したがって、UIを人々の視野に保ち、高すぎたり下すぎたりしないように注意してください。

00:10:01.000 -> 00:10:07.000
アプリに大きなキャンバスが必要な場合は、背の高いものよりも広いアスペクト比で行ってください。

00:10:07.000 -> 00:10:12.000
たとえば、フリーフォームでは、キャンバスは垂直ではなく水平に伸びます。

00:10:12.000 -> 00:10:19.000
人々があなたのコンテンツを快適に見ることができるように、最も重要な情報をアプリに集中させることを優先します。

00:10:19.000 -> 00:10:24.000
コンテンツ配置のベストプラクティスを取り上げたので、コンテンツサイズについて話しましょう。

00:10:24.000 -> 00:10:33.000
一人一人がユニークであり、私たちの目は人によってわずかに異なるため、要素はターゲットにしやすいサイズを使用する必要があります。

00:10:33.000 -> 00:10:36.000
詳細に入りましょう。 では。

00:10:36.000 -> 00:10:44.000
インタラクティブな要素は、簡単に選択できるように、少なくとも60ポイントのスペースを持つタップターゲット領域を持っている必要があります。

00:10:44.000 -> 00:10:54.000
これは、その周りに十分なスペースを追加する限り、44ポイントの標準ボタンのように、UI要素を視覚的に小さくすることができることを意味します。

00:10:54.000 -> 00:11:06.000
したがって、このボタンの場合、60ポイントの目標領域を持つ最小値を満たすように、常にその周りに少なくとも8ポイントの空きスペースが必要です。

00:11:06.000 -> 00:11:16.000
覚えておくのは簡単なこととして、スタックに複数のボタンが必要な場合は、それらの間に少なくとも16ポイントの間隔を持つ標準システムボタンを使用してください。

00:11:16.000 -> 00:11:22.000
さて、開示制御のように、視覚的に小さい要素を使用する必要があったとしましょう。

00:11:22.000 -> 00:11:28.000
セクションヘッダーのような領域では、28ポイントのミニボタンを使用できます。

00:11:28.000 -> 00:11:35.000
このボタンは小さく見えるかもしれませんが、周囲に60ポイントのスペースがあるため、簡単に選択できます。

00:11:35.000 -> 00:11:37.000
別の例を見てみましょう。

00:11:37.000 -> 00:11:44.000
ここでは、隣のテキストがインタラクティブではないため、このボタンにはまだ十分なスペースがあります。

00:11:44.000 -> 00:11:51.000
同様に、大きなボタンと特大のボタンを使用すると、その周りのスペースが少なくて済みます。

00:11:51.000 -> 00:11:58.000
したがって、すべてのインタラクティブな要素に少なくとも60ポイントのスペースを与えることを常に忘れないでください。

00:11:58.000 -> 00:12:04.000
レイアウトの要素のサイズを測る方法について説明したので、フォーカスフィードバックについて話しましょう。

00:12:04.000 -> 00:12:09.000
フォーカスフィードバックは、このプラットフォームのすべてのインタラクティブな要素に組み込まれた強力なツールです。

00:12:09.000 -> 00:12:17.000
人々がシステムが提供するコンポーネントを見ると、自動的に微妙な視覚的な明るくなる効果やホバー効果が表示されます。

00:12:17.000 -> 00:12:25.000
このホバー効果により、人々はそれらを見るだけでインターフェイスのどの部分がインタラクティブであるかを理解することができます。

00:12:25.000 -> 00:12:31.000
共有ボタンのようにアイテムが非アクティブになると、フォーカスのフィードバックは表示されなくなります。

00:12:31.000 -> 00:12:40.000
これにより、意図した要素に集中しているという自信が得られます。つまり、指をタップして選択することができます。

00:12:40.000 -> 00:12:44.000
レイアウトを作成する際には、ホバー効果を考慮することが重要です。

00:12:44.000 -> 00:12:54.000
たとえば、リストやメニューを作成する場合は、ホバー効果が重なるのを避けるために、各項目の間に少量のパディングを考慮する必要があります。

00:12:54.000 -> 00:12:57.000
4つのポイントが推奨されます。

00:12:57.000 -> 00:13:05.000
ロックアップを設計する際には、人々がそれに焦点を合わせるにつれてシステムがホバー効果を表示できるようにする形状を含めてください。

00:13:05.000 -> 00:13:08.000
ここでは、その下にテキストを含む画像がいくつかあります。

00:13:08.000 -> 00:13:11.000
各ロックアップは単一のインタラクティブな要素です。

00:13:11.000 -> 00:13:16.000
人々がそれを見るにつれて明るくなるように、カスタム領域を定義する必要があります。

00:13:16.000 -> 00:13:21.000
これは、エリア全体が選択できる単一の要素であることを理解するのに役立ちます。

00:13:21.000 -> 00:13:25.000
そして、各包含形状の間にその小さなスペースを保つことを忘れないでください。

00:13:25.000 -> 00:13:34.000
覚えておくべきもう1つのことは、ネストされた要素が互いに同心を保つ相対的なコーナー半径とパディングを持っていることを確認することです。

00:13:34.000 -> 00:13:40.000
コーナーのサイズを決める方法を理解するために、この簡単な数式を使用できます。

00:13:40.000 -> 00:13:48.000
ネストされた要素のコーナー半径と、それと外側のコンテナの間のパディングにより、外側のコーナー半径が得られます。

00:13:48.000 -> 00:13:56.000
そして、コーナーを滑らかに保つために、必ず連続したコーナーに設定することを忘れないでください。

00:13:56.000 -> 00:14:04.000
システム全体を通して、すべての要素は、ウィンドウと角の要素の関係から始まり、互いに同心円です。

00:14:04.000 -> 00:14:11.000
だから、これは彼らが一緒に属しているように感じるのを助けるので、ネストされた要素を互いに同心状態に保つことを忘れないでください。

00:14:11.000 -> 00:14:17.000
レイアウトを作成するためのベストプラクティスを取り上げたので、使用するコンポーネントを詳しく見てみましょう。 では、使用するコンポーネントを見てみましょう。

00:14:17.000 -> 00:14:24.000
このセクションでは、既存のプラットフォームから知識を取り、それを空間コンピューティングに適用する方法を紹介します。

00:14:24.000 -> 00:14:32.000
入力モデルの簡単な概要から始めて、ウィンドウ、タブバー、サイドバーを使用してアプリのコア構造を設定する方法を深く掘り下げます。

00:14:32.000 -> 00:14:36.000
次に、コンテンツを提示する新しい方法について話します。

00:14:36.000 -> 00:14:39.000
そして最後に、モダリティを探ります。

00:14:39.000 -> 00:14:42.000
インプットから始めましょう。

00:14:42.000 -> 00:14:49.000
先に述べたように、人々は目、手、声でデバイスと対話します。

00:14:49.000 -> 00:14:55.000
彼らは要素を見て、主に遠くから指を叩くことによってこれを行います。

00:14:55.000 -> 00:15:00.000
ただし、要素をタッチして直接選択することもできます。

00:15:00.000 -> 00:15:13.000
さらに、キーボードやトラックパッドを接続して、幅広い入力でシステムと対話することもできます。

00:15:13.000 -> 00:15:21.000
システムとの相互作用は魔法のように感じますが、それは要素がそれらのモデルのそれぞれに適切なフィードバックを提供しなければならないことを意味します。

00:15:21.000 -> 00:15:28.000
すべてのシステムコンポーネントは、各入力をサポートするように構築されています。したがって、システムコンポーネントを使用してください。

00:15:28.000 -> 00:15:35.000
インターフェイスをすばやく作成できるため、この新しいメディアでアプリをユニークにするものを見つけるのに時間を費やすことができます。

00:15:35.000 -> 00:15:40.000
入力の詳細については、セッション「空間入力の設計」を必ずチェックしてください。

00:15:40.000 -> 00:15:44.000
では、いくつかの例を見てみましょう。

00:15:44.000 -> 00:15:49.000
iOSに精通していれば、このプラットフォームの多くのコンポーネントは見覚えがあるでしょう。

00:15:49.000 -> 00:15:54.000
ウィンドウ、タブバー、サイドバーから始めましょう。

00:15:54.000 -> 00:15:57.000
iOSアプリのコア構造から始めましょう。

00:15:57.000 -> 00:16:06.000
不透明な素材で、すべての要素が上に座るためのキャンバスを提供する窓が必要です。

00:16:06.000 -> 00:16:14.000
ミケルが言ったように、窓はガラス素材でできており、下にウィンドウバーがあり、人々は自分のスペースでアプリを流動的に動かすことができます。

00:16:14.000 -> 00:16:19.000
同様に、その上に、あなたのコンテンツがあります。

00:16:19.000 -> 00:16:32.000
ウィンドウの下部にあるiPhoneでは、水平に配置され、メインナビゲーション用のタブバーコントローラーがあり、ワンタップでアプリのトップレベルのセクションにすばやくアクセスできます。

00:16:32.000 -> 00:16:38.000
ここでは、タブバーは垂直で、ウィンドウの左側の固定位置に浮かんでいます。

00:16:38.000 -> 00:16:48.000
邪魔にならないように設計されており、簡単にアクセスできるように設計されており、必要な場所にあり、メインコンテンツから離れることなく、アプリのどこにいるかを確認できます。

00:16:48.000 -> 00:16:55.000
一般的に、あなたはそれらの感覚を軽く保ちたいので、6つ以上のアイテムを持つことは避けてください。

00:16:55.000 -> 00:16:59.000
タブバーを見ると、アイテムをすばやく選択できます。

00:16:59.000 -> 00:17:07.000
そして、もう少し長く見ると、自動的に拡大し、各セクションのラベルが表示されます。

00:17:07.000 -> 00:17:15.000
人々が目をそらすと、自動的に再び閉じ、人々がコンテンツに集中できるようにします。

00:17:15.000 -> 00:17:23.000
この例のアルバムのように、サブナビゲーションを提供する必要がある場合、サイドバーはタブバーの横にあるウィンドウにあります。

00:17:23.000 -> 00:17:27.000
これにより、人々はそのタブのどこにいるのかを明確に理解できます。

00:17:27.000 -> 00:17:34.000
アプリのコア構造を取り上げたので、追加した新しいプレゼンテーションスタイル、オーナメントに入りましょう。

00:17:34.000 -> 00:17:41.000
写真アプリでは、年、月、日の間を移動するためのトップセンターにフローティングアクセサリー要素があります。

00:17:41.000 -> 00:17:49.000
このプラットフォームでは、画面に囲まれていないため、そのアクセサリーは窓の少し前の下部に装飾品として配置されています。

00:17:49.000 -> 00:17:57.000
これにより、階層を作成するために深度を使用して簡単にアクセスできる追加の永続的なコントロールが提供されます。

00:17:57.000 -> 00:18:00.000
オーナメントは、ツールバーを表示するのに最適な方法です。

00:18:00.000 -> 00:18:05.000
これにより、人々は便利な場所でコンテンツに関連する迅速なアクションを実行できます。

00:18:05.000 -> 00:18:08.000
そして、彼らはあなたのアプリに少し深みを加えます。

00:18:08.000 -> 00:18:16.000
装飾品は通常ボタンのコレクションであり、独自のガラス容器に座るので、これはボーダーレスボタンを使用するのに最適な場所です。

00:18:16.000 -> 00:18:24.000
この場合、これらはインタラクティブな要素であることは明らかであり、人々がそれらを見るにつれてホバー効果が得られます。

00:18:24.000 -> 00:18:27.000
これは、音楽アプリのオーナメントのもう一つの素晴らしい使い方です。

00:18:27.000 -> 00:18:34.000
「再生中」コントロールは、アプリのどこにいても持続するオーナメントとして表示されます。

00:18:34.000 -> 00:18:39.000
これにより、音楽をコントロールしながら、次の曲を検索することができます。

00:18:39.000 -> 00:18:45.000
装飾品が窓の下端に座るときは、下端に20ポイント重なるように配置します。

00:18:45.000 -> 00:18:51.000
これは、装飾品があまりにも多くのコンテンツをブロックすることなく、メインウィンドウと統合されているように感じるのに役立ちます。

00:18:51.000 -> 00:19:01.000
そして、彼らは本当に素敵に見え、スクロールしながらガラスを通してコンテンツから色を引き出します。

00:19:01.000 -> 00:19:05.000
装飾品は完全に現れたり消えたりする可能性があります。

00:19:05.000 -> 00:19:09.000
ただし、1つのコンテンツに焦点を当てている間のみ推奨されます。

00:19:09.000 -> 00:19:14.000
例えば、写真を見たり、映画を見たりします。

00:19:14.000 -> 00:19:22.000
この例のように、タップするだけで、メインエクスペリエンスから気をそらすことなく、重要なコントロールにすばやくアクセスできます。

00:19:22.000 -> 00:19:29.000
さらに、オーナメントは拡張したり、追加のコンテンツを表示したり、独自のナビゲーション階層を持つことさえできます。

00:19:29.000 -> 00:19:32.000
だから、あなたのアプリに装飾品が収まる場所を見つけてください。

00:19:32.000 -> 00:19:37.000
それらは柔軟性があり、コンテンツを差し込みなくアプリに深みを与えます。

00:19:37.000 -> 00:19:42.000
装飾品をカバーしたので、メニュー、ポップオーバー、シートに入りましょう。

00:19:42.000 -> 00:19:49.000
iPadでは、メニューは呼び出しボタンの前縁に並び、メニューが開くとボタンが暗くなります。

00:19:49.000 -> 00:19:54.000
ポップオーバーは呼び出し要素を指し、navbarは非アクティブになります。

00:19:54.000 -> 00:19:58.000
このプラットフォームでは、メニューとポップオーバーを窓の外に拡張できます。

00:19:58.000 -> 00:20:06.000
それらはデフォルトで中央に表示され、コンテンツが常にユーザーが見ている場所に表示されるようにします。

00:20:06.000 -> 00:20:12.000
常に心に留めておくべきことの1つは、それらを呼び出すボタンを選択した状態に変更することです。

00:20:12.000 -> 00:20:18.000
このプラットフォームでは、常に白い背景に黒いラベルを使用して、ボタンが選択されていることを示しています。

00:20:18.000 -> 00:20:25.000
これは、矢印を必要とせずにどのボタンがポップオーバーを呼び出したかについて、人々が明確なフィードバックを持つのに役立ちます。

00:20:25.000 -> 00:20:32.000
このプラットフォームでは原則として、選択されていない限り、白い背景のボタンの使用は避けてください。

00:20:32.000 -> 00:20:34.000
最後に、シーツについて話しましょう。

00:20:34.000 -> 00:20:40.000
このシステムでは、シートはモーダルビューとして表示され、アプリの中央に表示されます。

00:20:40.000 -> 00:20:43.000
モーダルには、親ウィンドウと同じZ位置が含まれています。

00:20:43.000 -> 00:20:46.000
親ウィンドウは押し戻して暗くなります。

00:20:46.000 -> 00:20:54.000
これは、経験を集中させるのに役立ち、シートが却下されるまで、人々が親ビューと対話するのを防ぎます。

00:20:54.000 -> 00:21:02.000
別のシートを提示する必要がある場合は、セカンダリモーダルが前面に表示され、調光の追加レイヤーがすべてを押し戻すことができます。

00:21:02.000 -> 00:21:05.000
では、もう一度横から見てみましょう。

00:21:05.000 -> 00:21:13.000
これらすべての要素をZに積み重ねているので、ネストされたビューにプッシュナビゲーションを使用することを検討してください。

00:21:13.000 -> 00:21:17.000
モーダルでのプッシュナビゲーションの簡単な例を次に示します。

00:21:17.000 -> 00:21:21.000
セカンダリビューには、閉じる代わりに戻るボタンが表示されます。

00:21:21.000 -> 00:21:26.000
また、閉じるボタンと戻るボタンが左上隅にあることに注意してください。

00:21:26.000 -> 00:21:31.000
システムパターンとして、常に左上隅に閉じるボタンを配置します。

00:21:31.000 -> 00:21:43.000
Miquel：アプリの構築とシステムコンポーネントの使用の基礎を理解したので、アプリを特別なものにし、窓の外のスペースを利用して豊かな空間の瞬間を作成する方法を考えてください。

00:21:43.000 -> 00:21:59.000
たとえば、写真では、ブラウジング体験を身近に保ち、空間キャプチャなど、画像を体験する新しい方法を作成することに焦点を当てました。これは、あなたの瞬間を追体験し、ユニークで特別な方法でコンテンツを体験する没入型の方法を提供します。

00:21:59.000 -> 00:22:07.000
周囲と調和する素材を使用して、アクセスしやすく、親しみやすく、直感的なアプリを設計および開発する方法を取り上げました。

00:22:07.000 -> 00:22:16.000
さまざまな層の深さと無限のコンポーネントを利用するインターフェースは、視覚的に魅力的であるだけでなく、この新しいプラットフォームで親しみやすく使いやすいです。

00:22:16.000 -> 00:22:31.000
当社のすべてのシステムコンポーネントは、Appleのエコシステムの残りの部分との一貫性を維持しながら、幅広い入力をサポートするように設計されているため、デザイナーや開発者として、画期的な没入型で空間的な体験を生み出すことに集中できます。

00:22:31.000 -> 00:22:32.000
見てくれてありがとう。

00:22:32.000 -> 00:22:34.000
両方：チャオ！

00:22:34.000 -> 23:59:59.000
♪

