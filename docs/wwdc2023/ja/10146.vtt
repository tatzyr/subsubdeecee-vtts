WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:11.000
こんにちは！

00:00:11.000 --> 00:00:14.000
私はCore Locationのエンジニア、Ilya Veygmanです。

00:00:14.000 --> 00:00:18.000
今日は、空間コンピューティングのコアロケーションについてお話しします。

00:00:18.000 --> 00:00:26.000
Appleのエコシステムの初心者であろうと、長年のApp Store開発者であろうと、このシステムでできることの種類について多くの疑問があるでしょう。

00:00:26.000 --> 00:00:33.000
xrOSはあなたの想像力の成果を示すのに最適ですが、コアロケーションはあなたが現実の世界でアンカーを持つのを助けるためにそこにあります。

00:00:33.000 --> 00:00:39.000
今日は、Core Locationでそれを行う方法についてお話しします。

00:00:39.000 --> 00:00:43.000
Appleの開発者エコシステムに慣れたばかりの方、ようこそ！

00:00:43.000 --> 00:00:50.000
アプリに場所を追加するのがいかに簡単かを示す簡単な例から始めたいと思います。

00:00:50.000 --> 00:00:54.000
経験豊富な開発者にとって、基本を見直すことは決して悪くありません。

00:00:54.000 --> 00:01:02.000
それでは、私の同僚のセッションに関連付けられたこのデモアプリケーションのサンプルコード「合理化された場所の更新を発見する」を見ることから始めましょう。

00:01:02.000 --> 00:01:11.000
このアクターでは、CLLocationUpdateにライブアップデートをリクエストし、利用可能になり次第、ここで非同期に取得します。

00:01:11.000 --> 00:01:17.000
ロケーションアップデートAPIの詳細については、このデモに関連するセッションを参照してください。

00:01:17.000 --> 00:01:26.000
アプリは、場所などの機密情報にアクセスする前にユーザーの許可を要求する必要があるため、ここではこのAPIを呼び出します。

00:01:26.000 --> 00:01:30.000
この簡単な例では、ビューがインしたときに行います。

00:01:30.000 --> 00:01:36.000
また、ビルド設定の下のアプリの情報にこの文字列を設定する必要があります。

00:01:36.000 --> 00:01:46.000
繰り返しになりますが、アプリは位置情報などの機密情報を取得する前にユーザーの許可を求める必要があり、この文字列はユーザーにその理由を説明するためにあります。

00:01:46.000 --> 00:01:50.000
後で、このアクセスを要求するユーザーに表示されるプロンプトに表示されます。

00:01:50.000 --> 00:01:53.000
では、シミュレーターで実行すると、これがどのように見えるか見てみましょう。

00:01:53.000 --> 00:01:59.000
繰り返しになりますが、このアプリケーションでは、簡単な例であるため、すぐに場所へのアクセスを要求します。

00:01:59.000 --> 00:02:01.000
これはあなたのアプリに必ずしも当てはまるとは限りません。

00:02:01.000 --> 00:02:06.000
ユーザーに個人情報へのアクセスを許可するかどうかを尋ねるプロンプトが表示されることがわかります。

00:02:06.000 --> 00:02:14.000
先に進む前に、Core Locationがこのシステムでユーザーのプライバシーをどのように扱うかについてもう少しチャットしましょう。

00:02:14.000 --> 00:02:22.000
開発者エコシステムに不慣れな場合でも、Appleがユーザーエクスペリエンスにおいてプライバシーに重点を置いていることをすでに認識しているかもしれません。

00:02:22.000 --> 00:02:26.000
ロケーションアクセスは、この格言の例外ではありません。

00:02:26.000 --> 00:02:33.000
位置情報に関する最新情報を入手する前に、まずユーザーに位置情報にアクセスする許可を求める必要があります。

00:02:33.000 --> 00:02:37.000
ユーザーの同意なしに位置情報の更新は得られない。

00:02:37.000 --> 00:02:48.000
このシステムでは、ロケーションマネージャーを作成し、requestWhenInUseAuthorizationを呼び出し、アプリのInfo.plistで使用説明文字列を設定することで、同意を求めることができます。

00:02:48.000 --> 00:02:52.000
これは、再び、あなたのアプリが彼らの場所を知る必要がある理由をユーザーに伝えます。

00:02:52.000 --> 00:02:58.000
最後に、アプリケーションが実際にそれを必要とする場合にのみ、コンテキストでこのアクセスを要求する必要があります。

00:02:58.000 --> 00:03:05.000
これはプライバシーの観点から優れているだけでなく、ユーザーがアクセスを許可する可能性が高くなります。

00:03:05.000 --> 00:03:11.000
これは非常に単純な例であり、すぐに場所の更新を要求し始めるので、サンプルコードでこれを行ったことを思い出してください。

00:03:11.000 --> 00:03:14.000
では、このプロンプトはどのように見え、どのように表示されますか?

00:03:14.000 --> 00:03:18.000
ユーザーには、ここと同様のアプリケーションからのプロンプトが表示されます。

00:03:18.000 --> 00:03:24.000
これは、すでにiOS開発の経験がある人には見覚えがあるかもしれません。

00:03:24.000 --> 00:03:31.000
ユーザーは、アプリの使用中に、このセッションのみの位置情報のアクセスを許可するか、完全に拒否することができます。

00:03:31.000 --> 00:03:40.000
ユーザーは、iOSと同様に、強調表示されたボタンを使用して、正確またはおおよその位置に関するアプリケーションの知識を付与することもできます。

00:03:40.000 --> 00:03:52.000
この正確な位置と近似位置が正確にどのように機能するかの詳細については、私自身の若いバージョンが主催するWWDC20の「場所の新機能」を参照してください。

00:03:52.000 --> 00:03:54.000
では、デモに戻ります。

00:03:54.000 --> 00:04:04.000
このアプリケーションに正確な場所へのアクセスを許可し、使用中に承認した後、位置情報の更新を開始し、アプリが位置の更新を取得するのを見ることができます。

00:04:04.000 --> 00:04:07.000
では、「正確な場所」とは正確にはどういう意味ですか?

00:04:07.000 --> 00:04:11.000
つまり、ヘッドセットはユーザーの位置をどの程度正確に知ることができますか?

00:04:11.000 --> 00:04:17.000
ユニット自体の場合、Macと同様の精度を期待する必要があるので、約100メートルです。

00:04:17.000 --> 00:04:24.000
これは、近くのレストラン、公園、その他のアトラクションを見つけるために使用されるようなアプリケーションには十分です。

00:04:24.000 --> 00:04:35.000
ただし、iPhoneが近くにある場合、このデバイスはこれら2つのデバイス間の既存の接続を活用して、ヘッドセットから得られる位置精度をiPhoneと同じレベルに向上させることができます。

00:04:35.000 --> 00:04:40.000
あなたのデバイスは、他のAppleハードウェアと組み合わせるとさらにうまく機能します。

00:04:40.000 --> 00:04:49.000
これにより、正確な気象更新、ジオタギングなど、このような空間コンピューティングシステムで実行できるまったく新しいアプリケーションが開きます。

00:04:49.000 --> 00:04:57.000
今、新規参入者と経験豊富な開発者の両方のために、あなたはまた、ユーザーがそれを使用している間、アプリは位置情報の更新を取得する資格があると言うのを聞いたことがあります。

00:04:57.000 --> 00:05:02.000
これが何を意味するのかは、iPhoneや時計ではかなり簡単ですが、それは私たちにとって何を意味しますか?

00:05:02.000 --> 00:05:06.000
結局のところ、ユーザーエクスペリエンスはiPhoneや時計とは大きく異なります。

00:05:06.000 --> 00:05:09.000
では、それについて話しましょう。

00:05:09.000 --> 00:05:19.000
2019年の「What's New In Core Location」に電話をかけ直して、フォアグラウンドアプリがiOSで使用されていると考えられる方法と時期について話し合いました。

00:05:19.000 --> 00:05:21.000
iPhoneのようなプラットフォームでは、これはかなり明白です。

00:05:21.000 --> 00:05:26.000
一度にフォアグラウンドされたアプリは1つだけです。

00:05:26.000 --> 00:05:32.000
また、アプリがバックグラウンド化された後も短い猶予期間がありますが、まだ位置情報の更新を取得できます。

00:05:32.000 --> 00:05:33.000
それで、ここはどうですか?

00:05:33.000 --> 00:05:39.000
このプラットフォーム上のアプリケーションは、完全に没入型になるか、ウィンドウのようなものでアプリを実行することもできます。

00:05:39.000 --> 00:05:40.000
「コアロケーションはこれをどのように扱いますか?」

00:05:40.000 --> 00:05:42.000
あなたはおそらく疑問に思っているでしょう。

00:05:42.000 --> 00:05:45.000
完全に没入感のある体験のために、これは簡単です。

00:05:45.000 --> 00:05:56.000
ユーザーがアプリケーションを実行している限り、ユーザーがアプリが位置情報を取得することに同意したと仮定して、使用中であり、位置情報の更新を取得する資格があると見なします。

00:05:56.000 --> 00:06:03.000
このシステムでは、ユーザーが最近アプリを見ている限り、Core Locationはアプリに位置情報を提供します。

00:06:03.000 --> 00:06:15.000
つまり、このプラットフォームでは、ユーザーが自分の位置情報を提供することに同意し、ユーザーが最近アプリを見た場合、ウィンドウで実行されているアプリは位置情報の更新を取得する資格があると考えています。

00:06:15.000 --> 00:06:17.000
これをもっと具体的に調べてみましょう。

00:06:17.000 --> 00:06:22.000
これらのアプリの両方が、使用中にユーザーの位置情報にアクセスする権限を与えられていると想像してみてください。

00:06:22.000 --> 00:06:29.000
ユーザーがどちらのアプリともやり取りしたり見たりしない限り、どちらも位置情報の更新を取得できません。

00:06:29.000 --> 00:06:40.000
ユーザーが左側のアプリを見始めた場合、そのアプリは位置情報の更新を取得できますが、右側のアプリはユーザーの周辺視野にある場合でも取得できません。

00:06:40.000 --> 00:06:52.000
そして、ユーザーが右側のアプリなど、他の場所を探すか、両方のアプリを同時に見ることができるように2つのアプリを一緒に動かすまで、これは真実のままです。

00:06:52.000 --> 00:06:59.000
iOSと同様に、Core Locationがアプリが使用されなくなったとみなす前に猶予期間もあります。

00:06:59.000 --> 00:07:16.000
つまり、ユーザーが左側のアプリを見て、どこか他の場所を探す前に右側のアプリで、Core Locationがこれらのアプリが使用できなくなったとみなす前に、両方のアプリがまだ位置情報を取得する資格がある短い時間（数秒）があることを意味します。

00:07:16.000 --> 00:07:33.000
このような位置情報アクセスのモデルは、ユーザーのプライバシーを尊重しながら、このプラットフォームで良い体験を提供すると感じています。特に、このデバイスは、バックパックのようにどこかに隠されているものとして実行されるものではなく、インタラクティブに使用することを意図しているため、ユーザーのプライバシーを尊重しながら、このプラットフォームで良い体験を提供します。

00:07:33.000 --> 00:07:38.000
そのため、アプリは実行されていない間は位置情報の更新を取得できません。

00:07:38.000 --> 00:07:43.000
同様に、監視APIからの更新は配信されません。

00:07:43.000 --> 00:07:54.000
だから、これは、すでにAppleプラットフォーム用のロケーション使用アプリを持っている多くの開発者がおそらく疑問に思っている他の何かに私をもたらします:互換性モードで実行しているとき、私のアプリはどのように動作しますか?

00:07:54.000 --> 00:08:00.000
では、xrOSを実行しているデバイスのコードを変更なしでiPhoneまたはiPadアプリを実行するとどうなりますか?

00:08:00.000 --> 00:08:02.000
それについて少し話しましょう。

00:08:02.000 --> 00:08:08.000
すでに説明したように、「使用中」の「使用中」は、ユーザーが最近見た場所に由来します。

00:08:08.000 --> 00:08:12.000
また、アプリは、ユーザーが見ているときにのみ位置情報を取得する資格があります。

00:08:12.000 --> 00:08:17.000
では、常に承認を要求するアプリはどうですか?

00:08:17.000 --> 00:08:23.000
Alwaysのプロンプトが表示されるアプリは、使用中に承認を要求するようにリクエストがリダイレクトされます。

00:08:23.000 --> 00:08:29.000
同様に、常に設定の下のアプリケーションのオプションではないことがわかります。

00:08:29.000 --> 00:08:35.000
このシステム上のロケーションは、アプリの使用中にシングルショットまたは継続的な更新に最適です。

00:08:35.000 --> 00:08:43.000
互換性のあるiPhoneまたはiPadアプリが地域監視または新しいCLMonitorを使用している場合、イベントは配信されません。

00:08:43.000 --> 00:08:56.000
iOSアプリが、特定のAPIが常にサポートされていると仮定するように設計されており、たとえば、監視APIがイベントを配信しない場合、予期しない方法で動作する可能性があるかどうかを検討してください。

00:08:56.000 --> 00:09:02.000
同様に、アプリが実行されていない間にバックグラウンドで位置情報の更新に依存しているかどうかを検討してください。

00:09:02.000 --> 00:09:16.000
一般的なAPI、特に今年の新機能の詳細については、特にエコシステムの新参者の場合は、同僚からのこれらの他の2つのセッションと、前年の他のセッションを見ることをお勧めします。

00:09:16.000 --> 00:09:29.000
「合理化された場所の更新を発見する」では、APIのいくつかの新しい開発、特に場所の更新を取得する方法を推奨する方法と、APIをSwift並行性とより互換性のあるものにする方法について説明します。

00:09:29.000 --> 00:09:40.000
「Meet Core Location Monitor」では、APIの監視における新しい開発と、アプリが地理的なエントリや終了などのイベントについて通知を受ける方法をどのように再考したかについてさらに議論しています。

00:09:40.000 --> 00:09:46.000
場所があなたのアプリのために気にかけているものなら、私はあなたがこれらがうまく費やされた時間であることに気付くと確信しています。

00:09:46.000 --> 00:09:52.000
xrOSは、多くの人がかなり長い間予想していたと確信している本当にクールな体験を提供します。

00:09:52.000 --> 00:10:03.000
私たちもそうであり、このデバイス用に特別に設計されたアプリと、互換性のあるiPhoneまたはiPadアプリの両方で、可能な限り最高のユーザーエクスペリエンスを提供できるように懸命に働きました。

00:10:03.000 --> 00:10:14.000
また、ユーザーのプライバシーが可能な限り最善の方法で尊重され、このプラットフォームへの移行が、ストアに既存のアプリを持っている人にとって可能な限りシームレスであることを確認したいと考えています。

00:10:14.000 --> 00:10:23.000
そうは言っても、地域の変更や訪問などのイベントに関する通知が届かない場合、互換性のあるアプリがシナリオでどのように動作するかを検討してください。

00:10:23.000 --> 00:10:31.000
コアロケーションと空間コンピューティング全般に固有の他のセッションを見ることをお勧めします。これはあなたの興味をそそるかもしれません。

00:10:31.000 --> 00:10:34.000
ありがとう、WWDCの残りの部分を楽しんでください。

00:10:34.000 --> 23:59:59.000
♪

