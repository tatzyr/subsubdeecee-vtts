WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:14.000
Willem Mattelaer：こんにちは、私の名前はWillemで、グループ活動に取り組んでいるエンジニアです。

00:00:14.000 --> 00:00:19.000
ミアと一緒に、素晴らしい空間SharePlayアプリを構築する方法について話します。

00:00:19.000 --> 00:00:26.000
SharePlayは、近くであろうと遠く離れていても、常に他の人と一緒に存在し、一緒に何かをすることでした。

00:00:26.000 --> 00:00:30.000
このプラットフォームでは、FaceTimeで存在感を高めることができます。

00:00:30.000 --> 00:00:38.000
このプラットフォームのFaceTimeでは、すべての空間ペルソナは、単一の窓に制限されるのではなく、あなたの部屋の物理的なスペースを占有します。

00:00:38.000 --> 00:00:42.000
これにより、他の人と一緒にいるという感覚が高まります。

00:00:42.000 --> 00:00:45.000
これに加えて、共有コンテキストを紹介します。

00:00:45.000 --> 00:00:50.000
共有コンテキストとは、誰もが同じ相対的な位置にいる他の全員を見ることを意味します。

00:00:50.000 --> 00:00:53.000
これを説明するために、2つの異なる視点を考えてみましょう。

00:00:53.000 --> 00:00:59.000
左側はコナーの視点を示し、右側はミアの視点を示しています。

00:00:59.000 --> 00:01:05.000
コナーがミアのペルソナを指さすと、ミアはコナーのペルソナが彼女を指差すのを見るだろう。

00:01:05.000 --> 00:01:13.000
これをSharePlayを含む共有体験に拡張し、システムはウィンドウを誰に対しても同じ相対的な位置に配置します。

00:01:13.000 --> 00:01:16.000
これにテンプレートを使用します。

00:01:16.000 --> 00:01:21.000
テンプレートは、参加者と共有アプリが互いに相対的にどのように配置されるかを決定するために使用されます。

00:01:21.000 --> 00:01:24.000
これは空間的な一貫性につながります。

00:01:24.000 --> 00:01:29.000
アプリは変位を自分で処理する必要はなく、そのためにシステムに頼ることができます。

00:01:29.000 --> 00:01:33.000
アプリが心配すべきことの1つは、視覚的な一貫性を持つことです。

00:01:33.000 --> 00:01:38.000
視覚的な一貫性とは、誰もがアプリ内で同じコンテンツを見ていることを意味します。

00:01:38.000 --> 00:01:41.000
他の人と一緒にホワイトボードの前にいることを想像してみてください。

00:01:41.000 --> 00:01:43.000
誰もがホワイトボードの同じ見解を持つでしょう。

00:01:43.000 --> 00:01:48.000
そして、誰かが何かを指さすたびに、他の人は彼らが指しているものを見ることができます。

00:01:48.000 --> 00:01:53.000
私たちはSharePlayで空間体験でこれを再現したい。

00:01:53.000 --> 00:01:58.000
以前の例に戻すと、ここではアプリには視覚的な一貫性がありません。

00:01:58.000 --> 00:02:04.000
コナーがアプリの正方形を指すと、ミアはコナーのペルソナが円を指しているのを見るでしょう。

00:02:04.000 --> 00:02:07.000
これは一緒にいるという錯覚を打ち破る。

00:02:07.000 --> 00:02:13.000
しかし、アプリが視覚的な一貫性を持っていれば、ミアはコナーが広場を指していることをはっきりと見るだろう。

00:02:13.000 --> 00:02:19.000
すべての参加者のためにコンテンツとその配置を同期させるのはアプリの責任です。

00:02:19.000 --> 00:02:25.000
このようにして、誰もが本当に一緒にいるかのようにまったく同じアプリを見ているように感じます。

00:02:25.000 --> 00:02:30.000
「Design spatial SharePlayエクスペリエンス」セッションでは、これらの概念について詳しく説明します。

00:02:30.000 --> 00:02:34.000
もっと学ぶために、そのセッションを見ることを強くお勧めします。

00:02:34.000 --> 00:02:50.000
このプラットフォームでFaceTimeで導入された新しい概念のいくつかを詳しく見てきましたが、SharePlayを採用する際にウィンドウアプリが考慮すべきことと、既存のiOS SharePlayアプリが空間設定で使用するときにエクスペリエンスを向上させるために取るべき追加の手順を掘り下げてみましょう。

00:02:50.000 --> 00:02:56.000
その後、ミアは信じられないほどの没入型SharePlay体験を作るための新しいAPIを紹介します。

00:02:56.000 --> 00:03:03.000
ウィンドウアプリでSharePlayをサポートするために、グループセッションの新しいシステムコーディネーターを追加しました。

00:03:03.000 --> 00:03:13.000
システムコーディネーターは、アクティブなSharePlayセッションのシステム状態の受信と、SharePlay中に追加の設定を提供できるようにするという2つの責任があります。

00:03:13.000 --> 00:03:21.000
ウィンドウ付きアプリと没入型アプリの両方に関連する2つについて説明します。isSpatialフラグとテンプレートの設定です。

00:03:21.000 --> 00:03:28.000
参加者が空間的であるかどうかを知ることは、必要なレベルの視覚的一貫性を決定する際に重要です。

00:03:28.000 --> 00:03:31.000
例えば、ここにはコナーの一人称視点があります。

00:03:31.000 --> 00:03:37.000
彼は赤のミアと電話していて、私がSharePlayと共有した文書を見ています。

00:03:37.000 --> 00:03:43.000
このシナリオに対するミアの視点は右側にあり、彼女はコナーを青で見ています。

00:03:43.000 --> 00:03:46.000
コナーがスクロールするときは、スクロール位置を同期させたいと思う。

00:03:46.000 --> 00:03:51.000
そうすれば、ミアはコナーのスクロールを見て、私たちはまだ視覚的な一貫性を持っています。

00:03:51.000 --> 00:03:56.000
SharePlay中にフリーフォームドキュメントでパンするときに、実際にこれを行います。

00:03:56.000 --> 00:04:01.000
しかし、あなたが空間的でない場合は、他の人が文書とやり取りするコンテキストはありません。

00:04:01.000 --> 00:04:09.000
だから、コナーがスクロールするなら、私たちはそれを同期すべきではなく、ミアは同じ場所で文書を見続けるでしょう。

00:04:09.000 --> 00:04:18.000
ローカル参加者が空間的であるかどうかを観察し、参加者間で同期しているものを調整するには、まずグループセッションのシステムコーディネーターを取得する必要があります。

00:04:18.000 --> 00:04:24.000
ローカル参加者の状態でisSpatialが真であるかどうかを確認することで、ローカル参加者が空間的であるかどうかを知ることができます。

00:04:24.000 --> 00:04:33.000
状態を観察するには、ローカル参加者状態の更新を反復する非同期シーケンスを返す localParticipantState プロパティを使用できます。

00:04:33.000 --> 00:04:38.000
システムコーディネーターは、テンプレート設定を提供する方法もアプリに提供します。

00:04:38.000 --> 00:04:46.000
テンプレートは、空間的な一貫性を確立するために、すべての参加者がアプリに関連してシステムによってどのように配置されるかを決定するために使用されます。

00:04:46.000 --> 00:04:48.000
私たちは3つの異なるテンプレートをサポートしています。

00:04:48.000 --> 00:04:53.000
並んで、すべての参加者を共有アプリに面した弧に配置します。

00:04:53.000 --> 00:04:59.000
これは、アプリが通常のウィンドウシーンを使用しているときに適用されるデフォルトのテンプレートです。

00:04:59.000 --> 00:05:05.000
会話テンプレートでは、すべての参加者が半円に配置され、アプリはその半円の前に配置されます。

00:05:05.000 --> 00:05:09.000
これは、アプリのコンテンツに焦点を当てていない体験に最適です。 アプリ内のコンテンツに焦点を当てていない体験に最適です。

00:05:09.000 --> 00:05:13.000
例えば、SharePlayで音楽を再生するとき。

00:05:13.000 --> 00:05:15.000
最後に、サラウンドテンプレートがあります。

00:05:15.000 --> 00:05:20.000
これにより、参加者は円に配置され、アプリは円の中央に配置されます。

00:05:20.000 --> 00:05:24.000
このテンプレートは、アプリが体積シーンを使用している場合にのみ使用できます。

00:05:24.000 --> 00:05:29.000
参加者とアプリの距離は、アプリのサイズに基づいています。

00:05:29.000 --> 00:05:32.000
アプリが大きければ、人々から遠くに配置されます。

00:05:32.000 --> 00:05:36.000
そして、アプリが小さい場合、それはより近くに配置されます。

00:05:36.000 --> 00:05:40.000
SharePlayアプリは、システムコーディネーターを通じてテンプレート設定を提供できます。

00:05:40.000 --> 00:05:44.000
グループセッションがアクティブな間、FaceTimeはこのテンプレートを適用しようとします。

00:05:44.000 --> 00:05:47.000
SharePlayアプリには3つの設定があります。

00:05:47.000 --> 00:05:54.000
.Noneは、システムのデフォルトの動作に従い、垂直アプリではサイドバイサイドになり、体積アプリではサラウンドになります。

00:05:54.000 --> 00:05:57.000
これは使用されるデフォルトの設定です。

00:05:57.000 --> 00:06:03.000
アプリの種類に関係なく、サイドバイサイドテンプレートを適用しようとする.sideBySideもあります。

00:06:03.000 --> 00:06:08.000
そして最後に、対応するテンプレートを適用しようとする.conversationalがあります。

00:06:08.000 --> 00:06:16.000
テンプレート設定を設定するには、グループセッションで参加を呼び出す前に、システムコーディネーターの設定に設定するだけです。

00:06:16.000 --> 00:06:21.000
テンプレートは、アプリと参加者をエクスペリエンスに最適な位置に配置するために使用されます。

00:06:21.000 --> 00:06:26.000
しかし、あなたのアプリに複数のウィンドウシーンがあり、現在複数のウィンドウシーンがフォアグラウンドされている場合はどうなりますか?

00:06:26.000 --> 00:06:29.000
この例では、3つのシーンを持つアプリがあります。

00:06:29.000 --> 00:06:32.000
左側に見えるのはブラウズビューです。

00:06:32.000 --> 00:06:36.000
真ん中の小さなシーンは、コンテンツをナビゲートする簡単な方法を提供します。

00:06:36.000 --> 00:06:41.000
そして、最後のシーンは、1つのコンテンツに関する詳細情報を提供します。

00:06:41.000 --> 00:06:47.000
これらのシーンはすべて同時に開くことができるので、コンテンツを読みながらコンテンツを簡単にナビゲートできます。

00:06:47.000 --> 00:06:51.000
SharePlayでは、詳細シーンを共有シーンにしたい。

00:06:51.000 --> 00:06:54.000
しかし、それらがすべて開いている場合、テンプレートで間違ったシーンが使用される可能性があります。

00:06:54.000 --> 00:06:57.000
それを解決するために、シーンの関連付けを追加しました。

00:06:57.000 --> 00:07:03.000
これは、システムがアプリのどのシーンがSharePlayアクティビティをホストしているかを知るための方法です。

00:07:03.000 --> 00:07:06.000
これを知る必要がある理由は2つあります。

00:07:06.000 --> 00:07:12.000
まず、ウィンドウの上の共有メニューで、どのシーンが共有されているかをその人に表示できます。

00:07:12.000 --> 00:07:22.000
これは、複数のウィンドウが開いている場合に役立つ指標であり、誰かが気づかずに誤って共有ウィンドウとやり取りしていた可能性のある恥ずかしい状況を防ぐのに役立ちます。

00:07:22.000 --> 00:07:28.000
しかし、さらに重要なのは、どのウィンドウシーンがテンプレートで使用されるかを決定することです。

00:07:28.000 --> 00:07:32.000
あなたのアプリがシングルシーンアプリであれば、これについて心配する必要はありません。

00:07:32.000 --> 00:07:38.000
可能なシーンは1つしかないので、そのシーンをグループセッションに自動的に関連付けます。

00:07:38.000 --> 00:07:43.000
ただし、マルチシーンアプリはSharePlayを採用する際にこれを考慮する必要があります。

00:07:43.000 --> 00:07:48.000
採用されない場合は、ランダムなオープンシーンが選択され、適切なシーンではない可能性があります。

00:07:48.000 --> 00:07:52.000
シーンアソシエーションを採用する方法を見てみましょう。

00:07:52.000 --> 00:07:57.000
SharePlayアクティビティを開始した人に何が起こるかを見ることから始めます。

00:07:57.000 --> 00:08:04.000
グループアクティビティが有効になったら、各シーンを調べて、どのシーンがこれを処理できるかを確認します。

00:08:04.000 --> 00:08:10.000
これを行うには、グループアクティビティのアクティビティ識別子に対してシーンのアクティベーション条件を評価します。

00:08:10.000 --> 00:08:16.000
シーンのアクティベーション条件は、canとprefersの2つのチェックで構成されています。

00:08:16.000 --> 00:08:24.000
Canは、シーンが潜在的にそれを処理できることを示していますが、preferは、より理想的に適したシーンに誘導するのに役立ちます。

00:08:24.000 --> 00:08:31.000
まず、左側のシーンをチェックして、アクティビティ識別子を処理できるかどうか、または処理したいかどうかを確認します。

00:08:31.000 --> 00:08:33.000
それはできますが、好まいません。

00:08:33.000 --> 00:08:36.000
次に、中間のシーンを確認しますが、それはできません。

00:08:36.000 --> 00:08:40.000
最後に、できると好む最後のシーンを確認します。

00:08:40.000 --> 00:08:47.000
最後のシーンが優先されるので、グループセッションに関連付けます。

00:08:47.000 --> 00:08:51.000
識別子を処理できるシーンがない場合は、新しいウィンドウシーンを起動します。

00:08:51.000 --> 00:08:56.000
これは、SharePlayエクスペリエンスが独自のシーンを必要とする場合に最適です。

00:08:56.000 --> 00:09:02.000
複数のシーンを処理でき、どれも好まない場合、それらのシーンの1つがランダムに選択されます。

00:09:02.000 --> 00:09:09.000
グループアクティビティをアクティブ化せず、それを受信している参加者の場合、アプリがすでに実行されている場合、同じロジックが実行されます。

00:09:09.000 --> 00:09:14.000
アプリが実行されていない場合は、起動され、最初のシーンが関連付けられます。

00:09:14.000 --> 00:09:22.000
SwiftUIアプリのライフサイクルを使用するアプリのシーンアクティベーション条件を指定するには、handlesExternalEventsを使用できます。

00:09:22.000 --> 00:09:29.000
優先文字列または許可文字列のセットに、グループアクティビティのアクティビティ識別子を含めるだけです。

00:09:29.000 --> 00:09:36.000
アプリがUIKitアプリのライフサイクルを使用している場合は、述語を指定することで、UIシーンのアクティベーション条件を設定できます。

00:09:36.000 --> 00:09:42.000
シーンのアクティベーション条件の詳細については、2019年のこのセッションをチェックしてください。

00:09:42.000 --> 00:09:44.000
もう1つ例を考えてみましょう。

00:09:44.000 --> 00:09:49.000
この場合、各シーンが異なるドキュメントを表すドキュメントベースのアプリです。

00:09:49.000 --> 00:09:53.000
次に、SharePlayを使用して最初のドキュメントで共同作業したいと考えています。

00:09:53.000 --> 00:09:59.000
再びグループアクティビティ識別子を使用して、各シーンのアクティベーション条件を評価します。

00:09:59.000 --> 00:10:07.000
残念ながら、これらのシーンには本質的に異なるものはないので、それらはすべて一致し、間違ったシーンが関連付けられます。

00:10:07.000 --> 00:10:11.000
この場合、シーンを照合するために使用される識別子を変更したいと考えています。

00:10:11.000 --> 00:10:15.000
これを達成するために、シーンアソシエーションの動作を追加しました。

00:10:15.000 --> 00:10:21.000
これにより、アプリは適切なシーンを見つけるために使用される識別子を提供できます。

00:10:21.000 --> 00:10:27.000
例に戻ると、すべての参加者が同意する各ドキュメントの一意の識別子を使用できます。

00:10:27.000 --> 00:10:30.000
次に、その識別子を使用して適切なシーンを見つけます。

00:10:30.000 --> 00:10:40.000
今すぐシーンを評価すると、シーンのアクティベーション条件を簡単に設定できるため、最初のシーンのみが一致し、正しいシーンの関連付けになります。

00:10:40.000 --> 00:10:47.000
グループアクティビティのメタデータにシーンアソシエーションの動作を設定することで、使用する識別子を指定できます。

00:10:47.000 --> 00:10:52.000
SharePlayセッションに参加する他のすべての参加者には、同じ識別子が使用されることに注意してください。

00:10:52.000 --> 00:10:56.000
だから、誰もが同意するものを使いたいのです。

00:10:56.000 --> 00:11:00.000
私たちは3種類のシーンアソシエーション行動をサポートしています。

00:11:00.000 --> 00:11:07.000
デフォルトは、最初に見た動作で、シーンを関連付けるために使用される識別子がグループアクティビティ識別子になります。

00:11:07.000 --> 00:11:13.000
名前が示すように、明示的に指定しない場合、これはデフォルトの動作です。

00:11:13.000 --> 00:11:16.000
コンテンツの動作により、カスタム識別子を指定できます。

00:11:16.000 --> 00:11:23.000
これは、各シーンが異なるコンテンツを表示するアプリを対象としており、グループアクティビティはそのコンテンツに関連付けられています。

00:11:23.000 --> 00:11:26.000
最後に、私たちはなしの行動を提供します。

00:11:26.000 --> 00:11:29.000
Noneの動作はシーンの関連付けを無効にします。

00:11:29.000 --> 00:11:35.000
これは、シーンが関連付けられないため、アプリのシーンの上に共有バナーが表示されないことを意味します。

00:11:35.000 --> 00:11:38.000
それはまた、空間的な一貫性が壊れていることを意味します。

00:11:38.000 --> 00:11:51.000
これは、追加のシーンを必要としない没入型アプリや、シーンに表示されるコンテンツがSharePlayセッションの参加者ごとに異なる場合など、特定の場合にのみ使用する必要があります。

00:11:51.000 --> 00:11:56.000
時には、グループセッションがどのシーンに関連付けられているかを知る必要があるかもしれません。

00:11:56.000 --> 00:12:01.000
これは、複数のシーンをシーンの関連付けに選択できる可能性がある場合に発生する可能性があります。

00:12:01.000 --> 00:12:07.000
この情報を取得するために、groupSessionIdentifierと呼ばれるグループセッションの新しいプロパティを公開しました。

00:12:07.000 --> 00:12:13.000
このプロパティには、グループセッションに関連付けられたシーンセッションの識別子が含まれます。

00:12:13.000 --> 00:12:21.000
シーンの関連付けは、優れたSharePlayエクスペリエンスを構築するために不可欠であるため、複数のシーンをサポートするアプリがある場合は、間違いなく適用してください。

00:12:21.000 --> 00:12:25.000
最後に、共有メニューからSharePlayについて話しましょう。

00:12:25.000 --> 00:12:28.000
FaceTimeでは、すべてのウィンドウの上に共有バナーがあります。

00:12:28.000 --> 00:12:33.000
先ほど見たように、SharePlayでどのシーンが共有されているかを示します。

00:12:33.000 --> 00:12:35.000
しかし、SharePlayにいないときにも便利です。

00:12:35.000 --> 00:12:41.000
シーンが共有されていない場合、そのシーンを共有できるさまざまな方法が表示されます。

00:12:41.000 --> 00:12:43.000
1つの選択肢は、単にウィンドウを共有することです。

00:12:43.000 --> 00:12:47.000
他の誰もがウィンドウの非インタラクティブなビデオフィードを見るでしょう。

00:12:47.000 --> 00:12:49.000
これはすべてのアプリですぐに使えます。

00:12:49.000 --> 00:12:53.000
しかし、SharePlayアプリはこれをさらに進めることができます。

00:12:53.000 --> 00:13:00.000
ウィンドウの現在のコンテンツに関連するグループアクティビティを公開すると、そのメニューに表示されます。

00:13:00.000 --> 00:13:09.000
これは、SharePlayアクティビティの見つけやすさを向上させる素晴らしい方法であり、アプリのUIに専用のSharePlayボタンを持つ必要性を排除することもできます。

00:13:09.000 --> 00:13:15.000
アプリがグループアクティビティを公開する方法は、AirDrop経由でSharePlayを開始するのと同じ方法で行われます。

00:13:15.000 --> 00:13:20.000
iOS 17では、SharePlayアプリを開くと、AirDrop経由でSharePlayを開始できます。

00:13:20.000 --> 00:13:33.000
グループアクティビティを取得するには、システムは表示されているシーンのUIレスポンダチェーンを通過し、レスポンダの1つのアクティビティ項目構成で指定されたグループアクティビティを見つけようとします。

00:13:33.000 --> 00:13:44.000
そうすれば、SharePlayableコンテンツを表示しているビューコントローラーのアクティビティアイテム設定でグループアクティビティを設定するだけで、自動的にピックアップされます。

00:13:44.000 --> 00:13:49.000
アクティビティアイテムの設定を設定するには、アクティブ化できるアクティビティを作成することから始めます。

00:13:49.000 --> 00:13:54.000
次に、アイテムプロバイダーを作成し、グループアクティビティを登録します。

00:13:54.000 --> 00:13:59.000
次に、アイテムプロバイダーでUIActivityItemsConfigurationを初期化します。

00:13:59.000 --> 00:14:07.000
最後に、共有メニューに表示されるものであるため、設定が正しいメタデータが公開されていることを確認する必要があります。

00:14:07.000 --> 00:14:16.000
これを行うには、UIActivityItemsConfigurationでmetadataProviderを使用し、LinkPresentationMetadataキーにLPLinkMetadataオブジェクトを提供できます。

00:14:16.000 --> 00:14:20.000
タイトルと画像プロバイダは、共有メニューで使用されます。

00:14:20.000 --> 00:14:27.000
このすべては、UIActivityItemsConfigurationReadingに準拠した独自のクラスを使用する場合でも機能します。

00:14:27.000 --> 00:14:33.000
このプラットフォームのウィンドウ付きSharePlayエクスペリエンスを構築する際に考慮する必要がある点を取り上げました。

00:14:33.000 --> 00:14:37.000
ミア、没入型アプリの共有体験を構築する方法を説明してもらえますか？

00:14:37.000 --> 00:14:38.000
ミア・レン:問題ないよ、ウィレム。

00:14:38.000 --> 00:14:42.000
それでは、没入型アプリでSharePlayがどのように機能するかを確認しましょう。

00:14:42.000 --> 00:14:47.000
このプラットフォームでは、没入型スペースを使用して没入型体験を簡単に作成できます。

00:14:47.000 --> 00:14:55.000
イマーシブスペースは、アプリがさまざまなイマージョンスタイルでコンテンツを境界を越えて移動できるようにする特別なシーンです。

00:14:55.000 --> 00:15:04.000
アプリが没入型スペースを開くと、システムは他のすべてのアプリを背景にし、人々はこのアプリの無制限の世界に完全に集中することができます。

00:15:04.000 --> 00:15:10.000
このセッションをチェックして、没入型空間と没入型スタイルについて詳しく知ることができます。

00:15:10.000 --> 00:15:14.000
FaceTime中は、いつでも没入型スペースを起動できます。

00:15:14.000 --> 00:15:22.000
あなたがプライベートな没入型空間にいるとき、あなたはあなた自身のプライベートな世界にいて、あなたは他のみんなと共有する文脈を壊します。

00:15:22.000 --> 00:15:26.000
このため、システムはあなたのために他の人を隠します。

00:15:26.000 --> 00:15:32.000
そして、彼らはあなたをあなたの連絡先写真として見るでしょう、それはあなたが今彼らと一緒にいないことを示しています。

00:15:32.000 --> 00:15:35.000
誰もがまだ音声でコミュニケーションをとることができます。

00:15:35.000 --> 00:15:38.000
しかし、さあ、私たちはFaceTimeで一人になりたくありません。

00:15:38.000 --> 00:15:41.000
没入型の世界で魔法の瞬間を共有しましょう。

00:15:41.000 --> 00:15:47.000
私は友人と共有したい没入型体験の素晴らしいアイデアをたくさん持っています。

00:15:47.000 --> 00:15:55.000
例えば、宇宙空間でぶらぶらして、私たちの美しい惑星を一緒に探検する、このようなグループ活動かもしれません。

00:15:55.000 --> 00:16:03.000
これを達成するために、私たちの共有アプリは、誰とでも共有できるグループ没入型スペースを設定する必要があります。

00:16:03.000 --> 00:16:09.000
システムコーディネーターの設定では、supportsGroupImmersiveSpaceフラグを見つけることができます。

00:16:09.000 --> 00:16:19.000
それを有効にすることで、アプリは、このアプリの没入型スペースが共有されることを意図しており、没入型のグループ活動をサポートしたいことをシステムに伝えます。

00:16:19.000 --> 00:16:27.000
このフラグが有効になっているグループセッションに参加すると、没入型スペースはグループ没入型スペースになります。

00:16:27.000 --> 00:16:37.000
システムは、空間の原点をテンプレートで定義された共有場所に移動し、空間の一貫性のための共有座標系を確立します。

00:16:37.000 --> 00:16:42.000
グループの没入型空間の人々は、お互いをペルソナとして見るでしょう。

00:16:42.000 --> 00:16:53.000
今、私たちは共有座標系とそこに人々を持つグループ没入型スペースを持っています、私たちは空間の一貫性を得るためにその中に同じ場所にオブジェクトを配置することができます。

00:16:53.000 --> 00:17:03.000
地球探査活動の例では、原点の上の中央に地球を配置し、すべての人の原点に対して同じオフセットを適用することができます。

00:17:03.000 --> 00:17:07.000
その後、誰もが同じ場所で地球を見るでしょう。

00:17:07.000 --> 00:17:10.000
次に、視覚的な一貫性を維持する方法について説明します。

00:17:10.000 --> 00:17:19.000
たとえば、地球を回転させたい場合は、その向きが全員の間で同期されていることを確認する必要があります。

00:17:19.000 --> 00:17:27.000
GroupSessionとGroupSessionMessengerを使用して状態を同期する方法の詳細については、このSharePlayセッションをチェックしてください。

00:17:27.000 --> 00:17:33.000
また、グループの没入型スペース内の各人に関連するいくつかのUI要素を追加することもできます。

00:17:33.000 --> 00:17:38.000
たとえば、すべての参加者にこのようなプライベートコントロールメニューを与えることができます。

00:17:38.000 --> 00:17:40.000
それは彼らの目の前にあります。

00:17:40.000 --> 00:17:43.000
彼らはそれを使って、共有された地球を簡単に操作することができます。

00:17:43.000 --> 00:17:50.000
このコントロールを適切に配置するには、ローカルユーザーがグループの没入型スペースのどこにいるかを知る必要があります。

00:17:50.000 --> 00:17:56.000
GeometryReader3DでsystemExperienceDisplacementメソッドを活用できます。

00:17:56.000 --> 00:18:02.000
このメソッドは、システムがどのようにスペースオリジンをローカルユーザーから遠ざけたかを示します。

00:18:02.000 --> 00:18:08.000
変換と回転の両方を持つPose3D構造体を返します。

00:18:08.000 --> 00:18:14.000
ローカルユーザーが空間原点の相対的な場所を取得するために、このポーズを反転させることができます。

00:18:14.000 --> 00:18:21.000
その後、それを使用してコントロールをオフセットして回転させることができるので、ローカルユーザーに対して相対的に表示されます。

00:18:21.000 --> 00:18:27.000
注意すべき点の1つは、ユーザーが移動しても変位が更新されないことです。

00:18:27.000 --> 00:18:32.000
最初に配置されたときのスペースの変位のみを提供します。

00:18:32.000 --> 00:18:39.000
これは、彼らがどこにいるかを完全に追跡することなく、その人に関連してコンテンツを配置する簡単な方法を提供します。

00:18:39.000 --> 00:18:48.000
サラウンドテンプレートは、アプリが中央に共有コンテンツを持つグループ没入型スペースしかない地球探検活動に最適です。

00:18:48.000 --> 00:18:54.000
しかし、グループアクティビティに共有ウィンドウとグループ没入型スペースの両方がある場合はどうなりますか?

00:18:54.000 --> 00:19:03.000
例えば、私は人々が共有ウィンドウで惑星について読むことから始めることができる、このように太陽系を研究するためのグループ活動を構築したい。

00:19:03.000 --> 00:19:09.000
そして、彼らはボタンを押して、グループ没入型空間で惑星モデルを詳しく見ることができます。

00:19:09.000 --> 00:19:13.000
私は人々が両方のケースで常に並んでいてほしいです。

00:19:13.000 --> 00:19:16.000
テンプレートで何ができるか見てみましょう。

00:19:16.000 --> 00:19:25.000
デフォルトでは、アプリにグループ没入型スペースしかない場合、サラウンドテンプレートが適用され、スペースオリジンが中央に配置されます。

00:19:25.000 --> 00:19:31.000
アプリにも体積シーンが共有されている場合、同じレイアウトが適用されます。

00:19:31.000 --> 00:19:40.000
しかし、アプリに共有垂直ウィンドウがある場合、サイドバイサイドテンプレートはデフォルトで選択され、スペースの原点は共有ウィンドウのすぐ下にあります。

00:19:40.000 --> 00:19:46.000
しかし、テンプレートの設定をいつでもグループ活動に最も適したものに変更できることを覚えておいてください。

00:19:46.000 --> 00:19:55.000
.conversationalテンプレートまたは.sideBySideテンプレートを選択できます。これは、太陽探査活動に最適なものになると思います。

00:19:55.000 --> 00:20:02.000
前に学んだように、テンプレート内の距離は、共有ウィンドウのサイズに基づいて動的に調整されます。

00:20:02.000 --> 00:20:08.000
グループの没入型スペースしかないのに、どうやって距離が良いのか疑問に思うかもしれません。

00:20:08.000 --> 00:20:14.000
これを解決するために、コンテンツ範囲と呼ばれるテンプレートを微調整するための便利なノブがあります。

00:20:14.000 --> 00:20:21.000
これはテンプレート設定の修飾子で、没入型とウィンドウベースのグループアクティビティの両方で機能します。

00:20:21.000 --> 00:20:28.000
アプリは、この値をコンテンツの中心からポイントの最も遠い端までの距離として設定できます。

00:20:28.000 --> 00:20:37.000
コンテンツの範囲が設定されている場合、アクティブなテンプレートは、アプリに関連してユーザーを配置するためにこの値を考慮します。

00:20:37.000 --> 00:20:45.000
さて、テンプレートについて学んだことを適用して、前に示したソーラー探索活動のグループセッションを設定しましょう。

00:20:45.000 --> 00:20:53.000
まず、人々が没入しながら一緒にオブジェクトを見ることができるように、supportsGroupImmersiveSpaceを有効にする必要があります。

00:20:53.000 --> 00:21:06.000
次に、テンプレートの設定を.sideBySideに設定し、contentExtentの修飾子を追加して、人々が常に並んでいて、共有コンテンツと大きな距離を保つことができるようにしましょう。

00:21:06.000 --> 00:21:10.000
かっこいい。このグループ活動が人々とどのように見えるかを見てみましょう。

00:21:10.000 --> 00:21:17.000
ここで、私は友人のコナーと一緒にいて、共有ウィンドウで惑星を並べて閲覧しています。

00:21:17.000 --> 00:21:23.000
その後、ボタンを押すと、グループの没入型空間に入って土星を探索することができます。

00:21:23.000 --> 00:21:32.000
私はこのモデルの美しさに驚いていますが、コナーはもう私と一緒にいないことも気付き、私が見ているのは彼の連絡先写真だけです。

00:21:32.000 --> 00:21:35.000
しかし、実際には、コナーは取り残され、まだ窓を見ています。

00:21:35.000 --> 00:21:40.000
グループの没入型スペースに入るには、彼は自分でボタンを押す必要があります。

00:21:40.000 --> 00:21:46.000
前に学んだように、人々が一緒にグループの没入型空間にいないとき、彼らは共有された文脈を持っていないでしょう。

00:21:46.000 --> 00:21:51.000
そのため、システムは空間ペルソナを非表示にし、連絡先の写真を表示します。

00:21:51.000 --> 00:21:58.000
私たちがまだお互いのペルソナを見ることができれば、コナーは私が彼が見ていないものに驚いて見ると本当に混乱するかもしれません。

00:21:58.000 --> 00:22:04.000
私たちのグループの没入型スペースが異なる没入型スタイルで提示されている場合、同じ状況が起こる可能性があります。

00:22:04.000 --> 00:22:11.000
例えば、私は完全に没入型の環境で周りを見回していますが、コナーはパススルーのままです。

00:22:11.000 --> 00:22:17.000
しかし、コナーが自動的に同じグループの没入型スペースに私についてくることができれば、とてもうれしいです。

00:22:17.000 --> 00:22:22.000
そして、彼が私と一緒にいないとき、彼は私がどこにいるかを知っていて、簡単に私に加わることができます。

00:22:22.000 --> 00:22:32.000
没入型グループアクティビティの分割された連絡先を最小限に抑えるために、groupImmersionStyleと呼ばれるシステムコーディネーターで利用できる素晴らしいツールがあります。

00:22:32.000 --> 00:22:45.000
これは、オプションのイマージョンスタイルの非同期シーケンスを提供し、他の人が参加するグループ没入型スペースの特定のイマージョンスタイル、またはグループ没入型スペースを離れるときにnilをアプリに伝えます。

00:22:45.000 --> 00:22:55.000
たとえば、グループ没入型スペースを開くと、コナーのアプリはその没入型スタイルを受け取り、彼のアプリは一致するスタイルでグループ没入型スペースを開くことができます。

00:22:55.000 --> 00:23:00.000
その後、私たちはグループの没入型空間で一緒になり、再びコンテキストを共有します。

00:23:00.000 --> 00:23:08.000
同様に、コナーがボタンを押してグループの没入型スペースを離れると、私のアプリはゼロを受け取り、没入型スペースを却下することができます。

00:23:08.000 --> 00:23:14.000
今、グループイマージョンスタイルの助けを借りて、誰もがいつでも一緒にいることができます。

00:23:14.000 --> 00:23:21.000
時には、緊急の何かのために一時的に没入型体験から抜け出したいと思うかもしれません。

00:23:21.000 --> 00:23:24.000
デジタルクラウンを1回押すだけでできます。

00:23:24.000 --> 00:23:30.000
この場合、システムは他の人の邪魔をせず、グループイマージョンスタイルを変更します。

00:23:30.000 --> 00:23:40.000
外に出ると、SharePlayバナー通知が表示されます。これは、グループの残りの部分がどこにいるかを知らせ、グループの没入型スペースに簡単に参加するためのボタンも提供します。

00:23:40.000 --> 00:23:48.000
参加ボタンをタップすると、グループイマージョンスタイルがアプリに送信され、グループ没入型スペースが設定されます。

00:23:48.000 --> 00:23:50.000
さて、私たちはこのセッションで多くのことを見ました。

00:23:50.000 --> 00:23:52.000
まとめましょう！

00:23:52.000 --> 00:24:05.000
共有コンテキストと、システムコーディネーターとシーンアソシエーションを使用して、ウィンドウと没入型共有アプリの両方で空間的および視覚的な一貫性を管理する方法について学びました。

00:24:05.000 --> 00:24:10.000
アプリが人を適切に配置するためのテンプレート設定を導入しました。

00:24:10.000 --> 00:24:16.000
そして最後に、共有メニューを使用してSharePlayを開始する新しい方法も紹介しました。

00:24:16.000 --> 00:24:18.000
チューニングしてくれてありがとう。

00:24:18.000 --> 00:24:22.000
SharePlayでどのような素晴らしい体験を構築するかを見るのが待ちきれません。

00:24:22.000 --> 23:59:59.000
♪

