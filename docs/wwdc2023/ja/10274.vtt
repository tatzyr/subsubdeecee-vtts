WEBVTT

00:00:00.000 --> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:15.000
こんにちは、私の名前はシュアイソンで、ARクイックルックチームのエンジニアです。

00:00:15.000 --> 00:00:21.000
今日は、クイックルック空間体験用の3Dモデルを作成する方法を説明します。

00:00:21.000 --> 00:00:32.000
それに入る前に、まずクイックルックとは何か、それを使用して新しいプラットフォームで3Dコンテンツを表示する方法を見てみましょう。

00:00:32.000 --> 00:00:44.000
別のセッション「空間コンピューティングのクイックルックを発見」では、新しいルームプランAPIを使用して作成した部屋のこの素敵な3Dモデルをお見せしました。

00:00:44.000 --> 00:00:56.000
アプリケーションウィンドウからUSDZファイルをドラッグするだけで、このモデルをクイックルックに持ち込みました。これにより、ドロップした場所にクイックルックプレビューが開きます。

00:00:56.000 --> 00:01:03.000
ここから、使い慣れたジェスチャーを使用して、クイックルックと私のコンテンツとの対話を開始できます。

00:01:03.000 --> 00:01:14.000
このモデルの背後にあるストーリーを深く掘り下げる前に、システムがクイックルックで3Dコンテンツをどのように表示するかについてもう少し話しましょう。

00:01:14.000 --> 00:01:20.000
このプラットフォームでは、クイックルックはボリュームウィンドウに3Dモデルを表示します。

00:01:20.000 --> 00:01:26.000
ボリュームウィンドウは、他のアプリと一緒に共有できるように境界を定義しています。

00:01:26.000 --> 00:01:32.000
人々は空間でボリュームを再配置することができ、さまざまな角度からそれを見ることができます。

00:01:32.000 --> 00:01:38.000
3Dモデルは常にボリュームの中央に配置されます。

00:01:38.000 --> 00:01:47.000
モデルが最初に表示されると、クイックルックは、コンテンツが直接あなたに向くようにボリュームウィンドウを方向付けます。

00:01:47.000 --> 00:01:55.000
ここから、3Dモデルの下にあるボリュームウィンドウバーを使用して、スペース内のコンテンツを自由に再配置できます。

00:01:55.000 --> 00:02:06.000
クイックルックは、プレビューセッション中にモデルをスケールする方法に基づいて、ボリュームのサイズを自動的に調整します。

00:02:06.000 --> 00:02:18.000
コンテンツがアニメーションを使用している場合は、すべてのアニメーションをクイックルックボリュームの定義された境界内に保持することをお勧めします。

00:02:18.000 --> 00:02:23.000
クイックルックが3Dコンテンツをどのように提示するかの基本を取り上げました。

00:02:23.000 --> 00:02:30.000
クイックルックがモデルのサイズとスケールをどのように使用しているかに関しては、追加の考慮事項があります。

00:02:30.000 --> 00:02:32.000
見てみましょう。 

00:02:32.000 --> 00:02:45.000
3Dモデルを読み込むとき、クイックルックはUSDZのメタデータで定義されたmetersPerUnitを尊重し、現実世界に対するスケール単位を決定します。

00:02:45.000 --> 00:02:59.000
人々が資産の規模を視覚化するのを助けるために、クイックルックは、特定のサイズ範囲内にあるように作成されている場合、モデルを最初に100%のスケールで提示しようとします。

00:02:59.000 --> 00:03:02.000
例を見てみましょう。

00:03:02.000 --> 00:03:13.000
クイックルックは、このブリキの車のような小さなスケールで来た場合でも、すべてのコンテンツを楽しむことができるように最小スケールを課します。

00:03:13.000 --> 00:03:25.000
クイックルックはまた、非常に大きなオブジェクトを表示している場合に上限を使用して、他のアプリと一緒にスペースを占有しすぎないようにします。

00:03:25.000 --> 00:03:36.000
このティーポットなど、その間のサイズを持つオブジェクトの場合、クイックルックは最初に宇宙で打ち上げられたときにモデルの現実世界のサイズを使用します。

00:03:36.000 --> 00:03:45.000
ボリュームウィンドウの下にあるボタンをタップすると、いつでも実際のサイズでモデルを表示できることを忘れないでください。

00:03:45.000 --> 00:03:56.000
クイックルックがモデルのサイズをどのように処理するかがわかったので、クイックルックがコンテンツを表示するときに追加する2つのことを見てみましょう。グランドプレーンとシャドウです。

00:03:56.000 --> 00:04:10.000
クイックルックは、モデルの下に平面と影を自動的に表示し、モデルのサイズと地面に対する位置をよりよく理解できるようにします。

00:04:10.000 --> 00:04:19.000
クイックルックはあなたのためにこの仕事をしているので、モデルに独自のグランドプレーンとシャドウを追加しないことをお勧めします。

00:04:19.000 --> 00:04:24.000
これまでのところ、クイックルックが3Dコンテンツを表示する方法の基本を取り上げました。

00:04:24.000 --> 00:04:28.000
このセッションの残りの部分の議題を順を追って説明しましょう

00:04:28.000 --> 00:04:33.000
まず、3Dモデルを作成する方法をいくつか検討します。

00:04:33.000 --> 00:04:41.000
次に、コンテンツの視覚品質を検査し、必要に応じて調整する方法について説明します。

00:04:41.000 --> 00:04:48.000
最後に、3Dコンテンツを優れたパフォーマンスでレンダリングして実行できることを確認する方法について説明します。

00:04:48.000 --> 00:04:51.000
3Dコンテンツの準備を始めましょう。

00:04:51.000 --> 00:04:58.000
クイックルックは、3Dモデルを処理するための主要なフォーマットとしてUSDZを受け入れます。

00:04:58.000 --> 00:05:07.000
USDZは、Appleプラットフォーム向けの3Dコンテンツの中心であり、軽量で日陰用に最適化されているように設計されています。

00:05:07.000 --> 00:05:12.000
USDZファイルを作成する方法を見てみましょう。 

00:05:12.000 --> 00:05:16.000
USDZファイルを作成する方法はたくさんあります。

00:05:16.000 --> 00:05:26.000
まず、以前にiOS用のUSDZファイルを作成したことがある場合は、この新しいプラットフォームでクイックルックに同じファイルを使用できます。

00:05:26.000 --> 00:05:38.000
新しいUSDZファイルをゼロから作成する場合は、プロのデジタルコンテンツ作成ツールを使用して3Dコンテンツを作成し、USDZファイルとしてエクスポートできます。

00:05:38.000 --> 00:05:49.000
RealityKit Object Capture APIを使用して、3Dモデルをスキャンし、現実世界のオブジェクトのUSDZファイルを作成することもできます。

00:05:49.000 --> 00:06:00.000
オブジェクトキャプチャは、さまざまな詳細レベルで3Dモデルを作成するのに役立つサンプルアプリとともに、エンドツーエンドの写真測量ソリューションを提供します。

00:06:00.000 --> 00:06:05.000
オブジェクトキャプチャは、iOSとmacOSの両方のデバイスでサポートされています。

00:06:05.000 --> 00:06:16.000
最後に、あなたの家の上に2Dまたは3Dのフロアプランを作成する方法を探しているなら、私たちはRoomPlan APIであなたをカバーしています。

00:06:16.000 --> 00:06:23.000
先ほどお見せした3Dルームモデルのバックストーリーがあると言ったのを覚えていますか？

00:06:23.000 --> 00:06:31.000
3Dデザイナーのジェリーがこの3Dモデルを作成するために使用したワークフローに飛び込みましょう。

00:06:31.000 --> 00:06:37.000
まず、JerryはRoomPlanサンプルアプリケーションを使用して部屋をスキャンし始めます。

00:06:37.000 --> 00:06:48.000
短時間で、彼は自分の部屋の3Dレイアウトをプレビューしたり、USDZファイルをエクスポートしてMacに直接ドロップしたりできます。

00:06:48.000 --> 00:06:56.000
次に、ジェリーは3Dモデルを3Dコンテンツ作成ツールにインポートし、デザインコンセプトに命を吹き込みます。

00:06:56.000 --> 00:06:59.000
これがその仕事の結果です。

00:06:59.000 --> 00:07:01.000
このモデルは素晴らしく見えます。

00:07:01.000 --> 00:07:08.000
壁、床、その他の部屋の要素にいくつかの素材や質感が追加されたのを見ることができます。

00:07:08.000 --> 00:07:14.000
今、ジェリーが作成したルームモデルは、クイックルックでプレビューする準備がほぼ整いました。

00:07:14.000 --> 00:07:21.000
幸いなことに、この次のステップを本当に簡単にするReality Composer Proと呼ばれる新しいツールがあります。

00:07:21.000 --> 00:07:34.000
クイックルックのために3Dモデルをプレビューすることは、モデルの実際の品質を検査し、必要に応じて調整を行うためのコンテンツ作成ワークフローの本当に重要なステップです。

00:07:34.000 --> 00:07:37.000
詳しく見てみましょう。 

00:07:37.000 --> 00:07:42.000
これは、メインビューにロードされた3Dモデルを備えたReality Composer Proです。

00:07:42.000 --> 00:07:54.000
Reality Composer Proの右上隅にあるこのボタンをクリックするだけで、デバイス上のクイックルックで3Dモデルを簡単にプレビューできます。

00:07:54.000 --> 00:07:59.000
そして、これはクイックルックで実行されている同じ3Dモデルです。

00:07:59.000 --> 00:08:04.000
私たちが今気づくことができる1つのことは、最初のモデルの向きが正しく見えないということです。

00:08:04.000 --> 00:08:16.000
以前に説明したように、魅力的な体験を作成するために、3Dモデルの最も興味深い部分があなたに向かって提示されるようにすることが重要です。

00:08:16.000 --> 00:08:19.000
これを修正する方法を見てみましょう。 

00:08:19.000 --> 00:08:22.000
クイックルックは右側の座標系を使用しています。

00:08:22.000 --> 00:08:33.000
これを知ることで、コンテンツ作成ツール、またはここReality Composer Proで3Dモデルの向きを簡単に修正できます。

00:08:33.000 --> 00:08:42.000
私たちの場合は、モデルのリビングルームが見えるように、垂直軸でモデルを回転させる必要があります。

00:08:42.000 --> 00:08:49.000
このように、ここにy軸の周りに90度を置くことで、これを修正できます。

00:08:49.000 --> 00:08:57.000
Reality Composer Proのデバイスプレビューを使用して、モデルの変更を確認しましょう。

00:08:57.000 --> 00:09:03.000
今、向きは固定されており、私たちはこの見栄えの良いモデルについてはるかに良いビューを持っています。

00:09:03.000 --> 00:09:12.000
さて、この資産をさらに探求し、別の視点を得て、ここでもう少し詳細を見てみましょう。

00:09:12.000 --> 00:09:20.000
これを行うには、ピンチとドラッグジェスチャーを使用して3Dモデルを回転させ、さまざまな側面から表示できます。

00:09:20.000 --> 00:09:25.000
これは、私たちの部屋のさまざまな部分について本当に良い眺めを与えてくれます。

00:09:25.000 --> 00:09:31.000
また、両手のピンチジェスチャーを使用して、モデルを拡大縮小し、詳細を確認することもできます。

00:09:31.000 --> 00:09:44.000
デバイスのクイックルックで3Dモデルを検査する方法を見たので、コンテンツの視覚的品質を向上させるためのいくつかの考慮事項について話しましょう。

00:09:44.000 --> 00:09:52.000
複数のオブジェクトが同じ場所にレンダリングされると、それらが重なり、単一のちらつきオブジェクトとして表示される場合があります。

00:09:52.000 --> 00:10:06.000
この問題を軽減するために、3D作成ツールを使用して、オーバーラップを削除するか、ちらつきオブジェクト間の距離を増やすことで、メッシュジオメトリを最適化できます。

00:10:06.000 --> 00:10:22.000
高周波ノーマルマップの使用は避けてください。特に、動いている状況や3Dモデルに近い状況では、不要な視覚的アーティファクトを作成する可能性のあるエイリアシングの問題が残るため、避けてください。

00:10:22.000 --> 00:10:35.000
葉などの小さいまたは薄いオブジェクトをレンダリングする場合、システムは可変ラスタライズレートで時間の経過とともに一貫してサンプリングされない可能性があり、周辺部でちらつきを引き起こす可能性があります。

00:10:35.000 --> 00:10:47.000
この問題を最小限に抑えるために、細かいジオメトリの詳細を不透明度テクスチャに保存し、代わりに大きな三角形のグリッドを持つジオメトリを使用してレンダリングすることができます。

00:10:47.000 --> 00:10:56.000
可変ラスタライズレートの詳細については、セッション「空間コンピューティングのレンダリングを探る」をご覧ください。

00:10:56.000 --> 00:10:59.000
次に、パフォーマンスに注意を向けましょう。

00:10:59.000 --> 00:11:09.000
ここでは、クイックルック3Dコンテンツの解剖学と、スムーズでシームレスなクイックルック空間体験を確保するために何ができるかを見ていきます。

00:11:09.000 --> 00:11:11.000
始めましょう。

00:11:11.000 --> 00:11:18.000
クイックルックでレンダリングされるコンテンツの3Dパフォーマンスを決定する多くの要因があります。

00:11:18.000 --> 00:11:31.000
3Dモデルのファイルサイズ、テクスチャの数と解像度、さらにはモデルに使用している素材の複雑さなど。

00:11:31.000 --> 00:11:43.000
パフォーマンスのために3Dモデルの最適化を開始する場所を知るには、まず資産に存在する可能性のある潜在的な制限を特定する必要があります。

00:11:43.000 --> 00:11:52.000
このタスクを簡素化するために、今年はワークフローを大幅に改善できる便利な新しいツールを導入しました。

00:11:52.000 --> 00:11:55.000
見てみましょう。 

00:11:55.000 --> 00:12:01.000
ここでは、Statisticsパネルを表示するためにReality Composer Proに戻ってきました。

00:12:01.000 --> 00:12:15.000
このパネルは、三角形の数やコンテンツで使用されるテクスチャメモリの量など、3Dモデルの特性に関する多くの有用な情報を提供します。

00:12:15.000 --> 00:12:20.000
あなたが自由に使えるもう一つの素晴らしいツールは、RealityKit Traceです。

00:12:20.000 --> 00:12:25.000
このツールは、さらに高度なランタイムプロファイリングを可能にします。

00:12:25.000 --> 00:12:30.000
RealityKit Traceは、特定のレンダリングパイプラインへの洞察を提供します。

00:12:30.000 --> 00:12:37.000
これにより、3Dコンテンツを使用して、個々のレンダリングフレームにより多くの情報を得ることができます。

00:12:37.000 --> 00:12:52.000
キャプチャされた複数のフレームを分析することで、RealityKit Traceを使用して、潜在的なパフォーマンスの問題や制限を特定して診断し、推奨事項を与えることができます。

00:12:52.000 --> 00:12:56.000
RealityKit TraceはXcodeで構築し続けます。

00:12:56.000 --> 00:13:04.000
クイックルックでコンテンツのプロファイリングに使用するには、クイックルックプロセスに添付する必要があります。

00:13:04.000 --> 00:13:12.000
Reality Composer ProとRealityKit Traceの詳細については、以下のセッションをご覧ください。

00:13:12.000 --> 00:13:26.000
潜在的なパフォーマンス制限のプロファイリングを行うのに役立つツールのいくつかを見てきましたが、パフォーマンスのために3Dコンテンツを最適化するのに役立つベストプラクティスのいくつかを見ていきます。

00:13:26.000 --> 00:13:33.000
先ほど、クイックルックの3Dコンテンツのパフォーマンスを決定するさまざまな要因について言及しました。

00:13:33.000 --> 00:13:42.000
では、それに応じてコンテンツを最適化するために何ができるかという観点から、それらを1つずつ見てみましょう。

00:13:42.000 --> 00:13:46.000
まず、ファイルサイズに合わせてモデルを最適化することです。

00:13:46.000 --> 00:13:58.000
ファイルサイズが小さいほど、ユーザーがコンテンツを操作する前に長時間待たせたくないため、通常、ダウンロードが速くなり、読み込み時間が短縮されます。

00:13:58.000 --> 00:14:05.000
ここでのコツは、資産の品質とファイルサイズの間で最適化されたバランスを見つけることです。

00:14:05.000 --> 00:14:12.000
たとえば、より詳細なテクスチャや低品質のオーディオソースを使用できます。

00:14:12.000 --> 00:14:18.000
時々、資産はいくつかの反復サイクルにわたって開発されます。

00:14:18.000 --> 00:14:26.000
多くの場合、これには、アセットにリンクされた基礎となるオーディオ、アニメーション、テクスチャの変更が含まれます。

00:14:26.000 --> 00:14:35.000
ファイルサイズを最小限に抑えるには、配布される最終パッケージに実際に使用されているもののみを含めるようにしてください。

00:14:35.000 --> 00:14:46.000
たとえば、シーンに使用されなくなった古いバージョンのオーディオファイルは、配布前に最終的なアセットから削除する必要があります。

00:14:46.000 --> 00:14:55.000
最後に、より良い共有体験を確保するために、ファイルサイズを25メガバイト未満に保つことをお勧めします。

00:14:55.000 --> 00:15:01.000
次に、パフォーマンスのために3Dコンテンツジオメトリを最適化する方法を見てみましょう。

00:15:01.000 --> 00:15:10.000
繰り返しますが、コツは、素晴らしいレベルの詳細を示すことと、素晴らしいパフォーマンスを達成することの間の適切なバランスを見つけることです。

00:15:10.000 --> 00:15:25.000
モデルが別のジオメトリで非表示または完全に覆われている部品を使用している場合、つまり画面に表示されない場合は、パフォーマンス予算を節約するためにそれらを削除しても問題ありません。

00:15:25.000 --> 00:15:33.000
また、システムの負荷を減らすために、小さなメッシュを1つの大きなメッシュに統合することを検討してください。

00:15:33.000 --> 00:15:42.000
単一のモデルの場合、200メッシュ部品と100k未満の頂点以下に保つことをお勧めします。

00:15:42.000 --> 00:15:48.000
メッシュの詳細とシーン内の別の資産とのバランスをとることを常に覚えておいてください。

00:15:48.000 --> 00:15:51.000
次に、テクスチャを見てみましょう。 

00:15:51.000 --> 00:15:55.000
テクスチャは多くのメモリ使用量に貢献できます。

00:15:55.000 --> 00:16:06.000
自動化されたテクスチャはより少ないメモリを消費し、より多くのアセットを同時にロードし、複雑なシーンをスムーズに実行できるようにします。

00:16:06.000 --> 00:16:12.000
テクスチャの予算を節約する1つの方法は、非色の入力にグレースケールを使用することです。

00:16:12.000 --> 00:16:25.000
場合によっては、グレースケール画像をカラーテクスチャを介して個々のチャンネルにパックして、複数のグレースケールマップを1つのテクスチャに保存することもできます。

00:16:25.000 --> 00:16:33.000
可能であれば、テクスチャから読み込むのではなく、材料に一定の値を使用してください。

00:16:33.000 --> 00:16:46.000
モデルが単一のPBR素材のみを使用している場合は、最大テクスチャサイズが2K×2Kで、チャンネルごとのテクスチャあたり16ビットではなく8ビットを使用することをお勧めします。

00:16:46.000 --> 00:16:56.000
最後に、3Dモデルに最も価値とリアリズムを追加する領域にテクスチャ予算を常に費やすようにしてください。

00:16:56.000 --> 00:16:59.000
次は材料です。

00:16:59.000 --> 00:17:03.000
材料は3Dモデルの表面特性を定義する。

00:17:03.000 --> 00:17:13.000
彼らは、その色や、オブジェクトが光沢のある外観または反射的な外観で表示されるかどうかなど、システムがモデルをどのようにレンダリングするかを指定します。

00:17:13.000 --> 00:17:25.000
3Dモデルの材料の最適化に関しては、メッシュ部品を組み合わせて同じ材料と共有することで、積載時間を短縮できます。

00:17:25.000 --> 00:17:35.000
これが役立つ理由は、3Dモデルにカスタム素材がある場合、システムが初めてロードするときにそれらをコンパイルしなければならないからです。

00:17:35.000 --> 00:17:40.000
素材の複雑さと画面サイズのバランスをとるようにしてください。

00:17:40.000 --> 00:17:53.000
たとえば、画面の小さな部分が透明であるか、透明なコートが必要な場合は、その小さな領域のためだけに別の材料を使用する方が効率的です。

00:17:53.000 --> 00:17:58.000
重複する透明性に常に留意する必要があります。

00:17:58.000 --> 00:18:10.000
透明なオブジェクトをリアルタイムでレンダリングするには、通常、不透明なオブジェクトと比較してより多くの計算が必要になるため、本当に必要なときにのみ透明性が重複します。

00:18:10.000 --> 00:18:24.000
また、照明を焼いたり、メッシュの一部が照明を必要としない場合は、MaterialX Unlit surfaceを使用してリアルタイムの照明計算を保存することをお勧めします。

00:18:24.000 --> 00:18:26.000
次に、物理学を見てみましょう。

00:18:26.000 --> 00:18:42.000
物理学シミュレーションは、特に物理学システムが衝突検出を実行し、重力やスプリングなどの現実的な効果をシミュレートする場合、計算コストがかかる場合があります。

00:18:42.000 --> 00:18:52.000
物理を使用してコンテンツのパフォーマンスを最大化するには、使用されているコライダーの総数を減らすことができます。

00:18:52.000 --> 00:19:07.000
コンテンツに物理シミュレーションに参加してもらいたい場合がありますが、コンテンツには、移動したり、別のオブジェクトの影響を受けたりしないはずのエンティティが含まれます。たとえば、仮想ボールを跳ね返らせる壁などです。

00:19:07.000 --> 00:19:15.000
この場合、物理計算を減らすために静的コライダーを使用することをお勧めします。

00:19:15.000 --> 00:19:17.000
次に、アニメーションについて話しましょう。

00:19:17.000 --> 00:19:24.000
3Dモデルにアニメーションを追加することは、コンテンツに命を吹き込むのに最適な方法です。

00:19:24.000 --> 00:19:28.000
時には、必要なのはアイドルアニメーションだけです。

00:19:28.000 --> 00:19:37.000
この場合、アニメーションの頂点あたりの重量数を制限して、効率的でリアルなアニメーションを作成するのに役立ちます。

00:19:37.000 --> 00:19:49.000
変形やスキンアニメーションのジオメトリを最適化しようとするときは、以前に提供したのと同じジオメトリガイドラインに従うことを忘れないでください。

00:19:49.000 --> 00:19:52.000
次は、コンテンツでパーティクルシステムを使用することです。

00:19:52.000 --> 00:20:03.000
これは、煙やロケットからの排気を伴う現実的な火災などの洗練された視覚効果を構築するための最も強力なツールの1つです。

00:20:03.000 --> 00:20:10.000
誤って使用すると、粒子はクイックルック3D体験のボトルネックになる可能性があります。

00:20:10.000 --> 00:20:21.000
このため、パーティクルエミッタの使用を制限し、画面上のパーティクルの数を最小限に抑えることをお勧めします。

00:20:21.000 --> 00:20:26.000
多くの場合、より少ない粒子で同様の視覚効果を作成できます。

00:20:26.000 --> 00:20:38.000
同様の効果を達成するために、より単純またはより小さな形状とスタイルを実験し、システム上のオーバードローを減らすのに役立ちます。

00:20:38.000 --> 00:20:41.000
それは私たちがちょうど経験したかなり多くのことでした。

00:20:41.000 --> 00:20:45.000
これらの推奨事項をまとめてみましょう。

00:20:45.000 --> 00:20:51.000
Quicklook 3Dコンテンツのパフォーマンスには多くの要因が考慮されます。

00:20:51.000 --> 00:21:01.000
この新しいプラットフォームは、人々が互いに並行して実行されている複数のアプリやコンテンツに関与できるように設計されています。

00:21:01.000 --> 00:21:11.000
これは、コンテンツのパフォーマンスが、人々が行っている他のアプリやシーンによって影響を受ける可能性があることを意味します。

00:21:11.000 --> 00:21:17.000
このため、さまざまなシナリオで3Dモデルをテストするのは良い習慣です。

00:21:17.000 --> 00:21:31.000
このセッションで共有したように、コンテンツの視覚的な品質を確認したり、3Dパフォーマンスに影響を与える可能性のある制限を見つけたりするかどうかにかかわらず、自由に利用できるツールがいくつかあります。

00:21:31.000 --> 00:21:42.000
ここでのスイートスポットは、より大きなビジュアルを持つことと、同時にスムーズなクイックルック視聴体験を確保することの適切なバランスを見つけることです。

00:21:42.000 --> 00:21:55.000
クイックルックの詳細と、アプリやウェブサイトから3Dコンテンツを表示できるようにする方法については、他の講演「空間コンピューティングのクイックルックを発見」をご覧ください。

00:21:55.000 --> 00:21:57.000
見てくれてありがとう!

00:21:57.000 --> 23:59:59.000
♪

