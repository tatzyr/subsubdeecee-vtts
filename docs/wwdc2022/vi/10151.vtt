WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:18.000
Xin chào mọi người, tên tôi là Eric, và tôi rất vui được cho các bạn biết cách thêm khả năng truy cập vào các trò chơi Unity của bạn.

00:00:18.000 --> 00:00:22.000
Khả năng tiếp cận là cho phép mọi người sử dụng sản phẩm của chúng tôi.

00:00:22.000 --> 00:00:31.000
Và hôm nay đánh dấu một bước tiến lớn cho trò chơi có thể truy cập với trình cắm Apple Accessibility dành cho các nhà phát triển Unity.

00:00:31.000 --> 00:00:37.000
Chúng tôi sẽ tập trung vào ba công nghệ của Apple để làm cho trò chơi của bạn có thể truy cập được.

00:00:37.000 --> 00:00:43.000
VoiceOver là một trình đọc màn hình giúp người dùng bị mù hoặc thị lực kém.

00:00:43.000 --> 00:00:51.000
Nó đọc các mục trên màn hình và cung cấp các cử chỉ tùy chỉnh để người dùng tương tác với các điều khiển.

00:00:51.000 --> 00:00:59.000
Điều khiển công tắc, cho phép ai đó có điều khiển động cơ thấp sử dụng công tắc bên ngoài để tương tác với thiết bị.

00:00:59.000 --> 00:01:07.000
Và kiểu động, cho phép mọi người đặt kích thước văn bản theo khả năng đọc của họ.

00:01:07.000 --> 00:01:17.000
Để bắt đầu, hãy sao chép kho lưu trữ và xây dựng tất cả các trình cắm của Apple bằng cách sử dụng tập lệnh xây dựng trong thư mục gốc của kho lưu trữ.

00:01:17.000 --> 00:01:23.000
Điều này sẽ tạo ra một thư mục Xây dựng sẵn sàng để tích hợp vào các dự án Unity của bạn.

00:01:23.000 --> 00:01:30.000
Cuối cùng, thêm trình cắm Trợ năng vào dự án của riêng bạn bằng Trình quản lý gói Unity.

00:01:30.000 --> 00:01:50.000
Để biết thêm chi tiết, hãy xem tài liệu trong kho lưu trữ và xem video về tất cả các trình cắm Unity của Apple, được gọi là "Trình cắm và chơi: Thêm khung Apple vào các dự án trò chơi Unity của bạn" Bây giờ bạn đã có trình cắm thêm, tôi sẽ hướng dẫn bạn qua ba lĩnh vực.

00:01:50.000 --> 00:01:53.000
Đầu tiên là các yếu tố tiếp cận.

00:01:53.000 --> 00:02:00.000
Điều này cho phép bạn thêm hỗ trợ cho các công nghệ hỗ trợ như VoiceOver hoặc Switch Control cho các trò chơi của bạn.

00:02:00.000 --> 00:02:03.000
Tiếp theo là Dynamic Type.

00:02:03.000 --> 00:02:10.000
Chúng tôi tạo ra tiện ích dễ sử dụng này giúp bạn chia tỷ lệ văn bản theo sở thích của người dùng.

00:02:10.000 --> 00:02:13.000
Và Chỗ Ở UI.

00:02:13.000 --> 00:02:18.000
Đây là những tiện ích giúp bạn đọc các tùy chọn khác của người dùng.

00:02:18.000 --> 00:02:22.000
Hãy bắt đầu với các yếu tố khả năng tiếp cận.

00:02:22.000 --> 00:02:27.000
Tôi đã xây dựng một trò chơi bài đơn giản để giúp minh họa khái niệm này.

00:02:27.000 --> 00:02:33.000
Bạn có thể thấy rằng bạn nên nhấn vào nút "lật" để rút hai thẻ ngẫu nhiên.

00:02:33.000 --> 00:02:44.000
Tuy nhiên, VoiceOver sẽ không đọc văn bản trên màn hình và công tắc bên ngoài sẽ không nhấn vào nút vì đây chỉ là những điểm ảnh trên màn hình ngay bây giờ.

00:02:44.000 --> 00:02:49.000
Chúng ta cần giúp hệ thống hiểu những gì có thể được tương tác.

00:02:49.000 --> 00:02:57.000
Các yếu tố khả năng tiếp cận xác định những thứ mà công nghệ hỗ trợ có thể tương tác.

00:02:57.000 --> 00:03:03.000
Văn bản, thẻ và nút trên màn hình phải là các yếu tố trợ năng.

00:03:03.000 --> 00:03:07.000
Và chúng ta có thể mô tả từng yếu tố bằng một nhãn.

00:03:07.000 --> 00:03:14.000
VoiceOver sẽ đọc từng nhãn để người dùng có thể hiểu những gì trên màn hình.

00:03:14.000 --> 00:03:21.000
Và nếu trò chơi hỗ trợ nhiều ngôn ngữ, chúng ta cũng nên bản địa hóa các nhãn này.

00:03:21.000 --> 00:03:29.000
Bây giờ VoiceOver có thể mô tả những gì trên màn hình, nhưng nó không nhận ra rằng có một nút có thể được nhấn.

00:03:29.000 --> 00:03:36.000
Chúng ta có thể sử dụng một thuộc tính khác được gọi là "đặc điểm" để thông báo cho hệ thống về loại phần tử.

00:03:36.000 --> 00:03:39.000
Chúng ta nên thêm đặc điểm "Nút" ở đây.

00:03:39.000 --> 00:03:48.000
Bây giờ, VoiceOver sẽ đọc "Nút lật" và một công tắc bên ngoài có thể điều khiển nút này.

00:03:48.000 --> 00:03:53.000
Chúng ta cũng có thể thêm đặc điểm "Văn bản tĩnh" vào các phần tử văn bản của mình.

00:03:53.000 --> 00:04:04.000
Đặc điểm "Văn bản tĩnh" thường được đặt cho các nhãn và vùng văn bản để VoiceOver có thể cung cấp trải nghiệm tương tác văn bản tốt hơn.

00:04:04.000 --> 00:04:11.000
Và có nhiều đặc điểm khác ngoài "Nút" và "Văn bản tĩnh" mà bạn có thể khám phá.

00:04:11.000 --> 00:04:15.000
Vậy chúng ta nên sử dụng đặc điểm nào cho các thẻ?

00:04:15.000 --> 00:04:21.000
Chà, chúng ta không cần sử dụng các đặc điểm trên mọi yếu tố tiếp cận.

00:04:21.000 --> 00:04:25.000
Thẻ của chúng tôi không cần bất kỳ đặc điểm nào.

00:04:25.000 --> 00:04:33.000
Tuy nhiên, vẫn còn một phần của mỗi thẻ mà VoiceOver không nhận thức được: mệnh giá.

00:04:33.000 --> 00:04:39.000
Có một thuộc tính khác mà chúng ta có thể sử dụng cho việc này được gọi là "Giá trị".

00:04:39.000 --> 00:04:51.000
Khi chúng tôi thêm "Giá trị" cho mỗi thẻ, VoiceOver bây giờ sẽ đọc "Thẻ 1 với giá trị 3 của câu lạc bộ, thẻ 2 với giá trị Ace của câu lạc bộ."

00:04:51.000 --> 00:04:54.000
Và thế là xong.

00:04:54.000 --> 00:05:02.000
Bây giờ bạn đã hiểu những điều cơ bản, hãy mở Unity để xem cách thêm chúng vào dự án của chúng tôi.

00:05:02.000 --> 00:05:05.000
Tôi đang ở đây trong Unity Editor cho trò chơi này.

00:05:05.000 --> 00:05:11.000
Tôi đã thêm plugin Trợ năng của Apple vào dự án này.

00:05:11.000 --> 00:05:19.000
Đầu tiên chúng ta có các đối tượng cảnh thông thường như máy ảnh, ánh sáng trực tiếp và UI Canvas.

00:05:19.000 --> 00:05:24.000
Dưới khung vẽ, chúng ta có hai phần tử văn bản và một nút bấm.

00:05:24.000 --> 00:05:31.000
Sau đó, chúng tôi có hai đối tượng trò chơi cho thẻ.

00:05:31.000 --> 00:05:39.000
Mỗi thành phần bao gồm hai thành phần lưới, mỗi thành phần hiển thị kết cấu mặt trước và mặt sau cho thẻ ở mỗi bên.

00:05:39.000 --> 00:05:44.000
Hãy bắt đầu bằng cách xác định các yếu tố khả năng tiếp cận của chúng ta.

00:05:44.000 --> 00:05:50.000
Để làm điều này, chúng ta cần thành phần Nút trợ năng từ plugin này.

00:05:50.000 --> 00:05:57.000
Chọn tất cả các đối tượng trong hệ thống phân cấp có thể truy cập được.

00:05:57.000 --> 00:06:06.000
Và thêm thành phần Nút khả năng truy cập để biến chúng thành các yếu tố khả năng truy cập.

00:06:06.000 --> 00:06:09.000
Tiếp theo, chúng tôi thêm nhãn.

00:06:09.000 --> 00:06:19.000
Chọn đối tượng thẻ, đi đến thành phần "Nút trợ năng" ở bên phải và tìm trường "Nhãn".

00:06:19.000 --> 00:06:26.000
Và đảm bảo rằng hộp kiểm trường nhãn được chọn để cung cấp nhãn tùy chỉnh.

00:06:26.000 --> 00:06:31.000
Sau đó gõ "Thẻ 1."

00:06:31.000 --> 00:06:40.000
Và cũng vậy đối với Thẻ 2.

00:06:40.000 --> 00:06:52.000
Văn bản và các nút cũng cần nhãn, nhưng chúng tôi không cần phải cung cấp nhãn trợ năng rõ ràng cho chúng nếu chúng tôi đang sử dụng các điều khiển tiêu chuẩn từ Unity UI.

00:06:52.000 --> 00:06:57.000
Trình cắm đã có các triển khai mặc định cho những thứ đó.

00:06:57.000 --> 00:07:02.000
Tiếp theo, chúng ta cần thêm một đặc điểm vào nút của mình.

00:07:02.000 --> 00:07:13.000
Chọn nút lật và thay đổi "Đặc điểm" từ "Không có" thành "Nút".

00:07:13.000 --> 00:07:18.000
Chọn hai yếu tố văn bản...

00:07:18.000 --> 00:07:23.000
Và thay đổi "Đặc điểm" thành "văn bản tĩnh".

00:07:23.000 --> 00:07:25.000
Tuyệt vời.

00:07:25.000 --> 00:07:29.000
Cuối cùng, chúng ta cần đặt Giá trị khả năng tiếp cận cho các mặt thẻ.

00:07:29.000 --> 00:07:37.000
Vì các thẻ được rút ngẫu nhiên, tôi cần thêm một tập lệnh để đặt Giá trị một cách linh hoạt.

00:07:37.000 --> 00:07:44.000
Chọn hai thẻ và thêm một tập lệnh mới gọi là AccessibleCard.

00:07:44.000 --> 00:07:53.000
Đầu tiên, trong một trong những tệp C Sharp khác của tôi, tôi đã có một danh lượng cho tất cả các mặt thẻ được gọi là Playing Card.

00:07:53.000 --> 00:08:05.000
Trong tập lệnh hành vi đơn sắc AccessibleCard mới của tôi, chúng tôi có một biến cho loại thẻ và một boolean cho dù thẻ úp lên hay xuống.

00:08:05.000 --> 00:08:10.000
Vì vậy, bây giờ hãy thêm accessibilityValue vào các thẻ này.

00:08:10.000 --> 00:08:17.000
Đầu tiên, chúng tôi nhận được thành phần accessibilityNode được đính kèm với gameObject này.

00:08:17.000 --> 00:08:25.000
Tiếp theo, đặt đại diện accessibilityValue thành một hàm trả về mệnh giá thẻ một cách linh hoạt.

00:08:25.000 --> 00:08:32.000
Bên trong chức năng này, nếu thẻ được bảo hiểm, chúng tôi sẽ trả lại "được bảo hiểm" cho accessibilityValue.

00:08:32.000 --> 00:08:41.000
Hoặc nếu không được bảo hiểm, chúng tôi sẽ liệt kê tất cả các mặt thẻ và trả lại mô tả cho mỗi mặt, như "Ace of Spades".

00:08:41.000 --> 00:08:44.000
Và thế là xong.

00:08:44.000 --> 00:08:48.000
Bây giờ hãy xây dựng dự án của chúng ta và xem nó đang hoạt động.

00:08:48.000 --> 00:08:55.000
Đây là trò chơi của chúng tôi. Hãy bật VoiceOver.

00:08:55.000 --> 00:08:57.000
Giọng nói tự động: Bật VoiceOver. Trò chơi của Eric.

00:08:57.000 --> 00:08:59.000
Thẻ 2, được bảo hiểm.

00:08:59.000 --> 00:09:03.000
Eric: Tôi có thể vuốt sang phải để chuyển sang phần tử tiếp theo.

00:09:03.000 --> 00:09:07.000
Giọng nói tự động: Thẻ 1, được bảo hiểm.

00:09:07.000 --> 00:09:10.000
Trò chơi bài của Eric.

00:09:10.000 --> 00:09:14.000
Lật thẻ.

00:09:14.000 --> 00:09:16.000
Lật. Nút bấm.

00:09:16.000 --> 00:09:23.000
Eric: Bạn thấy rằng tất cả năm đối tượng hiện có thể truy cập được thông qua VoiceOver, điều này thật tuyệt vời.

00:09:23.000 --> 00:09:28.000
Để nhấn vào nút khi VoiceOver được bật, hãy nhấn đúp.

00:09:28.000 --> 00:09:30.000
Giọng nói tự động: Lật.

00:09:30.000 --> 00:09:34.000
Eric: Hãy kiểm tra lại các thẻ.

00:09:34.000 --> 00:09:38.000
Giọng nói tự động: Thẻ 1, Hai của Câu lạc bộ.

00:09:38.000 --> 00:09:40.000
Lá bài 2, Át chủ bài của các câu lạc bộ.

00:09:40.000 --> 00:09:45.000
Eric: VoiceOver hiện đọc chính xác các mặt thẻ được cập nhật.

00:09:45.000 --> 00:09:46.000
Tuyệt.

00:09:46.000 --> 00:09:52.000
Vì vậy, chúng tôi vừa làm cho trò chơi của mình có thể truy cập được với hàng triệu người dùng VoiceOver, những người hiện có thể yêu thích nó.

00:09:52.000 --> 00:09:57.000
Và những người sử dụng điều khiển công tắc bên ngoài cũng có thể chơi trò chơi của chúng tôi.

00:09:57.000 --> 00:10:00.000
Vậy đó là các yếu tố tiếp cận.

00:10:00.000 --> 00:10:04.000
Tiếp theo, hãy nói về Dynamic Type.

00:10:04.000 --> 00:10:11.000
Trò chơi có thể khó chơi đối với nhiều người vì văn bản quá nhỏ để đọc.

00:10:11.000 --> 00:10:20.000
Trên iOS và tvOS, mọi người đều có thể chọn kích thước văn bản phù hợp với khả năng đọc của họ trong Cài đặt.

00:10:20.000 --> 00:10:30.000
Với Accessibility Plugin, bạn có thể đọc cài đặt này để đảm bảo văn bản trong trò chơi của bạn được hiển thị ở kích thước mong đợi.

00:10:30.000 --> 00:10:36.000
Hãy xem ví dụ trò chơi của chúng tôi để xem cách chúng tôi có thể sử dụng Dynamic Type.

00:10:36.000 --> 00:10:41.000
Tạo một tập lệnh hành vi đơn gọi là DynamicTextSize.cs.

00:10:41.000 --> 00:10:47.000
Trong chức năng bắt đầu, trước tiên hãy lưu trữ kích thước văn bản mặc định vào một biến.

00:10:47.000 --> 00:10:57.000
Sau đó, bên trong chức năng OnEnable, đăng ký cài đặt sự kiện đã thay đổi bằng cách sử dụng AccessibilitySettings. onPreferredTextSizesChanged.

00:10:57.000 --> 00:11:03.000
Điều này cho phép chúng tôi cập nhật giao diện người dùng ngay khi người dùng thay đổi cài đặt văn bản.

00:11:03.000 --> 00:11:11.000
Tiếp theo, bên trong chức năng Cài đặt Thay đổi, trước tiên hãy đọc Hệ số nhân Kích thước Nội dung Ưu tiên.

00:11:11.000 --> 00:11:18.000
Sau đó nhân với kích thước văn bản gốc của bạn và gán nó trở lại phần tử văn bản.

00:11:18.000 --> 00:11:25.000
Bên trong Unity Editor, chọn tất cả các đối tượng trò chơi có phần tử Văn bản.

00:11:25.000 --> 00:11:32.000
Và thêm thành phần DynamicTextSize mà chúng tôi vừa tạo.

00:11:32.000 --> 00:11:37.000
Bây giờ trò chơi của chúng tôi đã sẵn sàng để hỗ trợ loại Động.

00:11:37.000 --> 00:11:45.000
Trước khi chúng ta thấy kết quả đang hoạt động, trước tiên tôi sẽ chỉ cho bạn một mẹo để nhanh chóng kiểm tra Dynamic Type trong các trò chơi của bạn.

00:11:45.000 --> 00:11:54.000
Mở Cài đặt và tìm Trung tâm điều khiển.

00:11:54.000 --> 00:12:02.000
Cuộn xuống cho đến khi bạn thấy Kích thước Văn bản và thêm nó vào Trung tâm Điều khiển.

00:12:02.000 --> 00:12:17.000
Bây giờ chúng ta có thể điều chỉnh kích thước văn bản một cách nhanh chóng bằng cách mở Trung tâm điều khiển và thay đổi các tùy chọn kích thước văn bản.

00:12:17.000 --> 00:12:24.000
Tuyệt vời - khi tôi thay đổi kích thước văn bản, trò chơi của chúng tôi điều chỉnh kích thước phông chữ trong thời gian thực.

00:12:24.000 --> 00:12:30.000
Giá trị phần trăm văn bản được hiển thị trong Trung tâm điều khiển chính xác là những gì chúng ta đang đọc từ hệ số nhân đó.

00:12:30.000 --> 00:12:35.000
Bạn cũng có thể áp dụng cài đặt này trên các đối tượng không phải văn bản.

00:12:35.000 --> 00:12:45.000
Ví dụ, tôi có thể hoán đổi tài sản mặt thẻ thành Bản in lớn khi kích thước được tăng lên.

00:12:45.000 --> 00:12:50.000
Đầu tiên tôi tạo một tập lệnh gọi là DynamicCardFaces.

00:12:50.000 --> 00:12:55.000
Sau đó, điều tương tự như trước đây, đăng ký sự kiện TextSizeChanged.

00:12:55.000 --> 00:13:05.000
Thay vì đọc hệ số nhân, tôi đọc một danh sách danh mục kích thước văn bản được ánh xạ đến các dấu tích trên thanh trượt Trung tâm điều khiển.

00:13:05.000 --> 00:13:11.000
Tôi có thể hoán đổi tài sản bất cứ khi nào ai đó chọn kích thước văn bản lớn hơn.

00:13:11.000 --> 00:13:17.000
Và tôi chỉ đơn giản là chọn giữa một vật liệu thông thường và một vật liệu in lớn.

00:13:17.000 --> 00:13:26.000
Bây giờ nếu chúng ta chọn một kích thước thực sự lớn...

00:13:26.000 --> 00:13:36.000
Người dùng sẽ thấy một phiên bản in lớn của thẻ, đó là những mặt thẻ tuyệt vời dễ đọc hơn nhiều đối với những người có thị lực kém.

00:13:36.000 --> 00:13:44.000
Cuối cùng, tôi muốn nói chuyện với bạn về cài đặt chỗ ở UI mà bạn có thể truy cập bằng trình cắm này.

00:13:44.000 --> 00:13:48.000
Cài đặt đầu tiên là Giảm độ trong suốt.

00:13:48.000 --> 00:13:56.000
Khi cài đặt này được bật, nền sẽ trở nên mờ đục, thay vì hiệu ứng mờ hoặc trong suốt.

00:13:56.000 --> 00:14:02.000
Nó có thể giúp cải thiện tính dễ đọc khi những hiệu ứng đó khiến văn bản khó đọc.

00:14:02.000 --> 00:14:10.000
Để kiểm tra tùy chọn này, hãy gọi Cài đặt Trợ năng. IsReduceTransparencyEnabled.

00:14:10.000 --> 00:14:13.000
Tiếp theo, cài đặt Tăng độ tương phản.

00:14:13.000 --> 00:14:24.000
Lưu ý cách các công tắc có màu xám đậm hơn giúp chúng nổi bật, giúp các điều khiển dễ nhận ra hơn trên toàn bộ thiết bị.

00:14:24.000 --> 00:14:37.000
Bạn có thể tăng độ tương phản cho giao diện người dùng của riêng mình khi điều này được bật bằng cách kiểm tra cài đặt này bằng cách sử dụng Cài đặt trợ năng. IsIncreaseContrastEnabled.

00:14:37.000 --> 00:14:40.000
Tiếp theo, cài đặt Giảm chuyển động.

00:14:40.000 --> 00:14:46.000
Một số người nhạy cảm với chuyển động như chúng ta có trong hoạt hình lật thẻ này.

00:14:46.000 --> 00:14:51.000
Chúng ta nên xóa hình ảnh động đó khi Giảm chuyển động được bật.

00:14:51.000 --> 00:14:55.000
Hãy xem mã để làm điều này.

00:14:55.000 --> 00:15:00.000
Trong tập lệnh CardController của chúng tôi, chúng tôi có chức năng Flip này.

00:15:00.000 --> 00:15:05.000
Đầu tiên chúng tôi kiểm tra xem cài đặt chuyển động giảm của người dùng có bật không.

00:15:05.000 --> 00:15:12.000
Nếu không bật, chúng ta nên lật thẻ bằng cách gọi một hình ảnh động thông qua Coroutine.

00:15:12.000 --> 00:15:16.000
Nếu không, chúng tôi chỉ đặt vòng quay và không có hình ảnh động.

00:15:16.000 --> 00:15:17.000
Và thế là xong.

00:15:17.000 --> 00:15:23.000
Bây giờ những người nhạy cảm với chuyển động sẽ thích trò chơi của chúng tôi.

00:15:23.000 --> 00:15:33.000
Tóm lại, hãy bắt đầu với plugin Apple Accessibility bằng cách nhân bản kho lưu trữ GitHub được liên kết trong tài nguyên của phiên này.

00:15:33.000 --> 00:15:40.000
Thêm các yếu tố trợ năng để mọi người có thể sử dụng VoiceOver và Switch Control với các trò chơi của bạn.

00:15:40.000 --> 00:15:44.000
Điều chỉnh kích thước văn bản của bạn với Dynamic Type.

00:15:44.000 --> 00:15:51.000
Và kiểm tra chỗ ở UI để mọi người có thể có trải nghiệm tuyệt vời với trò chơi của bạn.

00:15:51.000 --> 00:15:53.000
Cảm ơn bạn rất nhiều vì đã tham gia cùng tôi.

00:15:53.000 --> 23:59:59.000
Chúng tôi mong muốn được xem cách bạn tạo ra các trò chơi có sẵn cho tất cả mọi người với trải nghiệm tiếp cận tuyệt vời.

