WEBVTT

00:00:00.000 --> 00:00:09.000
♪ nhạc cụ hip hop ♪

00:00:09.000 --> 00:00:13.000
Xin chào và chào mừng đến với WWDC.

00:00:13.000 --> 00:00:17.000
Tôi là Nikhil và hôm nay, tôi sẽ chia sẻ với bạn những thay đổi sắp tới đối với SKAdNetwork.

00:00:17.000 --> 00:00:23.000
Trước khi đi sâu vào tương lai, hãy nhớ chúng ta đang ở đâu và chúng ta đã đến đây bằng cách nào.

00:00:23.000 --> 00:00:32.000
Tại Apple, chúng tôi tin rằng quyền riêng tư là quyền cơ bản của con người và việc bảo vệ nó được đan xen vào mọi thứ chúng tôi làm ở đây.

00:00:32.000 --> 00:00:36.000
Đó là lý do tại sao chúng tôi tạo ra SKAdNetwork.

00:00:36.000 --> 00:00:41.000
SKAdNetwork là hệ thống phân bổ cài đặt bảo vệ quyền riêng tư của Apple.

00:00:41.000 --> 00:00:47.000
Dữ liệu phân bổ được gửi lại cho nhà quảng cáo trong khi vẫn giữ được quyền riêng tư của người dùng.

00:00:47.000 --> 00:00:56.000
SKAdNetwork liên quan đến ba tác nhân: mạng quảng cáo, ứng dụng nhà xuất bản và ứng dụng nhà quảng cáo.

00:00:56.000 --> 00:01:00.000
Hãy xác định một số thuật ngữ được sử dụng phổ biến trong SKAdNetwork.

00:01:00.000 --> 00:01:09.000
Ấn tượng: một ấn tượng trong bối cảnh của cuộc thảo luận này là đầu vào từ ứng dụng của nhà xuất bản đến SKAdNetwork.

00:01:09.000 --> 00:01:15.000
Tương tác: tương tác xảy ra khi người dùng tương tác với ứng dụng nhà quảng cáo.

00:01:15.000 --> 00:01:21.000
Ứng dụng nhà quảng cáo ghi lại các tương tác này dưới dạng cập nhật giá trị chuyển đổi.

00:01:21.000 --> 00:01:26.000
Và cuối cùng, chuyển đổi, còn được gọi là postbacks.

00:01:26.000 --> 00:01:31.000
Postback chứa dữ liệu phân bổ được gửi đến mạng quảng cáo.

00:01:31.000 --> 00:01:39.000
Dữ liệu phân bổ cung cấp tín hiệu cho mạng quảng cáo rằng đây là một chuyển đổi thành công của quảng cáo gốc.

00:01:39.000 --> 00:01:45.000
Mạng quảng cáo tạo ra ấn tượng có chữ ký cho ứng dụng nhà quảng cáo.

00:01:45.000 --> 00:01:50.000
Ứng dụng nhà xuất bản sử dụng ấn tượng này và hiển thị quảng cáo này.

00:01:50.000 --> 00:01:54.000
Người dùng sau đó nhấn vào quảng cáo và cài đặt ứng dụng.

00:01:54.000 --> 00:02:00.000
Khi được khởi chạy lần đầu tiên, ứng dụng sẽ gọi API để báo hiệu quá trình chuyển đổi.

00:02:00.000 --> 00:02:10.000
Sau đó, ứng dụng có thể liên tục gọi API này để cập nhật giá trị chuyển đổi và nắm bắt các mức độ tương tác khác nhau và lợi nhuận trên quảng cáo đã chi tiêu.

00:02:10.000 --> 00:02:17.000
Khi bộ hẹn giờ hết hạn, chúng tôi sẽ gửi postback chứa dữ liệu phân bổ đến mạng quảng cáo.

00:02:17.000 --> 00:02:22.000
Xem nhanh lịch sử phiên bản của SKAdNetwork.

00:02:22.000 --> 00:02:28.000
SKAdNetwork 2.0 đã giới thiệu phân bổ quảng cáo bảo vệ quyền riêng tư.

00:02:28.000 --> 00:02:34.000
2.2 cho phép các ứng dụng của nhà xuất bản hiển thị quảng cáo tùy chỉnh.

00:02:34.000 --> 00:02:39.000
3.0 đã thêm postbacks cho số lần hiển thị không giành chiến thắng.

00:02:39.000 --> 00:02:49.000
Và trong iOS 15.0, chúng tôi đã giới thiệu các bản sao postback cho các nhà phát triển cho tất cả các phiên bản của SKAdNetwork.

00:02:49.000 --> 00:02:59.000
Để biết thêm về lịch sử của SKAdNetwork, hãy tham khảo phiên "Gặp gỡ phân bổ quảng cáo bảo vệ quyền riêng tư" từ WWDC 2021.

00:02:59.000 --> 00:03:05.000
Bây giờ hãy nói về tương lai, SKAdNetwork 4.0.

00:03:05.000 --> 00:03:08.000
Hãy cùng xem xét các tính năng mới.

00:03:08.000 --> 00:03:16.000
Chúng tôi sẽ bắt đầu bằng cách xem xét một vài thay đổi đối với API được thiết kế để cung cấp thêm dữ liệu cho các nhà quảng cáo.

00:03:16.000 --> 00:03:20.000
Sau đó, chúng ta sẽ xem xét khía cạnh chuyển đổi của mọi thứ.

00:03:20.000 --> 00:03:30.000
Sau đó, chúng tôi sẽ chuyển sang phân bổ cho quảng cáo trên web và kết thúc bằng cách nói về khả năng kiểm tra SKAdNetwork.

00:03:30.000 --> 00:03:38.000
ID phân cấp và giá trị chuyển đổi là tính năng mới đầu tiên đến với SKAdNetwork 4.0.

00:03:38.000 --> 00:03:44.000
Trước khi đi sâu vào tính năng mới, tôi muốn xác định tính ẩn danh của đám đông.

00:03:44.000 --> 00:03:53.000
Ẩn danh đám đông là thuật ngữ chúng tôi sử dụng để chỉ cách bảo vệ quyền riêng tư mà SKAdNetwork cung cấp dữ liệu phân bổ.

00:03:53.000 --> 00:04:00.000
Số lượt cài đặt xác định mức độ riêng tư được đảm bảo cho người sử dụng ứng dụng của bạn.

00:04:00.000 --> 00:04:06.000
Ở đầu dưới, chúng tôi gửi ít dữ liệu phân bổ hơn cho nhà quảng cáo trong phần sau.

00:04:06.000 --> 00:04:15.000
Khi số lượng cài đặt thấp, chúng tôi thực hiện các bước bổ sung để bảo vệ quyền riêng tư bằng cách giới hạn thông tin có thể theo dõi được gửi lại.

00:04:15.000 --> 00:04:23.000
Khi số lượng tăng lên và tính độc đáo của người dùng bắt đầu hòa vào đám đông, chúng tôi sẽ gửi lại nhiều dữ liệu hơn.

00:04:23.000 --> 00:04:32.000
Cuối cùng, khi số lượng đạt đến mức cao nhất, chúng tôi có thể gửi lại nhiều dữ liệu nhất trong khi vẫn giữ được quyền riêng tư.

00:04:32.000 --> 00:04:41.000
Trong SKAdNetwork 4.0, chúng tôi có cách gửi nhiều dữ liệu hơn trong khi vẫn giữ được các biện pháp bảo vệ quyền riêng tư của mình.

00:04:41.000 --> 00:04:45.000
Đối với điều này, chúng tôi đang thay đổi trường nhận dạng chiến dịch.

00:04:45.000 --> 00:04:49.000
Hiện tại, đây là một trường gồm 2 chữ số.

00:04:49.000 --> 00:04:56.000
Chúng tôi sẽ tăng phạm vi của trường này lên 4 chữ số và đổi tên nó thành mã định danh nguồn.

00:04:56.000 --> 00:05:09.000
Cái tên mới phản ánh cách suy nghĩ của chúng tôi về lĩnh vực này là có khả năng đại diện cho bất cứ thứ gì bạn chọn sử dụng nó chứ không chỉ để xác định các chiến dịch.

00:05:09.000 --> 00:05:19.000
Mặc dù đây là một số duy nhất, chúng tôi khuyến khích nghĩ về nó như ba số phân cấp, một số có 2, 3 và 4 chữ số.

00:05:19.000 --> 00:05:28.000
Suy nghĩ về trường định danh nguồn như một tập hợp các số phân cấp rất hữu ích trong việc gán ý nghĩa cho các số khác nhau.

00:05:28.000 --> 00:05:42.000
Ví dụ, 2 chữ số có thể đại diện cho chiến dịch quảng cáo, chữ số thứ 3 có thể đại diện cho vị trí được nhóm của người dùng và chữ số thứ 4 có thể đại diện cho vị trí đặt quảng cáo trên màn hình.

00:05:42.000 --> 00:05:56.000
Ngoài ra, 2 chữ số có thể là viết tắt của phương pháp điều trị, chữ số thứ 3 có thể đại diện cho thời gian được xếp trong ngày và chữ số thứ 4 có thể đại diện cho kích thước của quảng cáo được hiển thị.

00:05:56.000 --> 00:06:05.000
Đây chỉ đơn giản là những ví dụ, và cuối cùng, những gì chúng tôi muốn ở đây là mở ra lĩnh vực này cho bạn để sử dụng phù hợp nhất với nhu cầu của bạn.

00:06:05.000 --> 00:06:12.000
Tiếp tục chủ đề cung cấp thêm dữ liệu, giá trị chuyển đổi cũng đang thay đổi.

00:06:12.000 --> 00:06:15.000
Hiện tại đây là một giá trị 6 bit.

00:06:15.000 --> 00:06:25.000
Với SKAdNetwork 4.0, chúng tôi đang giới thiệu hai giá trị chuyển đổi: giá trị hạt mịn và giá trị hạt thô.

00:06:25.000 --> 00:06:29.000
Giá trị hạt mịn giống như giá trị chuyển đổi ngày nay.

00:06:29.000 --> 00:06:34.000
Giá trị hạt thô có thể giả định một trong ba giá trị.

00:06:34.000 --> 00:06:48.000
Xem xét giá trị chuyển đổi cao 42, trong đó cao là giá trị thô và 42 là giá trị tốt, số lượng cài đặt cần thiết để nhận được giá trị thô thấp hơn giá trị cần thiết cho giá trị tốt.

00:06:48.000 --> 00:06:53.000
Do đó, các ứng dụng sẽ nhận được cái trước nhanh hơn nhiều so với cái sau.

00:06:53.000 --> 00:06:58.000
Tuy nhiên, lưu ý rằng chỉ một trong số này sẽ được gửi lại cho nhà quảng cáo.

00:06:58.000 --> 00:07:04.000
Chúng ta hãy xem việc ẩn danh đám đông ảnh hưởng như thế nào đến những lĩnh vực mới này.

00:07:04.000 --> 00:07:19.000
Sử dụng ví dụ trước đó của chúng tôi về 5739 làm mã định danh nguồn, ở mức thấp của tính ẩn danh đám đông, bạn có thể mong đợi nhận được thành phần gồm 2 chữ số của mã định danh nguồn, trong trường hợp này là 39.

00:07:19.000 --> 00:07:24.000
Ở cấp độ trung bình, bạn có thể mong đợi nhận được thành phần gồm 3 chữ số.

00:07:24.000 --> 00:07:31.000
Và ở mức cao nhất, bạn có thể mong đợi nhận lại mã định danh nguồn đầy đủ gồm 4 chữ số.

00:07:31.000 --> 00:07:38.000
Khi mức độ ẩn danh của đám đông tăng lên, nhiều chữ số hơn của mã định danh nguồn được gửi lại.

00:07:38.000 --> 00:07:50.000
Và lấy ví dụ trước đây của chúng tôi về 42 cao cho giá trị chuyển đổi, ở mức thấp của tính ẩn danh đám đông, bạn sẽ không nhận được giá trị chuyển đổi trong postback của mình.

00:07:50.000 --> 00:07:55.000
Ở mức trung bình, bạn sẽ nhận được giá trị chuyển đổi thô.

00:07:55.000 --> 00:08:01.000
Và ở mức cao nhất, bạn sẽ nhận được giá trị chuyển đổi chi tiết trong bài đăng lại của mình.

00:08:01.000 --> 00:08:07.000
Khi tính ẩn danh của đám đông tăng lên, giá trị chuyển đổi trả về thay đổi.

00:08:07.000 --> 00:08:10.000
Hãy cùng xem xét các thay đổi API.

00:08:10.000 --> 00:08:23.000
Nếu bạn đang sử dụng các phiên bản của SKAdImpression để hiển thị quảng cáo của mình, bạn có thể đặt thuộc tính sourceIdentifier mới trên phiên bản SKAdImpression.

00:08:23.000 --> 00:08:33.000
Nếu bạn đang đặt ấn tượng của mình thông qua từ điển, bạn có thể đặt giá trị sourceIdentifier bằng cách sử dụng khóa nhận dạng nguồn mới.

00:08:33.000 --> 00:08:47.000
Đối với các ứng dụng được quảng cáo, bạn sẽ gọi phương thức updatePostbackConversionValue mới đã được thay đổi để hiện có giá trị chuyển đổi hạt thô ngoài giá trị chuyển đổi hạt mịn như được hiển thị ở đây.

00:08:47.000 --> 00:08:56.000
Chúng tôi khuyên bạn nên sử dụng trình xử lý hoàn thành để thực hiện bất kỳ tác vụ tiếp theo nào sau khi cập nhật giá trị chuyển đổi postback của bạn.

00:08:56.000 --> 00:09:02.000
Dưới đây là một số khuyến nghị về việc áp dụng ID phân cấp mới và API giá trị chuyển đổi.

00:09:02.000 --> 00:09:08.000
Các phần khác nhau của mã định danh nguồn sẽ được trả về tùy thuộc vào mức độ riêng tư của cài đặt.

00:09:08.000 --> 00:09:14.000
Hãy cân nhắc điều này khi soạn số nhận dạng nguồn cho số lần hiển thị của bạn.

00:09:14.000 --> 00:09:20.000
Các giá trị chuyển đổi thô có độ chi tiết thấp hơn nhiều so với các giá trị chuyển đổi tốt.

00:09:20.000 --> 00:09:25.000
Hãy cân nhắc điều này khi gán ý nghĩa cho các giá trị của chúng.

00:09:25.000 --> 00:09:29.000
Giá trị chuyển đổi có thể tăng hoặc giảm.

00:09:29.000 --> 00:09:42.000
Và cuối cùng, khi thực hiện các thay đổi đối với máy chủ của bạn để xử lý các postback SKAdNetwork 4.0, hãy làm cho chúng có khả năng phân tích cú pháp các số nhận dạng nguồn mới và các giá trị chuyển đổi thô.

00:09:42.000 --> 00:09:51.000
Điều đó kết thúc phần giới thiệu của chúng tôi về ID phân cấp và giá trị chuyển đổi, cung cấp nhiều dữ liệu hơn cho các nhà quảng cáo trong khi vẫn giữ nguyên các biện pháp bảo vệ quyền riêng tư của chúng tôi.

00:09:51.000 --> 00:09:57.000
Hãy tập trung vào một lĩnh vực quan trọng khác của dòng chảy phân bổ, chuyển đổi.

00:09:57.000 --> 00:10:03.000
SKAdNetwork ngày nay sử dụng một mô hình chuyển đổi duy nhất.

00:10:03.000 --> 00:10:09.000
Từ thời điểm cài đặt, chúng tôi cập nhật giá trị chuyển đổi để nắm bắt các tương tác khác nhau của người dùng.

00:10:09.000 --> 00:10:15.000
Và sau một khoảng thời gian nhất định trôi qua, chúng tôi sẽ gửi lại bài đăng lên mạng quảng cáo.

00:10:15.000 --> 00:10:18.000
Hãy xem xét một ví dụ.

00:10:18.000 --> 00:10:19.000
Hãy sử dụng Xe tải Thực phẩm.

00:10:19.000 --> 00:10:22.000
Xe tải thực phẩm giúp bạn kiểm soát xe tải thực phẩm của mình.

00:10:22.000 --> 00:10:27.000
Tùy chỉnh, kiểm soát và tạo ra trải nghiệm giao bánh rán độc đáo của riêng bạn.

00:10:27.000 --> 00:10:33.000
Với tư cách là nhà phát triển của Food Truck, tôi muốn biết giá trị chi tiêu quảng cáo của mình.

00:10:33.000 --> 00:10:41.000
Ví dụ về điều này, khi người dùng khởi động Food Truck, tôi sẽ cập nhật giá trị chuyển đổi để đánh dấu điều này.

00:10:41.000 --> 00:10:47.000
Khi họ nhận lô hàng đầu tiên để giao hàng, tôi sẽ cập nhật lại giá trị chuyển đổi.

00:10:47.000 --> 00:10:55.000
Do lô bánh rán này đòi hỏi một khoảng thời gian nhất định để già đi, người dùng sẽ chờ đợi.

00:10:55.000 --> 00:11:04.000
Ở đâu đó trong thời kỳ lão hóa, chuyển đổi được gửi dưới dạng một postback đến cả mạng quảng cáo và tùy chọn cho tôi.

00:11:04.000 --> 00:11:16.000
Tuy nhiên, khi người dùng cuối cùng cũng giao bánh rán, tôi sẽ không có cách nào để đo lường điều này hoặc bất kỳ hành động nào khác của người dùng vì bài đăng lại đã được gửi đi.

00:11:16.000 --> 00:11:21.000
Nói cách khác, sự tái tham gia bị mất.

00:11:21.000 --> 00:11:24.000
Đây là những gì chúng tôi đang thay đổi.

00:11:24.000 --> 00:11:30.000
Chúng tôi đang chuyển từ một postback duy nhất sang ba postbacks.

00:11:30.000 --> 00:11:36.000
Các postback được gắn với các cửa sổ thời gian xác định và được gửi ở cuối các cửa sổ đó.

00:11:36.000 --> 00:11:39.000
Hãy xem lại ví dụ trước đó.

00:11:39.000 --> 00:11:47.000
Như trước đây, người dùng khởi động Xe tải thực phẩm và tiến hành nhận lô hàng đầu tiên để giao hàng.

00:11:47.000 --> 00:11:52.000
Cửa sổ thời gian của postback đầu tiên trôi qua và chúng tôi gửi nó đi.

00:11:52.000 --> 00:11:54.000
Người dùng giao bánh rán.

00:11:54.000 --> 00:12:01.000
Trong khi trước đó, điều này sẽ không được nắm bắt, bây giờ chúng ta thấy mình trong cửa sổ thời gian của postback thứ hai.

00:12:01.000 --> 00:12:05.000
Chúng tôi cập nhật giá trị chuyển đổi để nắm bắt điều này.

00:12:05.000 --> 00:12:10.000
Cửa sổ thời gian của postback thứ hai trôi qua và chúng tôi gửi nó đi.

00:12:10.000 --> 00:12:19.000
Sử dụng các công cụ trong ứng dụng, người dùng tạo ra một công thức bánh rán hoàn toàn mới và sau đó đi ra ngoài một lần nữa để giao một lô mới.

00:12:19.000 --> 00:12:24.000
Cửa sổ thứ ba trôi qua và bưu điện thứ ba được gửi đi.

00:12:24.000 --> 00:12:30.000
Có nhiều cơ hội hơn để đo lường giá trị của việc chuyển đổi và nhận các phép đo này thường xuyên hơn.

00:12:30.000 --> 00:12:37.000
Một vài điểm cần lưu ý về nhiều chuyển đổi: Chỉ bài đăng lại đầu tiên mới nhận được giá trị chuyển đổi tốt.

00:12:37.000 --> 00:12:42.000
Các postback bổ sung có thể mang giá trị chuyển đổi thô.

00:12:42.000 --> 00:12:47.000
Chỉ người chiến thắng và nhà phát triển mới nhận được các bài đăng lại bổ sung.

00:12:47.000 --> 00:12:53.000
Tiếp theo, hãy xem lại các thuộc tính SKAdNetwork cho quảng cáo trên web.

00:12:53.000 --> 00:13:00.000
Chúng tôi biết rằng các ứng dụng của nhà xuất bản hiển thị quảng cáo mở các trang sản phẩm trong App Store.

00:13:00.000 --> 00:13:10.000
App Store, lần lượt, hoạt động với SKAdNetwork để phân bổ cài đặt trong khi cung cấp các biện pháp bảo vệ quyền riêng tư mà người dùng của chúng tôi dựa vào.

00:13:10.000 --> 00:13:15.000
Chúng tôi muốn mở rộng quyền riêng tư tương tự cho các quảng cáo được hiển thị trên các trang web.

00:13:15.000 --> 00:13:18.000
Hãy cùng xem cái này sẽ hoạt động như thế nào.

00:13:18.000 --> 00:13:22.000
Người dùng nhấn vào một liên kết cho một quảng cáo trong Safari.

00:13:22.000 --> 00:13:28.000
Safari ra mắt App Store và truy cập trang sản phẩm cho ứng dụng được quảng cáo.

00:13:28.000 --> 00:13:30.000
Hai điều xảy ra ở đây.

00:13:30.000 --> 00:13:39.000
App Store tìm nạp hiển thị quảng cáo từ máy chủ mạng quảng cáo và người dùng cài đặt ứng dụng.

00:13:39.000 --> 00:13:47.000
Sau đó, mọi thứ trôi chảy như ngày hôm nay, và cuối cùng, SKAdNetwork gửi bài đăng lại.

00:13:47.000 --> 00:13:50.000
Hãy cùng xem liên kết được soạn như thế nào.

00:13:50.000 --> 00:13:56.000
Phần href chứa liên kết App Store cho ứng dụng đang được quảng cáo.

00:13:56.000 --> 00:14:03.000
Ghi công Điểm đến cho Apple biết nơi lấy số lần hiển thị quảng cáo đã ký.

00:14:03.000 --> 00:14:11.000
Và attributionSourceNonce giúp mạng quảng cáo tìm ra ấn tượng quảng cáo chính xác để gửi lại.

00:14:11.000 --> 00:14:18.000
Lưu ý rằng liên kết này có thể được phục vụ trên các trang web của bên thứ nhất và trong các iframe trang web chéo được nhúng.

00:14:18.000 --> 00:14:22.000
Chúng ta hãy xem xét kỹ hơn việc xây dựng URL.

00:14:22.000 --> 00:14:28.000
Chúng tôi trích xuất thành phần eTLD+1 từ đích phân bổ.

00:14:28.000 --> 00:14:34.000
Đối với điều này, sau đó chúng tôi thêm vòng loại nổi tiếng và hai thành phần đường dẫn nữa.

00:14:34.000 --> 00:14:42.000
Điều này cung cấp cho chúng tôi URL mà chúng tôi sẽ thực hiện yêu cầu HTTP POST để có được ấn tượng đã ký.

00:14:42.000 --> 00:14:47.000
Lưu ý rằng giao thức và các thành phần đường dẫn được đánh dấu đã được sửa.

00:14:47.000 --> 00:14:54.000
Bạn, mạng quảng cáo, quyết định giá trị của thành phần máy chủ.

00:14:54.000 --> 00:15:01.000
SKAdNetwork sẽ thực hiện một yêu cầu HTTP POST đến URL được xây dựng như vừa thảo luận.

00:15:01.000 --> 00:15:05.000
Phần thân POST sẽ là JSON.

00:15:05.000 --> 00:15:10.000
Bạn sẽ nhận ra nguồn_nonce giống như trong liên kết quảng cáo gốc.

00:15:10.000 --> 00:15:17.000
Giá trị này là những gì mạng quảng cáo sẽ sử dụng để xác định số lần hiển thị đã ký mà nó muốn phục vụ.

00:15:17.000 --> 00:15:22.000
Hãy xem những gì chúng tôi mong đợi nhận được từ yêu cầu POST này.

00:15:22.000 --> 00:15:28.000
Đây là một ấn tượng đã ký, sẵn sàng để SKAdNetwork tiêu thụ.

00:15:28.000 --> 00:15:31.000
Lưu ý trường miền nguồn trong ấn tượng.

00:15:31.000 --> 00:15:38.000
Đây là liên kết tương tự của ID ứng dụng nguồn trong luồng SKAdNetwork do ứng dụng điều khiển.

00:15:38.000 --> 00:15:52.000
Xem xét cách bắt đầu sử dụng mục nhập mới này vào hệ thống SKAdNetwork, các mạng quảng cáo phải làm như sau: Tạo các phần có thể nhận dạng duy nhất của liên kết và chính liên kết.

00:15:52.000 --> 00:15:59.000
Phơi bày một điểm cuối có khả năng phục vụ các lần hiển thị đã ký tại vị trí được xây dựng như chúng ta đã thảo luận trước đây.

00:15:59.000 --> 00:16:05.000
Cập nhật các máy chủ postback của bạn để phân tích cú pháp và hiểu trường miền nguồn tùy chọn mới.

00:16:05.000 --> 00:16:14.000
Đối với các trang web muốn sử dụng các liên kết đến SKAdNetwork, chỉ cần nhúng các liên kết quảng cáo do mạng quảng cáo của bạn cung cấp cho bạn.

00:16:14.000 --> 00:16:19.000
Đó là phần giới thiệu về phân bổ SKAdNetwork cho quảng cáo trên web.

00:16:19.000 --> 00:16:28.000
Chúng tôi vô cùng vui mừng khi thấy tính năng này được áp dụng trên toàn hệ sinh thái quảng cáo rộng lớn hơn.

00:16:28.000 --> 00:16:34.000
Tiếp theo, chúng tôi sẽ xem xét cách bạn có thể kiểm tra việc triển khai SKAdNetwork của mình.

00:16:34.000 --> 00:16:40.000
Ở cấp độ cao, SKAdNetwork xử lý các lần hiển thị và đăng lại.

00:16:40.000 --> 00:16:49.000
Từ việc làm việc với cộng đồng nhà phát triển của chúng tôi, chúng tôi biết rằng về mặt hiển thị, việc ký kết và cấu hình là những điểm ma sát.

00:16:49.000 --> 00:16:57.000
Và với các bài đăng lại, việc nhận và xác thực chúng theo cách thân thiện với bài kiểm tra là một lĩnh vực cần cải thiện.

00:16:57.000 --> 00:17:08.000
Để giúp cải thiện trải nghiệm của nhà phát triển với SKAdNetwork, chúng tôi đã phát hành các thay đổi về khả năng kiểm tra SKAdNetwork trong Xcode 13.3.

00:17:08.000 --> 00:17:19.000
Điều này có sẵn dưới dạng khung thử nghiệm đơn vị trong StoreKitTest mà rất nhiều bạn đã sử dụng để thử nghiệm các phần khác nhau trong việc triển khai StoreKit của mình.

00:17:19.000 --> 00:17:23.000
Hãy cùng xem xét việc xác nhận một ấn tượng.

00:17:23.000 --> 00:17:28.000
Bạn tạo và cấu hình một phiên bản của SKAdImpression.

00:17:28.000 --> 00:17:40.000
Bạn cung cấp đối tác khóa công khai của khóa riêng được sử dụng để tạo chữ ký và sau đó bạn gọi phương thức xác thực trên phiên bản SKAdTestSession.

00:17:40.000 --> 00:17:49.000
Điều này sẽ xác thực ấn tượng của bạn và gây ra lỗi nếu ấn tượng bị định cấu hình sai hoặc chữ ký không hợp lệ.

00:17:49.000 --> 00:17:53.000
Lĩnh vực chính khác để kiểm tra là việc nhận lại bưu điện.

00:17:53.000 --> 00:17:54.000
Có 2 bước ở đây.

00:17:54.000 --> 00:17:59.000
Bước 1: thêm bài kiểm tra trở lại vào phiên kiểm tra của bạn.

00:17:59.000 --> 00:18:07.000
Bạn sẽ tạo một phiên bản của SKAdTestPostback và định cấu hình nó với các giá trị bạn muốn trong postback của mình.

00:18:07.000 --> 00:18:13.000
Trả tiền đặc biệt cho URL postback, vì đây là nơi postback của bạn sẽ được gửi đến.

00:18:13.000 --> 00:18:18.000
Điều này có thể trỏ đến một máy chủ từ xa hoặc cục bộ.

00:18:18.000 --> 00:18:25.000
Sau đó, bạn sẽ thêm điều này vào phiên kiểm tra của mình bằng cách sử dụng phương pháp setPostbacks trên SKAdTestSession.

00:18:25.000 --> 00:18:29.000
Bước 2 là thực sự gửi lại bưu điện.

00:18:29.000 --> 00:18:38.000
Tất cả những gì bạn cần làm ở đây là gọi phương thức flushPostbacks trên SKAdTestSession và postback của bạn sẽ bị tắt trên đường đi.

00:18:38.000 --> 00:18:47.000
Lưu ý rằng SKAdTestSession sẽ gửi postback của bạn qua mạng đến máy chủ mà bạn đã chỉ định khi soạn postback của mình.

00:18:47.000 --> 00:18:56.000
Đây là một vài điều sẽ đến với khả năng kiểm tra SKAdNetwork vào cuối năm nay: Hỗ trợ cho trường định danh nguồn mới.

00:18:56.000 --> 00:18:59.000
Hỗ trợ các giá trị chuyển đổi tốt và thô.

00:18:59.000 --> 00:19:03.000
Hỗ trợ kiểm tra nhiều chuyển đổi.

00:19:03.000 --> 00:19:11.000
Và đó là một cái nhìn nhanh về những thay đổi khả năng kiểm tra SKAdNetwork lần đầu tiên có sẵn trong Xcode 13.3.

00:19:11.000 --> 00:19:19.000
Hôm nay, chúng ta đã nói về ID phân cấp và giá trị chuyển đổi, nhằm mục đích cung cấp thêm dữ liệu cho bạn sớm hơn.

00:19:19.000 --> 00:19:26.000
Và sau đó chúng tôi đã nói về nhiều chuyển đổi, cho phép bạn đo lường mức độ tương tác lại trong một khoảng thời gian dài hơn.

00:19:26.000 --> 00:19:36.000
Sau đó, chúng tôi đã nói về phân bổ dựa trên liên kết và cách chúng tôi thêm cầu nối vào SKAdNetwork, mang theo các biện pháp bảo vệ quyền riêng tư tương tự.

00:19:36.000 --> 00:19:42.000
Và chúng tôi đã kết thúc bằng cách nói về khả năng kiểm tra SKAdNetwork trong Xcode.

00:19:42.000 --> 00:19:47.000
Và điều đó kết thúc hành trình của chúng tôi thông qua SKAdNetwork 4.0.

00:19:47.000 --> 00:19:54.000
Cuối cùng, mọi thứ chúng tôi xây dựng đều được thúc đẩy bởi phản hồi từ cộng đồng các nhà phát triển tuyệt vời của chúng tôi.

00:19:54.000 --> 00:20:04.000
Thật vô cùng thỏa mãn và khiêm tốn khi nghe về trải nghiệm của bạn khi xây dựng trải nghiệm quảng cáo đầu tiên về quyền riêng tư cho người dùng của chúng tôi.

00:20:04.000 --> 00:20:06.000
Cảm ơn bạn.

00:20:06.000 --> 23:59:59.000
♪ ♪

