WEBVTT

00:00:00.000 --> 00:00:03.000
♪ nhạc cụ hip hop ♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:13.000
Chào mừng đến với phiên "Quản lý thiết bị khai báo ứng dụng".

00:00:13.000 --> 00:00:18.000
Tên tôi là Cyrus Daboo, và tôi là một kỹ sư trong nhóm Quản lý Thiết bị.

00:00:18.000 --> 00:00:24.000
Tôi ở đây để nói với bạn về các tính năng mới thú vị trong quản lý thiết bị khai báo.

00:00:24.000 --> 00:00:37.000
Tại WWDC21, đồng nghiệp Melissa của tôi đã giới thiệu quản lý thiết bị khai báo, một mô hình mới để quản lý các thiết bị Apple, hình dung lại chính giao thức MDM.

00:00:37.000 --> 00:00:45.000
Như chúng ta đã biết trong phiên đó, quản lý thiết bị khai báo rất mạnh mẽ vì nó cho phép các thiết bị tự chủ và chủ động.

00:00:45.000 --> 00:00:54.000
Thiết bị này tự động, vì nó phản ứng với những thay đổi trạng thái của chính nó và sau đó áp dụng logic quản lý cho chính nó, mà không cần nhắc nhở từ máy chủ.

00:00:54.000 --> 00:01:06.000
Thiết bị chủ động, với kênh trạng thái báo cáo không đồng bộ cho máy chủ khi những thay đổi trạng thái quan trọng xảy ra, tránh sự cần thiết của máy chủ để thăm dò ý kiến các thiết bị.

00:01:06.000 --> 00:01:13.000
Có hai yếu tố chính trong mô hình dữ liệu quản lý thiết bị khai báo: khai báo và trạng thái.

00:01:13.000 --> 00:01:20.000
Khai báo bao gồm kích hoạt và vị ngữ, cấu hình, tài sản và các loại quản lý.

00:01:20.000 --> 00:01:24.000
Và trạng thái bao gồm các mục trạng thái và báo cáo trạng thái.

00:01:24.000 --> 00:01:32.000
Hãy dành một chút thời gian để nói về lý do tại sao điều này quan trọng, ý nghĩa của nó đối với bạn và các tổ chức sử dụng sản phẩm của bạn.

00:01:32.000 --> 00:01:50.000
Chúng tôi đã tạo ra công nghệ này để hỗ trợ các chiến lược quản lý phức tạp mới, nâng cao trải nghiệm người dùng tổng thể của các thiết bị được quản lý, giảm bớt các nhiệm vụ lặp đi lặp lại và tẻ nhạt của quản trị viên CNTT và trao quyền cho các thiết bị trở thành trình điều khiển trong trạng thái quản lý của chính chúng.

00:01:50.000 --> 00:01:58.000
Đối với bạn, với tư cách là nhà phát triển giải pháp quản lý thiết bị, cách tiếp cận khai báo cho phép máy chủ của bạn nhẹ và phản ứng.

00:01:58.000 --> 00:02:08.000
Và với mô hình dữ liệu khai báo lập bản đồ chặt chẽ hơn về cách các tổ chức được cấu trúc, điều đó có nghĩa là những thay đổi đối với thiết bị trở nên trực quan hơn.

00:02:08.000 --> 00:02:24.000
Báo cáo trạng thái cung cấp một kênh phản hồi phong phú, cho phép máy chủ của bạn giám sát các thiết bị chặt chẽ hơn và trình bày thông tin thích hợp theo cách kịp thời và đáng tin cậy hơn mà không cần các chiến lược phức tạp được sử dụng để thực hiện bỏ phiếu.

00:02:24.000 --> 00:02:37.000
Tất cả những điều này có nghĩa là một nỗ lực phát triển đơn giản hơn, cho phép bạn tập trung vào các tính năng quản lý thiết bị làm tăng giá trị ở những nơi quan trọng nhất và tạo ra một giải pháp mà khách hàng của bạn sẽ yêu thích.

00:02:37.000 --> 00:02:44.000
Đối với quản trị viên CNTT, cách tiếp cận khai báo truyền cảm hứng cho sự tự tin hơn rằng thiết bị đang ở trạng thái mong đợi.

00:02:44.000 --> 00:02:55.000
Và trong những tình huống không có, nó ở trạng thái an toàn để bảo vệ bất kỳ dữ liệu tổ chức nhạy cảm nào, ngay cả khi kết nối với máy chủ bị mất.

00:02:55.000 --> 00:03:07.000
Nó cung cấp phản hồi quan trọng từ các thiết bị thông qua báo cáo trạng thái, điều đó cũng cải thiện hiệu quả cho quản trị viên thông qua việc sử dụng ít tài nguyên như băng thông mạng.

00:03:07.000 --> 00:03:20.000
Đối với người dùng của tổ chức, quản lý thiết bị trở thành một trải nghiệm nhạy bén và đáng tin cậy hơn với việc giới thiệu nhanh hơn, thời gian khôi phục nhanh hơn và hỗ trợ tốt hơn từ tổ chức của họ.

00:03:20.000 --> 00:03:36.000
Với tất cả những lợi ích này, hãy biết rằng trọng tâm của các tính năng giao thức trong tương lai sẽ là quản lý thiết bị khai báo, khiến việc áp dụng quản lý thiết bị khai báo trong các sản phẩm của mình ngày càng quan trọng hơn.

00:03:36.000 --> 00:03:46.000
Để có phần giới thiệu chuyên sâu về quản lý thiết bị khai báo và các bước cần thiết để áp dụng nó, hãy đảm bảo bạn xem video phiên WWDC21.

00:03:46.000 --> 00:03:57.000
Trong bản phát hành này, chúng tôi có ba lĩnh vực trọng tâm: mở rộng phạm vi quản lý thiết bị khai báo, tăng cường báo cáo trạng thái và tăng cường vị ngữ.

00:03:57.000 --> 00:04:02.000
Hãy bắt đầu với việc mở rộng phạm vi quản lý thiết bị khai báo.

00:04:02.000 --> 00:04:08.000
Khi quản lý thiết bị khai báo được giới thiệu, nó chỉ được hỗ trợ trên iOS với đăng ký người dùng.

00:04:08.000 --> 00:04:25.000
Giờ đây, quản lý thiết bị khai báo có sẵn cho mọi loại đăng ký mà MDM hỗ trợ: đăng ký thiết bị tự động, bao gồm các thiết bị được giám sát; đăng ký dựa trên hồ sơ; và đăng ký người dùng dựa trên hồ sơ và tài khoản.

00:04:25.000 --> 00:04:30.000
Quản lý thiết bị khai báo hiện cũng có sẵn trên iPad được chia sẻ.

00:04:30.000 --> 00:04:38.000
Trong iOS 16, giờ đây người dùng có thể tìm thấy cấu hình trong chế độ xem chi tiết hồ sơ MDM trong ứng dụng Cài đặt.

00:04:38.000 --> 00:04:44.000
Nhấn vào hàng Cấu hình sẽ hiển thị chi tiết về các cấu hình đang hoạt động.

00:04:44.000 --> 00:04:53.000
Và tôi cũng vui mừng thông báo rằng quản lý thiết bị khai báo có sẵn trên mọi nền tảng mà MDM hỗ trợ.

00:04:53.000 --> 00:05:01.000
macOS Ventura hiện hỗ trợ quản lý thiết bị khai báo, cho tất cả các loại đăng ký MDM được hỗ trợ trên macOS.

00:05:01.000 --> 00:05:08.000
tvOS 16 hiện hỗ trợ quản lý thiết bị khai báo cho các loại đăng ký thiết bị MDM.

00:05:08.000 --> 00:05:18.000
Khi được hệ điều hành hỗ trợ, cùng một bộ khai báo và trạng thái có sẵn trên iOS cũng có sẵn trên macOS và tvOS.

00:05:18.000 --> 00:05:26.000
Trên macOS, một phần Cấu hình có mặt trong chế độ xem chi tiết hồ sơ MDM, tiết lộ các cấu hình đang hoạt động.

00:05:26.000 --> 00:05:34.000
Điều tương tự cũng xảy ra với tvOS, trong đó phần Cấu hình có mặt trong chế độ xem chi tiết hồ sơ MDM.

00:05:34.000 --> 00:05:41.000
Một điều cuối cùng cần lưu ý ở đây: cả hai thiết bị macOS và Shared iPad đều có hai kênh MDM.

00:05:41.000 --> 00:05:44.000
Đây là thiết bị và kênh người dùng.

00:05:44.000 --> 00:05:52.000
Kênh thiết bị cho phép quản lý trạng thái cấp thiết bị, trong khi kênh người dùng nhắm mục tiêu trạng thái quản lý cho những người dùng cụ thể.

00:05:52.000 --> 00:05:58.000
Để sử dụng quản lý thiết bị khai báo trên bất kỳ kênh nào, nó phải được bật riêng cho kênh đó.

00:05:58.000 --> 00:06:03.000
Điều đó có nghĩa là gửi lệnh DeclarativeManagement trên kênh tương ứng.

00:06:03.000 --> 00:06:14.000
Ngoài ra, các báo cáo trạng thái quản lý thiết bị khai báo được tạo riêng cho từng kênh, vì vậy chúng cũng cần được giám sát riêng biệt.

00:06:14.000 --> 00:06:19.000
Bây giờ đến lĩnh vực trọng tâm thứ hai của chúng tôi: báo cáo trạng thái.

00:06:19.000 --> 00:06:23.000
Hãy xem xét nhanh các báo cáo trạng thái.

00:06:23.000 --> 00:06:29.000
Các thiết bị có thể báo cáo từng bước trạng thái cho máy chủ, cho các mục trạng thái đã đăng ký.

00:06:29.000 --> 00:06:39.000
Thiết bị theo dõi các phản hồi thành công từ máy chủ để đảm bảo cập nhật trạng thái đáng tin cậy và không bị bỏ lỡ trong trường hợp kết nối mạng hoặc các loại sự cố khác.

00:06:39.000 --> 00:06:42.000
Báo cáo trạng thái làm cho thiết bị chủ động.

00:06:42.000 --> 00:06:47.000
Không cần máy chủ liên tục thăm dò thiết bị để theo dõi các thay đổi của trạng thái.

00:06:47.000 --> 00:06:56.000
Trong iOS 15, chúng tôi đã giới thiệu một tập hợp các mục trạng thái cho các thuộc tính của thiết bị, chẳng hạn như loại kiểu máy và phiên bản hệ điều hành.

00:06:56.000 --> 00:07:08.000
Đối với bản phát hành này, chúng tôi đang mở rộng trạng thái trong ba lĩnh vực: trạng thái mật mã, tài khoản được cài đặt theo cấu hình và ứng dụng được cài đặt MDM.

00:07:08.000 --> 00:07:12.000
Hãy bắt đầu với trạng thái mật mã.

00:07:12.000 --> 00:07:16.000
Trong iOS 15, chúng tôi đã giới thiệu cấu hình chính sách mật mã.

00:07:16.000 --> 00:07:28.000
Có thể có một số độ trễ giữa chính sách đang được áp dụng và mật mã trở nên tuân thủ khi được người dùng thay đổi, giống như có với hồ sơ chính sách mật mã MDM.

00:07:28.000 --> 00:07:34.000
Vì vậy, các máy chủ MDM phải thăm dò thiết bị để xác định khi nào mật mã trở nên tuân thủ.

00:07:34.000 --> 00:07:40.000
Nhưng với các mục trạng thái mật mã quản lý thiết bị khai báo mới, không cần phải làm điều đó.

00:07:40.000 --> 00:07:48.000
Chúng tôi đã thêm hai mục trạng thái: Passcode.is-compliant và passcode.is-present.

00:07:48.000 --> 00:07:57.000
Tuân thủ cho biết mật mã có tuân thủ tất cả các chính sách mật mã được áp dụng thông qua hồ sơ hoặc cấu hình MDM hay không.

00:07:57.000 --> 00:08:05.000
Các mục trạng thái này có các giá trị Boolean phản ánh các thuộc tính tương đương có thể được truy xuất thông qua các truy vấn MDM.

00:08:05.000 --> 00:08:08.000
Hãy cùng khám phá một hành vi máy chủ điển hình.

00:08:08.000 --> 00:08:14.000
Thông thường, một tổ chức có trạng thái nhạy cảm về bảo mật để áp dụng cho một thiết bị.

00:08:14.000 --> 00:08:21.000
Ví dụ, cấu hình VPN hoặc Wi-Fi để cho phép truy cập vào các mạng được bảo vệ.

00:08:21.000 --> 00:08:31.000
Trạng thái đó chỉ nên hoạt động trên thiết bị, khi có chính sách mật mã mạnh và mật mã tuân thủ chính sách đó.

00:08:31.000 --> 00:08:41.000
Với MDM truyền thống, một máy chủ phải gửi hồ sơ chính sách mật mã sau đó thăm dò ý kiến thiết bị, để chờ mật mã trở nên tuân thủ khi người dùng thay đổi nó.

00:08:41.000 --> 00:08:48.000
Ban đầu mật mã có thể không tuân thủ, vì vậy hồ sơ Wi-Fi không thể được gửi đi.

00:08:48.000 --> 00:08:52.000
Cuối cùng, người dùng thay đổi mật mã để tuân thủ nó.

00:08:52.000 --> 00:09:04.000
Trong cuộc thăm dò tiếp theo của máy chủ, nó phát hiện trạng thái tuân thủ đã thay đổi và xác định có thể gửi hồ sơ Wi-Fi, sau đó được cài đặt trên thiết bị.

00:09:04.000 --> 00:09:13.000
Quản lý thiết bị khai báo loại bỏ nhu cầu máy chủ thăm dò ý kiến bằng cách sử dụng vị ngữ kích hoạt được kích hoạt bởi trạng thái tuân thủ mật mã.

00:09:13.000 --> 00:09:25.000
Máy chủ gửi cả chính sách mật mã và hồ sơ Wi-Fi dưới dạng cấu hình, với cấu hình Wi-Fi gắn liền với kích hoạt dựa trên việc tuân thủ mật mã.

00:09:25.000 --> 00:09:31.000
Cấu hình mật mã được kích hoạt ngay lập tức và áp dụng chính sách mật mã mạnh mẽ.

00:09:31.000 --> 00:09:40.000
Ban đầu, mật mã có thể không tuân thủ, vì vậy vị ngữ kích hoạt được đánh giá là sai và cấu hình Wi-Fi không được kích hoạt.

00:09:40.000 --> 00:09:44.000
Tại một số thời điểm, người dùng cập nhật mật mã để tuân thủ.

00:09:44.000 --> 00:09:54.000
Điều này kích hoạt đánh giá lại các kích hoạt và vị ngữ hiện được đánh giá là đúng, dẫn đến cấu hình Wi-Fi được kích hoạt.

00:09:54.000 --> 00:10:03.000
Tất cả điều này xảy ra mà không có bất kỳ sự can thiệp nào từ máy chủ, và trên thực tế có thể xảy ra mà không có bất kỳ kết nối nào với máy chủ.

00:10:03.000 --> 00:10:11.000
Máy chủ tự động nhận báo cáo trạng thái từ thiết bị khi cấu hình kích hoạt, vì vậy nó biết khi nào thay đổi diễn ra.

00:10:11.000 --> 00:10:24.000
Điều này minh họa cách chúng tôi đã chuyển thành công logic kinh doanh từ máy chủ sang thiết bị, để tránh sự cần thiết phải thăm dò ý kiến và có được hành vi thiết bị nhạy bén và đáng tin cậy hơn.

00:10:24.000 --> 00:10:27.000
Bây giờ, hãy chuyển sang trạng thái tài khoản.

00:10:27.000 --> 00:10:34.000
Trong iOS 15, chúng tôi đã giới thiệu cấu hình tài khoản để cài đặt các loại tài khoản khác nhau trên một thiết bị.

00:10:34.000 --> 00:10:41.000
Đây thường là các tài khoản tổ chức, cho phép người dùng truy cập vào dữ liệu tổ chức.

00:10:41.000 --> 00:10:51.000
Thật hữu ích cho quản trị viên khi biết khi nào các tài khoản đã được cài đặt thành công và chúng đang ở trạng thái nào, để giúp hỗ trợ những người dùng có thể gặp sự cố.

00:10:51.000 --> 00:10:58.000
Bản phát hành này bổ sung tám mục trạng thái tài khoản cho thư, lịch và các loại tài khoản khác.

00:10:58.000 --> 00:11:08.000
Lưu ý, trạng thái đó chỉ được báo cáo cho các tài khoản được cài đặt theo cấu hình và sẽ không bao gồm các tài khoản được tạo thủ công hoặc được cài đặt thông qua hồ sơ MDM.

00:11:08.000 --> 00:11:18.000
Mỗi mục trạng thái mới tương ứng với một loại cấu hình tài khoản, với trạng thái cho các tài khoản thư đến và đi được báo cáo riêng.

00:11:18.000 --> 00:11:26.000
Mỗi mục trạng thái mới sử dụng một loại đối tượng JSON khác nhau, để thể hiện trạng thái của loại tài khoản tương ứng.

00:11:26.000 --> 00:11:32.000
Đây là các ví dụ về mục trạng thái thư đến và mục trạng thái lịch đã đăng ký.

00:11:32.000 --> 00:11:42.000
Giá trị của khóa định danh là một định danh duy nhất cho một đối tượng trong mảng các đối tượng mục trạng thái - nhiều hơn về điều này trong một phút.

00:11:42.000 --> 00:11:55.000
Giá trị của khóa định danh khai báo, khớp với giá trị thuộc tính định danh của cấu hình đã cài đặt tài khoản, giúp dễ dàng tham chiếu chéo đối tượng mục trạng thái và cấu hình liên quan của nó.

00:11:55.000 --> 00:12:01.000
Hai khóa này luôn hiện diện trong tất cả các loại đối tượng mục trạng thái tài khoản.

00:12:01.000 --> 00:12:03.000
Các khóa khác dành riêng cho loại tài khoản.

00:12:03.000 --> 00:12:11.000
Ví dụ: tên máy chủ và cổng cho máy chủ thư hoặc URL lịch cho lịch đã đăng ký.

00:12:11.000 --> 00:12:19.000
Bản phát hành này giới thiệu các mục trạng thái có giá trị là một mảng, để hỗ trợ báo cáo trên một hoặc nhiều tài khoản cùng loại.

00:12:19.000 --> 00:12:22.000
Các giá trị mảng như vậy có hành vi đặc biệt.

00:12:22.000 --> 00:12:30.000
Mỗi mục trong mảng là một đối tượng JSON với cùng một lược đồ được sử dụng cho tất cả các đối tượng trong một mảng duy nhất.

00:12:30.000 --> 00:12:37.000
Mỗi loại đối tượng luôn có một khóa nhận dạng, đóng vai trò là khóa chính để định vị các đối tượng trong mảng.

00:12:37.000 --> 00:12:42.000
Các khóa khác có mặt và gắn liền với loại trạng thái cơ bản đang được báo cáo.

00:12:42.000 --> 00:12:52.000
Để đảm bảo khả năng tương thích chuyển tiếp với bất kỳ khóa nào được thêm vào trong các bản phát hành hệ điều hành trong tương lai, máy chủ của bạn phải chấp nhận các khóa không xác định trong các đối tượng mảng.

00:12:52.000 --> 00:13:01.000
Những thay đổi đối với giá trị mảng luôn được báo cáo từng bước cho máy chủ trên cơ sở mỗi đối tượng, vì lý do hiệu suất.

00:13:01.000 --> 00:13:05.000
Hãy xem qua một ví dụ cho thấy tính năng mới này hoạt động như thế nào.

00:13:05.000 --> 00:13:10.000
Trong ví dụ này, máy chủ gửi hai cấu hình tài khoản thư đến thiết bị.

00:13:10.000 --> 00:13:16.000
Cả hai đều đang hoạt động dẫn đến hai tài khoản thư hiện diện trên thiết bị.

00:13:16.000 --> 00:13:21.000
Máy chủ hiện gửi đăng ký trạng thái cho mục trạng thái tài khoản thư.

00:13:21.000 --> 00:13:29.000
Khi đăng ký được kích hoạt, trạng thái cho các tài khoản được thu thập và thiết bị sẽ gửi báo cáo trạng thái đến máy chủ.

00:13:29.000 --> 00:13:38.000
Báo cáo trạng thái sẽ bao gồm hai đối tượng trạng thái tài khoản trong mảng trạng thái, cung cấp cho máy chủ một bức tranh hoàn chỉnh về những gì hiện có trên thiết bị.

00:13:38.000 --> 00:13:42.000
Mỗi đối tượng mảng có một mã định danh khác nhau.

00:13:42.000 --> 00:13:49.000
Sau khi xử lý báo cáo này, máy chủ có trạng thái cho hai tài khoản thư, khớp với những gì có trên thiết bị.

00:13:49.000 --> 00:14:03.000
Khi máy chủ thêm tài khoản thư trên thiết bị bằng cách gửi cấu hình mới, mục trạng thái trên thiết bị có một đối tượng mới được thêm vào giá trị mảng của nó và một báo cáo trạng thái khác được gửi đến máy chủ.

00:14:03.000 --> 00:14:05.000
Chỉ có mặt hàng mới được báo cáo.

00:14:05.000 --> 00:14:15.000
Giá trị của khóa nhận dạng không khớp với bất kỳ khóa nào mà máy chủ đã có, vì vậy máy chủ có thể suy ra điều này tương ứng với một tài khoản mới.

00:14:15.000 --> 00:14:25.000
Sau khi xử lý báo cáo này, máy chủ có trạng thái cho ba tài khoản thư, hai tài khoản ban đầu và tài khoản mới, một lần nữa khớp chính xác với những gì có trên thiết bị.

00:14:25.000 --> 00:14:41.000
Khi trạng thái tài khoản thay đổi, chẳng hạn như khi người dùng chuyển đổi trạng thái bật thư hoặc ghi chú, mục trạng thái trên thiết bị sẽ có một đối tượng được cập nhật trong giá trị mảng của nó và một lần nữa, báo cáo trạng thái được gửi đến máy chủ.

00:14:41.000 --> 00:14:43.000
Chỉ có mục đã thay đổi được báo cáo.

00:14:43.000 --> 00:14:47.000
Trong trường hợp này, người dùng đã tắt tính năng ghi chú cho tài khoản.

00:14:47.000 --> 00:14:56.000
Giá trị của khóa nhận dạng khớp với giá trị mà máy chủ đã có, vì vậy máy chủ có thể suy ra rằng đây là bản cập nhật cho tài khoản hiện có.

00:14:56.000 --> 00:15:02.000
Do đó, nó thay thế đối tượng mảng mục trạng thái hiện có bằng đối tượng mới.

00:15:02.000 --> 00:15:09.000
Sau khi xử lý báo cáo này, máy chủ có trạng thái cho ba tài khoản thư, nhưng một tài khoản đã thay đổi.

00:15:09.000 --> 00:15:21.000
Khi cấu hình tài khoản bị xóa khỏi thiết bị, mục trạng thái trên thiết bị có đối tượng tương ứng được đánh dấu để xóa và một báo cáo trạng thái khác được gửi đến máy chủ.

00:15:21.000 --> 00:15:24.000
Chỉ có mục bị xóa mới được báo cáo.

00:15:24.000 --> 00:15:37.000
Để chỉ ra việc loại bỏ, đối tượng mục mảng chỉ chứa hai khóa: khóa nhận dạng - có giá trị khớp với khóa mà máy chủ đã có - và khóa đã xóa, được đặt thành giá trị đúng.

00:15:37.000 --> 00:15:44.000
Điều này cho phép máy chủ cập nhật biểu diễn trạng thái thiết bị bằng cách xóa mục hiện có.

00:15:44.000 --> 00:15:52.000
Sau khi xử lý báo cáo này, máy chủ chỉ có trạng thái cho hai tài khoản thư, khớp chính xác với trạng thái của thiết bị.

00:15:52.000 --> 00:15:55.000
Một điểm cuối cùng về báo cáo tình trạng.

00:15:55.000 --> 00:16:01.000
Thiết bị sẽ giới hạn tốc độ gửi báo cáo trạng thái để tránh các vấn đề về hiệu suất.

00:16:01.000 --> 00:16:10.000
Thiết bị tổng hợp các thay đổi đối với các mục trạng thái trong một khoảng thời gian thay đổi lên đến một phút trước khi gửi báo cáo trạng thái đến máy chủ.

00:16:10.000 --> 00:16:15.000
Điều này có nghĩa là trạng thái được báo cáo nhanh chóng, nhưng nó không phải là ngay lập tức.

00:16:15.000 --> 00:16:24.000
Tiếp theo, hãy chuyển sự chú ý của chúng ta sang giải quyết vấn đề cổ chai MDM lâu năm: giám sát trạng thái cài đặt ứng dụng.

00:16:24.000 --> 00:16:32.000
Các máy chủ MDM thường cài đặt các ứng dụng trên các thiết bị để cung cấp cho người dùng quyền truy cập vào các công cụ cần thiết cho công việc hoặc giáo dục của họ.

00:16:32.000 --> 00:16:37.000
Logic phía máy chủ thường được quyết định bởi việc một ứng dụng có được cài đặt thành công hay không.

00:16:37.000 --> 00:16:48.000
Vì vậy, các máy chủ MDM cần theo dõi tiến trình cài đặt ứng dụng và theo dõi khả năng người dùng xóa các ứng dụng được quản lý trên thiết bị của họ.

00:16:48.000 --> 00:16:59.000
Hiện tại, các máy chủ MDM có thể sử dụng các lệnh InstalledApplicationList hoặc ManagedApplicationList để thăm dò ý kiến thiết bị để quan sát tiến trình cài đặt ứng dụng.

00:16:59.000 --> 00:17:06.000
Chúng tôi có thể tránh bỏ phiếu bằng cách yêu cầu thiết bị chủ động gửi tiến trình cài đặt ứng dụng đến máy chủ.

00:17:06.000 --> 00:17:12.000
Và công cụ để làm điều đó là báo cáo trạng thái quản lý thiết bị khai báo.

00:17:12.000 --> 00:17:15.000
Bản phát hành này thêm một mục trạng thái mdm.app.

00:17:15.000 --> 00:17:22.000
Giá trị của nó là một mảng các đối tượng mà mỗi đối tượng đại diện cho một ứng dụng đã được cài đặt bởi máy chủ MDM.

00:17:22.000 --> 00:17:28.000
Vì giá trị này là một mảng, nó được báo cáo từng bước, sử dụng quy trình được mô tả trước đó.

00:17:28.000 --> 00:17:35.000
Lưu ý rằng chỉ các ứng dụng được cài đặt bởi MDM mới được báo cáo ở đây, ngay cả trên các thiết bị được giám sát.

00:17:35.000 --> 00:17:40.000
Báo cáo trạng thái này bao gồm một mục trạng thái cho một ứng dụng đã cài đặt xong.

00:17:40.000 --> 00:17:48.000
Khóa nhận dạng là mã định danh duy nhất cho đối tượng mục mảng và trong trường hợp này là mã định danh gói của ứng dụng.

00:17:48.000 --> 00:17:51.000
Khóa tên cho biết tên của ứng dụng.

00:17:51.000 --> 00:17:57.000
Ba khóa phiên bản cung cấp số nhận dạng phiên bản bình thường, ngắn và bên ngoài.

00:17:57.000 --> 00:18:02.000
Và khóa trạng thái là một bảng liệt kê cho biết giai đoạn cài đặt hiện tại cho ứng dụng.

00:18:02.000 --> 00:18:10.000
Các giá trị của các khóa này tương ứng với các mục tương đương trong phản hồi lệnh MDM ManagedApplicationList.

00:18:10.000 --> 00:18:18.000
Với tất cả thông tin này, máy chủ có thể ngay lập tức xác định ứng dụng nào đang được báo cáo và trạng thái của nó là gì.

00:18:18.000 --> 00:18:22.000
Hãy xem xét một ví dụ về luồng dữ liệu khi một ứng dụng cài đặt.

00:18:22.000 --> 00:18:28.000
Ở phía bên phải, chúng tôi có một thiết bị iOS 16 đang được quản lý bởi một máy chủ MDM.

00:18:28.000 --> 00:18:37.000
Máy chủ đã bật quản lý thiết bị khai báo và gửi đăng ký trạng thái cho mục trạng thái ứng dụng do MDM cài đặt.

00:18:37.000 --> 00:18:43.000
Bước tiếp theo cho máy chủ là cài đặt một ứng dụng bằng lệnh MDM InstallApplication.

00:18:43.000 --> 00:18:52.000
Vì đây là đăng ký người dùng, cần có sự chấp thuận của người dùng để cài đặt ứng dụng, vì vậy lời nhắc xuất hiện khi thiết bị xử lý lệnh cài đặt ứng dụng.

00:18:52.000 --> 00:18:58.000
Tại thời điểm này, tiến trình cài đặt bị tạm dừng, chờ người dùng nhập.

00:18:58.000 --> 00:19:10.000
Thiết bị sẽ gửi báo cáo trạng thái đến máy chủ và sẽ chứa một đối tượng trạng thái ứng dụng được cài đặt MDM duy nhất, với ID gói của ứng dụng và trạng thái được đặt thành nhắc nhở.

00:19:10.000 --> 00:19:16.000
Tại một số thời điểm, người dùng nhấn vào nút Cài đặt và cài đặt ứng dụng bắt đầu trên thiết bị.

00:19:16.000 --> 00:19:28.000
Khi quá trình cài đặt tiến hành, một báo cáo trạng thái khác sẽ được gửi, lần này với trạng thái ứng dụng được đặt thành cài đặt; cho biết ứng dụng đang được tải xuống và cài đặt.

00:19:28.000 --> 00:19:32.000
Cuối cùng, ứng dụng hoàn tất cài đặt và sẵn sàng để sử dụng.

00:19:32.000 --> 00:19:41.000
Tại thời điểm đó, một báo cáo trạng thái khác sẽ được gửi với trạng thái ứng dụng được đặt thành được quản lý, cho biết ứng dụng đã được cài đặt và quản lý đúng cách.

00:19:41.000 --> 00:19:46.000
Bây giờ, giả sử người dùng xóa ứng dụng trên thiết bị theo cách thủ công.

00:19:46.000 --> 00:19:53.000
Một lần nữa, một báo cáo trạng thái sẽ được gửi, lần này với trạng thái ứng dụng được đặt thành quản lý nhưng chưa được cài đặt.

00:19:53.000 --> 00:20:00.000
Điều này cho thấy ứng dụng không còn được cài đặt nữa, nhưng trạng thái quản lý của nó vẫn đang được theo dõi trên thiết bị.

00:20:00.000 --> 00:20:04.000
Giả sử máy chủ muốn xóa trạng thái quản lý ứng dụng.

00:20:04.000 --> 00:20:09.000
Nó thực hiện điều đó bằng cách gửi lệnh RemoveApplication đến thiết bị.

00:20:09.000 --> 00:20:17.000
Điều đó loại bỏ trạng thái quản lý được duy trì nội bộ và nếu ứng dụng vẫn còn, nó cũng sẽ bị xóa.

00:20:17.000 --> 00:20:22.000
Một báo cáo trạng thái khác sẽ được gửi cùng với đối tượng ứng dụng được đánh dấu là đã xóa khỏi mảng trạng thái ứng dụng.

00:20:22.000 --> 00:20:35.000
Điều này minh họa sức mạnh của mục trạng thái MDM mới để giúp cải thiện khả năng phản hồi và độ tin cậy của việc cài đặt ứng dụng và chỉ mất một vài bước để thực hiện.

00:20:35.000 --> 00:20:40.000
Bây giờ, hãy xem xét lĩnh vực trọng tâm thứ ba của chúng ta: vị ngữ.

00:20:40.000 --> 00:20:43.000
Hãy nhanh chóng xem lại các vị ngữ kích hoạt.

00:20:43.000 --> 00:20:52.000
Kích hoạt có thể bao gồm một vị ngữ tùy chọn xác định xem các cấu hình được tham chiếu trong kích hoạt có được áp dụng cho thiết bị hay không.

00:20:52.000 --> 00:20:57.000
Các vị ngữ có thể tham chiếu các mục trạng thái để cho phép kiểm tra các giá trị của các mục trạng thái đó.

00:20:57.000 --> 00:21:06.000
Khi một mục trạng thái được tham chiếu trong một vị ngữ thay đổi, thiết bị sẽ xử lý lại tất cả các kích hoạt, đánh giá lại bất kỳ vị ngữ nào.

00:21:06.000 --> 00:21:13.000
Các vị ngữ được chỉ định dưới dạng một chuỗi bằng cách sử dụng cú pháp NSPredicate được ghi lại trên trang web Nhà phát triển Apple.

00:21:13.000 --> 00:21:23.000
Để hỗ trợ các biểu thức vị ngữ phức tạp hơn, chúng tôi đã mở rộng cú pháp vị ngữ để giúp phát hiện các mục trạng thái trong biểu thức dễ dàng hơn.

00:21:23.000 --> 00:21:30.000
Cú pháp mới đặt tên mục trạng thái bên trong một thuật ngữ @status trong chuỗi vị ngữ.

00:21:30.000 --> 00:21:38.000
Trong ví dụ, mục trạng thái số sê-ri xuất hiện trong biểu thức vị ngữ, sử dụng cú pháp mới.

00:21:38.000 --> 00:21:47.000
Cú pháp trước đó sẽ tiếp tục hoạt động để tương thích ngược, tuy nhiên, bây giờ nó đã bị phản đối, vì vậy vui lòng chuyển sang cú pháp mới.

00:21:47.000 --> 00:21:52.000
Hãy xem xét cách các vị ngữ có thể được sử dụng với các giá trị mảng mục trạng thái.

00:21:52.000 --> 00:21:59.000
Như chúng tôi vừa mô tả, bây giờ chúng tôi có các giá trị mục trạng thái là mảng cho các tài khoản và các mục trạng thái ứng dụng do MDM cài đặt.

00:21:59.000 --> 00:22:05.000
Thật hữu ích khi có thể xác định kích hoạt trên một mục trong mảng.

00:22:05.000 --> 00:22:14.000
Ví dụ, chúng tôi có thể muốn kích hoạt được kích hoạt khi một ứng dụng có mã định danh gói cụ thể được cài đặt và quản lý trên thiết bị.

00:22:14.000 --> 00:22:20.000
NSPredicate có một thuật ngữ SUBQUERY có thể được sử dụng để hoạt động trên các mảng.

00:22:20.000 --> 00:22:26.000
Biểu thức NSPredicate này sử dụng SUBQUERY nhắm mục trạng thái ứng dụng do MDM cài đặt.

00:22:26.000 --> 00:22:30.000
Mục trạng thái được sử dụng làm đối số đầu tiên cho SUBQUERY.

00:22:30.000 --> 00:22:35.000
Đối số thứ hai xác định một biến sẽ tham chiếu đến từng phần tử của mảng.

00:22:35.000 --> 00:22:42.000
Đối số thứ ba là một biểu thức vị ngữ kiểm tra từng phần tử được xác định bởi biến đó.

00:22:42.000 --> 00:22:48.000
Biểu thức SUBQUERY trả về một mảng các phần tử khớp với vị ngữ trong đối số thứ ba.

00:22:48.000 --> 00:22:57.000
Toán tử @count sau đó trả về độ dài của mảng đó và độ dài được kiểm tra để xác định xem có kết quả khớp hay không.

00:22:57.000 --> 00:23:07.000
Khi ứng dụng được chỉ định được cài đặt và quản lý, biểu thức SUBQUERY này sẽ trả về một mảng với một phần tử duy nhất và vị ngữ sẽ đánh giá là true.

00:23:07.000 --> 00:23:15.000
Khi ứng dụng chưa được cài đặt, biểu thức SUBQUERY sẽ trả về một mảng trống và vị ngữ sẽ được đánh giá là sai.

00:23:15.000 --> 00:23:25.000
Lưu ý rằng để tham chiếu các khóa trong đối tượng mảng mục trạng thái, thuật ngữ mở rộng @key phải được sử dụng để đảm bảo các đường dẫn khóa được xử lý đúng cách.

00:23:25.000 --> 00:23:35.000
Cú pháp vị ngữ mới có thể mở rộng và bây giờ chúng ta sẽ thảo luận về cách nó có thể được sử dụng để thêm các thuật ngữ vị ngữ cho một loại dữ liệu mới.

00:23:35.000 --> 00:23:51.000
Các máy chủ cần có khả năng kiểm soát trực tiếp hơn việc đánh giá các vị ngữ, để logic phía máy chủ phức tạp có thể chuyển thành các thay đổi trạng thái đơn giản trên thiết bị mà không cần đồng bộ hóa các bộ cấu hình lớn để kích hoạt những thay đổi đó.

00:23:51.000 --> 00:24:10.000
Một ví dụ về điều này có thể là một tổ chức có người dùng với nhiều vai trò và muốn phân công thiết bị hiệu quả, đúng lúc khi chúng được trao cho người dùng hoặc các tổ chức cần nhanh chóng phân phối các thiết bị thay thế hoặc nhanh chóng đưa thiết bị vào chế độ an toàn để bảo vệ dữ liệu tổ chức.

00:24:10.000 --> 00:24:22.000
Để hỗ trợ điều này, tôi vui mừng nói rằng chúng tôi đang thêm một khai báo mới để cho phép các máy chủ đặt các thuộc tính tùy ý trên thiết bị, có thể được sử dụng trực tiếp trong các vị ngữ kích hoạt.

00:24:22.000 --> 00:24:26.000
Đây là tuyên bố tài sản quản lý mới.

00:24:26.000 --> 00:24:33.000
Khai báo bao gồm một đối tượng JSON có tên khóa được xác định bởi máy chủ.

00:24:33.000 --> 00:24:39.000
Các giá trị đối tượng JSON có thể là bất kỳ loại giá trị JSON nào, bao gồm các mảng hoặc đối tượng.

00:24:39.000 --> 00:24:51.000
Khai báo thuộc tính quản lý ở đây, bao gồm ba thuộc tính: thuộc tính tên và thuộc tính tuổi có giá trị chuỗi và số nguyên, và thuộc tính vai trò là một mảng các chuỗi.

00:24:51.000 --> 00:24:56.000
Đây là một kích hoạt với một vị ngữ tham chiếu đến một số thuộc tính quản lý.

00:24:56.000 --> 00:25:11.000
Đầu tiên, nó kiểm tra thuộc tính tuổi để xác định xem giá trị nguyên của nó lớn hơn hoặc bằng 18, sau đó nó kiểm tra thuộc tính vai trò để xác định xem chuỗi Grade12 có nằm trong giá trị mảng thuộc tính hay không.

00:25:11.000 --> 00:25:19.000
Mỗi thuộc tính được tham chiếu bằng cách sử dụng thuật ngữ mở rộng @property, với tên khóa thuộc tính bên trong thuật ngữ.

00:25:19.000 --> 00:25:26.000
Nhiều khai báo thuộc tính quản lý có thể được gửi đến thiết bị, nhưng các khóa phải là duy nhất trên tất cả chúng.

00:25:26.000 --> 00:25:35.000
Nếu có các khóa trùng lặp, một trong các giá trị sẽ được chọn tùy ý khi thuộc tính được tham chiếu trong một vị ngữ, dẫn đến kết quả không thể đoán trước.

00:25:35.000 --> 00:25:39.000
Vì vậy, vui lòng tránh sử dụng tên khóa trùng lặp.

00:25:39.000 --> 00:25:43.000
Hãy khám phá một trường hợp sử dụng ví dụ.

00:25:43.000 --> 00:25:45.000
Ví dụ này liên quan đến một trường học.

00:25:45.000 --> 00:25:48.000
Và tất nhiên, trường có một nhóm giáo viên.

00:25:48.000 --> 00:25:52.000
Trường có hai bộ phận: Trên và Dưới.

00:25:52.000 --> 00:25:57.000
Mỗi bộ phận có khuôn viên riêng với mạng Wi-Fi riêng.

00:25:57.000 --> 00:26:02.000
Một số giáo viên hoạt động như một Quản trị viên CNTT và yêu cầu quyền truy cập vào tài khoản thư được chia sẻ.

00:26:02.000 --> 00:26:10.000
Một số giáo viên cũng hoạt động như một huấn luyện viên thể thao và nên có lịch đăng ký cho tất cả lịch thi đấu của đội.

00:26:10.000 --> 00:26:16.000
Do đó, có bốn vai trò khác nhau mà một giáo viên có thể có, và đôi khi chúng có nhiều vai trò.

00:26:16.000 --> 00:26:25.000
Mỗi vai trò có một bộ cấu hình phải được áp dụng cho các thiết bị dựa trên vai trò của giáo viên được chỉ định cho thiết bị.

00:26:25.000 --> 00:26:28.000
Hãy xem xét hai giáo viên trong ví dụ của chúng ta.

00:26:28.000 --> 00:26:33.000
Giáo viên một dạy ở trường trung học cơ sở và cũng là một huấn luyện viên thể thao.

00:26:33.000 --> 00:26:39.000
Giáo viên hai dạy ở trường Trung học phổ thông và cũng là một quản trị viên CNTT.

00:26:39.000 --> 00:26:44.000
Một trường hợp sử dụng như vậy có thể được xử lý như thế nào bởi một máy chủ MDM truyền thống?

00:26:44.000 --> 00:26:51.000
Thông thường, máy chủ phải đợi một thiết bị được chỉ định cho giáo viên trước khi nó có thể cấu hình đầy đủ thiết bị đó.

00:26:51.000 --> 00:26:55.000
Máy chủ phải xác định vai trò của giáo viên.

00:26:55.000 --> 00:26:59.000
Sau đó, nó xác định hồ sơ nào được liên kết với từng vai trò.

00:26:59.000 --> 00:27:05.000
Sau đó, nó phải cài đặt từng hồ sơ trên thiết bị một.

00:27:05.000 --> 00:27:11.000
Nếu giáo viên thay đổi vai trò, máy chủ phải thêm hoặc xóa hồ sơ để phù hợp với vai trò mới.

00:27:11.000 --> 00:27:24.000
Điều này tốn thời gian và có thể gây ra những tắc nghẽn đáng kể cho hệ thống quản lý thiết bị, đặc biệt là vào giờ cao điểm, trong trường hợp của chúng tôi sẽ là ngày đầu tiên đến trường khi bài tập được hoàn thành.

00:27:24.000 --> 00:27:30.000
Với tuyên bố thuộc tính quản lý mới, chúng tôi có một giải pháp thay thế hiệu quả hơn cho điều này.

00:27:30.000 --> 00:27:35.000
Điều này liên quan đến việc tải trước một bộ khai báo đầy đủ trên thiết bị trước thời hạn.

00:27:35.000 --> 00:27:44.000
Các cấu hình được gán cho các kích hoạt, với các vị ngữ được kích hoạt cho các vai trò khác nhau thông qua các thuộc tính quản lý.

00:27:44.000 --> 00:27:56.000
Khi một thiết bị được gán cho giáo viên, máy chủ chỉ gửi một khai báo thuộc tính quản lý với vai trò của giáo viên, điều này kích hoạt các cấu hình cho các vai trò đó.

00:27:56.000 --> 00:28:05.000
Phương pháp này giảm thiểu lưu lượng máy chủ và mạng tổng thể và giảm sự phức tạp của việc thực hiện các thay đổi nhanh chóng đối với trạng thái thiết bị.

00:28:05.000 --> 00:28:07.000
Hãy quay lại ví dụ trường học của chúng ta.

00:28:07.000 --> 00:28:17.000
Máy chủ sẽ tải trước các bộ khai báo sau: hai cặp kích hoạt/cấu hình thiết lập mạng Wi-Fi cho mỗi bộ phận.

00:28:17.000 --> 00:28:23.000
Sau đó, chúng tôi có một cặp kích hoạt/cấu hình cho vai trò quản trị viên CNTT, cài đặt một tài khoản thư.

00:28:23.000 --> 00:28:29.000
Cuối cùng, chúng tôi có một kích hoạt và cấu hình cài đặt lịch đã đăng ký.

00:28:29.000 --> 00:28:36.000
Mỗi lần kích hoạt có một vị ngữ kiểm tra tên của bộ phận hoặc hàm bằng cách sử dụng thuộc tính quản lý vai trò.

00:28:36.000 --> 00:28:44.000
Khi được tải ban đầu trên một thiết bị không được gán, tất cả các vị ngữ đều đánh giá là sai, vì vậy không có gì được áp dụng.

00:28:44.000 --> 00:28:48.000
Bây giờ, hãy xem xét những gì xảy ra vào ngày làm bài tập.

00:28:48.000 --> 00:28:55.000
Tất cả những gì máy chủ cần làm là tạo các khai báo thuộc tính quản lý được tùy chỉnh cho từng giáo viên.

00:28:55.000 --> 00:28:59.000
Giáo viên một có một thuộc tính vai trò liệt kê Thấp hơn và Thể thao.

00:28:59.000 --> 00:29:05.000
Giáo viên hai có một thuộc tính vai trò liệt kê Upper và IT Admin.

00:29:05.000 --> 00:29:13.000
Khi các khai báo này được gửi riêng đến từng thiết bị được chỉ định, tất cả các kích hoạt được tải sẵn sẽ được đánh giá lại.

00:29:13.000 --> 00:29:20.000
Vì vậy, thiết bị của giáo viên có cấu hình cho vai trò Thấp hơn và Thể thao được kích hoạt.

00:29:20.000 --> 00:29:27.000
Và thiết bị của giáo viên hai đã kích hoạt cấu hình cho vai trò Quản trị viên CNTT và trên.

00:29:27.000 --> 00:29:33.000
Chỉ cần một khai báo duy nhất để kích hoạt ứng dụng của nhiều cấu hình.

00:29:33.000 --> 00:29:37.000
Cuối cùng, hãy xem xét điều gì sẽ xảy ra khi giáo viên thay đổi vai trò.

00:29:37.000 --> 00:29:43.000
Trong trường hợp này, giáo viên hai đã trở thành một huấn luyện viên thể thao ngoài vai trò hiện tại của họ.

00:29:43.000 --> 00:29:50.000
Khai báo thuộc tính quản lý cho thiết bị được chỉ định của giáo viên hiện đã được cập nhật để bao gồm tên vai trò bổ sung.

00:29:50.000 --> 00:29:56.000
Khi tuyên bố đó được cập nhật trên thiết bị, tất cả các kích hoạt sẽ được đánh giá lại.

00:29:56.000 --> 00:30:01.000
Trong trường hợp này, cấu hình lịch đã đăng ký cho vai trò Thể thao mới sẽ được áp dụng.

00:30:01.000 --> 00:30:06.000
Một lần nữa, chỉ cần một thay đổi khai báo duy nhất làm trình kích hoạt.

00:30:06.000 --> 00:30:23.000
Điều này minh họa cách khai báo thuộc tính quản lý cung cấp một cách mạnh mẽ để chuyển đổi nhanh chóng và dễ dàng giữa các bộ cấu hình trên thiết bị, để logic phía máy chủ phức tạp có thể chuyển thành các thay đổi trạng thái đơn giản trên thiết bị.

00:30:23.000 --> 00:30:25.000
Bây giờ, chúng ta hãy kết thúc.

00:30:25.000 --> 00:30:41.000
Chúng tôi đã mở rộng phạm vi quản lý thiết bị khai báo trên iOS 16, tvOS 16 và macOS Ventura, cũng như cung cấp nó cho tất cả các loại đăng ký MDM hiện hành, bao gồm cả iPad được chia sẻ.

00:30:41.000 --> 00:30:49.000
Điều này cung cấp hỗ trợ đầy đủ cho việc quản lý thiết bị khai báo trên tất cả các thiết bị Apple hỗ trợ MDM.

00:30:49.000 --> 00:30:56.000
Chúng tôi đã thêm các mục trạng thái mới cho mật mã, tài khoản và các ứng dụng do MDM cài đặt.

00:30:56.000 --> 00:31:03.000
Trạng thái ứng dụng do MDM cài đặt cung cấp một giải pháp tuyệt vời cho một trong những nút thắt chính của MDM.

00:31:03.000 --> 00:31:19.000
Cuối cùng, chúng tôi đã nâng cao cú pháp vị ngữ để làm cho nó dễ mở rộng và dễ sử dụng hơn và thêm khai báo thuộc tính quản lý mới mang lại cho các máy chủ nhiều cơ hội hơn để di chuyển logic kinh doanh phức tạp sang thiết bị.

00:31:19.000 --> 00:31:24.000
Bây giờ là lúc để thêm quản lý thiết bị khai báo vào sản phẩm của bạn.

00:31:24.000 --> 00:31:32.000
Và chúng tôi rất vui khi tìm hiểu những gì bạn sẽ làm để hình dung lại các giải pháp quản lý thiết bị bằng cách sử dụng quản lý thiết bị khai báo!

00:31:32.000 --> 00:31:35.000
Như mọi khi, phản hồi của bạn được đánh giá rất cao.

00:31:35.000 --> 00:31:38.000
Cảm ơn bạn và tận hưởng phần còn lại của WWDC.

00:31:38.000 --> 23:59:59.000
♪ ♪

