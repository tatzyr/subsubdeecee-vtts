WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:19.000
Xin chào, tôi là Devin Rousso, một kỹ sư trong nhóm WebKit, và tôi ở đây hôm nay để chia sẻ với bạn cơ hội mới thú vị để tạo các tiện ích mở rộng cho Trình kiểm tra web của Safari.

00:00:19.000 --> 00:00:24.000
Web Inspector là công cụ phát triển chính để gỡ lỗi nội dung web trên tất cả các nền tảng của Apple.

00:00:24.000 --> 00:00:35.000
Nó đã có rất nhiều chức năng tích hợp để gỡ lỗi các trang web, nhưng thường có những lĩnh vực phát triển web khó xây dựng thành một công cụ tổng quát dành cho nhà phát triển.

00:00:35.000 --> 00:00:41.000
Có thể bạn đang gỡ lỗi một thư viện JavaScript phổ biến hoặc bạn chỉ cần một cái gì đó cụ thể hơn cho những gì bạn đang làm.

00:00:41.000 --> 00:00:47.000
Tiện ích mở rộng Web Inspector là một giải pháp tuyệt vời cho các tình huống quy trình làm việc cá nhân này.

00:00:47.000 --> 00:00:56.000
Bằng cách sử dụng các tiện ích mở rộng web đa trình duyệt và API DevTools, giờ đây bạn có thể thêm các tab của riêng mình vào Trình kiểm tra web trong Safari 16.

00:00:56.000 --> 00:01:02.000
Chúng ta hãy xem nhanh tiện ích mở rộng Web Inspector đang hoạt động và sau đó tôi sẽ chỉ cho bạn cách bạn có thể xây dựng tiện ích mở rộng của riêng mình.

00:01:02.000 --> 00:01:07.000
Đầu tiên tôi sẽ mở tùy chọn tiện ích mở rộng của Safari.

00:01:07.000 --> 00:01:10.000
Và kích hoạt tiện ích mở rộng Trình kiểm tra Web.

00:01:10.000 --> 00:01:15.000
Sau đó, tôi sẽ đóng tùy chọn tiện ích mở rộng của Safari và kiểm tra trang.

00:01:15.000 --> 00:01:19.000
Tôi sẽ làm điều đó từ menu Phát triển, Hiển thị Trình kiểm tra Web.

00:01:19.000 --> 00:01:28.000
Trong Trình kiểm tra web, tôi không chỉ có thể thấy nhiều tab tích hợp sẵn như Tab Phần tử, mà còn cả tab cho tiện ích mở rộng Trình kiểm tra web mà tôi vừa bật.

00:01:28.000 --> 00:01:34.000
Tuy nhiên, vì chúng tôi vừa bật tiện ích mở rộng này, trước tiên chúng tôi phải cho phép nó hoạt động với trang hiện đang được kiểm tra.

00:01:34.000 --> 00:01:42.000
Tôi có các tùy chọn thời lượng quyền giống như các tiện ích mở rộng khác bên ngoài Trình kiểm tra web, vì vậy bây giờ hãy cấp quyền truy cập cho nó trong một ngày.

00:01:42.000 --> 00:01:45.000
Phần mở rộng Open Graph này là những gì tôi sẽ xây dựng trong phiên này.

00:01:45.000 --> 00:01:54.000
Nó hiển thị siêu dữ liệu truyền thông xã hội phổ biến mà hầu hết các trang web đặt trên trang của họ để sử dụng bằng cách xem trước liên kết trong Tin nhắn và các trang truyền thông xã hội khác.

00:01:54.000 --> 00:02:00.000
Bây giờ chúng ta đã có cái nhìn nhanh về những gì tiện ích mở rộng Web Inspector có thể làm, hãy nói về cách chúng được xây dựng.

00:02:00.000 --> 00:02:07.000
Giống như các Tiện ích mở rộng Web Safari khác, các tiện ích mở rộng Web Inspector được phân phối thông qua một ứng dụng trong App Store.

00:02:07.000 --> 00:02:15.000
Để xây dựng tiện ích mở rộng Trình kiểm tra web của riêng bạn, bạn sẽ cần phải có Xcode, công cụ tạo ứng dụng của Apple để xây dựng các ứng dụng Mac và iOS.

00:02:15.000 --> 00:02:21.000
Xcode cũng đi kèm với các mẫu dự án để giúp bắt đầu tạo một ứng dụng mở rộng Safari mới.

00:02:21.000 --> 00:02:28.000
Nếu bạn đã có một tiện ích mở rộng web hiện có mà bạn đã tạo cho một trình duyệt khác, bạn cũng có thể sử dụng công cụ chuyển đổi đi kèm của Xcode.

00:02:28.000 --> 00:02:37.000
Chỉ cần chạy safari-web-extension-converter từ Terminal, chuyển đường dẫn đến thư mục tiện ích mở rộng của bạn có chứa tệp manifest.json.

00:02:37.000 --> 00:02:43.000
Một dự án ứng dụng đầy đủ sau đó sẽ được tạo cho tiện ích mở rộng của bạn đã sẵn sàng để xây dựng và chạy.

00:02:43.000 --> 00:02:51.000
Để biết thêm thông tin về công cụ này, hãy xem Meet Safari Web Extensions từ WWDC 2020, cũng như tài liệu trực tuyến.

00:02:51.000 --> 00:03:03.000
Vì vậy, hôm nay tôi sẽ xem xét cấu trúc cơ bản của tiện ích mở rộng Web Inspector, đề cập đến cách đánh giá tốt nhất mã trong tiện ích mở rộng đó và thảo luận về một số phương pháp hay nhất cho người dùng của bạn.

00:03:03.000 --> 00:03:06.000
Hãy bắt đầu nào.

00:03:06.000 --> 00:03:18.000
Các tiện ích mở rộng của Trình kiểm tra web được cấu trúc giống như các Tiện ích mở rộng web Safari khác, với biểu tượng thanh công cụ, trang nền, tập lệnh nội dung và hơn thế nữa, nhưng chúng cũng có trang nền devtools chuyên dụng.

00:03:18.000 --> 00:03:21.000
Hãy xem nó hoạt động như thế nào trong thực tế.

00:03:21.000 --> 00:03:30.000
Cấu trúc của Tiện ích mở rộng web Safari điển hình bắt đầu bằng tệp kê khai khai báo các chi tiết cơ bản về tiện ích mở rộng, như tên, biểu tượng, mô tả và hơn thế nữa.

00:03:30.000 --> 00:03:43.000
Nó có thể khai báo một trang nền để xử lý tất cả logic hậu trường của tiện ích mở rộng của bạn và cũng có thể khai báo bất kỳ tập lệnh nội dung nào được sử dụng để đưa chức năng vào các trang web mà người dùng truy cập.

00:03:43.000 --> 00:03:47.000
Đối với các tiện ích mở rộng của Trình kiểm tra Web, một vài trang khác tham gia vào hỗn hợp.

00:03:47.000 --> 00:03:54.000
Đầu tiên là một trang nền devtools bắt buộc cho logic hậu trường của tiện ích mở rộng Web Inspector của bạn.

00:03:54.000 --> 00:04:01.000
Trang này có quyền truy cập vào các API devtools duy nhất và chỉ có một bộ API tập lệnh nội dung giới hạn.

00:04:01.000 --> 00:04:08.000
Từ trang nền devtools này, bạn có thể tạo các trang tab devtools sẽ được hiển thị trong Trình kiểm tra web.

00:04:08.000 --> 00:04:11.000
Nhưng tất cả những điều đó chỉ dành cho một Thanh tra Web duy nhất.

00:04:11.000 --> 00:04:21.000
Nếu có nhiều Trình kiểm tra web, mỗi trình kiểm tra có phiên bản riêng của cùng một trang nền devtools này, tồn tại trong suốt thời gian mà Trình kiểm tra web liên quan đang mở.

00:04:21.000 --> 00:04:27.000
Như vậy, bạn cũng có thể có nhiều phiên bản của mỗi trang tab devtools.

00:04:27.000 --> 00:04:34.000
Chúng ta hãy xem cấu trúc này trông như thế nào trong thực tế và bắt đầu xây dựng tiện ích mở rộng Open Graph Web Inspector của tôi.

00:04:34.000 --> 00:04:41.000
Tôi sẽ bắt đầu bằng cách tạo một dự án mới trong Xcode.

00:04:41.000 --> 00:04:45.000
Loại dự án tôi sẽ tạo là một Ứng dụng Mở rộng Safari.

00:04:45.000 --> 00:04:52.000
Tôi chỉ thực sự cần macOS, nhưng tôi sẽ để nguyên như vậy, trong đa nền tảng, trong trường hợp tôi muốn thêm chức năng iOS trong tương lai.

00:04:52.000 --> 00:04:56.000
Tôi sẽ đặt tên cho "Open Graph" này và giữ phần còn lại của mặc định.

00:04:56.000 --> 00:05:03.000
Lưu ý rằng bạn cần chọn một mã định danh nhóm và gói dựa trên tài khoản nhà phát triển Apple mà bạn đang sử dụng.

00:05:03.000 --> 00:05:07.000
Và cuối cùng, tôi sẽ lưu cái này trên Máy tính để bàn.

00:05:07.000 --> 00:05:12.000
Bây giờ tôi có một dự án Mở rộng Web Safari chung, sẵn sàng để tôi sửa đổi.

00:05:12.000 --> 00:05:18.000
Lần đầu tiên tôi được đưa đến tệp manifest.json, đây là tệp cấu hình gốc cho mọi tiện ích mở rộng web.

00:05:18.000 --> 00:05:26.000
Tệp kê khai tham chiếu đến các tài nguyên khác tạo nên tiện ích mở rộng của bạn - bản địa hóa, hình ảnh, trang, tập lệnh, kiểu dáng và hơn thế nữa.

00:05:26.000 --> 00:05:42.000
Đối với tiện ích mở rộng Trình kiểm tra web của tôi, tôi sẽ không cần một số tệp này, như trang nền, tập lệnh nội dung hoặc cửa sổ bật lên, vì vậy tôi sẽ xóa chúng khỏi bản kê khai và khỏi toàn bộ dự án.

00:05:42.000 --> 00:05:46.000
Được rồi, hãy bắt đầu biến nó thành một tiện ích mở rộng Web Inspector.

00:05:46.000 --> 00:05:55.000
Để làm điều đó, tôi cần thêm một trang nền devtools vào bản kê khai và tạo một tệp tương ứng cho nó, cũng như một tệp JavaScript mà tôi sẽ sử dụng bên trong nó.

00:05:55.000 --> 00:06:01.000
Tôi sẽ đi đến Tệp - Mới - Tệp...

00:06:01.000 --> 00:06:12.000
Và cuộn xuống để tìm mẫu tệp trống.

00:06:12.000 --> 00:06:20.000
Tôi sẽ gọi tệp này là "devtools_background.html" để khớp với tên tôi đã sử dụng trong bản kê khai.

00:06:20.000 --> 00:06:31.000
Vị trí đã được đặt ngay bên cạnh các tài nguyên khác của tôi và là một phần của các mục tiêu chính xác, vì vậy tôi không cần phải thay đổi bất cứ điều gì ở đây.

00:06:31.000 --> 00:06:40.000
Tôi sẽ lặp lại các bước tương tự một lần nữa với tệp JavaScript...

00:06:40.000 --> 00:06:48.000
...Mà tôi sẽ gọi là "devtools_background.js".

00:06:48.000 --> 00:06:54.000
Cuối cùng, tôi cần đưa tệp JavaScript vào trang nền devtools của mình.

00:06:54.000 --> 00:07:02.000
Hãy nhớ rằng, trang này được tạo khi Trình kiểm tra web mở và chịu trách nhiệm tạo các tab tùy chỉnh xuất hiện trong Trình kiểm tra web.

00:07:02.000 --> 00:07:11.000
Tôi hầu như luôn muốn tạo một tab để, nếu cần, các quyền tôi thấy trước đó sẽ được hiển thị cho người dùng của tôi ngay tại đó, thay vì ở một số nơi khác.

00:07:11.000 --> 00:07:15.000
Bảng devtools này tạo API nhận ba đối số đơn giản.

00:07:15.000 --> 00:07:18.000
Đầu tiên là tên của tab.

00:07:18.000 --> 00:07:24.000
Đối với điều đó, tôi đang sử dụng phương pháp bản địa hóa để tra cứu tên bản địa hóa của tiện ích mở rộng của mình.

00:07:24.000 --> 00:07:26.000
Đối số tiếp theo là đường dẫn biểu tượng để sử dụng.

00:07:26.000 --> 00:07:33.000
Lưu ý rằng đây phải là một hình ảnh vector để chia tỷ lệ mượt mà đến bất kỳ kích thước nào nếu người dùng chọn phóng to giao diện người dùng của họ.

00:07:33.000 --> 00:07:40.000
Nhưng để sử dụng biểu tượng này, tôi cần đảm bảo rằng nó là một phần của dự án của tôi, cùng với tất cả các biểu tượng khác mà tôi cần cho tiện ích mở rộng của mình.

00:07:40.000 --> 00:07:44.000
Các biểu tượng trong thư mục "hình ảnh" vẫn là mặc định từ mẫu dự án.

00:07:44.000 --> 00:07:50.000
Vậy hãy xóa những thứ này khỏi dự án.

00:07:50.000 --> 00:07:57.000
Và thay thế chúng bằng một số biểu tượng tôi đã tạo trước đó...

00:07:57.000 --> 00:08:04.000
...Bao gồm "logo.svg" mà tôi đang cố gắng sử dụng khi tạo tab devtools.

00:08:04.000 --> 00:08:10.000
Bây giờ cái này ở đây, tôi sẽ quay lại tập lệnh nền devtools.

00:08:10.000 --> 00:08:14.000
Đối số thứ ba là HTML được sử dụng bởi tab trong Trình kiểm tra web.

00:08:14.000 --> 00:08:26.000
Và giống như với những hình ảnh một lúc trước, tôi cần tạo trang này trước khi tôi có thể sử dụng nó.

00:08:26.000 --> 00:08:36.000
Tôi sẽ đặt tên cho cái này là "devtools_tab.html" để khớp với tên tôi đã đặt cho API.

00:08:36.000 --> 00:08:55.000
Tuy nhiên, không giống như trang nền devtools, trang tab devtools này sẽ thực sự được hiển thị cho người dùng, vì vậy lần này tôi sẽ tạo cả tệp JavaScript và CSS.

00:08:55.000 --> 00:09:03.000
Tôi sẽ đặt tên cho tệp JavaScript là "devtools_tab.js"...

00:09:03.000 --> 00:09:08.000
...Và tệp CSS "devtools_tab.css".

00:09:08.000 --> 00:09:15.000
Thật tuyệt khi tôi đã thiết lập cấu trúc này, nhưng bây giờ tôi sẽ chỉ thêm "Hello World" thông thường để đảm bảo rằng mọi thứ đang hoạt động chính xác.

00:09:15.000 --> 00:09:25.000
Nhưng đừng lo lắng, chúng ta sẽ đi sâu hơn vào vấn đề này một lát sau, bởi vì trước tiên, chúng ta vẫn còn một vài biểu tượng nữa để thay thế để đảm bảo tiện ích mở rộng này có giao diện nhất quán.

00:09:25.000 --> 00:09:31.000
Đầu tiên chúng ta cần thay thế biểu tượng lớn mặc định...

00:09:31.000 --> 00:09:35.000
...Bằng cách xóa nó...

00:09:35.000 --> 00:09:41.000
...Và kéo biểu tượng lớn của tôi vào vị trí của nó.

00:09:41.000 --> 00:09:50.000
Tuy nhiên, vì biểu tượng lớn này là một phần của ứng dụng, tôi cần thêm nó vào đúng mục tiêu.

00:09:50.000 --> 00:09:59.000
Các biểu tượng còn lại đều là một phần của danh mục Tài sản, cụ thể là bộ AppIcon.

00:09:59.000 --> 00:10:03.000
Tôi đã chuẩn bị những biểu tượng này, vì vậy tôi sẽ dán chúng vào.

00:10:03.000 --> 00:10:09.000
Và với điều đó, tôi nghĩ chúng tôi đã thay thế tất cả các biểu tượng mặc định, vì vậy bây giờ tôi sẽ chạy tiện ích mở rộng của mình.

00:10:09.000 --> 00:10:20.000
Lưu ý rằng việc này có thể mất vài giây trong lần đầu tiên dự án được xây dựng.

00:10:20.000 --> 00:10:21.000
Và nó đây rồi!

00:10:21.000 --> 00:10:27.000
Hầu hết giao diện người dùng này là từ mẫu Xcode, nhưng tôi thấy chính xác biểu tượng của mình thay vì biểu tượng mặc định.

00:10:27.000 --> 00:10:39.000
Khi chúng tôi đã khởi chạy ứng dụng mở rộng Safari ít nhất một lần, chúng tôi có thể đóng nó, vì ứng dụng không cần phải chạy nữa để Safari chọn nó.

00:10:39.000 --> 00:10:47.000
Tuy nhiên, trước khi tôi có thể nhìn thấy nó trong Safari, tôi phải cho phép các tiện ích mở rộng chưa ký trong menu Phát triển vì đây là một ứng dụng chưa được xây dựng cục bộ.

00:10:47.000 --> 00:10:53.000
Bây giờ, trong tùy chọn Tiện ích mở rộng của Safari, tôi có thể thấy Biểu đồ Mở. Tôi sẽ bật nó lên.

00:10:53.000 --> 00:10:59.000
Tôi sẽ mở một tab Safari và duyệt đến apple.com để tôi có thể thử tiện ích mở rộng của mình.

00:10:59.000 --> 00:11:04.000
Và chúng ta đã có thể thấy rằng biểu tượng của tôi nằm trên thanh công cụ.

00:11:04.000 --> 00:11:06.000
Và tab tiện ích mở rộng của tôi hiện đang ở trong thanh tab.

00:11:06.000 --> 00:11:12.000
Chuyển sang nó, chúng ta có thể thấy cùng một lời nhắc cấp phép mà chúng ta đã thấy trước đó.

00:11:12.000 --> 00:11:16.000
Lời nhắc cấp phép này được tự động hiển thị nếu tiện ích mở rộng cần quyền.

00:11:16.000 --> 00:11:21.000
Giống như trước đó, tôi sẽ cho phép nó trong một ngày.

00:11:21.000 --> 00:11:25.000
Và có "Xin chào thế giới" mà tôi đã thêm vào trang tab devtools trước đó.

00:11:25.000 --> 00:11:30.000
Đó là những điều cơ bản về cách tạo tiện ích mở rộng Trình kiểm tra web cho Safari 16.

00:11:30.000 --> 00:11:31.000
Hãy tóm tắt lại.

00:11:31.000 --> 00:11:36.000
Tôi đã khai báo trang nền devtools và thêm nó vào dự án Xcode của mình.

00:11:36.000 --> 00:11:41.000
Từ đó, tôi đã có thể tạo một tab mới trong Trình kiểm tra web để hiển thị công cụ tùy chỉnh của mình.

00:11:41.000 --> 00:11:45.000
Và cuối cùng, tôi đã bắt đầu xem xét các quyền mà tiện ích mở rộng của tôi cần.

00:11:45.000 --> 00:11:54.000
Đối với tiện ích mở rộng Trình kiểm tra web, điều này thường tập trung vào việc đánh giá mã trong trang được kiểm tra, thường là để trích xuất một số dữ liệu để hiển thị bên trong Trình kiểm tra web.

00:11:54.000 --> 00:11:58.000
Tiện ích mở rộng web đã có một số cách để đánh giá mã.

00:11:58.000 --> 00:12:05.000
Đối với các tiện ích mở rộng của Trình kiểm tra Web, có một API khác là phương pháp đánh giá tập lệnh ưa thích bên trong trang được kiểm tra.

00:12:05.000 --> 00:12:10.000
Hãy xem API này và xem cách tôi có thể sử dụng nó cho tiện ích mở rộng OpenGraph của mình.

00:12:10.000 --> 00:12:17.000
API mở rộng devtools này để đánh giá JavaScript trong cửa sổ được kiểm tra là cách tốt nhất để có được kết quả nhanh chóng.

00:12:17.000 --> 00:12:22.000
Nó sẽ tự động nhắm mục tiêu trang được liên kết với Trình kiểm tra web mà tiện ích mở rộng của bạn đang chạy.

00:12:22.000 --> 00:12:27.000
Hãy nhớ rằng, người dùng có thể kiểm tra nhiều trang cùng một lúc.

00:12:27.000 --> 00:12:32.000
Ngoài ra còn có một số tùy chọn hữu ích cho API này có thể giúp bạn có được kết quả đúng.

00:12:32.000 --> 00:12:39.000
Theo mặc định, biểu thức được cung cấp cho API này được đánh giá trong ngữ cảnh của khung chính của trang được kiểm tra.

00:12:39.000 --> 00:12:45.000
Nhưng bạn có thể sử dụng tùy chọn frameURL để chỉ định đánh giá bên trong một khung khác.

00:12:45.000 --> 00:12:51.000
Điều này là cần thiết khi tiện ích mở rộng của bạn cần trích xuất dữ liệu từ một trong nhiều khung phụ có thể có trong trang.

00:12:51.000 --> 00:12:59.000
Đối với tiện ích mở rộng OpenGraph của tôi, tôi chỉ cần lo lắng về khung chính, nhưng tôi khuyên bạn nên ghi nhớ điều này khi đánh giá các tập lệnh cho tiện ích mở rộng Web Inspector của mình.

00:12:59.000 --> 00:13:05.000
Hãy xem cách tôi có thể sử dụng chức năng này trong tiện ích mở rộng của mình để lấy và hiển thị dữ liệu từ trang đã kiểm tra.

00:13:05.000 --> 00:13:18.000
Tôi sẽ bắt đầu bằng cách thay thế trình giữ chỗ "Hello World" mà tôi đã thêm trước đó bằng HTML thực sự tải các tệp CSS và JavaScript của tôi.

00:13:18.000 --> 00:13:24.000
Sau đó, tôi sẽ thêm một số CSS cơ bản để tạo cho tab devtools của tôi một phong cách đẹp.

00:13:24.000 --> 00:13:36.000
Tôi muốn đảm bảo rằng tab devtools của tôi phù hợp với phần còn lại của Web Inspector, vì vậy tôi đã khai báo thuộc tính `color-scheme` gốc sẽ làm cho tab devtools của tôi khớp với giao diện của phần còn lại của Web Inspector.

00:13:36.000 --> 00:13:44.000
Tôi đang sử dụng một họ phông chữ hệ thống và kế thừa kích thước phông chữ, và phù hợp với màu sắc của văn bản quan trọng hơn.

00:13:44.000 --> 00:13:53.000
Về chức năng, tôi sẽ bắt đầu bằng cách thêm một số văn bản trong trường hợp trang không có bất kỳ siêu dữ liệu opengraph nào.

00:13:53.000 --> 00:14:00.000
Lưu ý rằng tôi có thể sử dụng các chuỗi được bản địa hóa tiện ích mở rộng web trong Trình kiểm tra web giống như tôi có thể sử dụng bất kỳ nơi nào khác trong tiện ích mở rộng web.

00:14:00.000 --> 00:14:07.000
Nhưng để làm như vậy, tôi cần thêm cùng một mã định danh chuỗi được bản địa hóa đó vào tệp chuỗi được bản địa hóa.

00:14:07.000 --> 00:14:18.000
Tiếp theo, tôi sẽ tạo JavaScript mà tôi sẽ cung cấp cho các devtools mạnh mẽ inspectedWindow eval API, cho phép tôi đánh giá nó trong trang được kiểm tra.

00:14:18.000 --> 00:14:30.000
Trong trường hợp này, tôi muốn truy vấn DOM của trang đã kiểm tra để biết một số siêu dữ liệu opengraph phổ biến, cụ thể là tiêu đề, mô tả...

00:14:30.000 --> 00:14:41.000
...Và hình ảnh, cũng như trạng thái sẵn sàng hiện tại của tài liệu trang được kiểm tra, gói tất cả lại với nhau để gửi lại trang devtools thông qua giá trị trả về.

00:14:41.000 --> 00:14:54.000
Sau khi hoàn tất, tôi có thể lấy phần tử HTML tương ứng với từng thuộc tính này và định cấu hình chúng để chúng hiển thị dữ liệu đã được thu thập.

00:14:54.000 --> 00:15:00.000
Và nếu tài liệu chưa hoàn toàn sẵn sàng, tôi có thể thử lại sau một thời gian ngắn.

00:15:00.000 --> 00:15:15.000
Tôi cũng muốn làm lại tất cả những điều này mỗi khi trang được kiểm tra điều hướng, vì vậy tôi sẽ thêm trình nghe cho mạng devtools onNavigated.

00:15:15.000 --> 00:15:26.000
Tất cả điều này trông rất tuyệt, vì vậy tôi sẽ xây dựng lại để kiểm tra nó.

00:15:26.000 --> 00:15:35.000
Bây giờ, bất cứ khi nào tôi mở Web Inspector hoặc điều hướng với Web Inspector đã mở, tôi có thể thấy tiêu đề opengraph, mô tả và hình ảnh của mọi trang.

00:15:35.000 --> 00:15:41.000
Và đó là một ví dụ đơn giản về cách sử dụng một số API mở rộng Web Inspector mới và mạnh mẽ.

00:15:41.000 --> 00:15:44.000
Tiện ích mở rộng OpenGraph của tôi đang hoạt động rất tốt.

00:15:44.000 --> 00:15:50.000
Trang tab devtools của tiện ích mở rộng Trình kiểm tra Web của tôi hiện có thể đánh giá trong trang đã kiểm tra.

00:15:50.000 --> 00:15:57.000
Tôi có thể lấy dữ liệu kết quả và xử lý nó để hiển thị nó ở định dạng thân thiện với người dùng để truy cập nhanh.

00:15:57.000 --> 00:16:02.000
Vậy một số cách tuyệt vời để tạo ra trải nghiệm người dùng tuyệt vời khi tạo tiện ích mở rộng Web Inspector là gì?

00:16:02.000 --> 00:16:07.000
Luôn tạo các trang tab devtools từ trang nền devtools.

00:16:07.000 --> 00:16:15.000
Bằng cách này, người dùng có thể thấy nơi các tab này sẽ xuất hiện trong Trình kiểm tra web và mọi lời nhắc cấp phép thích hợp sẽ được hiển thị trực tuyến.

00:16:15.000 --> 00:16:22.000
Thay vì yêu cầu quyền máy chủ cụ thể, hãy thử sử dụng quyền activeTab để giữ các tiện ích mở rộng Web Inspector được nhắm mục tiêu nhất có thể.

00:16:22.000 --> 00:16:30.000
Và đảm bảo sử dụng thuộc tính lược đồ màu CSS hoặc API chủ đề devtools tiện ích mở rộng web để phù hợp với chủ đề tổng thể của Trình kiểm tra web.

00:16:30.000 --> 00:16:39.000
Vì vậy, hôm nay tôi đã chỉ cho bạn cách tạo các công cụ gỡ lỗi hoàn toàn mới với các tiện ích mở rộng Web Inspector và đề cập đến một số phương pháp hay nhất tuyệt vời cần ghi nhớ khi làm như vậy.

00:16:39.000 --> 00:16:48.000
Bạn có thể tải xuống tiện ích mở rộng OpenGraph Web Inspector trong các tài nguyên liên quan của phiên này nếu bạn muốn tự mình xem xét kỹ hơn.

00:16:48.000 --> 00:16:58.000
Chúng tôi rất quan tâm đến việc lắng nghe suy nghĩ của bạn, vì vậy vui lòng gửi lỗi và yêu cầu tính năng bằng Trợ lý phản hồi hoặc đến trò chuyện với chúng tôi trên diễn đàn nhà phát triển Safari.

00:16:58.000 --> 00:17:05.000
Và thậm chí cân nhắc tham gia nhóm cộng đồng WebExtensions để giúp định hình tương lai của các tiện ích mở rộng web.

00:17:05.000 --> 00:17:13.000
Ngoài ra, hãy đảm bảo kiểm tra Có gì mới trong Tiện ích mở rộng web Safari và tài liệu trực tuyến để tìm hiểu thêm về những gì mới trong năm nay.

00:17:13.000 --> 00:17:19.000
Tôi thực sự hy vọng bạn thích tìm hiểu về khả năng mới tuyệt vời để tạo công cụ tùy chỉnh trong Trình kiểm tra web.

00:17:19.000 --> 00:17:26.000
Chúng tôi nóng lòng muốn xem bạn sẽ tạo tiện ích mở rộng Web Inspector tuyệt vời nào và mong đợi tất cả những cách bạn sẽ vượt qua giới hạn của những gì có thể.

00:17:26.000 --> 23:59:59.000
Cảm ơn bạn rất nhiều vì đã lắng nghe, và tôi hy vọng bạn có một phần còn lại tuyệt vời của WWDC. ♪ ♪

