WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:12.000
Xin chào, tên tôi là Nik, và tôi là một kỹ sư trong nhóm Video.

00:00:12.000 --> 00:00:17.000
Hôm nay tôi rất vui được nói chuyện với bạn về việc xuất bản siêu dữ liệu phương tiện và tương tác phát lại.

00:00:17.000 --> 00:00:19.000
Vậy chính xác thì điều đó có nghĩa là gì?

00:00:19.000 --> 00:00:25.000
Có một số nơi trên các thiết bị Apple nơi thông tin phát lại được hiển thị và nơi phát lại có thể được kiểm soát.

00:00:25.000 --> 00:00:32.000
Ví dụ: phần Đang phát của Trung tâm điều khiển hiển thị tác phẩm nghệ thuật, tiêu đề và tiến trình cho phương tiện hiện đang phát trên thiết bị.

00:00:32.000 --> 00:00:36.000
Nó cũng cho phép bạn chơi, tạm dừng hoặc thậm chí bỏ qua tiến hoặc lùi.

00:00:36.000 --> 00:00:40.000
Mở rộng ô Đang phát hiển thị nhiều chi tiết hơn, như tác phẩm nghệ thuật và tiến trình.

00:00:40.000 --> 00:00:45.000
Nó cũng cho phép bạn chà và tăng hoặc giảm âm lượng.

00:00:45.000 --> 00:00:57.000
Màn hình khóa cũng hiển thị cùng một thông tin và điều khiển, mang đến cho người dùng một nơi thuận tiện để kiểm tra tiến trình, tạm dừng hoặc thậm chí AirPlay đến một thiết bị khác mà không cần mở khóa.

00:00:57.000 --> 00:01:01.000
Bất kể thiết bị nào đang phát, ứng dụng Đang phát trên Apple Watch cung cấp trải nghiệm tương tự.

00:01:01.000 --> 00:01:05.000
Nó thậm chí còn có một điều khiển từ xa Apple TV được tích hợp sẵn.

00:01:05.000 --> 00:01:11.000
Trên tvOS khi sử dụng AVKit, lớp phủ thông tin khi các điều khiển được trình bày sẽ hiển thị thông tin tiêu đề và chương.

00:01:11.000 --> 00:01:17.000
Khi bạn vuốt xuống ngăn thông tin, nhiều chi tiết hơn như tác phẩm nghệ thuật và mô tả sẽ được hiển thị.

00:01:17.000 --> 00:01:25.000
Giữ nút TV trên điều khiển từ xa Apple TV của bạn hiển thị Trung tâm điều khiển, giống như iOS có ô Đang phát cũng có thể được mở rộng.

00:01:25.000 --> 00:01:38.000
Khi nội dung âm thanh bắt đầu phát từ nền trên tvOS, có thể là từ việc nhấn nút phát trên điều khiển từ xa hoặc từ việc chọn một bản nhạc trong ứng dụng Âm nhạc từ một thiết bị khác, một thông báo với thông tin Đang phát sẽ được hiển bày.

00:01:38.000 --> 00:01:48.000
Ngoài ra, sau một thời gian ngắn không hoạt động trên tvOS khi phát âm thanh, một lớp phủ toàn màn hình hiển thị những gì hiện đang phát được trình bày.

00:01:48.000 --> 00:01:58.000
Cuối cùng, trên iOS, nút Control Other Speakers and TVs cho phép bạn xem thông tin Đang phát trên tất cả các thiết bị của mình, cũng như điều khiển phát lại.

00:01:58.000 --> 00:02:08.000
Với số lượng thiết bị và giao diện người dùng ngày càng tăng, nơi thông tin Đang phát được trình bày và nơi phát lại có thể được kiểm soát, việc xuất bản đúng thông tin Đang phát và phản hồi các lệnh từ xa quan trọng hơn bao giờ hết.

00:02:08.000 --> 00:02:18.000
Trong suốt phần còn lại của phiên này, chúng tôi sẽ đề cập đến việc phản hồi các tương tác phát lại dưới dạng lệnh từ xa, xuất bản siêu dữ liệu tự động, xuất bản với AVKit và xuất bản thủ công.

00:02:18.000 --> 00:02:28.000
Khi sử dụng AVFoundation để phát lại phương tiện, cách tốt nhất để xuất bản siêu dữ liệu Đang phát và phản hồi các tương tác phát lại là sử dụng lớp MPNowPlayingSession.

00:02:28.000 --> 00:02:36.000
Trong lịch sử, lớp học này chỉ có sẵn trên tvOS, nhưng hiện đã có sẵn trên iOS 16.

00:02:36.000 --> 00:02:44.000
Nó được sử dụng để đại diện cho một phiên phát lại riêng biệt và cung cấp quyền kiểm soát trạng thái Đang phát nếu ứng dụng của bạn chứa nhiều phiên đang hoạt động.

00:02:44.000 --> 00:02:52.000
Nó hỗ trợ cả xuất bản siêu dữ liệu thủ công, cũng như xuất bản tự động mới có sẵn trong iOS và tvOS 16.

00:02:52.000 --> 00:03:00.000
MPNowPlayingSession không nên được sử dụng trên tvOS khi sử dụng AVKit, có cơ chế xuất bản tự động riêng mà chúng tôi sẽ đề cập sau trong phiên.

00:03:00.000 --> 00:03:10.000
Là ứng dụng "Đang phát" có nghĩa là ứng dụng của bạn sẽ điền vào Trung tâm điều khiển, Màn hình khóa, v.v. và nhận các điều khiển phát lại khi người dùng, ví dụ, nhấn tạm dừng từ một trong các giao diện đó.

00:03:10.000 --> 00:03:15.000
Với MPNowPlayingSession, bạn có thể đại diện cho nhiều phiên phát lại đồng thời trong một ứng dụng duy nhất.

00:03:15.000 --> 00:03:22.000
Tuy nhiên, khi sử dụng nhiều phiên, ứng dụng của bạn phải quảng bá một phiên hoạt động sẽ xuất hiện trên toàn hệ thống khi điều khiển từ xa ứng dụng của bạn.

00:03:22.000 --> 00:03:30.000
Ví dụ, với Picture in Picture, bạn có thể có hai phiên phát lại đồng thời, trong đó phát lại toàn màn hình nên được coi là phiên Đang phát đang hoạt động.

00:03:30.000 --> 00:03:34.000
Hệ thống cũng có một vài heuristics để đủ điều kiện cho các ứng dụng đủ điều kiện Now Playing.

00:03:34.000 --> 00:03:38.000
Đầu tiên, bạn phải đăng ký trình xử lý cho ít nhất một lệnh từ xa.

00:03:38.000 --> 00:03:45.000
Như bạn có thể tưởng tượng, một ứng dụng sẽ không phản hồi với bất kỳ tương tác phát lại nào rất có thể không phải là một ứng cử viên lý tưởng để hiển thị dưới dạng ứng dụng Đang phát.

00:03:45.000 --> 00:03:52.000
Thứ hai, ứng dụng AVAudioSession của bạn phải được cấu hình với tùy chọn danh mục và danh mục không thể trộn lẫn.

00:03:52.000 --> 00:04:01.000
Các danh mục và tùy chọn phát lại có thể trộn thường được sử dụng khi phát lại thông báo, và do đó đây là một dấu hiệu tốt cho hệ thống rằng bất cứ thứ gì đang phát cũng không phải là ứng cử viên tốt cho Đang phát.

00:04:01.000 --> 00:04:04.000
Đây là một vài ví dụ để giúp hiểu các phiên phát lại.

00:04:04.000 --> 00:04:10.000
Trong ví dụ này có một phần nội dung duy nhất đang phát, vì vậy điều này sẽ được thể hiện bằng cách sử dụng một MPNowPlayingSession duy nhất.

00:04:10.000 --> 00:04:17.000
Nếu ứng dụng của bạn hỗ trợ PiP, bạn sẽ có hai MPNowPlayingSessions: một cho trình phát chính và một cho phát lại PiP.

00:04:17.000 --> 00:04:22.000
Một kịch bản phức tạp hơn sẽ là một MPNowPlayingSession duy nhất có nhiều người chơi.

00:04:22.000 --> 00:04:27.000
Trong ví dụ này, chúng tôi có bốn người chơi, một người trong mỗi góc phần tư, thể hiện các quan điểm khác nhau cho cùng một cuộc đua.

00:04:27.000 --> 00:04:33.000
Các trình phát được thêm vào cùng một MPNowPlayingSession phải luôn là một phần của cùng một nội dung.

00:04:33.000 --> 00:04:36.000
Và đây là cách mỗi phiên ví dụ này sẽ được khởi tạo.

00:04:36.000 --> 00:04:41.000
Đầu tiên, chúng tôi chỉ chơi một phần nội dung duy nhất, vì vậy chúng tôi có một phiên duy nhất với người chơi đơn.

00:04:41.000 --> 00:04:46.000
Ví dụ thứ hai là sử dụng Picture-in-Picture, vì vậy chúng tôi có hai phiên, mỗi phiên có một người chơi duy nhất.

00:04:46.000 --> 00:04:50.000
Đầu tiên là nội dung toàn màn hình, và thứ hai là nội dung trong PiP.

00:04:50.000 --> 00:04:57.000
Ví dụ cuối cùng, cuộc đua đa chế độ xem, được thể hiện bằng một phiên duy nhất với bốn người chơi.

00:04:57.000 --> 00:05:02.000
Khi một ứng dụng có nhiều phiên, đó là trách nhiệm của ứng dụng trong việc quảng bá một phiên nhất định là hoạt động khi áp dụng.

00:05:02.000 --> 00:05:13.000
Ví dụ: nếu phương tiện đang phát trong Picture-in-Picture, nếu người dùng mở rộng nó thành toàn màn hình, phiên toàn màn hình trước đó sẽ không còn hoạt động hoặc Đang phát và phiên PiP hiện đang ở chế độ toàn màn hình sẽ hoạt động.

00:05:13.000 --> 00:05:20.000
Quá trình chuyển đổi này có thể được thực hiện bằng cách gọi becomeActiveIfPossible trên MPNowPlayingSession.

00:05:20.000 --> 00:05:31.000
Bây giờ chúng ta đã đề cập đến những điều cơ bản về thiết lập các phiên bản MPNowPlayingSession và kiểm soát phiên Đang phát, hãy nói về việc nhận và phản hồi các lệnh từ xa, có thể là từ Màn hình khóa hoặc từ HomePod ở phòng khác.

00:05:31.000 --> 00:05:35.000
Hãy bắt đầu với một ví dụ cơ bản về việc đăng ký lệnh phát và tạm dừng.

00:05:35.000 --> 00:05:43.000
Làm như vậy sẽ cho phép ứng dụng của bạn nhận cuộc gọi lại khi người dùng nhấn phát hoặc tạm dừng từ một thiết bị khác hoặc phát hành lệnh đó bằng Siri.

00:05:43.000 --> 00:05:46.000
Đầu tiên, chúng tôi khởi tạo MPNowPlayingSession của mình.

00:05:46.000 --> 00:05:50.000
Vì chúng tôi chỉ có một phiên, chúng tôi không cần gọi phương thức 'becomeActiveIfPossible'.

00:05:50.000 --> 00:05:56.000
Khi bạn chỉ có một phiên, nó sẽ là phiên mặc định khi ứng dụng của bạn là ứng dụng Đang phát.

00:05:56.000 --> 00:06:04.000
Mỗi phiên bản MPNowPlayingSession có phiên bản MPRemoteCommandCenter riêng, được sử dụng để khai báo những lệnh từ xa mà phiên phát lại của bạn có thể phản hồi.

00:06:04.000 --> 00:06:11.000
Tiếp theo, chúng tôi thêm một trình xử lý cho lệnh play, nơi chúng tôi gọi phương thức chơi trên trình phát của mình và trả lại thành công.

00:06:11.000 --> 00:06:14.000
Sau đó chúng tôi làm điều tương tự cho lệnh tạm dừng.

00:06:14.000 --> 00:06:20.000
Bạn nên thêm trình xử lý cho mọi lệnh mà ứng dụng của bạn hỗ trợ và có thể áp dụng cho nội dung hiện đang phát.

00:06:20.000 --> 00:06:23.000
Một ví dụ khác là lệnh bỏ qua tiến và bỏ qua lùi.

00:06:23.000 --> 00:06:30.000
Lệnh này nên được sử dụng cho hầu hết nội dung và sẽ không thể áp dụng được, ví dụ, các luồng trực tiếp khi không thể nhảy về phía trước.

00:06:30.000 --> 00:06:36.000
Đầu tiên chúng ta phải chỉ ra khoảng thời gian ưa thích của chúng ta là gì, hoặc số giây chúng ta muốn nhảy theo một trong hai hướng.

00:06:36.000 --> 00:06:38.000
Trong trường hợp này, chúng tôi sử dụng 15 giây.

00:06:38.000 --> 00:06:47.000
Sau đó, tương tự như những gì chúng tôi đã làm cho các lệnh phát và tạm dừng, chúng tôi thêm một trình xử lý sẽ được gọi khi người dùng nhấn nút bỏ qua chuyển tiếp hoặc yêu cầu Siri bỏ qua về phía trước.

00:06:47.000 --> 00:06:54.000
Trong trình xử lý của chúng tôi, chúng tôi sẽ nhận được MPSkipIntervalCommandEvent, vì vậy trước tiên chúng tôi sẽ chuyển sự kiện sang loại đó.

00:06:54.000 --> 00:07:05.000
Sau đó, chúng tôi tính toán thời gian đã trôi qua mới bằng cách lấy thời gian hiện tại và khoảng thời gian được cung cấp cho chúng tôi trong MPSkipIntervalCommandEvent, tìm kiếm nó và trả lại thành công để chỉ ra rằng chúng tôi đã nhảy lên vị trí mới.

00:07:05.000 --> 00:07:11.000
Cũng có thể ứng dụng của bạn có các tình huống mà lệnh tạm thời không được phép, ví dụ như bỏ qua khi ở trong quảng cáo.

00:07:11.000 --> 00:07:14.000
Trong trường hợp đó, skipForwardCommand có thể bị vô hiệu hóa.

00:07:14.000 --> 00:07:19.000
Bây giờ chúng tôi đang phản hồi các lệnh từ xa, chúng tôi sẽ đề cập đến việc xuất bản siêu dữ liệu tự động.

00:07:19.000 --> 00:07:31.000
Xuất bản tự động giúp bạn hết sức trong việc giữ siêu dữ liệu chính xác bằng cách tự động duy trì các thuộc tính siêu dữ liệu mà nó có thể quan sát trực tiếp từ trình phát như thời lượng, thời gian đã trôi qua hiện tại, trạng thái phát lại và tiến trình phát lại.

00:07:31.000 --> 00:07:39.000
Nếu nội dung có quảng cáo được đưa vào đó mà không nên đóng góp vào tổng thời lượng và thời gian đã trôi qua, nó cũng có thể tính toán thời gian ròng và thay vào đó báo cáo điều đó.

00:07:39.000 --> 00:07:47.000
Siêu dữ liệu khác như tiêu đề, mô tả và tác phẩm nghệ thuật có thể được thêm vào AVPlayerItems trực tiếp bằng cách sử dụng thuộc tính nowPlayingInfo.

00:07:47.000 --> 00:07:52.000
Trong ví dụ này, chúng tôi sẽ sử dụng xuất bản tự động để thực hiện phần lớn công việc và tự đặt tiêu đề và tác phẩm nghệ thuật.

00:07:52.000 --> 00:07:57.000
Đầu tiên, chúng tôi tạo một phiên bản MPMediaItemArtwork mới, chuyển hình ảnh tác phẩm nghệ thuật.

00:07:57.000 --> 00:08:00.000
Hầu hết các ứng dụng sẽ thực hiện một yêu cầu mạng để tìm nạp cái này.

00:08:00.000 --> 00:08:03.000
Sau đó chúng tôi đặt tiêu đề chuỗi của nội dung.

00:08:03.000 --> 00:08:12.000
Sau đó, chúng tôi lấy tác phẩm nghệ thuật và tiêu đề của mình và đặt chúng làm từ điển nowPlayingInfo trên mục trình phát hiện tại bằng MPMediaItemPropertyTitle và MPMediaItemPropertyArtwork.

00:08:12.000 --> 00:08:19.000
Siêu dữ liệu Đang phát có thể bao gồm cả MPMediaItemProperty's và MPNowPlayingInfoProperty's.

00:08:19.000 --> 00:08:26.000
Cuối cùng, chúng tôi tạo phiên bản MPNowPlayingSession chuyển trong trình phát của chúng tôi và đặt tự động Xuất bảnNowPlayingInfo thành true.

00:08:26.000 --> 00:08:37.000
Khi tự động xuất bảnNowPlayingInfo được đặt thành true, phiên bản MPNowPlayingSession sẽ bắt đầu quan sát trình phát để thay đổi trạng thái như xóa, sự kiện phát/tạm dừng hoặc thay đổi mục trình phát hiện tại.

00:08:37.000 --> 00:08:47.000
Đây là một ví dụ khác mà chúng tôi sẽ chỉ ra cách sử dụng xuất bản tự động cho các trường hợp quảng cáo được đưa vào nội dung và bạn không muốn tổng thời lượng hoặc thời gian đã trôi qua hiện tại bao gồm thời gian quảng cáo.

00:08:47.000 --> 00:08:52.000
Để làm điều này, chúng tôi sẽ tạo các phiên bản của MPAdTimeRange cho mọi quảng cáo mà chúng tôi đã đưa vào.

00:08:52.000 --> 00:08:56.000
Trong ví dụ này, chúng tôi có một quảng cáo 30 giây duy nhất bắt đầu ngay từ đầu.

00:08:56.000 --> 00:09:01.000
Vì vậy, chúng tôi tạo ra nó với điểm bắt đầu bằng 0 và thời lượng 30 giây.

00:09:01.000 --> 00:09:14.000
Tương tự như cách chúng tôi thực hiện tiêu đề và tác phẩm nghệ thuật trước đó, chúng tôi chỉ cần thêm một mảng MPAdTimeRange vào từ điển nowPlayingInfo trên mục trình phát bằng MPNowPlayingInfoPropertyAdTimeRanges.

00:09:14.000 --> 00:09:20.000
Sau đó, giống như chúng tôi đã làm trước đây, tạo MPNowPlayingSession và cho phép xuất bản tự động.

00:09:20.000 --> 00:09:22.000
Tiếp theo là xuất bản siêu dữ liệu với AVKit.

00:09:22.000 --> 00:09:34.000
Xuất bản siêu dữ liệu Đang phát với AVKit trên tvOS hoạt động rất giống với MPNowPlayingSession: siêu dữ liệu được thêm trực tiếp vào AVPlayerItem và các giá trị như thời gian đã trôi qua, thời lượng và trạng thái phát lại được xuất bản và cập nhật cho bạn.

00:09:34.000 --> 00:09:43.000
Siêu dữ liệu được thu thập trực tiếp từ trình phát và tài sản, kết hợp với siêu dữ liệu do ứng dụng của bạn cung cấp trên AVPlayerItem cũng được sử dụng để điền vào ngăn thông tin trong giao diện người chơi.

00:09:43.000 --> 00:09:47.000
AVKit cũng đảm nhận việc đăng ký và phản hồi các lệnh từ xa.

00:09:47.000 --> 00:09:55.000
Sử dụng AVKit là cách tốt nhất và dễ dàng nhất để tích hợp với các tính năng nền tảng mà chúng ta đã thảo luận cho đến nay, cũng như các tính năng khác như AirPlay và Picture-in-Picture.

00:09:55.000 --> 00:10:05.000
Cài đặt siêu dữ liệu khi sử dụng AVKit được thực hiện bằng cách sử dụng mảng externalMetadata trên AVPlayerItem, bao gồm các phiên bản AVMetadataItem để mô tả nội dung của bạn.

00:10:05.000 --> 00:10:08.000
Bạn thường thiết lập ba giá trị trên mỗi AVMetadataItem.

00:10:08.000 --> 00:10:14.000
Đầu tiên, mã định danh, là chìa khóa để chỉ ra siêu dữ liệu mà AVMetadataItem đại diện.

00:10:14.000 --> 00:10:23.000
Ví dụ, AVMetadataCommonIdentifierTitle cho tiêu đề nội dung, hoặc AVMetadataCommonIdentifierArtwork cho tác phẩm nghệ thuật.

00:10:23.000 --> 00:10:25.000
Thứ hai là giá trị.

00:10:25.000 --> 00:10:27.000
Đối với tiêu đề, đây sẽ là một chuỗi chứa tiêu đề.

00:10:27.000 --> 00:10:31.000
Đối với tác phẩm nghệ thuật, đây sẽ là một phiên bản NSData chứa dữ liệu hình ảnh.

00:10:31.000 --> 00:10:34.000
DataType được sử dụng để chỉ ra định dạng của tác phẩm nghệ thuật được cung cấp.

00:10:34.000 --> 00:10:40.000
Nếu nó chứa dữ liệu JPEG, kCMMetadatabaseDataType_JPEG sẽ được sử dụng.

00:10:40.000 --> 00:10:47.000
Cuối cùng, extendedLanguageTag được sử dụng để chỉ ra ngôn ngữ được sử dụng cho các chuỗi như tiêu đề và mô tả.

00:10:47.000 --> 00:10:52.000
Hầu hết thời gian, giá trị "und" nên được sử dụng ở đây để đảm bảo tất cả khán giả đều nhìn thấy các giá trị giống nhau.

00:10:52.000 --> 00:11:02.000
Bạn có thể bị cám dỗ sử dụng "en-us" nếu các giá trị bằng tiếng Anh, nhưng làm như vậy sẽ khiến các thiết bị có ngôn ngữ được đặt thành bất kỳ ngôn ngữ nào khác như tiếng Tây Ban Nha không hiển thị siêu dữ liệu.

00:11:02.000 --> 00:11:05.000
Ở đây chúng tôi có một ví dụ trong đó chúng tôi đang thiết lập tác phẩm nghệ thuật và tiêu đề.

00:11:05.000 --> 00:11:08.000
Đầu tiên, chúng tôi lấy dữ liệu hình ảnh tác phẩm nghệ thuật từ gói của chúng tôi.

00:11:08.000 --> 00:11:11.000
Hầu hết các ứng dụng sẽ tìm nạp cái này từ một tài nguyên mạng.

00:11:11.000 --> 00:11:15.000
Sau đó, chúng tôi khởi tạo một AVMetadataItem có thể thay đổi mới.

00:11:15.000 --> 00:11:18.000
Chúng tôi đặt mã định danh thành .commonIdentifierArtwork.

00:11:18.000 --> 00:11:23.000
Sau đó, chúng tôi đặt giá trị làm dữ liệu hình ảnh tác phẩm nghệ thuật thô là NSData.

00:11:23.000 --> 00:11:28.000
Vì dữ liệu hình ảnh là JPEG, chúng tôi đặt dataType thành kCMMetadataBaseDataType_JPEG.

00:11:28.000 --> 00:11:33.000
Nếu tác phẩm nghệ thuật của bạn thay vào đó là PNG, bạn sẽ sử dụng kCMMetadataBaseDataType_PNG.

00:11:33.000 --> 00:11:40.000
Bởi vì chúng tôi muốn siêu dữ liệu này hiển thị cho người dùng với các thiết bị được đặt thành bất kỳ ngôn ngữ nào, chúng tôi đặt extendedLanguageTag thành "und" hoặc "undefined".

00:11:40.000 --> 00:11:49.000
Sau đó, chúng tôi lặp lại các bước tương tự cho tiêu đề, sử dụng .commonIdentifierTitle và tiêu đề chuỗi cho giá trị và "und" một lần nữa cho ExtendedLanguageTag.

00:11:49.000 --> 00:11:57.000
Khi chúng tôi đã thiết lập tất cả các mục siêu dữ liệu của mình, chúng tôi thêm chúng vào một mảng và đặt nó thành thuộc tính externalMetadata của AVPlayerItem.

00:11:57.000 --> 00:12:05.000
Bây giờ chúng tôi đã thêm tác phẩm nghệ thuật và tiêu đề vào vật phẩm của người chơi, bạn có thể xem cách ánh xạ này đến những gì được hiển thị trong Trung tâm điều khiển và Màn hình khóa trên iOS.

00:12:05.000 --> 00:12:11.000
Giống như tác phẩm nghệ thuật, có các loại siêu dữ liệu khác có thể được đặt như mô tả, thông tin phụ đề và xếp hạng nội dung.

00:12:11.000 --> 00:12:17.000
Ứng dụng của bạn nên đặt càng nhiều trong số này càng tốt để cung cấp cho người dùng trải nghiệm phong phú nhất có thể.

00:12:17.000 --> 00:12:22.000
Cho đến nay chúng tôi đã đề cập đến xuất bản tự động với MPNowPlayingSession và xuất bản với AVKit.

00:12:22.000 --> 00:12:27.000
Nhưng MPNowPlayingSession và tính năng xuất bản tự động của nó yêu cầu chuyển một phiên bản AVPlayer cho nó.

00:12:27.000 --> 00:12:31.000
Đó có thể không phải là một lựa chọn cho tất cả các ứng dụng và vẫn có thể xuất bản thủ công.

00:12:31.000 --> 00:12:35.000
Xuất bản thủ công yêu cầu bạn cung cấp các giá trị cho tất cả siêu dữ liệu.

00:12:35.000 --> 00:12:40.000
Không giống như xuất bản tự động, thông tin như thời gian đã trôi qua và tốc độ phát lại không thể được xác định bởi hệ thống cho bạn.

00:12:40.000 --> 00:12:48.000
Điều này có nghĩa là bạn có khả năng kiểm soát hạt mịn thủ công đối với trạng thái phát lại mức thấp và ứng dụng của bạn có trách nhiệm giữ cho nó chính xác theo thời gian khi phát lại thay đổi.

00:12:48.000 --> 00:12:58.000
Lưu ý rằng việc đăng ký và phản hồi các lệnh từ xa vẫn được yêu cầu và vì chúng tôi không sử dụng MPNowPlayingSession, phiên bản được chia sẻ của MPRemoteCommandCenter phải được sử dụng.

00:12:58.000 --> 00:13:02.000
Đây là một ví dụ cơ bản cho thấy cách cập nhật từ điển Thông tin Đang phát.

00:13:02.000 --> 00:13:08.000
Đầu tiên, chúng tôi tạo một phiên bản MPMediaItemArtwork chứa hình ảnh, tương tự như những gì chúng tôi đã làm để xuất bản tự động.

00:13:08.000 --> 00:13:12.000
Sau đó, chúng tôi tạo một từ điển chứa siêu dữ liệu mà chúng tôi có sẵn.

00:13:12.000 --> 00:13:19.000
Trong trường hợp này, chúng tôi đặt tiêu đề, tác phẩm nghệ thuật và giá trị người chơi thời lượng, thời gian đã trôi qua và tốc độ phát lại.

00:13:19.000 --> 00:13:23.000
Sau đó chúng tôi đặt nó trên phiên bản mặc định MPNowPlayingInfoCenter.

00:13:23.000 --> 00:13:32.000
Các bản cập nhật cho siêu dữ liệu này nên được thực hiện bất cứ khi nào có những thay đổi đáng kể xảy ra trong quá trình phát lại, chẳng hạn như phát hoặc tạm dừng, người dùng quét tiến hoặc lùi hoặc một phần nội dung mới bắt đầu phát.

00:13:32.000 --> 00:13:34.000
Bạn không cần phải cập nhật thời gian đã trôi qua định kỳ.

00:13:34.000 --> 00:13:41.000
Hệ thống sẽ luôn suy ra thời gian đã trôi qua chính xác dựa trên thời gian đã trôi qua kể từ lần cập nhật cuối cùng.

00:13:41.000 --> 00:13:50.000
Bây giờ bạn đã quen thuộc với tất cả các cách khác nhau để xuất bản siêu dữ liệu Đang phát và phản hồi các lệnh từ xa từ các thiết bị và giao diện khác, bạn nên tích hợp để tối đa hóa trải nghiệm người dùng.

00:13:50.000 --> 00:13:51.000
Nó dễ dàng hơn bao giờ hết.

00:13:51.000 --> 00:13:59.000
Các tích hợp hiện tại cũng có thể mang lại lợi ích - chuyển sang xuất bản tự động là một cách dễ dàng để ngăn chặn hồi quy trong tương lai và giảm thiểu số lượng mã bạn phải duy trì.

00:13:59.000 --> 00:14:03.000
Để biết thêm thông tin, hãy xem MediaPlayer trên developer.apple.com.

00:14:03.000 --> 23:59:59.000
Cảm ơn vì đã xem.

