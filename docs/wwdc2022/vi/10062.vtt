WEBVTT

00:00:00.000 --> 00:00:03.000
♪ Nhạc hip-hop nhạc cụ êm dịu ♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:13.000
Xin chào và chào mừng đến với phiên "Gặp gỡ có thể chuyển nhượng."

00:00:13.000 --> 00:00:26.000
Tên tôi là Julia. Tôi là một kỹ sư SwiftUI và tôi rất vui mừng được giới thiệu Transferable, một cách khai báo để hỗ trợ kéo và thả, sao chép/dán và các chức năng khác trong ứng dụng của bạn.

00:00:26.000 --> 00:00:34.000
Ngoài SwiftUI và phát triển các ứng dụng cho Mac, tôi cũng quan tâm đến câu chuyện về phụ nữ trong khoa học máy tính.

00:00:34.000 --> 00:00:38.000
Tôi nghĩ điều quan trọng là chúng ta phải biết những anh hùng của mình.

00:00:38.000 --> 00:00:50.000
Vì vậy, tôi quyết định tạo một ứng dụng danh mục nơi tôi có thể xem, thêm và chỉnh sửa danh sách hồ sơ của các nhà phát minh, kỹ sư và nhà khoa học nữ.

00:00:50.000 --> 00:01:04.000
Tôi muốn ứng dụng này hỗ trợ liên tục kéo và thả chân dung của các nhà khoa học đến và đi từ ứng dụng, có thể sử dụng nội dung khay nhớ tạm để dán các sự kiện thú vị.

00:01:04.000 --> 00:01:10.000
Và lần đầu tiên, ứng dụng của tôi có thể hỗ trợ chia sẻ trên watchOS!

00:01:10.000 --> 00:01:17.000
Người dùng tiềm năng của tôi nói rằng họ rất muốn có thể chia sẻ hồ sơ cá nhân từ đồng hồ của họ.

00:01:17.000 --> 00:01:29.000
Ngoài ra, thông qua SwiftUI, việc chia sẻ hiện có sẵn trên iOS và Mac, cũng có thiết kế hoàn toàn mới này cho ShareSheet trong năm nay.

00:01:29.000 --> 00:01:42.000
Dưới mui xe, việc bật tất cả các tính năng này yêu cầu các mô hình mà chúng tôi đã phải hỗ trợ được gửi đến người nhận bên trong ứng dụng của chúng tôi hoặc thậm chí trong các ứng dụng khác.

00:01:42.000 --> 00:01:49.000
Cấu trúc hồ sơ chứa tất cả thông tin mà chúng ta có về một tính cách duy nhất.

00:01:49.000 --> 00:01:54.000
Tất cả các hồ sơ được đóng gói trong một kho lưu trữ có thể được chia sẻ giữa bạn bè.

00:01:54.000 --> 00:02:01.000
Chúng tôi lưu trữ những sự thật thú vị về tính cách theo chuỗi và thậm chí có thể đính kèm video.

00:02:01.000 --> 00:02:07.000
Và có một cách dễ dàng mới tuyệt vời để làm cho tất cả các loại mô hình này được chia sẻ.

00:02:07.000 --> 00:02:09.000
Gặp gỡ có thể chuyển nhượng!

00:02:09.000 --> 00:02:20.000
Đây là cách khai báo Swift-first để mô tả cách các mô hình của bạn có thể được tuần tự hóa và hủy nối tiếp để chia sẻ và truyền dữ liệu.

00:02:20.000 --> 00:02:40.000
Hôm nay, chúng ta sẽ nói về Transferable là gì và những gì đang diễn ra đằng sau hậu trường khi chúng ta sử dụng nó; làm thế nào để phù hợp với các loại tùy chỉnh; và cuối cùng, tôi sẽ chia sẻ một số mẹo và thủ thuật nâng cao có thể giúp tùy chỉnh Transferable để thực hiện chính xác những gì bạn cần.

00:02:40.000 --> 00:02:43.000
Hãy bắt đầu nào!

00:02:43.000 --> 00:02:58.000
Giả sử có hai ứng dụng đang chạy và người dùng muốn chuyển một số thông tin từ ứng dụng này sang ứng dụng khác thông qua sao chép/dán, ShareSheet, chỉ cần kéo hoặc sử dụng một số tính năng ứng dụng khác.

00:02:58.000 --> 00:03:05.000
Khi bạn gửi thứ gì đó giữa hai ứng dụng khác nhau, có tất cả dữ liệu nhị phân này đi qua.

00:03:05.000 --> 00:03:12.000
Một phần quan trọng của việc gửi dữ liệu này là xác định nó tương ứng với cái gì.

00:03:12.000 --> 00:03:21.000
Nó có thể là văn bản, video, hồ sơ nữ kỹ sư yêu thích của tôi hoặc toàn bộ kho lưu trữ.

00:03:21.000 --> 00:03:26.000
Và có UTType mô tả dữ liệu dùng để làm gì.

00:03:26.000 --> 00:03:31.000
Chúng ta hãy xem xét kỹ hơn cách các ứng dụng tạo ra dữ liệu nhị phân này.

00:03:31.000 --> 00:03:55.000
Tất cả các loại có thể được chia sẻ với các ứng dụng khác, hoặc thậm chí trong một ứng dụng duy nhất, phải cung cấp hai phần thông tin: cách chuyển đổi chúng sang và từ dữ liệu nhị phân và loại nội dung tương ứng với cấu trúc của dữ liệu nhị phân và cho người nhận biết những gì họ thực sự nhận được.

00:03:55.000 --> 00:04:07.000
Loại nội dung - còn được gọi là số nhận dạng loại thống nhất - là một công nghệ dành riêng cho Apple mô tả các số nhận dạng cho các cấu trúc nhị phân khác nhau cũng như các khái niệm trừu tượng.

00:04:07.000 --> 00:04:13.000
Các số nhận dạng tạo thành một cây và chúng tôi cũng có thể xác định các số nhận dạng tùy chỉnh.

00:04:13.000 --> 00:04:18.000
Ví dụ, một cho cấu trúc nhị phân được sử dụng bởi hồ sơ của chúng tôi.

00:04:18.000 --> 00:04:26.000
Để khai báo một mã định danh tùy chỉnh, trước tiên, hãy thêm khai báo của nó vào tệp Info.plist.

00:04:26.000 --> 00:04:30.000
Nó cũng là một ý tưởng tốt để thêm một phần mở rộng tệp.

00:04:30.000 --> 00:04:37.000
Nếu dữ liệu được lưu trên đĩa, hệ thống sẽ biết rằng ứng dụng của bạn có thể mở tệp đó.

00:04:37.000 --> 00:04:40.000
Thứ hai, khai báo nó bằng mã.

00:04:40.000 --> 00:04:49.000
Để tìm hiểu thêm về các loại nội dung, tôi mời bạn xem một video: "Số nhận dạng loại đồng phục - Giới thiệu lại."

00:04:49.000 --> 00:04:58.000
Cá nhân tôi thích nó, và nó đưa ra một ý tưởng rõ ràng về số nhận dạng loại thống nhất là gì và cách sử dụng chúng.

00:04:58.000 --> 00:05:10.000
Tin tốt là nhiều loại tiêu chuẩn đã phù hợp với Transferable; ví dụ: chuỗi, dữ liệu, URL, chuỗi được gán, hình ảnh.

00:05:10.000 --> 00:05:27.000
Bạn chỉ cần một vài dòng mã để dán các sự kiện thú vị vào hồ sơ với giao diện nút dán SwiftUI mới, hỗ trợ kéo hình ảnh từ chế độ xem hoặc nhận hình ảnh bị rơi từ Finder hoặc các ứng dụng khác.

00:05:27.000 --> 00:05:34.000
Sử dụng br và ShareLink mới, giờ đây chúng ta có thể triển khai chia sẻ trải nghiệm từ đồng hồ.

00:05:34.000 --> 00:05:40.000
Chúng tôi đã đề cập đến những điều cơ bản, và bây giờ bạn có ý tưởng về cách sử dụng Transferable và nó là gì.

00:05:40.000 --> 00:05:47.000
Hãy xem cách thêm sự phù hợp có thể chuyển nhượng vào các mô hình trong ứng dụng của chúng tôi.

00:05:47.000 --> 00:05:54.000
Như tôi đã đề cập trước đó, có bốn loại mô hình trong ứng dụng của chúng tôi sẽ được chia sẻ.

00:05:54.000 --> 00:06:01.000
Một trong số chúng - chuỗi - đã phù hợp với Chuyển nhượng; chúng ta không cần phải làm gì thêm nữa.

00:06:01.000 --> 00:06:09.000
Nhưng còn hồ sơ duy nhất, ProfilesArchive và video mà tôi cũng muốn chia sẻ thì sao?

00:06:09.000 --> 00:06:17.000
Để phù hợp với một loại có thể chuyển nhượng, chỉ có một thuộc tính để thực hiện: TransferRepresentation.

00:06:17.000 --> 00:06:22.000
Nó mô tả cách mô hình sẽ được chuyển giao.

00:06:22.000 --> 00:06:31.000
Có ba đại diện quan trọng cần lưu ý: CodableRepresentation, DataRepresentation, và FileRepresentation.

00:06:31.000 --> 00:06:34.000
Chúng ta sẽ nói về mỗi người trong số họ.

00:06:34.000 --> 00:06:39.000
Nhưng trước tiên, hãy đáp ứng mô hình trung tâm của chúng tôi, Cấu trúc hồ sơ.

00:06:39.000 --> 00:06:46.000
Nó có một id, một cái tên, một tiểu sử, có thể một số sự thật thú vị, một bức chân dung và một video.

00:06:46.000 --> 00:06:48.000
Nó đã phù hợp với Codable.

00:06:48.000 --> 00:06:56.000
Do đó, chúng tôi có thể bao gồm CodableRepresentation trong sự phù hợp có thể chuyển nhượng của chúng tôi.

00:06:56.000 --> 00:07:05.000
Biểu diễn có thể mã hóa sử dụng bộ mã hóa để chuyển đổi hồ sơ thành dữ liệu nhị phân và bộ giải mã để chuyển đổi lại.

00:07:05.000 --> 00:07:12.000
Theo mặc định, nó sử dụng JSON, nhưng bạn cũng có thể cung cấp cặp mã hóa/giải mã của riêng mình.

00:07:12.000 --> 00:07:26.000
Để tìm hiểu thêm về giao thức Codable và cách thức hoạt động của bộ mã hóa và bộ giải mã, tôi mời bạn xem phiên WWDC nơi giao thức này lần đầu tiên được giới thiệu: "Dữ liệu bạn có thể tin tưởng."

00:07:26.000 --> 00:07:28.000
Quay lại hồ sơ của chúng tôi.

00:07:28.000 --> 00:07:34.000
Điều duy nhất Codable yêu cầu là biết loại nội dung mong muốn.

00:07:34.000 --> 00:07:41.000
Vì đây sẽ là một định dạng tùy chỉnh, chúng tôi sẽ sử dụng mã định danh loại thống nhất được khai báo tùy chỉnh.

00:07:41.000 --> 00:07:45.000
Sau khi thêm loại nội dung hồ sơ, chúng tôi đã sẵn sàng.

00:07:45.000 --> 00:07:49.000
Hồ sơ bây giờ phù hợp với Chuyển nhượng!

00:07:49.000 --> 00:07:54.000
Bây giờ, chúng ta hãy xem xét một trường hợp khác: ProfilesArchive.

00:07:54.000 --> 00:07:58.000
Nó đã hỗ trợ chuyển đổi sang dữ liệu CSV.

00:07:58.000 --> 00:08:08.000
Tôi có thể xuất danh sách hồ sơ phụ nữ trong tệp CSV và sau đó chia sẻ với bạn bè hoặc nhập nó trên một máy tính khác.

00:08:08.000 --> 00:08:18.000
Kho lưu trữ có thể được chuyển đổi sang và từ dữ liệu, và điều đó có nghĩa là chúng ta có thể sử dụng DataRepresentation.

00:08:18.000 --> 00:08:30.000
Nếu chúng ta nhìn vào bên trong, chúng ta sẽ thấy rằng DataRepresentation sử dụng các hàm chuyển đổi để trực tiếp tạo biểu diễn nhị phân và tái tạo lại giá trị cho người nhận.

00:08:30.000 --> 00:08:36.000
Đây là cách dễ dàng để phù hợp với Transferable bằng cách sử dụng DataRepresentation.

00:08:36.000 --> 00:08:46.000
Tất cả những gì cần làm là gọi hai chức năng mà chúng ta đã có: trình khởi tạo và trình chuyển đổi sang CSV.

00:08:46.000 --> 00:08:53.000
Nếu một hồ sơ cá nhân có một video đính kèm, tôi cũng muốn có thể kéo hoặc chia sẻ nó.

00:08:53.000 --> 00:08:58.000
Nhưng video có thể lớn; Tôi không muốn tải nó vào bộ nhớ.

00:08:58.000 --> 00:09:02.000
Đây là nơi FileRepresentation xuất hiện.

00:09:02.000 --> 00:09:14.000
Và một lần nữa, nếu chúng ta vén bức màn lên, chúng ta sẽ thấy rằng FileRepresentation chuyển URL được cung cấp cho người nhận và sử dụng nó để tái tạo lại mục Có thể chuyển cho họ.

00:09:14.000 --> 00:09:23.000
FileRepresentation cho phép chúng tôi chia sẻ các mục được hỗ trợ bởi một biểu diễn nhị phân được ghi vào đĩa: tệp.

00:09:23.000 --> 00:09:25.000
Hãy tóm tắt.

00:09:25.000 --> 00:09:37.000
Nếu bạn chỉ muốn chọn một biểu diễn duy nhất cho một trường hợp sử dụng đơn giản, trước tiên hãy kiểm tra xem mô hình có phù hợp Codable và không có bất kỳ yêu cầu định dạng nhị phân cụ thể nào hay không.

00:09:37.000 --> 00:09:40.000
Sử dụng CodableRepresentation nếu đúng như vậy.

00:09:40.000 --> 00:09:45.000
Nếu không, hãy kiểm tra xem nó được lưu trữ trong bộ nhớ hay trên đĩa.

00:09:45.000 --> 00:09:51.000
DataRepresentation hoạt động tốt nhất cho cái trước và FileRepresetnation cho cái sau.

00:09:51.000 --> 00:09:57.000
Có thể chuyển nhượng có nghĩa là bao gồm không chỉ các trường hợp sử dụng đơn giản, mà còn cả những trường hợp phức tạp.

00:09:57.000 --> 00:10:01.000
Và hầu hết thời gian, chỉ với một vài dòng mã.

00:10:01.000 --> 00:10:04.000
Hãy tự mình xem nó!

00:10:04.000 --> 00:10:10.000
Trước đây, chúng tôi đã thêm sự phù hợp có thể chuyển nhượng vào hồ sơ, nhưng hãy đi xa hơn.

00:10:10.000 --> 00:10:19.000
Khi hồ sơ được sao chép vào bảng dán và dán vào bất kỳ trường văn bản nào, tôi muốn dán tên của hồ sơ.

00:10:19.000 --> 00:10:23.000
Điều này có nghĩa là chúng ta cần thêm một đại diện khác.

00:10:23.000 --> 00:10:29.000
ProxyRepresentation cho phép các loại có thể chuyển nhượng khác đại diện cho mô hình của chúng tôi.

00:10:29.000 --> 00:10:34.000
Một dòng và Hồ sơ có thể được dán dưới dạng văn bản.

00:10:34.000 --> 00:10:41.000
Lưu ý rằng tôi đã thêm ProxyRepresentation sau Codable; thứ tự rất quan trọng.

00:10:41.000 --> 00:10:47.000
Người nhận sẽ sử dụng đại diện đầu tiên với loại nội dung mà họ hỗ trợ.

00:10:47.000 --> 00:10:52.000
Nếu người nhận biết về Hồ sơ loại nội dung tùy chỉnh của chúng tôi, họ nên sử dụng nó.

00:10:52.000 --> 00:11:00.000
Nếu không, nhưng họ hỗ trợ văn bản, hãy để họ sử dụng ProxyRepresentation thay thế.

00:11:00.000 --> 00:11:07.000
Bây giờ, Hồ sơ hỗ trợ cả chuyển đổi bộ mã hóa/giải mã và chuyển đổi thành văn bản.

00:11:07.000 --> 00:11:15.000
ProxyRepresentation trong trường hợp này mô tả chỉ xuất sang văn bản, nhưng không xây dựng lại hồ sơ từ nó.

00:11:15.000 --> 00:11:20.000
Bất kỳ đại diện nào cũng có thể mô tả cả hai chuyển đổi, hoặc chỉ một.

00:11:20.000 --> 00:11:28.000
Bây giờ, khi chúng ta biết về ProxyRepresentations, chúng ta có thực sự cần FileRepresentation cho video không?

00:11:28.000 --> 00:11:31.000
Chúng ta có thể có proxy với một URL.

00:11:31.000 --> 00:11:33.000
Sự khác biệt là tinh tế.

00:11:33.000 --> 00:11:46.000
FileRepresentation nhằm mục đích làm việc với các URL được ghi vào đĩa và đảm bảo quyền truy cập của người nhận vào tệp này hoặc bản sao của nó bằng cách cấp phần mở rộng hộp cát tạm thời.

00:11:46.000 --> 00:11:53.000
ProxyRepresentation xử lý các URL giống như bất kỳ mục Chuyển nhượng nào khác, như chuỗi.

00:11:53.000 --> 00:11:58.000
Nó không có bất kỳ khả năng bổ sung nào mà chúng tôi cần cho các tệp.

00:11:58.000 --> 00:12:01.000
Nó có nghĩa là chúng ta có thể có cả hai.

00:12:01.000 --> 00:12:08.000
Cái đầu tiên, FileRepresentation, cho phép người nhận truy cập tệp phim với nội dung của nó.

00:12:08.000 --> 00:12:15.000
Cái thứ hai sẽ hoạt động khi tôi dán video đã sao chép vào trường văn bản.

00:12:15.000 --> 00:12:21.000
Vì vậy, URL được xử lý rất khác nhau bởi các biểu diễn tệp và proxy.

00:12:21.000 --> 00:12:35.000
Trong trường hợp đầu tiên, tải trọng thực tế là tài sản trên đĩa và trong trường hợp thứ hai, tải trọng là chính cấu trúc URL có thể trỏ đến một trang web từ xa.

00:12:35.000 --> 00:12:39.000
Một mô hình khác mà tôi muốn nâng cấp là ProfilesArchive.

00:12:39.000 --> 00:12:46.000
Có những trường hợp khi nó không hỗ trợ chuyển đổi sang CSV và tôi muốn phản ánh điều đó trong mã.

00:12:46.000 --> 00:12:48.000
Hãy xem nào.

00:12:48.000 --> 00:12:57.000
Chúng tôi thêm một thuộc tính Boolean cho chúng tôi biết liệu chúng tôi có thể xuất sang CSV và các hàm chuyển đổi đến và đi từ dữ liệu hay không.

00:12:57.000 --> 00:13:03.000
Để thể hiện ý tưởng này bằng mã, chúng ta có thể sử dụng .exportingCondition.

00:13:03.000 --> 00:13:09.000
Nếu kho lưu trữ đã cho không hỗ trợ CSV, nó sẽ không được xuất ở định dạng này.

00:13:09.000 --> 00:13:16.000
Với API này, bạn thậm chí có thể xây dựng TransferRepresentation tùy chỉnh, giống như Lượt xem tùy chỉnh trong SwiftUI.

00:13:16.000 --> 00:13:24.000
Yêu cầu duy nhất là cung cấp thuộc tính cơ thể nơi bạn có thể có các biểu diễn khác được định cấu hình theo cách bạn cần.

00:13:24.000 --> 00:13:35.000
Nó rất hữu ích nếu bạn muốn sử dụng lại sự kết hợp của các đại diện hoặc bạn có một số đại diện dữ liệu riêng tư mà bạn không muốn phơi bày công khai.

00:13:35.000 --> 00:13:42.000
Transferable đã giúp tôi nhanh chóng xây dựng ứng dụng này với tất cả các chức năng mà tôi muốn có.

00:13:42.000 --> 00:13:49.000
Tôi hy vọng nó sẽ giúp bạn xây dựng các ứng dụng giàu tính năng trong thời gian ngắn hơn bao giờ hết.

00:13:49.000 --> 00:13:54.000
Cảm ơn bạn đã tham gia cùng tôi trong phiên này và tiếp tục xây dựng các ứng dụng tuyệt vời!

00:13:54.000 --> 23:59:59.000
♪

