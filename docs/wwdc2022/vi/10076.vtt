WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:14.000
Owen: Xin chào, và chào mừng bạn đến với Mang ứng dụng iOS của bạn lên Mac.

00:00:14.000 --> 00:00:19.000
Tên tôi là Owen, và tôi là một kỹ sư Mac Catalyst.

00:00:19.000 --> 00:00:39.000
Cho dù bạn gửi ứng dụng iOS của mình trên M1 Macs mà không có thay đổi, đã bắt đầu suy nghĩ về việc tiến xa hơn với Mac Catalyst hay đã gửi một ứng dụng Catalyst mà bạn muốn làm tốt hơn nữa, tôi rất vui được chia sẻ các API và kỹ thuật mới để làm cho ứng dụng của bạn trở nên tốt nhất có thể trên Mac.

00:00:39.000 --> 00:00:49.000
Nhưng trước tiên, tôi muốn thể hiện một số công việc tuyệt vời được thực hiện bởi các nhà phát triển để giới thiệu những gì có thể với Mac Catalyst.

00:00:49.000 --> 00:01:00.000
Craft là một ứng dụng đáng kinh ngạc giúp bạn dễ dàng bắt đầu viết và tạo ra các tài liệu đẹp, và là người chiến thắng Ứng dụng Mac của năm 2021 của App Store.

00:01:00.000 --> 00:01:10.000
Và vì Mac Catalyst, trải nghiệm tuyệt vời này có sẵn trên các thiết bị, vì vậy nó luôn sẵn sàng khi ý tưởng tiếp theo của bạn thành công.

00:01:10.000 --> 00:01:23.000
Các công cụ chỉnh sửa AI thông minh của Darkroom hợp lý hóa quy trình chụp ảnh của bạn và bạn có thể bắt đầu chỉnh sửa tại hiện trường trên iPhone hoặc iPad và hoàn thành tại nhà với ứng dụng Mac Catalyst của họ.

00:01:23.000 --> 00:01:36.000
Nó đã giành được Giải thưởng Thiết kế của Apple cho thiết kế xuất sắc, sự đổi mới và sự khéo léo, và đã trở thành một ứng dụng Lựa chọn của Biên tập viên App Store kể từ năm 2018.

00:01:36.000 --> 00:01:42.000
Bầu trời đêm là một cách tuyệt vời để khám phá vũ trụ ngay từ máy tính của bạn.

00:01:42.000 --> 00:01:51.000
Bạn có thể tìm hiểu về các chòm sao và xem xét kỹ hơn với các mô hình 3D chi tiết về mặt trăng, hành tinh và vệ tinh.

00:01:51.000 --> 00:01:59.000
Nó đã giành được nhiều giải thưởng Webby và Lovie cho thiết kế và hình ảnh ngoạn mục.

00:01:59.000 --> 00:02:15.000
Asphalt 9 - Legends là một mô phỏng đua xe có chỉ số octan cao đầy phấn khích và là trò chơi đua xe duy nhất từng giành được Giải thưởng Thiết kế của Apple và hành động này thậm chí còn thú vị hơn trên màn ảnh rộng với phiên bản Mac Catalyst của họ.

00:02:15.000 --> 00:02:23.000
Bây giờ, tôi sẽ tìm hiểu tất cả các cách bạn có thể tạo ra trải nghiệm tuyệt vời trên Mac cho ứng dụng của mình.

00:02:23.000 --> 00:02:35.000
Tôi sẽ bắt đầu với một vài tùy chọn mới để chạy ứng dụng iOS của bạn nguyên bản trên M1, cách dễ nhất để tải ứng dụng iOS hiện tại của bạn lên Mac.

00:02:35.000 --> 00:02:44.000
Sau đó, tôi sẽ đi qua việc thêm điểm đến chạy Mac Catalyst trong Xcode và xem lại những gì thay đổi.

00:02:44.000 --> 00:02:53.000
Tôi sẽ thể hiện những hành vi mới mà ứng dụng Catalyst của bạn sẽ nhận được miễn phí khi bạn áp dụng các API iPad cấp Máy tính để bàn mới.

00:02:53.000 --> 00:03:01.000
Sau đó đào sâu vào các cải tiến cụ thể của Mac được thực hiện với các API Mac Catalyst mới.

00:03:01.000 --> 00:03:09.000
Tôi sẽ bắt đầu với một số tùy chọn mới cho các ứng dụng iOS gốc trên máy Mac với M1.

00:03:09.000 --> 00:03:14.000
Các ứng dụng iOS của bạn đã có sẵn trên máy Mac M1 trong Mac App Store.

00:03:14.000 --> 00:03:22.000
Miễn là bạn chưa chọn không tham gia, ứng dụng của bạn sẽ được tìm thấy trong tìm kiếm trong tab "Ứng dụng iPhone và iPad".

00:03:22.000 --> 00:03:29.000
Và chúng tôi có một vài bổ sung mới có thể cải thiện trải nghiệm ứng dụng của bạn trên Mac.

00:03:29.000 --> 00:03:38.000
Có hai khóa mới mà bạn có thể thêm vào danh sách Thông tin của mình, cho phép bạn chỉ định cách ứng dụng iOS của bạn sẽ khởi chạy trên Mac.

00:03:38.000 --> 00:03:51.000
Các khóa này không bị ràng buộc với bất kỳ phiên bản SDK nào và bị bỏ qua trên iOS và Mac trước macOS 12.1, vì vậy chúng an toàn để thêm vào bất kỳ ứng dụng nào có lợi.

00:03:51.000 --> 00:04:03.000
Phím đầu tiên, "UISupportsTrueScreenSizeOnMac", chỉ ra rằng ứng dụng của bạn đã được chuẩn bị cho nhiều cấu hình hiển thị khác nhau mà nó có thể gặp phải.

00:04:03.000 --> 00:04:13.000
Bằng cách này, ứng dụng của bạn có được kích thước màn hình và mật độ điểm ảnh thực, thay vì kích thước iPad tương thích.

00:04:13.000 --> 00:04:24.000
Phím thứ hai, "UILaunchToFullScreenByDefaultOnMac," cho hệ thống biết rằng ứng dụng của bạn thích chuyển sang chế độ toàn màn hình ngay khi nó được khởi chạy.

00:04:24.000 --> 00:04:35.000
Hai phím này hoạt động tốt với nhau, đặc biệt là cho các trò chơi và ứng dụng đa phương tiện, mang đến trải nghiệm toàn màn hình hoàn hảo về điểm ảnh, tràn cạnh.

00:04:35.000 --> 00:04:43.000
Những chìa khóa này đã được Sky: Children of the Light từng đoạt giải thưởng thông qua để cung cấp trải nghiệm nhập vai ngay lập tức.

00:04:43.000 --> 00:04:52.000
Ngay sau khi trò chơi được khởi chạy, nó sẽ kéo bạn vào thế giới khám phá tuyệt đẹp của nó bằng cách lấp đầy màn hình với các chi tiết phong phú.

00:04:52.000 --> 00:05:08.000
Một cách khác để cải thiện trải nghiệm ứng dụng của bạn trên Mac là với Touch Alternatives, tự động chuyển đổi đầu vào bàn phím, chuột và bàn di chuột thành cử chỉ cảm ứng đa điểm iOS và chuyển động của thiết bị mà ứng dụng của bạn mong đợi.

00:05:08.000 --> 00:05:15.000
Chúng tôi đã thêm hỗ trợ thay thế cảm ứng tích hợp cho nhiều trò chơi phổ biến nhất trên cửa hàng ứng dụng.

00:05:15.000 --> 00:05:24.000
Khi được khởi chạy, họ sẽ tự động hiển thị một hướng dẫn giải thích cách các điều khiển cảm ứng của họ chuyển sang bàn phím và chuột hoặc bàn di chuột.

00:05:24.000 --> 00:05:35.000
Ví dụ, các phím mũi tên có thể được sử dụng để mô phỏng các thao tác vuốt từ giữa cửa sổ và phím cách để thực hiện thao tác chạm.

00:05:35.000 --> 00:05:48.000
Để chọn tham gia các lựa chọn thay thế cảm ứng tự động, hãy tạo một tệp plist mới trong ứng dụng của bạn có tên "com.apple.uikit.inputalternatives.plist".

00:05:48.000 --> 00:06:01.000
Đầu tiên, thêm một khóa được gọi là "defaultEnablement" với giá trị chuỗi là "enabled", cho hệ thống biết rằng Touch Alternatives nên được bật ngay lập tức.

00:06:01.000 --> 00:06:05.000
Bên dưới đó, hãy thêm một phím khác được gọi là "requiredOnboarding".

00:06:05.000 --> 00:06:14.000
Đây là một mảng chứa danh sách các điều khiển mà bạn đã quyết định hoạt động tốt nhất cho ứng dụng của mình.

00:06:14.000 --> 00:06:27.000
Bạn có thể lựa chọn tích hợp năm tùy chọn điều khiển khác nhau: chạm, nghiêng, kéo, vuốt và đầu vào cảm ứng trực tiếp từ bàn di chuột.

00:06:27.000 --> 00:06:41.000
Lưu ý rằng khi Touch Alternatives được bật, tất cả các điều khiển này sẽ hoạt động, nhưng bạn vẫn nên quyết định cái nào có ý nghĩa nhất cho ứng dụng của mình và chỉ thêm các điều khiển mà bạn muốn đánh dấu vào danh sách giới thiệu của mình.

00:06:41.000 --> 00:06:50.000
Điều này được phát hiện khi ứng dụng của bạn chạy trên Mac và trong lần khởi chạy đầu tiên, bảng giới thiệu được trình bày làm nổi bật các điều khiển đó.

00:06:50.000 --> 00:07:02.000
Trong cài đặt ứng dụng của bạn, mọi người có thể chuyển đổi giữa hiển thị các điều khiển ưa thích được chỉ định trong danh sách và tất cả các điều khiển.

00:07:02.000 --> 00:07:09.000
Tất nhiên, lựa chọn tốt nhất là triển khai hỗ trợ bàn phím và con trỏ trực tiếp trong ứng dụng của bạn.

00:07:09.000 --> 00:07:19.000
Bằng cách này, bạn đảm bảo ứng dụng của mình hoạt động tốt trên tất cả các thiết bị, bao gồm iPad có bàn phím kèm theo và trên Mac.

00:07:19.000 --> 00:07:28.000
Để biết thêm thông tin, hãy xem các video "Hỗ trợ bàn phím phần cứng trong ứng dụng của bạn" và "Xử lý đầu vào bàn di chuột và chuột".

00:07:28.000 --> 00:07:35.000
Bây giờ tôi sẽ nhanh chóng đề cập đến quá trình trở thành một ứng dụng Mac Catalyst.

00:07:35.000 --> 00:07:52.000
Bằng cách thêm điểm đến Mac Catalyst trong cài đặt dự án của bạn, ứng dụng của bạn sẽ tự động được chuyển đổi thành ứng dụng Mac Catalyst đầy đủ có khả năng chạy trên mọi máy Mac và cho phép bạn tùy chỉnh thêm bằng Mac Catalyst API.

00:07:52.000 --> 00:08:04.000
Bạn cũng có lựa chọn tối ưu hóa giao diện cho Mac, điều này sẽ cung cấp cho bạn các điều khiển theo kiểu AppKit gốc và đảm bảo nội dung ứng dụng của bạn hiển thị ở quy mô gốc.

00:08:04.000 --> 00:08:11.000
Tôi sẽ sử dụng ứng dụng demo Markdown mà nhóm đang làm việc để làm nổi bật các tính năng mới của iPad.

00:08:11.000 --> 00:08:18.000
Khi tôi lần đầu tiên mang nó đến Mac, nó đang chạy ở chế độ "Scaled to Match iPad".

00:08:18.000 --> 00:08:25.000
Khi tôi chuyển sang Tối ưu hóa cho Mac, nhiều thay đổi sẽ tự động xảy ra.

00:08:25.000 --> 00:08:29.000
Khi so sánh song song, sự khác biệt là rõ ràng.

00:08:29.000 --> 00:08:39.000
Khi ứng dụng được tối ưu hóa cho Mac, UINavigationBar được dịch thành NSToolbar phong phú, cung cấp các điều khiển AppKit gốc.

00:08:39.000 --> 00:08:43.000
Bản dịch này cũng xảy ra cho các điều khiển khác.

00:08:43.000 --> 00:08:47.000
Và kích thước văn bản cũng điều chỉnh.

00:08:47.000 --> 00:08:56.000
Văn bản trong thành ngữ iPad hiển thị ở kích thước iPad, và sau đó được thu nhỏ xuống 77% kích thước ban đầu của nó.

00:08:56.000 --> 00:09:04.000
Văn bản trong thành ngữ Mac được xử lý bằng kết xuất phông chữ Mac gốc, xảy ra ở tỷ lệ pixel hoàn hảo.

00:09:04.000 --> 00:09:10.000
Điều này lý tưởng cho ứng dụng của chúng tôi, vì nó đảm bảo văn bản luôn trông sắc nét.

00:09:10.000 --> 00:09:24.000
Với ứng dụng được chọn vào Mac Catalyst, tôi muốn kiểm tra xem nó hoạt động tốt như thế nào và đi sâu hơn vào các hành vi Mac tự động mới được cung cấp bởi API mới của iPadOS 16.

00:09:24.000 --> 00:09:37.000
Nếu bạn đã xem "Gặp gỡ iPad cấp máy tính để bàn" và "Xây dựng ứng dụng iPad cấp máy tính để bàn", bạn đã tìm hiểu về nhiều công cụ mới để nâng cao ứng dụng của mình với iPadOS 16.

00:09:37.000 --> 00:09:43.000
Và những API mới này dịch rất đẹp thành các biểu diễn Mac gốc.

00:09:43.000 --> 00:09:49.000
Tôi sẽ tham quan ứng dụng đánh dấu và làm nổi bật một số hành vi mới này.

00:09:49.000 --> 00:09:55.000
Điều khiển và điều hướng di chuyển từ UINavigationBar vào NSToolbar.

00:09:55.000 --> 00:10:01.000
Và nếu bạn chưa tạo thanh công cụ, chúng tôi sẽ tự động cung cấp cho bạn một thanh công cụ.

00:10:01.000 --> 00:10:09.000
Nếu bạn đã quản lý NSToolbar của riêng mình trong Catalyst, chúng tôi sẽ tránh xa bạn.

00:10:09.000 --> 00:10:15.000
Các điều khiển mục trung tâm trở thành NSToolbarItems.

00:10:15.000 --> 00:10:32.000
Đối với các ứng dụng dựa trên tài liệu, tiêu đề cửa sổ của bạn hiển thị tên tài liệu và nếu "Hiển thị biểu tượng tiêu đề cửa sổ" được bật trong Cài đặt hệ thống trợ năng, biểu tượng proxy tệp cũng sẽ xuất hiện, chính xác như bạn mong đợi trên Mac.

00:10:32.000 --> 00:10:42.000
Và nếu bạn sử dụng bộ điều khiển điều hướng, nút quay lại và các điều khiển điều hướng khác cũng được đưa vào thanh công cụ.

00:10:42.000 --> 00:10:53.000
Ngoài ra, bạn nhận được các mục menu tập trung vào tài liệu mới trong menu Tệp: Sao chép, Di chuyển, Đổi tên và Xuất dưới dạng.

00:10:53.000 --> 00:11:07.000
Để kích hoạt các mục menu này, hãy đảm bảo một số đối tượng trong chuỗi phản hồi của bạn ghi đè lên các chức năng trùng lặp, di chuyển, đổi tên và xuất của UIResponder.

00:11:07.000 --> 00:11:13.000
Nếu ứng dụng của bạn không cần các mục menu Tệp này, chúng nên được xóa bằng UIMenuBuilder.

00:11:13.000 --> 00:11:20.000
Triển khai phương thức buildMenu trên đại diện ứng dụng của bạn để kiểm soát các menu ứng dụng của bạn.

00:11:20.000 --> 00:11:28.000
Các mục menu Tài liệu mới có giá trị UIMenuIdentifier là .document.

00:11:28.000 --> 00:11:42.000
Nếu ứng dụng của bạn bao gồm một thanh tìm kiếm, nó cũng sẽ tự động được kéo vào NSToolbar, trước tiên hiển thị dưới dạng nút tìm kiếm mở rộng vào thanh khi nhấp chuột.

00:11:42.000 --> 00:11:51.000
UISearchTextField hỗ trợ nó được lưu trữ bên trong NSToolbarItem và điều này cũng có sẵn cho các chế độ xem tùy chỉnh.

00:11:51.000 --> 00:12:00.000
Trình đơn đề xuất tìm kiếm và thanh phạm vi tìm kiếm cũng được chuyển đổi thành các điều khiển AppKit gốc.

00:12:00.000 --> 00:12:15.000
Ngoài tất cả các hành vi Mac mới mà bạn nhận được miễn phí bằng cách áp dụng các tính năng iPad cấp máy tính để bàn, chúng tôi cũng đã thêm một số API dành riêng cho Catalyst mới để cải thiện hành vi đa cửa sổ và thanh công cụ.

00:12:15.000 --> 00:12:25.000
Tôi sẽ xem qua ứng dụng Markdown của chúng tôi một lần nữa và thêm các tính năng dành riêng cho Mac này bằng cách sử dụng kết hợp API cũ và mới.

00:12:25.000 --> 00:12:33.000
Từ các API Mac Catalyst hiện có, tôi đã chọn một vài API thực sự nâng cao Ứng dụng của chúng tôi.

00:12:33.000 --> 00:12:39.000
Tôi đã áp dụng thành ngữ Mac để có được các điều khiển gốc và NSToolbar tự động.

00:12:39.000 --> 00:12:53.000
Tôi đã thêm một con trỏ tùy chỉnh để di chuyển chuột qua tay cầm thanh trượt ở giữa chế độ xem phân chia tùy chỉnh sẽ chuyển con trỏ sang mũi tên kép nằm ngang cho biết rằng việc chia có thể được thay đổi kích thước.

00:12:53.000 --> 00:13:02.000
Và tôi đã thêm hỗ trợ in ấn với khóa plist UIApplicationSupportsPrintCommand.

00:13:02.000 --> 00:13:08.000
Khi xem xét ứng dụng của bạn, đừng cảm thấy như bạn cần thêm từng tính năng này.

00:13:08.000 --> 00:13:14.000
Thay vào đó, hãy nghĩ về loại ứng dụng mà bạn tạo và tính năng nào hoạt động tốt nhất với nó.

00:13:14.000 --> 00:13:23.000
Kiểm tra Hướng dẫn Giao diện Con người Mac và Mac Catalyst và tìm kiếm nguồn cảm hứng trong các ứng dụng khác mà bạn sử dụng.

00:13:23.000 --> 00:13:28.000
Với những tính năng này được triển khai, ứng dụng đã ở một vị trí tuyệt vời.

00:13:28.000 --> 00:13:34.000
Và bây giờ với một số Mac Catalyst API mới, tôi có thể làm được nhiều hơn nữa.

00:13:34.000 --> 00:13:46.000
Chúng tôi đã thêm các tùy chọn mới để tùy chỉnh khung cửa sổ ứng dụng và các điều khiển, để hiển thị nội dung UIView trong NSToolbar và để hiển thị cửa sổ bật lên từ các mục trên thanh công cụ.

00:13:46.000 --> 00:13:56.000
Tôi sẽ tiếp tục và sử dụng các API mới này để cải thiện ứng dụng của chúng tôi hơn nữa trên Mac bắt đầu với các cửa sổ.

00:13:56.000 --> 00:14:02.000
Các ứng dụng Catalyst hỗ trợ nhiều cửa sổ sử dụng API UIWindowScene hiện có.

00:14:02.000 --> 00:14:22.000
Và mới trong macOS Ventura, chúng tôi đã thêm API để cho phép bạn tùy chỉnh cửa sổ ứng dụng của mình hơn nữa bằng cách đặt kiểu điều khiển cửa sổ đèn giao thông, thay đổi kích thước và định vị lại cửa sổ của bạn theo chương trình và vô hiệu hóa toàn màn hình cho các cảnh cụ thể.

00:14:22.000 --> 00:14:30.000
Tôi sẽ sử dụng các công cụ này để thêm một tính năng vào ứng dụng đánh dấu để hiển thị một bảng điều khiển phụ trợ hữu ích với cú pháp đánh dấu.

00:14:30.000 --> 00:14:41.000
Bảng điều khiển này sẽ có kích thước nhỏ hơn với API yêu cầu hình học mới và tắt các nút thu nhỏ và thu phóng.

00:14:41.000 --> 00:14:49.000
Khi tạo cảnh, trong phương thức "phiên willConnectTo" của Scene Delegate, tôi tạo khung mong muốn của mình.

00:14:49.000 --> 00:14:55.000
Thực hành tốt là luôn bắt đầu với khung hiện tại từ Hình học hiệu quả.

00:14:55.000 --> 00:15:05.000
Trước khi cảnh được tạo, điều này được khởi tạo thành CGRectNull, có giá trị mà hệ thống biết bỏ qua để tạo cảnh ban đầu.

00:15:05.000 --> 00:15:20.000
Tôi sửa đổi kích thước, sau đó cung cấp cho cảnh của mình khung mới bằng cách tạo một đối tượng UIWindowScene.macGeometryPreferences mới và chuyển khung làm đối số systemFrame của nó.

00:15:20.000 --> 00:15:25.000
Sau đó tôi gửi bản cập nhật bằng cách sử dụng phương thức scene.requestGeometryUpdate().

00:15:25.000 --> 00:15:36.000
Bởi vì đây là một yêu cầu, hệ thống có quyền từ chối hình học mới, trong trường hợp đó nó sẽ gọi lại trình xử lý lỗi với các chi tiết.

00:15:36.000 --> 00:15:52.000
Khi được thực hiện trong cảnh sẽ là phương thức ConnectToSession như được hiển thị ở đây, yêu cầu sẽ áp dụng cho lần khởi chạy đầu tiên của ứng dụng của bạn, nhưng sẽ được thay thế bằng bất kỳ khôi phục trạng thái áp dụng nào được thực hiện bởi hệ thống khi khởi chạy sau.

00:15:52.000 --> 00:16:09.000
Và bởi vì đây là một bảng trợ giúp nhỏ, tôi cũng vô hiệu hóa nút thu nhỏ từ đối tượng windowScene windowingBehaviors mới và khả năng làm cho cửa sổ toàn màn hình, từ thuộc tính mới về sizeRestrictions.

00:16:09.000 --> 00:16:16.000
Khi cửa sổ Markdown Hints mới này được hiển thị, nó sẽ xuất hiện với kích thước mà chúng tôi đã yêu cầu.

00:16:16.000 --> 00:16:26.000
Các nút điều khiển cửa sổ thu nhỏ màu vàng và thu phóng màu xanh lá cây bị vô hiệu hóa, chỉ để lại nút đóng màu đỏ.

00:16:26.000 --> 00:16:30.000
Những tùy chọn này không chỉ dành riêng cho việc tạo cảnh.

00:16:30.000 --> 00:16:44.000
Bất cứ lúc nào trong vòng đời của cảnh, bạn có thể kiểm tra khung hiện tại của nó từ thuộc tính effectiveGeometry chỉ đọc, sửa đổi nó theo cách bạn cần và yêu cầu cập nhật hình học mới.

00:16:44.000 --> 00:16:53.000
Đây là một ví dụ khác cho thấy cách sửa đổi nguồn gốc của cửa sổ, giữ nguyên kích thước của nó.

00:16:53.000 --> 00:16:57.000
Có hai khía cạnh quan trọng của hình học cần ghi nhớ.

00:16:57.000 --> 00:17:10.000
Đầu tiên, bởi vì systemFrame quyết định khung của cửa sổ trên máy tính để bàn Mac, kích thước của một điểm cho thuộc tính systemFrame luôn bằng kích thước của một điểm AppKit.

00:17:10.000 --> 00:17:16.000
Nếu ứng dụng của bạn được tối ưu hóa cho Mac, đây là tỷ lệ tương tự như các yếu tố giao diện người dùng của bạn.

00:17:16.000 --> 00:17:24.000
Tuy nhiên, nếu ứng dụng của bạn được chia tỷ lệ để phù hợp với iPad, nó sẽ khác với hệ số tỷ lệ 77%.

00:17:24.000 --> 00:17:31.000
Thứ hai, nguồn gốc của không gian tọa độ là góc trên bên trái của màn hình chính.

00:17:31.000 --> 00:17:41.000
Nếu bạn có nhiều màn hình, màn hình chính là màn hình hiển thị thanh Menu trong cài đặt hiển thị hệ thống.

00:17:41.000 --> 00:17:48.000
Với Mac Catalyst API mới, bạn có thể kiểm soát trạng thái của từng nút trong số ba nút điều khiển cửa sổ.

00:17:48.000 --> 00:18:07.000
Đối tượng windowingBehaviors mới trên UIWindowScene có hai thuộc tính, có thể đóng và thu nhỏ, sẽ điều chỉnh các hành vi cửa sổ tương ứng này và bật hoặc tắt các nút cửa sổ màu đỏ và vàng.

00:18:07.000 --> 00:18:15.000
Nút cửa sổ màu xanh lá cây xử lý cả việc thay đổi kích thước cửa sổ của bạn trên màn hình nền và đưa cửa sổ vào toàn màn hình.

00:18:15.000 --> 00:18:31.000
Bạn có thể vô hiệu hóa toàn màn hình với thuộc tính mới trên sizeRestrictions, "allowsFullScreen" hoặc vô hiệu hóa thay đổi kích thước bằng cách sử dụng các hạn chế kích thước và đặt kích thước tối thiểu và tối đa thành cùng kích thước.

00:18:31.000 --> 00:18:38.000
Và bằng cách làm cả hai, nút màu xanh lá cây cũng bị vô hiệu hóa.

00:18:38.000 --> 00:18:46.000
Và bạn có thể kiểm tra xem cảnh của bạn hiện đang ở chế độ toàn màn hình hay không với thuộc tính "isFullScreen" mới.

00:18:46.000 --> 00:18:50.000
Bây giờ, tôi sẽ tập trung vào việc tinh chỉnh thanh công cụ cho Mac.

00:18:50.000 --> 00:19:04.000
Chúng tôi đã thêm các tùy chọn mới để tùy chỉnh thanh công cụ, cho dù bạn dựa vào chuyển đổi tự động từ UINavigationBar hay quản lý NSToolbar của riêng bạn trong mã ứng dụng của bạn.

00:19:04.000 --> 00:19:10.000
Mới trong Mac Catalyst, UIViews có thể được thêm vào dưới dạng các mục vào NSToolbar.

00:19:10.000 --> 00:19:16.000
Tôi đã thiết kế một UIView tùy chỉnh cho Ứng dụng của chúng tôi hiển thị số lượng từ hiện tại.

00:19:16.000 --> 00:19:26.000
Và khi được nhấp vào, nó sẽ hiển thị một cửa sổ bật lên với các chi tiết bổ sung như số lượng đoạn văn và phần, thời gian đọc và bản dịch.

00:19:26.000 --> 00:19:37.000
Bởi vì tôi đang sử dụng API iPad lớp máy tính để bàn mới, thuộc tính customView trên mục UIBarButton của tôi sẽ tự động được bọc và thêm vào thanh công cụ.

00:19:37.000 --> 00:19:48.000
Nhưng nếu bạn quản lý NSToolbar của mình một cách độc lập, chúng tôi cũng đã thêm một lớp con NSToolbarItem mới, được gọi là NSUIViewToolbarItem.

00:19:48.000 --> 00:20:00.000
Bạn có thể sử dụng NSUIViewToolbarItem giống như bất kỳ NSToolbarItem nào khác, để khởi tạo một mục thanh công cụ từ phương thức itemForIdentifier của NSToolbarDelegate.

00:20:00.000 --> 00:20:09.000
Trình khởi tạo cần một UIView để bọc, sau đó được chèn vào NSToolbar.

00:20:09.000 --> 00:20:16.000
NSToolbar mong đợi các phiên bản mục thanh công cụ độc đáo cho chế độ tùy chỉnh thanh công cụ.

00:20:16.000 --> 00:20:26.000
Nếu bạn đang sử dụng lưu trữ NSToolbar tự động từ UINavigationBar của mình, chế độ xem của bạn sẽ được nhân bản bởi hệ thống để tùy chỉnh thanh công cụ tự động.

00:20:26.000 --> 00:20:43.000
Tuy nhiên, nếu bạn quản lý NSToolbar của riêng mình, đại diện của bạn sẽ cần tạo các phiên bản duy nhất của UIView cho mỗi phiên bản NSUIViewToolbarItem, thay vì sử dụng lại cùng một phiên bản UIView.

00:20:43.000 --> 00:20:48.000
Với mục mới của tôi trên thanh công cụ, tôi sẽ thêm hành vi bật lên.

00:20:48.000 --> 00:20:57.000
Trong hành động của mục thanh công cụ của tôi, tôi tạo bộ điều khiển chế độ xem bật lên và đặt mục nguồn của nó thành mục thanh công cụ của tôi.

00:20:57.000 --> 00:21:01.000
Sau đó tôi trình bày cửa sổ bật lên.

00:21:01.000 --> 00:21:12.000
Với mã cửa sổ bật lên tại chỗ, nhấp vào mục thanh công cụ sẽ trình bày chi tiết bổ sung trong bản trình bày cửa sổ bật lên được neo trên mục thanh công cụ của tôi.

00:21:12.000 --> 00:21:24.000
Giống như các điều khiển khác trong Mac Catalyst, bạn có thể chọn không tham gia dịch thanh điều hướng bằng cách sử dụng thuộc tính mới preferredBehavioralStyle trên UINavigationBar.

00:21:24.000 --> 00:21:31.000
Giá trị mặc định của nó là tự động, nhưng bạn có thể đặt nó thành .mac để yêu cầu dịch một cách rõ ràng.

00:21:31.000 --> 00:21:39.000
Và bằng cách đặt nó thành .pad, thanh điều hướng của bạn không còn được dịch tự động nữa.

00:21:39.000 --> 00:21:46.000
Với các tùy chọn này, bạn có thể thêm một lớp tùy chỉnh mới vào thanh công cụ của ứng dụng.

00:21:46.000 --> 00:21:53.000
Chúng tôi rất vui khi thấy cách bạn sử dụng những công cụ mới này để làm cho ứng dụng của bạn trở nên tốt hơn.

00:21:53.000 --> 00:22:00.000
Với ứng dụng iPad của bạn tự động trên Mac App Store, nó có sẵn cho một đối tượng hoàn toàn mới.

00:22:00.000 --> 00:22:06.000
Khi bạn tải lên ứng dụng iPad của mình, hãy chạy nó trên Mac và tự mình thử.

00:22:06.000 --> 00:22:19.000
Hoặc đưa nó lên một tầm cao mới bằng cách trở thành ứng dụng Mac Catalyst và sử dụng API mới trong iOS 16 và macOS Ventura để làm cho ứng dụng của bạn trở nên tốt nhất.

00:22:19.000 --> 00:22:22.000
Thật dễ dàng để đưa ứng dụng của bạn lên Mac.

00:22:22.000 --> 00:22:28.000
Chúng tôi thích giới thiệu công việc khó khăn của bạn và nóng lòng muốn thử những gì bạn xây dựng tiếp theo.

00:22:28.000 --> 23:59:59.000
Cảm ơn bạn.

