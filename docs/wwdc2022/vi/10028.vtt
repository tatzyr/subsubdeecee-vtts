WEBVTT

00:00:00.000 --> 00:00:09.000
♪ nhạc cụ hip hop ♪

00:00:09.000 --> 00:00:14.000
Xin chào, tôi là Neil Foley, một kỹ sư trong nhóm ShazamKit.

00:00:14.000 --> 00:00:22.000
Vào năm 2021, chúng tôi đã giới thiệu ShazamKit, cho phép bạn kết hợp âm thanh với danh mục nhạc được ghi lại rộng lớn của Shazam.

00:00:22.000 --> 00:00:31.000
Chúng tôi cũng đã giới thiệu kết hợp danh mục tùy chỉnh, mang đến cho các nhà phát triển khả năng kết hợp âm thanh của riêng họ và cung cấp trải nghiệm đồng bộ hóa.

00:00:31.000 --> 00:00:37.000
Bây giờ chúng tôi có một số cập nhật quan trọng giúp hợp lý hóa việc làm việc với các danh mục tùy chỉnh trên quy mô lớn.

00:00:37.000 --> 00:00:46.000
Trong phiên này, tôi sẽ sử dụng một số khái niệm ShazamKit hiện có như chữ ký, danh mục và các mục phương tiện.

00:00:46.000 --> 00:00:57.000
Nếu bạn chưa quen thuộc với những thứ đó, hãy xem các cuộc nói chuyện "Khám phá ShazamKit" và "Tạo trải nghiệm âm thanh tùy chỉnh với ShazamKit" từ WWDC21.

00:00:57.000 --> 00:01:04.000
Nhưng tổng quan nhanh, ShazamKit cho phép bạn chuyển đổi âm thanh sang một định dạng đặc biệt có thể phù hợp.

00:01:04.000 --> 00:01:07.000
Chúng tôi gọi những chữ ký này.

00:01:07.000 --> 00:01:13.000
Chữ ký có thể được kết hợp với các mục phương tiện chứa siêu dữ liệu để tạo thành chữ ký tham chiếu.

00:01:13.000 --> 00:01:19.000
Và chữ ký tham chiếu có thể được lưu trữ cùng nhau trong một tệp mà chúng tôi gọi là danh mục tùy chỉnh.

00:01:19.000 --> 00:01:29.000
Bây giờ tất cả chúng ta đã bắt kịp, tôi sẽ đưa bạn qua việc xây dựng các danh mục tùy chỉnh trên quy mô lớn, và sau đó tôi sẽ nói về một số mẹo và thủ thuật để tạo ra các danh mục tuyệt vời.

00:01:29.000 --> 00:01:39.000
Trong quy trình làm việc danh mục tùy chỉnh ngày nay, nếu bạn có một lượng nhỏ nội dung bạn muốn được kết hợp, làm việc với các danh mục tùy chỉnh có thể là một nhiệm vụ đơn giản.

00:01:39.000 --> 00:01:42.000
Bạn chỉ cần làm theo các bước sau.

00:01:42.000 --> 00:01:47.000
Ghi lại âm thanh của bạn ở định dạng mà ShazamKit chấp nhận.

00:01:47.000 --> 00:01:52.000
Sử dụng trình tạo chữ ký để biến nó thành chữ ký.

00:01:52.000 --> 00:01:57.000
Chú thích nó với siêu dữ liệu của bạn, và sau đó lưu trữ nó trong một danh mục tùy chỉnh.

00:01:57.000 --> 00:02:00.000
Và thế là xong, bạn có thể cung cấp trải nghiệm Shazam.

00:02:00.000 --> 00:02:06.000
Nhưng một số bước đó có thể gây khó khăn, đặc biệt nếu bạn không quen thuộc với lập trình âm thanh.

00:02:06.000 --> 00:02:12.000
Xử lý tỷ lệ mẫu và bộ đệm có thể khó khăn ngay cả đối với nhà phát triển có kinh nghiệm nhất.

00:02:12.000 --> 00:02:21.000
Và điều gì sẽ xảy ra khi bạn có một lượng lớn nội dung mà bạn muốn làm Shazamable, như 10 mùa của một chương trình truyền hình?

00:02:21.000 --> 00:02:25.000
Quy trình làm việc này có thể trở nên đau đớn.

00:02:25.000 --> 00:02:30.000
Và nếu bạn có một lượng lớn nội dung, nó có thể nhanh chóng trở nên không thể quản lý được.

00:02:30.000 --> 00:02:44.000
Nếu bạn đang nghĩ đến việc cải thiện quy trình làm việc này cho chính mình, có lẽ bạn sẽ cần viết mã để chuyển đổi âm thanh thành chữ ký, nhiều mã hơn để tải và liên kết các mục phương tiện và mỗi lần bạn thay đổi nội dung của mình, bạn sẽ phải lặp lại công việc.

00:02:44.000 --> 00:02:48.000
Đây là một khoản đầu tư lớn khi bạn chỉ muốn kết hợp một số âm thanh.

00:02:48.000 --> 00:02:56.000
Và sau đó nếu bạn muốn đồng bộ hóa nội dung với ShazamKit, bạn cần logic phức tạp để tìm ra những gì nên được hiển thị và khi nào.

00:02:56.000 --> 00:03:01.000
Tôi sẽ giới thiệu một số cải tiến tuyệt vời cho ShazamKit để hợp lý hóa quy trình làm việc này.

00:03:01.000 --> 00:03:03.000
Nhưng trước tiên là một bản demo nhanh.

00:03:03.000 --> 00:03:11.000
Ở đây tôi có ứng dụng FoodMath mà Alex đã trình diễn vào năm 2021 đồng bộ hóa một bài kiểm tra toán học với một bài học trên màn hình.

00:03:11.000 --> 00:03:21.000
Tôi đã cập nhật nó với các tính năng ShazamKit mới nhất và tôi sẽ phát lại video FoodMath để xem nó đồng bộ hóa như thế nào.

00:03:21.000 --> 00:03:24.000
Bỏ qua 26 giây.

00:03:24.000 --> 00:03:29.000
2, 3 quả táo xanh.

00:03:29.000 --> 00:03:31.000
Tôi có tổng cộng bao nhiêu quả táo?

00:03:31.000 --> 00:03:34.000
Bộ đếm thời gian của bạn bắt đầu...bây giờ.

00:03:34.000 --> 00:03:41.000
Được rồi, hết giờ rồi. Hãy xem bạn đã làm như thế nào.

00:03:41.000 --> 00:03:45.000
Bỏ qua 56 giây.

00:03:45.000 --> 00:03:51.000
Hôm nay, để thêm gia vị một chút, khi tôi đến cửa hàng, bắt đầu với 2 quả táo đỏ...

00:03:51.000 --> 00:03:55.000
Và tôi đã mua 2 quả táo xanh.

00:03:55.000 --> 00:03:58.000
Lần này tôi có tổng cộng bao nhiêu quả táo?

00:03:58.000 --> 00:04:07.000
Bộ đếm thời gian của bạn bắt đầu...bây giờ.

00:04:07.000 --> 00:04:09.000
Được rồi, hết giờ rồi.

00:04:09.000 --> 00:04:11.000
Có vẻ như đang hoạt động tốt.

00:04:11.000 --> 00:04:17.000
Có nội dung phong phú được đồng bộ hóa với video và khi tôi nói "bây giờ", menu xuất hiện chính xác vào đúng thời điểm.

00:04:17.000 --> 00:04:22.000
Ngoài ra, khi nội dung không còn phù hợp nữa, nó sẽ biến mất ngay trên gợi ý.

00:04:22.000 --> 00:04:23.000
Nhưng nó hoạt động như thế nào?

00:04:23.000 --> 00:04:26.000
Hãy cùng xem mã.

00:04:26.000 --> 00:04:27.000
Chỉ có một vòng lặp đơn giản.

00:04:27.000 --> 00:04:33.000
Nó sử dụng AsyncSequence trên phiên thay vì các lệnh gọi lại đại diện mà chúng tôi đã sử dụng trước đây.

00:04:33.000 --> 00:04:38.000
Trình tự trả về một liệt kê đại diện cho trận đấu, không có trận đấu hoặc lỗi.

00:04:38.000 --> 00:04:44.000
Tôi chỉ quan tâm đến các trận đấu, vì vậy tôi đã giới hạn vòng lặp chỉ trong trường hợp đó.

00:04:44.000 --> 00:04:52.000
Và để xây dựng kết quả hiển thị, tôi giảm các mục phương tiện xuống nội dung mà tôi cần.

00:04:52.000 --> 00:04:58.000
Thực sự không có nhiều thứ để xem trong ứng dụng, chỉ có chế độ xem SwiftUI được thúc đẩy bởi kết quả trận đấu mà chúng tôi tạo ra.

00:04:58.000 --> 00:05:03.000
Không có logic hoặc mã thời gian phức tạp và nó đồng bộ hóa hoàn hảo.

00:05:03.000 --> 00:05:08.000
Vì vậy, câu hỏi vẫn là, làm thế nào để nó đồng bộ hóa tốt như vậy?

00:05:08.000 --> 00:05:13.000
Bí mật của FoodMaths là danh mục tùy chỉnh phong phú thúc đẩy trải nghiệm.

00:05:13.000 --> 00:05:24.000
Tôi đã tạo danh mục bằng một công cụ đơn giản mà chúng tôi đã xây dựng để bổ sung cho ShazamKit và bạn cũng có thể sử dụng nó để tạo ra những trải nghiệm phong phú trong các ứng dụng của riêng mình.

00:05:24.000 --> 00:05:32.000
Shazam CLI xuất xưởng như một phần của macOS 13 và cung cấp một cách dễ dàng để đồng bộ hóa nội dung.

00:05:32.000 --> 00:05:37.000
Nó có thể giúp tự động hóa một số tác vụ lặp đi lặp lại liên quan đến việc tạo danh mục tùy chỉnh.

00:05:37.000 --> 00:05:41.000
Hãy cập nhật danh mục tùy chỉnh mà tôi vừa cho bạn xem.

00:05:41.000 --> 00:05:45.000
Đã đến lúc cho một bản demo khác.

00:05:45.000 --> 00:05:52.000
Đây là một thư mục chứa tệp video FoodMath và đây là thiết bị đầu cuối của tôi trong cùng một thư mục.

00:05:52.000 --> 00:06:02.000
Tôi sẽ sử dụng CLI để chuyển đổi video thành chữ ký bằng lệnh chữ ký.

00:06:02.000 --> 00:06:11.000
Tôi chỉ chuyển tệp video làm đầu vào và chỉ định đầu ra chữ ký của chúng tôi.

00:06:11.000 --> 00:06:13.000
Được rồi. Đây là chữ ký của chúng tôi.

00:06:13.000 --> 00:06:18.000
Bây giờ tôi muốn kết hợp chữ ký này với các mục phương tiện để tạo một danh mục tùy chỉnh.

00:06:18.000 --> 00:06:33.000
CLI chấp nhận một tệp được phân tách bằng dấu phẩy đơn giản để mô tả các mục phương tiện mà tôi sẽ sao chép ở đây.

00:06:33.000 --> 00:06:38.000
Nó mô tả mọi thứ mà tôi cần để đồng bộ hóa nội dung của mình.

00:06:38.000 --> 00:06:47.000
Đây là nơi tôi đã chỉ định tiêu đề của mình và đây là trường JSON tùy chỉnh mà tôi đã xác định cho phương trình.

00:06:47.000 --> 00:06:50.000
Các tiêu đề ánh xạ đến các thuộc tính mục phương tiện.

00:06:50.000 --> 00:07:02.000
Để biết chi tiết về bản đồ, hãy chạy lệnh tạo danh mục tùy chỉnh với cờ trợ giúp.

00:07:02.000 --> 00:07:07.000
Nó mô tả mối quan hệ giữa các tiêu đề csv và các thuộc tính mục phương tiện.

00:07:07.000 --> 00:07:12.000
Bây giờ tôi muốn kết hợp chúng lại với nhau thành một danh mục tùy chỉnh.

00:07:12.000 --> 00:07:19.000
Vì vậy tôi sẽ chạy lệnh tạo.

00:07:19.000 --> 00:07:28.000
Tôi chuyển tệp chữ ký và tệp csv và nó xuất ra một danh mục.

00:07:28.000 --> 00:07:30.000
Được rồi, bây giờ chúng ta đã có danh mục của mình.

00:07:30.000 --> 00:07:37.000
Thật thú vị, tôi có quyền truy cập sớm vào tập FoodMath mới nhất, vì vậy tôi muốn thêm nó vào tệp danh mục của chúng tôi.

00:07:37.000 --> 00:07:44.000
Hãy để tôi sao chép các tập tin ở đây.

00:07:44.000 --> 00:07:51.000
Đây là các mục truyền thông của chúng tôi cho tập mới của chúng tôi.

00:07:51.000 --> 00:08:02.000
Tôi sẽ chạy lệnh cập nhật chuyển video, phương tiện mới và danh mục để cập nhật.

00:08:02.000 --> 00:08:05.000
Được rồi, chúng tôi đã cập nhật danh mục của mình.

00:08:05.000 --> 00:08:20.000
Đó là tổng quan nhanh về cách tạo danh mục, nhưng nếu bạn giống tôi, bạn sẽ thực sự muốn viết kịch bản này.

00:08:20.000 --> 00:08:27.000
Ứng dụng FoodMath thực sự có khá nhiều tập mới và tôi muốn thêm tất cả chúng vào danh mục này.

00:08:27.000 --> 00:08:33.000
Tôi đã viết một tập lệnh thực sự đơn giản lặp qua tất cả các thư mục tập và kết hợp chúng thành một danh mục tùy chỉnh.

00:08:33.000 --> 00:08:49.000
Tôi sẽ chạy nó ngay bây giờ.

00:08:49.000 --> 00:08:50.000
Vậy là xong.

00:08:50.000 --> 00:09:00.000
Bây giờ chúng tôi có một danh mục đại diện cho mọi tập FoodMath và kịch bản đã sử dụng lệnh hiển thị để trình bày chi tiết những gì bên trong danh mục.

00:09:00.000 --> 00:09:02.000
Tôi nghĩ chúng ta có mọi thứ.

00:09:02.000 --> 00:09:05.000
Dự án foodmath đã tham khảo danh mục mới của chúng tôi.

00:09:05.000 --> 00:09:11.000
Vì vậy, hãy xây dựng và chạy để chúng ta có thể thích làm một số phép toán.

00:09:11.000 --> 00:09:14.000
Bỏ qua 30 giây.

00:09:14.000 --> 00:09:16.000
Tôi có tổng cộng bao nhiêu quả táo?

00:09:16.000 --> 00:09:19.000
Bộ đếm thời gian của bạn bắt đầu...bây giờ.

00:09:19.000 --> 00:09:28.000
Được rồi, hết giờ rồi. Hãy xem bạn đã làm như thế nào.

00:09:28.000 --> 00:09:30.000
Tôi thích anh chàng đó. Đó là một tập phim tuyệt vời.

00:09:30.000 --> 00:09:37.000
Còn một tập mới thì sao? Hãy thử điều đó.

00:09:37.000 --> 00:09:41.000
Bỏ qua 15 giây.

00:09:41.000 --> 00:09:49.000
Trong những năm qua, tôi đã khám phá điều gì làm cho một guacamole thực sự ngon, và tôi đã viết ra công thức guacamole yêu thích của mình.

00:09:49.000 --> 00:09:51.000
Nó yêu cầu 4 quả bơ.

00:09:51.000 --> 00:09:53.000
Ngày mai bạn tôi sẽ đến thăm.

00:09:53.000 --> 00:09:57.000
Vì vậy, đối với hai chúng tôi, tôi chỉ cần làm một nửa phần.

00:09:57.000 --> 00:09:59.000
Tôi cần bao nhiêu quả bơ?

00:09:59.000 --> 00:10:02.000
Bộ đếm thời gian bắt đầu...bây giờ.

00:10:02.000 --> 00:10:12.000
Đúng rồi. Bạn cần hai quả bơ.

00:10:12.000 --> 00:10:16.000
Hãy cùng nhau làm món guacamole này.

00:10:16.000 --> 00:10:30.000
Hãy thử cái này.

00:10:30.000 --> 00:10:40.000
Mmm. Điều đó hóa ra thật tuyệt. Tôi hy vọng bạn đã có một chút vui vẻ và hẹn gặp lại lần sau.

00:10:40.000 --> 00:10:41.000
Ồ!

00:10:41.000 --> 00:10:43.000
Họ có một người dẫn chương trình mới. Thú vị.

00:10:43.000 --> 00:10:48.000
Dù sao, tôi đã tạo ra một trải nghiệm đồng bộ phong phú ngay lập tức.

00:10:48.000 --> 00:10:51.000
Shazam CLI hỗ trợ một bộ lệnh phong phú.

00:10:51.000 --> 00:10:54.000
Hãy xem qua chúng.

00:10:54.000 --> 00:10:58.000
Bạn có thể tạo chữ ký từ bất kỳ tệp phương tiện nào có bản âm thanh.

00:10:58.000 --> 00:11:03.000
Bạn có thể tạo danh mục tùy chỉnh bằng cách kết hợp chữ ký và các mục phương tiện.

00:11:03.000 --> 00:11:06.000
Bạn có thể hiển thị nội dung của danh mục.

00:11:06.000 --> 00:11:11.000
Thêm, xóa và xuất cả chữ ký và các mục phương tiện.

00:11:11.000 --> 00:11:18.000
Tiếp theo, về cách CLI tạo chữ ký từ các video FoodMath.

00:11:18.000 --> 00:11:26.000
SHSignatureGenerator hiện có một phương thức signatureFromAsset có sẵn trên tất cả các nền tảng.

00:11:26.000 --> 00:11:31.000
Với phương pháp này, không còn việc kéo bộ đệm âm thanh từ phương tiện theo cách thủ công nữa.

00:11:31.000 --> 00:11:37.000
Đơn giản chỉ cần chuyển một AVAsset với một đoạn âm thanh để biến nó thành một chữ ký.

00:11:37.000 --> 00:11:44.000
Nếu bạn có nhiều bản nhạc trong tài sản của mình, chúng sẽ được trộn lẫn với nhau để đảm bảo chữ ký nắm bắt mọi thứ.

00:11:44.000 --> 00:11:51.000
Được rồi, bây giờ tôi đã có một chữ ký đại diện cho phương tiện truyền thông, làm thế nào tôi đồng bộ hóa chính xác nội dung?

00:11:51.000 --> 00:11:54.000
Tôi đã sử dụng Timed MediaItem API.

00:11:54.000 --> 00:12:01.000
Đính kèm một phạm vi thời gian vào mục phương tiện giúp dễ dàng xác định khi nào nó bắt đầu và khi nào nó kết thúc.

00:12:01.000 --> 00:12:08.000
Các mục phương tiện cũng có thể có nhiều khoảng thời gian để nhắm mục tiêu nhiều hơn một phần của chữ ký.

00:12:08.000 --> 00:12:13.000
Hãy tưởng tượng rằng bạn có một mục truyền thông nhắm vào điệp khúc của một bài hát.

00:12:13.000 --> 00:12:16.000
Bạn có thể thêm một khoảng thời gian cho mỗi nơi nó được hát.

00:12:16.000 --> 00:12:23.000
Chỉ định phạm vi thời gian chỉ hữu ích nếu bạn được thông báo khi chúng bắt đầu và khi chúng kết thúc.

00:12:23.000 --> 00:12:30.000
ShazamKit sẽ cung cấp một cuộc gọi lại phù hợp được đồng bộ hóa với phạm vi thời gian, một khi nó bắt đầu và một khi nó kết thúc.

00:12:30.000 --> 00:12:40.000
Chữ ký có thể chứa nhiều mục phương tiện, vì vậy cuộc gọi lại này sẽ chỉ chứa các mục phương tiện nằm trong phạm vi tại thời điểm cụ thể đó.

00:12:40.000 --> 00:12:49.000
Có một vài quy tắc đơn giản mà các mặt hàng phương tiện sẽ được trả lại trong một cuộc gọi lại và đơn đặt hàng của chúng, vì vậy hãy xem qua chúng.

00:12:49.000 --> 00:12:54.000
Các mục truyền thông ngoài phạm vi thời gian của chúng sẽ không được trả lại.

00:12:54.000 --> 00:13:01.000
Các mục truyền thông trong phạm vi thời gian của chúng sẽ được trả lại, với các sự kiện gần đây nhất sẽ đến trước.

00:13:01.000 --> 00:13:09.000
Và cuối cùng, các mặt hàng truyền thông không có phạm vi thời gian sẽ luôn được trả lại cuối cùng, nhưng chúng sẽ không được đặt hàng.

00:13:09.000 --> 00:13:15.000
Các mục truyền thông không có khoảng thời gian có thể là một nơi tuyệt vời để lưu trữ thông tin toàn cầu áp dụng cho toàn bộ chữ ký tham chiếu.

00:13:15.000 --> 00:13:20.000
Trong ví dụ FoodMath của tôi, tôi đã sử dụng nó để lưu trữ tên của tập phim.

00:13:20.000 --> 00:13:25.000
Nó xuất hiện khi không có mục truyền thông nào khác nằm trong phạm vi.

00:13:25.000 --> 00:13:37.000
Một điểm cuối cùng, nếu tất cả các mục phương tiện của bạn có phạm vi thời gian và không có mục nào trong phạm vi, ShazamKit sẽ luôn trả về một mục phương tiện với thông tin đối sánh cơ bản.

00:13:37.000 --> 00:13:46.000
Bằng cách này, bạn sẽ luôn nhận được các thuộc tính quan trọng, chẳng hạn như độ lệch CurrentMatch được dự đoán và frequencySkew.

00:13:46.000 --> 00:13:49.000
Và trong mã, nó cũng dễ dàng.

00:13:49.000 --> 00:13:55.000
Các mục phương tiện theo thời gian được tạo bằng cách chỉ định thuộc tính mục phương tiện timeRanges.

00:13:55.000 --> 00:13:58.000
Đó là một mảng các dải Swift.

00:13:58.000 --> 00:14:02.000
Nó cũng có thể được đọc lại bằng cách sử dụng thuộc tính timeRanges.

00:14:02.000 --> 00:14:08.000
Và đối với các lập trình viên Objective-C, có một lớp SHRange mới như một sự thay thế giảm.

00:14:08.000 --> 00:14:16.000
Bây giờ bạn đã thấy cách xây dựng chúng, hãy khám phá một số mẹo và thủ thuật để tạo các danh mục tùy chỉnh tuyệt vời.

00:14:16.000 --> 00:14:21.000
Tránh tạo ra nhiều chữ ký nhỏ cho một phần của phương tiện truyền thông.

00:14:21.000 --> 00:14:34.000
Chữ ký là ánh xạ 1-1 đến phương tiện mà nó đại diện, vì vậy đối với mỗi đoạn âm thanh bạn có, có thể là từ một bài hát hoặc video, hãy tạo một chữ ký trong toàn bộ thời lượng.

00:14:34.000 --> 00:14:42.000
Chữ ký dài hơn cung cấp nhiều cơ hội hơn cho ShazamKit để phù hợp với các đỉnh âm thanh, dẫn đến độ chính xác tốt hơn.

00:14:42.000 --> 00:14:50.000
Nó cũng tránh được các vấn đề với chữ ký truy vấn chồng chéo lên nhiều chữ ký tham chiếu.

00:14:50.000 --> 00:14:55.000
Sử dụng Timed MediaItem API mới, bạn có thể nhắm mục tiêu nội dung được đồng bộ hóa đến các khu vực riêng lẻ.

00:14:55.000 --> 00:15:01.000
Không cần phải chia một đoạn âm thanh thành nhiều chữ ký.

00:15:01.000 --> 00:15:06.000
Tôi đã chỉ ra một ví dụ trong đó chúng tôi có một phần của phương tiện truyền thông, nhưng với nhiều mục phương tiện truyền thông.

00:15:06.000 --> 00:15:12.000
Nhưng chúng ta nên làm gì nếu chúng ta có một lượng lớn nội dung mà chúng ta muốn làm Shazamable?

00:15:12.000 --> 00:15:14.000
Chúng ta nên chia nó ra như thế nào?

00:15:14.000 --> 00:15:20.000
Có một sự đánh đổi bạn cần thực hiện khi chia nội dung của mình giữa các danh mục tùy chỉnh.

00:15:20.000 --> 00:15:30.000
Nếu bạn tạo các danh mục riêng lẻ cho từng tài sản phương tiện, bạn sẽ cần biết phần âm thanh nào đang được phát để bạn có thể tải đúng danh mục.

00:15:30.000 --> 00:15:39.000
Và nếu bạn đặt tất cả chúng lại với nhau trong một danh mục, bạn sẽ có bản tải xuống lớn hơn và sử dụng nhiều bộ nhớ hơn, nhưng bạn có thể kết hợp nhiều đoạn âm thanh hơn.

00:15:39.000 --> 00:15:44.000
Lời khuyên của chúng tôi là giữ các tệp danh mục bạn tạo tập trung chặt chẽ.

00:15:44.000 --> 00:15:51.000
Ví dụ, một danh mục cho mỗi bản nhạc hoặc toàn bộ album, nhưng không phải toàn bộ danh sách đĩa nhạc của nghệ sĩ.

00:15:51.000 --> 00:15:56.000
Giữ mọi thứ riêng biệt có nghĩa là bạn có thể quyết định tải gì trong thời gian chạy.

00:15:56.000 --> 00:16:02.000
Bạn có thể làm điều đó với danh mục tùy chỉnh thêm API.

00:16:02.000 --> 00:16:06.000
Hãy dùng thử và xem liệu có giúp ích gì cho trường hợp sử dụng của bạn không.

00:16:06.000 --> 00:16:25.000
Nếu bạn có nhiều nội dung âm thanh giống nhau, có thể là một chương trình luôn bắt đầu bằng cùng một bản nhạc giới thiệu và bạn muốn cung cấp trải nghiệm tùy chỉnh cho mỗi tập hoặc một bài hát được lấy mẫu trong một bản nhạc khác, có thể xem xét sử dụng độ lệch tần số làm điểm khác biệt.

00:16:25.000 --> 00:16:30.000
Âm thanh lệch đang tăng hoặc giảm tần số trong bản ghi âm.

00:16:30.000 --> 00:16:40.000
Khi bạn làm điều này, bạn ảnh hưởng đến âm thanh, nhưng nếu bạn làm điều đó với một lượng đủ nhỏ, ShazamKit có thể nhận thấy nó nhưng không phải bởi tai người trung bình.

00:16:40.000 --> 00:16:54.000
Vì vậy, nếu chúng ta ghi âm, tạo một danh mục tùy chỉnh từ nó và sau đó phát lại với các tần số hơi dịch chuyển: ShazamKit vẫn sẽ khớp với âm thanh và nó cũng sẽ báo cáo lượng sai lệch thông qua thuộc tính frequencySkew.

00:16:54.000 --> 00:16:58.000
Đây là cách để làm điều đó trong mã.

00:16:58.000 --> 00:17:08.000
Có những giới hạn về mức độ bạn có thể làm lệch âm thanh mà không có sự thay đổi trở nên đáng chú ý đối với tai người hoặc không thể nhận ra đối với ShazamKit.

00:17:08.000 --> 00:17:17.000
Giữ độ lệch dưới 5 phần trăm phải an toàn và cung cấp đủ chỗ để phân biệt nhiều bản ghi sai lệch.

00:17:17.000 --> 00:17:21.000
Để thực sự tận dụng điều này, hãy sử dụng phạm vi frequencySkew.

00:17:21.000 --> 00:17:27.000
Các mục phương tiện sẽ chỉ được trả lại nếu chúng nằm trong phạm vi lệch được chỉ định.

00:17:27.000 --> 00:17:33.000
Phạm vi chỉ định theo tỷ lệ phần trăm âm thanh khác với bản gốc bao nhiêu.

00:17:33.000 --> 00:17:41.000
Giá trị 0 cho biết âm thanh không bị lệch và giá trị 0,01 biểu thị độ lệch 1 phần trăm.

00:17:41.000 --> 00:17:48.000
Bạn có thể truy cập thuộc tính trên các mục phương tiện bằng cách sử dụng thuộc tính frequencySkewRanges.

00:17:48.000 --> 00:17:56.000
Tôi sẽ xem qua các bước để làm cho ứng dụng này hoạt động trong ứng dụng của bạn: Trước tiên hãy tạo chữ ký tham chiếu cho bản ghi âm gốc của bạn.

00:17:56.000 --> 00:18:03.000
Sau đó lấy một mục phương tiện truyền thông và hạn chế nó theo tần suất lệch từ 3 đến 4 phần trăm.

00:18:03.000 --> 00:18:05.000
Đặt cái này bên trong danh mục tùy chỉnh của bạn.

00:18:05.000 --> 00:18:13.000
Bây giờ phát lại âm thanh bị lệch từ 3 đến 4 phần trăm và mục phương tiện của bạn sẽ được trả lại.

00:18:13.000 --> 00:18:18.000
Phát lại âm thanh không bị lệch hoặc bị lệch bên ngoài phạm vi sẽ không trả lại mục phương tiện của bạn.

00:18:18.000 --> 00:18:22.000
Đó là sai lệch tần số.

00:18:22.000 --> 00:18:29.000
Bây giờ bạn đã thấy những cập nhật thú vị cho ShazamKit năm nay, bạn đã sẵn sàng để tạo ra một số trải nghiệm đồng bộ hóa tuyệt vời.

00:18:29.000 --> 00:18:35.000
Vì vậy, hãy nhớ những phương pháp hay nhất này: Đầu tiên, tạo một chữ ký cho mỗi tài sản truyền thông.

00:18:35.000 --> 00:18:41.000
Bạn sẽ nhận được độ chính xác tốt hơn từ ShazamKit và quy trình tạo đơn giản hơn.

00:18:41.000 --> 00:18:46.000
Tạo chữ ký của bạn với SHSignatureGenerators signatureFromAsset.

00:18:46.000 --> 00:18:54.000
Nó chấp nhận nhiều phương tiện khác nhau, có nghĩa là bạn không còn phải đối phó với các chi tiết âm thanh cấp thấp nữa.

00:18:54.000 --> 00:19:00.000
Nhắm mục tiêu nội dung được đồng bộ hóa đến các lĩnh vực quan tâm với API Timed MediaItem mới.

00:19:00.000 --> 00:19:05.000
Nó kết hợp một API đơn giản với độ chính xác tuyệt vời.

00:19:05.000 --> 00:19:10.000
Và cuối cùng hãy để Shazam CLI hợp lý hóa cách bạn tạo danh mục tùy chỉnh.

00:19:10.000 --> 00:19:20.000
Nó được thiết kế để loại bỏ những rắc rối khi xử lý một lượng lớn phương tiện truyền thông và cho phép bạn tập trung vào những trải nghiệm tuyệt vời mà bạn muốn tạo ra thay thế.

00:19:20.000 --> 00:19:27.000
Tôi hy vọng bạn thích những cập nhật mới nhất cho ShazamKit, và tôi rất vui khi thấy bạn làm mọi thứ trở nên Shazamable.

00:19:27.000 --> 00:19:32.000
Tất cả thông tin chúng tôi đã thảo luận và các liên kết đến tài liệu đều được đính kèm với phiên này.

00:19:32.000 --> 23:59:59.000
Cảm ơn vì đã tham gia. Tận hưởng phần còn lại của WWDC22. ♪ ♪

