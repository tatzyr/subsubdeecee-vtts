WEBVTT

00:00:00.000 --> 00:00:03.000
♪ Nhạc hip-hop nhạc cụ êm dịu ♪

00:00:03.000 --> 00:00:10.000
♪

00:00:10.000 --> 00:00:13.000
Chào mừng đến với "Gặp gỡ WeatherKit" tại WWDC22.

00:00:13.000 --> 00:00:17.000
Tên tôi là Novall, và tôi là một kỹ sư trong nhóm Thời tiết.

00:00:17.000 --> 00:00:23.000
Chúng tôi dựa vào dữ liệu thời tiết ngày này qua ngày khác, và nơi chúng tôi lấy thông tin này là rất quan trọng.

00:00:23.000 --> 00:00:42.000
Từ việc kiểm tra thời tiết trên Apple Watch của bạn để bạn biết mang theo ô trước khi ra khỏi cửa, đến nông nghiệp bền vững, nơi dự đoán mưa và sương giá có thể giúp nông dân lập kế hoạch luân canh cây trồng, để giữ an toàn và chuẩn bị cho chuyến du lịch bão mùa đông - thời tiết ảnh hưởng đến tất cả mọi người.

00:00:42.000 --> 00:00:48.000
Dữ liệu thời tiết chính xác thậm chí còn trở nên quan trọng hơn trong thế giới ngày nay bị ảnh hưởng bởi biến đổi khí hậu của chúng ta.

00:00:48.000 --> 00:00:55.000
Và có quyền truy cập vào các dự báo chính xác bây giờ quan trọng hơn bao giờ hết, đó là lý do tại sao chúng tôi tạo ra WeatherKit.

00:00:55.000 --> 00:01:02.000
WeatherKit được cung cấp bởi Dịch vụ Thời tiết Apple hoàn toàn mới, một dự báo thời tiết toàn cầu đẳng cấp thế giới.

00:01:02.000 --> 00:01:13.000
Nó sử dụng các mô hình thời tiết có độ phân giải cao và các thuật toán dự đoán và học máy để cung cấp cho bạn các dự báo thời tiết siêu địa phương trên toàn cầu.

00:01:13.000 --> 00:01:20.000
Với Dịch vụ Thời tiết của Apple, chúng tôi có quyền truy cập vào rất nhiều dữ liệu và tất cả những điều này đều có sẵn cho bạn thông qua WeatherKit.

00:01:20.000 --> 00:01:24.000
Dữ liệu thời tiết chính xác yêu cầu thông tin vị trí.

00:01:24.000 --> 00:01:28.000
Và giữ dữ liệu đó ở chế độ riêng tư là một trách nhiệm chung.

00:01:28.000 --> 00:01:37.000
Để phù hợp với cam kết của chúng tôi về quyền riêng tư, WeatherKit được thiết kế để đưa ra các dự báo siêu địa phương mà không ảnh hưởng đến thông tin người dùng.

00:01:37.000 --> 00:01:48.000
Vị trí chỉ được sử dụng để cung cấp dự báo thời tiết và không liên quan đến bất kỳ thông tin nhận dạng cá nhân nào và không bao giờ được chia sẻ hoặc bán.

00:01:48.000 --> 00:01:52.000
Với WeatherKit, chúng tôi đã giúp bạn dễ dàng bảo vệ quyền riêng tư của người dùng.

00:01:52.000 --> 00:01:58.000
Hôm nay tôi sẽ đi sâu vào chi tiết hơn về WeatherKit để bạn có thể tận dụng tối đa API mới của chúng tôi.

00:01:58.000 --> 00:02:05.000
Đầu tiên, tôi sẽ đề cập đến các bộ dữ liệu có sẵn mà chúng tôi cung cấp thông qua WeatherKit, được hỗ trợ bởi Dịch vụ Thời tiết Apple của riêng chúng tôi.

00:02:05.000 --> 00:02:15.000
Tiếp theo, tôi sẽ chỉ cho bạn cách yêu cầu thông tin thời tiết bằng cách sử dụng khung WeatherKit và REST API được thiết kế để bạn có thể lấy dữ liệu thời tiết trên bất kỳ nền tảng nào.

00:02:15.000 --> 00:02:21.000
Và cuối cùng, tôi sẽ đề cập đến một số yêu cầu triển khai bổ sung và các phương pháp hay nhất.

00:02:21.000 --> 00:02:25.000
Hãy để tôi bắt đầu với một cái nhìn tổng quan về các bộ dữ liệu thời tiết có sẵn.

00:02:25.000 --> 00:02:29.000
Như tôi đã đề cập, bạn có quyền truy cập vào rất nhiều dữ liệu trong WeatherKit.

00:02:29.000 --> 00:02:33.000
Vậy hãy nói về từng tập dữ liệu.

00:02:33.000 --> 00:02:38.000
Bộ dữ liệu thời tiết hiện tại mô tả các điều kiện "bây giờ" tại địa điểm được yêu cầu.

00:02:38.000 --> 00:02:46.000
Nó đại diện cho một thời điểm duy nhất và bao gồm các điều kiện như chỉ số UV, nhiệt độ và gió.

00:02:46.000 --> 00:02:53.000
Dự báo phút chứa các điều kiện lượng mưa từng phút cho giờ tiếp theo, nếu có.

00:02:53.000 --> 00:02:58.000
Bộ dữ liệu này rất hữu ích cho việc quyết định có mang theo ô khi bạn bước ra khỏi cửa hay không.

00:02:58.000 --> 00:03:07.000
Dự báo hàng giờ là một tập hợp các dự báo bắt đầu từ giờ hiện tại và cung cấp dữ liệu lên đến 240 giờ.

00:03:07.000 --> 00:03:15.000
Mỗi giờ trong dự báo hàng giờ bao gồm các điều kiện như độ ẩm, tầm nhìn, áp suất và điểm sương.

00:03:15.000 --> 00:03:19.000
Dự báo hàng ngày chứa một bộ sưu tập dự báo 10 ngày.

00:03:19.000 --> 00:03:29.000
Mỗi ngày trong dự báo hàng ngày cung cấp thông tin về cả ngày, như nhiệt độ cao và thấp, bình minh và hoàng hôn.

00:03:29.000 --> 00:03:34.000
Cảnh báo thời tiết chứa các cảnh báo thời tiết khắc nghiệt được đưa ra cho vị trí được yêu cầu.

00:03:34.000 --> 00:03:41.000
Bộ dữ liệu này chứa thông tin quan trọng để giữ cho người dùng của bạn an toàn, được thông báo và chuẩn bị.

00:03:41.000 --> 00:03:49.000
Và cuối cùng, thời tiết lịch sử cung cấp các dự báo thời tiết đã lưu từ quá khứ, vì vậy bạn có thể thấy các xu hướng trong dữ liệu thời tiết.

00:03:49.000 --> 00:03:56.000
Bạn có thể truy cập dữ liệu lịch sử bằng cách chỉ định ngày bắt đầu và ngày kết thúc cho các yêu cầu hàng giờ và hàng ngày.

00:03:56.000 --> 00:03:59.000
Điều này cho phép bạn truy cập vào rất nhiều dữ liệu.

00:03:59.000 --> 00:04:05.000
Chúng tôi nghĩ rằng có rất nhiều cách quan trọng và có tác động mà bạn có thể sử dụng thời tiết lịch sử.

00:04:05.000 --> 00:04:14.000
Bây giờ bạn đã thấy tất cả dữ liệu thời tiết phong phú có sẵn, tôi sẽ hướng dẫn bạn cách yêu cầu dữ liệu thời tiết này với API WeatherKit.

00:04:14.000 --> 00:04:21.000
Dữ liệu Thời tiết của Apple có sẵn thông qua cả khung gốc và bộ API REST.

00:04:21.000 --> 00:04:27.000
Đầu tiên, hãy để tôi chỉ cho bạn cách dễ dàng truy cập dữ liệu thời tiết với khung Swift của chúng tôi.

00:04:27.000 --> 00:04:29.000
Tất cả những gì nó cần là một vài dòng mã.

00:04:29.000 --> 00:04:33.000
Và với Swift Concurrency, yêu cầu thời tiết rất đơn giản.

00:04:33.000 --> 00:04:37.000
Đầu tiên, bạn sẽ nhập WeatherKit và CoreLocation.

00:04:37.000 --> 00:04:43.000
Sau đó, bạn sẽ tạo một đối tượng Dịch vụ thời tiết, làm điểm vào của bạn cho Dịch vụ Thời tiết.

00:04:43.000 --> 00:04:48.000
Bạn sẽ tạo một CLLocation với tọa độ cho vị trí bạn quan tâm.

00:04:48.000 --> 00:04:52.000
Ở đây, tôi đang sử dụng quê hương Syracuse, New York của mình.

00:04:52.000 --> 00:04:59.000
Sau đó, bạn sẽ gọi weather(for:) trên phiên bản weatherService và chuyển đến vị trí được tạo ở trên.

00:04:59.000 --> 00:05:08.000
Khi cuộc gọi kết thúc, bạn có thể truy cập dữ liệu liên quan mà bạn cần cho ứng dụng của mình, như nhiệt độ hiện tại và Chỉ số UV trong ví dụ này.

00:05:08.000 --> 00:05:18.000
Bây giờ tôi đã cho bạn thấy việc yêu cầu dữ liệu thời tiết với Swift dễ dàng như thế nào, hãy để tôi đưa bạn qua một ví dụ khác mà tôi đang sử dụng một ứng dụng du lịch mà tôi đang xây dựng trong SwiftUI.

00:05:18.000 --> 00:05:22.000
Bạn có thể lấy dự án đã hoàn thành từ liên kết được liên kết với phiên này.

00:05:22.000 --> 00:05:29.000
Vì tôi thực sự mong muốn được đi du lịch một lần nữa, tôi đã quyết định tạo một ứng dụng lập kế hoạch chuyến bay để lên kế hoạch cho chuyến đi tiếp theo của mình.

00:05:29.000 --> 00:05:43.000
Tôi đã tạo logic cho hành trình chuyến bay của mình, nhưng khi tôi nhấn vào từng chuyến bay trong chuyến đi của mình, tôi muốn hiển thị các cột chứa điều kiện, lượng mưa, gió và nhiệt độ tại mỗi điểm đến.

00:05:43.000 --> 00:05:45.000
Bước đầu tiên là kích hoạt WeatherKit.

00:05:45.000 --> 00:05:53.000
Đăng ký ID ứng dụng trong Cổng thông tin dành cho nhà phát triển, sau đó chọn Khả năng và Dịch vụ ứng dụng t abs để bật WeatherKit.

00:05:53.000 --> 00:05:57.000
Sau đó trong Xcode, thêm khả năng WeatherKit vào dự án.

00:05:57.000 --> 00:06:04.000
Với sự chuẩn bị đó, hãy để tôi đi qua cách tôi sẽ lấy dữ liệu thời tiết cho từng địa điểm này.

00:06:04.000 --> 00:06:11.000
Ở đây tôi có một cấu trúc Sân bay đã được thiết lập có chứa vĩ độ và kinh độ của các sân bay đích của tôi.

00:06:11.000 --> 00:06:22.000
Tôi sẽ nhận được dự báo hàng giờ bằng cách gọi thời tiết (cho:) về dịch vụ thời tiết chung của chúng tôi và sau đó vượt qua vị trí sân bay của chúng tôi.

00:06:22.000 --> 00:06:29.000
Bởi vì tôi chỉ muốn một tập hợp con dữ liệu, tôi cũng đã chỉ định bao gồm dự báo hàng giờ trong yêu cầu.

00:06:29.000 --> 00:06:36.000
Bây giờ, tôi sẽ xây dựng và chạy ứng dụng của mình.

00:06:36.000 --> 00:06:41.000
Bây giờ tôi có thể xem chế độ xem tùy chỉnh của mình được cập nhật để hiển thị các điều kiện tại mỗi sân bay.

00:06:41.000 --> 00:06:51.000
Điều tiếp theo tôi cần làm trong khi xây dựng ứng dụng này là hiển thị ghi công cho các nguồn dữ liệu trong ứng dụng của tôi.

00:06:51.000 --> 00:06:57.000
Đầu tiên, tôi sẽ lấy URL phân bổ từ thuộc tính attribution.legalPageURL.

00:06:57.000 --> 00:07:03.000
Đây là liên kết đến trang phân bổ pháp lý chứa thông tin bản quyền về các nguồn dữ liệu thời tiết.

00:07:03.000 --> 00:07:11.000
Tôi cũng sẽ cần lấy URL cho dấu hiệu Apple Weather kết hợp.

00:07:11.000 --> 00:07:22.000
Nó có sẵn ở cả hai biến thể sáng và tối, vì vậy tôi sẽ kiểm tra giá trị môi trường colorScheme để tìm hiểu xem chế độ xem SwiftUI hiện đang hiển thị ở dạng sáng hay tối.

00:07:22.000 --> 00:07:29.000
Cuối cùng, tôi sẽ xây dựng và chạy lại.

00:07:29.000 --> 00:07:36.000
Lưu ý rằng dấu thời tiết Apple và liên kết phân bổ mở ra trong Bộ điều khiển SFSafariView.

00:07:36.000 --> 00:07:45.000
Đó là tất cả những gì cần thiết để có được thời tiết cho ứng dụng lập kế hoạch chuyến bay của chúng tôi và có rất nhiều cách bạn có thể sử dụng API WeatherKit để thêm dữ liệu thời tiết vào ứng dụng của mình.

00:07:45.000 --> 00:07:48.000
Nhưng đó chỉ là khuôn khổ gốc.

00:07:48.000 --> 00:07:55.000
REST API cung cấp dữ liệu thời tiết phong phú giống như khung Swift và có thể được sử dụng trên bất kỳ nền tảng nào.

00:07:55.000 --> 00:08:02.000
Trong ví dụ này, tôi đang chỉ ra cách bạn có thể yêu cầu cảnh báo thời tiết từ điểm cuối weatherkit.apple.com.

00:08:02.000 --> 00:08:04.000
Đầu tiên, bạn yêu cầu một mã thông báo xác thực.

00:08:04.000 --> 00:08:07.000
Tôi sẽ thảo luận thêm về điều đó một chút.

00:08:07.000 --> 00:08:14.000
Sau đó, để lấy đối tượng thời tiết, trước tiên bạn tạo một URL cho biết bộ dữ liệu thời tiết mong muốn cho một vị trí nhất định.

00:08:14.000 --> 00:08:19.000
Đảm bảo thiết lập ngôn ngữ thích hợp cho phản hồi cục bộ.

00:08:19.000 --> 00:08:24.000
Sau đó, cung cấp vĩ độ và kinh độ của vị trí quan tâm.

00:08:24.000 --> 00:08:26.000
Cho biết tập dữ liệu mong muốn.

00:08:26.000 --> 00:08:33.000
Bạn có thể nhận thấy tham số này là số nhiều nên bạn có thể yêu cầu nhiều tham số cùng một lúc bằng cách tách mỗi tham số bằng dấu phẩy.

00:08:33.000 --> 00:08:36.000
Và cuối cùng, mã quốc gia cho vị trí được yêu cầu.

00:08:36.000 --> 00:08:43.000
Nhưng lưu ý, mã quốc gia chỉ được yêu cầu nếu bạn yêu cầu bộ dữ liệu cảnh báo thời tiết.

00:08:43.000 --> 00:08:51.000
Tiếp theo, bạn sẽ tìm nạp dữ liệu thời tiết bằng URL và mã thông báo xác thực của bạn từ phía trên, chuyển đổi kết quả thành JSON.

00:08:51.000 --> 00:08:55.000
Với điều đó, bạn có thể truy cập các cảnh báo thời tiết và thông tin chi tiết của chúng.

00:08:55.000 --> 00:09:02.000
Vì vậy, một lần nữa, một ví dụ khác về việc bạn dễ dàng truy cập dữ liệu thời tiết như thế nào, chỉ lần này thông qua REST.

00:09:02.000 --> 00:09:08.000
Để đi sâu hơn về thiết lập bạn cần, hãy xem lại xác thực.

00:09:08.000 --> 00:09:14.000
Đối với WeatherKit REST API, có một vài bước bổ sung để xử lý xác thực.

00:09:14.000 --> 00:09:24.000
Trong Cổng thông tin dành cho nhà phát triển, bạn sẽ bật quyền truy cập cho các yêu cầu WeatherKit bằng cách tạo khóa xác thực được bật cho WeatherKit và ID dịch vụ liên quan.

00:09:24.000 --> 00:09:29.000
Khóa riêng tư có thể được tạo trong phần Khóa của Cổng thông tin dành cho nhà phát triển.

00:09:29.000 --> 00:09:33.000
WeatherKit yêu cầu mã thông báo để xác thực ủy quyền trên mỗi yêu cầu.

00:09:33.000 --> 00:09:40.000
Vì vậy, trên máy chủ của bạn, bạn sẽ triển khai dịch vụ mã thông báo để tạo mã thông báo web JSON đã ký bằng khóa riêng tư của mình.

00:09:40.000 --> 00:09:51.000
Đối với những người quen thuộc với xác thực mã thông báo web JSON, đây là một quy trình ủy quyền khá chuẩn, nhưng hãy để tôi chia sẻ một số chi tiết trong trường hợp đây là lần đầu tiên bạn làm việc với nó.

00:09:51.000 --> 00:09:59.000
Để tạo mã thông báo đã ký, bạn sẽ tạo tiêu đề chứa các trường và giá trị được mô tả trong tài liệu dành cho nhà phát triển.

00:09:59.000 --> 00:10:11.000
Sau đó tạo tải trọng chứa thông tin cụ thể cho WeatherKit REST API và ứng dụng của bạn, bao gồm các mục như nhà phát hành, chủ đề và thời gian hết hạn.

00:10:11.000 --> 00:10:17.000
Và cuối cùng, bạn sẽ ký mã thông báo để sử dụng với cuộc gọi tiếp theo đến API REST WeatherKit.

00:10:17.000 --> 00:10:31.000
Quay trở lại ví dụ cảnh báo thời tiết của tôi, đây là nơi bạn sẽ yêu cầu mã thông báo từ dịch vụ ký của mình và thêm mã thông báo vào tiêu đề Ủy quyền của yêu cầu HTTP của bạn cho dữ liệu thời tiết.

00:10:31.000 --> 00:10:33.000
Vậy đó là WeatherKit REST API.

00:10:33.000 --> 00:10:38.000
Một trong hai cách tuyệt vời để bạn truy cập dữ liệu thời tiết từ Dịch vụ Thời tiết của Apple.

00:10:38.000 --> 00:10:47.000
Cuối cùng, tôi sẽ đề cập đến một vài yêu cầu bổ sung để xuất bản trên App Store hoặc trước khi bạn phát trực tiếp trên bất kỳ nền tảng nào sử dụng REST API.

00:10:47.000 --> 00:10:54.000
Mỗi yêu cầu này đều được áp dụng bất kể bạn đang sử dụng Swift hay REST API gốc.

00:10:54.000 --> 00:10:57.000
Yêu cầu đầu tiên là ghi công.

00:10:57.000 --> 00:11:04.000
Như bạn đã thấy trong bản demo của tôi, bạn sẽ nhận được một liên kết từ API phân bổ của chúng tôi mà bạn sẽ cần hiển thị trong ứng dụng gốc hoặc web của mình.

00:11:04.000 --> 00:11:07.000
Yêu cầu thứ hai là biểu tượng ghi công.

00:11:07.000 --> 00:11:15.000
WeatherKit API giúp việc này trở nên dễ dàng và thuận tiện bằng cách cung cấp nội dung hình ảnh bạn cần hiển thị trong ứng dụng của mình.

00:11:15.000 --> 00:11:21.000
Và cuối cùng, nếu bạn sẽ hiển thị cảnh báo thời tiết, bạn cũng sẽ cần liên kết đến một trang sự kiện được cung cấp trong phản hồi.

00:11:21.000 --> 00:11:27.000
Vì vậy, đó là cách dễ dàng để chuẩn bị ứng dụng của bạn để xuất bản trên App Store hoặc web.

00:11:27.000 --> 00:11:36.000
Vì vậy, đó là WeatherKit - các dự báo siêu địa phương đã cung cấp cho Dịch vụ Thời tiết Apple có thể truy cập thông qua khung Swift và API REST của chúng tôi.

00:11:36.000 --> 00:11:43.000
Cả hai đều mở ra một thế giới khả năng cho bạn sử dụng dữ liệu thời tiết trong các ứng dụng của mình, trên bất kỳ nền tảng hoặc thiết bị nào.

00:11:43.000 --> 00:11:45.000
Chúng tôi hy vọng bạn thích buổi học này.

00:11:45.000 --> 00:11:51.000
Bên cạnh việc kiểm tra các liên kết liên quan đến phiên này, hãy đọc tài liệu và tải xuống dự án.

00:11:51.000 --> 00:11:53.000
Và tất nhiên, chúng tôi rất thích phản hồi của bạn.

00:11:53.000 --> 00:11:58.000
Chúng tôi nóng lòng muốn xem tất cả những cách sáng tạo và có tác động mà bạn sử dụng WeatherKit.

00:11:58.000 --> 00:12:01.000
Cảm ơn bạn và chúc bạn có một WWDC tuyệt vời!

00:12:01.000 --> 23:59:59.000
♪

