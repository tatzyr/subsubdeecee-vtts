WEBVTT

00:00:01.000 --> 00:00:12.000
Ram: Xin chào. Tên tôi là Ram.

00:00:12.000 --> 00:00:15.000
Tôi là một kỹ sư trong nhóm trải nghiệm tài khoản.

00:00:15.000 --> 00:00:22.000
Tôi sẽ có sự tham gia của đồng nghiệp Patrick để nói về cách bạn có thể nâng cao trải nghiệm Đăng nhập bằng Apple cho ứng dụng của mình.

00:00:22.000 --> 00:00:29.000
Kể từ khi Đăng nhập bằng Apple được giới thiệu trong iOS 13, mọi người yêu thích việc thiết lập và đăng nhập tài khoản nhanh chóng, dễ dàng.

00:00:29.000 --> 00:00:37.000
Chỉ với một vài dòng mã, bạn có thể kích hoạt thiết lập tài khoản nhanh chóng, một lần nhấn mà không cần biểu mẫu hoặc mật khẩu.

00:00:37.000 --> 00:00:46.000
Mọi Đăng nhập bằng tài khoản Apple đều được bảo vệ bởi xác thực hai yếu tố mạnh mẽ đã được sử dụng để bảo mật ID Apple của người dùng.

00:00:46.000 --> 00:00:52.000
Nếu bạn cần giao tiếp với người dùng của mình, Đăng nhập bằng Apple sẽ cung cấp cho bạn một địa chỉ email hoạt động.

00:00:52.000 --> 00:00:56.000
Không yêu cầu xác minh bổ sung.

00:00:56.000 --> 00:01:01.000
Đăng nhập bằng Apple cũng cung cấp một chỉ báo về khả năng người dùng thực sự là thật.

00:01:01.000 --> 00:01:04.000
Điều này có thể giúp bạn chống lại gian lận.

00:01:04.000 --> 00:01:11.000
Và Đăng nhập bằng Apple hoạt động ở mọi nơi, bao gồm cả ID Apple được quản lý của bạn mà bạn sử dụng cho công việc và trường học.

00:01:11.000 --> 00:01:20.000
Để tìm hiểu thêm về cách bạn có thể tích hợp ứng dụng của mình với tài khoản cơ quan và trường học, hãy xem phiên "Khám phá Đăng nhập bằng Apple tại nơi làm việc và trường học".

00:01:20.000 --> 00:01:27.000
Trong phiên này, chúng ta sẽ nói về cách bạn có thể nâng cao và hợp lý hóa trải nghiệm Đăng nhập bằng Apple của mình.

00:01:27.000 --> 00:01:34.000
Đầu tiên, tôi sẽ thảo luận về cách bạn có thể ngăn chặn trùng lặp tài khoản bằng cách kiểm tra thông tin đăng nhập hiện có trong ứng dụng của bạn.

00:01:34.000 --> 00:01:47.000
Tiếp theo, tôi sẽ đi sâu vào thông tin xác thực Apple ID và sau đó, tôi sẽ nói về một số cách bạn có thể theo dõi các thay đổi thông tin xác thực và thảo luận về cách xử lý các tình huống như xóa tài khoản.

00:01:47.000 --> 00:01:54.000
Và cuối cùng, Patrick sẽ thảo luận về cách tích hợp Đăng nhập với Apple trên web và các nền tảng khác.

00:01:54.000 --> 00:01:56.000
Hãy bắt đầu nào.

00:01:56.000 --> 00:02:07.000
Đăng nhập bằng Apple là một giải pháp thay thế thuận tiện và an toàn cho xác thực dựa trên tên người dùng và mật khẩu truyền thống, nhưng người dùng của bạn vẫn có thể có tài khoản được mở khóa bằng mật khẩu.

00:02:07.000 --> 00:02:14.000
Vì vậy, nếu người dùng của bạn đã có tài khoản phù hợp với họ, điều quan trọng là không tạo tài khoản thứ hai cho ứng dụng của bạn.

00:02:14.000 --> 00:02:20.000
Tôi sẽ khám phá cách bạn có thể hướng dẫn ai đó đưa ra quyết định đúng đắn trong khi đăng nhập.

00:02:20.000 --> 00:02:24.000
Đây là Juice, một ứng dụng mẫu sử dụng Đăng nhập bằng Apple.

00:02:24.000 --> 00:02:28.000
Bạn có thể tìm thấy mã nguồn của nó trong các liên kết liên quan cho video này.

00:02:28.000 --> 00:02:36.000
Bạn có thể đăng nhập vào Juice bằng email và mật khẩu truyền thống hoặc sử dụng Đăng nhập bằng Apple.

00:02:36.000 --> 00:02:43.000
Nếu người dùng của bạn đã có một trong hai thông tin đăng nhập này, bạn sẽ giúp họ đăng nhập vào đúng tài khoản.

00:02:43.000 --> 00:02:52.000
Để bắt đầu, hãy đảm bảo triển khai tự động điền mật khẩu để thông tin đăng nhập mật khẩu hiện có được hiển thị trên bàn phím cho màn hình đăng nhập của bạn.

00:02:52.000 --> 00:02:57.000
Bằng cách này, người dùng có thể tự động điền thông tin xác thực chỉ bằng một lần nhấn.

00:02:57.000 --> 00:03:03.000
Ngoài ra, bạn nên cung cấp cho người dùng của mình để nâng cấp tài khoản dựa trên mật khẩu của họ để Đăng nhập bằng Apple.

00:03:03.000 --> 00:03:11.000
Sau khi nâng cấp, người dùng của bạn sẽ nhận được một tài khoản được tích hợp bảo mật và họ có ít mật khẩu hơn để nhớ.

00:03:11.000 --> 00:03:16.000
Điều này được thực hiện bằng cách sử dụng Tiện ích mở rộng sửa đổi xác thực tài khoản.

00:03:16.000 --> 00:03:25.000
API dựa trên tiện ích mở rộng cung cấp trải nghiệm liền mạch cho người dùng của bạn để nâng cấp cách họ đăng nhập bằng Đăng nhập bằng Apple.

00:03:25.000 --> 00:03:36.000
Để biết thêm thông tin về việc cung cấp nâng cấp bảo mật cho tài khoản người dùng của bạn, hãy xem tài liệu "Tạm dụng tối đa Đăng nhập bằng Apple" và "Nâng cấp bảo mật tài khoản một lần nhấn".

00:03:36.000 --> 00:03:44.000
Ngoài việc cung cấp tính năng tự động điền mật khẩu, bạn có thể tiến thêm một bước nữa bằng cách trình bày thông tin đăng nhập hiện có ngay khi ứng dụng của bạn khởi chạy.

00:03:44.000 --> 00:03:50.000
Bằng cách này, người dùng của bạn có thể đăng nhập bằng đúng tài khoản ngay cả trước khi họ đến màn hình đăng nhập.

00:03:50.000 --> 00:03:54.000
API Dịch vụ Xác thực thực sự linh hoạt theo cách này.

00:03:54.000 --> 00:04:04.000
Bên cạnh việc cho phép người dùng tạo thông tin đăng nhập bằng thông tin đăng nhập của Apple, API cũng có thể hiển thị thông tin đăng nhập hiện có, bao gồm thông tin đăng nhập dựa trên mật khẩu.

00:04:04.000 --> 00:04:06.000
Áp dụng điều này thực sự dễ dàng.

00:04:06.000 --> 00:04:10.000
Hãy để tôi đưa bạn qua một số mã về cách đạt được điều này.

00:04:10.000 --> 00:04:16.000
Nếu bạn đã sử dụng API Dịch vụ Xác thực, mã này sẽ rất quen thuộc.

00:04:16.000 --> 00:04:29.000
Bạn bắt đầu bằng cách tạo một phiên bản của ASAuthorizationController và bao gồm cả ASAuthorizationAppleIDProvider cũng như ASAuthorizationPasswordProvider trong mảng yêu cầu ủy quyền.

00:04:29.000 --> 00:04:34.000
Sau đó, bạn sẽ cần thiết lập một đại diện và một đối tượng để giúp trình bày giao diện.

00:04:34.000 --> 00:04:43.000
Và cuối cùng, bạn sẽ cần gọi performRequests với tùy chọn preferImmediatelyAvailableCredentials trên bộ điều khiển ủy quyền của bạn.

00:04:43.000 --> 00:04:46.000
Tùy chọn này là mới trên iOS 16.

00:04:46.000 --> 00:04:52.000
Nó cho hệ thống biết rằng bạn chỉ muốn thông tin đăng nhập có sẵn ngay lập tức trên thiết bị.

00:04:52.000 --> 00:04:56.000
Nó được dự định đặc biệt để được gọi khi khởi chạy ứng dụng.

00:04:56.000 --> 00:05:01.000
Nếu bạn muốn hỗ trợ các phiên bản iOS trước đó, bạn có thể sử dụng performRequests.

00:05:01.000 --> 00:05:06.000
Khi bạn làm điều này, bạn sẽ được cung cấp một danh sách các thông tin đăng nhập hiện có.

00:05:06.000 --> 00:05:15.000
Người dùng của bạn bây giờ có thể chọn thông tin đăng nhập bằng Apple hiện có hoặc thông tin xác thực mật khẩu hiện có.

00:05:15.000 --> 00:05:24.000
Sau khi người dùng đã chọn thông tin xác thực, hệ thống sẽ gọi didCompleteWithAuthorization trên đại diện ASAuthorizationController.

00:05:24.000 --> 00:05:29.000
Nếu người dùng chọn Đăng nhập bằng tài khoản Apple, bạn tiếp tục với appleIDCredential.

00:05:29.000 --> 00:05:35.000
Nếu người dùng chọn tài khoản dựa trên mật khẩu, bạn đăng nhập bằng mật khẩu Thông tin xác thực được trả về.

00:05:35.000 --> 00:05:42.000
Nếu người dùng không có thông tin xác thực hiện có, API sẽ không hiển thị cho người dùng để tạo Đăng nhập bằng tài khoản Apple.

00:05:42.000 --> 00:05:46.000
Thay vào đó, hệ thống sẽ gọi didCompleteWithError.

00:05:46.000 --> 00:05:50.000
Bạn nên quay lại hiển thị các luồng đăng nhập tiêu chuẩn trong các tình huống như vậy.

00:05:50.000 --> 00:05:57.000
Nhân tiện, cùng một API Dịch vụ Xác thực cũng hoạt động liền mạch cho các mật khẩu.

00:05:57.000 --> 00:06:05.000
Để tìm hiểu thêm về mật khẩu, một công nghệ xác thực thế hệ tiếp theo để thay thế mật khẩu, hãy xem phiên "Gặp gỡ mật khẩu".

00:06:05.000 --> 00:06:11.000
Chỉ với một vài dòng mã, bạn có thể tận dụng tối đa trải nghiệm đăng nhập.

00:06:11.000 --> 00:06:19.000
Bây giờ bạn có thể giúp người dùng của mình chọn đúng tài khoản và hy vọng, điều này ngăn không cho các tài khoản trùng lặp được tạo trong hệ thống của bạn.

00:06:19.000 --> 00:06:24.000
Tiếp theo, tôi muốn đưa bạn đi sâu vào thông tin xác thực ID Apple.

00:06:24.000 --> 00:06:34.000
Như bạn đã biết, phản hồi bạn nhận được sau khi ủy quyền thành công bằng cách sử dụng Đăng nhập bằng Apple là một đối tượng ASAuthorizationAppleIDCredential.

00:06:34.000 --> 00:06:43.000
Nó chứa các giá trị như user, fullName, email, realUserStatus, identityToken, và authorizationCode.

00:06:43.000 --> 00:06:45.000
Tôi sẽ đề cập ngắn gọn về từng người trong số họ.

00:06:45.000 --> 00:06:49.000
Người dùng là một mã định danh duy nhất và ổn định.

00:06:49.000 --> 00:06:54.000
Nó là cùng một mã định danh trên tất cả các ứng dụng trong nhóm nhà phát triển của bạn.

00:06:54.000 --> 00:06:58.000
Sử dụng cái này để xác định duy nhất người dùng trong hệ thống của bạn.

00:06:58.000 --> 00:07:01.000
Bạn chỉ nên yêu cầu fullName nếu bạn cần nó.

00:07:01.000 --> 00:07:05.000
Nếu được yêu cầu, người dùng của bạn có thể chia sẻ bất kỳ tên nào họ muốn.

00:07:05.000 --> 00:07:09.000
Nếu bạn muốn giao tiếp với người dùng của mình, bạn nên yêu cầu email.

00:07:09.000 --> 00:07:14.000
Khi được yêu cầu, người dùng của bạn có hai lựa chọn để chia sẻ địa chỉ email của họ.

00:07:14.000 --> 00:07:19.000
Một lựa chọn là chia sẻ email được liên kết với ID Apple của họ.

00:07:19.000 --> 00:07:23.000
Tùy chọn khác là sử dụng tính năng "ẩn email của tôi".

00:07:23.000 --> 00:07:27.000
Điều này tạo ra một địa chỉ email ẩn định tuyến đến hộp thư đến của họ.

00:07:27.000 --> 00:07:31.000
Nó là một rơle hai chiều, vì vậy nó cũng có thể xử lý các câu trả lời.

00:07:31.000 --> 00:07:38.000
Bất kể tùy chọn nào được chọn, địa chỉ email đã được Apple xác minh trước đó và nó đã sẵn sàng để sử dụng.

00:07:38.000 --> 00:07:48.000
Ngoài ra, không phải tất cả các tài khoản đều có email được liên kết, vì vậy hãy chuẩn bị để xử lý các tình huống không có giá trị cho email, ngay cả khi bạn yêu cầu nó.

00:07:48.000 --> 00:07:53.000
RealUserStatus là một chỉ báo tin cậy cao về khả năng người dùng là thật.

00:07:53.000 --> 00:08:01.000
Nó được tính toán bằng cách sử dụng máy học trên thiết bị, lịch sử tài khoản và chứng thực phần cứng trong khi vẫn giữ quyền riêng tư của người dùng.

00:08:01.000 --> 00:08:04.000
Có ba loại cho realUserStatus.

00:08:04.000 --> 00:08:08.000
"Có khả năng là thật" có nghĩa là người dùng dường như là người thật.

00:08:08.000 --> 00:08:15.000
Cung cấp cho người dùng này trải nghiệm tốt nhất, chẳng hạn như bỏ qua các kiểm tra xác minh gian lận bổ sung như CAPTCHAs.

00:08:15.000 --> 00:08:20.000
"Không xác định" là khi hệ thống chưa xác định liệu người dùng có phải là người thật hay không.

00:08:20.000 --> 00:08:27.000
Tin tưởng người dùng này như bạn làm đối với bất kỳ tài khoản nào có thông tin hạn chế yêu cầu các bước xác minh bổ sung.

00:08:27.000 --> 00:08:31.000
Người dùng vẫn có thể là thật, vì vậy đừng chặn họ sử dụng ứng dụng của bạn.

00:08:31.000 --> 00:08:37.000
Và cuối cùng, "không được hỗ trợ" có nghĩa là hệ thống không có khả năng xác định này.

00:08:37.000 --> 00:08:47.000
Tôi nên dành một chút thời gian để gọi rằng các thuộc tính như fullName, email và realUserStatus chỉ được trả về khi tài khoản được tạo lần đầu tiên.

00:08:47.000 --> 00:08:59.000
Chúng không được trả lại khi đăng nhập tiếp theo, vì vậy hãy đảm bảo lưu trữ an toàn các thuộc tính như fullName và email cho đến khi bạn có thể xác minh rằng tài khoản đã được tạo trong hệ thống của mình.

00:08:59.000 --> 00:09:07.000
Mã thông báo nhận dạng là mã thông báo web JSON chứa hầu hết dữ liệu mà máy chủ ứng dụng cần, bao gồm thông tin người dùng.

00:09:07.000 --> 00:09:11.000
Đây là một cách tiếp cận tiêu chuẩn công nghiệp để xác thực.

00:09:11.000 --> 00:09:26.000
Mã thông báo web JSON, hay JWT, bao gồm ba phần: tiêu đề được mã hóa URL cơ sở-64, tải trọng được mã hóa URL cơ sở-64 và chữ ký có chữ ký của Apple.

00:09:26.000 --> 00:09:35.000
Bạn nên xác minh chữ ký bằng khóa công khai của Apple để đảm bảo rằng phản hồi không bị giả mạo và thực sự là từ các máy chủ Apple ID.

00:09:35.000 --> 00:09:40.000
Điều quan trọng không kém là máy chủ ứng dụng của bạn kiểm tra tính hợp lệ của mã thông báo.

00:09:40.000 --> 00:09:58.000
Khi bạn giải mã tải trọng, bạn nên xác minh nhà phát hành là appleid.apple.com, xác minh trường đối tượng là mã định danh gói ứng dụng của bạn, sau đó đảm bảo dấu thời gian hết hạn lớn hơn thời gian hiện tại để bạn biết mã thông báo là hợp lệ.

00:09:58.000 --> 00:10:01.000
Chủ đề sẽ là số nhận dạng người dùng của bạn.

00:10:01.000 --> 00:10:06.000
Nếu bạn yêu cầu địa chỉ email của người dùng, nó cũng sẽ được bao gồm.

00:10:06.000 --> 00:10:09.000
Bạn cũng có thể tìm thấy Trạng thái người dùng thực.

00:10:09.000 --> 00:10:15.000
Giá trị sẽ là 0 cho "không được hỗ trợ", 1 cho "không xác định", 2 cho "có thể là thật".

00:10:15.000 --> 00:10:22.000
Và cuối cùng, xác minh rằng nonce giống với nonce được tạo trước khi tạo yêu cầu ủy quyền.

00:10:22.000 --> 00:10:32.000
Để biết thêm thông tin về nonce và cách bảo mật quy trình ủy quyền của bạn để giảm thiểu các cuộc tấn công phát lại, hãy xem phiên "Tối đa Đăng nhập bằng Apple".

00:10:32.000 --> 00:10:40.000
AuthorizationCode là một mã thông báo sử dụng một lần, tồn tại trong thời gian ngắn mà bạn có thể cung cấp cho các máy chủ Apple ID để đổi lấy các mã thông báo làm mới.

00:10:40.000 --> 00:10:46.000
Nếu hệ thống của bạn đã sử dụng các tiêu chuẩn mở như OAuth 2.0, điều này có thể quen thuộc với bạn.

00:10:46.000 --> 00:10:53.000
Để tạo mã thông báo làm mới, bạn nên gửi yêu cầu đăng bài đến điểm cuối xác thực/mã thông báo.

00:10:53.000 --> 00:10:59.000
Bạn chuyển ID khách hàng và bí mật khách hàng cùng với mã ủy quyền mà bạn vừa nhận được.

00:10:59.000 --> 00:11:05.000
Mô tả chi tiết về cách tạo bí mật khách hàng có sẵn trong tài liệu Nhà phát triển Apple.

00:11:05.000 --> 00:11:14.000
Trong phản hồi, bạn sẽ nhận được mã thông báo làm mới, mã thông báo truy cập và mã thông báo nhận dạng mới tương tự như mã thông báo bạn đã nhận được trước đó.

00:11:14.000 --> 00:11:22.000
Nếu bạn có mã thông báo truy cập đã hết hạn, bạn có thể sử dụng mã thông báo làm mới để có được mã thông báo truy cập mới bằng cách sử dụng cùng một điểm cuối.

00:11:22.000 --> 00:11:27.000
Bạn cũng có thể tiếp tục sử dụng cùng một mã thông báo làm mới cho đến khi nó bị vô hiệu.

00:11:27.000 --> 00:11:35.000
Mã thông báo làm mới có thể bị vô hiệu nếu xác minh mã thông báo không thành công hoặc nếu có thay đổi xung quanh phiên người dùng của bạn.

00:11:35.000 --> 00:11:42.000
Nói về phiên người dùng, tiếp theo, tôi sẽ nói về việc xử lý và giám sát các thay đổi xung quanh trạng thái thông tin xác thực.

00:11:42.000 --> 00:11:48.000
Sau khi xác minh mã thông báo nhận dạng, ứng dụng của bạn chịu trách nhiệm quản lý phiên người dùng.

00:11:48.000 --> 00:11:52.000
Có nhiều tình huống khác nhau có thể kích hoạt thay đổi phiên người dùng.

00:11:52.000 --> 00:12:01.000
Ví dụ: người dùng có thể ngừng sử dụng ID Apple với ứng dụng của bạn từ Cài đặt hoặc họ có thể đã đăng xuất khỏi thiết bị.

00:12:01.000 --> 00:12:10.000
Để xử lý các thay đổi phiên một cách duyên dáng, hãy gọi getCredentialState(forUserID:) trên ASAuthorizationAppleIDProvider.

00:12:10.000 --> 00:12:18.000
API này được khuyến nghị gọi ngay khi ứng dụng của bạn khởi chạy hoặc tại bất kỳ thời điểm nào bạn muốn kiểm tra trạng thái.

00:12:18.000 --> 00:12:25.000
Bạn cũng nên quan sát thông báo xác thực đã thu hồi để ứng dụng của bạn được thông báo khi thông tin xác thực bị thu hồi.

00:12:25.000 --> 00:12:32.000
Nếu bạn quan sát thấy bất kỳ thay đổi nào trong trạng thái, bạn nên giả định rằng một người dùng khác đã đăng nhập và đăng nhập người dùng hiện tại ra khỏi ứng dụng.

00:12:32.000 --> 00:12:37.000
Nếu bạn có một máy chủ ứng dụng, bạn nên đăng ký nhận thông báo từ máy chủ đến máy chủ.

00:12:37.000 --> 00:12:42.000
Máy chủ của bạn sẽ nhận được những cập nhật quan trọng về người dùng và tài khoản của họ.

00:12:42.000 --> 00:12:59.000
Thông báo được gửi đến từng nhóm ứng dụng cho các tình huống sau: khi người dùng vô hiệu hóa hoặc bật tùy chọn chuyển tiếp thư của họ; khi người dùng ngừng sử dụng ID Apple của họ với ứng dụng của bạn; hoặc khi người dùng xóa vĩnh viễn ID Apple của họ.

00:12:59.000 --> 00:13:06.000
Để bắt đầu nhận thông báo, trước tiên bạn nên đăng ký URL điểm cuối trong cổng thông tin Nhà phát triển Apple.

00:13:06.000 --> 00:13:09.000
Tất cả các sự kiện đều đến cùng một URL điểm cuối.

00:13:09.000 --> 00:13:14.000
Các sự kiện được gửi dưới dạng mã thông báo web JSON có chữ ký của Apple.

00:13:14.000 --> 00:13:23.000
Nếu chuyển tiếp thư bị vô hiệu hóa, trong tải trọng của JWT, bạn sẽ nhận được một sự kiện bị vô hiệu hóa qua email.

00:13:23.000 --> 00:13:29.000
Khi người dùng ngừng sử dụng ID Apple của họ với ứng dụng của bạn, bạn sẽ nhận được sự kiện thu hồi sự đồng ý.

00:13:29.000 --> 00:13:34.000
Điều quan trọng là phải vô hiệu hóa bất kỳ phiên người dùng đang hoạt động nào khi bạn nhận được sự kiện này.

00:13:34.000 --> 00:13:39.000
Và nếu người dùng xóa ID Apple của họ, bạn sẽ nhận được sự kiện xóa tài khoản.

00:13:39.000 --> 00:13:46.000
Một lần nữa, hãy đảm bảo vô hiệu hóa bất kỳ phiên người dùng đang hoạt động nào và cập nhật tài khoản của họ theo quy trình của bạn.

00:13:46.000 --> 00:13:49.000
Bây giờ tôi muốn tập trung vào việc xóa tài khoản.

00:13:49.000 --> 00:13:55.000
Tài khoản là một phần danh tính của chúng tôi và chúng tôi sử dụng chúng để quản lý một số dữ liệu cá nhân và riêng tư nhất của chúng tôi.

00:13:55.000 --> 00:14:01.000
Ai đó có thể muốn xóa tài khoản của họ và bạn cần hỗ trợ điều này trong ứng dụng của mình.

00:14:01.000 --> 00:14:09.000
Bạn nên cung cấp một cách để bắt đầu xóa tài khoản khỏi ứng dụng của mình và bạn có trách nhiệm quản lý toàn bộ quá trình xóa.

00:14:09.000 --> 00:14:17.000
Nếu bạn có một máy chủ ứng dụng lưu trữ thông tin người dùng, thông thường, ứng dụng sẽ thông báo cho máy chủ xóa tài khoản người dùng.

00:14:17.000 --> 00:14:22.000
Bây giờ, bạn có thể bao gồm Đăng nhập bằng Apple như một phần của quá trình xóa của bạn.

00:14:22.000 --> 00:14:29.000
Điều này được thực hiện bằng cách sử dụng điểm cuối REST mới mà máy chủ của bạn có thể sử dụng để xóa tài khoản được liên kết với ứng dụng của bạn.

00:14:29.000 --> 00:14:32.000
Hãy để tôi đưa bạn qua API này một thời gian ngắn.

00:14:32.000 --> 00:14:40.000
Để xóa tài khoản, bạn phải có mã thông báo làm mới hợp lệ hoặc mã thông báo truy cập hợp lệ cho người dùng.

00:14:40.000 --> 00:14:46.000
Nếu bạn không có một trong hai mã thông báo, bạn có thể tạo bằng cách sử dụng điểm cuối xác thực/mã thông báo.

00:14:46.000 --> 00:14:53.000
Khi bạn có một trong hai mã thông báo, bạn có thể sử dụng điểm cuối xác thực/thu hồi với các tham số được yêu cầu.

00:14:53.000 --> 00:14:58.000
Khi sử dụng mã thông báo làm mới, hãy đặt loại mã thông báo thành REFRESH_TOKEN.

00:14:58.000 --> 00:15:04.000
Nếu bạn muốn xóa bằng mã thông báo truy cập, hãy đặt loại mã thông báo thành ACCESS_TOKEN.

00:15:04.000 --> 00:15:12.000
Nếu bạn nhận được phản hồi thành công, mã thông báo và phiên hoạt động của người dùng sẽ bị vô hiệu ngay lập tức.

00:15:12.000 --> 00:15:21.000
Sau khi bị xóa, người dùng quay lại ứng dụng của bạn và sử dụng Đăng nhập bằng Apple sẽ có trải nghiệm tương tự như lần đầu tiên họ tạo tài khoản bằng ứng dụng.

00:15:21.000 --> 00:15:30.000
Với điều đó, tôi sẽ đăng xuất và chuyển nó cho đồng nghiệp Patrick của tôi để thảo luận về cách bạn có thể sử dụng Đăng nhập bằng Apple trên web và các nền tảng khác.

00:15:30.000 --> 00:15:31.000
Patrick: Cảm ơn bạn, Ram!

00:15:31.000 --> 00:15:37.000
Mọi người thích cách Đăng nhập bằng Apple hoạt động liền mạch trên tất cả các nền tảng của Apple.

00:15:37.000 --> 00:15:38.000
Nhưng nó không dừng lại ở đó.

00:15:38.000 --> 00:15:43.000
Đăng nhập bằng Apple cũng hoạt động liền mạch trên web và các nền tảng khác.

00:15:43.000 --> 00:15:50.000
Hãy thảo luận về cách bạn có thể nâng cao trải nghiệm Đăng nhập với Apple của mình để hỗ trợ web và các nền tảng khác.

00:15:50.000 --> 00:15:55.000
Chúng tôi có một ứng dụng iOS hiện có mà Ram đã giới thiệu cho bạn trước đó, được gọi là Juice.

00:15:55.000 --> 00:16:00.000
Chúng tôi muốn mang Juice đến với nhiều người dùng hơn nữa bằng cách mở rộng ra web.

00:16:00.000 --> 00:16:05.000
Hãy bắt đầu bằng cách thảo luận về cách nhóm các ứng dụng tương tự của chúng ta lại với nhau.

00:16:05.000 --> 00:16:11.000
Bạn nên nhóm các ứng dụng liên quan lại với nhau để hợp lý hóa trải nghiệm người dùng.

00:16:11.000 --> 00:16:18.000
Bằng cách nhóm các ứng dụng liên quan lại với nhau, người dùng của bạn chỉ cần cung cấp sự đồng ý của họ một lần để chia sẻ thông tin của họ với ứng dụng của bạn.

00:16:18.000 --> 00:16:26.000
Ví dụ, ứng dụng của bạn có thể có sẵn trên iOS và macOS nhưng sử dụng các mã định danh gói khác nhau cho mỗi nền tảng.

00:16:26.000 --> 00:16:29.000
Bạn nên nhóm các ứng dụng này lại với nhau.

00:16:29.000 --> 00:16:35.000
Khi sử dụng Đăng nhập bằng Apple, người dùng của bạn sẽ thấy Biểu tượng Ứng dụng cho ứng dụng bạn đã đặt làm ứng dụng chính.

00:16:35.000 --> 00:16:42.000
Hãy cùng khám phá cách bạn có thể định cấu hình ID Dịch vụ để hỗ trợ Đăng nhập bằng Apple trên trang web của mình.

00:16:42.000 --> 00:16:51.000
Để bắt đầu, hãy đăng nhập vào Cổng thông tin dành cho nhà phát triển của Apple và điều hướng đến "Giấy chứng nhận, Mã định danh &amp; Hồ sơ".

00:16:51.000 --> 00:16:56.000
Chọn nút radio bên cạnh ID Dịch vụ và sau đó nhấp vào "Tiếp tục".

00:16:56.000 --> 00:16:59.000
Nhập mô tả cho Dịch vụ của bạn.

00:16:59.000 --> 00:17:04.000
Nhập một mã định danh duy nhất cho Dịch vụ của bạn và nhấp vào Tiếp tục.

00:17:04.000 --> 00:17:10.000
Nhấp vào hộp kiểm bên cạnh Đăng nhập bằng Apple và sau đó nhấp vào nút Cấu hình.

00:17:10.000 --> 00:17:17.000
Trên màn hình Cấu hình Xác thực Web, chọn ID Ứng dụng Chính từ trình đơn thả xuống.

00:17:17.000 --> 00:17:24.000
Tiếp theo, nhập tên miền và tên miền phụ mà trang web của bạn sẽ sử dụng để hỗ trợ Đăng nhập bằng Apple.

00:17:24.000 --> 00:17:32.000
Cuối cùng, nhập URL chuyển hướng cho Apple để chuyển hướng người dùng của bạn trở lại ứng dụng hoặc trang web của bạn sau khi ủy quyền thành công.

00:17:32.000 --> 00:17:33.000
Thế là xong!

00:17:33.000 --> 00:17:38.000
Bạn đã định cấu hình ID Dịch vụ để hỗ trợ Đăng nhập bằng Apple trên trang web của mình.

00:17:38.000 --> 00:17:43.000
Bạn sẽ cần một nút để hiển thị cho người dùng trang web của bạn hỗ trợ Đăng nhập bằng Apple.

00:17:43.000 --> 00:17:50.000
Apple cung cấp một API nút có cấu hình cao để tạo hình ảnh nút Đăng nhập bằng Apple.

00:17:50.000 --> 00:17:56.000
Sử dụng cái này để tùy chỉnh và nhúng nút bạn chọn vào ứng dụng hoặc trang web của bạn.

00:17:56.000 --> 00:18:04.000
Đăng nhập bằng Apple JS là một khung Javascript đơn giản giúp việc tích hợp Đăng nhập bằng Apple trở nên dễ dàng hơn trên web.

00:18:04.000 --> 00:18:10.000
Trong ứng dụng hoặc trang web của bạn, hãy bắt đầu bằng cách bao gồm khung Đăng nhập bằng JavaScript của Apple.

00:18:10.000 --> 00:18:21.000
API đơn giản này sẽ cho phép bạn xác thực người dùng của mình và có được các tài sản khác nhau, như nút Đăng nhập bằng Apple mà bạn có thể tạo chỉ với một DIV đơn giản.

00:18:21.000 --> 00:18:28.000
Bạn cũng có thể tùy chỉnh nút để phù hợp với ứng dụng hoặc trang web của mình bằng cách sửa đổi các thuộc tính của nút.

00:18:28.000 --> 00:18:37.000
Ví dụ, với các thuộc tính hiện tại, bạn sẽ nhận được nút "Đăng nhập bằng Apple" màu trắng với đường viền và bán kính góc mặc định.

00:18:37.000 --> 00:18:42.000
Bằng cách thay đổi thuộc tính màu dữ liệu, chúng ta có thể chọn một màu nền khác cho nút.

00:18:42.000 --> 00:18:49.000
Nếu chúng tôi thay đổi kiểu dữ liệu thành "tiếp tục", văn bản nút sẽ cập nhật để hiển thị "Tiếp tục với Apple".

00:18:49.000 --> 00:18:56.000
Ngoài ra, bạn có thể tạo nút chỉ có logo bằng cách đặt thuộc tính chế độ dữ liệu thành chỉ có logo.

00:18:56.000 --> 00:19:02.000
Đăng nhập bằng Apple Javascript Button API cung cấp nhiều thuộc tính có thể tùy chỉnh hơn.

00:19:02.000 --> 00:19:08.000
Bạn có thể tham khảo tài nguyên nút Đăng nhập bằng Apple để dễ dàng định cấu hình nhiều tùy chọn này.

00:19:08.000 --> 00:19:16.000
Nếu bạn muốn sử dụng REST API để tạo nút Đăng nhập bằng Apple, bạn có thể sử dụng một trong các điểm cuối của nút Apple ID để tạo nút.

00:19:16.000 --> 00:19:22.000
Có các điểm cuối riêng biệt cho các nút căn giữa, căn trái và logo.

00:19:22.000 --> 00:19:25.000
Bạn có thể tùy chỉnh nút bằng cách sử dụng các tham số truy vấn.

00:19:25.000 --> 00:19:30.000
Trong yêu cầu ví dụ này, tôi tùy chỉnh nút Đăng nhập bằng Apple màu trắng có đường viền.

00:19:30.000 --> 00:19:34.000
Tôi nhận được phản hồi với nút tùy chỉnh dưới dạng hình ảnh PNG.

00:19:34.000 --> 00:19:41.000
Bây giờ bạn đã cá nhân hóa nút Đăng nhập bằng Apple của mình, đã đến lúc xác thực người dùng của bạn.

00:19:41.000 --> 00:19:46.000
Bạn sẽ cần gửi yêu cầu ủy quyền với các thông số cần thiết cho Apple.

00:19:46.000 --> 00:19:52.000
Đây là những thông số bạn cần để đăng nhập thành công người dùng.

00:19:52.000 --> 00:19:59.000
Vì bạn đã triển khai Đăng nhập bằng Apple trên nền tảng Apple, những thông số này rất quen thuộc.

00:19:59.000 --> 00:20:01.000
Đầu tiên, chúng ta sẽ cần thiết lập "ID khách hàng".

00:20:01.000 --> 00:20:08.000
Đây sẽ là ID Dịch vụ mà bạn đã tạo trên Cổng thông tin Nhà phát triển Apple cho ứng dụng hoặc trang web của mình.

00:20:08.000 --> 00:20:13.000
Tiếp theo, nếu ứng dụng hoặc trang web của bạn yêu cầu email hoặc tên, hãy điền vào tham số "phạm vi".

00:20:13.000 --> 00:20:19.000
Nếu bạn đang yêu cầu nhiều phạm vi, hãy sử dụng một khoảng trắng để tách từng phạm vi.

00:20:19.000 --> 00:20:23.000
Điều quan trọng là bạn chỉ yêu cầu dữ liệu bạn cần.

00:20:23.000 --> 00:20:35.000
Tham số "redirectURI" là nơi bạn sẽ thêm URL bạn đã đăng ký trước đó trên Cổng thông tin dành cho nhà phát triển Apple và thông báo cho Apple nơi hướng người dùng đến trang web của bạn.

00:20:35.000 --> 00:20:40.000
Bạn cũng có thể thêm "trạng thái" và "nonce" để đảm bảo yêu cầu của mình.

00:20:40.000 --> 00:20:51.000
Và cuối cùng, với tham số "usePopup", bạn có thể chọn hiển thị màn hình đăng nhập trong một cửa sổ bật lên riêng biệt hoặc để cửa sổ hiện có chuyển hướng đến trang web Đăng nhập Apple.

00:20:51.000 --> 00:20:59.000
Nếu ai đó đang sử dụng Safari, họ sẽ thấy một màn hình gốc như thế này cung cấp cho họ trải nghiệm hạng nhất để đăng nhập vào trang web của bạn.

00:20:59.000 --> 00:21:08.000
Sau khi máy chủ Apple ID xử lý yêu cầu ủy quyền, bạn sẽ nhận được một sự kiện DOM chứa kết quả ủy quyền.

00:21:08.000 --> 00:21:16.000
Để xử lý phản hồi thành công, hãy thêm trình nghe sự kiện cho "AppleIDSignInOnSuccess."

00:21:16.000 --> 00:21:23.000
Để xử lý phản hồi thất bại, hãy thêm trình nghe sự kiện cho "AppleIDSignInOnFailure."

00:21:23.000 --> 00:21:33.000
Nếu ủy quyền thành công, bạn sẽ nhận được phản hồi có chứa mã ủy quyền, mã thông báo nhận dạng và thông tin người dùng nếu được yêu cầu.

00:21:33.000 --> 00:21:37.000
Điều này tương tự như phản hồi mà bạn đã quen trên các nền tảng của Apple.

00:21:37.000 --> 00:21:47.000
Nếu bạn muốn sử dụng REST API để tích hợp trực tiếp với các máy chủ Apple ID, hãy chuyển yêu cầu ủy quyền đến điểm cuối ủy quyền với các tham số được yêu cầu.

00:21:47.000 --> 00:21:56.000
Nếu ủy quyền thành công, bạn sẽ nhận được phản hồi có chứa mã ủy quyền, mã thông báo nhận dạng và thông tin người dùng.

00:21:56.000 --> 00:22:00.000
Điều này rất giống với phản hồi mà bạn đã quen trên các nền tảng của Apple.

00:22:00.000 --> 00:22:01.000
Thế là xong!

00:22:01.000 --> 00:22:05.000
Bạn đã áp dụng thành công Đăng nhập bằng Apple trên trang web của mình!

00:22:05.000 --> 00:22:12.000
Để kết thúc, tôi muốn nêu bật một số điều quan trọng cần ghi nhớ khi triển khai Đăng nhập bằng Apple.

00:22:12.000 --> 00:22:19.000
Trừ khi ứng dụng của bạn yêu cầu các tính năng quan trọng dựa trên tài khoản, hãy để mọi người sử dụng ứng dụng của bạn mà không cần đăng nhập.

00:22:19.000 --> 00:22:29.000
Ví dụ: bạn có thể cho phép người dùng mua một mặt hàng bằng Apple Pay và sau đó tùy chọn đề nghị họ liên kết giao dịch mua của họ với tài khoản sau khi giao dịch mua hoàn tất.

00:22:29.000 --> 00:22:39.000
Cung cấp cho người dùng hiện tại khả năng nâng cấp bảo mật tài khoản của họ bằng cách chuyển từ xác thực tên người dùng và mật khẩu sang Đăng nhập bằng Apple.

00:22:39.000 --> 00:22:44.000
Nếu bạn chỉ cần một mã định danh duy nhất để xác định người dùng, đừng thu thập tên hoặc email.

00:22:44.000 --> 00:22:50.000
Và nếu bạn thu thập email thông qua Đăng nhập bằng Apple, hãy đảm bảo rằng bạn tôn trọng sự lựa chọn của người dùng.

00:22:50.000 --> 00:22:54.000
Bạn không nên nhắc thêm một email.

00:22:54.000 --> 00:23:00.000
Điều quan trọng là phải triển khai Đăng nhập bằng Apple trên tất cả các nền tảng mà ứng dụng hoặc trang web của bạn có sẵn.

00:23:00.000 --> 00:23:06.000
Người dùng của bạn có thể sử dụng nhiều nền tảng và họ sẽ mong đợi sử dụng Đăng nhập bằng Apple ở mọi nơi.

00:23:06.000 --> 00:23:11.000
Chúng tôi thực sự vui mừng khi thấy những gì bạn làm với Đăng nhập bằng Apple trong ứng dụng của mình và chúng tôi mong nhận được phản hồi của bạn.

00:23:11.000 --> 00:23:14.000
Cảm ơn bạn đã xem, và tận hưởng phần còn lại của WWDC!

00:23:14.000 --> 23:59:59.000
.

