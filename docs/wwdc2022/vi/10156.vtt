WEBVTT

00:00:01.000 --> 00:00:11.000
Ernest: Xin chào và chào mừng.

00:00:11.000 --> 00:00:15.000
Tên tôi là Ernest, và tôi là một kỹ sư phần mềm trong nhóm ScreenCaptureKit.

00:00:15.000 --> 00:00:25.000
Trong vài năm qua, tất cả chúng ta đều phụ thuộc nhiều hơn vào sự cộng tác từ xa, thường liên quan đến việc chia sẻ màn hình.

00:00:25.000 --> 00:00:40.000
Trên hết, trò chơi phát trực tuyến bằng cách sử dụng ứng dụng ghi âm như OBS Studio và tạo nội dung nói chung, là một lĩnh vực liên tục phát triển cho giáo dục và giải trí của mọi người.

00:00:40.000 --> 00:00:48.000
Với suy nghĩ này, chúng tôi đã tạo ra một khuôn khổ đáp ứng nhu cầu của các nhà phát triển về khả năng chụp màn hình hiệu quả và mạnh mẽ.

00:00:48.000 --> 00:00:51.000
Gặp gỡ ScreenCaptureKit!

00:00:51.000 --> 00:01:00.000
ScreenCaptureKit là một khuôn khổ hoàn toàn mới trên macOS được thiết kế để giúp bạn tạo trải nghiệm chia sẻ màn hình cho ứng dụng của mình.

00:01:00.000 --> 00:01:10.000
ScreenCaptureKit cung cấp các API cho phép bạn chọn nội dung bạn muốn chụp, với các điều khiển và chuyển đổi của nhà phát triển cho nhu cầu ứng dụng của bạn.

00:01:10.000 --> 00:01:15.000
Và tất cả các bộ lọc và điều khiển có thể được cập nhật nhanh chóng.

00:01:15.000 --> 00:01:27.000
Khung cung cấp chất lượng và hiệu suất cao lên đến độ phân giải và tốc độ khung hình gốc của màn hình của bạn, tất cả trong khi vẫn có sự riêng tư với các biện pháp bảo vệ toàn cầu.

00:01:27.000 --> 00:01:32.000
Trong phiên này, tôi sẽ giúp bạn bắt đầu với khung ScreenCaptureKit.

00:01:32.000 --> 00:01:40.000
Khi bạn đã có những điều cơ bản, hãy xem "Đưa ScreenCaptureKit lên cấp độ tiếp theo" để biết các chủ đề nâng cao hơn.

00:01:40.000 --> 00:01:45.000
Đầu tiên, tôi sẽ xem xét các tính năng chính của khuôn khổ.

00:01:45.000 --> 00:01:51.000
Tiếp theo, tôi sẽ đề cập đến các cấu trúc ScreenCaptureKit chính trong tổng quan về API.

00:01:51.000 --> 00:01:56.000
Sau đó, tôi sẽ chỉ cho bạn cách thiết lập luồng của bạn với bộ lọc và cấu hình.

00:01:56.000 --> 00:02:03.000
Và cuối cùng, tôi sẽ hướng dẫn bạn cách truyền các mẫu video và âm thanh đến ứng dụng của bạn.

00:02:03.000 --> 00:02:07.000
Hãy bắt đầu với các tính năng chính của ScreenCaptureKit.

00:02:07.000 --> 00:02:13.000
ScreenCaptureKit cho phép bạn chỉ định loại nội dung bạn muốn chia sẻ hoặc lọc ra.

00:02:13.000 --> 00:02:25.000
Bạn có thể chụp nội dung màn hình từ bất kỳ sự kết hợp nào của màn hình, ứng dụng và cửa sổ cũng như âm thanh đi kèm với nó.

00:02:25.000 --> 00:02:44.000
ScreenCaptureKit hỗ trợ nhiều điều khiển của nhà phát triển, bao gồm định dạng pixel, không gian màu, tốc độ khung hình và độ phân giải, và ở phía âm thanh, các điều khiển như tốc độ mẫu và số kênh.

00:02:44.000 --> 00:02:54.000
Và tất cả các bộ lọc và cấu hình này có thể được điều chỉnh nhanh chóng, cho phép thiết kế ứng dụng linh hoạt hơn.

00:02:54.000 --> 00:03:13.000
Và để cung cấp các mẫu âm thanh nổi và video lên đến 48kHz ở độ phân giải và tốc độ khung hình gốc của màn hình, ScreenCaptureKit tập trung vào hiệu suất và tận dụng sức mạnh của GPU Mac với chi phí CPU thấp hơn các phương pháp chụp hiện có.

00:03:13.000 --> 00:03:23.000
Và tất nhiên, ScreenCaptureKit được xây dựng với sự riêng tư trong tâm trí, cung cấp các biện pháp bảo vệ quyền riêng tư toàn cầu cho tất cả các ứng dụng sử dụng khuôn khổ.

00:03:23.000 --> 00:03:34.000
Khung sẽ yêu cầu sự đồng ý trước khi quay nội dung video và âm thanh, và lựa chọn sẽ được lưu trữ trong cài đặt quyền riêng tư Ghi màn hình trong tùy chọn hệ thống.

00:03:34.000 --> 00:03:41.000
Bây giờ bạn đã thấy ScreenCaptureKit là gì, tôi sẽ chỉ cho bạn một số khái niệm quan trọng nhất trong API.

00:03:41.000 --> 00:03:45.000
Khung ScreenCaptureKit tập trung vào SCStream.

00:03:45.000 --> 00:03:58.000
SCStream xử lý các phương thức điều khiển như bắt đầu và dừng và được tạo cùng với SCShareableContent, SCContentFilter và SCStreamConfiguration.

00:03:58.000 --> 00:04:04.000
Những đối tượng này xác định nội dung bạn muốn chụp và cách bạn muốn chụp nó.

00:04:04.000 --> 00:04:13.000
Sau khi tạo và bắt đầu, các mẫu phương tiện sẽ được gửi đến ứng dụng của bạn thông qua giao thức SCStreamOutput.

00:04:13.000 --> 00:04:17.000
Tôi sẽ giải thích thêm về điều đó một lát sau.

00:04:17.000 --> 00:04:24.000
Bây giờ, tôi sẽ chỉ cho bạn cách sử dụng API để thiết lập luồng trong ứng dụng của bạn.

00:04:24.000 --> 00:04:30.000
Đây là những đối tượng bạn muốn làm quen khi thiết lập luồng của mình.

00:04:30.000 --> 00:04:37.000
Đây là những đối tượng sẽ xác định những gì bạn chụp và chất lượng cũng như hiệu suất của việc chụp.

00:04:37.000 --> 00:04:44.000
Cái đầu tiên tôi muốn đi vào là SCShareableContent.

00:04:44.000 --> 00:04:52.000
Trên máy tính để bàn này, có các cửa sổ, ứng dụng và chính màn hình hiển thị.

00:04:52.000 --> 00:05:01.000
ScreenCaptureKit có một lớp tương ứng cho mỗi lớp này mà bạn có thể sử dụng để xây dựng nội dung bạn muốn chia sẻ.

00:05:01.000 --> 00:05:05.000
Đầu tiên, chúng ta hãy xem SCDisplay.

00:05:05.000 --> 00:05:19.000
ScreenCaptureKit phân loại màn hình là SCDisplays, với các thuộc tính chỉ đọc bao gồm số nhận dạng hiển thị và chiều rộng và chiều cao thuộc tính kích thước.

00:05:19.000 --> 00:05:29.000
Trong màn hình, có thể có nhiều ứng dụng đang chạy khác nhau và mỗi ứng dụng này sẽ có một Ứng dụng SCRunningApplication tương ứng.

00:05:29.000 --> 00:05:41.000
SCRunningApplications có các thuộc tính chỉ đọc cho thông tin cấp ứng dụng như mã định danh gói, tên ứng dụng và mã định danh quy trình của nó.

00:05:41.000 --> 00:05:49.000
Trong ví dụ ở đây, sẽ có một SCRunningApplication cho Keynote và Safari.

00:05:49.000 --> 00:05:53.000
Và, tất nhiên, những ứng dụng này có cửa sổ.

00:05:53.000 --> 00:06:08.000
Các cửa sổ này sẽ có một SCWindow tương ứng với các thuộc tính chỉ đọc xác định cửa sổ như id cửa sổ, khung, tiêu đề và nếu cửa sổ ở trên màn hình hoặc thu nhỏ.

00:06:08.000 --> 00:06:12.000
SCWindow cũng sẽ có một ứng dụng sở hữu.

00:06:12.000 --> 00:06:22.000
Trong trường hợp này, cả Safari SCWindows sẽ có cùng một ứng dụng sở hữu Safari.

00:06:22.000 --> 00:06:32.000
SCWindows, SCRunningApplications và SCDisplays kết hợp với nhau để cung cấp cho bạn nội dung có thể có mà bạn có thể chia sẻ trong SCShareableContent.

00:06:32.000 --> 00:06:41.000
Bạn có thể nhận danh sách tất cả nội dung có thể chia sẻ trên thiết bị hoặc bạn có thể chỉ định các thông số nhất định.

00:06:41.000 --> 00:06:49.000
Giả sử bạn muốn liệt kê tất cả các ứng dụng và cửa sổ trên màn hình để mọi người có thể chọn ứng dụng nào họ muốn chia sẻ.

00:06:49.000 --> 00:06:54.000
Chà, ScreenCaptureKit có một API đơn giản cho việc đó.

00:06:54.000 --> 00:07:00.000
Đoạn mã ngắn này là từ mã mẫu chụp có sẵn trên developer.apple.com.

00:07:00.000 --> 00:07:12.000
Chỉ những cửa sổ trên màn hình mới được trả về với SCShareableContent, bao gồm SCWindows, SCApplications và SCDisplays được liên kết.

00:07:12.000 --> 00:07:18.000
Và bây giờ bạn đã có nội dung có thể chia sẻ, bạn có thể tạo một bộ lọc.

00:07:18.000 --> 00:07:37.000
Có hai loại SCContentFilters chính: Bộ lọc cửa sổ độc lập hiển thị, sẽ chụp cửa sổ khi bạn di chuyển nó qua nhiều màn hình và hiển thị các bộ lọc phụ thuộc, với các tùy chọn bao gồm hoặc loại trừ các cửa sổ và ứng dụng cụ thể.

00:07:37.000 --> 00:07:43.000
Một lưu ý nhanh ở đây là việc ghi âm chỉ có thể được lọc ở cấp độ ứng dụng.

00:07:43.000 --> 00:07:53.000
Tôi sẽ hướng dẫn bạn qua một số ví dụ để chứng minh bộ lọc là gì Hãy tưởng tượng bạn chỉ quan tâm đến việc chia sẻ một cửa sổ bài phát biểu quan trọng.

00:07:53.000 --> 00:08:00.000
Bạn sẽ chọn một bộ lọc cửa sổ độc lập hiển thị sẽ chụp cửa sổ khi nó di chuyển qua màn hình.

00:08:00.000 --> 00:08:07.000
Ngay cả khi bạn muốn chia sẻ tất cả nội dung trên màn hình, có thể có một số nội dung nhất định mà bạn muốn loại trừ.

00:08:07.000 --> 00:08:16.000
Ví dụ, bạn sẽ muốn tránh hiệu ứng hall of mirrors bằng cách loại trừ ứng dụng chụp của riêng bạn.

00:08:16.000 --> 00:08:24.000
Cũng có thể có thông tin nhạy cảm trong một cửa sổ hoặc ứng dụng cụ thể và bạn cũng muốn loại trừ thông tin đó khỏi việc chụp.

00:08:24.000 --> 00:08:34.000
Tất cả các tình huống này sẽ được xử lý bởi SCContentFilter, vì vậy hãy nhảy vào mã và xem cách thực hiện việc này.

00:08:34.000 --> 00:08:38.000
Đây là đoạn mã mà tôi đã hiển thị trước đó.

00:08:38.000 --> 00:08:46.000
Sau khi nội dung có thể chia sẻ được truy vấn, mã sẽ tìm kiếm ứng dụng có cùng Mã định danh bundle như ứng dụng lấy mẫu.

00:08:46.000 --> 00:08:54.000
Sau đó, bộ lọc nội dung phụ thuộc vào màn hình sẽ loại trừ ứng dụng khỏi luồng.

00:08:54.000 --> 00:09:02.000
Ngoài các bộ lọc nội dung, ScreenCaptureKit cung cấp các điều khiển chất lượng và hiệu suất có thể được điều chỉnh trên mỗi luồng.

00:09:02.000 --> 00:09:08.000
Các điều khiển này có thể được đặt trong SCStreamConfiguration.

00:09:08.000 --> 00:09:16.000
Một số điều khiển video bao gồm độ phân giải đầu ra, tốc độ khung hình và có hiển thị con trỏ chuột hay không.

00:09:16.000 --> 00:09:23.000
Về mặt âm thanh, bạn có thể bật âm thanh, thay đổi tốc độ mẫu và điều chỉnh số lượng kênh.

00:09:23.000 --> 00:09:29.000
Tôi sẽ đưa bạn qua một số tình huống mà các thông số này có thể phát huy tác dụng.

00:09:29.000 --> 00:09:43.000
Khi chia sẻ nội dung màn hình chuyển động thấp trong đó độ rõ nét của văn bản là quan trọng, chẳng hạn như từ ghi chú hoặc bảng tính, hãy đặt độ phân giải đầu ra của ảnh chụp thành 4k, ở tốc độ 10 khung hình mỗi giây.

00:09:43.000 --> 00:09:48.000
Và bởi vì nội dung không có bất kỳ âm thanh nào, bạn có thể tắt âm thanh.

00:09:48.000 --> 00:10:04.000
Nhưng trong trường hợp nội dung chuyển động cao, chẳng hạn như chia sẻ video về kỳ nghỉ gần đây, bạn nên ưu tiên tốc độ khung hình hơn độ phân giải bằng cách giảm độ phân giải đầu ra xuống 1080p và tăng khung hình mỗi giây lên 60.

00:10:04.000 --> 00:10:10.000
Và vì chuyển động của con trỏ có thể gây mất tập trung, bạn có thể muốn ẩn con trỏ.

00:10:10.000 --> 00:10:16.000
Bạn cũng có thể bật tính năng ghi âm thanh để có trải nghiệm nhập vai hơn.

00:10:16.000 --> 00:10:24.000
Tất cả các điều khiển này có thể được thiết lập thông qua các thuộc tính khác nhau trong SCStreamConfiguration.

00:10:24.000 --> 00:10:29.000
Đây là một cấu hình khả thi để chia sẻ nội dung chuyển động cao.

00:10:29.000 --> 00:10:34.000
Trong mẫu mã này, độ phân giải đầu ra của ảnh chụp được đặt thành 1080p.

00:10:34.000 --> 00:10:42.000
Sau đó, khoảng thời gian khung hình tối thiểu được đặt thành 1/60 để chụp ở tốc độ 60 khung hình mỗi giây.

00:10:42.000 --> 00:10:47.000
Và cuối cùng, cấu hình luồng sẽ ẩn con trỏ.

00:10:47.000 --> 00:11:00.000
Về mặt âm thanh, trước tiên hãy bật âm thanh bằng cách đặt capturesAudio thành true, sau đó, đặt tốc độ mẫu thành 48kHz và số kênh thành 2.

00:11:00.000 --> 00:11:09.000
Với SCContentFilter và SCStreamConfiguration, bạn có thông tin bạn cần để thiết lập chụp màn hình theo nhu cầu của ứng dụng.

00:11:09.000 --> 00:11:15.000
Cùng nhau, bây giờ bạn có thể tạo một SCStream.

00:11:15.000 --> 00:11:18.000
Hãy quay lại tổng quan.

00:11:18.000 --> 00:11:23.000
Bạn sẽ cần khởi tạo luồng với bộ lọc và cấu hình mong muốn của mình.

00:11:23.000 --> 00:11:29.000
Và bạn cũng có thể vượt qua một đại diện tùy chọn để xử lý lỗi.

00:11:29.000 --> 00:11:38.000
Sau khi thiết lập, bạn có thể gọi bắt đầu chụp và ScreenCaptureKit sẽ cung cấp cho SCStream các mẫu khi chúng có sẵn.

00:11:38.000 --> 00:11:43.000
Với bộ lọc và cấu hình được tạo, việc bắt đầu một luồng trong mã rất dễ dàng.

00:11:43.000 --> 00:11:47.000
Để tôi chỉ cho bạn.

00:11:47.000 --> 00:11:54.000
Một lần nữa, với bộ lọc và cấu hình bạn muốn, bạn có thể khởi tạo một đối tượng SCStream.

00:11:54.000 --> 00:12:01.000
Trong dự án mẫu chụp, bản thân được thông qua với tư cách là đại diện xử lý lỗi.

00:12:01.000 --> 00:12:06.000
Với một SCStream được tạo, bây giờ bạn có thể gọi startCapture.

00:12:06.000 --> 00:12:16.000
Khi bạn đã khởi tạo và bắt đầu một luồng, bước tiếp theo là lấy các mẫu phương tiện vào ứng dụng của bạn.

00:12:16.000 --> 00:12:22.000
Các mẫu âm thanh và video được gửi đến ứng dụng của bạn dưới dạng CMSampleBuffers.

00:12:22.000 --> 00:12:32.000
Để lấy các mẫu phương tiện đó từ luồng của bạn, bạn sẽ cần thêm một đối tượng triển khai giao thức SCStreamOutput vào luồng của mình.

00:12:32.000 --> 00:12:38.000
Khi bạn thêm đầu ra luồng của mình, bạn cũng có thể chỉ định một hàng đợi xử lý.

00:12:38.000 --> 00:12:47.000
Điều này có thể hữu ích nếu bạn muốn mẫu của mình được giao trong một hàng đợi cụ thể mà không cần thêm công văn.

00:12:47.000 --> 00:12:54.000
Nếu bạn không chỉ định một hàng đợi, một hàng đợi mặc định sẽ được sử dụng.

00:12:54.000 --> 00:13:02.000
Với một luồng bắt đầu và một đầu ra được thêm vào, ScreenCaptureKit sẽ cung cấp một cuộc gọi lại khi một mẫu mới có sẵn.

00:13:02.000 --> 00:13:09.000
Bây giờ, tôi sẽ chỉ cho bạn cách lấy các mẫu phương tiện trong mã.

00:13:09.000 --> 00:13:17.000
Đây là một triển khai của SCStreamOutputProtocol sẽ được gọi khi các mẫu phương tiện mới có sẵn.

00:13:17.000 --> 00:13:25.000
ScreenCaptureKit cung cấp các mẫu này dưới dạng CMSampleBuffers và cung cấp luồng và loại mẫu.

00:13:25.000 --> 00:13:32.000
Sau khi triển khai trình xử lý bộ đệm mẫu, bạn chỉ cần thêm streamOutput của mình.

00:13:32.000 --> 00:13:44.000
Và cùng với đó, các mẫu phương tiện từ luồng, với nội dung bạn muốn, ở định dạng bạn muốn, sẽ được gửi đến ứng dụng của bạn.

00:13:44.000 --> 00:13:53.000
ScreenCaptureKit cung cấp các mẫu dưới dạng CMSampleBuffers, vì vậy hãy nói một chút về cách sử dụng chúng.

00:13:53.000 --> 00:13:58.000
Về mặt video, CMSampleBuffer được hỗ trợ bởi IOSurface.

00:13:58.000 --> 00:14:06.000
ScreenCaptureKit cũng cung cấp các tệp đính kèm với CMSampleBuffer trong SCStreamFrameInfo.

00:14:06.000 --> 00:14:12.000
Tệp đính kèm này cung cấp thông tin về mẫu video bạn đang nhận được.

00:14:12.000 --> 00:14:15.000
Kiểm tra trạng thái khung hình cho trạng thái hiện tại của luồng.

00:14:15.000 --> 00:14:19.000
Trạng thái khung hình hoàn chỉnh chỉ ra rằng có một khung hình video mới.

00:14:19.000 --> 00:14:26.000
Trạng thái khung hình nhàn rỗi có nghĩa là mẫu video không thay đổi, vì vậy không có bề mặt IOS mới.

00:14:26.000 --> 00:14:35.000
Mặt khác, mẫu được cung cấp giống như bất kỳ CMSampleBuffer nào, vì vậy bạn có thể sử dụng các tiện ích CMSampleBuffer hiện có.

00:14:35.000 --> 00:14:41.000
ScreenCaptureKit bao gồm các API để giúp bạn có được nội dung âm thanh và video màn hình được lọc.

00:14:41.000 --> 00:14:48.000
Trên hết, khuôn khổ cung cấp nhiều điều khiển khác nhau của nhà phát triển để phù hợp với nhu cầu ứng dụng của bạn.

00:14:48.000 --> 00:14:56.000
Tôi cũng đã đề cập đến một số điều cơ bản để giúp bạn bắt đầu với những trải nghiệm chụp màn hình khác nhau mà bạn sẽ tạo ra.

00:14:56.000 --> 00:15:06.000
Với việc phát hành ScreenCaptureKit, các khung chụp cũ hơn CGDisplayStream và CGWindowList sẽ bị phản đối trong tương lai.

00:15:06.000 --> 00:15:11.000
Tôi hy vọng bạn cũng hào hứng như tôi với phần giới thiệu về ScreenCaptureKit này!

00:15:11.000 --> 00:15:18.000
Khi bạn đã sẵn sàng xem xét các chủ đề nâng cao hơn, vui lòng chuyển sang "Đưa ScreenCaptureKit lên cấp độ tiếp theo."

00:15:18.000 --> 00:15:20.000
Cảm ơn vì đã xem!

00:15:20.000 --> 23:59:59.000
.

