WEBVTT

00:00:00.000 --> 00:00:03.000
♪ Nhạc hip-hop nhạc cụ êm dịu ♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:14.000
Xin chào, tên tôi là Denis, và tôi là thành viên của nhóm Công nghệ Hiển thị và Màu sắc tại Apple.

00:00:14.000 --> 00:00:19.000
Hôm nay tôi sẽ khám phá một số cập nhật thú vị với EDR và ý nghĩa của chúng đối với các nhà phát triển iOS.

00:00:19.000 --> 00:00:29.000
Bạn có thể đã quen thuộc với EDR nếu bạn đã xem bài thuyết trình năm ngoái, nhưng như một bản tóm tắt ngắn gọn, EDR đề cập đến Dải động mở rộng và là công nghệ HDR của Apple.

00:00:29.000 --> 00:00:40.000
EDR đề cập đến cả công nghệ kết xuất cũng như biểu diễn pixel, với biểu diễn pixel của EDR đặc biệt quan trọng vì nó luôn đại diện cho cả nội dung tiêu chuẩn và dải động cao.

00:00:40.000 --> 00:00:51.000
Trong nội dung được phơi sáng tốt, chủ đề - trong ví dụ này, các trại viên - nên nằm trong dải động tiêu chuẩn của hình ảnh, trong khi các điểm nổi bật gương và phát xạ, chẳng hạn như lửa trại, sẽ rơi vào phạm vi cao hơn.

00:00:51.000 --> 00:00:58.000
Trong một biểu diễn phạm vi tiêu chuẩn, các yếu tố này cuối cùng sẽ bị cắt bớt, nhưng với EDR, chúng vẫn có thể biểu diễn được.

00:00:58.000 --> 00:01:07.000
Trong khi các biểu diễn pixel khác được thiết kế để biểu diễn một phạm vi giá trị độ sáng cố định, biểu diễn của EDR thực sự động, có khả năng mô tả bất kỳ giá trị tùy ý nào.

00:01:07.000 --> 00:01:15.000
Ngoài ra, bằng cách tận dụng bất kỳ đèn nền không sử dụng nào, EDR cho phép bất kỳ màn hình nào hiển thị nội dung dải động cao bất kể đỉnh của màn hình.

00:01:15.000 --> 00:01:22.000
Và với nội dung HDR trở nên phổ biến và dễ tiếp cận hơn nhiều, danh sách các ứng dụng áp dụng EDR trên macOS cũng vậy.

00:01:22.000 --> 00:01:29.000
"Baldur's Gate 3," "Divinity: Original Sin 2," và "Shadow of the Tomb Raider" đã được vận chuyển với EDR trên macOS.

00:01:29.000 --> 00:01:37.000
Bằng cách áp dụng EDR, các trò chơi có khả năng hiển thị màu sắc sáng hơn và bão hòa hơn, cũng như tạo ra ánh sáng, phản xạ chân thực hơn và nội dung nhiều màu sắc hơn.

00:01:37.000 --> 00:01:45.000
Trường hợp các yếu tố sáng sẽ bị giới hạn ở đỉnh SDR màu trắng, với EDR, chúng lấy lại độ rung và chiều sâu như các tác giả dự định.

00:01:45.000 --> 00:01:50.000
EDR được tích hợp trên toàn hệ sinh thái Apple, bao gồm trong Safari và trình phát QuickTime.

00:01:50.000 --> 00:02:02.000
Kết quả là, các ứng dụng và dịch vụ video theo yêu cầu như Apple TV và Netflix có được khả năng cung cấp danh mục nội dung HDR10, Dolby Vision và ProRes ngày càng mở rộng cho người tiêu dùng của họ.

00:02:02.000 --> 00:02:15.000
Các ứng dụng chuyên nghiệp áp dụng EDR cho phép người dùng của họ tạo nội dung HDR tuyệt đẹp bằng cách cung cấp nhiều quy trình làm việc chuyên nghiệp để chỉnh sửa, chấm điểm, làm chủ và xem lại ảnh tĩnh và video HDR một cách chính xác.

00:02:15.000 --> 00:02:20.000
Với tất cả sự phấn khích xung quanh việc áp dụng EDR trên macOS, chúng tôi rất vui mừng được mang đến một số bản cập nhật mới cho EDR.

00:02:20.000 --> 00:02:26.000
Đầu tiên và quan trọng nhất, chúng tôi vui mừng thông báo rằng các API EDR của chúng tôi hiện đã có trên iOS và iPadOS.

00:02:26.000 --> 00:02:36.000
Ngoài ra, như một phần trong cam kết của Apple trong việc hỗ trợ người dùng chuyên nghiệp của chúng tôi, năm nay chúng tôi sẽ giới thiệu hai tính năng màu chuyên nghiệp mới trên iPad Pro 12,9 inch với màn hình Liquid Retina XDR.

00:02:36.000 --> 00:02:40.000
Chế độ tham chiếu và kết xuất EDR trên Sidecar.

00:02:40.000 --> 00:02:53.000
Chế độ tham chiếu là một chế độ hiển thị mới được thiết kế để cho phép các quy trình làm việc quan trọng về màu sắc như phân loại màu sắc, chỉnh sửa và đánh giá nội dung bằng cách cung cấp phản hồi tham chiếu cho nhiều định dạng video phổ biến, tương tự như các cài đặt trước tham chiếu trên macOS.

00:02:53.000 --> 00:03:02.000
Để làm điều này, Chế độ tham chiếu sửa độ sáng cực đại SDR ở 100 nits và độ sáng cực đại HDR ở 1000 nits, do đó cho khoảng không EDR gấp 10 lần.

00:03:02.000 --> 00:03:06.000
Chế độ tham chiếu cũng cung cấp phương tiện một-một để hiển thị ánh xạ.

00:03:06.000 --> 00:03:16.000
Và vô hiệu hóa tất cả các điều chỉnh hiển thị động cho môi trường xung quanh, chẳng hạn như True Tone, Auto-Brightness và Night Shift, thay vào đó cho phép người dùng hiệu chỉnh tinh vi điểm trắng theo cách thủ công.

00:03:16.000 --> 00:03:22.000
Bằng cách này, màn hình sẽ tạo ra màu sắc chính xác như chúng được mô tả bởi các thông số kỹ thuật tương ứng của chúng.

00:03:22.000 --> 00:03:26.000
Biểu đồ này cung cấp một danh sách các định dạng mà Chế độ tham chiếu hỗ trợ.

00:03:26.000 --> 00:03:37.000
Lưu ý rằng không giống như các cài đặt trước tham chiếu trên macOS, Chế độ tham chiếu là một nút chuyển đổi duy nhất hỗ trợ năm định dạng video HDR và SDR phổ biến nhất, cung cấp phản hồi tham chiếu nhất quán giữa các loại phương tiện.

00:03:37.000 --> 00:03:41.000
Và đừng lo lắng nếu bạn có nội dung ở định dạng không được liệt kê trên bảng này.

00:03:41.000 --> 00:03:46.000
Bất kỳ định dạng nào không được hỗ trợ sẽ được quản lý màu sắc như trong Chế độ hiển thị mặc định.

00:03:46.000 --> 00:03:49.000
Ví dụ, chúng ta hãy xem LumaFusion trong Chế độ Tham chiếu.

00:03:49.000 --> 00:03:55.000
Bằng cách bật Chế độ tham chiếu trên iOS, LumaFusion trở thành một công cụ mạnh mẽ hơn cho hậu kỳ video.

00:03:55.000 --> 00:04:05.000
Khi hiển thị video HDR, các màu trong gam màu P3 lên đến đỉnh 1000 nit được hiển thị chính xác, vì vậy người dùng có thể tự tin rằng video của họ luôn được hiển thị chính xác và nhất quán.

00:04:05.000 --> 00:04:12.000
Với sự kết hợp của Chế độ tham chiếu và tính năng Phạm vi video mới của LumaFusion, quy trình làm việc quan trọng về màu sắc hiện có thể thực hiện được trên iPad Pro.

00:04:12.000 --> 00:04:19.000
Nếu chúng ta tắt Chế độ tham chiếu, khoảng không EDR có thể thay đổi động, điều mà chúng ta sẽ thấy ở đây khi iOS điều chỉnh độ sáng của video của chúng ta.

00:04:19.000 --> 00:04:29.000
Người dùng có thể xuất các dự án LumaFusion của họ dưới dạng XML, sau đó có thể được nhập bởi các ứng dụng hậu kỳ Mac phổ biến khác, cho phép một nhóm người sáng tạo nội dung dễ dàng cộng tác trên cả hai nền tảng.

00:04:29.000 --> 00:04:37.000
Thật thú vị khi thấy LumaFusion áp dụng Chế độ tham chiếu, cùng với giá trị và tính linh hoạt mà nó mang lại cho những người sáng tạo nội dung chuyên nghiệp.

00:04:37.000 --> 00:04:39.000
Nhưng Chế độ tham chiếu không phải là tính năng mới duy nhất.

00:04:39.000 --> 00:04:46.000
Trở lại năm 2019, chúng tôi đã giới thiệu Sidecar, một công nghệ cho phép người dùng Mac sử dụng iPad của họ làm màn hình phụ.

00:04:46.000 --> 00:05:02.000
Và bây giờ, với sự ra đời của Chế độ tham chiếu, chúng tôi đang thêm hỗ trợ kết xuất EDR trên Sidecar, mở rộng khả năng của Sidecar khi Chế độ tham chiếu được bật để hỗ trợ nội dung SDR và HDR cấp tham chiếu, cho phép người sáng tạo nội dung chuyên nghiệp sử dụng iPad Pro của họ làm màn hình tham chiếu thứ cấp cho Apple silicon

00:05:02.000 --> 00:05:11.000
Không cần phải nói rằng nội dung được hiển thị trên Sidecar sẽ cung cấp phản hồi tham chiếu cho tất cả các định dạng video giống như iOS gốc trong Chế độ tham chiếu.

00:05:11.000 --> 00:05:20.000
Ví dụ, chúng ta hãy xem mẫu thử nghiệm HDR10 này như được hiển thị trên máy Mac trong cài đặt trước video HDR và so sánh nó với phiên bản trên iPad Pro bằng Sidecar.

00:05:20.000 --> 00:05:29.000
Trong cấu hình này, cả hai thiết bị đều hoạt động như một màn hình tham chiếu với màu P3 và điểm trắng D65, vì đó là thông số kỹ thuật cho cả hai màn hình.

00:05:29.000 --> 00:05:37.000
Như bạn có thể thấy từ các thanh màu chính và phụ P3, cả Mac và iPad đều tạo ra phản hồi tương tự như chúng ta mong đợi.

00:05:37.000 --> 00:05:47.000
Ngoài ra, cả hai cấu hình đều hỗ trợ độ sáng cực đại là 1000 nits và như đã thấy trong gradient, các giá trị đó được hiển thị trung thực trong khi các giá trị vượt quá 1000 nits được cắt bớt.

00:05:47.000 --> 00:05:52.000
Chúng tôi rất hào hứng với triển vọng và cơ hội mới mà kết xuất EDR trên Sidecar mang lại cho người dùng chuyên nghiệp của chúng tôi.

00:05:52.000 --> 00:05:58.000
Chúng tôi cũng mong muốn thấy nhiều nhà phát triển tận dụng các tính năng này bằng cách áp dụng EDR trong các ứng dụng của riêng họ.

00:05:58.000 --> 00:06:04.000
Trên lưu ý đó, hãy khám phá cách bạn có thể tích hợp kết xuất EDR vào các ứng dụng iOS và iPadOS của riêng bạn.

00:06:04.000 --> 00:06:09.000
Chúng ta sẽ bắt đầu bằng cách xem xét hàm ý của biểu diễn pixel của EDR và đường ống kết xuất.

00:06:09.000 --> 00:06:17.000
Theo truyền thống, biểu diễn dấu phẩy động của SDR là các giá trị trong phạm vi từ 0 đến một, 0 là màu đen và 1 là SDR trắng.

00:06:17.000 --> 00:06:24.000
Với EDR, nội dung SDR vẫn được biểu diễn trong phạm vi từ 0 đến 1 trong khi các giá trị trên 1 đại diện cho nội dung sáng hơn SDR.

00:06:24.000 --> 00:06:32.000
Lưu ý rằng EDR được biểu diễn trong không gian tuyến tính, có nghĩa là 2.0 EDR không sáng hơn 1.0 hai lần.

00:06:32.000 --> 00:06:39.000
Không giống như các định dạng HDR khác, EDR không điều chỉnh các giá trị bản đồ theo phạm vi 0 đến 1 và điều này có một số ý nghĩa đối với kết xuất.

00:06:39.000 --> 00:06:45.000
Về vấn đề đó, EDR đảm bảo rằng nội dung SDR, hoặc các giá trị từ 0 đến 1, luôn được hiển thị.

00:06:45.000 --> 00:06:50.000
Và bất kỳ giá trị nào trên 1 sẽ được hiển thị đúng cách mà không cần ánh xạ âm thanh lên đến khoảng không EDR hiện tại.

00:06:50.000 --> 00:06:53.000
Tuy nhiên, bất kỳ giá trị nào sáng hơn sẽ bị cắt bớt.

00:06:53.000 --> 00:07:07.000
Ban đầu, hành vi này có vẻ không lý tưởng, nhưng nó có nghĩa là bất kỳ nội dung nào được tạo trong HDR sẽ được hiển thị càng gần với ý định càng tốt, với bất kỳ điểm nổi bật nào bị cắt quá sáng như chúng thường được cắt trong một biểu diễn thông thường.

00:07:07.000 --> 00:07:11.000
Rõ ràng sau đó, khoảng không của bạn càng cao, nội dung của bạn càng sáng sủa và năng động hơn.

00:07:11.000 --> 00:07:13.000
Nhưng chúng ta có bao nhiêu khoảng trống?

00:07:13.000 --> 00:07:26.000
Chà, cần lưu ý rằng khoảng không EDR tức thời là một giá trị động và dựa trên nhiều yếu tố, bao gồm nhưng không giới hạn ở công nghệ hiển thị cụ thể của thiết bị, cũng như độ sáng màn hình hiện tại.

00:07:26.000 --> 00:07:35.000
Nhưng như một sự đơn giản hóa quá mức, khoảng không EDR hiện tại của bạn gần bằng độ sáng tối đa của màn hình chia cho độ sáng SDR hiện tại.

00:07:35.000 --> 00:07:47.000
Vì vậy, trước đó, khi tôi đề cập rằng Chế độ tham chiếu cung cấp khoảng không EDR gấp 10 lần, đó là bởi vì chúng tôi sửa EDR 1.0 - hoặc độ sáng SDR - thành 100 nits, trong khi chúng tôi sửa độ sáng cực đại HDR thành 1000 nits.

00:07:47.000 --> 00:07:53.000
Do đó, 1000 nits chia cho 100 nits mang lại cho bạn khoảng không không đổi gấp 10 lần EDR.

00:07:53.000 --> 00:07:58.000
Bảng này đưa ra một vài ví dụ khác về các thiết bị khác nhau và khoảng không tiềm năng tối đa của chúng.

00:07:58.000 --> 00:08:06.000
Lưu ý rằng đây là khoảng không tiềm năng và khoảng không thực sự sẽ phụ thuộc vào nhiều yếu tố khác, bao gồm cả độ sáng màn hình hiện tại.

00:08:06.000 --> 00:08:13.000
Sau đó trong bài nói chuyện này, chúng ta sẽ đi vào chi tiết hơn về khoảng không và chỉ cho bạn một ví dụ về cách truy vấn và sử dụng khoảng không để đưa ra quyết định sáng suốt về kết xuất.

00:08:13.000 --> 00:08:18.000
Nhưng bây giờ, bạn nên hiểu rõ về EDR và khi nào bạn muốn nó.

00:08:18.000 --> 00:08:21.000
Bây giờ, hãy chuyển sang thực sự hiển thị một số nội dung EDR.

00:08:21.000 --> 00:08:26.000
Trong phần này, chúng ta sẽ xem xét cách đọc nội dung HDR của bạn sang định dạng có thể hiển thị.

00:08:26.000 --> 00:08:34.000
Ví dụ cụ thể mà chúng tôi sẽ đề cập là quy trình làm việc Image I/O, nhưng nếu bạn đang tìm kiếm một khuôn khổ khác, hãy xem một trong những cuộc nói chuyện EDR khác của chúng tôi trong năm nay.

00:08:34.000 --> 00:08:38.000
Trong trường hợp phương tiện tĩnh, chúng tôi bắt đầu với một tệp hình ảnh mà chúng tôi muốn tải vào.

00:08:38.000 --> 00:08:42.000
Hình ảnh này thường sẽ được mã hóa trong không gian YUV hai mặt phẳng.

00:08:42.000 --> 00:08:47.000
Khi chúng tôi tải nó vào ban đầu, hình ảnh và bộ đệm của nó sẽ ở định dạng ban đầu.

00:08:47.000 --> 00:08:52.000
Thật không may, trong khi ở định dạng đó, có thể khó diễn giải và làm việc với hình ảnh theo bất kỳ cách nào có ý nghĩa.

00:08:52.000 --> 00:08:57.000
Vì vậy, với sự trợ giúp của CGBitmapContext, chúng tôi sẽ giải mã và chuyển đổi hình ảnh sang định dạng dễ sử dụng hơn.

00:08:57.000 --> 00:09:05.000
Tại thời điểm đó, chúng ta có thể tạo một MTLTexture từ dữ liệu pixel sao lưu của ngữ cảnh và sau đó kết xuất nó bằng công cụ Metal của chúng ta.

00:09:05.000 --> 00:09:09.000
Cụ thể hơn, để đạt được điều này, có bốn bước chúng ta cần đề cập đến.

00:09:09.000 --> 00:09:24.000
Chúng ta sẽ bắt đầu bằng cách tạo CGImage cho HDR của mình, vẽ CGImage đó vào ngữ cảnh bitmap, tạo kết cấu Metal và cuối cùng, tải dữ liệu của bitmap vào kết cấu mới được tạo.

00:09:24.000 --> 00:09:28.000
Trong bước đầu tiên, chúng ta sẽ đọc hình ảnh của mình và thiết lập một chút.

00:09:28.000 --> 00:09:35.000
Đầu tiên, chúng tôi đọc hình ảnh của mình từ URL vào CGImageSource, sau đó tạo CGImage từ nguồn đó.

00:09:35.000 --> 00:09:39.000
Trong trường hợp này, chúng tôi đã tạo ra hình ảnh bằng cách chuyển từ điển tùy chọn nil.

00:09:39.000 --> 00:09:48.000
Tuy nhiên, nếu bạn muốn bộ đệm dấu phẩy động với một số định dạng HDR nhất định, có một tùy chọn kCGImageSourceShouldAllowFloat mới mà bạn có thể muốn đặt.

00:09:48.000 --> 00:09:51.000
Bây giờ, chúng ta sẽ khởi tạo một CGBitmapInfo.

00:09:51.000 --> 00:09:56.000
Trong trường hợp này, chúng tôi đang tạo ra một ngữ cảnh dấu phẩy động 16 bit với một alpha nhân trước.

00:09:56.000 --> 00:10:01.000
Hãy nhớ điều này bởi vì chúng tôi sẽ muốn kết cấu Kim loại của chúng tôi sử dụng cùng một định dạng.

00:10:01.000 --> 00:10:08.000
Tiếp theo, chúng ta sẽ xây dựng một CGBitmapContext bằng cách sử dụng thông tin bitmap mà chúng ta vừa tạo, cùng với chiều rộng và chiều cao của CGImage.

00:10:08.000 --> 00:10:14.000
Lưu ý rằng bạn sẽ muốn không gian màu của ngữ cảnh phù hợp với không gian màu của CAMetalLayer mà bạn sẽ kết xuất.

00:10:14.000 --> 00:10:18.000
Nếu không, bạn sẽ cần phải tự mình thực hiện việc quản lý màu sắc phù hợp.

00:10:18.000 --> 00:10:23.000
Cuối cùng, chúng tôi sẽ vẽ CGImage của mình vào ngữ cảnh bitmap.

00:10:23.000 --> 00:10:28.000
Tại thời điểm này, chúng ta có thể chuyển sang tạo ra một kết cấu Kim loại từ bối cảnh của chúng ta.

00:10:28.000 --> 00:10:32.000
Để tạo kết cấu Kim loại của chúng tôi, trước tiên chúng tôi sẽ khởi tạo MTLTextureDescriptor.

00:10:32.000 --> 00:10:45.000
Nhớ lại từ trước đó rằng chúng tôi đã chọn sử dụng half float cho ngữ cảnh bitmap của mình, nhưng khi kết xuất EDR, bạn cũng có thể có kết cấu 2D của mình ở định dạng pixel đóng gói 32 bit với màu xanh lam, xanh lá cây và đỏ 10 bit và alpha 2 bit.

00:10:45.000 --> 00:10:55.000
Chúng ta sẽ đi vào chi tiết hơn trong các phần sau, nhưng hiện tại, chỉ cần biết rằng định dạng pixel của kết cấu phải khớp với định dạng pixel của nội dung của bạn là đủ; trong trường hợp của chúng tôi, một nửa nổi.

00:10:55.000 --> 00:11:02.000
Tại thời điểm này, chúng tôi sẽ khởi tạo kết cấu của mình với thiết bị của lớp Kim loại và bộ mô tả kết cấu mới được tạo.

00:11:02.000 --> 00:11:08.000
Cuối cùng, chúng tôi sẽ lấy dữ liệu từ ngữ cảnh bitmap của chúng tôi và sao chép nó vào kết cấu của chúng tôi.

00:11:08.000 --> 00:11:14.000
Với điều đó, chúng tôi có một kết cấu Kim loại chứa các giá trị EDR mà chúng tôi có thể gửi đến đường ống Kim loại của mình để kết xuất.

00:11:14.000 --> 00:11:21.000
Phần này bao gồm một quy trình làm việc mẫu để tìm nguồn cung ứng hình ảnh tĩnh HDR bắt đầu từ URL và làm việc theo cách của chúng tôi xuống kết cấu Kim loại.

00:11:21.000 --> 00:11:27.000
Tiếp theo, chúng ta sẽ xem xét các thay đổi mã tối thiểu cần thiết để hiển thị kết cấu như vậy trên iOS và iPadOS.

00:11:27.000 --> 00:11:33.000
Quá trình chọn tham gia EDR với iOS và iPadOS APIs mới giống hệt với quá trình trên macOS.

00:11:33.000 --> 00:11:39.000
Vì vậy, nếu bạn đã có hỗ trợ EDR cho bản dựng macOS của ứng dụng của mình, bạn sẽ không cần thực hiện bất kỳ thay đổi nào.

00:11:39.000 --> 00:11:52.000
Để chọn tham gia EDR, bạn cần đảm bảo rằng bạn đang sử dụng CAMetalLayer, rằng bạn đặt cờ và thẻ thích hợp trên lớp đó và bạn có nội dung sáng ở định dạng EDR được hỗ trợ.

00:11:52.000 --> 00:11:56.000
Đầu tiên, lấy CAMetalLayer mà bạn sẽ hiển thị nội dung của mình.

00:11:56.000 --> 00:12:02.000
Trên lớp đó, bạn sẽ muốn bật cờ Nội dung wantExtendedDynamicRange.

00:12:02.000 --> 00:12:08.000
Sau đó, trên cùng một lớp đó, bạn sẽ cần đặt một sự kết hợp được hỗ trợ của định dạng pixel và CGColorSpace.

00:12:08.000 --> 00:12:14.000
Tùy thuộc vào loại nội dung bạn có và cách bạn tìm nguồn, định dạng pixel và không gian màu cụ thể sẽ khác nhau.

00:12:14.000 --> 00:12:22.000
Trong trường hợp của chúng tôi, chúng tôi đã tải hình ảnh của mình vào bộ đệm dấu phẩy động 16 bit và ở đây chúng tôi đã chọn kết hợp nó với không gian màu Hiển thị tuyến tính mở rộng P3.

00:12:22.000 --> 00:12:28.000
iOS hỗ trợ kết xuất EDR trong bộ đệm điểm ảnh dấu phẩy động 16 bit kết hợp với không gian màu tuyến tính.

00:12:28.000 --> 00:12:33.000
Nhưng nếu bạn chọn sử dụng một trong những kết hợp này, hãy chắc chắn sử dụng biến thể mở rộng của không gian màu.

00:12:33.000 --> 00:12:36.000
Nếu không, nội dung của bạn sẽ được cắt thành SDR.

00:12:36.000 --> 00:12:42.000
iOs cũng hỗ trợ bộ đệm pixel BGRA được đóng gói 10-bit mà chúng tôi đã đề cập ngắn gọn trước đó.

00:12:42.000 --> 00:12:48.000
Các bộ đệm như vậy được hỗ trợ để hiển thị với không gian màu PQ hoặc HLG, như được nêu trong biểu đồ này.

00:12:48.000 --> 00:13:01.000
Trong phần này, chúng tôi đã đề cập đến các thay đổi mã tối thiểu cần thiết trên lớp kết xuất của bạn để hỗ trợ kết xuất EDR, bao gồm cờ wantsExtendedDynamicRangeContent cũng như các định dạng pixel và không gian màu khác nhau hỗ trợ EDR.

00:13:01.000 --> 00:13:08.000
Tại thời điểm này, nếu bạn kết xuất kết cấu Kim loại, chúng tôi đã lấy nguồn từ phần trước đến CAMetalLayer trong phần này, chúng tôi sẽ kết xuất EDR.

00:13:08.000 --> 00:13:11.000
Nhưng có một vài thủ thuật nữa chúng ta có thể làm.

00:13:11.000 --> 00:13:16.000
Như đã đề cập trong tổng quan, hành vi mặc định của EDR là kẹp vào khoảng không EDR hiện tại.

00:13:16.000 --> 00:13:23.000
Có những trường hợp bạn có thể quyết định rằng khoảng không đủ cao để biện minh cho việc hiển thị nội dung EDR của bạn và thay vào đó đi xuống đường dẫn SDR.

00:13:23.000 --> 00:13:28.000
Hoặc những lúc bạn muốn sử dụng khoảng không hiện tại để lập bản đồ nội dung của mình trước khi hiển thị.

00:13:28.000 --> 00:13:38.000
Trong cả hai trường hợp, iOS hiện có các API mới hỗ trợ truy vấn khoảng trống và trong phần này, chúng tôi sẽ xem xét các cuộc gọi cũng như chúng khác với macOS như thế nào để bạn có thể đưa ra quyết định tốt hơn.

00:13:38.000 --> 00:13:42.000
Trên macOS, các truy vấn khoảng trống được tìm thấy trên NSScreen.

00:13:42.000 --> 00:13:52.000
Trên NSScreen, chúng tôi có các truy vấn về: khoảng không EDR tối đa mà màn hình có thể hỗ trợ, khoảng không EDR tối đa của cài đặt trước tham chiếu hiện tại và khoảng không EDR hiện tại.

00:13:52.000 --> 00:13:57.000
Ngoài ra, macOS cung cấp thông báo bất cứ khi nào khoảng không EDR thay đổi.

00:13:57.000 --> 00:14:09.000
Tuy nhiên, trên iOS, các truy vấn khoảng trống được tìm thấy trên UIScreen và không giống như NSScreen, ở đây chúng tôi thay vào đó có các truy vấn cho khoảng không EDR tối đa mà màn hình hỗ trợ và khoảng không EDR hiện tại.

00:14:09.000 --> 00:14:17.000
Ngoài ra, UIScreen cung cấp trạng thái Chế độ hiển thị tham chiếu, được sử dụng để cho biết Chế độ tham chiếu có được hỗ trợ và tham gia hay không.

00:14:17.000 --> 00:14:24.000
Lưu ý rằng UIScreen không cung cấp thông báo cho những thay đổi trong khoảng không EDR nhưng sẽ gửi thông báo bất cứ khi nào trạng thái Chế độ tham chiếu thay đổi.

00:14:24.000 --> 00:14:29.000
Bạn cũng có thể nhận thấy rằng truy vấn khoảng trống tham chiếu tối đa bị thiếu trong danh sách.

00:14:29.000 --> 00:14:37.000
Thay vì sử dụng một truy vấn chuyên dụng, bạn có thể xác định giá trị của nó bằng cách truy vấn khoảng không tối đa tiềm năng khi trạng thái Chế độ tham chiếu chỉ ra rằng Chế độ tham chiếu đã được bật.

00:14:37.000 --> 00:14:42.000
Chúng ta hãy xem xét một số mã mẫu để hiểu rõ hơn về cách truy vấn khoảng không.

00:14:42.000 --> 00:14:48.000
Trên UIScreen, bạn có thể truy vấn phòng ngủ đầu EDR tiềm năng để xem khoảng không tối đa có thể có của màn hình.

00:14:48.000 --> 00:14:55.000
Nếu bạn quyết định giá trị này quá thấp, bạn có thể chọn hiển thị đường dẫn SDR thay thế, tiết kiệm một số sức mạnh xử lý.

00:14:55.000 --> 00:15:01.000
Sau đó, nếu bạn đã quyết định về đường dẫn EDR, bạn có thể có một đại diện kết xuất hoặc một cuộc gọi rút thăm được lên lịch thường xuyên.

00:15:01.000 --> 00:15:10.000
Trong cuộc gọi này, chúng ta có thể truy vấn Phòng đầu EDR hiện tại và sử dụng nó để ánh xạ âm nội dung của chúng ta sao cho không nội dung nào vượt quá khoảng không và do đó sẽ không bị cắt.

00:15:10.000 --> 00:15:21.000
Nếu bạn muốn biết về trạng thái Chế độ Tham chiếu, bạn có thể đăng ký để nhận thông báo bất cứ khi nào trạng thái thay đổi bằng cách sử dụng UIScreen.referenceDisplayMode StatusDidChangeNotification.

00:15:21.000 --> 00:15:30.000
Sau đó, bất cứ khi nào trạng thái thay đổi, bạn có thể lấy trạng thái mới và khoảng không EDR tiềm năng mới và sử dụng chúng để đưa ra quyết định tiếp theo về kết xuất.

00:15:30.000 --> 00:15:35.000
Về trạng thái Chế độ Tham chiếu, có bốn trạng thái duy nhất mà bạn nên biết.

00:15:35.000 --> 00:15:40.000
StatusEnabled chỉ ra rằng Chế độ tham chiếu được bật và nó đang hiển thị như mong đợi.

00:15:40.000 --> 00:15:46.000
StatusLimited chỉ ra rằng Chế độ tham chiếu được bật nhưng vì một số lý do, chúng tôi tạm thời không thể đạt được phản hồi tham chiếu.

00:15:46.000 --> 00:15:55.000
Lưu ý rằng nếu trạng thái này xảy ra, nó sẽ đi kèm với thông báo giao diện người dùng không tham chiếu để thông báo cho người dùng rằng phản hồi tham chiếu bị xâm phạm.

00:15:55.000 --> 00:16:01.000
StatusNotEnabled chỉ ra rằng Chế độ tham chiếu được hỗ trợ trên thiết bị này, nhưng nó chưa được bật.

00:16:01.000 --> 00:16:06.000
Và cuối cùng, StatusNotSupported chỉ ra rằng Chế độ tham chiếu không được hỗ trợ trên thiết bị này.

00:16:06.000 --> 00:16:16.000
Các API mới này sẽ cung cấp cho các nhà phát triển cái nhìn sâu sắc hơn về trạng thái hiện tại của màn hình và cung cấp cho họ các công cụ họ cần để đưa ra quyết định sáng suốt về cách hiển thị nội dung EDR của họ.

00:16:16.000 --> 00:16:24.000
Trong phần trước, chúng tôi đã đề cập đến cách truy vấn các thông số khoảng không khác nhau, bao gồm khoảng không EDR hiện tại, mà bạn có thể sử dụng để điều chỉnh bản đồ nội dung của mình và tránh bị cắt.

00:16:24.000 --> 00:16:28.000
Nhưng nếu bạn không muốn đào sâu hoặc triển khai các thuật toán ánh xạ giai điệu của riêng mình thì sao?

00:16:28.000 --> 00:16:33.000
Chà, trong trường hợp nội dung video, sau đó bạn có thể muốn tận dụng bản đồ âm thanh tích hợp của Apple.

00:16:33.000 --> 00:16:44.000
Nếu bạn muốn bật ánh xạ âm thanh của Apple trên nội dung của mình, bạn có thể làm như vậy bằng giao diện siêu dữ liệu CAEDR, bao gồm các hàm tạo siêu dữ liệu cho cả HDR10 và HLG.

00:16:44.000 --> 00:16:51.000
Lưu ý rằng ánh xạ âm thanh không được hỗ trợ trên tất cả các nền tảng nhưng có một truy vấn mà bạn có thể kiểm tra xem nền tảng của mình có hỗ trợ này hay không.

00:16:51.000 --> 00:16:57.000
Để kiểm tra xem nền tảng của bạn có hỗ trợ ánh xạ âm thanh hay không, hãy truy vấn CAEDRMetadata.isAvailable.

00:16:57.000 --> 00:17:01.000
Nếu nó có sẵn, bạn cần khởi tạo siêu dữ liệu CAEDRM.

00:17:01.000 --> 00:17:06.000
Chúng ta sẽ xem xét các nhà xây dựng cụ thể trong giây lát, nhưng hãy bỏ qua bước này ngay bây giờ.

00:17:06.000 --> 00:17:10.000
Khi bạn có siêu dữ liệu EDR của mình, hãy áp dụng nó cho lớp mà bạn đang kết xuất.

00:17:10.000 --> 00:17:16.000
Điều này sẽ chọn lớp của bạn được xử lý bởi trình ánh xạ âm thanh hệ thống dựa trên siêu dữ liệu được cung cấp.

00:17:16.000 --> 00:17:23.000
Như đã đề cập, có một số hàm tạo siêu dữ liệu EDR có sẵn, dành riêng cho định dạng video HDR của chúng.

00:17:23.000 --> 00:17:29.000
Ở đây chúng tôi có hàm tạo cho siêu dữ liệu HLG không có tham số.

00:17:29.000 --> 00:17:32.000
Tiếp theo, là một trong hai hàm tạo HDR10 có sẵn.

00:17:32.000 --> 00:17:45.000
Cái này có ba tham số: độ sáng tối thiểu của màn hình làm chủ tính bằng nits, độ sáng tối đa của màn hình làm chủ tính bằng nits và thang đo đầu ra quang học cho biết ánh xạ nội dung của EDR 1.0 đến độ sáng tính bằng nits.

00:17:45.000 --> 00:17:48.000
Thông thường, chúng tôi đặt cái này thành 100.

00:17:48.000 --> 00:18:03.000
Cuối cùng, chúng tôi có hàm tạo HDR10 thứ hai nhận thông báo SEI MasterDisplayColourVolume, thông báo SEI ContentLightLevelInformation và quang họcOutputScale, như đã đề cập trước đó, thường được đặt thành 100 nits.

00:18:03.000 --> 00:18:09.000
Khi bạn đã sử dụng một trong những hàm tạo này để tạo đối tượng CAEDRMetadata của mình, hãy đặt nó trên CAMetalLayer của ứng dụng.

00:18:09.000 --> 00:18:18.000
Điều này sẽ khiến tất cả nội dung được hiển thị trên lớp này được xử lý bởi trình ánh xạ âm thanh hệ thống, do đó tránh được bất kỳ đoạn cắt nào mà không cần phải tự thực hiện ánh xạ.

00:18:18.000 --> 00:18:29.000
Việc sử dụng hàm tạo nào phụ thuộc hoàn toàn vào cách nội dung của bạn có nguồn gốc hoặc tác giả, nhưng thông thường, nếu nội dung của bạn nằm trong không gian màu HLG, bạn sẽ muốn sử dụng hàm tạo HLG.

00:18:29.000 --> 00:18:34.000
Và nếu nó nằm trong không gian màu PQ, thì bạn sẽ muốn sử dụng hàm tạo HDR10.

00:18:34.000 --> 00:18:41.000
Nếu nội dung của bạn đi kèm với các tin nhắn SEI đã được đính kèm, thì chúng tôi khuyên bạn nên sử dụng hàm tạo HDR10 thứ hai để tuân thủ tốt nhất ý định của tác giả.

00:18:41.000 --> 00:18:45.000
Nếu không, bạn sẽ cần sử dụng hàm tạo đầu tiên.

00:18:45.000 --> 00:18:51.000
Nếu bạn đang sử dụng không gian màu tuyến tính, thì hàm tạo nào bạn sử dụng hoàn toàn phụ thuộc vào cách nội dung được tạo ra.

00:18:51.000 --> 00:19:00.000
Vì vậy, nếu bạn có ý định sử dụng chúng với ánh xạ âm thanh của Apple, tôi thực sự khuyên bạn nên đọc tài liệu dành cho nhà phát triển của chúng tôi về siêu dữ liệu HDR10 và HLG.

00:19:00.000 --> 00:19:03.000
Bây giờ chúng ta hãy xem xét Pixelmator và việc áp dụng EDR của họ.

00:19:03.000 --> 00:19:07.000
Nhờ EDR, chúng ta có thể hiển thị hình ảnh theo cách sống động và chân thực hơn.

00:19:07.000 --> 00:19:18.000
Ví dụ: nếu chúng ta mở ảnh RAW và tăng độ phơi sáng và độ nổi bật, các chi tiết ở các khu vực sáng nhất không thể được hiển thị bằng cách sử dụng dải động tiêu chuẩn của màn hình, còn được gọi là SDR.

00:19:18.000 --> 00:19:23.000
Bây giờ, nếu chúng ta bật EDR, tất cả các chi tiết vượt ra ngoài màu trắng SDR sẽ có thể nhìn thấy được.

00:19:23.000 --> 00:19:28.000
Lưu ý nội dung EDR xuất hiện rực rỡ hơn bao nhiêu so với màu SDR của khung vẽ.

00:19:28.000 --> 00:19:34.000
Tắt EDR sẽ làm cho sự khác biệt trực quan giữa SDR và EDR trở nên rõ ràng hơn.

00:19:34.000 --> 00:19:37.000
Và cùng với đó, phiên họp đã kết thúc.

00:19:37.000 --> 00:19:41.000
Trong buổi nói chuyện này, chúng tôi đã đề cập đến một vài tính năng mới và thú vị sắp ra mắt trên iOS và iPadOS.

00:19:41.000 --> 00:19:54.000
Chúng tôi đã cung cấp dịch tiết bồi dưỡng nhanh chóng trên EDR, xem qua quy trình làm việc mẫu để đọc Hình ảnh HDR với I/O Hình ảnh và chuyển đổi nó thành kết cấu Kim loại và xem cách chọn tham gia EDR để chúng tôi có thể hiển thị kết cấu đó mà không cần cắt thành SDR.

00:19:54.000 --> 00:20:06.000
Chúng tôi cũng đã đề cập ngắn gọn đến các API truy vấn khoảng trống và tiện ích của chúng trong việc đưa ra quyết định sáng suốt về kết xuất EDR, cũng như cách chọn tham gia ánh xạ âm thanh được cung cấp hệ thống của Apple cho các định dạng HDR phổ biến.

00:20:06.000 --> 00:20:12.000
Tôi hy vọng rằng bạn đã thoát khỏi cuộc nói chuyện này với sự hiểu biết tốt hơn về EDR và cách áp dụng nó trong các ứng dụng iOS và iPadOS của bạn.

00:20:12.000 --> 00:20:22.000
Nếu bạn muốn tìm hiểu thêm về cách làm việc với nội dung HDR hoặc EDR nói chung, có một vài phiên từ những năm trước, cũng như một số phiên sắp tới mà tôi muốn giới thiệu.

00:20:22.000 --> 00:20:25.000
Như đã nói, cảm ơn bạn đã tham dự phiên "Khám phá EDR trên iOS" của chúng tôi.

00:20:25.000 --> 00:20:27.000
Và có một WWDC tuyệt vời!

00:20:27.000 --> 23:59:59.000
♪

