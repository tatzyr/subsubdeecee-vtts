WEBVTT

00:00:00.000 --> 00:00:03.000
♪ 부드러운 기악 힙합 음악 ♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:14.000
안녕, 내 이름은 다니엘이고, 나는 보안 엔지니어링 및 아키텍처 팀에 있어.

00:00:14.000 --> 00:00:18.000
엔드포인트 보안에 대한 업데이트를 알려 드리겠습니다.

00:00:18.000 --> 00:00:23.000
엔드포인트 보안은 우리가 제공하는 API이므로, Mac용 보안 제품을 구축할 수 있습니다.

00:00:23.000 --> 00:00:33.000
타사 안티바이러스, 엔드포인트 탐지 및 응답, 데이터 누설 방지 솔루션에 풍부한 보안 이벤트 스트림을 제공하는 C API입니다.

00:00:33.000 --> 00:00:45.000
우리는 더 이상 사용되지 않는 KAuth KPI, 지원되지 않는 MAC 커널 프레임워크 및 더 이상 사용되지 않는 OpenBSM 감사 추적을 대체하기 위해 macOS Catalina에서 엔드포인트 보안을 처음 도입했습니다.

00:00:45.000 --> 00:00:53.000
엔드포인트 보안 API에서 이 기능을 사용할 수 있게 함으로써, 우리는 당신이 커널 확장을 개발해야 할 필요성을 제거했습니다.

00:00:53.000 --> 00:00:56.000
엔드포인트 보안의 도입은 큰 성공을 거두었다.

00:00:56.000 --> 00:01:02.000
우리는 우리가 받은 긍정적인 피드백과 그것이 가능하게 하는 보안 제품에 매우 기쁩니다.

00:01:02.000 --> 00:01:10.000
엔드포인트 보안에 대한 소개는 WWDC 2020 세션 "엔드포인트 보안 앱 구축"을 참조하십시오.

00:01:10.000 --> 00:01:20.000
이 세션에서, 우리는 macOS Ventura에 추가된 새로운 이벤트, 음소거 기능 개선, 그리고 eslogger라는 새로운 유틸리티를 다룰 것입니다.

00:01:20.000 --> 00:01:23.000
새로운 행사부터 시작합시다.

00:01:23.000 --> 00:01:28.000
macOS Monterey부터, Endpoint Security는 100개 이상의 이벤트 유형을 지원합니다.

00:01:28.000 --> 00:01:36.000
지금까지, 이러한 이벤트는 프로세스를 포크하거나 파일을 여는 것과 같은 커널 내에서 발생하는 중요한 이벤트에 초점을 맞추었다.

00:01:36.000 --> 00:01:44.000
macOS Ventura에서, 우리는 사용자 공간에서 발생하는 보안 관련 이벤트를 포함하도록 관찰 가능한 이벤트 세트를 확장하고 있습니다.

00:01:44.000 --> 00:01:52.000
특히, 우리는 인증, 로그인 및 로그아웃, 게이트키퍼의 XProtect에 대한 가시성을 추가하고 있습니다.

00:01:52.000 --> 00:01:59.000
새로운 인증 이벤트는 사용자가 운영 체제에 인증하는 상황을 다룹니다.

00:01:59.000 --> 00:02:08.000
여기에는 로컬 사용자 계정에 로그인하는 것뿐만 아니라 관리자로서 작업을 승인하는 것과 같은 다른 장소에서 인증하는 것도 포함됩니다.

00:02:08.000 --> 00:02:14.000
이러한 이벤트는 일반적으로 의심스러운 접근 패턴을 관찰하고자 하는 보안 제품에 의해 사용됩니다.

00:02:14.000 --> 00:02:26.000
이전에는 인증 이벤트를 관찰하고 싶다면, 더 이상 사용되지 않는 OpenBSM 감사 추적에 의존해야 했습니다. 이제 더 이상 필요하지 않습니다.

00:02:26.000 --> 00:02:38.000
그리고 감사에 비해, 이러한 새로운 이벤트는 정보가 훨씬 더 풍부하며, 감사에서 사용할 수 없었던 Apple Watch를 사용하여 자동 잠금 해제에 대한 가시성을 제공합니다.

00:02:38.000 --> 00:02:43.000
비슷한 맥락에서, 우리는 사용자 세션에 가시성을 추가하고 있다.

00:02:43.000 --> 00:02:54.000
로그인 이벤트는 누군가 또는 무언가가 콘솔에서 로컬로 또는 지원되는 원격 액세스 방법 중 하나를 통해 원격으로 시스템에 로그온하는 상황을 다룹니다.

00:02:54.000 --> 00:03:00.000
이러한 이벤트는 OpenBSM 감사 추적에서 사용할 수 있는 것을 훨씬 넘어선다.

00:03:00.000 --> 00:03:09.000
그들은 당신이 기업 함대를 가로지르는 측면 이동을 포함하여 시스템에 대한 접근에 대한 보다 포괄적인 가시성을 얻을 수 있게 해준다.

00:03:09.000 --> 00:03:14.000
게이트키퍼의 임무 중 일부는 알려진 악성 소프트웨어를 탐지하고 차단하는 것이다.

00:03:14.000 --> 00:03:25.000
macOS Ventura부터 Endpoint Security는 악성 소프트웨어의 탐지와 악성 소프트웨어를 중지하고 제거하기 위해 취한 조치에 대한 가시성을 제공할 것입니다.

00:03:25.000 --> 00:03:29.000
이 정보는 이전에 구조화된 방식으로 사용할 수 없었다.

00:03:29.000 --> 00:03:33.000
이제 엔드포인트 보안 API를 통해 사용할 수 있습니다.

00:03:33.000 --> 00:03:42.000
우리는 이러한 추가를 통해 대부분의 엔드포인트 보안 클라이언트가 더 이상 더 이상 사용되지 않는 OpenBSM 감사 추적에 의존할 필요가 없을 것으로 기대합니다.

00:03:42.000 --> 00:03:49.000
감사 추적은 macOS Big Sur 이후 더 이상 사용되지 않으며 향후 버전의 macOS에서 제거될 것입니다.

00:03:49.000 --> 00:03:52.000
음소거로 넘어가자.

00:03:52.000 --> 00:03:59.000
macOS Catalina 이후, 우리는 감사 토큰이나 실행 가능한 이미지 경로로 음소거 프로세스를 지원해 왔습니다.

00:03:59.000 --> 00:04:10.000
음소거는 교착 상태, 중단 및 감시 시간 초과를 방지하고 엔드포인트 보안을 기반으로 솔루션의 성능 영향을 관리하기 위해 우리가 제공하는 중요한 도구입니다.

00:04:10.000 --> 00:04:21.000
작년에 macOS Monterey에서, 우리는 기본적으로 작은 실행 파일 세트에 대한 일부 이벤트 유형을 음소거하여 시스템 불안정의 빈번한 원인을 해결하기 시작했습니다.

00:04:21.000 --> 00:04:28.000
당신은 그것들을 자유롭게 음소거할 수 있지만, 시스템 안정성을 위해 음소거를 유지하는 것이 좋습니다.

00:04:28.000 --> 00:04:35.000
macOS Ventura에서, 우리는 목표 경로를 기반으로 음소거를 도입하여 음소거를 한 단계 더 나아가고 있습니다.

00:04:35.000 --> 00:04:40.000
많은 실제 사용 사례의 경우, 이것은 음소거에 대한 메스 같은 정밀도를 허용한다.

00:04:40.000 --> 00:04:49.000
이제 애플리케이션이 수신에 관심이 없는 특정 경로 또는 경로 접두사와 관련된 파일 이벤트를 음소거할 수 있습니다.

00:04:49.000 --> 00:04:59.000
이것은 로그 파일의 이벤트에 관심이 없을 때 /var/log 아래에 대상 경로가 있는 모든 이벤트를 음소거하는 방법을 보여줍니다.

00:04:59.000 --> 00:05:09.000
두 번째 예제는 es_mute_path_events를 사용하여 /dev/null과 같은 단일 파일에만 쓰기 이벤트만 음소거하는 방법을 보여줍니다.

00:05:09.000 --> 00:05:14.000
게다가, 우리는 심지어 음소거 논리를 뒤집을 가능성을 도입하고 있다.

00:05:14.000 --> 00:05:24.000
지정된 프로세스, 실행 경로 또는 대상 경로를 기반으로 이벤트를 억제하는 대신, 이제 이 세 가지 유형의 음소거 중 하나를 반전할 수 있습니다.

00:05:24.000 --> 00:05:35.000
효과적으로, 이제 관심 있는 프로세스, 실행 경로 또는 대상 경로를 선택하여 음소거한 모든 것과 일치하지 않는 대신 일치하는 이벤트만 받을 수 있습니다.

00:05:35.000 --> 00:05:42.000
예를 들어, 이제 특정 지속 위치에 대해서만 파일 이벤트를 선택할 수 있습니다.

00:05:42.000 --> 00:05:48.000
Es_invert_muting을 사용하여 대상 경로에 대한 음소거를 반전하는 방법은 다음과 같습니다.

00:05:48.000 --> 00:05:58.000
그런 다음 음소거 세트에서 기존 대상 경로를 제거한 다음 관심 있는 대상 경로 접두사가 있는 이벤트만 선택합니다.

00:05:58.000 --> 00:06:09.000
우리는 이것이 훨씬 개선된 음소거 전략을 허용하고, 궁극적으로 엔드포인트 보안을 기반으로 한 제품으로 훌륭한 사용자 경험을 더 쉽게 제공할 수 있기를 기대합니다.

00:06:09.000 --> 00:06:12.000
그리고 마지막으로, 우리는 에스로거를 소개합니다.

00:06:12.000 --> 00:06:20.000
우리는 네이티브 클라이언트를 작성할 필요 없이 엔드포인트 보안 이벤트를 제공할 수 있는 기능에 대한 많은 요청을 받았다.

00:06:20.000 --> 00:06:31.000
macOS Ventura를 시작으로, OS에 깊은 내성을 가져오는 명령줄 유틸리티를 통해 엔드포인트 보안의 힘을 활용할 수 있습니다.

00:06:31.000 --> 00:06:42.000
Eslogger는 특정 이벤트에 대한 Endpoint Security 이벤트 스트림을 활용하고 JSON 형식의 이벤트 데이터를 표준 출력 또는 통합 로깅 시스템으로 방출합니다.

00:06:42.000 --> 00:06:47.000
데이터는 C 표현 네이티브 클라이언트가 사용하는 것처럼 구조화되어 있다.

00:06:47.000 --> 00:06:54.000
Eslogger는 macOS Ventura에서 Endpoint Security가 지원하는 모든 80개의 NOTIFY 이벤트를 지원합니다.

00:06:54.000 --> 00:07:09.000
우리는 eslogger가 Endpoint Security 클라이언트에서 일하는 엔지니어뿐만 아니라 macOS의 보안 관련 이벤트에 대한 가시성이 필요한 보안 분석가 및 기타 보안 실무자에게도 유용하기를 바랍니다.

00:07:09.000 --> 00:07:15.000
Eslogger는 OS와 함께 제공되며 이미 엔드포인트 보안에 대한 자격이 있습니다.

00:07:15.000 --> 00:07:29.000
모든 엔드포인트 보안 클라이언트와 마찬가지로, eslogger는 수퍼유저로 실행되어야 하며 사용자가 Terminal.app 또는 SSH와 같은 전체 디스크 액세스에 대한 책임 프로세스를 승인해야 합니다.

00:07:29.000 --> 00:07:33.000
Eslogger는 응용 프로그램에서 사용하기 위한 것이 아닙니다.

00:07:33.000 --> 00:07:37.000
그것의 출력은 소프트웨어 업데이트에서 변경될 수 있다.

00:07:37.000 --> 00:07:46.000
엔드포인트 보안 API와 기본적으로 인터페이스하는 것처럼 동일한 성능 특성이나 동일한 기능 세트를 제공하기 위한 것이 아닙니다.

00:07:46.000 --> 00:07:51.000
애플리케이션은 계속해서 기본적으로 인터페이스할 것이다.

00:07:51.000 --> 00:07:56.000
그것과 함께, eslogger를 사용하여 새로운 이벤트 중 일부를 탐구해 봅시다.

00:07:56.000 --> 00:08:10.000
Eslogger를 사용하여 openssh_login 및 _logout 이벤트를 구독하고 출력을 파일로 리디렉션하여 SSH 세션의 시작과 끝을 기록할 것입니다.

00:08:10.000 --> 00:08:18.000
이제 이 다른 탭에서, 저는 SSH를 사용하여 로컬로 로그인하고 다시 로그아웃하고 있습니다.

00:08:18.000 --> 00:08:28.000
첫 번째 탭으로 돌아가서, 나는 eslogger를 방해하고 있다.

00:08:28.000 --> 00:08:34.000
원시 JSON 양식의 엔드포인트 보안 이벤트 데이터를 살펴봅시다.

00:08:34.000 --> 00:08:42.000
JSON 데이터로 작업하는 가장 좋아하는 방법을 갖게 될 가능성이 매우 높습니다.

00:08:42.000 --> 00:08:46.000
여기서, 나는 jq를 사용하여 사건을 더 조사할 것이다.

00:08:46.000 --> 00:08:52.000
이건 많은 정보야.

00:08:52.000 --> 00:08:55.000
난 그냥 흥미로운 분야로 드릴다운할 거야.

00:08:55.000 --> 00:09:01.000
모든 엔드포인트 보안 이벤트와 마찬가지로, 우리는 그것들을 방출하는 과정에 대한 정보를 가지고 있다.

00:09:01.000 --> 00:09:15.000
우리는 두 이벤트 모두 SSH 데몬에 의해 방출되었다는 것을 알 수 있다.

00:09:15.000 --> 00:09:22.000
예를 들어, 우리는 또한 이벤트를 방출한 프로세스의 PID를 수집하기 위해 감사 토큰을 검사할 수 있습니다.

00:09:22.000 --> 00:09:34.000
그리고 마지막으로, 이 사건들의 사건별 분야를 살펴봅시다.

00:09:34.000 --> 00:09:44.000
우리는 이것이 내 사용자 계정에 대한 성공적인 SSH 로그인과 로그아웃이었다는 것을 알 수 있다.

00:09:44.000 --> 00:09:55.000
악성 소프트웨어 동작을 관찰하고 싶든, 탐지 접근 방식을 빠르게 프로토타입하고 싶든, 이런 식으로 엔드포인트 보안 이벤트에 대한 가시성을 얻을 수 있는 방법을 좋아합니다.

00:09:55.000 --> 00:10:03.000
우리는 당신의 보안 솔루션이 새로운 이벤트와 개선된 음소거 기능을 활용하는 것을 기대합니다.

00:10:03.000 --> 00:10:06.000
WWDC에 참여해 주셔서 감사합니다.

00:10:06.000 --> 23:59:59.000
♪

