WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:14.000
안녕하세요, 저는 애플 디자인 팀의 디자이너 모하메드 사미르입니다.

00:00:14.000 --> 00:00:19.000
오늘, 저는 아랍어 앱을 디자인할 때 몇 가지 모범 사례를 안내해드리겠습니다.

00:00:19.000 --> 00:00:23.000
이 세션은 아랍어로도 제공되므로, 언제든지 확인해 보세요.

00:00:23.000 --> 00:00:33.000
그리고 시작하기 전에, 저는 아랍 청중이 사용할 앱이나 게임을 디자인하거나 최적화하는 것을 고려하는 것이 왜 중요한지 언급하고 싶었습니다.

00:00:33.000 --> 00:00:43.000
오늘날 약 6억 6천만 명의 사람들이 아랍어를 사용하고 있으며, 이는 라틴어와 중국어에 이어 세계에서 세 번째로 많이 쓰여진 언어이다.

00:00:43.000 --> 00:00:49.000
22개 이상의 국가, 많은 도시 및 지역의 사람들은 잠재적으로 당신이 지은 것을 보고 사용할 것입니다.

00:00:49.000 --> 00:00:59.000
그리고 그 청중의 일부라도 도달하고 싶다면, 언어뿐만 아니라 UI의 방향성도 최적화하는 것을 고려하고 싶을 것입니다.

00:00:59.000 --> 00:01:04.000
그리고 이것은 아랍어가 오른쪽에서 왼쪽으로 쓰여진 언어이기 때문이다.

00:01:04.000 --> 00:01:15.000
이것을 이해하기 위해, 아랍어로 "아라비아 사막"이라고 쓰여 있는 이 예를 살펴봅시다. 그리고 보시다시피, 그것은 화면의 오른쪽에서 왼쪽으로 쓰여 있습니다.

00:01:15.000 --> 00:01:17.000
하지만 이것만이 그뿐만이 아니다.

00:01:17.000 --> 00:01:28.000
이 문구가 레이아웃에 존재한다면, 전체 레이아웃은 언어의 읽기 행동과 방향과 일치하도록 위에서 아래로, 오른쪽에서 왼쪽으로 흐른다.

00:01:28.000 --> 00:01:35.000
이것은 제목, 단락, 열, 심지어 이미지와 같은 것들이 오른쪽에서 왼쪽으로 흘러야 한다는 것을 의미한다.

00:01:35.000 --> 00:01:41.000
그리고 이 방향성 행동은 레이아웃을 넘어 UI까지 확장된다.

00:01:41.000 --> 00:01:49.000
페이지 앱의 이 예와 같이, 내비게이션 바의 순서와 방향은 오른쪽에서 왼쪽으로 있습니다.

00:01:49.000 --> 00:01:53.000
그리고 아이콘들도 같은 방향으로 흐른다.

00:01:53.000 --> 00:02:05.000
그리고 앱을 탐색하기 시작하면, 메뉴, 컨트롤, 그래픽 요소, 심지어 언어의 자연스러운 흐름과 동작에 맞게 설계된 테이블도 찾을 수 있습니다.

00:02:05.000 --> 00:02:24.000
이제, 아랍어로 작동하도록 앱이나 게임을 최적화하는 데 많은 작업이 될 수 있다고 생각할 수도 있지만, 좋은 소식은 Swift UI와 같은 기본 프레임워크를 사용하는 경우 Apple이 많은 것을 처리했기 때문에 앱이나 게임에 특정할 수 있는 콘텐츠와 몇 가지 다른 UI 세부 사항에 집중할 수 있다는 것입니다.

00:02:24.000 --> 00:02:31.000
그리고 오늘 세션에서 저는 당신이 이 최적화를 하는 동안 살펴봐야 할 몇 가지 측면을 당신과 공유할 것입니다.

00:02:31.000 --> 00:02:37.000
당신이 고려하고 싶은 UI 방향성과 예시 구성 요소로 시작합니다.

00:02:37.000 --> 00:02:50.000
그런 다음 우리는 아랍어 스크립트의 주요 기능과 Apple이 아랍어에 대해 제공하는 타이포그래피 지원, 그리고 이코노그래피가 전반적인 아랍어 경험을 향상시키는 세부 사항으로 이동합니다.

00:02:50.000 --> 00:02:55.000
그리고 마침내, 아랍어 사용을 위해 애플이 지원하는 숫자 시스템.

00:02:55.000 --> 00:02:58.000
UI 방향성부터 시작합시다.

00:02:58.000 --> 00:03:00.000
이것은 App Store의 예입니다.

00:03:00.000 --> 00:03:08.000
오늘 탭, 스토리 페이지의 스토리 카드로 시작하여 앱의 제품 페이지로 끝나는 흐름입니다.

00:03:08.000 --> 00:03:14.000
레이아웃 방향성에 대해 생각하는 가장 좋은 방법은 그것을 와이어프레임으로 바꾸는 것이다.

00:03:14.000 --> 00:03:19.000
아랍어의 경우, 이 화면의 UI 구성 요소의 배치를 전환하고 싶을 것입니다.

00:03:19.000 --> 00:03:25.000
요소 중 일부는 오른쪽에서 왼쪽으로 바뀌는 반면, 다른 요소는 왼쪽에서 오른쪽으로 바뀔 것이다.

00:03:25.000 --> 00:03:30.000
제목, 버튼 및 내비게이션 바는 순서와 위치를 변경해야 합니다.

00:03:30.000 --> 00:03:34.000
단락은 항상 오른쪽으로 정렬되어야 한다.

00:03:34.000 --> 00:03:39.000
회전과 스와이프 가능한 요소도 오른쪽에서 왼쪽으로 흘러야 한다.

00:03:39.000 --> 00:03:49.000
UI 구성 요소의 배치를 변경하고, 콘텐츠를 현지화하고, 이미지를 그대로 유지한 후, 이제 오른쪽에서 왼쪽으로 흐르는 레이아웃이 있습니다.

00:03:49.000 --> 00:04:01.000
레이아웃 방향성을 변경하는 것은 훌륭한 오른쪽에서 왼쪽으로의 행동을 만들기 위한 여정의 시작일 뿐입니다. 앱의 전체 흐름이 이제 다르게 구성되어 있다는 것을 명심하고 싶을 것입니다.

00:04:01.000 --> 00:04:07.000
그리고 사용자는 이 페이지들 사이의 탐색에 대해 역순으로 생각한다.

00:04:07.000 --> 00:04:20.000
그래서 정신적으로, 그들은 오른쪽의 오늘 탭으로 시작한 다음, 스토리 카드를 탐색하고, 마치 아랍어 책을 오른쪽에서 왼쪽으로 탐색하는 것처럼 왼쪽의 제품 페이지로 끝납니다.

00:04:20.000 --> 00:04:26.000
그리고 앞서 언급했듯이, 네이티브 프레임워크를 사용하면 이 모든 것이 자동으로 발생합니다.

00:04:26.000 --> 00:04:35.000
이제 저는 UI의 방향성을 변경함으로써 영향을 받을 수 있는 영역과 구성 요소에 대한 몇 가지 다른 예를 공유하고 싶습니다.

00:04:35.000 --> 00:04:38.000
날씨 앱에서 이 예시를 살펴봅시다.

00:04:38.000 --> 00:04:45.000
왼쪽에는 영어 레이아웃이 있고, 오른쪽에는 아랍어 레이아웃이 있습니다.

00:04:45.000 --> 00:04:51.000
여기서 가장 먼저 눈에 띄는 것은 이미지, 비디오 및 배경과 같은 콘텐츠가 동일하게 유지된다는 것입니다.

00:04:51.000 --> 00:05:04.000
이 예에서, 태양은 위치나 언어에 관계없이 항상 동쪽에서 떠오르며, 전반적인 경험에 영향을 미치지 않도록 콘텐츠를 뒤집는 것을 피하고 싶을 것입니다.

00:05:04.000 --> 00:05:09.000
여기서 두 번째 구성 요소는 "하루 종일 날씨"의 회전목마이다.

00:05:09.000 --> 00:05:16.000
이 구성 요소의 상호 작용과 애니메이션은 모두 UI 방향과 일치하도록 반전됩니다.

00:05:16.000 --> 00:05:21.000
날씨 앱에서 당신과 공유하고 싶은 세 번째 구성 요소는 온도 척도입니다.

00:05:21.000 --> 00:05:26.000
아랍어의 경우, 가장 낮은 온도는 오른쪽에 있고, 가장 높은 온도는 왼쪽에 있다.

00:05:26.000 --> 00:05:31.000
그래서 우리가 이 행동과 일치하도록 반전한 스케일 그라디언트와 지표로.

00:05:31.000 --> 00:05:37.000
그리고 이전에 말했듯이, 페이지 사이를 전환하는 정신적 모델도 반전되었다.

00:05:37.000 --> 00:05:42.000
기본 페이지는 맨 오른쪽에 있으며, 왼쪽의 보조 페이지로 이동합니다.

00:05:42.000 --> 00:05:47.000
따라서 페이지 매김 점도 오른쪽에서 왼쪽으로 흘러야 한다.

00:05:47.000 --> 00:06:01.000
그리고 여기서 우리의 두 번째 예는 달력 앱에서 나온 것으로, 날짜, 월, 연도의 진행 상황과 흐름은 아랍어로 사용될 때 오른쪽에서 왼쪽으로 이루어지며, 이는 아랍 세계의 실제 달력의 진행 상황과 일치합니다.

00:06:01.000 --> 00:06:05.000
그리고 당신의 앱이 문화적으로 관련이 있는지 확인하는 것은 항상 중요합니다.

00:06:05.000 --> 00:06:12.000
캘린더 앱의 이 예에서, 당신은 일부 날짜 아래에 빨간 선이 있다는 것을 알아차렸을 것입니다.

00:06:12.000 --> 00:06:22.000
이것들은 실제로 우리가 아랍과 이슬람 세계의 사람들이 이용할 수 있는 이슬람 음력의 각 달의 시작을 나타내는 데 사용된다.

00:06:22.000 --> 00:06:34.000
방향성에 대한 마지막 예는 토글, 분할된 컨트롤러, 디자인 및 상호 작용이 아랍어 레이아웃에서 미러링되는 설정의 배터리 상태입니다.

00:06:34.000 --> 00:06:45.000
또한 차트는 UI에서 방향성이 영향을 받을 수 있는 또 다른 장소입니다. 특히 일, 주, 달 또는 년과 같은 시간 구성 요소를 포함하는 차트입니다.

00:06:45.000 --> 00:06:59.000
배터리 사용량 그래프에서, 요일은 영어 UI에서 왼쪽에서 오른쪽으로 가는 반면, 아랍어에서는 이전 예에서 언급한 달력 동작과 일치하도록 날짜가 오른쪽에서 왼쪽으로 진행되는 것이 선호됩니다.

00:06:59.000 --> 00:07:05.000
그것은 이른 시간은 오른쪽에 있고, 늦은 시간은 왼쪽에 있다는 것을 의미한다.

00:07:05.000 --> 00:07:14.000
그리고 다른 차트와 그래프는 일반적으로 국가에 따라 다르므로, 차트에 사용할 방향을 결정하기 전에 다시 확인하고 싶을 것입니다.

00:07:14.000 --> 00:07:16.000
그것은 UI 방향성이었다.

00:07:16.000 --> 00:07:19.000
이제 타이포그래피에 대해 이야기해 봅시다.

00:07:19.000 --> 00:07:32.000
하지만 앱을 디자인하는 동안 고려하고 싶은 서체와 서체 스타일 조정에 뛰어들기 전에, 아랍어 스크립트와 주요 기능에 대한 간략한 소개를 안내해드리겠습니다.

00:07:32.000 --> 00:07:44.000
이것들은 아랍어로 "아랍어"라는 단어의 철자를 쓰는 네 글자이지만, 서면으로는 실제로 연결될 때까지 그 자체로 아무 의미가 없다.

00:07:44.000 --> 00:08:02.000
이것을 더 이해하기 위해, iOS 키보드를 사용하여 이 단어를 완전한 아랍어 문장으로 어떻게 쓸지 공유하겠습니다.

00:08:02.000 --> 00:08:08.000
그리고 보시다시피, 연결되어 있다는 것이 주어진 단어의 모든 문자가 연결되어 있다는 것을 의미하지는 않습니다.

00:08:08.000 --> 00:08:10.000
그래서 이 단어는 두 부분으로 이루어져 있다.

00:08:10.000 --> 00:08:13.000
각 부분에는 두 개의 캐릭터가 있다.

00:08:13.000 --> 00:08:19.000
그리고 이것은 아랍 문자의 주요 특징 중 하나이다 - 그것의 연결된 특성이다.

00:08:19.000 --> 00:08:25.000
그리고 이것은 또한 각 문자와 각 쌍에 대한 가능한 글리프가 많을 수 있다는 것을 의미한다.

00:08:25.000 --> 00:08:41.000
이 예에서 첫 번째 글자를 취하면, 문자 "Ain"은 단어의 시작, 중간 또는 끝에 고립되어 있는지 여부에 관계없이 단어의 위치에 따라 형태가 바뀝니다.

00:08:41.000 --> 00:08:48.000
그리고 이것이 보통 아랍어 글꼴 라이브러리를 라틴어보다 훨씬 더 크게 만든다는 점은 주목할 가치가 있다.

00:08:48.000 --> 00:09:00.000
아랍어 스크립트의 또 다른 특징은 대부분의 경우 단어와 구문에 더 압축된 느낌을 주는 경향이 있는 연결된 특성으로 인해 라틴어보다 단어가 더 간결하다는 것이다.

00:09:00.000 --> 00:09:07.000
하지만 특히 점, 발성 및 발음 구별 부호를 사용하면 약간 더 큽니다.

00:09:07.000 --> 00:09:16.000
발성 표시는 특정 문자를 강조하거나 다르게 들리지만 그렇지 않으면 서면으로 동일한 단어를 구별하는 데 사용됩니다.

00:09:16.000 --> 00:09:25.000
그리고 앱에 발성 표시의 강렬한 사용이 포함되어 있다면, 클리핑을 피하기 위해 UI에 더 많은 수직 간격이 있는지 확인하세요.

00:09:25.000 --> 00:09:28.000
이제 우리는 아랍어와 라틴어의 주요 차이점을 이해한다.

00:09:28.000 --> 00:09:34.000
시스템 API를 사용하는 경우 Apple이 제공하는 서체에 대해 이야기해 봅시다.

00:09:34.000 --> 00:09:41.000
애플은 가독성과 기능을 염두에 두고 신중하게 설계된 독점적인 아랍어 서체를 제공합니다.

00:09:41.000 --> 00:09:49.000
그것은 또한 이중 언어 맥락에서 자연스럽게 느낄 수 있도록 라틴 SF 가족 스타일과 일치하도록 설계되었습니다.

00:09:49.000 --> 00:09:55.000
그리고 라틴어와 마찬가지로, SF 아랍어는 앱에서 필요할 수 있는 모든 가중치를 제공합니다.

00:09:55.000 --> 00:09:58.000
초경량에서 검은색까지.

00:09:58.000 --> 00:10:02.000
네이티브 앱의 많은 곳에서 다양한 가중치의 사용을 볼 수 있습니다.

00:10:02.000 --> 00:10:13.000
시계 앱은 좋은 예입니다; 제목에는 볼드체를 사용하고, 다른 도시에는 레귤러를 사용하고, 시계 숫자에는 라이트를 사용합니다.

00:10:13.000 --> 00:10:19.000
생태계에서 더 많은 앱을 탐색하여 다양한 가중치를 어떻게 사용할 수 있는지 확인할 수 있습니다.

00:10:19.000 --> 00:10:25.000
제목과 본문 사본에 굵게, 중간, 일반이 사용되는 건강 앱처럼.

00:10:25.000 --> 00:10:31.000
그리고 숫자와 바디 카피에 여러 가중치가 사용되는 날씨 앱.

00:10:31.000 --> 00:10:34.000
SF 아랍어는 또한 확장성을 염두에 두고 만들어졌다.

00:10:34.000 --> 00:10:38.000
이는 점 크기에 따라 형태가 약간 변한다는 것을 의미한다.

00:10:38.000 --> 00:10:41.000
그리고 이것이 우리가 광학 크기라고 부르는 것이다.

00:10:41.000 --> 00:10:47.000
여기서 가장 큰 점 크기와 가장 작은 점 크기의 구조적 차이를 볼 수 있습니다.

00:10:47.000 --> 00:10:50.000
라지는 보통 제목과 제목에 사용된다.

00:10:50.000 --> 00:10:55.000
그리고 나머지 SF 가족의 현대적인 그로테스크한 느낌과 일치하도록 설계되었습니다.

00:10:55.000 --> 00:11:05.000
반면에, 단락과 본문 사본에 사용되는 더 작은 포인트 크기는 스타일보다 가독성과 기능을 우선시하도록 설계되었습니다.

00:11:05.000 --> 00:11:13.000
이것은 터미널에 각도, 너비 및 전체 글꼴 구조에 대비를 추가함으로써 발생합니다.

00:11:13.000 --> 00:11:16.000
시스템이 이것을 처리한다는 것은 주목할 가치가 있다.

00:11:16.000 --> 00:11:21.000
포인트 크기에 따라 자동으로 올바른 양식을 선택하고 있습니다.

00:11:21.000 --> 00:11:29.000
다음은 App Store 편집 시트의 예입니다. 여기서 우리는 제목에 디스플레이를 사용하고 텍스트는 단락에 사용됩니다.

00:11:29.000 --> 00:11:36.000
그리고 둘 다 이 이중 언어 맥락에서 아랍어와 영어 서체가 어떻게 원활하게 작동하는지 볼 수 있습니다.

00:11:36.000 --> 00:11:44.000
SF 아랍어 확장 가능한 서체는 생태계 전반에 걸쳐 사용되지만, 앱이나 게임에서도 사용할 수 있습니다.

00:11:44.000 --> 00:11:53.000
그리고 올해 우리는 초경량에서 블랙에 이르기까지 모든 다양한 무게를 포함하여 SF 가족에 SF Arabic Rounded를 소개합니다.

00:11:53.000 --> 00:12:00.000
다음은 제목과 본문 텍스트에서 SF Arabic Rounded를 사용하는 알림 앱의 예입니다.

00:12:00.000 --> 00:12:08.000
그리고 보시다시피, Rounded는 상황에 따라 앱에 더 실용적이거나, 활동적이거나, 더 부드러운 모습을 제공할 수 있습니다.

00:12:08.000 --> 00:12:23.000
반올림된 서체의 사용, 여러 가중치 및 SF 아랍어의 확장성은 모두 우리의 모든 네이티브 앱에서 볼 수 있으며, 우리는 당신이 아랍 사용자를 위한 최상의 경험을 만들기 위해 그것들을 사용하기를 기다릴 수 없습니다.

00:12:23.000 --> 00:12:34.000
SF Arabic Rounded를 포함하여 올해 발표된 모든 새로운 글꼴에 대해 더 알고 싶다면, 올해의 세션 "확장된 샌프란시스코 글꼴 패밀리를 만나세요"를 꼭 보세요.

00:12:34.000 --> 00:12:39.000
이제 아랍어 서체를 사용할 때 몇 가지 서체 스타일 고려 사항에 대해 이야기해 봅시다.

00:12:39.000 --> 00:12:42.000
아랍어는 대소문자를 구분하지 않는 스크립트이다.

00:12:42.000 --> 00:12:47.000
디지털 아랍어 글꼴은 보통 소문자 라틴어와 일치하도록 설계되었습니다.

00:12:47.000 --> 00:12:54.000
하지만 대문자를 사용할 때, 그것은 라틴어에 더 많은 볼륨을 주고 라틴어에 비해 아랍어를 더 작게 느끼게 한다.

00:12:54.000 --> 00:13:02.000
UI의 광학 크기 차이를 보완하기 위해, 아랍어 글꼴 크기를 10% 늘릴 수 있습니다.

00:13:02.000 --> 00:13:10.000
이 미묘한 차이는 특히 대문자가 더 작은 포인트 크기로 사용될 때 가독성에 도움이 될 것이다.

00:13:10.000 --> 00:13:13.000
고려해야 할 또 다른 것은 글자 간격이다.

00:13:13.000 --> 00:13:20.000
아랍어가 연결되어 있다는 사실을 감안할 때, 일부 아랍어 서체는 간격을 적절하게 처리하도록 완전히 최적화되지 않았다.

00:13:20.000 --> 00:13:28.000
이로 인해 잘못된 링크를 표시하거나, 글자가 깨지거나, 불필요한 간격을 표시할 수 있습니다.

00:13:28.000 --> 00:13:34.000
사용 중인 아랍어 서체가 문자 간격에 완전히 최적화되지 않은 경우, 0 추적을 사용해야 합니다.

00:13:34.000 --> 00:13:39.000
또는 단순히, 올바른 문자 연결을 추가하는 시스템 글꼴을 사용하세요.

00:13:39.000 --> 00:13:49.000
아랍어로 된 이 연결은 "Kashida"라고 불리며 이 시스템은 아랍어로 더 유기적인 자연 간격을 갖기 위해 길이가 다른 Kashidas를 추가한다.

00:13:49.000 --> 00:13:52.000
마지막으로 조심해야 할 것은 투명성이다.

00:13:52.000 --> 00:13:55.000
때때로 당신은 글자 사이에 보이는 관절을 볼 수 있습니다.

00:13:55.000 --> 00:14:02.000
이것은 아랍어에 완전히 최적화되지 않은 글꼴이나 시스템에 투명성이 있는 경우 종종 발생합니다.

00:14:02.000 --> 00:14:06.000
고맙게도, 당신이 우리의 시스템 글꼴을 사용한다면, 당신은 이것에 대해 걱정할 필요가 없습니다.

00:14:06.000 --> 00:14:12.000
불투명도는 잠재적인 왜곡을 극복하기 위해 전체 단어나 문구에 적용된다.

00:14:12.000 --> 00:14:22.000
타이포그래피 섹션에서, 나는 아랍어 스크립트의 주요 특징, 우리가 생태계에서 사용하는 아랍어 서체, 그리고 아랍어의 특정 유형 처리에 대한 몇 가지 고려 사항에 대해 이야기했다.

00:14:22.000 --> 00:14:25.000
이제 도상학에 대해 이야기해 봅시다.

00:14:25.000 --> 00:14:40.000
도상학은 쉽게 놓칠 수 있는 UI 요소 중 하나이지만, 일반적으로 사용자 흐름의 진입점 또는 특정 행동의 트리거이기 때문에 원활한 경험을 하는 데 중요한 올바른 도상학을 갖는 것이 중요합니다.

00:14:40.000 --> 00:14:46.000
아랍어의 경우, 우리는 고객에게 가장 관련성이 높은 기호를 선택하기 위해 최선을 다하고 있습니다.

00:14:46.000 --> 00:14:50.000
App Store 탭 표시줄 아이콘을 예로 들어 봅시다.

00:14:50.000 --> 00:14:55.000
일부 기호는 조정되었지만, 다른 기호는 아랍어 UI에서 동일하게 유지되었다.

00:14:55.000 --> 00:15:01.000
그리고 우리가 왜 이 선택을 했는지 이해하기 위해, 그들 중 일부를 살펴봅시다.

00:15:01.000 --> 00:15:14.000
예를 들어, 오늘 탭 기호는 텍스트 방향을 상징하며, 아랍어 사용자가 언어의 자연스러운 읽기 방향과 일치하도록 선을 오른쪽에 정렬하는 것이 더 관련이 있습니다.

00:15:14.000 --> 00:15:29.000
돋보기의 방향은 위치에 관계없이 전 세계 대다수 사용자의 행동인 오른손 사용 각도를 의미하기 때문에 우리는 아랍어 UI에 있는 그대로 유지하기로 결정했습니다.

00:15:29.000 --> 00:16:03.000
그리고 여기에 펜의 각도를 유지하면서 오른쪽에서 왼쪽으로 쓰거나 Apple 생태계 전반에 걸쳐 일관된 슬래시 방향을 유지하면서 UI에서 자연스럽게 느끼도록 스피커의 방향을 변경하거나 시스템의 물리적 시계 표현과 일치하도록 시계 바늘을 유지하면서 달의 진행을 나타내는 달력 점의 방향을 변경하는 것과 같이 방향성이 아랍어 UI에서 기호가 처리되는 방식에 어떻게 영향을 미칠 수 있는지 보여주는 다른 앱의 다른 예가 있습니다

00:16:03.000 --> 00:16:14.000
그리고 방향성 외에도, 더 많은 지역 관련 기호를 갖는 것은 우리가 국제 시장에서 우수성을 보장하기 위해 시간이 지남에 따라 향상시키는 데 전념하는 또 다른 계층입니다.

00:16:14.000 --> 00:16:25.000
그리고 여기에 독점적으로 그려진 아랍어 서명 기호와 다른 텍스트 서식 기호를 포함하여 SF 기호 라이브러리의 아랍어 특정 기호에 대한 몇 가지 예가 있습니다.

00:16:25.000 --> 00:16:33.000
이 모든 것과 300개 이상의 아랍어 및 오른쪽에서 왼쪽 기호는 SF 기호 앱에서 찾을 수 있습니다.

00:16:33.000 --> 00:16:43.000
앱에서 기호를 쉽게 선택하고 정보 패널의 현지화 섹션을 확인하여 아랍어 로컬 변형 및 기타 라틴어가 아닌 스크립트를 볼 수 있습니다.

00:16:43.000 --> 00:16:50.000
시스템 API를 사용하는 경우 모든 오른쪽에서 왼쪽과 로컬 기호가 앱에 자동으로 나타나야 합니다.

00:16:50.000 --> 00:16:57.000
우리가 보았듯이, 올바른 기호를 사용하면 사용자와 더 관련성이 높아짐에 따라 전체 앱 경험을 변화시킬 수 있습니다.

00:16:57.000 --> 00:17:07.000
그리고 특히 라틴어가 아닌 문자를 사용하는 국가와 지역의 경우, 우리는 때때로 다른 언어적, 문화적 뉘앙스를 잊어버리기 때문에 더 많은 주의를 기울여야 한다.

00:17:07.000 --> 00:17:13.000
그리고 저는 아랍 고객들에게 가장 관련성이 높은 아이콘을 만드는 데 당신의 기여를 정말로 보고 싶어요.

00:17:13.000 --> 00:17:16.000
이제 아라비아 숫자에 대해 이야기해 봅시다.

00:17:16.000 --> 00:17:24.000
우리 모두가 익숙하고 전 세계 대부분의 국가에서 사용되는 숫자는 아라비아 숫자라고 불린다.

00:17:24.000 --> 00:17:31.000
그리고 이것은 그들이 아랍 세계에서 발명되었고 그 당시 로마 숫자를 대체했기 때문이다.

00:17:31.000 --> 00:17:41.000
그리고 당신은 오늘날까지 모든 수학적 계산이 아랍어의 읽기 행동과 일치하는 오른쪽에서 왼쪽으로 일어난다는 것을 알 수 있습니다.

00:17:41.000 --> 00:17:49.000
합계 과정을 하나, 그 다음 수십, 그 다음 수백으로 시작하는 이 예처럼.

00:17:49.000 --> 00:18:01.000
오늘날의 세계에서 이 형태의 숫자는 서양 아라비아 숫자라고 불리며, 그것은 동양의 다른 형태의 아라비아 숫자와 대조되는 것이다.

00:18:01.000 --> 00:18:07.000
두 형태 모두 아랍 세계에서 발명되었으며 현재 다른 아랍 국가에서 사용되고 있다.

00:18:07.000 --> 00:18:19.000
서양 아라비아 숫자는 모로코, 알제리, 튀니지와 같은 서아프리카 아랍 국가에서 사용되는 반면, 동부는 일부 레반트와 걸프 국가에서 사용된다.

00:18:19.000 --> 00:18:24.000
이집트나 사우디 아라비아와 같은 국가들은 두 버전을 모두 사용한다.

00:18:24.000 --> 00:18:32.000
두 시스템 중 하나를 선택하는 것은 사용자의 국가에 따라 자동으로 이루어지며, 사용자 선택에 의해 트리거될 수도 있습니다.

00:18:32.000 --> 00:18:38.000
그리고 당신은 우리 생태계에서 숫자를 사용하는 모든 앱에서 이 선택의 반영을 볼 수 있습니다.

00:18:38.000 --> 00:18:48.000
계산기 앱과 캘린더 앱, 그리고 두 숫자 형태로 아름답게 디자인된 타이포그래프 시계 화면을 포함합니다.

00:18:48.000 --> 00:18:53.000
그리고 우리의 시계 페이스 갤러리에서 확인할 수 있는 다른 많은 시계 페이스.

00:18:53.000 --> 00:19:03.000
개발 중인 앱에 숫자가 포함되어 있다면, 두 양식 모두에 대해 계산하거나 어떤 양식이 더 적합한지 확인하기 위해 목표로 하는 국가를 확인하십시오.

00:19:03.000 --> 00:19:14.000
그리고 마지막으로, 오른쪽에서 왼쪽 언어에 대한 더 많은 디자인 지침을 원한다면, 휴먼 인터페이스 지침의 오른쪽에서 왼쪽 지침을 참조하십시오.

00:19:14.000 --> 00:19:22.000
오늘 저는 언어가 UI 방향성에 미칠 수 있는 영향을 포함하여 아랍어로 디자인하는 것에 대해 이야기했습니다.

00:19:22.000 --> 00:19:32.000
그리고 타이포그래피 섹션에서, 나는 아랍어 스크립트, 서체 및 몇 가지 아랍어 UI 유형 고려 사항에 대해 소개했다.

00:19:32.000 --> 00:19:43.000
나는 또한 도상학과 그것이 당신의 앱 경험을 어떻게 변화시킬 수 있는지, 두 가지 형태의 아라비아 숫자, 그리고 오른쪽에서 왼쪽으로의 지침에 대해 이야기했습니다.

00:19:43.000 --> 00:19:53.000
그리고 개발 관점에서 이 모든 것을 바로 얻는 방법에 대해 더 깊이 파고들고 싶다면, 올해의 세션인 "Get it Right (to Left)"를 확인할 수도 있습니다.

00:19:53.000 --> 00:20:02.000
이 모든 것이 당신에게 지침을 제공하고 아랍 세계에서 사용할 앱을 디자인하거나 최적화하기 위한 올바른 도구를 가리켰기를 바랍니다.

00:20:02.000 --> 23:59:59.000
그리고 나는 네가 만들 모든 놀라운 아랍어 앱을 빨리 사용하고 싶어.

