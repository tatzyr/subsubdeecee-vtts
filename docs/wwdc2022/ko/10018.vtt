WEBVTT

00:00:00.000 --> 00:00:03.000
♪ 기악 힙합 음악 ♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:11.000
안녕하세요, 제 이름은 카렌 싱입니다.

00:00:11.000 --> 00:00:14.000
저는 카메라 소프트웨어 팀의 엔지니어입니다.

00:00:14.000 --> 00:00:24.000
"macOS 앱에 연속성 카메라 지원 제공"에 오신 것을 환영합니다. 이 세션을 시작하기 위해 계속성 카메라는 무엇입니까?

00:00:24.000 --> 00:00:32.000
다음으로, 저는 당신의 애플리케이션이 연속성 카메라로 자동 카메라 선택 경험을 어떻게 구축할 수 있는지 논의할 것입니다.

00:00:32.000 --> 00:00:40.000
그리고 마지막으로, 나는 연속성 카메라를 위한 macOS 13의 새로운 API를 살펴볼 것이다.

00:00:40.000 --> 00:00:45.000
연속성 카메라를 사용하면 이제 iPhone을 웹캠으로 사용할 수 있습니다.

00:00:45.000 --> 00:00:49.000
설정은 원활합니다; iPhone을 Mac에 가까이 가져오세요.

00:00:49.000 --> 00:00:54.000
그리고 무선으로 작동하므로 통화에 빠르게 참여할 수 있습니다.

00:00:54.000 --> 00:01:01.000
iPhone은 몇 가지 조건에서 Mac에 외부 카메라와 마이크로 나타날 것입니다.

00:01:01.000 --> 00:01:07.000
먼저, macOS 13과 iOS 16을 실행해야 합니다.

00:01:07.000 --> 00:01:13.000
Mac과 iPhone 모두 이중 인증을 사용하여 동일한 Apple ID에 로그인해야 합니다.

00:01:13.000 --> 00:01:20.000
유선 연결을 위해, 전화기는 USB를 통해 Mac에 연결되어야 합니다.

00:01:20.000 --> 00:01:28.000
또는 무선 연결의 경우, 두 장치가 가까이 있어야 하며 블루투스와 Wi-Fi가 모두 켜져 있어야 합니다.

00:01:28.000 --> 00:01:35.000
그것을 통해 이야기하는 대신, 연속성 카메라가 장치에서 어떻게 보이는지 바로 보여드리겠습니다.

00:01:35.000 --> 00:01:38.000
여기 맥북 프로와 아이폰 13 프로가 있습니다.

00:01:38.000 --> 00:01:47.000
두 기기 모두 동일한 Apple ID로 로그인되어 있습니다.

00:01:47.000 --> 00:01:50.000
전화기는 내 맥북에 부착된 스탠드에 놓여 있다.

00:01:50.000 --> 00:02:04.000
저는 오늘 제 동료 에릭과 화상 회의 통화에 참여하여 줌에서 연속성 카메라를 어떻게 사용할 수 있는지 보여줄 것입니다.

00:02:04.000 --> 00:02:12.000
이 앱은 먼저 내장 카메라를 사용하여 실행된 다음, 새로운 카메라로 할 수 있는 일을 설명하는 온보딩 대화가 표시됩니다.

00:02:12.000 --> 00:02:27.000
이 대화는 Mac이 macOS 13으로 업그레이드된 후 처음으로 카메라 애플리케이션을 열고 연속성 카메라에 적합한 iPhone이 있을 때 한 번 나타납니다.

00:02:27.000 --> 00:02:30.000
안녕, 에릭!

00:02:30.000 --> 00:02:35.000
에릭: 오, 카렌! 안녕!

00:02:35.000 --> 00:02:51.000
카렌: 온보딩 대화가 시스템에 표시되면, 연속성 카메라와 마이크 장치를 모든 응용 프로그램에서 사용할 수 있습니다.

00:02:51.000 --> 00:03:01.000
이 카메라를 사용하기 위해 전환하고 어떻게 보이는지 봅시다.

00:03:01.000 --> 00:03:09.000
연속성 카메라는 iPhone의 후면 카메라 시스템을 사용하므로 iPhone에서 기대하는 것과 동일한 훌륭한 비디오 품질을 얻을 수 있습니다.

00:03:09.000 --> 00:03:16.000
그리고 그것은 전화기의 네 가지 방향 모두에서 작동한다.

00:03:16.000 --> 00:03:27.000
세로 방향은 가로 방향에 비해 시야를 더 확대합니다.

00:03:27.000 --> 00:03:37.000
연속성 카메라는 또한 몇 가지 새로운 비디오 효과를 포함하여 이전에는 불가능했던 일을 할 수 있게 해준다.

00:03:37.000 --> 00:03:45.000
iOS 14.5와 macOS 12.3에 도입된 센터 스테이지 및 인물 사진 비디오 효과에 이미 익숙할 것입니다.

00:03:45.000 --> 00:04:00.000
그렇지 않다면, WWDC 2021의 "카메라 캡처의 새로운 기능" 세션을 시청하여 시스템 비디오 효과와 응용 프로그램에서 상호 작용하는 방법에 대해 자세히 알아보는 것이 좋습니다.

00:04:00.000 --> 00:04:09.000
제어 센터로 가서 연속성 카메라에서 시스템 비디오 효과를 활성화합시다.

00:04:09.000 --> 00:04:17.000
센터 스테이지는 당신이 장면에서 움직일 때 당신을 프레임 안에 유지합니다.

00:04:17.000 --> 00:04:22.000
초상화는 배경을 흐리게 하고 자연스럽게 당신에게 초점을 맞춘다.

00:04:22.000 --> 00:04:35.000
초상화는 애플 실리콘 맥에서만 지원되지만, 연속성 카메라를 사용하면 이제 모든 인텔과 애플 실리콘 맥에서 사용할 수 있습니다.

00:04:35.000 --> 00:04:40.000
스튜디오 라이트는 macOS 13에서 사용할 수 있는 새로운 시스템 비디오 효과입니다.

00:04:40.000 --> 00:04:45.000
iPhone 12 이상을 사용할 때 연속성 카메라에서 지원됩니다.

00:04:45.000 --> 00:04:48.000
화면에서 가장 잘 보이고 싶을 때 이것을 활성화하세요.

00:04:48.000 --> 00:04:54.000
그것은 배경을 어둡게 하고 얼굴을 비추는 놀라운 조명 효과를 제공합니다.

00:04:54.000 --> 00:05:00.000
스튜디오 라이트는 창문 앞에 있을 때와 같은 힘든 조명 상황에 완벽합니다.

00:05:00.000 --> 00:05:13.000
명확한 비교를 위해 각 비디오 효과를 별도로 보여주지만, 모두 함께 잘 작동합니다.

00:05:13.000 --> 00:05:25.000
그리고 효과의 조합은 동시에 적용될 수 있다.

00:05:25.000 --> 00:05:30.000
여기 연속성 카메라를 위해 정말 보여주고 싶은 또 다른 흥미로운 기능이 있습니다.

00:05:30.000 --> 00:05:36.000
함께 일하고 책상 위에 있는 것을 공유하고 싶을 때, 이제 데스크 뷰를 사용할 수 있습니다.

00:05:36.000 --> 00:05:48.000
데스크 뷰 앱은 macOS 13과 함께 제공되며 바로 여기 제어 센터에서 시작할 수 있습니다.

00:05:48.000 --> 00:05:54.000
그것은 모든 복잡한 장비 없이 오버헤드 카메라 설정처럼 작동한다.

00:05:54.000 --> 00:06:05.000
iPhone은 울트라 와이드 카메라 피드를 둘로 나누어 책상과 얼굴을 동시에 자랑하므로 학교 프로젝트에서 협업하거나 친구에게 뜨개질 스티치를 가르칠 수 있습니다.

00:06:05.000 --> 00:06:18.000
울트라 와이드 앵글 카메라의 확장된 수직 시야를 활용하고, 자른 프레임에 원근법 왜곡 보정을 적용한 다음, 프레임을 회전하여 이 데스크 뷰를 만듭니다.

00:06:18.000 --> 00:06:52.000
대부분의 화상 회의 앱에서 사용할 수 있는 공유 창 기능을 사용하여 메인 비디오 카메라 피드와 병렬로 실행되는 이 데스크 뷰 피드를 공유할 수 있습니다.

00:06:52.000 --> 00:06:57.000
데스크 뷰는 메인 카메라에서 동시에 스트리밍하지 않고도 단독으로 사용할 수 있습니다.

00:06:57.000 --> 00:07:07.000
하지만 데스크 뷰와 메인 카메라 모두에서 스트리밍할 때, 얼굴과 몸을 캡처할 수 있는 더 나은 프레임을 위해 메인 카메라에서 센터 스테이지를 활성화하는 것이 좋습니다.

00:07:07.000 --> 00:07:12.000
이 기능은 전화기가 가로 또는 세로 방향으로 배치될 때 지원됩니다.

00:07:12.000 --> 00:07:19.000
세로 방향은 더 큰 수직 시야가 있기 때문에 가장 다재다능함을 제공한다.

00:07:19.000 --> 00:07:26.000
애플리케이션에 적합한 맞춤형 통합을 제공하는 데스크 뷰 카메라 API도 있습니다.

00:07:26.000 --> 00:07:29.000
잠시 후에 API에 대해 이야기하겠습니다.

00:07:29.000 --> 00:07:38.000
Mac에서 화상 회의 통화를 하는 동안, 우리는 당신이 세션에 집중하기를 원하지만, 우리는 또한 당신이 중요한 것을 놓치지 않도록 하고 싶습니다.

00:07:38.000 --> 00:07:49.000
연속성 카메라가 사용 중일 때, 휴대폰의 모든 알림이 음소거되고 중요한 통화 알림이 Mac에서 전달됩니다.

00:07:49.000 --> 00:07:50.000
안녕, 에릭!

00:07:50.000 --> 00:07:58.000
에릭: 안녕, 카렌!

00:07:58.000 --> 00:08:07.000
카렌: 우리는 방금 애플리케이션에 한 줄의 새로운 코드를 작성하지 않고도 사용자가 사용할 수 있는 모든 훌륭한 경험에 대해 이야기했습니다.

00:08:07.000 --> 00:08:16.000
하지만 새로운 API를 채택하면 앱에서 연속성 카메라 경험을 더욱 마법적이고 세련되게 만들 수 있습니다.

00:08:16.000 --> 00:08:24.000
이제 대부분의 사용자가 Mac에서 적어도 두 개의 카메라 장치를 얻을 수 있기 때문에, 우리는 카메라를 어떻게 관리해야 하는지에 대해 더 많이 생각했습니다.

00:08:24.000 --> 00:08:36.000
macOS 13 이전에는 장치의 플러그를 뽑거나 시스템에서 더 나은 카메라를 사용할 수 있는 경우, 일반적으로 응용 프로그램에서 수동 선택 단계가 필요합니다.

00:08:36.000 --> 00:08:43.000
우리는 애플리케이션에서 카메라를 자동으로 전환하여 고객에게 마법 같은 경험을 제공하고 싶습니다.

00:08:43.000 --> 00:08:56.000
앱에서 이 기능을 빌드할 수 있도록 AVFoundation 프레임워크에 두 개의 새로운 API를 추가했습니다: 클래스 속성 userPreferredCamera와 AVCaptureDevice의 systemPreferredCamera.

00:08:56.000 --> 00:09:00.000
userPreferredCamera는 읽기/쓰기 속성이다.

00:09:00.000 --> 00:09:05.000
사용자가 애플리케이션에서 카메라를 선택할 때마다 이 속성을 설정해야 합니다.

00:09:05.000 --> 00:09:18.000
이를 통해 AVCaptureDevice 클래스는 사용자의 선호도를 배우고, 앱 실행 및 재부팅에서 각 응용 프로그램에 대한 카메라 목록을 저장하고, 해당 정보를 사용하여 카메라를 제안할 수 있습니다.

00:09:18.000 --> 00:09:25.000
또한 카메라가 연결되거나 연결이 끊어지는지 여부를 고려합니다.

00:09:25.000 --> 00:09:33.000
이 속성은 키-값을 관찰할 수 있으며 사용자 선호도에 따라 최고의 선택을 지능적으로 반환합니다.

00:09:33.000 --> 00:09:41.000
가장 최근에 선호하는 장치가 연결이 끊어지면, 목록에서 사용 가능한 다음 카메라로 자발적으로 변경됩니다.

00:09:41.000 --> 00:09:56.000
사용자 선택 기록이 없거나 선호하는 장치가 연결되지 않더라도, 속성은 항상 사용할 준비가 된 카메라 장치를 반환하고 이전에 스트리밍된 카메라의 우선 순위를 지정하려고 시도합니다.

00:09:56.000 --> 00:10:03.000
시스템에 사용 가능한 카메라가 없을 때만 nil을 반환합니다.

00:10:03.000 --> 00:10:06.000
systemPreferredCamera는 읽기 전용 속성입니다.

00:10:06.000 --> 00:10:15.000
그것은 userPreferredCamera와 몇 가지 다른 요소를 통합하여 시스템에 있는 최고의 카메라 선택을 제안합니다.

00:10:15.000 --> 00:10:26.000
예를 들어, 이 속성은 연속성 카메라가 자동으로 선택되어야 한다는 신호를 표시할 때 userPreferredCamera와 다른 값을 반환합니다.

00:10:26.000 --> 00:10:34.000
이 속성은 또한 내부적으로 장치 서스펜션을 추적하여 서스펜션 장치보다 서스펜션되지 않은 장치를 우선시합니다.

00:10:34.000 --> 00:10:44.000
이것은 내장 카메라가 맥북 뚜껑을 닫지 않는 경우 다른 카메라로 변경하기 위한 자동 스위칭 동작을 구축하는 데 유용합니다.

00:10:44.000 --> 00:11:00.000
연속성 카메라는 전화기가 가로 방향으로 고정 스탠드에 배치되고, 화면이 꺼져 있고, USB를 통해 Mac에 연결되거나 Mac의 가까운 범위 내에 연결될 때 자동으로 선택되도록 신호를 보냅니다.

00:11:00.000 --> 00:11:10.000
이 시나리오에서, 사용자의 의도는 장치가 연속성 카메라로 사용되어야 한다는 것이 분명하다.

00:11:10.000 --> 00:11:25.000
systemPreferredCamera API를 채택할 때, 항상 이 속성을 관찰하고 AVCaptureSession의 비디오 입력 장치를 업데이트하여 마법의 카메라 선택 경험을 제공해야 합니다.

00:11:25.000 --> 00:11:31.000
userPreferredCamera와 systemPreferredCamera는 이미 자사 애플리케이션에 채택되었다.

00:11:31.000 --> 00:11:43.000
점점 더 많은 애플리케이션이 이러한 API를 채택함에 따라, 우리는 고객에게 Apple 장치에서 보편적이고 일관된 카메라 선택 방법을 제공할 수 있을 것입니다.

00:11:43.000 --> 00:11:56.000
연속성 카메라로 자동 전환이 FaceTime에서 어떻게 보이는지 보여주는 데모를 보여드리겠습니다.

00:11:56.000 --> 00:12:00.000
여기 페이스타임에서, 저는 자동 카메라 선택 모드에 있습니다.

00:12:00.000 --> 00:12:13.000
수동 및 자동 동작을 모두 제공하고자 하는 애플리케이션의 경우, 자동 모드를 활성화하고 비활성화하기 위한 새로운 UI를 추가하는 것이 좋습니다.

00:12:13.000 --> 00:12:16.000
페이스타임은 현재 내장 카메라에서 스트리밍되고 있다.

00:12:16.000 --> 00:12:26.000
책상에서 전화를 받아 맥북 뒤의 스탠드에 놓을 때...

00:12:26.000 --> 00:12:32.000
... 페이스타임은 연속성 카메라에서 원활하게 스트리밍으로 전환됩니다.

00:12:32.000 --> 00:12:43.000
그것이 새로운 클래스 속성 시스템PreferredCamera가 들어오는 곳입니다: 휴대폰이 스트리밍할 준비가 되어 있을 때 속성 값이 연속성 카메라로 바뀝니다.

00:12:43.000 --> 00:12:47.000
비슷한 방식으로 애플리케이션을 만들고 싶을 수도 있습니다.

00:12:47.000 --> 00:12:55.000
여기 자동 카메라 선택과 수동 선택 모드를 구현하는 방법에 대한 레시피가 있습니다.

00:12:55.000 --> 00:13:02.000
자동 카메라 선택이 켜져 있을 때, systemPreferredCamera 속성을 관찰하는 키 값을 시작하세요.

00:13:02.000 --> 00:13:09.000
세션의 입력 장치를 업데이트하여 변경될 때마다 systemPreferredCamera를 따르십시오.

00:13:09.000 --> 00:13:15.000
자동 모드에서는 사용자가 스스로 카메라를 선택할 수 있는 옵션을 제공하는 것이 좋습니다.

00:13:15.000 --> 00:13:26.000
다른 카메라가 선택되면, userPreferredCamera를 해당 장치로 설정한 다음 systemPreferredCamera 속성 값에 반영됩니다.

00:13:26.000 --> 00:13:33.000
자동 카메라 선택이 꺼져 있으면, systemPreferredCamera 속성을 관찰하는 키 값을 중지하십시오.

00:13:33.000 --> 00:13:42.000
systemPreferredCamera를 따르는 대신, 수동 모드에서 사용자가 선택한 카메라로 세션의 입력 장치를 업데이트해야 합니다.

00:13:42.000 --> 00:13:59.000
하지만 자동 모드와 마찬가지로 사용자가 다른 카메라를 선택할 때마다 userPreferredCamera 속성을 설정해야 하므로 사용자가 선호하는 카메라의 기록을 유지하고 자동 카메라 선택 모드로 돌아갈 때 올바른 카메라를 제안합니다.

00:13:59.000 --> 00:14:10.000
userPreferredCamera와 systemPreferredCamera API를 통합하는 방법에 대한 모범 사례는 새로운 샘플 앱인 "연속 카메라 샘플"을 확인하십시오.

00:14:10.000 --> 00:14:23.000
Continuity Camera는 Mac에 마법 같은 웹캠 경험을 제공하는 것 외에도 Mac 앱에서 iPhone 전용 카메라 기능의 기능을 활용할 수 있는 새로운 기회를 제공합니다.

00:14:23.000 --> 00:14:33.000
우리는 애플리케이션이 연속성 카메라 장치를 더 잘 활용할 수 있도록 macOS 13에 몇 가지 AVCapture API를 추가했습니다.

00:14:33.000 --> 00:14:39.000
우리는 연속성 카메라 덕분에 놀라운 품질의 iPhone 사진 캡처를 macOS에 제공하고 있습니다.

00:14:39.000 --> 00:14:44.000
우선, 우리는 고해상도 사진을 캡처하는 것을 지원합니다.

00:14:44.000 --> 00:14:49.000
이전에, macOS는 비디오 해상도의 사진 캡처만 지원했다.

00:14:49.000 --> 00:14:56.000
macOS 13부터 연속성 카메라로 최대 12메가픽셀의 사진을 캡처할 수 있습니다.

00:14:56.000 --> 00:15:16.000
이것은 캡처 세션을 시작하기 전에 먼저 AVCapturePhotoOutput 객체에서 highResolutionCaptureEnabled를 true로 설정한 다음 각 캡처에 대해 photoSettings 객체에서 highResolutionPhotoEnabled 속성을 true로 설정하여 활성화할 수 있습니다.

00:15:16.000 --> 00:15:44.000
고해상도 사진을 캡처하는 것 외에도, 연속성 카메라는 먼저 photoOutput 객체에서 최대 사진 품질 우선 순위를 설정한 다음 AVCapturePhotoSettings 객체에서 photoQualityPrioritization 속성을 설정하여 각 캡처에 대한 우선 순위를 선택하여 사진 품질의 우선 순위를 지정하는 방법을 제어하는 것을 지원합니다.

00:15:44.000 --> 00:15:58.000
응용 프로그램에 대한 올바른 우선 순위를 선택하는 방법에 대해 자세히 알아보려면 WWDC2021에서 "비디오 형식을 사용하여 고품질 사진 캡처"를 확인하십시오.

00:15:58.000 --> 00:16:01.000
또 다른 사진 관련 기능은 플래시 캡처이다.

00:16:01.000 --> 00:16:14.000
이제 photoSettings 객체에서 flashMode를 설정하여 장면과 조명 조건에 따라 플래시가 켜지거나 꺼지거나 자동으로 선택되어야 하는지 제어할 수 있습니다.

00:16:14.000 --> 00:16:25.000
우리는 또한 캡처 세션에서 생성된 시간 메타데이터를 처리할 수 있도록 macOS에서 AVCaptureMetadataOutput을 사용할 수 있도록 하고 있습니다.

00:16:25.000 --> 00:16:32.000
이제 iPhone에서 얼굴 메타데이터 개체와 인체 메타데이터 개체를 스트리밍할 수 있습니다.

00:16:32.000 --> 00:16:37.000
얼굴 메타데이터 객체를 받기 위해 세션을 설정하는 방법을 살펴봅시다.

00:16:37.000 --> 00:16:48.000
적절한 비디오 입력 및 출력으로 세션을 설정한 후, AVCaptureMetadataOutput을 만들고 addOutput을 호출하여 세션에 추가해야 합니다.

00:16:48.000 --> 00:16:57.000
특히 얼굴 메타데이터를 받으려면, 얼굴 개체 유형을 포함하도록 출력에 개체 유형 배열을 설정하십시오.

00:16:57.000 --> 00:17:06.000
사용 가능한 메타데이터 객체 유형 속성을 확인하여 요청된 메타데이터 유형이 지원되는지 확인하십시오.

00:17:06.000 --> 00:17:10.000
그런 다음 메타데이터 콜백을 받기 위해 대리인을 설정하세요.

00:17:10.000 --> 00:17:18.000
세션이 실행되기 시작하면, 실시간으로 생성된 얼굴 메타데이터 객체로 콜백을 받게 됩니다.

00:17:18.000 --> 00:17:33.000
방금 이야기한 AVCapturePhotoOutput 및 AVCaptureMetadataOutput 외에도 연속성 카메라는 비디오 데이터 출력, 영화 파일 출력 및 AVCaptureVideoPreviewLayer도 지원합니다.

00:17:33.000 --> 00:17:42.000
다음은 이 카메라를 애플리케이션에 통합할 때 알고 싶은 연속성 카메라가 지원하는 비디오 형식 목록입니다.

00:17:42.000 --> 00:17:53.000
그것은 640 x 480에서 1080p까지 세 개의 16 x 9 형식과 하나의 4 x 3 형식을 지원합니다: 1920 x 1440.

00:17:53.000 --> 00:18:01.000
필요에 따라 초당 최대 30프레임 또는 초당 60프레임을 지원하는 형식 중에서 선택할 수 있습니다.

00:18:01.000 --> 00:18:05.000
또 다른 주요 추가 사항은 데스크 뷰 장치 API이다.

00:18:05.000 --> 00:18:10.000
데스크 뷰 카메라는 별도의 AVCaptureDevice로 노출됩니다.

00:18:10.000 --> 00:18:12.000
이 장치를 찾을 수 있는 방법은 두 가지가 있습니다.

00:18:12.000 --> 00:18:20.000
첫 번째는 장치 검색 세션에서 AVCaptureDeviceType DeskViewCamera를 찾는 것입니다.

00:18:20.000 --> 00:18:33.000
또는, 메인 비디오 카메라의 AVCaptureDevice 객체를 이미 알고 있다면, 해당 장치의 companionDeskViewCamera 속성을 사용하여 데스크 뷰 장치에 액세스할 수 있습니다.

00:18:33.000 --> 00:18:42.000
이 API는 주변에 여러 개의 연속성 카메라 장치가 있을 때 메인 카메라와 데스크 뷰 장치를 페어링하는 데 도움이 될 것입니다.

00:18:42.000 --> 00:19:00.000
원하는 데스크 뷰 카메라의 AVCaptureDevice 객체가 있으면, 다른 카메라 장치와 마찬가지로 캡처 세션에서 AVCapture 비디오 데이터 출력, 동영상 파일 출력 또는 비디오 미리보기 레이어와 함께 사용할 수 있습니다.

00:19:00.000 --> 00:19:06.000
데스크 뷰 장치는 현재 420v 픽셀 형식의 스트리밍 형식을 지원합니다.

00:19:06.000 --> 00:19:14.000
포맷의 해상도는 1920 x 1440이며, 지원되는 최대 프레임 속도는 30fps입니다.

00:19:14.000 --> 00:19:16.000
이것은 세션의 끝이다.

00:19:16.000 --> 00:19:27.000
당신은 연속성 카메라, macOS에서 마법의 카메라 선택을 만드는 방법, 그리고 Mac 애플리케이션에 연속성 카메라를 통합하기 위한 몇 가지 새로운 API에 대해 배웠습니다.

00:19:27.000 --> 00:19:34.000
당신이 이 모든 API를 채택하고, 남은 WWDC를 즐겁게 보내게 되어 기쁩니다.

00:19:34.000 --> 23:59:59.000
♪

