WEBVTT

00:00:01.000 --> 00:00:09.000
♪ 기악 힙합 음악 ♪

00:00:09.000 --> 00:00:13.000
안녕. 올해의 WWDC에 오신 것을 환영합니다.

00:00:13.000 --> 00:00:15.000
내 이름은 스텔라야.

00:00:15.000 --> 00:00:17.000
그리고 난 알렉스야.

00:00:17.000 --> 00:00:20.000
스텔라와 나는 애플에서 USD의 많은 부분에서 함께 일한다.

00:00:20.000 --> 00:00:23.000
오늘 우리는 당신과 함께 USD 도구와 렌더링에 대한 업데이트를 살펴볼 것입니다.

00:00:23.000 --> 00:00:27.000
가져가, 스텔라!

00:00:27.000 --> 00:00:48.000
USD는 콘텐츠 제작 도구와의 통합이 성장하고 심화됨에 따라 USD를 중심으로 자산과 콘텐츠, 게임, AR, 영화 및 웹을 위한 렌더링을 만드는 점점 더 많은 방법을 가능하게 하는 기초 기술입니다.

00:00:48.000 --> 00:00:54.000
오늘, 우리는 생태계의 두 부분에 초점을 맞출 것이다: 도구와 렌더링.

00:00:54.000 --> 00:00:59.000
USD 도구에 대한 업데이트부터 시작합시다.

00:00:59.000 --> 00:01:19.000
그런 다음 AR Quick Look의 새로운 조명으로 자산이 어떻게 더 좋아 보이는지 보여주고, USD 렌더링에 대해 자세히 알아보고, 마지막으로 Hydra를 통합하는 방법을 보여드리겠습니다.

00:01:19.000 --> 00:01:24.000
Apple 생태계에서 USD Tools를 시작합시다.

00:01:24.000 --> 00:01:37.000
우리는 USDZ 도구, 현실 변환기를 다룬 다음, USDZ 콘텐츠를 만드는 데 도움이 될 수 있는 추가 도구와 프레임워크로 후속 조치를 취할 것입니다.

00:01:37.000 --> 00:01:50.000
USDZ Tools는 USDZ 파일을 생성, 검증 및 검사하는 데 도움이 되는 필수 명령줄 USD Python 도구가 포함된 패키지입니다.

00:01:50.000 --> 00:02:01.000
이 패키지에는 다른 주요 3D 파일 형식에서 USDZ 파일을 만드는 usdzconvert라는 변환기도 포함되어 있습니다.

00:02:01.000 --> 00:02:07.000
파이썬 스크립트는 자동화와 일괄 처리를 위한 강력한 도구를 제공합니다.

00:02:07.000 --> 00:02:14.000
또한, 그것들은 USD를 탐험하고 API를 사용하는 방법을 배울 수 있는 좋은 방법입니다.

00:02:14.000 --> 00:02:19.000
올해, 우리는 당신에게 파이썬 3와 애플 실리콘 지원을 제공합니다.

00:02:19.000 --> 00:02:30.000
우리는 또한 새로운 USD 기능과 성능 개선에 쉽게 접근할 수 있도록 USD 버전을 업그레이드했습니다.

00:02:30.000 --> 00:02:35.000
게다가, 우리는 usdzconvert에 훌륭한 새로운 기능을 추가했다.

00:02:35.000 --> 00:02:44.000
이제 useObjMtl 플래그를 사용하여 자료가 포함된 OBJ 파일을 USDZ로 변환할 수 있습니다.

00:02:44.000 --> 00:02:55.000
우리는 또한 GLTF 파일의 점과 줄에 대한 지원과 FBX 파일의 애니메이션에 대한 장면 시간을 추가했습니다.

00:02:55.000 --> 00:03:08.000
모든 usdzconvert 옵션과 변환을 사용자 정의하는 방법을 표시하려면 터미널에 "usdzconvert --help"를 입력하십시오.

00:03:08.000 --> 00:03:25.000
이것은 저작권 정보를 추가하거나 3D 모델에 대한 diffuseColor 또는 normalMap을 제공하는 것과 같은 usdzconvert와 함께 사용할 수 있는 모든 옵션을 보여줍니다.

00:03:25.000 --> 00:03:53.000
또는 명령줄을 사용하는 것보다 워크플로우를 위한 UI 편집기를 선호한다면, USDZ 도구를 사용하여 구축되고 usdzconvert와 동일한 기능을 제공하는 Reality Converter도 있지만 편집기 창에서 MacOS에서 USD 콘텐츠를 쉽게 변환, 보기 및 사용자 정의할 수 있습니다.

00:03:53.000 --> 00:04:05.000
변환된 USDZ 결과를 보려면 OBJ, GLTF 및 FBX와 같은 일반적인 3D 파일 형식을 가져오기만 하면 됩니다.

00:04:05.000 --> 00:04:10.000
올해, 우리는 또한 당신의 워크플로우를 간소화하기 위해 UI를 개선했습니다.

00:04:10.000 --> 00:04:19.000
더 많은 정보를 보려면 텍스처를 선택할 수 있습니다...

00:04:19.000 --> 00:04:31.000
자신만의 질감으로 재료 특성을 사용자 정의하세요...

00:04:31.000 --> 00:04:41.000
저작권 추가 또는 파일 메타데이터 편집...

00:04:41.000 --> 00:04:50.000
그리고 클래식 또는 새로운 조명을 선택하세요. 세션의 뒷부분에서 더 자세히 알아볼 것입니다.

00:04:50.000 --> 00:05:12.000
내장 옵션으로 다양한 조명 조건에서 USDZ 개체를 미리 보고 그에 따라 노출을 조정할 수도 있습니다. 자산 측면에서 USDZ 파일을 내보내는 동안 텍스처 품질을 선택할 수 있는 새로운 기능을 추가했습니다.

00:05:12.000 --> 00:05:17.000
기본적으로, 텍스처는 원래의 압축되지 않은 크기로 내보내집니다.

00:05:17.000 --> 00:05:29.000
하지만, USDZ 파일의 크기를 줄이고 싶다면, 이제 텍스처를 JPEG 형식으로 압축할 수 있는 옵션이 있습니다.

00:05:29.000 --> 00:05:35.000
이 예에서, 우리는 객체 캡처를 사용하여 이 체스 조각을 고해상도로 스캔했습니다.

00:05:35.000 --> 00:05:46.000
메쉬 디테일을 잃지 않고 파일 크기를 줄이기 위해, 우리는 RealityConverter를 사용하여 압축된 텍스처로 모델을 내보냅니다.

00:05:46.000 --> 00:05:56.000
시각적 차이는 거의 눈에 띄지 않으며, 결과 파일 크기가 무려 80% 줄어듭니다!

00:05:56.000 --> 00:06:04.000
여기에 더 흥미로운 소식이 있습니다: RealityConverter는 이제 USD 자산의 문제를 자동으로 해결할 수 있습니다!

00:06:04.000 --> 00:06:22.000
일치하지 않는 속성과 연결 유형을 수정하고, 여러 최상위 프라임과 누락된 기본 프라임이 있는 단계를 수정하고, 더 이상 사용되지 않는 속성을 업데이트하고, 누락된 단계 메타데이터를 추가합니다.

00:06:22.000 --> 00:06:30.000
우리는 또한 범용 바이너리 지원을 추가했기 때문에 이제 Apple Silicon에서 기본적으로 실행됩니다.

00:06:30.000 --> 00:06:35.000
이제, 처음부터 3D 모델을 만들고 싶다면 어떨까요?

00:06:35.000 --> 00:06:47.000
작년에, 우리는 USDZ 자산을 만드는 혁신적인 방법을 제공하는 macOS에서 RealityKit API로 Object Capture를 출시했습니다.

00:06:47.000 --> 00:06:52.000
그런 다음 Reality Composer를 사용하여 여러 자산으로 장면을 구성할 수 있습니다.

00:06:52.000 --> 00:07:01.000
올해, 우리는 당신의 방의 파라메트릭 3D 스캔을 만들 수 있는 RoomPlan API를 제공합니다.

00:07:01.000 --> 00:07:05.000
저는 당신이 이 3개의 세션을 확인하는 것을 강력히 추천합니다.

00:07:05.000 --> 00:07:14.000
함께, 이 기술들은 누구나 몰입형 AR 경험을 그 어느 때보다 쉽게 만들 수 있게 해준다.

00:07:14.000 --> 00:07:24.000
오늘 다룬 이 모든 도구는 Apple 개발자 웹사이트의 AR Creation Tools 페이지에서 지금 바로 다운로드할 수 있습니다.

00:07:24.000 --> 00:07:26.000
그것들을 확인해 주세요!

00:07:26.000 --> 00:07:32.000
다음으로, AR Quick Look의 새로운 조명을 살펴봅시다.

00:07:32.000 --> 00:07:52.000
AR Quick Look은 iOS에 내장된 시스템 전체 AR 뷰어로, 테이블, 벽 또는 바닥과 같은 물리적 공간에 3D USDZ 개체를 배치하고 간단한 터치 제스처로 상호 작용할 수 있습니다.

00:07:52.000 --> 00:08:05.000
Reality Composer로 만든 대화형 장면을 만들고 iMessage, Mail, Notes 등에서 다른 사람들과 공유할 수 있는 USDZ 파일에 저장할 수도 있습니다.

00:08:05.000 --> 00:08:27.000
우리는 AR 퀵 룩 렌더링을 더 현실적으로 만들기 위해 끊임없이 노력하고 있으며, 올해 우리는 당신의 자산을 더 좋게 보이게 하기 위해 향상된 대비와 향상된 모양 정의로 더 밝은 AR 퀵 룩에 향상된 조명을 도입하고 있습니다.

00:08:27.000 --> 00:08:33.000
다음은 클래식하고 새로운 조명이 있는 오브젝트 모드의 AirPods Pro의 예입니다.

00:08:33.000 --> 00:08:47.000
AirPods Pro는 두 조명 조건 모두에서 멋지게 보이며, 새로운 조명 옵션이 더 밝은 색상, 더 높은 명암비 및 더 많은 하이라이트를 제공한다는 것을 알 수 있습니다.

00:08:47.000 --> 00:08:54.000
이제 AirPods Max를 책상 위에 놓고 새로운 조명으로 AR 모드로 봅시다!

00:08:54.000 --> 00:08:57.000
멋져, 그렇지 않니?

00:08:57.000 --> 00:09:02.000
그렇다면 새로운 조명을 자산에 어떻게 적용하나요?

00:09:02.000 --> 00:09:04.000
그건 정말 간단해.

00:09:04.000 --> 00:09:15.000
USDZ 파일에서 새로운 preferredIblVersion 메타데이터를 설정하여 콘텐츠에 가장 적합한 조명을 선택하기만 하면 됩니다.

00:09:15.000 --> 00:09:24.000
여기서 우리는 새로운 조명 시스템을 사용하기 위해 AR Quick Look을 나타내는 preferredIblVersion의 값을 2로 설정했습니다.

00:09:24.000 --> 00:09:28.000
이것을 더 자세히 이해합시다.

00:09:28.000 --> 00:09:36.000
선호하는 IBLVersion 메타데이터는 0,1과 2의 값을 보유할 수 있다.

00:09:36.000 --> 00:09:43.000
preferredIblVersion이 0으로 설정된 자산은 시스템 기본 조명을 사용합니다.

00:09:43.000 --> 00:09:48.000
1로 설정하면, 고전적인 조명을 계속 사용할 것이다.

00:09:48.000 --> 00:09:52.000
2의 값은 당신에게 새로운 조명을 줄 것이다.

00:09:52.000 --> 00:09:58.000
이것은 당신이 현재 자산을 새로운 조명으로 쉽게 업데이트할 수 있다는 것을 의미합니다!

00:09:58.000 --> 00:10:05.000
명시적인 선택을 하고 모든 자산에 이 메타데이터를 설정하는 것이 좋습니다.

00:10:05.000 --> 00:10:12.000
그렇게 하기 위해, 당신은 flag preferrediblversion과 함께 usdzconvert를 사용할 수 있습니다.

00:10:12.000 --> 00:10:20.000
예를 들어, 깃발을 사용하여 소화전 OBJ 파일을 새로운 조명으로 USDZ로 변환하는 방법은 다음과 같습니다.

00:10:20.000 --> 00:10:28.000
또는 이제 기본적으로 새로운 조명을 사용하는 리얼리티 컨버터를 사용할 수 있습니다.

00:10:28.000 --> 00:10:35.000
하지만 고전적인 조명을 사용하고 싶다면, 부동산 패널에 새로운 옵션이 있습니다.

00:10:35.000 --> 00:10:42.000
여기서 우리는 고전적인 조명과 새로운 조명으로 AirPods Max 자산을 미리 봅니다.

00:10:42.000 --> 00:10:47.000
이것은 차이점을 비교하는 쉬운 방법을 제공한다.

00:10:47.000 --> 00:10:54.000
조명 아이콘을 클릭하면, 적용된 조명도 참고용으로 강조 표시됩니다.

00:10:54.000 --> 00:11:06.000
마지막으로, 이 메타데이터가 없는 자산의 경우, AR Quick Look은 파일의 날짜-시간 스탬프에 따라 조명 버전을 자동으로 결정합니다.

00:11:06.000 --> 00:11:14.000
자산이 2022년 7월 1일 이후에 만들어졌다면, 새로운 조명을 사용할 것이다.

00:11:14.000 --> 00:11:21.000
오래된 자산은 외관을 바꾸지 않도록 고전적인 조명을 계속 사용할 것이다.

00:11:21.000 --> 00:11:24.000
이제, 나는 USD 렌더링을 위해 그것을 알렉스에게 넘길 것이다.

00:11:24.000 --> 00:11:26.000
고마워, 스텔라.

00:11:26.000 --> 00:11:29.000
우리는 이미 오늘 많은 USD 자산을 렌더링했습니다.

00:11:29.000 --> 00:11:39.000
이제 우리는 USD 렌더링과 Hydra를 3D 콘텐츠 제작 파이프라인의 훌륭한 선택으로 만드는 것과 그것을 자신의 애플리케이션에 통합할 수 있는 방법을 탐구할 것입니다.

00:11:39.000 --> 00:11:44.000
먼저, 한 걸음 물러서서 일반적으로 렌더링에 대해 이야기해 봅시다.

00:11:44.000 --> 00:11:53.000
렌더러는 3D 모델, 카메라 및 조명 모음을 입력으로 가져와 이미지를 생성하는 데 사용합니다.

00:11:53.000 --> 00:12:01.000
다양한 렌더러가 있으며, 각각은 특정 목적을 위해 제작되었으며 다른 사용 사례에 최적화되어 있습니다.

00:12:01.000 --> 00:12:08.000
일부 렌더러는 게임이나 AR 장면에서 캐릭터를 렌더링하는 것과 같은 실시간 애플리케이션을 위해 설계되었습니다.

00:12:08.000 --> 00:12:17.000
다른 것들은 훨씬 더 오래 걸리지만, 예를 들어 할리우드 영화의 시각 효과를 생산하는 등 더 사실적인 이미지를 만들어낸다.

00:12:17.000 --> 00:12:22.000
모든 렌더러는 그들의 기능에 대해 선택하며 독특하다.

00:12:22.000 --> 00:12:27.000
다른 사용 사례를 위한 다른 USD 렌더러도 애플 플랫폼에 존재한다.

00:12:27.000 --> 00:12:32.000
우리는 developer.apple.com에 이러한 다양한 렌더러에 대한 문서를 추가하고 있습니다.

00:12:32.000 --> 00:12:44.000
그것은 당신이 그들 사이의 차이점을 이해하고, 그들이 지원하는 USD 기능을 설명하고, 당신에게 가장 적합한 USD를 작성하는 방법에 대한 지침을 제공하는 데 도움이 될 것입니다.

00:12:44.000 --> 00:12:57.000
Apple 플랫폼의 렌더러 중 하나는 인터랙티브 증강 현실 경험에 최적화된 사실적인 렌더링 시스템을 특징으로 하는 RealityKit이며 AR Quick Look에서 사용됩니다.

00:12:57.000 --> 00:13:00.000
그것은 USDZ 파일의 주요 렌더러이다.

00:13:00.000 --> 00:13:07.000
macOS에서 USD 렌더링을 위한 또 다른 옵션은 픽사의 오픈 소스 렌더러인 스톰이다.

00:13:07.000 --> 00:13:14.000
그것은 생산 등급 자산에 최적화되어 있으며 대규모 장면의 실시간 미리보기를 위해 설계되었습니다.

00:13:14.000 --> 00:13:22.000
콘텐츠 제작 파이프라인을 통해 흐르는 자산을 시각화하고 반복할 수 있는 훌륭한 기술입니다.

00:13:22.000 --> 00:13:25.000
스톰은 히드라라는 기술을 사용한다.

00:13:25.000 --> 00:13:31.000
히드라는 USD 오픈 소스 프로젝트의 핵심 측면이다.

00:13:31.000 --> 00:13:35.000
그래서 다음으로, 히드라와 폭풍과의 연관성을 이해합시다.

00:13:35.000 --> 00:13:38.000
우리는 이전부터 이 다이어그램으로 시작한다.

00:13:38.000 --> 00:13:42.000
여기서, 우리는 스톰을 렌더러로 사용합니다.

00:13:42.000 --> 00:13:50.000
입력은 보통 "장면 그래프"라고 불리며, 스톰은 미리보기 렌더링을 생성합니다.

00:13:50.000 --> 00:13:57.000
하지만 다른 렌더러를 사용하여 같은 장면의 사실적인 이미지를 생성하려면 어떻게 해야 하나요?

00:13:57.000 --> 00:14:00.000
그것이 바로 히드라가 만들어진 것이다.

00:14:00.000 --> 00:14:11.000
장면을 렌더러에 단단히 연결하는 대신, 히드라는 장면에서 렌더러로 데이터를 전송하기 위해 그들 사이의 추상적인 레이어 역할을 한다.

00:14:11.000 --> 00:14:19.000
이를 통해 장면 그래프를 변경하지 않고 언제든지 필요에 따라 렌더러를 쉽게 바꿀 수 있습니다.

00:14:19.000 --> 00:14:24.000
예를 들어, 스톰과 픽사의 렌더맨을 사용할 수 있습니다.

00:14:24.000 --> 00:14:35.000
콘텐츠 제작 파이프라인에서 Storm을 사용하여 빠른 렌더링과 빠른 반복을 한 다음 RenderMan으로 전환하여 준비가 되면 최종 이미지를 생성할 수 있습니다.

00:14:35.000 --> 00:14:38.000
장면 그래프도 마찬가지입니다.

00:14:38.000 --> 00:14:43.000
히드라에 대한 입력은 USD 장면 그래프 또는 다른 그래프가 될 수 있습니다.

00:14:43.000 --> 00:14:53.000
이를 통해 각각이 완전히 다른 장면 그래프를 가지고 있더라도 여러 응용 프로그램에서 동일한 렌더러를 활용할 수 있습니다.

00:14:53.000 --> 00:14:59.000
히드라를 장면 그래프와 렌더러와 연결하는 인터페이스는 대리자라고 불린다.

00:14:59.000 --> 00:15:08.000
장면 그래프는 장면 대표를 통해 히드라에 연결되며, 렌더러는 렌더링 대표를 통해 히드라에 연결됩니다.

00:15:08.000 --> 00:15:11.000
그리고 그건 널 위한 히드라야!

00:15:11.000 --> 00:15:23.000
파운드리의 Nuke 13은 이미 Hydra를 사용하여 뷰포트를 렌더링하고 있으며, macOS의 Nuke 아티스트가 Nuke의 3D 시스템에서 더 나은 품질과 대화형 경험을 할 수 있도록 합니다.

00:15:23.000 --> 00:15:30.000
이것은 사용자 지정 장면 대리인과 금속 가속 스톰과 함께 히드라를 사용하여 달성된다.

00:15:30.000 --> 00:15:39.000
우리는 픽사 애니메이션 스튜디오와 협력하여 메탈 가속 스톰을 오픈 소스로 공개했다는 것을 공유하게 되어 기쁩니다.

00:15:39.000 --> 00:15:43.000
미화 22.05.로 사용할 수 있습니다.

00:15:43.000 --> 00:15:53.000
이제 히드라의 힘을 보았으니, USD 장면 그래프의 일반적인 사용 사례와 렌더러로서의 스톰과 함께 히드라 샘플 응용 프로그램을 살펴봅시다.

00:15:53.000 --> 00:16:00.000
Hydra를 사용하여 콘텐츠 제작 도구와 3D 워크플로우 애플리케이션을 구축할 수 있습니다.

00:16:00.000 --> 00:16:05.000
우리의 샘플 애플리케이션인 HydraPlayer는 매우 간단하지만 강력합니다.

00:16:05.000 --> 00:16:12.000
그것은 스톰으로 USD 파일을 렌더링하고 카메라를 이동할 수 있게 해준다.

00:16:12.000 --> 00:16:18.000
그리고 우리는 당신이 바로 시작할 수 있도록 HydraPlayer를 공개 샘플 프로젝트로 만들게 되어 기쁩니다!

00:16:18.000 --> 00:16:24.000
그것은 세션 리소스에서 사용할 수 있으며 Readme의 전체 지침과 함께 제공됩니다.

00:16:24.000 --> 00:16:32.000
지금 이 비디오를 일시 중지하고, 프로젝트를 다운로드한 다음, 우리가 그것을 살펴보는 동안 따라가는 것이 좋습니다.

00:16:32.000 --> 00:16:41.000
Xcode 프로젝트에서 4개의 클래스를 찾을 수 있습니다: AppDelegate, Camera, Renderer 및 View Controller.

00:16:41.000 --> 00:16:47.000
AppDelegate는 기본적으로 루트 객체이며 시스템과의 상호 작용을 관리합니다.

00:16:47.000 --> 00:16:54.000
카메라 클래스는 사용자 입력을 쉽게 번역할 수 있도록 USD 장면 카메라의 간단한 표현이다.

00:16:54.000 --> 00:16:59.000
렌더러 클래스는 USD와 Hydra와의 모든 상호 작용을 처리할 것이다.

00:16:59.000 --> 00:17:05.000
마지막으로, 뷰컨트롤러는 사용자 입력을 처리합니다.

00:17:05.000 --> 00:17:16.000
HydraPlayer를 만들고 출시하기 전에, 해야 할 세 가지가 있습니다: 환경을 준비하고, Apple Silicon Mac에서 Rosetta를 사용하고, USD &amp; Hydra를 다운로드하고 구축하세요.

00:17:16.000 --> 00:17:20.000
그럼 시작하자.

00:17:20.000 --> 00:17:23.000
먼저, 우리는 개발 환경을 준비한다.

00:17:23.000 --> 00:17:29.000
Xcode, Python 및 CMake가 설치되어 있는지 확인하세요.

00:17:29.000 --> 00:17:34.000
이제 다른 두 단계를 위한 터미널을 열어 봅시다.

00:17:34.000 --> 00:17:42.000
Apple Silicon Mac을 사용하는 경우, USD가 arm64를 완전히 지원하도록 전환하는 동안 Rosetta에서 실행해야 합니다.

00:17:42.000 --> 00:17:46.000
이렇게 하려면, 아치 명령을 사용하세요.

00:17:46.000 --> 00:17:52.000
환경이 준비되면, USD와 Hydra 소스 코드를 다운로드해야 합니다.

00:17:52.000 --> 00:17:57.000
둘 다 PixarAnimationStudios/USD의 동일한 GitHub 저장소에 있습니다.

00:17:57.000 --> 00:18:01.000
이제 우리가 코드를 가졌으니, 우리는 그것을 만들 수 있다.

00:18:01.000 --> 00:18:04.000
USD는 편리한 파이썬 빌드 스크립트와 함께 제공됩니다.

00:18:04.000 --> 00:18:13.000
우리는 "generator Xcode"와 "no-python" 플래그를 추가하고 USD를 설치할 위치를 지정합니다.

00:18:13.000 --> 00:18:17.000
"USDInstall"의 소스 코드 옆에 놓자.

00:18:17.000 --> 00:18:22.000
USD가 건설을 마치면, 우리는 HydraPlayer를 만들 준비가 되었습니다!

00:18:22.000 --> 00:18:30.000
이 다이어그램으로 한 번 더 돌아가서 HydraPlayer의 주요 부분을 식별하여 자세히 확인해 봅시다.

00:18:30.000 --> 00:18:38.000
우리는 3D 모델을 로드하는 방법, 카메라를 설정하는 방법, 장면 조명을 설정하는 방법을 살펴볼 것입니다.

00:18:38.000 --> 00:18:47.000
그런 다음 우리는 씬 그래프를 스톰으로 가져오는 방법과 마지막으로 응용 프로그램 창을 위한 이미지를 생성하는 방법을 배울 것입니다.

00:18:47.000 --> 00:18:50.000
그래서 USD에서 3D 모델을 로딩하는 것을 시작합시다.

00:18:50.000 --> 00:19:01.000
ViewController의 viewDidAppear에서, 우리는 보기가 처음 나타날 때 NSOpenPanel로 파일 선택기를 만듭니다.

00:19:01.000 --> 00:19:09.000
파일이 선택되면, 렌더러는 장면 설정을 시작하고 USD 파일을 로드할 수 있습니다.

00:19:09.000 --> 00:19:12.000
USD API로 파일을 로드하는 것은 매우 간단합니다.

00:19:12.000 --> 00:19:17.000
우리는 단순히 파일 경로에서 USD 단계를 엽니다.

00:19:17.000 --> 00:19:20.000
그게 다야. 우리는 파일을 로드했습니다.

00:19:20.000 --> 00:19:26.000
다음으로, 우리는 카메라를 설치했다. 우리 코드에서, 이것은 간단하다.

00:19:26.000 --> 00:19:31.000
setupCamera에서, 우리는 먼저 새로운 장면 카메라를 만듭니다.

00:19:31.000 --> 00:19:37.000
그런 다음 우리는 장면을 기반으로 세계 규모와 중심을 계산합니다.

00:19:37.000 --> 00:19:43.000
다음으로, 카메라를 좋은 거리에서 옮긴 다음 중앙에 집중하세요.

00:19:43.000 --> 00:19:47.000
이렇게 하면, 우리의 카메라는 전체 장면을 포착한다.

00:19:47.000 --> 00:19:50.000
좋아, 이제 우리는 카메라를 설치했어.

00:19:50.000 --> 00:19:54.000
다음으로, 조명.

00:19:54.000 --> 00:20:04.000
우리는 그것을 쉽게 유지하고 하나의 간단한 주변 조명을 만들고 카메라와 일치하도록 위치를 설정합니다. 그게 다입니다.

00:20:04.000 --> 00:20:09.000
그리고 그것으로, 우리는 3D 모델, 카메라 및 조명으로 전체 장면을 가지고 있습니다!

00:20:09.000 --> 00:20:13.000
우리는 이제 우리의 장면을 폭풍으로 넘길 수 있다.

00:20:13.000 --> 00:20:17.000
먼저, 우리는 렌더링 엔진을 초기화해야 합니다.

00:20:17.000 --> 00:20:24.000
여기서, 우리는 Storm의 클래스 이름인 새로운 UsdImagingGLEngine을 만듭니다.

00:20:24.000 --> 00:20:28.000
여기서 가장 중요한 매개 변수는 루트패스이다.

00:20:28.000 --> 00:20:33.000
그것은 우리의 3D 모델로 엔진을 USD 단계로 가리킵니다.

00:20:33.000 --> 00:20:41.000
다른 매개 변수와 UsdImagingGLEngine에 대한 자세한 내용은 픽사의 USD API 문서를 확인하십시오.

00:20:41.000 --> 00:20:48.000
다음으로, 우리는 엔진에 카메라를 설치하고 조명 설정을 설정합니다.

00:20:48.000 --> 00:20:55.000
그리고 마지막으로, 우리는 렌더링 매개 변수를 설정하여 스톰이 어떻게 렌더링하기를 원하는지 정의합니다.

00:20:55.000 --> 00:21:03.000
예를 들어, 렌더링된 이미지가 앱 색 구성표와 잘 작동하도록 투명한 배경을 렌더링하고 싶습니다.

00:21:03.000 --> 00:21:10.000
애니메이션이 있는 장면에서 중요한 것은, 우리가 시간 코드를 지정하는 곳이기도 하다.

00:21:10.000 --> 00:21:13.000
이제 우리는 이미지를 렌더링할 준비가 되었습니다!

00:21:13.000 --> 00:21:20.000
우리는 이미 필요한 모든 설정을 완료했기 때문에, 렌더링 명령은 코드 한 줄에 불과합니다.

00:21:20.000 --> 00:21:26.000
우리는 결과를 얻고 그것을 창문에 표시하고, 거기에 우리가 있습니다!

00:21:26.000 --> 00:21:28.000
우리는 USD 장난감 비행기를 렌더링하고 있어!

00:21:28.000 --> 00:21:31.000
그리고 사실, 우리는 단지 하나의 비행기가 아니다.

00:21:31.000 --> 00:21:39.000
HydraPlayer는 수천만 개의 삼각형으로 수천 개의 애니메이션 자산을 쉽게 렌더링할 수 있습니다.

00:21:39.000 --> 00:21:47.000
아직 하지 않았다면, 이 세션의 리소스를 확인하고, 샘플 프로젝트를 다운로드하고, 더 자세히 살펴보세요.

00:21:47.000 --> 00:21:54.000
우리는 함께 Apple의 USD 도구를 더 강력하게 만들고 자산을 더 좋게 보이게 하는 업데이트를 탐구했습니다.

00:21:54.000 --> 00:22:04.000
우리는 Hydra의 기능에 대해 배웠고 HydraPlayer 샘플 프로젝트를 통해 자신의 애플리케이션에 어떻게 통합할 수 있는지 확인했습니다.

00:22:04.000 --> 00:22:12.000
USD의 중요한 개념에 대해 더 알아보려면, "USD 기본 사항 이해하기" 세션을 확인하세요.

00:22:12.000 --> 00:22:14.000
고마워.

00:22:14.000 --> 23:59:59.000
♪ ♪

