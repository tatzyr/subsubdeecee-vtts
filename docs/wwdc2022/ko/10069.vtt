WEBVTT

00:00:01.000 --> 00:00:18.000
데이비드 던컨: 안녕하세요, 저는 데이비드 던컨입니다. 이 비디오에서는 데스크톱 클래스 아이패드를 소개하겠습니다.

00:00:18.000 --> 00:00:34.000
iOS 16은 훌륭한 앱을 설계하고 구축하는 데 사용되는 도구, 더 나은 도구를 최전선에 가져오고 내장 및 연결된 모든 하드웨어를 활용하는 앱에 대한 발전을 제공합니다.

00:00:34.000 --> 00:00:39.000
UIKit은 앱의 이러한 목표를 달성하는 데 도움이 되는 많은 도구를 추가합니다.

00:00:39.000 --> 00:00:49.000
UINavigationBar 업데이트를 통해 화면 부동산을 더 잘 활용하고 모든 Apple 플랫폼에서 훌륭한 경험을 구축할 수 있습니다.

00:00:49.000 --> 00:00:57.000
새로운 Find and Replace UI는 내장 보기를 활성화할 수 있는 스냅이며 사용자 지정 보기에 쉽게 추가할 수 있습니다.

00:00:57.000 --> 00:01:04.000
편집 메뉴는 메뉴 시스템과 통합되는 새로운 상호 작용 기반 API로 점검되었습니다.

00:01:04.000 --> 00:01:15.000
그리고 컬렉션 뷰 개선은 사용자가 콘텐츠를 선택하고 행동할 수 있는 인터페이스를 그 어느 때보다 쉽게 구축할 수 있게 해준다.

00:01:15.000 --> 00:01:24.000
찾기 및 바꾸기 및 편집 메뉴에 대한 자세한 내용은 "데스크톱 클래스 편집 상호 작용 채택"을 시청하세요.

00:01:24.000 --> 00:01:32.000
그리고 이 모든 기능이 어떻게 함께 작동하는지 보려면, "데스크탑 클래스 iPad 앱 만들기"를 보세요.

00:01:32.000 --> 00:01:40.000
이 비디오에서는 iOS 16용 앱을 디자인하는 방법에 영향을 미치는 내비게이션 변경 사항에 대해 논의하겠습니다.

00:01:40.000 --> 00:01:47.000
첫 번째는 더 쉽게 발견할 수 있는 인터페이스를 쉽게 만들 수 있는 새로운 기능이다.

00:01:47.000 --> 00:01:53.000
그런 다음 문서 기반 앱에서 특히 강력한 기능.

00:01:53.000 --> 00:02:00.000
그리고 마지막으로, 경험을 가속화하고 연마하는 데 도움이 되는 검색 업데이트.

00:02:00.000 --> 00:02:13.000
UINavigationBar는 iOS에서 다양한 목적으로 사용되며, iOS 16은 이러한 많은 경우에 새로운 최적화된 UI를 제공함으로써 이를 인정합니다.

00:02:13.000 --> 00:02:22.000
UINavigationItem은 네비게이터, 브라우저 및 편집기 스타일 중에서 선택하는 데 사용되는 스타일 속성을 추가합니다.

00:02:22.000 --> 00:02:26.000
나는 지금 이 스타일들 각각에 뛰어들 것이다.

00:02:26.000 --> 00:02:35.000
기본 스타일인 네비게이터는 전통적인 UINavigationBar와 똑같이 작동합니다.

00:02:35.000 --> 00:02:45.000
제목은 중앙에 있고, 선행 및 후행 막대 버튼 항목이 있으며, 스택에 1개 이상의 항목이 있을 때 뒤로 버튼이 나타납니다.

00:02:45.000 --> 00:02:57.000
브라우저 스타일은 파일이나 사파리와 같이 위치가 중요한 인터페이스에 더 잘 최적화되도록 콘텐츠를 재정렬합니다.

00:02:57.000 --> 00:03:00.000
제목은 이 스타일링에서 선두 위치로 옮겨졌다.

00:03:00.000 --> 00:03:06.000
편집기 스타일은 기본 기능이 문서 편집일 때 최적화되어 있습니다.

00:03:06.000 --> 00:03:10.000
브라우저 스타일과 마찬가지로, 제목은 정렬되어 있다.

00:03:10.000 --> 00:03:23.000
편집기 UI는 종종 문서 선택기로 문서를 선택한 후와 같이 대상이므로 해당 UI에 쉽게 액세스할 수 있도록 뒤로 버튼을 제시합니다.

00:03:23.000 --> 00:03:29.000
브라우저와 편집기 스타일은 모두 바 중앙에 많은 공간을 확보한다.

00:03:29.000 --> 00:03:38.000
iOS 16은 이 지역에 추가 컨트롤을 배치할 수 있도록 하여 이 해방된 공간을 활용합니다.

00:03:38.000 --> 00:03:52.000
센터 아이템은 화면 부동산을 더 잘 활용하기 위한 일련의 변경 사항의 일부이며, UIBarButtonItemGroup, 사용자 지정 지원 및 오버플로에 대한 지원을 포함합니다.

00:03:52.000 --> 00:04:02.000
오버플로 지원은 모든 모드에서 사용할 수 있으며, 네비게이터 스타일이 센터 항목도 간접적으로 지원할 수 있습니다.

00:04:02.000 --> 00:04:12.000
개별 컨트롤은 UIBarButtonItems로 계속 지정되지만, 이제 UIBarButtonItemGroups로 구성됩니다.

00:04:12.000 --> 00:04:17.000
이것은 공간이 프리미엄일 때 더 밀도가 높은 프레젠테이션을 가능하게 한다.

00:04:17.000 --> 00:04:26.000
이 예에서, 바에는 4개의 그룹으로 구성된 5개의 항목이 있다.

00:04:26.000 --> 00:04:40.000
첫 번째 그룹에는 단일 막대 버튼 항목이 포함되어 있으므로, 이 예제는 UIBarButtonItem, creatingFixedGroup()의 편의 메소드를 사용하여 만듭니다.

00:04:40.000 --> 00:04:47.000
1개 이상의 항목이 있는 고정 그룹이 필요한 경우, 대신 UIBarButtonItemGroup 메소드를 사용할 수 있습니다.

00:04:47.000 --> 00:04:54.000
고정 그룹은 항상 바에서 가장 먼저 나타나며, 사용자 지정으로 제거하거나 이동할 수 없습니다.

00:04:54.000 --> 00:05:06.000
드로우 그룹에는 단일 항목이 포함되어 있으므로 편리한 API인 creatingMovableGroup(customizationIdentifier)도 사용합니다.

00:05:06.000 --> 00:05:13.000
고정된 그룹과 마찬가지로, 움직일 수 있는 그룹은 제거할 수 없지만 이동할 수 있다.

00:05:13.000 --> 00:05:20.000
이 때문에, 그들은 그들의 위치를 추적하고 저장할 수 있도록 사용자 지정 식별자가 필요하다.

00:05:20.000 --> 00:05:28.000
하나 이상의 항목이 있는 그룹이 필요한 경우, 대신 UIBarButtonItemGroup 메소드를 사용할 수 있습니다.

00:05:28.000 --> 00:05:37.000
도형 그룹에는 여러 항목이 포함되어 있으므로 UIBarButtonItemGroup API를 사용하여 그룹을 만듭니다.

00:05:37.000 --> 00:05:45.000
이 그룹은 제거 가능뿐만 아니라 바 내에서 움직일 수 있어야 하며, 따라서 선택적 그룹으로 생성됩니다.

00:05:45.000 --> 00:05:53.000
이 그룹은 또한 대표 항목을 지정하여 UIKit이 필요한 경우 공간을 절약하기 위해 그룹을 축소할 수 있도록 합니다.

00:05:53.000 --> 00:06:05.000
representativeItem은 작업을 지정하지 않으며, UIKit이 그룹에서 항목을 선택할 수 있는 메뉴를 합성할 수 있도록 합니다.

00:06:05.000 --> 00:06:15.000
사용자 지정 UI가 호출되면, UIKit은 그룹을 만든 방법에 따라 지정한 규칙을 자동으로 적용합니다.

00:06:15.000 --> 00:06:23.000
고정 및 이동식 그룹은 바에 있어야 하지만, 선택적 그룹은 임의의 숫자로 추가하거나 제거할 수 있습니다.

00:06:23.000 --> 00:06:34.000
UIKit은 바에서 가능한 한 많은 기능을 유지하기 위해 그룹을 축소하려고 시도하지만, 공간을 사용할 수 없으면 추가 항목이 오버플로로 이동합니다.

00:06:34.000 --> 00:06:45.000
오버플로 메뉴에는 사용자 지정의 일부이지만 바에 들어갈 수 없는 항목과 바를 사용자 지정할 수 있는 옵션이 포함되어 있습니다.

00:06:45.000 --> 00:06:55.000
UIKit은 각 막대 버튼 항목에 대한 기본 메뉴 요소를 합성하지만, 원하는 경우 menuRepresentation을 사용자 정의할 수 있는 옵션이 있습니다.

00:06:55.000 --> 00:07:02.000
마지막으로, 이 예제는 사용자 지정을 가능하게 하고 centerItemGroups를 추가합니다.

00:07:02.000 --> 00:07:09.000
UINavigationItem.customizationIdentifier를 설정하여 사용자 지정을 활성화합니다.

00:07:09.000 --> 00:07:19.000
customizationIdentifier는 바의 고유한 사용자 지정을 정의하므로, 앱 내의 다른 사용자 지정과 충돌하지 않는 문자열을 선택하십시오.

00:07:19.000 --> 00:07:25.000
UIKit은 이 식별자를 기반으로 사용자 지정을 자동으로 저장하고 복원합니다.

00:07:25.000 --> 00:07:30.000
다음으로, 센터 아이템 그룹 자체를 제공하세요.

00:07:30.000 --> 00:07:34.000
내가 이미 다룬 처음 네 그룹.

00:07:34.000 --> 00:07:49.000
형식 그룹은 기본 사용자 지정에 없는 선택적 그룹이므로, 이 코드는 isInDefaultCustomization 매개 변수의 기본값을 재정의하여 제외합니다.

00:07:49.000 --> 00:07:59.000
UINavigationItem.customizationIdentifier를 설정하지 않고도 centerItemGroups를 사용할 수 있지만, 사용자 지정은 사용할 수 없습니다.

00:07:59.000 --> 00:08:06.000
Mac Catalyst에서 UINavigationBar는 자동으로 콘텐츠를 NSToolbar로 변환합니다.

00:08:06.000 --> 00:08:21.000
선행, 중앙 및 후행 항목 그룹이 순서대로 추가되며, NSToolbar 사용자 지정을 사용할 때 중심 항목 그룹의 사용자 지정 속성이 존중됩니다.

00:08:21.000 --> 00:08:30.000
예상되는 모든 NSToolbar 동작과 제목 및 창 프록시와 같은 다른 속성을 사용할 수 있습니다.

00:08:30.000 --> 00:08:35.000
이 모든 것은 Mac에 최적화할 때 기본적으로 발생합니다.

00:08:35.000 --> 00:08:43.000
다음으로, 특히 문서를 다룰 때 강력한 상호 작용에 집중합시다.

00:08:43.000 --> 00:08:54.000
UINavigationBar는 이제 제목 보기에 메뉴 추가를 지원하여 콘텐츠 전체에서 작동하는 작업을 추가할 수 있는 중앙 위치를 제공합니다.

00:08:54.000 --> 00:09:00.000
또한, 공유 시트에 대한 지원을 추가하고 이 메뉴에서 드래그 앤 드롭할 수 있습니다.

00:09:00.000 --> 00:09:04.000
먼저, 나는 메뉴 항목 자체에 집중할 것이다.

00:09:04.000 --> 00:09:13.000
활성화되면, 기본 제목 메뉴는 5가지 명령을 제공합니다: 복제, 이동, 이름 바꾸기, 내보내기 및 인쇄.

00:09:13.000 --> 00:09:20.000
이 항목들은 응답자 체인의 특정 방법에 따라 필터링됩니다.

00:09:20.000 --> 00:09:30.000
UINavigationBar는 이름 바꾸기에 대한 구체적인 지원을 제공하므로, renameDelegate를 구현한 경우에도 포함됩니다.

00:09:30.000 --> 00:09:39.000
제목 메뉴를 활성화하려면, 표시할 최종 메뉴를 반환하는 클로저인 titleMenuProvider를 설정하십시오.

00:09:39.000 --> 00:09:43.000
클로저는 제안된 요소의 배열을 통과한다.

00:09:43.000 --> 00:09:48.000
이것들을 있는 그대로 사용하거나, 필터링하거나, 직접 추가할 수 있습니다.

00:09:48.000 --> 00:09:53.000
우리의 예에서, 우리는 메뉴에 하나의 추가 작업을 추가하고 있습니다.

00:09:53.000 --> 00:09:58.000
마지막으로, 당신은 구성된 UIMenu를 반환합니다.

00:09:58.000 --> 00:10:06.000
제목 메뉴는 또한 활동 보기 컨트롤러를 통해 공유하고 드래그 앤 드롭을 지원할 수 있습니다.

00:10:06.000 --> 00:10:14.000
이러한 기능을 활성화하려면, 문서를 설명하는 UIDocumentProperties 인스턴스를 제공합니다.

00:10:14.000 --> 00:10:21.000
UIDocumentProperties는 미리보기를 포함하여 문서에 대한 메타데이터를 나타냅니다.

00:10:21.000 --> 00:10:29.000
이 예제는 URL로 하나를 만들어 UIKit이 필요한 메타데이터를 자동으로 가져올 수 있도록 합니다.

00:10:29.000 --> 00:10:36.000
추가 기능을 활성화하기 위해, 이 예제는 문서를 나타내는 NSItemProvider를 만듭니다.

00:10:36.000 --> 00:10:40.000
드래그 앤 드롭을 활성화하려면 dragItemsProvider를 설정하세요.

00:10:40.000 --> 00:10:47.000
이 클로저는 UIDragSession을 지났고, UIDragItems 배열을 반환합니다.

00:10:47.000 --> 00:10:52.000
이 예제는 문서를 나타내는 단일 항목을 반환합니다.

00:10:52.000 --> 00:10:56.000
activityViewControllerProvider를 설정하면 공유가 가능합니다.

00:10:56.000 --> 00:11:01.000
이 클로저는 UIActivityViewController를 구성하고 반환합니다.

00:11:01.000 --> 00:11:15.000
마지막으로, 채워진 객체를 UINavigationItem.documentProperties에 할당하고, 제목을 탭하면, UIKit은 다른 titleMenu 항목과 함께 헤더를 표시합니다.

00:11:15.000 --> 00:11:25.000
Mac Catalyst에서 titleMenuProvider로 전달될 제안된 항목은 이미 파일 메뉴에 존재합니다.

00:11:25.000 --> 00:11:32.000
제목 메뉴에 추가했을 모든 항목은 다른 방법으로 사용할 수 있어야 합니다.

00:11:32.000 --> 00:11:40.000
UIMenuBuilder API를 사용하여 이러한 항목을 추가하거나 필요에 따라 기존 항목을 필터링할 수 있습니다.

00:11:40.000 --> 00:11:49.000
문서 속성을 지정하면, UIKit은 제공된 URL을 자동으로 사용하여 macOS 프록시 아이콘을 관리합니다.

00:11:49.000 --> 00:11:57.000
windowScene에 대한 representedURL을 수동으로 설정하면 UIKit의 관리를 대체합니다.

00:11:57.000 --> 00:12:01.000
UIKit은 이름 바꾸기를 가능하게 하는 두 가지 메커니즘을 제공한다.

00:12:01.000 --> 00:12:12.000
인라인 이름 바꾸기는 UINavigationItem.renameDelegate를 설정하여 제공되며, 모든 플랫폼에서 제목을 편집하기 위한 전용 UI를 제공합니다.

00:12:12.000 --> 00:12:17.000
완료되면, 결과 이름이 대리인에게 전달됩니다.

00:12:17.000 --> 00:12:30.000
또는 UIResponder.rename(_:)을 구현하고 원하는 UI를 제공하여 이름 바꾸기 경험을 완전히 제어할 수 있습니다.

00:12:30.000 --> 00:12:37.000
iOS에서 UINavigationBar는 제목 보기 내에서 직접 이름 바꾸기 UI를 제공합니다.

00:12:37.000 --> 00:12:45.000
macOS에서, 이름 바꾸기 UI는 내비게이션 바가 NSToolbar에서 호스팅될 때 창의 제목에 의해 제공됩니다.

00:12:45.000 --> 00:12:56.000
인라인 이름 바꾸기를 구현하려면, UINavigationItemRenameDelegate 프로토콜을 준수하고 탐색 항목의 renameDelegate를 설정하십시오.

00:12:56.000 --> 00:13:06.000
사용자가 수락한 제목을 받는 데 사용되는 navigationItem(_:didEndRenamingWith:)은 오직 하나의 필수 방법만 있습니다.

00:13:06.000 --> 00:13:12.000
파일 기반 앱의 경우, UIDocumentBrowserViewController는 이제 이름이 변경된 API를 제공합니다.

00:13:12.000 --> 00:13:23.000
검색은 얼마나 많은 사용자가 가장 중요한 데이터를 찾는지이며, iOS 16의 발전으로 우수한 검색 경험을 더 쉽게 제공할 수 있습니다.

00:13:23.000 --> 00:13:33.000
가장 먼저 주목해야 할 것은 검색이 이제 iPadOS의 탐색 모음과 macOS의 도구 모음에 줄을 서서 공간을 덜 차지한다는 것입니다.

00:13:33.000 --> 00:13:40.000
iPadOS에서는 UINavigationItem .preferredSearchBarPlacement로 이전 동작을 복원할 수 있습니다.

00:13:40.000 --> 00:13:47.000
또한, 검색 표시줄은 다른 컨트롤을 위한 더 많은 공간을 제공하기 위해 버튼으로 축소될 수 있습니다.

00:13:47.000 --> 00:14:00.000
검색이 활성화되면 검색 제안이 나타나며, 업데이트된 검색 쿼리와 함께 업데이트할 수 있으므로 사용자의 검색을 지원할 수 있습니다.

00:14:00.000 --> 00:14:06.000
다음으로, 검색 제안을 설정하는 데 필요한 코드를 설명하겠습니다.

00:14:06.000 --> 00:14:16.000
검색 제안을 관리하려면 UISearchResultsUpdating을 준수하고 searchController의 searchResultsUpdater를 설정하십시오.

00:14:16.000 --> 00:14:24.000
이를 통해 쿼리가 변경됨에 따라 제안을 업데이트하고 선택한 검색 제안에 따라 조치를 취할 수 있습니다.

00:14:24.000 --> 00:14:33.000
쿼리가 변경되면 updateSearchResults(for:)가 호출되어 검색 제안을 업데이트할 수 있습니다.

00:14:33.000 --> 00:14:36.000
어떤 제안을 제공할지는 당신에게 달려 있습니다.

00:14:36.000 --> 00:14:41.000
빈 배열을 설정하면 제안 UI가 지워진다.

00:14:41.000 --> 00:14:48.000
UIKit은 제안 콘텐츠를 지정하기 위해 UISearchSuggestionItem을 제공합니다.

00:14:48.000 --> 00:14:56.000
제안 선택에 응답하려면 updateSearchResults(for:selecting:)를 구현하십시오.

00:14:56.000 --> 00:15:02.000
이 방법은 선택한 검색 제안을 전달하므로 적절하게 반응할 수 있습니다.

00:15:02.000 --> 00:15:10.000
이 예에서는 현재 쿼리를 검색 제안에 지정된 쿼리로 대체하여 검색을 업데이트합니다.

00:15:10.000 --> 00:15:19.000
UISearchTextField에는 searchSuggestions도 있으므로, 해당 클래스를 자체적으로 사용하는 것을 선호한다면, 여전히 검색 제안을 구현할 수 있습니다.

00:15:19.000 --> 00:15:25.000
하지만 UISearchController를 사용하는 경우, 대신 속성을 사용해야 합니다.

00:15:25.000 --> 00:15:33.000
iOS 16에서 UIKit은 사용자에게 생산성을 높이는 데 도움이 되는 새로운 API를 제공합니다.

00:15:33.000 --> 00:15:39.000
센터 항목과 제목 메뉴로 고급 기능에 더 많은 발견 가능성을 가져오세요.

00:15:39.000 --> 00:15:46.000
탐색 모음에서 직접 드래그 앤 드롭 및 공유를 제공하여 문서 지원을 개선하세요.

00:15:46.000 --> 00:15:58.000
검색 제안을 제공하여 더 쉽고 빠르게 검색할 수 있도록 하고 거의 제로 노력으로 상자에서 꺼내자마자 훌륭한 Mac 경험을 얻을 수 있습니다.

00:15:58.000 --> 00:15:59.000
이 비디오를 봐줘서 고마워.

00:15:59.000 --> 00:16:03.000
네가 어떻게 앱을 데스크톱 수업으로 향상시키는지 빨리 보고 싶어!

00:16:03.000 --> 23:59:59.000
.

