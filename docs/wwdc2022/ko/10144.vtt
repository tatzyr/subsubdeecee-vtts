WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:12.000
Zheng Naiwei: 안녕하세요, WWDC에 오신 것을 환영합니다.

00:00:12.000 --> 00:00:16.000
제 이름은 Apple의 AVFoundation 팀의 Zheng Naiwei입니다.

00:00:16.000 --> 00:00:26.000
이 세션에서 우리는 HLS 콘텐츠 스티어링에 추가한 새로운 기능으로 스트리밍 전송 신뢰성을 개선하는 방법에 대해 이야기할 것입니다.

00:00:26.000 --> 00:00:29.000
우리는 오늘 세 가지 주제를 다룰 것이다.

00:00:29.000 --> 00:00:31.000
콘텐츠 스티어링에 대해 들어본 적이 없다면, 걱정하지 마세요.

00:00:31.000 --> 00:00:39.000
스트리밍 서비스 품질을 개선하기 위해 스트리밍 트래픽을 동적으로 조정할 수 있는 HLS 기술입니다.

00:00:39.000 --> 00:00:44.000
네가 정상 궤도에 오를 수 있도록 짧은 리뷰를 줄게.

00:00:44.000 --> 00:00:56.000
그런 다음 스트리밍 서비스의 신뢰성을 더욱 향상시키기 위해 한계를 넘어 역동적인 스티어링 능력을 가져올 수 있는 새로운 Pathway 복제 기능을 발표할 것입니다.

00:00:56.000 --> 00:01:07.000
마지막으로, 트래픽을 조종하기 위한 서버 측 논리에 영향을 미치는 방법을 안내하기 위해 구체적인 예를 사용할 것입니다. 더 이상 기다리지 말고 시작하자.

00:01:07.000 --> 00:01:16.000
콘텐츠 스티어링이 없었던 당시에는 오류 대체 시 변형 선택이 HLS 사양에서 표준화되지 않았습니다.

00:01:16.000 --> 00:01:22.000
그리고 다른 클라이언트 구현은 다음 대체 변형을 선택할 때 다르게 행동할 수 있다.

00:01:22.000 --> 00:01:28.000
하지만 이것을 하는 전형적인 방법은 다변형 재생 목록의 변형 순서를 따르는 것이다.

00:01:28.000 --> 00:01:38.000
스트리밍 공급자가 대체 CDN 세트를 지정하려는 경우, 모든 CDN의 모든 변형을 나열하고 다중 변형 재생 목록에서 적절하게 정렬해야 합니다.

00:01:38.000 --> 00:01:50.000
이렇게 하면, 클라이언트 플레이어가 첫 번째 변형에서 실패를 겪은 경우, 실패한 변형이 선택에서 불이익을 받는 재생 목록의 다음 변형으로 이동할 수 있습니다.

00:01:50.000 --> 00:02:04.000
이 경우, 우리는 클라이언트 플레이어가 CDN1의 6Mbps 변형에 문제가 있었기 때문에 다변형 재생 목록의 순서에 따라 CDN1의 다음 3Mbps 변형으로 이동했다는 것을 알 수 있습니다.

00:02:04.000 --> 00:02:18.000
불행히도 CDN1의 3Mbps 변형도 실패하면, 클라이언트 플레이어는 CDN1의 변형 없이 남겨질 것이며, CDN2의 6Mbps 변형으로 이동할 것이다.

00:02:18.000 --> 00:02:22.000
그것은 대체할 변형이 없을 때까지 이것을 계속 할 수 있다.

00:02:22.000 --> 00:02:39.000
그러나 재생 목록 작성 서버가 대체 변형의 순서를 제어할 수 있지만, 이러한 제어는 고객이 다변형 재생 목록을 요청하는 시점에서만 발생하며, 재생 목록이 전달되면 대체 순서를 변경할 방법이 없습니다.

00:02:39.000 --> 00:02:42.000
이것이 콘텐츠 스티어링이 그림에 들어오는 곳이다.

00:02:42.000 --> 00:02:50.000
콘텐츠 스티어링을 통해 스트리밍 공급자는 이제 다른 CDN 호스트와 함께 변형을 Pathways로 그룹화할 수 있습니다.

00:02:50.000 --> 00:02:55.000
오류 대체 행동은 이제 콘텐츠 스티어링을 위해 표준화되었다.

00:02:55.000 --> 00:02:57.000
경로는 선호도에 따라 정렬된다.

00:02:57.000 --> 00:03:05.000
이 예에서, 상단의 CDN1 경로는 CDN2와 CDN3에 이어 가장 선호된다.

00:03:05.000 --> 00:03:13.000
스트리밍 공급자는 또한 스티어링 서버를 호스팅하여 각 클라이언트 플레이어에 대한 스티어링 매니페스트를 생성합니다.

00:03:13.000 --> 00:03:23.000
스티어링 매니페스트는 패스웨이 우선 순위의 규칙을 정의하므로, 플레이어는 변형 스트림 사이에서 선택하고 대체하는 규칙을 따를 수 있습니다.

00:03:23.000 --> 00:03:31.000
예를 들어 스트리밍 제공 업체가 CDN1에서 CND2로 트래픽의 일부를 오프로드하려고 한다고 가정해 봅시다.

00:03:31.000 --> 00:03:48.000
새로운 Pathway 우선 순위 규칙으로 스티어링 매니페스트를 생성할 것이며, CDN1에서 플레이하는 클라이언트 플레이어가 스티어링 매니페스트 업데이트를 요청할 때, 스티어링 서버는 규칙 변경과 함께 준비된 스티어링 매니페스트를 클라이언트에게 보낼 수 있습니다.

00:03:48.000 --> 00:03:55.000
클라이언트는 새로운 경로 우선 순위 규칙을 구문 분석하고 보고 재생 세션에 적용할 것이다.

00:03:55.000 --> 00:04:07.000
이 경우 규칙은 경로 CDN1과 CDN2 사이의 기본 설정 순서를 변경하여 클라이언트 플레이어가 CDN2에서 즉시 전환하고 재생할 수 있도록 합니다.

00:04:07.000 --> 00:04:20.000
그런 다음, 실패의 경우, 클라이언트는 먼저 현재 경로 내에서 대체 변형을 소진하고, 현재 경로 우선 순위에 따라 가장 선호하는 경로로 대체합니다.

00:04:20.000 --> 00:04:30.000
이 경우, CDN2의 모든 변형이 오류가 발생한 경우, 클라이언트 플레이어는 다음으로 선호하는 경로인 CDN1의 변형 중에서 선택할 수 있습니다.

00:04:30.000 --> 00:04:37.000
콘텐츠 스티어링을 글로벌 규모에 적용하면 더 큰 지역 부하 균형 문제를 해결할 수 있습니다.

00:04:37.000 --> 00:04:44.000
우리의 스트리밍 서비스 제공 업체가 두 개의 주요 CDN 제공 업체와 함께 전 세계에서 운영되고 있다고 가정해 봅시다.

00:04:44.000 --> 00:04:56.000
이러한 CDN을 전 세계 클라이언트 플레이어에게 할당하기 위해, 스티어링 서버는 두 가지 다른 스티어링 매니페스트를 준비했는데, 하나는 CDN1을 선호하고 다른 하나는 CDN2를 선호합니다.

00:04:56.000 --> 00:05:10.000
그런 다음 고객 플레이어의 지역에 따라 이러한 스티어링 매니페스트를 배포하여 북미와 남미는 CDN1을 활용하고 나머지 세계는 CDN2를 활용합니다.

00:05:10.000 --> 00:05:18.000
세계 지도의 상단에서 우리는 CDN1과 CDN2 사이의 트래픽 분포를 나타내는 수평 스택 막대를 보여준다.

00:05:18.000 --> 00:05:24.000
현재, 두 CDN 모두 전 세계 트래픽의 절반을 제공하고 있다.

00:05:24.000 --> 00:05:34.000
그러나, 시간이 지남에 따라 스트리밍 서비스 제공 업체는 글로벌 일광 변화로 인해 CDN2에 대한 트래픽이 크게 증가하는 것을 관찰했다.

00:05:34.000 --> 00:05:39.000
동시에, CDN1을 향한 교통량은 감소하고 있다.

00:05:39.000 --> 00:05:44.000
그래서 스트리밍 제공 업체는 CDN1을 사용하도록 유럽 지역을 조종하기로 결정했다.

00:05:44.000 --> 00:05:52.000
그것은 CDN1을 선호하는 스티어링 매니페스트를 준비하여 유럽 지역의 고객에게 보냅니다.

00:05:52.000 --> 00:05:58.000
이제 그 지역의 고객 플레이어들은 CDN2에서 오프로드하는 CDN1로 트래픽을 조종할 것이다.

00:05:58.000 --> 00:06:01.000
그리고 전 세계 교통은 더 균형이 잡혀졌다.

00:06:01.000 --> 00:06:07.000
이제 콘텐츠 스티어링을 지원하는 HLS 다변형 재생 목록을 살펴봅시다.

00:06:07.000 --> 00:06:16.000
먼저 이 다변형 재생 목록이 콘텐츠 스티어링을 사용한다는 것을 나타내는 EXT-X-CONTENT-STEERING 태그를 봅니다.

00:06:16.000 --> 00:06:25.000
그런 다음 클라이언트가 스티어링 매니페스트 업데이트를 요청해야 하는 위치를 지정하는 SERVER-URI 속성이 있습니다.

00:06:25.000 --> 00:06:33.000
그런 다음 다음 PATHWAY-ID 속성은 시작 시 재생을 위해 선택할 초기 경로를 지정합니다.

00:06:33.000 --> 00:06:40.000
그런 다음 각 변형 스트림을 Pathways로 그룹화하기 위해 PATHWAY-ID 속성이 부여되었다는 것을 알 수 있습니다.

00:06:40.000 --> 00:06:48.000
각 경로는 동일한 변형 스트림 세트를 가져야 하며, 차이점은 URI와 미디어 그룹 이름입니다.

00:06:48.000 --> 00:06:53.000
이 예에서, 우리는 CDN1과 CDN2라는 두 개의 경로가 있다.

00:06:53.000 --> 00:07:02.000
둘 다 6Mbps 고해상도 비디오와 3Mbps 저해상도 비디오의 두 가지 변형 스트림이 포함되어 있습니다.

00:07:02.000 --> 00:07:06.000
유일한 차이점은 그들의 URI 호스트 이름이다.

00:07:06.000 --> 00:07:13.000
또한 URI 호스트 이름이 다른 각 경로에 대해 두 개의 별개의 오디오 그룹이 있습니다.

00:07:13.000 --> 00:07:17.000
다음은 JSON 문서인 스티어링 매니페스트의 예입니다.

00:07:17.000 --> 00:07:22.000
PATHWAY-PRIORITY 필드는 기본 설정 순서의 경로 ID 목록입니다.

00:07:22.000 --> 00:07:27.000
그래서 이 경우, 수신 클라이언트 플레이어는 CDN2보다 CDN1을 선호할 것이다.

00:07:27.000 --> 00:07:34.000
이것은 스티어링 서버가 유럽 고객에게 CDN1을 선호할 수 있도록 제공할 스티어링 매니페스트입니다.

00:07:34.000 --> 00:07:42.000
스티어링 매니페스트에서 PATHWAY-PRIORITY 필드를 변경함으로써, 스티어링 서버는 모든 클라이언트에 대한 스티어링 정책을 제어할 수 있습니다.

00:07:42.000 --> 00:07:45.000
그것은 콘텐츠 스티어링에 대한 간략한 개요를 위한 것입니다.

00:07:45.000 --> 00:07:56.000
좀 더 심층적인 설명을 원하신다면, 제 WWDC21 토크를 자유롭게 확인하세요. HLS 콘텐츠 스티어링으로 글로벌 스트리밍 가용성을 개선하세요.

00:07:56.000 --> 00:08:03.000
그러나, 더 확장 가능하고 신뢰할 수 있는 스트리밍 서비스를 지원하기 위한 우리의 여정은 여기서 멈추지 않습니다.

00:08:03.000 --> 00:08:16.000
요즘 기업들은 과거에 상상할 수 없었던 것을 달성하기 위해 더 다재다능한 클라우드 인프라와 도구에 접근할 수 있으며, 우리는 기술의 도약을 따라잡아야 한다.

00:08:16.000 --> 00:08:27.000
우리의 스트리밍 서비스 제공 업체가 올해 더 커졌고, 성장하는 사용자 기반의 동적 트래픽 요구를 충족시키기 위한 새로운 방법을 실험하고 있다고 가정해 봅시다.

00:08:27.000 --> 00:08:35.000
그들은 시간적 트래픽 스트레스를 완화하기 위해 실시간으로 CDN 서버를 동적으로 생성함으로써 그것을 하고 있다.

00:08:35.000 --> 00:08:41.000
예를 들어, 그것은 CDN3의 새로운 함대를 생성하고 기존 고객에게 광고할 수 있다.

00:08:41.000 --> 00:08:53.000
그러나 여기서의 과제는 동적으로 생성된 CDN 정보가 기존 클라이언트가 요청했을 때 다변형 재생 목록에 포함되지 않는다는 것입니다. 왜냐하면 그것은 존재하지 않았기 때문입니다.

00:08:53.000 --> 00:08:59.000
그래서 우리는 고객 플레이어들에게 새로운 CDN의 출현을 알리기 위해 무엇을 할 수 있을까요?

00:08:59.000 --> 00:09:03.000
이것은 우리의 새로운 패스웨이 복제 기능이 유용한 곳이다.

00:09:03.000 --> 00:09:11.000
WWDC21에 도입된 콘텐츠 스티어링 1.2와 역호환성이 있는 새로운 기능입니다.

00:09:11.000 --> 00:09:20.000
경로 복제를 통해 스티어링 서버는 컴팩트한 매니페스트 정의를 사용하여 기존 고객에게 새로운 CDN을 발표할 수 있습니다.

00:09:20.000 --> 00:09:27.000
경로가 구조와 동일하다고 가정함으로써, 기존 경로를 복사하고 수정하여 새로운 경로를 만들 수 있다.

00:09:27.000 --> 00:09:31.000
통로의 구조를 살펴봅시다.

00:09:31.000 --> 00:09:35.000
통로는 하나 이상의 변형 스트림으로 구성되어 있다.

00:09:35.000 --> 00:09:39.000
각 변형 스트림은 오직 하나의 경로에만 있을 수 있다.

00:09:39.000 --> 00:09:45.000
PATHWAY-ID 속성을 지정하지 않으면, 암시적으로 기본 "점" 경로에 속합니다.

00:09:45.000 --> 00:09:54.000
각 변형 스트림은 오디오, 자막 및 자막이 없는 각 미디어 유형에 대해 0개 또는 하나의 미디어 그룹을 참조할 수 있습니다.

00:09:54.000 --> 00:09:59.000
각 미디어 그룹은 다른 경로에서도 여러 변형 스트림에 의해 참조될 수 있다.

00:09:59.000 --> 00:10:10.000
기존 경로에서 새로운 경로를 복제할 때, 변형 스트림뿐만 아니라 참조된 미디어 그룹도 복제해야 합니다.

00:10:10.000 --> 00:10:19.000
그런 다음, 그것을 새로운 Pathway로 만들기 위해, 우리는 새로 복제된 Pathway의 변형과 변환 스트림의 URI를 수정해야 합니다.

00:10:19.000 --> 00:10:25.000
예를 들어 복제된 Pathway에서 6Mbps 변형 스트림을 봅시다.

00:10:25.000 --> 00:10:30.000
이 특정 변형 스트림이 그림과 같이 URI를 가지고 있다고 가정해 봅시다.

00:10:30.000 --> 00:10:38.000
새로운 경로의 URI가 되도록 수정하려면, 가장 유연한 방법은 전체 URI 라인을 전체적으로 교체하는 것입니다.

00:10:38.000 --> 00:10:44.000
이것은 우리가 각 복제된 경로에 대한 스티어링 매니페스트에 전체 URI 세트를 저장해야 한다는 것을 의미합니다.

00:10:44.000 --> 00:10:48.000
하지만, 실제로 우리는 보통 그것보다 더 잘할 수 있다.

00:10:48.000 --> 00:10:56.000
업계에서는 동일한 URI 경로 구조를 유지하는 여러 CDN에 스트리밍 자산을 배포하는 것이 일반적이다.

00:10:56.000 --> 00:11:03.000
그리고 동일한 URI에서 제공되는 자산은 동일한 URI 호스트 이름과 쿼리 매개 변수를 공유합니다.

00:11:03.000 --> 00:11:15.000
만약 그렇다면, 우리는 매니페스트에 호스트와 쿼리 매개 변수의 교체를 저장하고, 모든 복제된 URI의 구성 요소를 교체하기만 하면 새로운 경로를 얻었다.

00:11:15.000 --> 00:11:21.000
매니페스트 객체에서 패스웨이 클론을 어떻게 정의할 수 있는지 살펴봅시다.

00:11:21.000 --> 00:11:25.000
우리는 Pathway Clone 객체 배열과 함께 PATHWAY-CLONES 필드를 추가했습니다.

00:11:25.000 --> 00:11:31.000
각 패스웨이 클론 객체는 기존 패스웨이에서 복제된 새로운 패스웨이를 정의합니다.

00:11:31.000 --> 00:11:35.000
이 예에서, 우리는 하나의 패스웨이 클론 객체를 가지고 있다.

00:11:35.000 --> 00:11:41.000
BASE-ID 필드는 CDN1을 복제할 원래 경로로 지정합니다.

00:11:41.000 --> 00:11:46.000
ID 필드는 새로운 경로 ID를 CDN3로 지정합니다.

00:11:46.000 --> 00:11:54.000
다음으로, URI 교체 규칙의 객체가 있는 URI-REPLACEMENT 필드가 있습니다.

00:11:54.000 --> 00:12:06.000
이 예에서, 우리는 호스트 부분을 대체하고 스트림 URI의 쿼리 매개 변수를 각각 삽입하거나 교체해야 하는 호스트 및 쿼리 매개 변수 교체 규칙을 사용하고 있습니다.

00:12:06.000 --> 00:12:21.000
이 경우, 우리는 호스트 부분을 cdn3.example.com으로 교체하고, 쿼리 매개 변수 "foo"를 값 xyz로, 쿼리 매개 변수 "bar"를 값 123으로 추가하거나 설정합니다.

00:12:21.000 --> 00:12:27.000
이전 예제 URI에 호스트 및 매개 변수 URI 교체를 적용해 봅시다.

00:12:27.000 --> 00:12:34.000
먼저 우리는 다변형 재생 목록의 URI를 기반으로 해결된 변형 스트림 URI를 가지고 있습니다.

00:12:34.000 --> 00:12:38.000
스티어링 매니페스트에서 우리는 호스트 URI 대체 규칙을 사용했다.

00:12:38.000 --> 00:12:51.000
그래서 URI의 호스트 부분을 위해, 우리는 그것을 cdn3.example.com으로 바꾸고, 새로운 URI를 위한 새로운 호스트 부분을 얻었다.

00:12:51.000 --> 00:12:59.000
그런 다음 복제된 URI에서 URI 경로 구성 요소를 유지합니다.

00:12:59.000 --> 00:13:03.000
마지막으로, 우리는 URI 쿼리 매개 변수 교체 규칙을 적용합니다.

00:13:03.000 --> 00:13:08.000
여기서 우리는 원래 URI에 존재하기 때문에 "foo" 매개 변수를 대체합니다.

00:13:08.000 --> 00:13:13.000
그런 다음 새로운 매개 변수이기 때문에 "바" 매개 변수를 추가합니다.

00:13:13.000 --> 00:13:19.000
그런 다음 새 URI의 대체된 쿼리 매개 변수 부분이 있습니다.

00:13:19.000 --> 00:13:27.000
최종 결과 URI는 새로운 Pathway CDN3의 6Mbps 변형 스트림의 URI가 될 것이다.

00:13:27.000 --> 00:13:34.000
우리는 복제된 Pathway의 나머지 변형과 변환에 동일한 URI 대체 규칙을 적용합니다.

00:13:34.000 --> 00:13:44.000
3Mbps 변형 스트림의 경우, 우리는 원래 URI를 가지고 있으며, 새로운 URI를 얻기 위해 호스트 및 매개 변수 교체 규칙을 적용합니다.

00:13:44.000 --> 00:13:48.000
우리는 오디오와 자막 연주에 대해서도 똑같이 한다.

00:13:48.000 --> 00:13:58.000
모든 복제된 변형과 변환에 URI 교체 규칙을 적용한 후, 새로운 CDN 호스트에서 제공하는 새로운 경로가 있습니다.

00:13:58.000 --> 00:14:13.000
또 다른 예를 들어 스트리밍 공급자가 다른 낮은 비트레이트 스트림과 다른 특별히 조정되고 가장 빠른 CDN 호스트에서 가장 높은 대역폭의 비디오 및 오디오 스트림을 제공하고 싶다고 가정해 봅시다.

00:14:13.000 --> 00:14:18.000
이것은 안정적인 ID당 URI 대체 규칙이 유용한 곳이다.

00:14:18.000 --> 00:14:27.000
HLS에서, 변형과 변환 스트림을 식별하기 위해 STABLE-VARIANT-ID와 STABLE-RENDITION-ID 속성이 도입되었다.

00:14:27.000 --> 00:14:41.000
다변형 재생 목록에 설정함으로써, 우리는 나중에 경로 클론 객체의 안정적인 ID로 스티어링 매니페스트에서 각 변형 또는 변환 스트림을 참조하고 스트림당 URI 교체 규칙을 할당할 수 있습니다.

00:14:41.000 --> 00:14:51.000
이러한 특정 특수 URI 교체 규칙을 정의하려면, 다변형 재생 목록의 모든 변형 및 변환 스트림에 안정적인 ID를 할당해야 합니다.

00:14:51.000 --> 00:15:05.000
예를 들어, 우리는 STABLE-RENDITION-ID "audio-en-ac3"를 AC3 영어 오디오에 할당하고, STABLE-VARIANT-ID "video-4k-dv"를 25Mbps 4K 변형 스트림에 할당합니다.

00:15:05.000 --> 00:15:13.000
그런 다음 스티어링 매니페스트에서 안정적인 ID를 참조하여 두 가지 유연한 교체 규칙을 추가할 수 있습니다.

00:15:13.000 --> 00:15:24.000
변형 스트림의 경우, URI 레코드에 STABLE-VARIANT-ID 사전과 함께 "URI-REPLACEMENT" 객체에 "PER-VARIANT-URIS" 필드를 추가했습니다.

00:15:24.000 --> 00:15:33.000
여기서 우리는 변형 스트림의 URI를 STABLE-VARIANT-ID "video-4k-dv"로 다음 URI로 대체하도록 지정합니다.

00:15:33.000 --> 00:15:44.000
변환 스트림의 경우, 우리는 URI 레코드에 STABLE-RENDITION-ID 사전과 함께 "URI-REPLACEMENT" 객체에 "PER-RENDITION-URIS" 필드를 추가했습니다.

00:15:44.000 --> 00:15:55.000
여기서 우리는 변환 스트림의 URI를 STABLE-RENDITION-ID "audio-en-ac3"로 다음 URI로 대체하도록 지정합니다.

00:15:55.000 --> 00:16:20.000
여기서 우리는 URI 교체를 적용한 후, 4K 비디오 변형과 AC3 영어 오디오 변환을 제외한 모든 스트림이 새로운 cdn3.exmaple.com 호스트에서 제공되고 있으며, 여기에는 faster.example.com 호스트를 가리키는 특별한 URI 교체 규칙과 다른 URI 경로 및 쿼리 구성 요소가 있습니다.

00:16:20.000 --> 00:16:35.000
Pathway Cloning을 사용하면 스트리밍 공급자가 동적으로 새로운 CDN 함대를 생성할 때, 이 예에서 CDN3, 스티어링 서버는 스티어링 매니페스트에서 기존 클라이언트를 위한 패스웨이 클론으로 CDN3를 추가할 수 있습니다.

00:16:35.000 --> 00:16:44.000
또한 CDN3를 주요 경로로 우선시하기 위해 유럽과 같은 지역을 선택할 수 있다.

00:16:44.000 --> 00:16:51.000
유럽의 고객들이 스티어링 매니페스트 업데이트를 받았을 때, 그들은 CDN3로 트래픽을 안내할 것이다.

00:16:51.000 --> 00:17:06.000
이 이야기의 마지막 부분에서, 로드 밸런싱을 위해 클라이언트 플레이어 트래픽을 조종하기 위해 구체적인 예와 함께 서버 로직을 구현하는 방법을 설명하기 위해 Steering Server의 세부 사항으로 초점을 전환합시다.

00:17:06.000 --> 00:17:16.000
클라이언트 플레이어의 늪을 관리하고 조율하고 분할된 규칙을 적용하는 한 가지 방법은 모든 클라이언트를 버킷에 넣고 버킷 수준에서 규칙을 적용하는 것입니다.

00:17:16.000 --> 00:17:23.000
클라이언트 세션 상태를 유지하지 않고 스티어링 서버에서 버킷을 구현하는 것은 간단합니다.

00:17:23.000 --> 00:17:31.000
클라이언트 플레이어가 초기 스티어링 매니페스트를 요청할 때, 스티어링 서버 URI에서 HTTP GET 요청을 합니다.

00:17:31.000 --> 00:17:37.000
그런 다음 서버는 12개의 가능한 버킷 중에서 균일한 난수를 생성합니다.

00:17:37.000 --> 00:17:50.000
스티어링 매니페스트를 반환할 때, 서버는 버킷 번호(이 경우 7)를 RELOAD-URI 속성에 추가하며, 이는 클라이언트 플레이어의 다음 요청에 대한 스티어링 매니페스트 URI가 될 것입니다.

00:17:50.000 --> 00:18:03.000
따라서 다음에 클라이언트 플레이어가 스티어링 매니페스트를 요청할 때, 요청 매개 변수에 버킷 번호를 전달할 것이며, 서버는 이를 추출하고 버킷 번호에 따라 스티어링 규칙을 적용할 수 있습니다.

00:18:03.000 --> 00:18:06.000
이제 간단한 이중 분할 스티어링 규칙을 살펴봅시다.

00:18:06.000 --> 00:18:15.000
이 경우, 우리는 트래픽의 50%가 CDN1을 선호하고 나머지 50%의 트래픽이 CDN2를 선호하도록 조정하고 싶습니다.

00:18:15.000 --> 00:18:18.000
우리는 버킷 번호의 관점에서 그러한 규칙을 쓸 수 있다.

00:18:18.000 --> 00:18:32.000
클라이언트 플레이어의 버킷 번호가 처음 6개의 버킷에 떨어지면, 우리는 PATHWAY-PRIORITY가 CDN1을 선호하는 스티어링 매니페스트를 반환하고, 그렇지 않으면 PATHWAY-PRIORITY가 CDN2를 선호하는 것을 반환합니다.

00:18:32.000 --> 00:18:43.000
고객은 버킷에 균일하게 할당되기 때문에, 12개의 버킷을 6개의 버킷으로 나누면 트래픽을 균등하게 분할할 수 있습니다.

00:18:43.000 --> 00:18:49.000
이제 CDN3라고 불리는 새로운 경로가 동적으로 생성되었다고 가정해 봅시다.

00:18:49.000 --> 00:18:57.000
스티어링 서버는 경로 복제를 사용하여 다중 변형 재생 목록에서 모르는 고객에게 광고할 수 있습니다.

00:18:57.000 --> 00:19:08.000
Pathway Cloning으로 스티어링 매니페스트를 구성할 때 한 가지 일반적인 질문은 PATHWAY-CLONES 배열에 포함되어야 하는 경로 세트를 결정하는 것입니다.

00:19:08.000 --> 00:19:13.000
규칙은 고객의 다변형 재생 목록에 없는 경로를 복제하는 것이다.

00:19:13.000 --> 00:19:24.000
그러나, 클라이언트 세션에 대한 서버 측 상태를 유지하지 않고, 스티어링 서버는 클라이언트의 다변형 재생 목록에서 경로 세트를 어떻게 알 수 있습니까?

00:19:24.000 --> 00:19:35.000
이를 수행하는 한 가지 방법은 다중 변형 재생 목록을 생성하는 동안 초기 스티어링 서버 URI에 Pathways 세트를 쿼리 매개 변수로 포함하는 것입니다.

00:19:35.000 --> 00:19:42.000
이 경우, 다변형 재생 목록에는 CDN1과 CDN2의 두 가지 경로가 포함되어 있습니다.

00:19:42.000 --> 00:19:48.000
따라서, 그것은 그것들을 SERVER-URI 속성에 쿼리 매개 변수로 포함한다.

00:19:48.000 --> 00:19:56.000
그런 다음 클라이언트 플레이어는 스티어링 서버로 매개 변수를 전달하여 URI로 요청을 보낼 것이다.

00:19:56.000 --> 00:20:03.000
그런 다음 스티어링 서버는 클라이언트의 다변형 재생 목록에서 경로 세트로 매개 변수를 추출할 수 있습니다.

00:20:03.000 --> 00:20:13.000
그런 다음 클라이언트의 다변형 재생 목록에서 Pathways 세트와 함께 사용 가능한 Pathways 세트를 빼서 복제할 Pathways 세트를 계산할 수 있습니다.

00:20:13.000 --> 00:20:31.000
이 경우, 사용 가능한 경로는 CDN1, 2, 3이며, 클라이언트의 다변형 재생 목록의 경로는 CDN1과 CDN2이므로 PATHWAY-CLONES 배열에 포함되어야 하는 경로는 CDN3입니다.

00:20:31.000 --> 00:20:38.000
또한 사용 가능한 세 가지 경로가 있을 때 스티어링 서버가 스티어링 규칙을 어떻게 바꿀 수 있는지 살펴봅시다.

00:20:38.000 --> 00:20:45.000
이 경우, 서버는 CDN1, 2, 3에서 클라이언트 트래픽을 균등하게 분할하려고 합니다.

00:20:45.000 --> 00:21:10.000
우리는 고객의 버킷 번호가 12개의 버킷 중 첫 번째 3분의 1에 해당하는 경우 CDN1을 선호하는 PATHWAY-PRIORITY를 반환하고, 고객의 버킷 번호가 두 번째 세 번째 범위에 속하는 경우 CDN2를 선호하는 PATHWAY-PRIORITY를 반환하고, 그렇지 않으면 CDN3를 선호하는 PATHWAY-PRIORITY를 반환함으로써 이 규칙

00:21:10.000 --> 00:21:15.000
이렇게 하면 각 Pathway는 고객 트래픽의 3분의 1을 제공할 것이다.

00:21:15.000 --> 00:21:23.000
우리가 다룬 모든 것을 통해, 당신은 이제 자신만의 동적 스티어링 규칙으로 스티어링 서버를 구축할 수 있는 완벽한 장비를 갖추었습니다.

00:21:23.000 --> 00:21:28.000
그렇게 하면 스트리밍 서비스의 신뢰성을 더욱 향상시킬 수 있습니다.

00:21:28.000 --> 00:21:32.000
그것이 올해 콘텐츠 스티어링의 업데이트를 위한 것입니다.

00:21:32.000 --> 00:21:43.000
아직 하지 않았다면, 더 다재다능하고 역동적인 트래픽 스티어링을 제공하기 때문에 콘텐츠 스티어링을 HLS CDN 대체 메커니즘으로 채택해 보세요.

00:21:43.000 --> 00:21:50.000
또한 서비스의 신뢰성을 향상시키기 위해 새로운 Pathway Cloning 기능을 활용하십시오.

00:21:50.000 --> 00:21:57.000
평소와 같이, 더 많은 기술적 세부 사항은 최신 IETF HLS 사양을 확인하세요.

00:21:57.000 --> 00:22:04.000
그리고 HTTP 라이브 스트리밍 도구를 사용하여 변경할 때 재생 목록을 검증하는 것을 잊지 마세요.

00:22:04.000 --> 00:22:13.000
마지막으로, 더 많은 질문이나 제안이 있다면, hls-interest@ietf.org로 언제든지 연락하세요.

00:22:13.000 --> 23:59:59.000
참여해 주셔서 감사드리며, 좋은 하루 보내세요.

