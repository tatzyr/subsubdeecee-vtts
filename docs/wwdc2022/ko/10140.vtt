WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:13.000
아담: 안녕하세요, 제 이름은 아담이고 저는 셰어플레이 팀의 엔지니어입니다.

00:00:13.000 --> 00:00:18.000
SharePlay의 새로운 사항과 앱에서 어떻게 채택할 수 있는지에 대해 이야기하게 되어 기쁩니다.

00:00:18.000 --> 00:00:24.000
우선, 우리는 당신의 앱에서 SharePlay를 시작하기 위한 몇 가지 새로운 API에 대해 이야기할 것입니다.

00:00:24.000 --> 00:00:28.000
다음으로, 우리는 흥미진진한 GroupSessionMessenger 업데이트에 들어갈 것입니다.

00:00:28.000 --> 00:00:34.000
마지막으로, SharePlay 경험을 구현하는 몇 가지 모범 사례.

00:00:34.000 --> 00:00:36.000
앱에서 SharePlay를 시작하세요.

00:00:36.000 --> 00:00:46.000
우리는 당신의 피드백을 듣고 전달했습니다. iOS 15.4부터 이제 새로운 API를 활용하여 기존 FaceTime 통화 없이 앱이 SharePlay를 시작할 수 있도록 할 수 있습니다.

00:00:46.000 --> 00:00:48.000
그래서 그게 어떻게 생겼는지 보자.

00:00:48.000 --> 00:00:52.000
그래서 이제 우리가 해야 할 일은 우리가 가장 좋아하는 SharePlay 앱을 찾는 것뿐입니다.

00:00:52.000 --> 00:00:54.000
음악 앱이라고 합시다.

00:00:54.000 --> 00:01:00.000
그리고 우리는 Viral Hits와 같이 SharePlay하고 싶은 노래를 찾아서 길게 누를 것이다.

00:01:00.000 --> 00:01:03.000
이제 상황에 맞는 메뉴에서, 이제 새로운 SharePlay 버튼이 있다는 것을 알 수 있습니다.

00:01:03.000 --> 00:01:07.000
그래서 나는 계속해서 그것을 누를 것이고, 그것은 사람들을 고르는 사람을 불러일으킨다.

00:01:07.000 --> 00:01:13.000
그래서 우리는 수를 선택하고 FaceTime 통화를 시작할 수 있습니다.

00:01:13.000 --> 00:01:17.000
그리고, 보시다시피, 우리는 이제 무대 활동과 함께 알약을 가지고 있습니다.

00:01:17.000 --> 00:01:24.000
그래서 만약 수가 합류한다면, 우리는 계속해서 시작할 수 있고, 우리는 그룹 세션을 가질 것이다.

00:01:24.000 --> 00:01:30.000
음, 나는 그게 다 꽤 멋지다고 생각했지만, 좀 더 자세하게 나누자.

00:01:30.000 --> 00:01:37.000
여기서 우리는 사용자가 공유 시트에서 SharePlay를 시작할 수 있으며, 이것이 작동하려면 무엇을 해야 하는지 궁금할 수 있습니다.

00:01:37.000 --> 00:01:58.000
음, 대답은 앱이 SharePlay를 받을 자격이 있다면 채택 흐름이 없는 이 버튼을 무료로 얻을 수 있지만, 사용자가 시스템 UI를 통해 GroupActivity를 시작할 수 없고 대신 SharePlay 콘텐츠를 선택하기 위해 앱과 다시 상호 작용해야 하기 때문에 최적의 사용자 경험은 아닙니다.

00:01:58.000 --> 00:02:03.000
그래서 당신이 당신의 앱에 우리의 새로운 API를 어떻게 채택할지 봅시다.

00:02:03.000 --> 00:02:13.000
답은 NSItemProvider에 GroupActivity를 등록한 다음 ItemProvider를 공유 시트에 제공하는 것만큼 간단합니다.

00:02:13.000 --> 00:02:17.000
여전히 SharePlay 버튼을 제공하지만 눈에 띄게 표시하지 않고 싶으신가요?

00:02:17.000 --> 00:02:18.000
문제없어.

00:02:18.000 --> 00:02:23.000
UIActivityViewController에서 allowsProminentActivity로 동작을 조정할 수 있습니다.

00:02:23.000 --> 00:02:27.000
허용ProminentActivity를 false로 설정하세요.

00:02:27.000 --> 00:02:31.000
아니면 앱에 SharePlay를 지원하지 않는 콘텐츠가 있다면 어떨까요?

00:02:31.000 --> 00:02:44.000
음, 우리는 SharePlay를 지원하기 위해 모든 것을 좋아하지만, UIActivityViewController에게 SharePlay 활동 유형을 제외하라고 말함으로써 SharePlay가 공유 시트에 나타나지 않도록 할 수 있습니다.

00:02:44.000 --> 00:02:55.000
그리고 앱 내에서 직접 버튼을 배치하려면, 새로운 API GroupActivitySharingController를 사용하여 UIViewController를 만든 다음 제시할 수 있습니다!

00:02:55.000 --> 00:03:05.000
누군가가 당신의 인앱 경험을 누르고 FaceTime 또는 SharePlay 세션을 시작하면, 상연된 GroupActivity를 활성화할 수 있는 기능이 표시됩니다.

00:03:05.000 --> 00:03:08.000
일단 활성화되면, 당신의 앱은 GroupSession을 받게 될 것입니다.

00:03:08.000 --> 00:03:12.000
그리고 네가 스스로에게 "잠깐, 아담, 방금 'Staged GroupActivity'라고 말했어?"라고 말한다면 걱정하지 마.

00:03:12.000 --> 00:03:14.000
왜, 그래. 응, 내가 그랬어!

00:03:14.000 --> 00:03:20.000
하지만 그 생각을 고수하고 나중에 모범 사례에 대해 이야기할 때 더 깊이 파고들자.

00:03:20.000 --> 00:03:25.000
지금은, DrawTogether 앱에서 이것을 어떻게 채택할 수 있는지 봅시다.

00:03:25.000 --> 00:03:27.000
이것은 우리의 DrawTogether 앱입니다.

00:03:27.000 --> 00:03:39.000
2021년 이전 WWDC 토크 "그룹 활동으로 맞춤형 경험 구축"과 같은 앱이므로, 아직 보지 못했다면, 확인해 보는 것을 강력히 추천합니다.

00:03:39.000 --> 00:03:48.000
이제 당신이 그것을 보았으니, 당신은 우리 앱에 공유 버튼이 없었다는 것을 기억할 것이지만, 당신이 GroupSession을 받을 자격이 있을 때 SharePlay 버튼이 있었습니다.

00:03:48.000 --> 00:04:00.000
isEligibleForGroupSession이 거짓일 때에도 버튼을 표시하고 이제 사용자가 SharePlay 세션을 시작할 수 있도록 그 동작을 수정합시다.

00:04:00.000 --> 00:04:02.000
그리고 이제 우리는 계속해서 그것이 작동하는 것을 볼 수 있다.

00:04:02.000 --> 00:04:05.000
계속해서 ControlBar 코드로 갑시다.

00:04:05.000 --> 00:04:13.000
이제, 여기서 볼 수 있듯이, 우리는 그룹 세션이 없고 그룹 세션을 받을 자격이 있는지 확인하는 '만약' 진술이 있습니다.

00:04:13.000 --> 00:04:24.000
그러니 계속해서 후자의 진술을 제거하고, 여기로 옮기자.

00:04:24.000 --> 00:04:30.000
그리고 이제 우리가 해야 할 일은 GroupActivity 공유 컨트롤러를 언제 제시해야 하는지 알 수 있도록 새로운 변수를 등록하는 것입니다.

00:04:30.000 --> 00:04:43.000
그래서 우리는 여기에 새로운 변수가 있을 것이고, 이제 그 변수가 true로 바뀔 때 처리해 봅시다.

00:04:43.000 --> 00:04:55.000
그리고 우리는 SwiftUI에서 GroupActivity 공유 컨트롤러를 제시할 수 있도록 지금 래퍼가 있어야 합니다.

00:04:55.000 --> 00:05:08.000
그리고 이제, 마침내, 우리가 해야 할 일은 우리가 GroupSession을 받을 자격이 없다면 isSharingControllerPresented를 true로 설정하는 'else' 문장을 갖는 것입니다.

00:05:08.000 --> 00:05:10.000
그리고 이제 우리는 우리의 코드를 실제로 볼 수 있다.

00:05:10.000 --> 00:05:14.000
그래서 우리는 DrawTogether 앱으로 갈 것입니다. 그리고 당신은 볼 수 있습니다, 우리는 SharePlay 버튼이 있습니다.

00:05:14.000 --> 00:05:19.000
그래서 우리는 이제 그것을 누를 수 있고, 우리는 피플 피커를 받았다.

00:05:19.000 --> 00:05:24.000
그리고 이제 우리는 당신의 앱에서 SharePlay를 시작할 수 있는 좋은 경험을 하게 되었습니다.

00:05:24.000 --> 00:05:26.000
하지만 그것이 우리가 만든 유일한 업데이트는 아니다.

00:05:26.000 --> 00:05:30.000
이제 우리가 만든 GroupSessionMessenger 업데이트에 대해 이야기해 봅시다.

00:05:30.000 --> 00:05:34.000
GroupSessionMessenger에 두 가지 흥미로운 새로운 업데이트가 있습니다.

00:05:34.000 --> 00:05:38.000
첫 번째 업데이트에서, 당신은 이 마법의 숫자에 부딪쳤을 수도 있습니다.

00:05:38.000 --> 00:05:43.000
GroupSessionMessenger를 통해 보낼 수 있는 페이로드 크기입니다.

00:05:43.000 --> 00:05:45.000
음, 더 이상은 아니야.

00:05:45.000 --> 00:05:51.000
우리는 이제 페이로드 크기가 256KB로 4배 더 커지도록 만들었습니다.

00:05:51.000 --> 00:05:57.000
이 변경으로, 당신의 앱은 당신의 메시지를 더 작은 메시지로 나누는 것에 대해 걱정할 필요가 없습니다.

00:05:57.000 --> 00:06:01.000
당신은 단순히 메시지를 보내고 훌륭한 경험을 만드는 데 집중할 수 있습니다.

00:06:01.000 --> 00:06:06.000
그리고 그것이 당신을 충분히 흥분시키지 않았다면, 나는 우리의 다음 업데이트가 그럴 것이라고 확신합니다.

00:06:06.000 --> 00:06:08.000
신뢰할 수 없는 메시지.

00:06:08.000 --> 00:06:13.000
GroupSessionMessenger의 일환으로, 이제 메시지의 신뢰성을 선택할 수 있습니다.

00:06:13.000 --> 00:06:20.000
이를 통해 원하는 경험에 따라 신뢰할 수 있는 메시징과 신뢰할 수 없는 메시징 중에서 선택할 수 있습니다.

00:06:20.000 --> 00:06:30.000
우리가 해야 할 일은 MessageReliability를 지정할 수 있는 GroupSessionMessenger의 새로운 이니셜라이저를 활용하는 것입니다.

00:06:30.000 --> 00:06:35.000
이제 API를 사용하는 방법을 이해했으므로, 경험은 어떻습니까?

00:06:35.000 --> 00:06:38.000
우리는 언제 신뢰할 수 없는 메시지를 사용하고 싶을까요?

00:06:38.000 --> 00:06:46.000
음, 그것은 사람들이 FaceTime과 SharePlay에서 실시간 작업을 수행하고 있는 훌륭한 질문입니다.

00:06:46.000 --> 00:06:48.000
그래서 한 세션에 세 명이 있다고 상상해 봅시다.

00:06:48.000 --> 00:06:51.000
에이미, 브라이언, 그리고 크리스.

00:06:51.000 --> 00:06:58.000
그들은 모두 세션에 참여하고 동기화되어 시간이 지남에 따라 우리 영화도 마찬가지입니다.

00:06:58.000 --> 00:07:04.000
하지만 에이미가 그 순간에 있는 특정 시간과 관련된 무언가를 하고 싶다면 어떻게 될까요?

00:07:04.000 --> 00:07:16.000
음, 신뢰할 수 있는 메시지를 사용한다면, 우리는 모든 장치에서 메시지가 수신될 것이라고 보장하지만, 그것이 그들이 기대하는 시간에 수신될 것이라는 것을 의미하지는 않습니다.

00:07:16.000 --> 00:07:23.000
예를 들어, 크리스는 메시지를 받았지만, 브라이언은 처음으로 메시지를 삭제했고 그 후에 제대로 받았다.

00:07:23.000 --> 00:07:26.000
하지만 기억해, 그 영화는 여전히 상영되고 있어.

00:07:26.000 --> 00:07:32.000
그래서 이제 우리는 에이미가 메시지를 반영하려고 의도했고 브라이언은 그것을 가지고 있지 않다.

00:07:32.000 --> 00:07:35.000
그는 나중에 그것을 받지만, 그 시점에서, 너무 늦었다.

00:07:35.000 --> 00:07:39.000
음, 이것은 신뢰할 수 없는 네트워킹을 위한 완벽한 사례이다.

00:07:39.000 --> 00:07:46.000
그것은 개발자인 당신이 다른 쪽에서 어떤 정보를 안정적으로 수신해야 하고 어떤 정보가 그렇지 않은지 알 수 있게 해준다.

00:07:46.000 --> 00:07:53.000
이것은 지연에 깊은 영향을 받는 사용자 경험을 가진 프로토콜을 설계할 때 이해해야 할 중요한 개념이다.

00:07:53.000 --> 00:08:05.000
신뢰할 수 없는 메시지는 UDP를 사용하고 있으며 관련된 각 메시지에 대한 대기 시간과 오버헤드가 적으며, 그 결과, 메시지를 보낼 때 더 많은 실시간 경험을 할 수 있습니다.

00:08:05.000 --> 00:08:15.000
이제 DrawTogether 앱에 이것을 어떻게 사용할 것인지에 대해 이야기해 봅시다. 특히 아름답게 그려진 웃는 얼굴로 WWDC '21의 이 화면을 기억할 수 있습니다.

00:08:15.000 --> 00:08:22.000
화면에 웃는 얼굴을 그릴 때 무슨 일이 일어나는지 조금 알아봅시다.

00:08:22.000 --> 00:08:30.000
우리 앱에는 GestureRecognizer를 듣고 변화를 알아차릴 때마다 메시지를 보내는 코드가 있습니다.

00:08:30.000 --> 00:08:38.000
이것은 우리가 웃는 얼굴을 그릴 때, 우리는 GestureRecognizer가 우리에게 주는 각 지점에 대해 끊임없이 새로운 메시지를 보내고 있다는 것을 의미했다.

00:08:38.000 --> 00:08:40.000
그건 많은 메시지야!

00:08:40.000 --> 00:08:48.000
음, 우리는 이제 더 원활한 그리기 경험을 만들기 위해 신뢰할 수 없는 메시지를 사용하도록 프로토콜을 변경할 수 있습니다.

00:08:48.000 --> 00:08:57.000
우리가 여기서 할 일은 GestureRecognizer로부터 업데이트를 받을 때마다 신뢰할 수 없는 메시지를 사용하여 새로 추가된 포인트를 보낼 수 있도록 하는 것입니다.

00:08:57.000 --> 00:09:05.000
제스처가 완료되면, 우리는 신뢰할 수 있는 메시지를 사용하고 고객이 놓친 포인트를 따라잡을 수 있도록 모든 포인트를 제공할 것입니다.

00:09:05.000 --> 00:09:13.000
이것은 우리가 신뢰할 수 없는 메시징이 제공하는 더 낮은 대기 시간을 활용하여 더 즉각적인 드로잉 경험을 할 수 있게 해준다.

00:09:13.000 --> 00:09:16.000
그래서 우리가 이것을 코드로 어떻게 할지 봅시다.

00:09:16.000 --> 00:09:20.000
그래서 먼저 우리의 메시지 파일로 가자.

00:09:20.000 --> 00:09:25.000
그리고 우리는 계속해서 우리의 새로운 메시지 유형을 정의할 것이다.

00:09:25.000 --> 00:09:32.000
보시다시피, 이 새로운 메시지 유형은 우리의 이전 메시지와 거의 동일하지만, 이번에는 우리의 뇌졸중에 대한 모든 요점을 포함할 것입니다.

00:09:32.000 --> 00:09:40.000
이제 우리는 캔버스 파일로 넘어갈 것이다.

00:09:40.000 --> 00:09:50.000
그리고 우리는 우리가 받게 될 새로운 메시지를 처리하기 위해 핸들러 기능을 설정해야 합니다.

00:09:50.000 --> 00:09:54.000
그리고 계속해서 신뢰할 수 없는 메신저를 만들어 봅시다.

00:09:54.000 --> 00:09:59.000
먼저, 우리는 변수를 만들 것이다.

00:09:59.000 --> 00:10:06.000
그리고 이제, 그냥 초기화하자.

00:10:06.000 --> 00:10:12.000
이제 우리는 완성된 스트로크 메시지를 들을 것이다.

00:10:12.000 --> 00:10:19.000
그리고 이전 메시지를 신뢰할 수 없는 메신저로 표시하세요.

00:10:19.000 --> 00:10:21.000
하지만 우리는 메시지를 보낼 방법이 필요해.

00:10:21.000 --> 00:10:26.000
그래서 우리는 마무리 스트로크로 갈 거야.

00:10:26.000 --> 00:10:31.000
그리고 우리는 계속해서 새로운 메시지 유형을 보낼 것입니다.

00:10:31.000 --> 00:10:39.000
그리고 신뢰할 수 없는 메신저를 사용하기 위해 모든 포인트를 보내는 오래된 기능을 바꾸자.

00:10:39.000 --> 00:10:41.000
그리고 이제 우리는 우리의 코드를 실제로 볼 수 있다.

00:10:41.000 --> 00:10:47.000
그래서 우리는 DrawTogether 앱으로 가서 그것이 얼마나 매끄러운지 볼 수 있습니다.

00:10:47.000 --> 00:10:49.000
그리고 그게 다야!

00:10:49.000 --> 00:10:55.000
그리고 이제, 약속한 대로, SharePlay 구현을 위한 몇 가지 모범 사례에 대해 이야기해 봅시다.

00:10:55.000 --> 00:11:00.000
당신은 이전 용어를 기억할 수 있습니다: Staged GroupActivity.

00:11:00.000 --> 00:11:02.000
그 용어는 당신의 앱에 대해 무엇을 의미하나요?

00:11:02.000 --> 00:11:07.000
음, 시나리오에 대해 이야기해 봅시다.

00:11:07.000 --> 00:11:12.000
왼쪽에 있는 장치인 "아담"이 오른쪽에 있는 장치인 "브라이언"으로 SharePlay를 시작한다고 가정해 봅시다.

00:11:12.000 --> 00:11:15.000
하지만 아담은 그들이 보고 있던 쇼를 재개하려고 노력하고 있다.

00:11:15.000 --> 00:11:24.000
그래서 누군가가 무대 그룹 활동을 활성화할 때, 우리는 다시 시작하기보다는 특정 시간에 재개된 쇼에 뛰어들고 싶습니다.

00:11:24.000 --> 00:11:31.000
"아담"은 우리가 쇼에 11분이 남았다는 것을 알았지만, 브라이언의 장치는 그렇지 않았기 때문에 이것은 문제를 제기한다.

00:11:31.000 --> 00:11:37.000
이것은 브라이언의 장치가 상연된 GroupActivity를 활성화하면 쇼가 다시 시작될 수 있다는 것을 의미한다.

00:11:37.000 --> 00:11:39.000
그래서 우리가 여기서 뭘 할 수 있을까?

00:11:39.000 --> 00:11:43.000
그것은 정말로 당신의 앱과 경험에 달려 있습니다.

00:11:43.000 --> 00:11:45.000
그래서 몇 가지 아이디어를 살펴보자.

00:11:45.000 --> 00:11:52.000
재생 케이스의 경우, 우리는 각 장치가 캐치업에서 초기 재생 상태를 다른 장치에 기여하도록 하고 싶을 것이다.

00:11:52.000 --> 00:12:05.000
이것은 아담의 장치가 재생 상태가 23초라는 것을 알았기 때문에, 그가 세션에 참여할 때, 그는 다른 모든 장치에 그가 의도한 재생 상태를 말할 것이고, 그들은 그것을 진실의 원천으로 사용할 것이라는 것을 의미한다.

00:12:05.000 --> 00:12:09.000
이 같은 원칙은 SharePlay를 사용하여 만드는 모든 경험에 적용됩니다.

00:12:09.000 --> 00:12:15.000
세션에 참여하는 각 사람은 세션에 대한 이해를 다른 사람들에게 기여해야 한다.

00:12:15.000 --> 00:12:18.000
이것은 세션이 P2P이고 소유자가 없기 때문이다.

00:12:18.000 --> 00:12:21.000
그래서 그것에 대해 조금 더 이야기해 봅시다.

00:12:21.000 --> 00:12:29.000
소유자 없는 세션은 이해하기 어려운 개념이지만, 적절한 SharePlay 경험을 설계할 때 중요하다.

00:12:29.000 --> 00:12:34.000
이 경우, 왼쪽에 있는 아담은 그의 세션을 애플 TV로 넘겨주고 싶어 한다.

00:12:34.000 --> 00:12:39.000
이로 인해 그의 핸드폰이 GroupSession을 떨어뜨리고 그의 TV가 합류하게 된다.

00:12:39.000 --> 00:12:42.000
하지만 우리가 소유권을 구현했다면 어떻게 될까요?

00:12:42.000 --> 00:12:46.000
음, 주인이 내려줬어, 그래서...

00:12:46.000 --> 00:12:50.000
그리고 기억하세요, 이것은 TV만을 위한 것이 아닙니다.

00:12:50.000 --> 00:12:53.000
iOS 16에서는 이제 FaceTime 핸드오프가 있습니다.

00:12:53.000 --> 00:12:59.000
그래서 아담은 계속해서 그의 아이패드에서 손을 떼고, 음, 같은 것이다.

00:12:59.000 --> 00:13:01.000
붐 그리고 그게 전부가 아니야.

00:13:01.000 --> 00:13:10.000
우리는 방금 누군가가 한 장치에서 다른 장치로 세션을 이동하려고 시도하는 사용자 흐름의 몇 가지 예에 대해 이야기했지만, 고려해야 할 다른 사례가 있습니다.

00:13:10.000 --> 00:13:14.000
좋아, 걱정하지 마, 우리는 한 가지 더 예시로 짧게 유지할 거야.

00:13:14.000 --> 00:13:17.000
이 화면은 조금 친숙해 보일 수 있다.

00:13:17.000 --> 00:13:19.000
그건 페이스타임 HUD야.

00:13:19.000 --> 00:13:23.000
하지만 SharePlay 버튼을 클릭하면 어떻게 되나요?

00:13:23.000 --> 00:13:30.000
이제 SharePlay를 종료하는 버튼이 표시됩니다. 이 버튼을 사용하면 SharePlay를 종료할 수 있습니다.

00:13:30.000 --> 00:13:38.000
이를 통해 모든 사람을 위한 SharePlay를 종료할 수 있으며, 본질적으로 애플리케이션을 대신하여 GroupSession에서 .end()를 호출하는 시스템입니다.

00:13:38.000 --> 00:13:47.000
이것은 그 장치가 소유자가 아니라면 .end()를 호출하지 않는 것에 대해 아무리 조심하더라도, 시스템은 여전히 당신을 대신하여 GroupSession에서 .end()를 호출할 수 있다는 것을 의미합니다.

00:13:47.000 --> 00:13:58.000
그러니 기억하세요, 이해하기 어려운 개념일 수 있지만, 당신의 지원서에 주인 의식이 없는지 확인하는 것은 전반적으로 훨씬 더 나은 경험을 얻을 수 있다는 것을 의미합니다.

00:13:58.000 --> 00:14:11.000
이제 전체 세션을 들었으니, 앱 내에서 SharePlay를 시작하기 위한 새로운 API를 채택하고, 앱이 신뢰할 수 없는 메시징을 사용하여 새롭고 짧은 대기 시간으로 통신할 수 있는 방법을 탐색하십시오.

00:14:11.000 --> 00:14:16.000
우리는 여러분 모두의 의견을 듣고 싶으니, 피드백 어시스턴트를 사용하여 피드백을 계속 제출해 주세요.

00:14:16.000 --> 00:14:22.000
나는 당신이 우리가 만든 모든 변화를 즐겼기를 바라며 우리는 당신이 만든 모든 놀라운 경험을 보기를 기대합니다.

00:14:22.000 --> 00:14:28.000
아직 하지 않았다면, 우리의 다른 WWDC 토크인 "훌륭한 SharePlay 경험 만들기"를 확인하세요.

00:14:28.000 --> 00:14:36.000
또는, 우리가 미디어 재생에 대해 만든 놀라운 개선 사항을 찾고 있다면, "SharePlay에서 광고 및 기타 틈새 표시"를 확인하세요.

00:14:36.000 --> 00:14:41.000
질문이 있으시면, GroupActivities labs and challenges에서 우리를 찾아주세요.

00:14:41.000 --> 00:14:45.000
언제나처럼, 시청해 주셔서 감사드리며, 멋진 WWDC를 보내십시오.

00:14:45.000 --> 23:59:59.000
우리는 네가 뭘 만드는지 빨리 보고 싶어.

