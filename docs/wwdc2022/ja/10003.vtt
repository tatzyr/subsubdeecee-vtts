WEBVTT

00:00:00.000 -> 00:00:03.000
♪まろやかなインストゥルメンタルヒップホップ音楽♪

00:00:03.000 -> 00:00:10.000
♪

00:00:10.000 -> 00:00:13.000
WWDC22の「Meet WeatherKit」へようこそ。

00:00:13.000 -> 00:00:17.000
私の名前はノバルで、ウェザーチームのエンジニアです。

00:00:17.000 -> 00:00:23.000
私たちは毎日気象データに依存しており、この情報を得る場所は重要です。

00:00:23.000 -> 00:00:42.000
ドアを出る前に傘を持参できるようにApple Watchで天気をチェックすることから、雨や霜を予測することで農家が輪作を計画するのに役立つ持続可能な農業、冬の嵐旅行の安全と準備まで、天候はすべての人に影響を与えます。

00:00:42.000 -> 00:00:48.000
正確な気象データは、気候変動の影響を受ける今日の世界でさらに重要になっています。

00:00:48.000 -> 00:00:55.000
そして、正確な予測にアクセスすることはこれまで以上に重要であり、それが私たちがWeatherKitを作った理由です。

00:00:55.000 -> 00:01:02.000
WeatherKitは、世界クラスのグローバル天気予報であるまったく新しいApple Weather Serviceを搭載しています。

00:01:02.000 -> 00:01:13.000
高解像度の気象モデルと機械学習と予測アルゴリズムを使用して、世界中のハイパーローカル天気予報を提供します。

00:01:13.000 -> 00:01:20.000
Apple Weather Serviceでは、多くのデータにアクセスでき、これらすべてはWeatherKitを通じて利用できます。

00:01:20.000 -> 00:01:24.000
正確な気象データには位置情報が必要です。

00:01:24.000 -> 00:01:28.000
そして、そのデータを非公開にすることは共通の責任です。

00:01:28.000 -> 00:01:37.000
プライバシーへのコミットメントに沿って、WeatherKitはユーザー情報を損なうことなくハイパーローカル予測を提供するように設計されています。

00:01:37.000 -> 00:01:48.000
場所は天気予報を提供するためにのみ使用され、個人識別情報に関連付けられておらず、共有または販売されることはありません。

00:01:48.000 -> 00:01:52.000
WeatherKitを使用すると、ユーザーのプライバシーを簡単に保護できます。

00:01:52.000 -> 00:01:58.000
今日は、新しいAPIを最大限に活用できるように、WeatherKitの詳細について詳しく説明します。

00:01:58.000 -> 00:02:05.000
まず、独自のApple Weather Serviceに裏打ちされたWeatherKitを通じて提供する利用可能なデータセットについて説明します。

00:02:05.000 -> 00:02:15.000
次に、あらゆるプラットフォームで気象データを取得できるように設計されたWeatherKitフレームワークとREST APIを使用して気象情報を要求する方法を紹介します。

00:02:15.000 -> 00:02:21.000
そして最後に、いくつかの追加の実装要件とベストプラクティスについて説明します。

00:02:21.000 -> 00:02:25.000
利用可能な気象データセットの概要から始めましょう。

00:02:25.000 -> 00:02:29.000
前述したように、WeatherKitで多くのデータにアクセスできます。

00:02:29.000 -> 00:02:33.000
では、各データセットについて話しましょう。

00:02:33.000 -> 00:02:38.000
現在の気象データセットは、要求された場所の「現在」の状態を説明しています。

00:02:38.000 -> 00:02:46.000
それは単一の時点を表し、UV指数、温度、風などの条件を含みます。

00:02:46.000 -> 00:02:53.000
分予報には、利用可能な場合、次の1時間の分ごとの降水条件が含まれています。

00:02:53.000 -> 00:02:58.000
このデータセットは、ドアを出るときに傘を持参するかどうかを決めるのに便利です。

00:02:58.000 -> 00:03:07.000
毎時予報は、現在の時刻から始まる予報のコレクションであり、最大240時間のデータを提供します。

00:03:07.000 -> 00:03:15.000
毎時予報の各時間には、湿度、視界、圧力、露点などの条件が含まれます。

00:03:15.000 -> 00:03:19.000
毎日の予報には、10日間の予報コレクションが含まれています。

00:03:19.000 -> 00:03:29.000
毎日の予報の毎日は、最高気温と最低気温、日の出、日没など、一日に関する情報を提供します。

00:03:29.000 -> 00:03:34.000
気象警報には、要求された場所に対して発行された悪天候警報が含まれています。

00:03:34.000 -> 00:03:41.000
このデータセットには、ユーザーを安全に保ち、情報を提供し、準備するための重要な情報が含まれています。

00:03:41.000 -> 00:03:49.000
そして最後に、過去の天気は過去から保存された天気予報を提供するので、気象データの傾向を見ることができます。

00:03:49.000 -> 00:03:56.000
毎時および毎日のリクエストに開始日と終了日を指定することで、履歴データにアクセスできます。

00:03:56.000 -> 00:03:59.000
これにより、多くのデータにアクセスできます。

00:03:59.000 -> 00:04:05.000
私たちは、歴史的な天気を使用できる重要でインパクトのある方法がたくさんあると思います。

00:04:05.000 -> 00:04:14.000
利用可能な豊富な気象データをすべて見たので、WeatherKit APIでこの気象データをリクエストする方法を説明します。

00:04:14.000 -> 00:04:21.000
Apple Weatherデータは、ネイティブフレームワークと一連のREST APIの両方から入手できます。

00:04:21.000 -> 00:04:27.000
まず、Swiftフレームワークで気象データにアクセスするのがいかに簡単かをお見せしましょう。

00:04:27.000 -> 00:04:29.000
必要なのは数行のコードだけです。

00:04:29.000 -> 00:04:33.000
そして、Swift Concurrencyでは、天気のリクエストは簡単です。

00:04:33.000 -> 00:04:37.000
まず、WeatherKitとCoreLocationをインポートします。

00:04:37.000 -> 00:04:43.000
次に、ウェザーサービスのエントリポイントとして、weatherServiceオブジェクトを作成します。

00:04:43.000 -> 00:04:48.000
関心のある場所の座標でCLLocationを作成します。

00:04:48.000 -> 00:04:52.000
ここでは、故郷のニューヨーク州シラキュースを使っています。

00:04:52.000 -> 00:04:59.000
次に、weatherServiceインスタンスでweather(for:)に電話し、上記の場所に渡します。

00:04:59.000 -> 00:05:08.000
通話が完了すると、この例では現在の温度やUVインデックスなど、アプリに必要な関連データにアクセスできます。

00:05:08.000 -> 00:05:18.000
Swiftで天気データをリクエストするのがいかに簡単かをお見せしたので、SwiftUIで構築している旅行アプリを使用している別の例を見てみましょう。

00:05:18.000 -> 00:05:22.000
このセッションに関連付けられているリンクから、完了したプロジェクトを取得できます。

00:05:22.000 -> 00:05:29.000
再び旅行するのが本当に楽しみなので、次の旅行を計画するためにフライトプランナーアプリを作成することにしました。

00:05:29.000 -> 00:05:43.000
私はすでにフライトの旅程のロジックを作成しましたが、旅行中の各フライトをタップすると、各目的地の状態、降水量、風、気温を含む列を表示したいです。

00:05:43.000 -> 00:05:45.000
最初のステップは、WeatherKitを有効にすることです。

00:05:45.000 -> 00:05:53.000
開発者ポータルでApp IDを登録し、Capability and App Services t absを選択してWeatherKitを有効にします。

00:05:53.000 -> 00:05:57.000
次に、Xcodeで、WeatherKit機能をプロジェクトに追加します。

00:05:57.000 -> 00:06:04.000
その準備を邪魔にならないように、これらの各場所の気象データを取得する方法を説明させてください。

00:06:04.000 -> 00:06:11.000
ここでは、目的地の空港の緯度と経度を含む空港構造がすでに設定されています。

00:06:11.000 -> 00:06:22.000
共有天気サービスで天気(for:)に電話して1時間ごとの予報を取得し、空港の場所を通過します。

00:06:22.000 -> 00:06:29.000
データのサブセットが欲しいだけなので、リクエストに1時間ごとの予測を含めるように指定しました。

00:06:29.000 -> 00:06:36.000
では、アプリを作成して実行します。

00:06:36.000 -> 00:06:41.000
これで、各空港の条件を表示するために更新されたカスタムビューを見ることができます。

00:06:41.000 -> 00:06:51.000
このアプリを構築する際に次にする必要があるのは、アプリにデータソースのアトリビューションを表示することです。

00:06:51.000 -> 00:06:57.000
まず、attribution.legalPageURLプロパティからアトリビューションURLを取得します。

00:06:57.000 -> 00:07:03.000
これは、気象データソースに関する著作権情報を含む法的帰属ページへのリンクです。

00:07:03.000 -> 00:07:11.000
また、組み合わせたApple WeatherマークのURLを取得する必要があります。

00:07:11.000 -> 00:07:22.000
明るいバリエーションと暗いバリエーションの両方で利用できるので、colorScheme環境値をチェックして、SwiftUIビューが現在明るい外観または暗い外観で表示されているかどうかを確認します。

00:07:22.000 -> 00:07:29.000
最後に、私は再び構築して実行します。

00:07:29.000 -> 00:07:36.000
Apple WeatherマークとアトリビューションリンクがSFSafariViewControllerで開くことに注意してください。

00:07:36.000 -> 00:07:45.000
フライトプランナーアプリの天気を取得するために必要なのはそれだけであり、WeatherKit APIを使用して天気データをアプリに追加する方法はたくさんあります。

00:07:45.000 -> 00:07:48.000
しかし、それはネイティブフレームワークにすぎませんでした。

00:07:48.000 -> 00:07:55.000
REST APIは、Swiftフレームワークと同じ豊富な気象データを提供し、どのプラットフォームでも使用できます。

00:07:55.000 -> 00:08:02.000
この例では、weatherkit.apple.comのエンドポイントから気象警報をリクエストする方法を示しています。

00:08:02.000 -> 00:08:04.000
まず、認証トークンを要求します。

00:08:04.000 -> 00:08:07.000
もう少し詳しく話し合います。

00:08:07.000 -> 00:08:14.000
次に、気象オブジェクトを取得するには、まず特定の場所の必要な気象データセットを示すURLを作成します。

00:08:14.000 -> 00:08:19.000
ローカライズされた応答に適切な言語を必ず設定してください。

00:08:19.000 -> 00:08:24.000
次に、関心のある場所の緯度と経度を指定します。

00:08:24.000 -> 00:08:26.000
目的のデータセットを示します。

00:08:26.000 -> 00:08:33.000
このパラメータが複数形であることに気付くかもしれないので、それぞれをカンマで区切って一度にいくつか要求することができます。

00:08:33.000 -> 00:08:36.000
そして最後に、要求された場所の国コード。

00:08:36.000 -> 00:08:43.000
ただし、国コードは、気象警報データセットを要求する場合にのみ必要であることに注意してください。

00:08:43.000 -> 00:08:51.000
次に、上記のURLと認証トークンを使用して天気データを取得し、結果をJSONに変換します。

00:08:51.000 -> 00:08:55.000
それを使えば、気象警報とその詳細にアクセスできます。

00:08:55.000 -> 00:09:02.000
繰り返しになりますが、今回はRESTを通じてのみ、気象データへのアクセスがいかに簡単かを示す別の例です。

00:09:02.000 -> 00:09:08.000
必要なセットアップについてより深く掘り下げるには、authを再検討しましょう。

00:09:08.000 -> 00:09:14.000
WeatherKit REST APIでは、認証を処理するための追加の手順がいくつかあります。

00:09:14.000 -> 00:09:24.000
開発者ポータルでは、WeatherKitで有効になっている認証キーと関連するサービスIDを作成することで、WeatherKitリクエストへのアクセスを有効にします。

00:09:24.000 -> 00:09:29.000
秘密鍵は、開発者ポータルのキーセクションで作成できます。

00:09:29.000 -> 00:09:33.000
WeatherKitは、各リクエストで承認を検証するためにトークンを必要とします。

00:09:33.000 -> 00:09:40.000
したがって、サーバーでは、秘密鍵を使用して署名されたJSONウェブトークンを作成するためのトークンサービスを展開します。

00:09:40.000 -> 00:09:51.000
JSON Webトークン認証に精通している人にとって、これはかなり標準的な承認フローですが、初めて作業する場合に備えて、いくつかの詳細を共有させてください。

00:09:51.000 -> 00:09:59.000
署名付きトークンを生成するには、開発者ドキュメントに記載されているフィールドと値を含むヘッダーを作成します。

00:09:59.000 -> 00:10:11.000
次に、発行者、件名、有効期限などの項目を含む、WeatherKit REST APIとアプリケーションに固有の情報を含むペイロードを作成します。

00:10:11.000 -> 00:10:17.000
そして最後に、WeatherKit REST APIへのその後の呼び出しで使用するトークンに署名します。

00:10:17.000 -> 00:10:31.000
天気アラートの例に戻ると、署名サービスからトークンを要求し、天気データのHTTPリクエストのAuthorizationヘッダーにトークンを追加します。

00:10:31.000 -> 00:10:33.000
それがWeatherKit REST APIです。

00:10:33.000 -> 00:10:38.000
Apple Weather Serviceから気象データにアクセスするための2つの素晴らしい方法の1つ。

00:10:38.000 -> 00:10:47.000
最後に、App Storeで公開するか、REST APIを使用して任意のプラットフォームで公開する前に、いくつかの追加要件をカバーします。

00:10:47.000 -> 00:10:54.000
これらの各要件は、ネイティブのSwiftまたはREST APIを使用しているかどうかに関係なく適用されます。

00:10:54.000 -> 00:10:57.000
最初の要件は帰属です。

00:10:57.000 -> 00:11:04.000
私のデモで見たように、アトリビューションAPIからリンクを取得し、ネイティブまたはウェブアプリに表示する必要があります。

00:11:04.000 -> 00:11:07.000
2番目の要件はアトリビューションロゴです。

00:11:07.000 -> 00:11:15.000
WeatherKit APIは、アプリに表示する必要がある画像アセットを提供することで、これを簡単かつ便利にします。

00:11:15.000 -> 00:11:21.000
そして最後に、気象警報を表示する場合は、応答で提供されたイベントページにリンクする必要があります。

00:11:21.000 -> 00:11:27.000
だから、App Storeやウェブで公開するためにアプリを準備するのはとても簡単です。

00:11:27.000 -> 00:11:36.000
それがWeatherKitです。ハイパーローカル予測は、SwiftフレームワークとREST APIを通じてアクセス可能なApple Weather Serviceを強化しました。

00:11:36.000 -> 00:11:43.000
どちらも、アプリ、あらゆるプラットフォームやデバイスで気象データを使用する可能性の世界を開きます。

00:11:43.000 -> 00:11:45.000
このセッションを楽しんでいただければ幸いです。

00:11:45.000 -> 00:11:51.000
このセッションに関連するリンクをチェックアウトするだけでなく、ドキュメントを読んでプロジェクトをダウンロードしてください。

00:11:51.000 -> 00:11:53.000
そしてもちろん、私たちはあなたのフィードバックをお待ちしています。

00:11:53.000 -> 00:11:58.000
あなたがWeatherKitを使用するすべての創造的でインパクトのある方法を見るのが待ちきれません。

00:11:58.000 -> 00:12:01.000
ありがとう、そして素晴らしいWWDCを!

00:12:01.000 -> 23:59:59.000
♪

