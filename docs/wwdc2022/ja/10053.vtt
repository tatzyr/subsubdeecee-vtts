WEBVTT

00:00:00.000 -> 00:00:03.000
♪インストゥルメンタルヒップホップ音楽♪

00:00:03.000 -> 00:00:09.000
♪

00:00:09.000 -> 00:00:14.000
こんにちは。私の名前はアシュワスで、教育チームのエンジニアです。

00:00:14.000 -> 00:00:19.000
今日は、職場と学校でのAppleとのサインインについてお話しできることを嬉しく思います。

00:00:19.000 -> 00:00:24.000
このプレゼンテーションでは、この秋に導入する主な機能を取り上げます。

00:00:24.000 -> 00:00:30.000
まず、職場と学校でのAppleとのサインインとは何か、そしてそれがどのように機能するかを説明します。

00:00:30.000 -> 00:00:36.000
次に、Roster APIと、それを利用する方法の詳細について説明します。

00:00:36.000 -> 00:00:49.000
最後に、アクセス管理について話し、IT管理者が組織に代わってApple at Work &amp; SchoolとRoster APIでサインインへのアクセスを管理する方法について説明します。

00:00:49.000 -> 00:00:56.000
まず、あなたがよく知っているかもしれませんが、このセッションでレビューする重要な2つの概念を取り上げましょう。

00:00:56.000 -> 00:00:58.000
1つ目はAppleでサインインです。

00:00:58.000 -> 00:01:04.000
Appleでサインインは、ユーザーが自分のApple IDでアプリにサインインするための迅速かつ簡単な方法です。

00:01:04.000 -> 00:01:10.000
ユーザーは、タップするだけでアプリ内でアカウントを作成できます。

00:01:10.000 -> 00:01:12.000
2番目の概念は、管理対象Apple IDです。

00:01:12.000 -> 00:01:16.000
Apple IDと同様に、管理対象Apple IDはデバイスをパーソナライズするために使用されます。

00:01:16.000 -> 00:01:20.000
また、Appleのアプリやサービスにアクセスするためにも使用されます。

00:01:20.000 -> 00:01:30.000
Apple IDとは異なり、管理対象Apple IDは組織が所有し、Apple School ManagerまたはApple Business Managerを通じて管理されます。

00:01:30.000 -> 00:01:37.000
これらの定義を念頭に置いて、Appleとのサインインが管理対象Apple IDをサポートするように拡張されたことを共有できることを嬉しく思います。

00:01:37.000 -> 00:01:46.000
これで、Appleでサインインの迅速かつ簡単なサインイン体験のメリットを得ることができますが、管理対象Apple IDの管理機能を備えています。

00:01:46.000 -> 00:01:52.000
職場と学校での「Appleでサインイン」のユーザーエクスペリエンスを紹介するために、例を見てみましょう。

00:01:52.000 -> 00:01:54.000
これがSlackのログイン画面です。

00:01:54.000 -> 00:01:59.000
Appleでサインインを使用するには、ユーザーは[Appleで続行]をタップするだけです。

00:01:59.000 -> 00:02:06.000
Apple IDを使用すると、Appleでサインインするためのこのウェルカム画面が表示されます。

00:02:06.000 -> 00:02:15.000
一方、管理対象Apple IDを使用している場合は、職場と学校でAppleでサインインの歓迎画面が表示されます。

00:02:15.000 -> 00:02:18.000
ウェルカム画面の違いに気づくでしょう。

00:02:18.000 -> 00:02:23.000
アプリがアクセス制御を簡単に提供できるようにするとはどういう意味ですか?

00:02:23.000 -> 00:02:26.000
例を見てみましょう。 例を見てみましょう。

00:02:26.000 -> 00:02:38.000
Appleでサインインで個人のApple IDを使用すると、ユーザーはアカウント作成画面が表示され、名前を編集し、メールを共有するか非表示にするかを選択できます。

00:02:38.000 -> 00:02:47.000
しかし、組織的な文脈では、アプリが誰がログインし、どのレベルのアクセスを提供するかを理解することが重要です。

00:02:47.000 -> 00:02:53.000
この画面に示されている例では、ユーザーは職場でSlackにサインインしています。

00:02:53.000 -> 00:03:01.000
この従業員がどのSlackチャンネルに参加を許可すべきかを知るために、Slackはどのユーザーがサインインしているかを知る必要があります。

00:03:01.000 -> 00:03:12.000
これは、SlackがWork&amp;SchoolでAppleでサインインを使用するときに、アプリで共有された名前と電子メールを使用してアクセス制御を提供する例です。

00:03:12.000 -> 00:03:16.000
だから、これはユーザーが見ているものですが、これはあなたにとって何を意味しますか?

00:03:16.000 -> 00:03:25.000
これは、ユーザーが職場と学校でAppleでサインインを使用すると、名前と電子メールのフィールドに常にアクセスできることを意味します。

00:03:25.000 -> 00:03:34.000
クライアント側のアプリに取り組んでいる開発者なら、承認コントローラーを示すコードの例を見てみましょう。

00:03:34.000 -> 00:03:42.000
承認が成功すると、強調表示されたステートメントは、アプリが受信したフルネームと電子メールを示します。

00:03:42.000 -> 00:03:49.000
これは、承認要求にフルネームと電子メールの範囲が含まれていることを前提としています。

00:03:49.000 -> 00:04:01.000
ウェブ上でAppleとのサインインをサポートしている開発者の場合、サインイン方法を使用して承認プロセスを開始するコードの例を次に示します。

00:04:01.000 -> 00:04:07.000
承認が成功すると、サーバーはデータオブジェクトへの応答を返します。

00:04:07.000 -> 00:04:11.000
そのデータオブジェクトはこんな感じです。

00:04:11.000 -> 00:04:18.000
強調表示されたフィールドには、サインインしているユーザーの電子メールとフルネームが含まれています。

00:04:18.000 -> 00:04:21.000
ここでいくつかの点に注意することが重要です。

00:04:21.000 -> 00:04:30.000
このリリースでは、職場と学校でAppleでサインインするには、デバイスにサインインしている主要な管理対象Apple IDを使用します。

00:04:30.000 -> 00:04:39.000
私たちが示した画面の例は、デバイスのログインフロー用でしたが、ウェブフローもサポートされています。

00:04:39.000 -> 00:04:42.000
一部のアカウントでは、メールアドレスが提供されていない場合があります。

00:04:42.000 -> 00:04:47.000
たとえば、学校は若い生徒にメールアドレスを割り当てることはできません。

00:04:47.000 -> 00:04:54.000
メールアドレスが存在しないこのシナリオでは、アカウント作成画面がどのように見えるか見てみましょう。

00:04:54.000 -> 00:05:04.000
このユーザー、ファティマ・シルバはメールアドレスを持っていないので、アカウント作成画面にはフルネームのみが表示されます。

00:05:04.000 -> 00:05:11.000
すでにAppleでサインインを実装している場合は、管理対象Apple IDのサポートを追加するための作業は必要ありません。

00:05:11.000 -> 00:05:26.000
まだサポートを実装していない場合は、WWDC2020の「Appleでサインインを最大限に活用する」セッションと今年の「Appleでサインインする体験を強化する」セッションを見ることを強くお勧めします。

00:05:26.000 -> 00:05:35.000
それは職場と学校でのAppleでサインインであり、管理対象Apple IDへのサインインの迅速かつ簡単なサインイン体験をもたらします。

00:05:35.000 -> 00:05:37.000
では、Roster APIに飛び込みましょう。

00:05:37.000 -> 00:05:42.000
しかし、詳細に飛び込む前に、次のシナリオを考えてみましょう。

00:05:42.000 -> 00:05:45.000
あなたは教育分野の開発者です。

00:05:45.000 -> 00:05:48.000
あなたのアプリは学区で使用されています。

00:05:48.000 -> 00:05:51.000
アプリでAppleでサインインのサポートを実装しました。

00:05:51.000 -> 00:05:52.000
それは素晴らしい！

00:05:52.000 -> 00:05:58.000
学生、教師、スタッフは、管理対象Apple IDを使用してアプリにログインできます。

00:05:58.000 -> 00:06:04.000
このシナリオでは、あなたのアプリでは教師が課題や発表を生徒と共有することができます。

00:06:04.000 -> 00:06:14.000
これをサポートするために、IT管理者は学年の開始前に学生、教師、クラスをアプリに入力する必要があります。

00:06:14.000 -> 00:06:24.000
何百人または数千人の生徒がいる学校にとって、これらの記録を手作業で作成することは、すぐに時間がかかり、退屈なプロセスになります。

00:06:24.000 -> 00:06:28.000
この問題に対処するためにRoster APIを作成しました。

00:06:28.000 -> 00:06:36.000
Roster APIは、Apple School Managerのユーザーやクラスなどのリソースへのプログラムによるアクセスを提供します。

00:06:36.000 -> 00:06:42.000
これにより、IT管理者はこの情報をアプリにインポートするプロセスを自動化できます。

00:06:42.000 -> 00:06:47.000
これらのリソースは、RESTエンドポイントの形で定義されています。

00:06:47.000 -> 00:06:57.000
このデータは、IT管理者が成功したOAuth 2.0認証を通じて許可を与えた後、アプリがアクセスできます。

00:06:57.000 -> 00:07:06.000
Apple School Managerの管理者とサイトマネージャーのアカウントは、どのアプリがデータにアクセスできるかを管理できます。

00:07:06.000 -> 00:07:14.000
このリリースの一環として、アプリが組織データへのアクセスを要求するための標準化された方法を作成しました。

00:07:14.000 -> 00:07:18.000
私たちはこれを組織データ共有と呼んでいます。

00:07:18.000 -> 00:07:28.000
開発者の採用が簡単になるように、UIデザインパターンとテクノロジーの選択に関しては、業界標準に従いたかったのです。

00:07:28.000 -> 00:07:40.000
そのため、OAuth 2.0を使用して承認フローを作成しました。これには、スコープを使用し、IT管理者に組織データの共有に同意するよう求めることが含まれます。

00:07:40.000 -> 00:07:43.000
これがそのように見えます。

00:07:43.000 -> 00:07:54.000
同意画面には、組織のデータへのアクセスを要求しているアプリと、アプリがアクセスを要求しているデータに関する情報が表示されます。

00:07:54.000 -> 00:08:14.000
より詳しく見ると、同意画面には、要求者に関する情報が含まれています。これは、Apple School Managerによって利用可能になったデータへのアクセスを要求するアプリを表します。この場合、要求するアプリはQuizzlerであり、スコープは、アプリがアクセスできるデータを表します。

00:08:14.000 -> 00:08:24.000
この場合、IT管理者が同意すると、Quizzlerはこの組織のすべてのユーザー情報とクラス情報にアクセスできるようになります。

00:08:24.000 -> 00:08:27.000
あなたの実装の旅はどのようなものですか?

00:08:27.000 -> 00:08:33.000
最初のステップは、スコープを要求することを含む開発者ポータルに登録することです。

00:08:33.000 -> 00:08:42.000
次のステップは、OAuth 2.0認証フローを通じてアプリとデータを共有するために、IT管理者の同意を求めることです。

00:08:42.000 -> 00:08:48.000
最後に、アプリはRoster APIエンドポイントにクエリしてデータを取得します。

00:08:48.000 -> 00:08:51.000
これらの各ステップを見てみましょう。 

00:08:51.000 -> 00:08:55.000
スコープをリクエストするには、開発者ポータルにアクセスしてください。

00:08:55.000 -> 00:09:03.000
[証明書、識別子、プロファイル] ページで、[アカウントと組織データ共有] の下にある [設定] をクリックします。

00:09:03.000 -> 00:09:08.000
次のステップで、「設定を設定する」をクリックします。

00:09:08.000 -> 00:09:15.000
ドロップダウンからプライマリアプリIDを選択し、[続行]を押します。

00:09:15.000 -> 00:09:24.000
追加設定の詳細ページで、[組織データ共有スコープ] で、目的のスコープを選択します。

00:09:24.000 -> 00:09:28.000
現在、ユーザーアクセスとクラスアクセスの2つを提供しています。

00:09:28.000 -> 00:09:32.000
アプリにリターンURLが設定されていることを確認してください。

00:09:32.000 -> 00:09:39.000
このステップは、OAuth 2.0認証フローでリターンURLが使用されるため重要です。

00:09:39.000 -> 00:09:41.000
続行を押します。

00:09:41.000 -> 00:09:44.000
最後に、設定を確認してください。

00:09:44.000 -> 00:09:47.000
今、私たちは次のステップの準備が整いました。

00:09:47.000 -> 00:09:55.000
実装ジャーニーの2番目のステップは、OAuth 2.0認証フローを通じてアクセストークンを取得することです。

00:09:55.000 -> 00:09:57.000
これを詳しく見てみましょう。

00:09:57.000 -> 00:10:00.000
IT管理者はまずアプリにログインします。

00:10:00.000 -> 00:10:10.000
その後、IT管理者はアプリと対話して承認フローを開始します。たとえば、「Apple School Managerに接続」というボタンをクリックします。

00:10:10.000 -> 00:10:16.000
これにより、OAuth 2.0標準に従って一連のイベントが開始されます。

00:10:16.000 -> 00:10:20.000
最初のステップは、承認エンドポイントへのGET API呼び出しを実行することです。

00:10:20.000 -> 00:10:24.000
このリクエストの詳細を見てみましょう。詳細を見てみましょう。

00:10:24.000 -> 00:10:34.000
リクエストは、client_id、redirect_uri、state、response_type、およびスコープのいくつかのクエリパラメータを取ります。

00:10:34.000 -> 00:10:41.000
応答は、IT管理者からのアクセスを要求するために、Apple OAuth同意画面にリダイレクトされます。

00:10:41.000 -> 00:10:48.000
この図では、IT管理者が管理対象Apple IDで認証したことを前提としています。

00:10:48.000 -> 00:10:52.000
そうでない場合は、最初に認証するように求められます。

00:10:52.000 -> 00:11:01.000
IT管理者には、組織データをアプリと共有したいことを確認するための同意画面が表示されます。

00:11:01.000 -> 00:11:04.000
これは、先ほど見たのと同じ同意画面です。

00:11:04.000 -> 00:11:08.000
念のため、こんな感じです。

00:11:08.000 -> 00:11:19.000
[許可]をクリックすると、開発者ポータルに登録したリターンURLに承認コードがアプリに提供されます。

00:11:19.000 -> 00:11:26.000
最後のステップには、アプリのアクセストークンを取得するためのトークンエンドポイントへのPOSTリクエストが含まれます。

00:11:26.000 -> 00:11:29.000
このリクエストがどのように見えるか見てみましょう。

00:11:29.000 -> 00:11:38.000
リクエスト本文は、リターンURLで受信した承認コードを含む標準のOAuthパラメータで構成されています。

00:11:38.000 -> 00:11:49.000
応答には、アクセストークン、その有効期限、および有効期限が切れたときに新しいアクセストークンを作成するために使用されるリフレッシュトークンがあります。

00:11:49.000 -> 00:11:55.000
リフレッシュトークンを使用して新しいアクセストークンを生成するためのリクエストの詳細を見てみましょう。

00:11:55.000 -> 00:12:06.000
リクエストボディは、リフレッシュトークンを含む標準のOAuthパラメータで構成されており、応答にはアクセストークンとその有効期限があります。

00:12:06.000 -> 00:12:18.000
OAuth 2.0認証フローが正常に完了した後、アプリにはアクセストークンがあり、Roster APIからユーザー情報とクラス情報を取得するために使用できます。

00:12:18.000 -> 00:12:24.000
現在のリリースの一環として、アプリがクエリできる5つのエンドポイントを導入しています。

00:12:24.000 -> 00:12:34.000
これらには、クラスのリスト、ユーザーのリスト、特定のクラス、特定のユーザー、クラス内のユーザーの取得が含まれます。

00:12:34.000 -> 00:12:40.000
簡単な例のフローを見て、ユーザーとクラスを取得する方法を実演しましょう。

00:12:40.000 -> 00:12:49.000
アプリサーバーは、まず、ユーザーのエンドポイントを照会することで、学生、教師、スタッフのリストを取得できます。

00:12:49.000 -> 00:12:53.000
リクエストと回答を詳しく見てみましょう。

00:12:53.000 -> 00:12:57.000
ユーザーエンドポイントは3つのクエリパラメータを取ります。

00:12:57.000 -> 00:13:07.000
pageTokenとlimitはページネーションパラメータであり、オプションのロールパラメータを使用すると、学生、インストラクター、またはスタッフを照会できます。

00:13:07.000 -> 00:13:14.000
リクエストには、承認フローから生成されたアクセストークンを含む承認ヘッダーが必要です。

00:13:14.000 -> 00:13:32.000
応答は、ユーザーのリストを持つ「ユーザー」キーを含むJSONペイロードです。次のレコードセットを取得するために使用される「nextPageToken」キー、およびクエリするレコードがあるかどうかを示す「moreToFollow」ブールキー。

00:13:32.000 -> 00:13:35.000
リクエストの例を見てみましょう。 

00:13:35.000 -> 00:13:42.000
ここでのAPIコールは、応答に最大10人の学生がいる学生のリストを取得しています。

00:13:42.000 -> 00:13:49.000
これは最初のAPIリクエストなので、pageTokenクエリパラメータは指定されていません。

00:13:49.000 -> 00:14:00.000
応答には、givedName、familyNameなどの標準的なユーザー情報がありますが、ユーザーの安定した一意の識別子に注意を喚起したいと思います。

00:14:00.000 -> 00:14:06.000
これは、ユーザーがAppleでサインインで認証したときにアプリが受け取るのと同じ識別子です。

00:14:06.000 -> 00:14:12.000
ユーザーのメールアドレスと組織内での役割も含まれています。

00:14:12.000 -> 00:14:24.000
nextPageTokenは、moreToFollowキーがtrueに設定されているため、次の学生セットを取得するためのクエリパラメータとして、後続のAPIリクエストで使用する必要があります。

00:14:24.000 -> 00:14:40.000
ユーザーエンドポイントを照会した後、アプリサーバーはクラスエンドポイントを照会できるようになりました。これにより、その特定の学区のクラスのリストと、クラスとそのクラスに関連付けられている生徒と教師の関係が表示されます。

00:14:40.000 -> 00:14:45.000
リクエストと回答を詳しく見てみましょう。

00:14:45.000 -> 00:14:56.000
Get classesリクエストの一部として、リクエストは以前に見たpageTokenとlimitパラメータの2つのクエリパラメータを取ります。

00:14:56.000 -> 00:14:59.000
ヘッダーは、ユーザーに照会するときと同じです。

00:14:59.000 -> 00:15:07.000
応答は、「クラス」キーがクラスのリストを保持するJSONペイロードです。

00:15:07.000 -> 00:15:10.000
リクエストの例を見てみましょう。 

00:15:10.000 -> 00:15:17.000
このリクエストは、応答に含まれる最大200のクラスのリストを取得します。

00:15:17.000 -> 00:15:25.000
APIリクエストにはpageTokenパラメータもあります。これは、すべてのクラスを取得している最中であることを意味します。

00:15:25.000 -> 00:15:38.000
応答には、名前、クラス識別子などの標準的なクラス情報が含まれていますが、クラスに属するインストラクターIDと学生IDのリストに注意を喚起したいと思います。

00:15:38.000 -> 00:15:40.000
それがロスターAPIでした。

00:15:40.000 -> 00:15:47.000
これらのエンドポイントを使用すると、アプリはApple School Managerからユーザーとクラスをプログラムでクエリできるようになりました。

00:15:47.000 -> 00:15:51.000
最後に、アクセス管理についてお話ししたいと思います。

00:15:51.000 -> 00:16:00.000
組織データ共有とApple at Work &amp; Schoolでのサインインを使用して、組織に管理機能を提供することが不可欠です。

00:16:00.000 -> 00:16:04.000
これが何を意味するのか、より詳細に説明させてください。

00:16:04.000 -> 00:16:12.000
Appleでサインインを使用する場合、ユーザーは自分のアカウントを管理し、どのアプリにサインインするかを決めるのは彼ら次第です。

00:16:12.000 -> 00:16:24.000
しかし、職場と学校でAppleでサインインを使用する場合、組織のIT管理者は、その組織のすべてのユーザーに代わってアクセスを一元的に管理します。

00:16:24.000 -> 00:16:31.000
これは、IT管理者が組織のデータの安全性とセキュリティを確保する責任があるためです。

00:16:31.000 -> 00:16:43.000
したがって、ユーザーが職場と学校でAppleでサインインを使用できるアプリと、組織データ共有を使用できるアプリを管理する権限を与えられなければなりません。

00:16:43.000 -> 00:16:50.000
これらのアクセス管理機能は、Apple School ManagerとApple Business Managerで設定できます。

00:16:50.000 -> 00:16:54.000
職場と学校でAppleでサインインするには、2つのモードがあります。

00:16:54.000 -> 00:16:58.000
最初のモードは「すべてのアプリを許可する」です。

00:16:58.000 -> 00:17:01.000
このモードがどのように見えるか見てみましょう。

00:17:01.000 -> 00:17:05.000
ここでは、IT管理者はApple Business Managerにログインしています。

00:17:05.000 -> 00:17:13.000
サイドバーからアクセス管理を選択し、「Appleでサインイン」を選択すると、2つのモードが表示されます。

00:17:13.000 -> 00:17:21.000
「すべてのアプリを許可」モードでは、組織のすべてのユーザーがAppleでサインインをサポートするすべてのアプリにログインできます。

00:17:21.000 -> 00:17:25.000
2番目のモードは「特定のアプリのみを許可する」です。

00:17:25.000 -> 00:17:28.000
このモードがどのように見えるか見てみましょう。

00:17:28.000 -> 00:17:36.000
「特定のアプリのみを許可する」モードでは、IT管理者がAppleでサインインをサポートするアプリを検索してリストに追加できます。

00:17:36.000 -> 00:17:42.000
ユーザーは、リストに追加されたアプリでのみAppleでサインインを使用できます。

00:17:42.000 -> 00:17:48.000
ユーザーがリストにないアプリにログインしようとすると、エラーメッセージが表示されます。

00:17:48.000 -> 00:17:56.000
この機能は、Apple School Manager、Apple Business Manager、Business Essentialsのお客様でも同じであることに注意することが重要です。

00:17:56.000 -> 00:18:02.000
職場や学校でのAppleでサインインと同様に、組織データ共有も同じ2つのモードがあります。

00:18:02.000 -> 00:18:04.000
見てみましょう。 

00:18:04.000 -> 00:18:11.000
「特定のアプリのみを許可する」モードでは、IT管理者がサポートされているアプリを検索してリストに追加できます。

00:18:11.000 -> 00:18:17.000
Roster APIを使用してユーザーとクラスの情報にアクセスできるのは、これらのアプリです。

00:18:17.000 -> 00:18:26.000
同意画面に加えて、これはIT管理者が組織データにアクセスできるアプリを管理するための2番目のコントロールレイヤーです。

00:18:26.000 -> 00:18:36.000
Sign in with Apple at Work &amp; Schoolのリリースにより、どの環境のユーザーでもApple IDまたは管理対象Apple IDを使用してアプリにログインできるようになりました。

00:18:36.000 -> 00:18:42.000
Appleでサインインをまだ実装していない場合は、そうすることをお勧めします。

00:18:42.000 -> 00:18:47.000
また、教育分野にいる場合は、Roster APIを採用することを強くお勧めします。

00:18:47.000 -> 00:18:57.000
Roster APIのサポートを実装すると、IT管理者、スタッフ、教師、学生にシームレスなオンボーディング体験を提供します。

00:18:57.000 -> 00:19:00.000
いつものように、私たちはあなたからの連絡が大好きです。

00:19:00.000 -> 00:19:03.000
だから、あなたが持っているかもしれないフィードバックを提出してください。

00:19:03.000 -> 00:19:14.000
詳細を知りたい場合は、2020年の「Appleでサインインを最大限に活用する」セッションと、今年の「Appleでサインイン体験を強化する」セッションを強くお勧めします。

00:19:14.000 -> 00:19:17.000
ご覧いただきありがとうございます。今年のWWDCをお楽しみください。ありがとうございます。

00:19:17.000 -> 23:59:59.000
♪

