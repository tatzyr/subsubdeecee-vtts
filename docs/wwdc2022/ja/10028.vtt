WEBVTT

00:00:00.000 -> 00:00:09.000
♪インストゥルメンタルヒップホップ音楽♪

00:00:09.000 -> 00:00:14.000
こんにちは、ShazamKitチームのエンジニア、ニール・フォーリーです。

00:00:14.000 -> 00:00:22.000
2021年には、ShazamKitを導入し、Shazamの膨大な録音音楽カタログとオーディオを一致させることができます。

00:00:22.000 -> 00:00:31.000
また、カスタムカタログマッチングを導入し、開発者が自分のオーディオを一致させ、同期された体験を提供できるようにしました。

00:00:31.000 -> 00:00:37.000
現在、カスタムカタログの作業を大規模に合理化する重要なアップデートがいくつかあります。

00:00:37.000 -> 00:00:46.000
このセッションでは、署名、カタログ、メディアアイテムなど、既存のShazamKitの概念の一部を使用します。

00:00:46.000 -> 00:00:57.000
まだそれらに慣れていない場合は、WWDC21の「Explore ShazamKit」と「ShazamKitでカスタムオーディオ体験を作成する」の講演をチェックしてください。

00:00:57.000 -> 00:01:04.000
しかし、簡単な概要として、ShazamKitを使用すると、オーディオを一致させることができる特別な形式に変換できます。

00:01:04.000 -> 00:01:07.000
私たちはこれらの署名を署名と呼んでいます。

00:01:07.000 -> 00:01:13.000
署名は、メタデータを含むメディアアイテムと組み合わせて、参照署名を形成することができます。

00:01:13.000 -> 00:01:19.000
また、参照署名は、カスタムカタログと呼ばれるファイルに一緒に保存できます。

00:01:19.000 -> 00:01:29.000
私たち全員が追いついたので、カスタムカタログを大規模に構築し、素晴らしいカタログを作るためのヒントやコツについて話します。

00:01:29.000 -> 00:01:39.000
今日のカスタムカタログワークフローでは、一致させたいコンテンツが少量ある場合、カスタムカタログでの作業は簡単な作業です。

00:01:39.000 -> 00:01:42.000
これらの手順に従うだけです。

00:01:42.000 -> 00:01:47.000
ShazamKitが受け入れる形式でオーディオを録音してください。

00:01:47.000 -> 00:01:52.000
署名ジェネレーターを使用して署名に変換します。

00:01:52.000 -> 00:01:57.000
メタデータで注釈を付け、カスタムカタログに保存します。

00:01:57.000 -> 00:02:00.000
そして、それだけです、あなたはShazamの経験を提供することができます。

00:02:00.000 -> 00:02:06.000
しかし、これらのステップのいくつかは、特にオーディオプログラミングに精通していない場合、困難な場合があります。

00:02:06.000 -> 00:02:12.000
サンプルレートとバッファーを扱うことは、最も経験豊富な開発者にとっても難しい場合があります。

00:02:12.000 -> 00:02:21.000
そして、テレビ番組の10シーズンのように、Shazamableにしたい膨大な量のコンテンツがある場合、どうなりますか?

00:02:21.000 -> 00:02:25.000
このワークフローは苦痛になる可能性があります。

00:02:25.000 -> 00:02:30.000
また、大量のコンテンツがある場合、すぐに管理できなくなる可能性があります。

00:02:30.000 -> 00:02:44.000
このワークフローを自分で改善することを考えているなら、おそらくオーディオを署名に変換するコード、メディアアイテムをロードして関連付けるためのより多くのコードを書く必要があり、コンテンツを変更するたびに作業を繰り返す必要があります。

00:02:44.000 -> 00:02:48.000
オーディオを一致させたいとき、これは大きな投資です。

00:02:48.000 -> 00:02:56.000
そして、ShazamKitとコンテンツを同期したい場合は、何をいつ表示すべきかを把握するための複雑なロジックが必要です。

00:02:56.000 -> 00:03:01.000
このワークフローを合理化するShazamKitにいくつかの大きな機能強化を紹介します。

00:03:01.000 -> 00:03:03.000
しかし、まずは簡単なデモです。

00:03:03.000 -> 00:03:11.000
ここには、数学のクイズと画面上のレッスンを同期させる、アレックスが2021年に実演したFoodMathアプリがあります。

00:03:11.000 -> 00:03:21.000
最新のShazamKit機能で更新し、FoodMathのビデオを再生して、どのように同期するかを確認します。

00:03:21.000 -> 00:03:24.000
26秒にスキップします。

00:03:24.000 -> 00:03:29.000
2、3つの青リンゴ。

00:03:29.000 -> 00:03:31.000
リンゴは全部で何個ありますか？

00:03:31.000 -> 00:03:34.000
あなたのタイマーが始まります...今。

00:03:34.000 -> 00:03:41.000
よし、時間だ。あなたがどうやったか見てみましょう。

00:03:41.000 -> 00:03:45.000
56秒にスキップします。

00:03:45.000 -> 00:03:51.000
今日、それを少しスパイスアップするために、私が店に行ったとき、2つの赤いリンゴから始めました...

00:03:51.000 -> 00:03:55.000
そして、私は青リンゴを2つ買いました。

00:03:55.000 -> 00:03:58.000
今回は全部で何個のリンゴを持っていましたか？

00:03:58.000 -> 00:04:07.000
あなたのタイマーが始まります...今。

00:04:07.000 -> 00:04:09.000
よし、時間だ。

00:04:09.000 -> 00:04:11.000
うまくいっているようです。

00:04:11.000 -> 00:04:17.000
ビデオと同期した豊富なコンテンツがあり、私が「今」と言ったとき、メニューは正確に適切なタイミングで表示されました。

00:04:17.000 -> 00:04:22.000
また、コンテンツが関連性がなくなったとき、それはキューですぐに消えました。

00:04:22.000 -> 00:04:23.000
しかし、それはどのように機能しますか?

00:04:23.000 -> 00:04:26.000
コードを見てみましょう。-コードを見てみましょう。

00:04:26.000 -> 00:04:27.000
単純なループがあります。

00:04:27.000 -> 00:04:33.000
以前に使用したデリゲートコールバックの代わりに、セッションでAsyncSequenceを使用します。

00:04:33.000 -> 00:04:38.000
シーケンスは、一致、一致なし、またはエラーを表す列挙型を返します。

00:04:38.000 -> 00:04:44.000
私は試合にしか興味がないので、ループをそのケースに制限しました。

00:04:44.000 -> 00:04:52.000
そして、ディスプレイの結果を構築するために、メディアアイテムを必要なコンテンツに減らします。

00:04:52.000 -> 00:04:58.000
実際には、アプリで見るべきものはあまりなく、私たちが作成したmatchResultによって駆動されるSwiftUIビューだけです。

00:04:58.000 -> 00:05:03.000
複雑なロジックやタイミングコードはなく、完璧に同期します。

00:05:03.000 -> 00:05:08.000
だから、質問は残っています、それはどのようにそんなにうまく同期するのですか?

00:05:08.000 -> 00:05:13.000
FoodMathsの秘密は、経験を推進する豊富なカスタムカタログです。

00:05:13.000 -> 00:05:24.000
ShazamKitを補完するために構築したシンプルなツールでカタログを作成しましたが、独自のアプリで豊かな体験を作成するためにも使用できます。

00:05:24.000 -> 00:05:32.000
Shazam CLIはmacOS 13の一部として出荷され、コンテンツを同期する簡単な方法を提供します。

00:05:32.000 -> 00:05:37.000
これは、カスタムカタログの作成に関連する反復的なタスクの一部を自動化するのに役立ちます。

00:05:37.000 -> 00:05:41.000
先ほどお見せしたカスタムカタログを更新しましょう。

00:05:41.000 -> 00:05:45.000
別のデモの時間です。

00:05:45.000 -> 00:05:52.000
これはFoodMathビデオファイルを含むフォルダで、これは同じフォルダにある私の端末です。

00:05:52.000 -> 00:06:02.000
CLIを使用して、署名コマンドを使用してビデオを署名に変換します。

00:06:02.000 -> 00:06:11.000
ビデオファイルを入力として渡し、署名出力を指定するだけです。

00:06:11.000 -> 00:06:13.000
わかりました。私たちの署名があります。

00:06:13.000 -> 00:06:18.000
今、私はこの署名をメディアアイテムと組み合わせてカスタムカタログを作りたい。

00:06:18.000 -> 00:06:33.000
CLIは、ここでコピーするメディアアイテムを記述するための簡単なカンマ区切りファイルを受け入れます。

00:06:33.000 -> 00:06:38.000
コンテンツを同期するために必要なことをすべて説明しています。

00:06:38.000 -> 00:06:47.000
ここに私のタイトルを指定しました、そしてここに私が方程式のために定義したカスタムJSONフィールドがあります。

00:06:47.000 -> 00:06:50.000
ヘッダーはメディアアイテムのプロパティにマップされます。

00:06:50.000 -> 00:07:02.000
マッピングの詳細については、ヘルプフラグを使用してカスタムカタログ作成コマンドを実行します。

00:07:02.000 -> 00:07:07.000
Csvヘッダーとメディアアイテムのプロパティの関係について説明します。

00:07:07.000 -> 00:07:12.000
今、私はそれらをカスタムカタログにまとめたいです。

00:07:12.000 -> 00:07:19.000
だから、私は作成コマンドを実行します。

00:07:19.000 -> 00:07:28.000
署名ファイルとcsvファイルを渡すと、カタログが出力されます。

00:07:28.000 -> 00:07:30.000
さて、今、私たちはカタログを持っています。

00:07:30.000 -> 00:07:37.000
エキサイティングなことに、私は最新のFoodMathエピソードに早期にアクセスできるので、それをカタログファイルに追加したいです。

00:07:37.000 -> 00:07:44.000
ここでファイルをコピーさせてください。

00:07:44.000 -> 00:07:51.000
これが新しいエピソードのメディアアイテムです。

00:07:51.000 -> 00:08:02.000
更新するビデオ、新しいメディア、カタログを渡す更新コマンドを実行します。

00:08:02.000 -> 00:08:05.000
さて、カタログを更新しました。

00:08:05.000 -> 00:08:20.000
それはカタログを作成する方法の簡単な概要ですが、あなたが私のような人なら、あなたは本当にこれをスクリプト化したいと思うでしょう。

00:08:20.000 -> 00:08:27.000
FoodMathアプリには実際にはかなりの数の新しいエピソードがあり、それらをすべてこのカタログに追加したいと思います。

00:08:27.000 -> 00:08:33.000
私はすべてのエピソードフォルダをループし、それらをカスタムカタログにまとめる本当にシンプルなスクリプトを書きました。

00:08:33.000 -> 00:08:49.000
今それを実行します。

00:08:49.000 -> 00:08:50.000
行くよ。

00:08:50.000 -> 00:09:00.000
現在、すべてのFoodMathエピソードを表す1つのカタログがあり、スクリプトはdisplayコマンドを使用してカタログの中身を詳述しました。

00:09:00.000 -> 00:09:02.000
私たちはすべてを持っていると思います。

00:09:02.000 -> 00:09:05.000
Foodmathプロジェクトはすでに私たちの新しいカタログを参照しています。

00:09:05.000 -> 00:09:11.000
だから、数学を楽しめるように構築して実行しましょう。

00:09:11.000 -> 00:09:14.000
30秒にスキップします。

00:09:14.000 -> 00:09:16.000
リンゴは全部で何個ありますか？

00:09:16.000 -> 00:09:19.000
あなたのタイマーが始まります...今。

00:09:19.000 -> 00:09:28.000
よし、時間だ。あなたがどうやったか見てみましょう。

00:09:28.000 -> 00:09:30.000
私はあの男が好きです。それは素晴らしいエピソードです。

00:09:30.000 -> 00:09:37.000
新しいエピソードはどうですか？それを試してみましょう。

00:09:37.000 -> 00:09:41.000
15秒にスキップします。

00:09:41.000 -> 00:09:49.000
長年にわたり、私はワカモレを本当に美味しくするものを探求し、お気に入りのワカモレのレシピを書き留めました。

00:09:49.000 -> 00:09:51.000
アボカドが4個です。

00:09:51.000 -> 00:09:53.000
明日、私の友人が訪問します。

00:09:53.000 -> 00:09:57.000
だから私たち2人のために、私は部分の半分を作るだけでいい。

00:09:57.000 -> 00:09:59.000
アボカドは何個必要ですか？

00:09:59.000 -> 00:10:02.000
タイマーが始まります...今。

00:10:02.000 -> 00:10:12.000
その通りです。アボカドが2つ必要です。

00:10:12.000 -> 00:10:16.000
このワカモレを一緒に作りましょう。

00:10:16.000 -> 00:10:30.000
これを試してみましょう。

00:10:30.000 -> 00:10:40.000
うーん。それは素晴らしいことが判明しました。楽しんで、また次回お会いしましょう。

00:10:40.000 -> 00:10:41.000
ああ！

00:10:41.000 -> 00:10:43.000
彼らには新しいホストがいます。おもしろ。

00:10:43.000 -> 00:10:48.000
とにかく、私はすぐに豊かな同期体験を作り出しました。

00:10:48.000 -> 00:10:51.000
Shazam CLIは、豊富なコマンドセットをサポートしています。

00:10:51.000 -> 00:10:54.000
それらを調べてみましょう。

00:10:54.000 -> 00:10:58.000
オーディオトラックを持つ任意のメディアファイルから署名を作成できます。

00:10:58.000 -> 00:11:03.000
署名とメディアアイテムを組み合わせることで、カスタムカタログを作成できます。

00:11:03.000 -> 00:11:06.000
カタログの内容を表示できます。

00:11:06.000 -> 00:11:11.000
署名とメディアアイテムの両方を追加、削除、エクスポートします。

00:11:11.000 -> 00:11:18.000
次に、CLIがFoodMathのビデオから署名をどのように作成したかについてです。

00:11:18.000 -> 00:11:26.000
SHSignatureGeneratorには、すべてのプラットフォームで利用可能なメソッドsignatureFromAssetがあります。

00:11:26.000 -> 00:11:31.000
この方法では、メディアからオーディオバッファを手動で引き出すことはもうありません。

00:11:31.000 -> 00:11:37.000
オーディオトラック付きのAVAssetを渡すだけで、署名に変換できます。

00:11:37.000 -> 00:11:44.000
アセットに複数のトラックがある場合、それらは一緒に混在し、署名がすべてを確実にキャプチャします。

00:11:44.000 -> 00:11:51.000
さて、メディアを表す署名がわかったので、どのようにしてコンテンツを正確に同期しましたか？

00:11:51.000 -> 00:11:54.000
Timed MediaItem APIを使用しました。

00:11:54.000 -> 00:12:01.000
メディアアイテムに時間範囲を添付すると、いつ開始し、いつ終了するかを簡単に指定できます。

00:12:01.000 -> 00:12:08.000
メディアアイテムは、署名の複数の部分をターゲットにするために複数の時間範囲を持つこともできます。

00:12:08.000 -> 00:12:13.000
曲のコーラスをターゲットにしたメディアアイテムがあると想像してみてください。

00:12:13.000 -> 00:12:16.000
歌われる場所ごとに時間範囲を追加できます。

00:12:16.000 -> 00:12:23.000
時間範囲を指定することは、開始時と終了時に通知された場合にのみ便利です。

00:12:23.000 -> 00:12:30.000
ShazamKitは、開始時と終了時にタイムレンジと同期したマッチコールバックを提供します。

00:12:30.000 -> 00:12:40.000
署名には多くのメディアアイテムを含めることができるため、このコールバックには、その特定の時点で範囲内にあるメディアアイテムのみが含まれます。

00:12:40.000 -> 00:12:49.000
メディアアイテムがコールバックとその順序で返される簡単なルールがいくつかありますので、それらについて確認してみましょう。

00:12:49.000 -> 00:12:54.000
時間範囲外のメディアアイテムは返却されません。

00:12:54.000 -> 00:13:01.000
時間範囲内のメディアアイテムが返却され、最新のイベントが最初に行われます。

00:13:01.000 -> 00:13:09.000
そして最後に、時間範囲のないメディアアイテムは常に最後に返されますが、順序付けられません。

00:13:09.000 -> 00:13:15.000
時間範囲のないメディアアイテムは、参照署名全体に適用されるグローバル情報を保存するのに最適な場所です。

00:13:15.000 -> 00:13:20.000
私のFoodMathの例では、エピソードの名前を保存するために使用しました。

00:13:20.000 -> 00:13:25.000
他のメディアアイテムが範囲内にない場合に表示されます。

00:13:25.000 -> 00:13:37.000
最後に、すべてのメディアアイテムに時間範囲があり、どれもスコープにない場合、ShazamKitは常に基本的なマッチ情報を含むメディアアイテムを返します。

00:13:37.000 -> 00:13:46.000
このようにして、predictedCurrentMatchオフセットやfrequencySkewなどの重要なプロパティを常に取得できます。

00:13:46.000 -> 00:13:49.000
そして、コードでは、それも簡単です。

00:13:49.000 -> 00:13:55.000
時指定メディアアイテムは、timeRangesメディアアイテムプロパティを指定することで作成されます。

00:13:55.000 -> 00:13:58.000
それはスウィフトの範囲の配列です。

00:13:58.000 -> 00:14:02.000
また、timeRangesプロパティを使用して読み返すこともできます。

00:14:02.000 -> 00:14:08.000
そして、Objective-Cプログラマーにとって、代替品として新しいSHRangeクラスがあります。

00:14:08.000 -> 00:14:16.000
それらを構築する方法を見たので、素晴らしいカスタムカタログを作るためのいくつかのヒントとコツを探りましょう。

00:14:16.000 -> 00:14:21.000
1つのメディアに多くの小さな署名を作成することは避けてください。

00:14:21.000 -> 00:14:34.000
シグネチャは、それが表すメディアへの1対1のマッピングであるため、曲やビデオなど、オーディオの各部分について、全期間にわたって1つのシグネチャを作成します。

00:14:34.000 -> 00:14:42.000
より長い署名は、ShazamKitがオーディオピークに一致するより多くの機会を提供し、精度が向上します。

00:14:42.000 -> 00:14:50.000
また、クエリ署名が複数の参照署名と重なる問題も回避できます。

00:14:50.000 -> 00:14:55.000
新しいTimed MediaItem APIを使用すると、同期されたコンテンツを個々の領域にターゲットにすることができます。

00:14:55.000 -> 00:15:01.000
オーディオの一部を複数の署名に分割する必要はありません。

00:15:01.000 -> 00:15:06.000
1つのメディアがあるが、複数のメディアアイテムがある例を示しました。

00:15:06.000 -> 00:15:12.000
しかし、Shazamableにしたい膨大な量のコンテンツがある場合はどうすればよいですか?

00:15:12.000 -> 00:15:14.000
どうやって分ければいいの？

00:15:14.000 -> 00:15:20.000
カスタムカタログ間でコンテンツを分割する際に必要なトレードオフがあります。

00:15:20.000 -> 00:15:30.000
メディアアセットごとに個別のカタログを作成する場合は、正しいカタログを読み込むことができるように、どのオーディオが再生されているかを知る必要があります。

00:15:30.000 -> 00:15:39.000
そして、それらをすべて1つのカタログにまとめると、より大きなダウンロードとより多くのメモリが使用されますが、より多くのオーディオを一致させることができます。

00:15:39.000 -> 00:15:44.000
私たちのアドバイスは、作成したカタログファイルをしっかりと集中しておくことです。

00:15:44.000 -> 00:15:51.000
たとえば、音楽トラックごとのカタログやアルバム全体ですが、アーティストのディスコグラフィー全体ではありません。

00:15:51.000 -> 00:15:56.000
物事を別々にしておくことは、実行時に何をロードするかを決定できることを意味します。

00:15:56.000 -> 00:16:02.000
カスタムカタログ追加APIでそれを行うことができます。

00:16:02.000 -> 00:16:06.000
試してみて、ユースケースに役立つかどうかを確認してください。

00:16:06.000 -> 00:16:25.000
同じサウンドの複数のオーディオアセットがあり、常に同じイントロ音楽で始まるショーがあり、各エピソードのカスタムエクスペリエンス、または別のトラックでサンプリングされた曲を提供したい場合は、周波数スキューを差別化要因として使用することを検討してください。

00:16:25.000 -> 00:16:30.000
スケウイングオーディオは、録音中の周波数を上げたり低めたりしています。

00:16:30.000 -> 00:16:40.000
これを行うと、オーディオの音に影響しますが、十分な量で行うと、ShazamKitによって認識されますが、平均的な人間の耳では認識されません。

00:16:40.000 -> 00:16:54.000
したがって、オーディオ録音を取る場合は、そこからカスタムカタログを作成し、わずかにシフトした周波数で再生します。ShazamKitは依然としてオーディオと一致し、frequencySkewプロパティを介してスキュー量も報告します。

00:16:54.000 -> 00:16:58.000
コードでそれを行う方法は次のとおりです。

00:16:58.000 -> 00:17:08.000
変更が人間の耳に顕著になったり、ShazamKitに認識できなくなることなく、オーディオを歪めることができる量には制限があります。

00:17:08.000 -> 00:17:17.000
歪みを5%未満に保つことは安全であり、複数の歪んだ録音を区別するのに十分なスペースを提供する必要があります。

00:17:17.000 -> 00:17:21.000
これを実際に利用するには、frequencySkew範囲を使用してください。

00:17:21.000 -> 00:17:27.000
メディアアイテムは、指定されたスキュー範囲内にある場合にのみ返されます。

00:17:27.000 -> 00:17:33.000
範囲は、オーディオがオリジナルとどれだけ異なるかをパーセンテージで指定します。

00:17:33.000 -> 00:17:41.000
値 0 はオーディオの歪みがないことを示し、0.01 の値は 1 パーセントのスキューを示します。

00:17:41.000 -> 00:17:48.000
frequencySkewRangesプロパティを使用して、メディアアイテムのプロパティにアクセスできます。

00:17:48.000 -> 00:17:56.000
アプリでこれを機能させる手順を説明します。まず、元のオーディオ録音の参照署名を作成します。

00:17:56.000 -> 00:18:03.000
次に、メディアアイテムを取り、周波数スキューによって3〜4%に制限します。

00:18:03.000 -> 00:18:05.000
これをカスタムカタログの中に入れてください。

00:18:05.000 -> 00:18:13.000
次に、3〜4%歪んだオーディオを再生すると、メディアアイテムが返されます。

00:18:13.000 -> 00:18:18.000
範囲外で歪みのない、または歪んだオーディオを再生すると、メディアアイテムは返されません。

00:18:18.000 -> 00:18:22.000
それは周波数の歪みです。

00:18:22.000 -> 00:18:29.000
今年のShazamKitのエキサイティングなアップデートを見たので、あなたはいくつかの素晴らしい同期体験を作る準備が整いました。

00:18:29.000 -> 00:18:35.000
したがって、これらのベストプラクティスを覚えておいてください。まず、メディアアセットごとに1つの署名を作成します。

00:18:35.000 -> 00:18:41.000
ShazamKitとよりシンプルな作成パイプラインから、より良い精度が得られます。

00:18:41.000 -> 00:18:46.000
SHSignatureGenerators signatureFromAssetで署名を作成します。

00:18:46.000 -> 00:18:54.000
多種多様なメディアを受け入れるため、低レベルのオーディオの詳細を扱う必要がなくなります。

00:18:54.000 -> 00:19:00.000
新しいTimed MediaItem APIを使用して、同期されたコンテンツを関心のある領域にターゲットにします。

00:19:00.000 -> 00:19:05.000
シンプルなAPIと優れた精度を兼ね備えています。

00:19:05.000 -> 00:19:10.000
そして最後に、Shazam CLIでカスタムカタログの作成方法を合理化しましょう。

00:19:10.000 -> 00:19:20.000
膨大な量のメディアを扱う手間を省き、代わりに作りたい素晴らしい体験に集中できるように設計されています。

00:19:20.000 -> 00:19:27.000
ShazamKitの最新のアップデートを楽しんだことを願っています、そして私はあなたがすべてをShazamableにするのを見て興奮しています。

00:19:27.000 -> 00:19:32.000
議論したすべての情報とドキュメントへのリンクは、このセッションに添付されています。

00:19:32.000 -> 23:59:59.000
参加してくれてありがとう。WWDC22の残りの部分をお楽しみください。♪ ♪

