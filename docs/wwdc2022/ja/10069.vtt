WEBVTT

00:00:01.000 --> 00:00:18.000
デビッド・ダンカン:こんにちは、私はデビッド・ダンカンです。このビデオでは、デスクトップクラスのiPadを紹介します。

00:00:18.000 --> 00:00:34.000
iOS 16は、優れたアプリの設計と構築に使用されるツール、より多くのより良いツールを最前線に持ち込み、組み込みと付属の両方のすべてのハードウェアを活用するアプリに進歩をもたらします。

00:00:34.000 --> 00:00:39.000
UIKitは、アプリのこれらの目標を達成するのに役立つ多くのツールを追加します。

00:00:39.000 --> 00:00:49.000
UINavigationBarのアップデートにより、画面の不動産をよりよく活用し、すべてのAppleプラットフォームで素晴らしい体験を構築できます。

00:00:49.000 --> 00:00:57.000
新しい検索と置換UIは、組み込みのビューで有効にするためのスナップであり、カスタムビューに簡単に追加できます。

00:00:57.000 --> 00:01:04.000
編集メニューは、メニューシステムと統合する新しいインタラクションベースのAPIでオーバーホールされました。

00:01:04.000 --> 00:01:15.000
また、コレクションビューの改善により、ユーザーがコンテンツを選択して行動できるインターフェイスの構築がこれまで以上に簡単になります。

00:01:15.000 --> 00:01:24.000
検索と置換と編集メニューの詳細については、「デスクトップクラスの編集インタラクションを採用」を参照してください。

00:01:24.000 --> 00:01:32.000
そして、これらすべての機能がどのように連携するかを確認するには、「デスクトップクラスのiPadアプリを構築する」をご覧ください。

00:01:32.000 --> 00:01:40.000
このビデオでは、iOS 16用のアプリの設計方法に影響を与えるナビゲーションの変更について説明します。

00:01:40.000 --> 00:01:47.000
1つ目は、より見つけやすいインターフェースを簡単に構築できる新機能です。

00:01:47.000 --> 00:01:53.000
次に、ドキュメントベースのアプリにとって特に強力な機能です。

00:01:53.000 --> 00:02:00.000
そして最後に、検索を更新して、エクスペリエンスを加速し、磨くのに役立ちます。

00:02:00.000 --> 00:02:13.000
UINavigationBarはiOSでさまざまな目的で使用されており、iOS 16は、これらのケースの多くに新しい最適化されたUIを提供することで、それを認識しています。

00:02:13.000 --> 00:02:22.000
UINavigationItemは、ナビゲーター、ブラウザ、エディタのスタイルから選択するために使用されるスタイルプロパティを追加します。

00:02:22.000 --> 00:02:26.000
私は今、これらのスタイルのそれぞれに飛び込みます。

00:02:26.000 --> 00:02:35.000
デフォルトのスタイルであるナビゲーターは、従来のUINavigationBarとまったく同じように動作します。

00:02:35.000 --> 00:02:45.000
タイトルは中央に配置され、先頭と末尾のバーのボタンアイテムがあり、スタックに複数のアイテムがある場合には戻るボタンが表示されます。

00:02:45.000 --> 00:02:57.000
ブラウザスタイルは、ファイルやSafariのように、履歴が場所と同じくらい重要なインターフェイスに最適化されるようにコンテンツを再配置します。

00:02:57.000 --> 00:03:00.000
タイトルは、このスタイリングで主導的な位置に移動されます。

00:03:00.000 --> 00:03:06.000
エディタスタイルは、主な機能がドキュメント編集の場合に最適化されています。

00:03:06.000 --> 00:03:10.000
ブラウザのスタイルと同様に、タイトルは先頭に整列しています。

00:03:10.000 --> 00:03:23.000
エディタUIは、多くの場合、ドキュメントピッカーでドキュメントを選択した後など、宛先であるため、そのUIに簡単にアクセスするための戻るボタンを提示します。

00:03:23.000 --> 00:03:29.000
ブラウザとエディタのスタイルはどちらも、バーの中央に多くのスペースを解放します。

00:03:29.000 --> 00:03:38.000
iOS 16は、この地域に追加のコントロールを配置できるようにすることで、この解放されたスペースを利用します。

00:03:38.000 --> 00:03:52.000
センターアイテムは、画面の不動産をよりよく活用するための一連の変更の一部であり、UIBarButtonItemGroupのサポート、カスタマイズサポート、オーバーフローが含まれます。

00:03:52.000 --> 00:04:02.000
オーバーフローサポートはすべてのモードで利用でき、ナビゲータースタイルはセンターアイテムも間接的にサポートできます。

00:04:02.000 --> 00:04:12.000
個々のコントロールは引き続きUIBarButtonItemsとして指定されますが、現在はUIBarButtonItemGroupsとして整理されています。

00:04:12.000 --> 00:04:17.000
これにより、スペースが限られているときに、より密度の高いプレゼンテーションが可能になります。

00:04:17.000 --> 00:04:26.000
この例では、バーには5つの項目があり、4つのグループで構成されています。

00:04:26.000 --> 00:04:40.000
最初のグループには単一のバーボタン項目が含まれているため、この例ではUIBarButtonItemの便利なメソッド、creatingFixedGroup（）を使用して作成します。

00:04:40.000 --> 00:04:47.000
複数のアイテムを持つ固定グループが必要な場合は、代わりにUIBarButtonItemGroupメソッドを使用できます。

00:04:47.000 --> 00:04:54.000
固定グループは常にバーの最初に表示され、カスタマイズによって削除または移動することはできません。

00:04:54.000 --> 00:05:06.000
描画グループには単一のアイテムが含まれているため、便利なAPIであるcreatingMovableGroup（customizationIdentifier）も使用します。

00:05:06.000 --> 00:05:13.000
固定グループと同様に、可動グループは削除できませんが、移動は可能です。

00:05:13.000 --> 00:05:20.000
このため、位置を追跡して保存できるように、customizationIdentifierが必要です。

00:05:20.000 --> 00:05:28.000
複数のアイテムを持つグループが必要な場合は、代わりにUIBarButtonItemGroupメソッドを使用できます。

00:05:28.000 --> 00:05:37.000
図形グループには複数のアイテムが含まれているため、UIBarButtonItemGroup APIを使用してグループを作成します。

00:05:37.000 --> 00:05:45.000
このグループは、バー内で移動可能で、取り外し可能でなければならないため、オプションのグループとして作成されます。

00:05:45.000 --> 00:05:53.000
このグループは、representingItemも指定し、UIKitがグループを折りたたむことで、必要に応じてスペースを節約できます。

00:05:53.000 --> 00:06:05.000
representativeItemはアクションを指定せず、さらにUIKitがグループ内のアイテムを選択できるメニューを合成できるようにします。

00:06:05.000 --> 00:06:15.000
カスタマイズUIが呼び出されると、UIKitはグループの作成方法に基づいて指定したルールを自動的に適用します。

00:06:15.000 --> 00:06:23.000
固定および可動グループはバーにとどまる必要がありますが、オプションのグループは任意の数で追加または削除できます。

00:06:23.000 --> 00:06:34.000
UIKitは、バーでできるだけ多くの機能を維持するためにグループを折りたたみしようとしますが、スペースが利用できない場合、余分なアイテムはオーバーフローに移動します。

00:06:34.000 --> 00:06:45.000
オーバーフローメニューには、カスタマイズの一部であるがバーに収まらないアイテムと、バーをカスタマイズするオプションが含まれています。

00:06:45.000 --> 00:06:55.000
UIKitは各バーボタン項目のデフォルトのメニュー要素を合成しますが、必要に応じてメニュー表現をカスタマイズするオプションがあります。

00:06:55.000 --> 00:07:02.000
最後に、この例ではカスタマイズを有効にし、centerItemGroupsを追加します。

00:07:02.000 --> 00:07:09.000
UINavigationItem.customizationIdentifierを設定することで、カスタマイズを有効にします。

00:07:09.000 --> 00:07:19.000
customizationIdentifierは、バーのユニークなカスタマイズを定義するので、アプリ内の他のカスタマイズと競合しない文字列を選択します。

00:07:19.000 --> 00:07:25.000
UIKitは、この識別子に基づいてカスタマイズを自動的に保存および復元します。

00:07:25.000 --> 00:07:30.000
次に、centerItemGroups自体を提供します。

00:07:30.000 --> 00:07:34.000
私がすでにカバーした最初の4つのグループ。

00:07:34.000 --> 00:07:49.000
フォーマットグループは、デフォルトのカスタマイズにないオプションのグループであるため、このコードはisInDefaultCustomizationパラメータのデフォルト値を上書きして除外します。

00:07:49.000 --> 00:07:59.000
UINavigationItem.customizationIdentifierを設定しなくてもcenterItemGroupsを使用できますが、カスタマイズは利用できません。

00:07:59.000 --> 00:08:06.000
Mac Catalystでは、UINavigationBarは自動的にコンテンツをNSToolbarに変換します。

00:08:06.000 --> 00:08:21.000
先頭、中央、末尾のアイテムグループが順番に追加され、NSToolbarのカスタマイズを使用する場合、センターアイテムグループのカスタマイズプロパティが尊重されます。

00:08:21.000 --> 00:08:30.000
予想されるNSToolbarの動作はすべて、タイトルやウィンドウプロキシなどの他のプロパティも利用できます。

00:08:30.000 --> 00:08:35.000
これらはすべて、Mac用に最適化するとデフォルトで発生します。

00:08:35.000 --> 00:08:43.000
次に、特に文書を扱うときに、強力なインタラクションに焦点を当てましょう。

00:08:43.000 --> 00:08:54.000
UINavigationBarは、タイトルビューにメニューを追加することをサポートし、コンテンツ全体を操作するアクションを追加するための中央の場所を提供します。

00:08:54.000 --> 00:09:00.000
さらに、共有シートのサポートを追加し、このメニューからドラッグ&amp;ドロップすることもできます。

00:09:00.000 --> 00:09:04.000
まず、メニュー項目自体に焦点を当てます。

00:09:04.000 --> 00:09:13.000
有効にすると、デフォルトのタイトルメニューには、複製、移動、名前変更、エクスポート、印刷の5つのコマンドが提供されます。

00:09:13.000 --> 00:09:20.000
これらのアイテムは、レスポンダーチェーンの特定の方法に基づいてフィルタリングされます。

00:09:20.000 --> 00:09:30.000
UINavigationBarは名前変更を具体的にサポートしているため、renameDelegateを実装した場合にも含まれます。

00:09:30.000 --> 00:09:39.000
タイトルメニューを有効にするには、表示する最終メニューを返すクロージャであるtitleMenuProviderを設定します。

00:09:39.000 --> 00:09:43.000
クロージャには、提案された要素の配列が渡されます。

00:09:43.000 --> 00:09:48.000
これらをそのまま使用したり、フィルタリングしたり、自分で追加したりできます。

00:09:48.000 --> 00:09:53.000
この例では、メニューに1つのアクションを追加しています。

00:09:53.000 --> 00:09:58.000
最後に、構成されたUIMenuを返します。

00:09:58.000 --> 00:10:06.000
タイトルメニューでは、アクティビティビューコントローラーを介して共有したり、ドラッグ&amp;ドロップをサポートしたりすることもできます。

00:10:06.000 --> 00:10:14.000
これらの機能を有効にするには、ドキュメントを説明するUIDocumentPropertiesインスタンスを提供します。

00:10:14.000 --> 00:10:21.000
UIDocumentPropertiesは、プレビューを含むドキュメントに関するメタデータを表します。

00:10:21.000 --> 00:10:29.000
この例では、URLを使用して作成し、UIKitが必要なメタデータを自動的に取得できるようにします。

00:10:29.000 --> 00:10:36.000
追加機能を有効にするために、この例では、ドキュメントを表すNSItemProviderを作成します。

00:10:36.000 --> 00:10:40.000
dragItemsProviderを設定して、ドラッグ&amp;ドロップを有効にします。

00:10:40.000 --> 00:10:47.000
このクロージャはUIDragSessionを過ぎ、UIDragItemsの配列を返します。

00:10:47.000 --> 00:10:52.000
この例では、文書を表す単一の項目を返します。

00:10:52.000 --> 00:10:56.000
activityViewControllerProviderを設定すると、共有が可能になります。

00:10:56.000 --> 00:11:01.000
このクロージャは、UIActivityViewControllerを設定して返します。

00:11:01.000 --> 00:11:15.000
最後に、入力されたオブジェクトをUINavigationItem.documentPropertiesに割り当て、タイトルをタップすると、UIKitは他のtitleMenuアイテムと一緒にヘッダーを表示します。

00:11:15.000 --> 00:11:25.000
Mac Catalystでは、titleMenuProviderに渡される提案された項目がファイルメニューにすでに存在します。

00:11:25.000 --> 00:11:32.000
タイトルメニューに追加したアイテムは、他の手段で利用できるようにする必要があります。

00:11:32.000 --> 00:11:40.000
UIMenuBuilder APIを使用して、これらのアイテムを追加したり、必要に応じて既存のアイテムをフィルタリングしたりできます。

00:11:40.000 --> 00:11:49.000
ドキュメントのプロパティを指定すると、UIKitは自動的に提供されたURLを使用してmacOSプロキシアイコンを管理します。

00:11:49.000 --> 00:11:57.000
windowSceneの representedURLを手動で設定すると、UIKitの管理に取って代わられます。

00:11:57.000 --> 00:12:01.000
UIKitは、名前の変更を有効にするための2つのメカニズムを提供します。

00:12:01.000 --> 00:12:12.000
インラインリネームは、UINavigationItem.renameDelegateを設定することで提供され、すべてのプラットフォームでタイトルを編集するための専用のUIを提供します。

00:12:12.000 --> 00:12:17.000
完了すると、結果の名前がデリゲートに渡されます。

00:12:17.000 --> 00:12:30.000
または、UIResponder.rename(_:)を実装し、お好みのUIを提供することで、名前変更体験を完全に制御することもできます。

00:12:30.000 --> 00:12:37.000
iOSでは、UINavigationBarはタイトルビュー内で直接名前変更UIを提供します。

00:12:37.000 --> 00:12:45.000
macOSでは、ナビゲーションバーがNSToolbarでホストされている場合、名前変更UIはウィンドウのタイトルによって提供されます。

00:12:45.000 --> 00:12:56.000
インラインリネームを実装するには、UINavigationItemRenameDelegateプロトコルに準拠し、ナビゲーションアイテムのrenameDelegateを設定します。

00:12:56.000 --> 00:13:06.000
ユーザーが受け入れたタイトルを受け取るために使用される、必要なメソッド、navigationItem(_:didEndRenamingWith:)は1つだけです。

00:13:06.000 --> 00:13:12.000
ファイルベースのアプリの場合、UIDocumentBrowserViewControllerは名前が変更されたAPIを提供するようになりました。

00:13:12.000 --> 00:13:23.000
検索は、最も重要なデータを見つけるユーザーの数であり、iOS 16の進歩により、優れた検索体験を提供することが容易になります。

00:13:23.000 --> 00:13:33.000
最初に注意すべきことは、iPadOSのナビゲーションバーとmacOSのツールバーに並ぶことで、検索の占有スペースが少なくなるということです。

00:13:33.000 --> 00:13:40.000
iPadOSでは、UINavigationItem .preferredSearchBarPlacementで古い動作を復元できます。

00:13:40.000 --> 00:13:47.000
さらに、検索バーはボタンに折りたたむことで、他のコントロールのためのより多くのスペースを与えることができます。

00:13:47.000 --> 00:14:00.000
検索を有効にすると、検索候補が表示され、更新された検索クエリと一緒に更新できるため、ユーザーの検索を支援する機会が得られます。

00:14:00.000 --> 00:14:06.000
次に、検索候補を設定するために必要なコードについて説明します。

00:14:06.000 --> 00:14:16.000
検索候補を管理するには、UISearchResultsUpdateatingに準拠し、searchControllerのsearchResultsUpdaterを設定します。

00:14:16.000 --> 00:14:24.000
これにより、クエリの変更に応じて提案を更新し、選択した検索提案に基づいて行動することができます。

00:14:24.000 --> 00:14:33.000
クエリが変更されると、updateSearchResults(for:)が呼び出され、検索候補を更新できます。

00:14:33.000 --> 00:14:36.000
どのような提案を提供するかはあなた次第です。

00:14:36.000 --> 00:14:41.000
空の配列を設定すると、提案UIがクリアされます。

00:14:41.000 --> 00:14:48.000
UIKitは、提案コンテンツを指定するためのUISearchSuggestionItemを提供します。

00:14:48.000 --> 00:14:56.000
提案の選択に対応するには、updateSearchResults(for:selecting:)を実装します。

00:14:56.000 --> 00:15:02.000
この方法は、選択した検索提案を渡すので、適切に反応することができます。

00:15:02.000 --> 00:15:10.000
この例では、現在のクエリを検索提案で指定されたクエリに置き換えて検索を更新します。

00:15:10.000 --> 00:15:19.000
UISearchTextFieldにはsearchSuggestionsもあるので、そのクラスを単独で使用したい場合は、検索候補を実装できます。

00:15:19.000 --> 00:15:25.000
しかし、UISearchControllerを使用している場合は、代わりにそのプロパティを使用する必要があります。

00:15:25.000 --> 00:15:33.000
iOS 16では、UIKitはユーザーに生産性を高めるのに役立つ新しいAPIを提供します。

00:15:33.000 --> 00:15:39.000
センターアイテムとタイトルメニューを使用して、高度な機能にさらなる発見可能性をもたらします。

00:15:39.000 --> 00:15:46.000
ナビゲーションバーから直接ドラッグ&amp;ドロップと共有を提供することで、ドキュメントのサポートを改善します。

00:15:46.000 --> 00:15:58.000
検索の提案を提供することで、検索をより簡単かつ迅速にし、ほぼゼロの労力で箱から出してすぐに素晴らしいMac体験を得ることができます。

00:15:58.000 --> 00:15:59.000
このビデオを見てくれてありがとう。

00:15:59.000 --> 00:16:03.000
デスクトップクラスになるようにアプリをどのように強化するかを見るのが待ちきれません!

00:16:03.000 --> 23:59:59.000
。

