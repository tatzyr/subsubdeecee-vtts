WEBVTT

00:00:01.000 -> 00:00:09.000
♪インストゥルメンタルヒップホップ音楽♪

00:00:09.000 -> 00:00:13.000
こんにちは。今年のWWDCへようこそ。

00:00:13.000 -> 00:00:15.000
私の名前はステラです。

00:00:15.000 -> 00:00:17.000
そして私はアレックスです。

00:00:17.000 -> 00:00:20.000
ステラと私はアップルで米ドルの多くの部分で一緒に働いています。

00:00:20.000 -> 00:00:23.000
今日は、USDツールとレンダリングのアップデートについてご検討します。

00:00:23.000 -> 00:00:27.000
持って行って、ステラ！

00:00:27.000 -> 00:00:48.000
USDは、コンテンツ作成ツールへの統合の拡大と深化に伴い、USDを中心に、資産やコンテンツの作成、ゲーム、AR、映画、ウェブのレンダリングを可能にする基礎技術です。

00:00:48.000 -> 00:00:54.000
今日は、エコシステムの2つの部分、ツールとレンダリングに焦点を当てます。

00:00:54.000 -> 00:00:59.000
USDツールのアップデートから始めましょう。

00:00:59.000 -> 00:01:19.000
次に、ARクイックルックの新しい照明で資産がどのようにより良く見えるかを示し、USDレンダリングを深く掘り下げ、最後に、Hydraを統合する方法を紹介します。

00:01:19.000 -> 00:01:24.000
AppleのエコシステムでUSD Toolsを始めましょう。

00:01:24.000 -> 00:01:37.000
USDZツール、リアリティコンバータをカバーし、USDZコンテンツの作成に役立つ追加のツールとフレームワークをフォローアップします。

00:01:37.000 -> 00:01:50.000
USDZ Toolsは、USDZファイルの生成、検証、検査に役立つ必須のコマンドラインUSD Pythonツールを含むパッケージです。

00:01:50.000 -> 00:02:01.000
このパッケージには、他の主要な3Dファイル形式からUSDZファイルを作成するusdzconvertと呼ばれるコンバーターも含まれています。

00:02:01.000 -> 00:02:07.000
Pythonスクリプトは、自動化とバッチ処理のための強力なツールを提供します。

00:02:07.000 -> 00:02:14.000
また、USDを探索し、APIの使い方を学ぶのに最適な方法です。

00:02:14.000 -> 00:02:19.000
今年は、Python 3とApple Siliconのサポートをお届けします。

00:02:19.000 -> 00:02:30.000
また、USDバージョンをアップグレードして、新しいUSD機能とパフォーマンスの向上に簡単にアクセスできるようにしました。

00:02:30.000 -> 00:02:35.000
さらに、usdzconvertに素晴らしい新機能を追加しました。

00:02:35.000 -> 00:02:44.000
useObjMtlフラグを使用して、資料を含むOBJファイルをUSDZに変換できるようになりました。

00:02:44.000 -> 00:02:55.000
また、GLTFファイルからのポイントと行のサポート、およびFBXファイルからのアニメーションのシーンタイムも追加しました。

00:02:55.000 -> 00:03:08.000
すべてのusdzconvertオプションとコンバージョンをカスタマイズする方法を表示するには、ターミナルに「usdzconvert --help」と入力するだけです。

00:03:08.000 -> 00:03:25.000
これにより、著作権情報の追加や、3Dモデル用の diffuseColorまたはnormalMapの提供など、usdzconvertで使用できるすべてのオプションが表示されます。

00:03:25.000 -> 00:03:53.000
または、コマンドラインを使用するよりもワークフローのUIエディタを好む場合は、USDZツールを使用して構築され、usdzconvertと同じ機能を提供するReality Converterもありますが、エディタウィンドウで、MacOSでUSDコンテンツを簡単に変換、表示、カスタマイズできます。

00:03:53.000 -> 00:04:05.000
OBJ、GLTF、FBXなどの一般的な3Dファイル形式をインポートするだけで、変換されたUSDZの結果が表示されます。

00:04:05.000 -> 00:04:10.000
今年は、ワークフローを合理化するためにUIも改善しました。

00:04:10.000 -> 00:04:19.000
テクスチャを選択して、詳細情報を表示できます...

00:04:19.000 -> 00:04:31.000
独自のテクスチャで材料のプロパティをカスタマイズする...

00:04:31.000 -> 00:04:41.000
著作権を追加するか、ファイルのメタデータを編集する...

00:04:41.000 -> 00:04:50.000
そして、古典的な照明または新しい照明を選択し、セッションの後半で詳しく説明します。

00:04:50.000 -> 00:05:12.000
組み込みのオプションを使用して、さまざまな照明条件でUSDZオブジェクトをプレビューし、それに応じて露出を調整することもできます。アセット側では、USDZファイルをエクスポートしながらテクスチャ品質を選択できる新機能を追加しました。

00:05:12.000 -> 00:05:17.000
デフォルトでは、テクスチャは元の非圧縮サイズでエクスポートされます。

00:05:17.000 -> 00:05:29.000
しかし、USDZファイルのサイズを小さくしたい場合は、テクスチャをJPEG形式に圧縮するオプションがあります。

00:05:29.000 -> 00:05:35.000
この例では、オブジェクトキャプチャを使用して、このチェスの駒を高解像度でスキャンしました。

00:05:35.000 -> 00:05:46.000
メッシュの詳細を失うことなくファイルサイズを小さくするために、RealityConverterを使用して圧縮されたテクスチャでモデルをエクスポートしました。

00:05:46.000 -> 00:05:56.000
視覚的な違いはほとんど目立たず、結果のファイルサイズがなんと80%削減されました!

00:05:56.000 -> 00:06:04.000
さらにエキサイティングなニュースがあります。RealityConverterは、USD資産の問題を自動的に修正できるようになりました。

00:06:04.000 -> 00:06:22.000
不一致の属性と接続タイプを修正し、複数のトップレベルのプリムと不足しているデフォルトのプリムを持つステージを修正し、非推奨の属性を更新し、不足しているステージメタデータを追加します。

00:06:22.000 -> 00:06:30.000
ユニバーサルバイナリサポートも追加したので、Apple Siliconでネイティブに動作するようになりました。

00:06:30.000 -> 00:06:35.000
さて、3Dモデルをゼロから作成したい場合はどうなりますか?

00:06:35.000 -> 00:06:47.000
昨年、私たちはmacOSでRealityKit APIとしてオブジェクトキャプチャを立ち上げ、USDZ資産を作成する革新的な方法を提供します。

00:06:47.000 -> 00:06:52.000
その後、Reality Composerを使用して、複数のアセットでシーンを作成できます。

00:06:52.000 -> 00:07:01.000
今年は、部屋のパラメトリック3Dスキャンを作成できるRoomPlan APIをお届けします。

00:07:01.000 -> 00:07:05.000
この3つのセッションをチェックすることを強くお勧めします。

00:07:05.000 -> 00:07:14.000
これらの技術を組み合わせることで、誰もが没入型AR体験をこれまで以上に簡単に作成できます。

00:07:14.000 -> 00:07:24.000
今日取り上げたこれらのツールはすべて、Apple開発者WebサイトのAR作成ツールページで今すぐダウンロードできます。

00:07:24.000 -> 00:07:26.000
それらをチェックしてください!

00:07:26.000 -> 00:07:32.000
次に、AR Quick Lookの新しい照明を見てみましょう。 

00:07:32.000 -> 00:07:52.000
ARクイックルックは、iOSの組み込みのシステム全体のARビューアで、テーブル、壁、床などの物理的な空間に3D USDZオブジェクトを配置し、簡単なタッチジェスチャーで対話することができます。

00:07:52.000 -> 00:08:05.000
Reality Composerで構築されたインタラクティブなシーンを作成し、iMessage、Mail、Notesなどで他の人と共有できるUSDZファイルに保存することもできます。

00:08:05.000 -> 00:08:27.000
私たちは常にARクイックルックのレンダリングをより現実的にするために努力しており、今年はARクイックルックで改善された照明を導入しています。これは、より明るく、コントラストが強化され、形状定義が改善され、資産をさらに良く見えます。

00:08:27.000 -> 00:08:33.000
以下は、クラシックと新しい照明を備えたオブジェクトモードのAirPods Proの例です。

00:08:33.000 -> 00:08:47.000
AirPods Proは両方の照明条件で見栄えがよく、新しい照明オプションが明るい色、より高いコントラスト、そしてより多くのハイライトを提供していることに気付くでしょう。

00:08:47.000 -> 00:08:54.000
では、AirPods Maxを机の上に置いて、新しい照明でARモードで見ましょう!

00:08:54.000 -> 00:08:57.000
すごいですね。

00:08:57.000 -> 00:09:02.000
では、新しい照明を資産にどのように適用しますか?

00:09:02.000 -> 00:09:04.000
それは本当に簡単です。

00:09:04.000 -> 00:09:15.000
USDZファイルに新しいpreferredIblVersionメタデータを設定して、コンテンツに最適な照明を選択するだけです。

00:09:15.000 -> 00:09:24.000
ここでは、preferredIblVersionの値を2に設定しました。これは、新しい照明システムを使用するためのARクイックルックを示します。

00:09:24.000 -> 00:09:28.000
これをもっと詳しく理解しましょう。

00:09:28.000 -> 00:09:36.000
preferredIBLVersionメタデータは、0,1、および2の値を保持できます。

00:09:36.000 -> 00:09:43.000
preferredIblVersionが0に設定されているアセットは、システムのデフォルト照明を使用します。

00:09:43.000 -> 00:09:48.000
1に設定すると、引き続き古典的な照明を使用します。

00:09:48.000 -> 00:09:52.000
2の値はあなたに新しい照明を与えるでしょう。

00:09:52.000 -> 00:09:58.000
これは、現在の資産を新しい照明にも簡単に更新できることを意味します!

00:09:58.000 -> 00:10:05.000
明示的な選択をして、すべての資産にこのメタデータを設定することをお勧めします。

00:10:05.000 -> 00:10:12.000
これを行うには、フラグpreferrediblversionでusdzconvertを使用できます。

00:10:12.000 -> 00:10:20.000
たとえば、フラグを使用して、新しい照明で消火栓OBJファイルをUSDZに変換する方法は次のとおりです。

00:10:20.000 -> 00:10:28.000
または、デフォルトで新しい照明を使用するReality Converterを使用することもできます。

00:10:28.000 -> 00:10:35.000
しかし、古典的な照明を使用したい場合は、プロパティパネルに新しいオプションがあります。

00:10:35.000 -> 00:10:42.000
ここでは、古典的な照明と新しい照明の両方でAirPods Maxアセットをプレビューします。

00:10:42.000 -> 00:10:47.000
これは、違いを比較する簡単な方法を提供します。

00:10:47.000 -> 00:10:54.000
照明アイコンをクリックすると、適用された照明も参考のために強調表示されます。

00:10:54.000 -> 00:11:06.000
最後に、このメタデータのないアセットの場合、AR Quick Lookはファイルの日付と時刻のスタンプに基づいて照明バージョンを自動的に決定します。

00:11:06.000 -> 00:11:14.000
資産が2022年7月1日以降に作成された場合は、新しい照明を使用します。

00:11:14.000 -> 00:11:21.000
古い資産は、見た目を変えないように、古典的な照明を使用し続けます。

00:11:21.000 -> 00:11:24.000
さて、USDレンダリングのためにアレックスに渡します。

00:11:24.000 -> 00:11:26.000
ありがとう、ステラ。

00:11:26.000 -> 00:11:29.000
私たちは今日、すでに多くのレンダリングされたUSD資産を見てきました。

00:11:29.000 -> 00:11:39.000
次に、USDレンダリングとHydraが3Dコンテンツ作成パイプラインに最適な選択肢である理由と、それを独自のアプリケーションに統合する方法を探ります。

00:11:39.000 -> 00:11:44.000
まず、一歩下がって、レンダリング全般について話しましょう。

00:11:44.000 -> 00:11:53.000
レンダラーは、3Dモデル、カメラ、ライトのコレクションを入力として取り、それらを使用して画像を生成します。

00:11:53.000 -> 00:12:01.000
多くの異なるレンダラーがあり、それぞれが特定の目的のために構築され、異なるユースケースに最適化されています。

00:12:01.000 -> 00:12:08.000
一部のレンダラーは、ゲームやARシーンでキャラクターをレンダリングするなどのリアルタイムアプリケーション用に設計されています。

00:12:08.000 -> 00:12:17.000
他の人ははるかに時間がかかりますが、ハリウッド映画の視覚効果を生成するなど、よりフォトリアリスティックな画像を生成します。

00:12:17.000 -> 00:12:22.000
すべてのレンダラーズは、その機能について選択し、ユニークです。

00:12:22.000 -> 00:12:27.000
異なるユースケースのための異なるUSDレンダラーは、Appleプラットフォームにも存在します。

00:12:27.000 -> 00:12:32.000
これらの異なるレンダラーに関するドキュメントをdeveloper.apple.comに追加します。

00:12:32.000 -> 00:12:44.000
それらの違いを理解し、どのUSD機能をサポートしているかを説明し、あなたに最適なUSDを作成する方法についてのガイダンスを提供するのに役立ちます。

00:12:44.000 -> 00:12:57.000
Appleプラットフォームのレンダラーの1つはRealityKitで、フォトリアリスティックなレンダリングシステムを特徴とし、インタラクティブな拡張現実体験に最適化され、ARクイックルックで使用されています。

00:12:57.000 -> 00:13:00.000
これはUSDZファイルの主要なレンダラーです。

00:13:00.000 -> 00:13:07.000
macOSでのUSDレンダリングのもう1つのオプションは、ピクサーのオープンソースレンダラー、ストームです。

00:13:07.000 -> 00:13:14.000
プロダクショングレードのアセットに最適化されており、大規模なシーンのリアルタイムプレビュー用に設計されています。

00:13:14.000 -> 00:13:22.000
これは、コンテンツ作成パイプラインを流れるアセットを視覚化して反復するための素晴らしい技術です。

00:13:22.000 -> 00:13:25.000
ストームはヒドラと呼ばれる技術を使用しています。

00:13:25.000 -> 00:13:31.000
HydraはUSDオープンソースプロジェクトの中核的な側面です。

00:13:31.000 -> 00:13:35.000
次に、ヒドラとストームとのつながりを理解しましょう。

00:13:35.000 -> 00:13:38.000
先ほどのこの図から始めます。

00:13:38.000 -> 00:13:42.000
ここでは、ストームをレンダラーとして使用します。

00:13:42.000 -> 00:13:50.000
入力は通常「シーングラフ」と呼ばれ、ストームはそのプレビューレンダリングを生成します。

00:13:50.000 -> 00:13:57.000
しかし、別のレンダラーを使用して同じシーンのフォトリアリスティックな画像を生成したい場合はどうなりますか?

00:13:57.000 -> 00:14:00.000
それはまさにヒドラが作られているものです。

00:14:00.000 -> 00:14:11.000
シーンをレンダラーに緊密に結合する代わりに、Hydraはシーンからレンダラーにデータを転送するために、それらの間の抽象的なレイヤーとして機能します。

00:14:11.000 -> 00:14:19.000
これにより、シーングラフを変更することなく、いつでもニーズに基づいてレンダラーを簡単に交換できます。

00:14:19.000 -> 00:14:24.000
例えば、ストームとピクサーのレンダーマンを使うかもしれません。

00:14:24.000 -> 00:14:35.000
コンテンツ作成パイプラインでは、Stormを使用して高速レンダリングと迅速な反復を行い、準備ができたらRenderManに切り替えて最終的な画像を生成できます。

00:14:35.000 -> 00:14:38.000
シーングラフも同様です。

00:14:38.000 -> 00:14:43.000
Hydraへの入力は、USDシーングラフでも、別のものでもかまいません。

00:14:43.000 -> 00:14:53.000
これにより、それぞれが独自のまったく異なるシーングラフを持っていても、複数のアプリケーションで同じレンダラーを活用できます。

00:14:53.000 -> 00:14:59.000
Hydraとシーングラフやレンダラーを接続するインターフェースは、デリゲートと呼ばれます。

00:14:59.000 -> 00:15:08.000
シーングラフはシーンデリゲートを介してヒドラに接続され、レンダラはレンダリングデリゲートを介してヒドラに接続されます。

00:15:08.000 -> 00:15:11.000
そして、それはあなたにとってヒドラです!

00:15:11.000 -> 00:15:23.000
FoundryのNuke 13はすでにHydraを使用してビューポートをレンダリングしており、macOSのNukeアーティストがNukeの3Dシステムでより良い品質とインタラクティブな体験を得ることができます。

00:15:23.000 -> 00:15:30.000
これは、カスタムシーンデリゲートとメタルアクセラレーションストームでヒドラを使用することによって達成されます。

00:15:30.000 -> 00:15:39.000
ピクサー・アニメーション・スタジオと協力して、メタル・アクセラレーション・ストームをオープンソースに公開したことを共有できることを嬉しく思います。

00:15:39.000 -> 00:15:43.000
22.05.米ドルで使用できます。

00:15:43.000 -> 00:15:53.000
Hydraの力を見たので、USDシーングラフの典型的なユースケースとレンダラーとしてのStormを使用して、Hydraサンプルアプリケーションを見てみましょう。

00:15:53.000 -> 00:16:00.000
Hydraを使用して、コンテンツ作成ツールと3Dワークフローアプリケーションの構築を開始できます。

00:16:00.000 -> 00:16:05.000
私たちのサンプルアプリケーション、HydraPlayerは非常にシンプルですが、強力です。

00:16:05.000 -> 00:16:12.000
それはStormでUSDファイルをレンダリングし、その周りにカメラを動かすことができます。

00:16:12.000 -> 00:16:18.000
そして、すぐに始めるために、HydraPlayerを公開サンプルプロジェクトにすることに興奮しています!

00:16:18.000 -> 00:16:24.000
セッションリソースで利用でき、readmeに完全な指示が付属しています。

00:16:24.000 -> 00:16:32.000
今すぐこのビデオを一時停止し、プロジェクトをダウンロードして、それを歩きながらフォローすることをお勧めします。

00:16:32.000 -> 00:16:41.000
Xcodeプロジェクトには、AppDelegate、Camera、Renderer、View Controllerの4つのクラスがあります。

00:16:41.000 -> 00:16:47.000
AppDelegateは基本的にルートオブジェクトであり、システムとのやり取りを管理します。

00:16:47.000 -> 00:16:54.000
カメラクラスは、ユーザーの入力を簡単に翻訳できるように、USDシーンカメラのシンプルな表現です。

00:16:54.000 -> 00:16:59.000
レンダラークラスは、USDとHydraとのすべての相互作用を処理します。

00:16:59.000 -> 00:17:05.000
最後になりましたが、ViewControllerはユーザー入力を処理します。

00:17:05.000 -> 00:17:16.000
HydraPlayerを構築して起動する前に、環境を準備し、Apple Silicon MacでRosettaを使用し、USDとHydraをダウンロードして構築する3つのことがあります。

00:17:16.000 -> 00:17:20.000
では、始めましょう。

00:17:20.000 -> 00:17:23.000
まず、開発環境を準備します。

00:17:23.000 -> 00:17:29.000
Xcode、Python、CMakeがインストールされていることを確認してください。

00:17:29.000 -> 00:17:34.000
それでは、他の2つのステップのターミナルを開きましょう。

00:17:34.000 -> 00:17:42.000
Apple Silicon Macをお使いの場合は、USDがarm64を完全にサポートに移行している間、Rosettaの下で実行する必要があります。

00:17:42.000 -> 00:17:46.000
これを行うには、アーチコマンドを使用します。

00:17:46.000 -> 00:17:52.000
環境の準備ができたら、USDとHydraのソースコードをダウンロードする必要があります。

00:17:52.000 -> 00:17:57.000
どちらもPixarAnimationStudios/USDの同じGitHubリポジトリにあります。

00:17:57.000 -> 00:18:01.000
コードがわかったので、それを構築できます。

00:18:01.000 -> 00:18:04.000
USDには便利なPythonビルドスクリプトが付属しています。

00:18:04.000 -> 00:18:13.000
「Generator Xcode」と「no-python」のフラグを追加し、USDをインストールする場所を指定します。

00:18:13.000 -> 00:18:17.000
「USDInstall」のソースコードの横に置きましょう。

00:18:17.000 -> 00:18:22.000
USDが構築を終えたら、HydraPlayerを構築する準備が整いました!

00:18:22.000 -> 00:18:30.000
もう一度この図に戻り、それを使ってHydraPlayerの主要部分を特定して詳細にチェックしましょう。

00:18:30.000 -> 00:18:38.000
3Dモデルのロード方法、カメラの設定方法、シーンライトの設定方法を見ていきます。

00:18:38.000 -> 00:18:47.000
次に、シーングラフをStormに取得する方法と、最後に、アプリケーションウィンドウ用の画像を生成する方法を学びます。

00:18:47.000 -> 00:18:50.000
それでは、USDから3Dモデルの読み込みを始めましょう。

00:18:50.000 -> 00:19:01.000
ViewControllerのviewDidAppearでは、ビューが初めて表示されたときにNSOpenPanelでファイルピッカーを作成します。

00:19:01.000 -> 00:19:09.000
ファイルが選択されると、レンダラーはシーンの設定を開始し、USDファイルを読み込むことができます。

00:19:09.000 -> 00:19:12.000
ファイルの読み込みは、USD APIで非常に簡単です。

00:19:12.000 -> 00:19:17.000
ファイルパスでUSDステージを開くだけです。

00:19:17.000 -> 00:19:20.000
それでおそれ。ファイルをロードしました。

00:19:20.000 -> 00:19:26.000
次に、カメラをセットアップします。私たちのコードでは、これは簡単です。

00:19:26.000 -> 00:19:31.000
setupCameraでは、まず新しいシーンカメラを作成します。

00:19:31.000 -> 00:19:37.000
次に、シーンに基づいて世界の大きさと中心を計算します。

00:19:37.000 -> 00:19:43.000
次に、カメラを良い距離に動かしてから、中央に焦点を合わせます。

00:19:43.000 -> 00:19:47.000
このようにして、私たちのカメラはシーン全体をキャプチャします。

00:19:47.000 -> 00:19:50.000
素晴らしい、今、私たちはカメラをセットアップしました。

00:19:50.000 -> 00:19:54.000
次に、照明。

00:19:54.000 -> 00:20:04.000
私たちはそれを簡単に保ち、1つのシンプルなアンビエントライトを作成し、カメラに合わせて位置を設定します。それだけです。

00:20:04.000 -> 00:20:09.000
そして、それで、私たちは3Dモデル、カメラ、ライトで私たちのフルシーンを持っています!

00:20:09.000 -> 00:20:13.000
私たちは今、私たちのシーンをストームに渡すことができます。

00:20:13.000 -> 00:20:17.000
まず、レンダリングエンジンを初期化する必要があります。

00:20:17.000 -> 00:20:24.000
ここでは、Stormのクラス名である新しいUsdImagingGLEngineを作成します。

00:20:24.000 -> 00:20:28.000
ここで最も重要なパラメータはrootPathです。

00:20:28.000 -> 00:20:33.000
それは私たちの3Dモデルで私たちのUSDステージにエンジンを指し示します。

00:20:33.000 -> 00:20:41.000
他のパラメータとUsdImagingGLEngineの詳細については、ピクサーのUSD APIドキュメントをご覧ください。

00:20:41.000 -> 00:20:48.000
次に、エンジンにカメラを設置し、照明のセットアップを設定します。

00:20:48.000 -> 00:20:55.000
最後になりましたが、レンダリングパラメータを設定して、Stormのレンダリング方法を定義します。

00:20:55.000 -> 00:21:03.000
たとえば、レンダリングされた画像がアプリの配色でうまく機能するように、透明な背景をレンダリングしたいと考えています。

00:21:03.000 -> 00:21:10.000
アニメーション付きのシーンでは重要で、これはタイムコードを指定する場所でもあります。

00:21:10.000 -> 00:21:13.000
これで、画像をレンダリングする準備が整いました!

00:21:13.000 -> 00:21:20.000
必要なセットアップはすでにすべて完了したので、レンダリングコマンドは1行のコードにすぎません。

00:21:20.000 -> 00:21:26.000
私たちは結果を得て、それを私たちの窓に表示し、私たちはそこにいます!

00:21:26.000 -> 00:21:28.000
私たちはUSDのおもちゃの飛行機をレンダリングしています!

00:21:28.000 -> 00:21:31.000
そして実際には、私たちは1つの飛行機だけをレンダリングしていません。

00:21:31.000 -> 00:21:39.000
HydraPlayerは、数千万の三角形で何千ものアニメーションアセットを簡単にレンダリングできます。

00:21:39.000 -> 00:21:47.000
まだしていない場合は、このセッションのリソースをチェックし、サンプルプロジェクトをダウンロードし、さらに探索して楽しんでください。

00:21:47.000 -> 00:21:54.000
私たちは一緒に、それらをより強力にし、あなたの資産をさらに良く見せるAppleのUSDツールのアップデートを検討しました。

00:21:54.000 -> 00:22:04.000
Hydraの機能について学び、HydraPlayerのサンプルプロジェクトを見て、それを自分のアプリケーションに統合する方法を確認しました。

00:22:04.000 -> 00:22:12.000
米ドルの重要な概念の詳細については、「米ドルの基礎を理解する」セッションをご覧ください。

00:22:12.000 -> 00:22:14.000
ありがとうございます。

00:22:14.000 -> 23:59:59.000
♪ ♪

