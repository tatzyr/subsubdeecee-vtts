WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:12.000
こんにちは。私はステファニー・アングロです。

00:00:12.000 --> 00:00:13.000
私はマーカス・ジャクソンです。

00:00:13.000 --> 00:00:16.000
私たちはSwift Playgrounds Contentチームのソフトウェアエンジニアです。

00:00:16.000 --> 00:00:21.000
今日は、Swift Playgroundsの魅力的なコンテンツを作成するためのツールを提供します。

00:00:21.000 --> 00:00:24.000
Swift Playgrounds 4は、iPadとMacでアプリ開発を導入しました。

00:00:24.000 --> 00:00:27.000
これは、App Store用のアプリの構築について学ぶための最良の方法です。

00:00:27.000 --> 00:00:33.000
私たちのチームは、アプリ開発の基礎を学ぶのに役立つ多くのチュートリアルとサンプルコード製品をリリースしました。

00:00:33.000 --> 00:00:45.000
観測可能なデータモデルを使用した動的SwiftUIアプリの構築、楽しいSwiftUIアニメーションやシェイプによるビューのカスタマイズ、非同期データフェッチなどのより高度なトピックをカバーしています。

00:00:45.000 --> 00:00:57.000
今日のセッションでは、新しい教育システムの概要を提供し、プロジェクトのガイドモジュールを使用してコンテンツを作成し、ウォークスルーと実験タスクで没入型の学習体験を構築します。

00:00:57.000 --> 00:00:59.000
始めましょう。

00:00:59.000 --> 00:01:02.000
学習者が私たちのチュートリアル「Keep Going with Apps」を完了すると想像してみてください。

00:01:02.000 --> 00:01:04.000
彼らは「Emoji App」というアプリで終わるだろう。

00:01:04.000 --> 00:01:19.000
このアプリでは、リスト内のすべてのお気に入りの動物を追跡し、色とサイズを変更し、動物をタップして「クリーチャーダンス」ビューでグルーヴを得るのを見ることができます。

00:01:19.000 --> 00:01:22.000
このダンスビューは楽しいですが、雰囲気をもっと実際のダンスパーティーにしたいです。

00:01:22.000 --> 00:01:27.000
では、学習者に示すことができる追加機能をいくつか追加しましょう。

00:01:27.000 --> 00:01:30.000
ここでは、「クリーチャーダンス」ビューにもう少しコードを追加しました。

00:01:30.000 --> 00:01:32.000
どのパーティーもダンスフロアが必要です。

00:01:32.000 --> 00:01:37.000
そこで、ビューの背景として設定した10x10のグリッドを作りました。

00:01:37.000 --> 00:01:42.000
また、グリッド内の各タイルは、カスタムビュー修飾子を使用してランダムに色を更新します。

00:01:42.000 --> 00:01:46.000
グルーヴィーに見えるね？

00:01:46.000 --> 00:01:58.000
また、私たちのお気に入りの動物が私たちの助けを借りずに踊れるようにしたかったので、動物のスケール、位置オフセット、回転をアニメーション化するのに役立つカスタム修飾子をいくつか作りました。

00:01:58.000 --> 00:02:07.000
これらのカスタム修飾子のすべてで、これらのアニメーションはリピートフォーエバーに設定されています。つまり、私たちの動物は真新しいダンスフロアで一晩中踊ることができます。

00:02:07.000 --> 00:02:13.000
そして最後に、ダンスフロアを本当に照らすために、私は私たちのビューの上部にアニメーションディスコボールを追加しました。

00:02:13.000 --> 00:02:18.000
この最後のタッチを追加すると、究極のダンスパーティーのためにすべてをまとめることができます。

00:02:18.000 --> 00:02:22.000
私はこのプロジェクトにかなりの数の変更を加えましたが、カスタムビュー修飾子の詳細に飛び込むことさえしませんでした。

00:02:22.000 --> 00:02:25.000
では、これを学習者にどのように説明すべきですか?

00:02:25.000 --> 00:02:33.000
学習者にAppleのドキュメントを誘導することはできますが、Swift Playgroundsでプロジェクトのコードと一緒にこれらの概念を教えるオプションもあります。

00:02:33.000 --> 00:02:40.000
私たちのチームは、あなたのような著者が学習者のために魅力的なアプリ内体験を作成するのに役立つように設計されたこの新しい教育システムを構築しました。

00:02:40.000 --> 00:02:45.000
今日は、Swift Playgrounds 4でこのアプリの学習コンテンツを構築する方法を説明します。

00:02:45.000 --> 00:02:48.000
あなたが何を持って立ち去るかのスニークピークをあげましょう。

00:02:48.000 --> 00:02:57.000
学習者が最初にSwift Playgroundsでコンテンツを開くと、友人のByteからここに示すように、オプションのウェルカムメッセージでプロジェクトを紹介できます。

00:02:57.000 --> 00:03:06.000
ウェルカムメッセージは、プロジェクトのソースエディタの上部にある画面の左側にあり、画面の右側には学習センターがあります。

00:03:06.000 --> 00:03:13.000
学習センターは、学習者にコンテンツを説明する画像や指導テキストを追加できる指定されたエリアです。

00:03:13.000 --> 00:03:24.000
ウェルカムメッセージと学習センターでは、このプロジェクトがSwiftUIの色、形、アニメーションの助けを借りてジャムを盛り上げることを学習者に知らせています。

00:03:24.000 --> 00:03:26.000
学習センターには、タスクのセクションも含まれています。

00:03:26.000 --> 00:03:31.000
タスクは、著者が学習者を導くために書くことができるコーディング目標です。

00:03:31.000 --> 00:03:34.000
それらはコンテンツの基本的な構成要素です。

00:03:34.000 --> 00:03:42.000
学習センターのタスクボタンをタップすると、私たちの教育システムはSwiftファイルを開き、そのファイルの上部に学習教材を含むカードをレンダリングします。

00:03:42.000 --> 00:03:48.000
このカードには、テキスト、画像、コードスニペットを含む一連のページを含めることができます。

00:03:48.000 --> 00:03:55.000
その後、マーカスはウォークスルーと実験の2つのタスクタイプを調べます。

00:03:55.000 --> 00:03:58.000
高いレベルでは、それが私たちの教育システムが提供しなければならないものです。

00:03:58.000 --> 00:04:05.000
適切な散文と適切なタスクで、学習者のための説得力のある教育体験を構築できます。

00:04:05.000 --> 00:04:09.000
さて、独自のコンテンツの作成を開始するには、まずガイドモジュールについて話す必要があります。

00:04:09.000 --> 00:04:14.000
デフォルトでは、swiftpmプロジェクトのファイル構造は、すべてのソースコードをルートに保持します。

00:04:14.000 --> 00:04:20.000
教育システムを利用するためにプロジェクトをアップグレードするには、ファイル構造を変更する必要があります。

00:04:20.000 --> 00:04:22.000
まず、アプリモジュールを作成する必要があります。

00:04:22.000 --> 00:04:26.000
作成したら、プロジェクトのソースコードとアセットをすべて移動する必要があります。

00:04:26.000 --> 00:04:32.000
Package.swiftファイルは、プロジェクトのルートに残しておく必要があります。

00:04:32.000 --> 00:04:34.000
次に、ガイドモジュールを作成する必要があります。

00:04:34.000 --> 00:04:39.000
このモジュールは、AppモジュールとPackage.swiftファイルと同じレベルである必要があります。

00:04:39.000 --> 00:04:42.000
ガイドモジュール内では、ガイドファイルが必要です。

00:04:42.000 --> 00:04:45.000
このファイルには、学習コンテンツのすべての散文が含まれます。

00:04:45.000 --> 00:04:51.000
私はすでにガイドファイルを始めたので、これまでに書いた内容をチェックしてみましょう。

00:04:51.000 --> 00:04:54.000
ガイドファイルには、ディレクティブとマークダウンの組み合わせが含まれています。

00:04:54.000 --> 00:05:04.000
ディレクティブは、文字列などの属性としてプリミティブ型や、マークダウン要素やその他のディレクティブなどのより複雑な型として取り込むことができるマークダウンの拡張です。

00:05:04.000 --> 00:05:11.000
ディレクティブは他のディレクティブのコンテナとして機能することができますが、教育システムのUI要素を表すこともできます。

00:05:11.000 --> 00:05:16.000
まず、ガイドファイルで、ファイル全体に包まれた必要なガイドブックディレクティブを追加しました。

00:05:16.000 --> 00:05:19.000
これは、すべてのディレクティブのメインコンテナとして機能します。

00:05:19.000 --> 00:05:26.000
そのパラメータには、タイトル、アイコン、背景画像、およびプロジェクトを開いたときに最初に開きたいファイルが含まれます。

00:05:26.000 --> 00:05:30.000
ガイドブックディレクティブの下で、ウェルカムメッセージディレクティブを追加しました。

00:05:30.000 --> 00:05:36.000
ウェルカムメッセージはオプションであり、前述のように、最初にプロジェクトを開いたときに学習者に提示されます。

00:05:36.000 --> 00:05:41.000
ウェルカムメッセージディレクティブの下に、ステップディレクティブに包まれたガイドディレクティブを追加しました。

00:05:41.000 --> 00:05:48.000
ガイドディレクティブは、学習センターやタスクに表示されるコンテンツにステップとステップをマッピングするためのコンテナとして機能します。

00:05:48.000 --> 00:05:56.000
学習センターに画像と指導テキストの追加を開始するには、ステップ内にContentAndMediaディレクティブを含める必要があります。

00:05:56.000 --> 00:06:01.000
だから私はダンスフロア、素敵な歓迎メッセージ、そして学習センターの散文を追加して、このパーティーを始めました。

00:06:01.000 --> 00:06:03.000
マーカス、このパーティーを続けたいですか？

00:06:03.000 --> 00:06:05.000
マーカス:間違いなく。

00:06:05.000 --> 00:06:08.000
私たちの生き物がパーティーをするためのなんてドープなダンスフロアでしょう。

00:06:08.000 --> 00:06:13.000
この効果は本当にクールですが、まだ学んでいる人には多すぎるかもしれないと思います。

00:06:13.000 --> 00:06:17.000
このコードを説明するために、ウォークスルータスクを使用できます。

00:06:17.000 --> 00:06:19.000
1ページのウォークスルーから始めましょう。

00:06:19.000 --> 00:06:22.000
後で、残りを記入する方法をお見せします。

00:06:22.000 --> 00:06:27.000
ステファニーはすでに私たちのガイドブックの始まりと、役に立つ歓迎のメッセージを見せてくれました。

00:06:27.000 --> 00:06:32.000
タスクを作成するために必要な最初のディレクティブ、ステップディレクティブがすでにあります。

00:06:32.000 --> 00:06:35.000
ステップディレクティブは、ウォークスルーコンテンツが存息する場所です。

00:06:35.000 --> 00:06:39.000
ステップを踏むには、他の2つのディレクティブで記入する必要があります。

00:06:39.000 --> 00:06:42.000
ここでは、すでにコンテンツとメディアのディレクティブを追加しました。

00:06:42.000 --> 00:06:47.000
このディレクティブには、右側の学習センターに入るマークダウンが含まれています。

00:06:47.000 --> 00:06:51.000
このディレクティブの本文には、あらゆる形式のマークダウンテキストを含めることができます。

00:06:51.000 --> 00:06:56.000
これは、あなたのトピックをカバーするのに役立つかもしれない、より長い散文とより大きな画像を置く場所です。

00:06:56.000 --> 00:07:00.000
これは、プレイグラウンドに表示されているコンテンツとメディアディレクティブです。

00:07:00.000 --> 00:07:07.000
この例では領域は小さく見えますが、このビューはさらに下に拡張することができ、スクロールビューに含まれています。

00:07:07.000 --> 00:07:13.000
これにより、より長い散文を書き、図などの複雑なコンテンツを表示するのに最適な場所です。

00:07:13.000 --> 00:07:19.000
コンテンツとメディアが書かれたら、2番目の必要な指示であるタスクを追加できます。

00:07:19.000 --> 00:07:23.000
タスクグループと呼ばれる別のディレクティブにタスクを追加します。

00:07:23.000 --> 00:07:29.000
タスクグループは、タスクのグループを一緒に収集したい場合、ステップの中に入れることができるオプションのディレクティブです。

00:07:29.000 --> 00:07:36.000
複数のファイルや異なるタイプのタスクで同じトピックをカバーするコンテンツがある場合は、これを考慮するかもしれません。

00:07:36.000 --> 00:07:40.000
タスクグループ内で、短いテキストを追加できます。

00:07:40.000 --> 00:07:44.000
これは学習センターにサブタイトルとして表示されます。

00:07:44.000 --> 00:07:48.000
タスクグループがプレイグラウンドでどのように表示されるかは次のとおりです。

00:07:48.000 --> 00:07:54.000
タスクグループとサブタイトルがわかったので、タスクディレクティブの追加を開始できます。

00:07:54.000 --> 00:07:58.000
タスクにはいくつかのパラメータがあり、最初のパラメータはtypeです。

00:07:58.000 --> 00:08:03.000
これにより、教育システムは、このタスクを表示するときに生成するUIを知ることができます。

00:08:03.000 --> 00:08:06.000
次に、すべてのタスクにIDが必要です。

00:08:06.000 --> 00:08:08.000
IDは、あなたが望むものなら何でもできる文字列です。

00:08:08.000 --> 00:08:12.000
ただし、ガイドのすべてのIDは一意でなければなりません。

00:08:12.000 --> 00:08:15.000
Titleパラメータも文字列です。

00:08:15.000 --> 00:08:18.000
これはまた、あなたが望むものになることができ、ユニークである必要はありません。

00:08:18.000 --> 00:08:21.000
このタイトルは、タスクカードのUIによってレンダリングされます。

00:08:21.000 --> 00:08:29.000
最後に、ファイルパラメータは、学習者がこのタスクを開始したときにプロジェクト内のどのファイルを開くかを学習センターに伝えます。

00:08:29.000 --> 00:08:32.000
プレイグラウンドでのタスクの表示方法は次のとおりです。

00:08:32.000 --> 00:08:36.000
タイトルはボタンの中にあり、ウォークスルーのファイルはその上にリストされています。

00:08:36.000 --> 00:08:39.000
今、私たちはウォークスルータスクを書きました。

00:08:39.000 --> 00:08:41.000
最初のページを追加しましょう。

00:08:41.000 --> 00:08:53.000
ページディレクティブはタスクの本文内に入り、次の必須パラメーターがあります。IDパラメーターはタスクのIDと同じように動作するので、ガイドファイル全体で一意でなければなりません。

00:08:53.000 --> 00:08:56.000
タイトルパラメータは、タスクのものとよく似ています。

00:08:56.000 --> 00:09:05.000
ただし、ページのタイトル文字列を空のままにすると、このページを表示するときにタスクのタイトルを使用するように指示システムが知ることができます。

00:09:05.000 --> 00:09:11.000
ページ内では、コンテンツとメディアディレクティブに似たマークダウンテキストを追加できます。

00:09:11.000 --> 00:09:14.000
ただし、タスクビューは学習センターよりもはるかに小さいです。

00:09:14.000 --> 00:09:21.000
テキストを短くし、学習者が読みにくい可能性があるため、図のような複雑な画像を使用しないでください。

00:09:21.000 --> 00:09:25.000
これは、Swift Playgroundsによってレンダリングされたウォークスルーの最初のページです。

00:09:25.000 --> 00:09:33.000
最初のウォークスルーはほぼ終わりましたが、まず、最後のスクリーンショットに示すようにコードを強調表示する方法を示す必要があります。

00:09:33.000 --> 00:09:36.000
そのために、CreatureDance.swiftにいくつかのマーカーを追加する必要があります。

00:09:36.000 --> 00:09:43.000
ウォークスルーが表示されたら、最初のカスタム修飾子であるanimatedScalingEffectを強調表示したいと思います。

00:09:43.000 --> 00:09:49.000
行にハイライトを追加するには、コードの前後に行にコメントのペアを追加します。

00:09:49.000 --> 00:10:01.000
複数行のコメント構文から始めます。/* コメントの中には、#-code -walkthroughと書き、その後に括弧のペアが続きます。

00:10:01.000 --> 00:10:05.000
括弧内に、強調表示したいページディレクティブのIDを書きます。

00:10:05.000 --> 00:10:10.000
この場合、1.modifier。

00:10:10.000 --> 00:10:12.000
さて、これをプレイグラウンドでテストしてみましょう。

00:10:12.000 --> 00:10:18.000
絵文字アプリプロジェクトを開きましょう。

00:10:18.000 --> 00:10:23.000
プロジェクトを開くと、左側にソースエディタ、右側にプレビューが表示されます。

00:10:23.000 --> 00:10:30.000
ソースエディタの上には、私たちのバディバイトが、どのような学習コンテンツが何をすべきかの概要を提供するウェルカムメッセージがあります。

00:10:30.000 --> 00:10:36.000
「詳細」ボタンをタップします。

00:10:36.000 --> 00:10:39.000
右側のプレビューは学習センターに交換されます。

00:10:39.000 --> 00:10:43.000
一番上は、ContentAndMediaディレクティブで書いた散文です。

00:10:43.000 --> 00:10:49.000
その下には、タスクグループと、ウォークスルーのタイトルが付いたボタンがあります。

00:10:49.000 --> 00:10:58.000
ウォークスルーは、学習センターでByteの別の友人であるExpertの写真付きのボタンとして示されます。

00:10:58.000 --> 00:11:04.000
このボタンをタップすると、いくつかのことを行います。まず、学習センターが再びプレビューに交換されます。

00:11:04.000 --> 00:11:11.000
第二に、まだ開いていない場合は、タスクのファイルパラメータで指定されたファイルがソースエディタで開かれます。

00:11:11.000 --> 00:11:15.000
第三に、タスクビューはソースエディタの上にドロップダウンします。

00:11:15.000 --> 00:11:19.000
最後に、ソースエディタは、コードウォークスルーコメントにマークされたコードを強調表示します。

00:11:19.000 --> 00:11:27.000
コンテンツが画面に表示されない場合、ソースエディタは強調表示する必要があるコードの行が表示されるまでスクロールします。

00:11:27.000 --> 00:11:35.000
そして、それはあなたがスウィフトプレイグラウンドでウォークスルーを書く方法ですが、私はあなたがおそらく複数のページを持つウォークスルーがどのように見えるかに興味があると言うのが公平だと思います。

00:11:35.000 --> 00:11:41.000
これを行うには、Xcodeでプロジェクトを開き、残りのウォークスルーに記入します。

00:11:41.000 --> 00:11:46.000
Xcodeでガイドファイルを開いたので、ウォークスルーにさらに数ページを追加したいと思います。

00:11:46.000 --> 00:11:53.000
ビュー修飾子とは何かについて少し説明しましたが、カスタムビュー修飾子を構築する方法についてもっと説明したいと思います。

00:11:53.000 --> 00:11:59.000
私は先に進んでそれらのページを追加します。

00:11:59.000 --> 00:12:00.000
すごい。

00:12:00.000 --> 00:12:05.000
これで、カスタムビュー修飾子のウォークスルーがあります。

00:12:05.000 --> 00:12:08.000
今はViewModifierプロトコルを説明するのも良い時期だと思います。

00:12:08.000 --> 00:12:13.000
このようにして、学習者は必要に応じて独自のViewModifierを作成できます。

00:12:13.000 --> 00:12:20.000
これを行うには、タスクグループに別のウォークスルーを追加します。

00:12:20.000 --> 00:12:23.000
私たちは今、完全に肉付けされたウォークスルーのペアを持っています。

00:12:23.000 --> 00:12:28.000
iPadに切り替えて、どのように見えるかを確認します。

00:12:28.000 --> 00:12:32.000
プロジェクトを開くと、学習センターに2つのウォークスルーがあります。

00:12:32.000 --> 00:12:37.000
最初のウォークスルーをタップすることから始めます。

00:12:37.000 --> 00:12:44.000
以前と同じように、ビュー修飾子の行が強調表示され、タスクビューがドロップダウンして、このコードが何であるかを説明します。

00:12:44.000 --> 00:12:49.000
これで、次のボタンをタップできます。

00:12:49.000 --> 00:12:57.000
ソースエディタは、修飾子構造体までスクロールし、この構造体が何のためにあるのかを説明します。

00:12:57.000 --> 00:13:06.000
次のボタンを再度タップすると、このウォークスルーの最終ページに移動し、修飾子構造体内のボディメソッドについて詳しく説明します。

00:13:06.000 --> 00:13:13.000
タスクビューの下部には、次のウォークスルーとマークされたボタンがあります。

00:13:13.000 --> 00:13:17.000
これをタップすると、次のウォークスルータスクが自動的に開始されます。

00:13:17.000 --> 00:13:24.000
この機能は、進むべき別のタスクがある限り、教育システムによって無料で提供されます。

00:13:24.000 --> 00:13:33.000
今、私はここにいるので、このウォークスルーの残りの部分をタップします。

00:13:33.000 --> 00:13:36.000
そして、それがSwift Playgroundsでウォークスルーを構築する方法です。

00:13:36.000 --> 00:13:44.000
次に、学習者が自分でコードを追加して何が起こるかを確認できる別の種類のタスクを作成する方法を紹介したいと思います。

00:13:44.000 --> 00:13:47.000
だから、この時点で、私たちは良いパーティーをしています。

00:13:47.000 --> 00:13:51.000
私たちの生き物は踊っていて、背景にいくつかのライトがあります。

00:13:51.000 --> 00:13:55.000
基本的にはナイトクラブのように見えますが、もう少しうまくできると思います。

00:13:55.000 --> 00:14:01.000
彼らが小さなクラブのストロボライトの下で踊っているように見えるように、私たちの生き物にいくつかの色を加えるのは素晴らしいことだと思います。

00:14:01.000 --> 00:14:04.000
しかし、それは私だけです。あなたはどうしますか？

00:14:04.000 --> 00:14:08.000
ここで実験タスクの出番です。

00:14:08.000 --> 00:14:17.000
実験は、余分な好奇心を感じている場合や、アプリを独自のものにする方法が必要な場合は、学習者が追加できるオプションのコードビットです。

00:14:17.000 --> 00:14:23.000
ガイドファイルに戻ると、すでに取り組んでいたのと同じステップに実験タスクを追加できます。

00:14:23.000 --> 00:14:29.000
私は「実験」と名付けた実験を開催するための新しいタスクグループを作成しました。

00:14:29.000 --> 00:14:35.000
サブタイトルと最初の実験タスクの始まりを埋めました。

00:14:35.000 --> 00:14:40.000
実験タスクとウォークスルーの最初の違いは、型パラメータに入るものです。

00:14:40.000 --> 00:14:45.000
他のパラメータは、ウォークスルータスクに同様の慣習に従います。

00:14:45.000 --> 00:14:48.000
ページディレクティブは、ウォークスルーと同じように機能します。

00:14:48.000 --> 00:14:53.000
ただし、実験では、オプションのパラメータisAddableを1つ追加します。

00:14:53.000 --> 00:14:59.000
isAddableパラメータを使用すると、実験タスクがソースエディタに直接コードを追加できます。

00:14:59.000 --> 00:15:05.000
isAddableがtrueに設定されている場合、コードスニペットの横にある学習タスクカードに追加ボタンが表示されます。

00:15:05.000 --> 00:15:11.000
ページディレクティブのコードは、トリプルバックティックマークダウン構文を使用してコードブロックでラップする必要があります。

00:15:11.000 --> 00:15:15.000
コードブロックを10行以下に保つのがベストプラクティスです。

00:15:15.000 --> 00:15:21.000
タスクビューは、必要に応じてより長いコードスニペットを表示できますが、学習者がスクロールする必要がない方が良いです。

00:15:21.000 --> 00:15:24.000
プレイグラウンドでのコードビューの表示方法は次のとおりです。

00:15:24.000 --> 00:15:30.000
コードスニペットの右側には、isAddableパラメータがtrueに設定されていたため、追加ボタンがあります。

00:15:30.000 --> 00:15:33.000
それは私たちが実験タスクを書くために必要なほとんどすべてです。

00:15:33.000 --> 00:15:35.000
しかし、それは追加可能なパラメータであることを覚えていますか?

00:15:35.000 --> 00:15:43.000
これにより、実験タスクはソースエディタにコードを追加できますが、スニペットを追加するコードの場所をPlaygroundsに伝える必要があります。

00:15:43.000 --> 00:15:47.000
ここで私たちは再びCreatureDance.swiftにいます。

00:15:47.000 --> 00:15:51.000
学習者に、不透明度修飾子のすぐ下に色修飾子を追加してもらいたい。

00:15:51.000 --> 00:15:55.000
そこで、実験タスクのコメントを追加します。 

00:15:55.000 --> 00:16:00.000
実験タスクのコメントは1行で、ダブルスラッシュで始まります。

00:16:00.000 --> 00:16:06.000
次に、#-learning-taskを書きます。

00:16:06.000 --> 00:16:12.000
その後、括弧のペアが来て、その中に実験タスクのIDを書きます。

00:16:12.000 --> 00:16:16.000
今、私たちは実験タスクをテストするために必要なものがすべて揃っています。

00:16:16.000 --> 00:16:22.000
もう一度、私はこれらすべてをすでにswiftpmプロジェクトに書いています。ステファニーと私は取り組んでいます。

00:16:22.000 --> 00:16:24.000
調べてみましょう。

00:16:24.000 --> 00:16:26.000
私たちは再び学習センターに戻ってきました。

00:16:26.000 --> 00:16:32.000
今回は、最初の実験がある一番下のタスクグループに集中したいと思います。

00:16:32.000 --> 00:16:37.000
実験は、Byteの別の友人であるBluによって教育システムで注目されています。

00:16:37.000 --> 00:16:41.000
実験タスクをタップしましょう。

00:16:41.000 --> 00:16:44.000
次に起こることは見覚えがあるはずです。

00:16:44.000 --> 00:16:45.000
タスクビューがドロップダウンします。

00:16:45.000 --> 00:16:49.000
ただし、今回はタスクビューにコードビューが含まれています。

00:16:49.000 --> 00:16:52.000
コードビューの右側には追加ボタンがあります。

00:16:52.000 --> 00:16:57.000
これをタップすると、コードがソースエディタに追加されます。

00:16:57.000 --> 00:17:01.000
コードが追加されたので、CreatureDanceViewにどのような変更を加えたかを確認したいと思います。

00:17:01.000 --> 00:17:06.000
このパーティーを始めましょう！

00:17:06.000 --> 00:17:07.000
甘い。

00:17:07.000 --> 00:17:09.000
今、私たちは光が私たちの生き物に当たるのを見ることができます。

00:17:09.000 --> 00:17:17.000
これはかなりグルーヴィーですが、タイマーを使用して数秒ごとに生き物にランダムな色を与えることで、もう1つのノッチを上げることができると思います。

00:17:17.000 --> 00:17:23.000
これを行うには、別の実験を追加する必要があるので、このプロジェクトをXcodeに戻して、新しいタスクを追加しましょう。

00:17:23.000 --> 00:17:30.000
2回目の実験を追加する前に、すでにそこにある実験にページを追加するのは良い考えだと思います。

00:17:30.000 --> 00:17:35.000
学習者にとって、コードのブロックを追加し、その理由やそれが何をするのかわからないのは混乱する可能性があります。

00:17:35.000 --> 00:17:45.000
それを助けるために、コードページの前にテキストを含むページを追加します。

00:17:45.000 --> 00:17:49.000
今、私たちは2番目のタスクを追加する準備が整いました。

00:17:49.000 --> 00:17:59.000
繰り返しになりますが、学習者にプロジェクトにコードを追加してもらいたいので、コードを説明するページとそれに続く追加可能なコードスニペットを追加します。

00:17:59.000 --> 00:18:07.000
そして、それに伴い、カスタムビュー修飾子でできることのいくつかについて学習者に教えるための新しいコンテンツを作成しました。

00:18:07.000 --> 00:18:10.000
ねえ、ステファニー、私たちが作ったものを彼らに見せる準備はできましたか？

00:18:10.000 --> 00:18:13.000
ステファニー：ええ、やりましょう。

00:18:13.000 --> 00:18:18.000
iPadでコンテンツの最終版を開き、私の変更とマーカスの変更がどのように一緒に流れるかを確認します。

00:18:18.000 --> 00:18:23.000
私が最初にプロジェクトを開くと、歓迎のメッセージがアニメーション化し、クリーチャーパーティーを紹介します。

00:18:23.000 --> 00:18:29.000
ウェルカムメッセージの「詳細」ボタンをタップすると、学習センターが開きます。

00:18:29.000 --> 00:18:30.000
すごい。

00:18:30.000 --> 00:18:34.000
私たちの学習センターには、上部に私の説明とマーカスが追加した4つのタスクがあります。

00:18:34.000 --> 00:18:37.000
最初のウォークスルーをタップしましょう。

00:18:37.000 --> 00:18:45.000
ここで、Marcusは私のAnimatedScalingModifierを例として使用して、カスタムビュー修飾子の使い方を説明しました。

00:18:45.000 --> 00:18:51.000
次のウォークスルーボタンをタップすると、2番目のウォークスルーがアニメーション化されます。

00:18:51.000 --> 00:18:56.000
マーカスは、View Modifierプロトコルを例として使用して、プロトコルの仕組みを説明しました。

00:18:56.000 --> 00:19:03.000
2回目のウォークスルーを終えた後、「完了」をタップすると、最初の実験タスクが続きます。

00:19:03.000 --> 00:19:10.000
ストロボライトのダンスタスクは、colorMultiply修飾子を含むこのコードスニペットを追加することで、私たちの生き物にいくつかの色を追加できることを教えてくれます。

00:19:10.000 --> 00:19:16.000
コードスニペットを追加する前に、このダンスパーティーがどのように見えるかを思い出しましょう。

00:19:16.000 --> 00:19:17.000
わかった、かっこいい。

00:19:17.000 --> 00:19:24.000
「追加」をタップしてコードスニペットを追加し、「パーティーを開始」をもう一度タップして変更を確認します。

00:19:24.000 --> 00:19:26.000
いいね、生き物は色が変わった。

00:19:26.000 --> 00:19:32.000
今すぐこの実験タスクを完了し、最後のタスクに移行します。

00:19:32.000 --> 00:19:37.000
Switch It Upの実験タスクでは、タップジェスチャーとタイマーで動物の色をカスタマイズできます。

00:19:37.000 --> 00:19:41.000
コードスニペットを追加して、もう一度パーティーを始めます。

00:19:41.000 --> 00:19:45.000
そして今、動物をタップすると、色が変わります。

00:19:45.000 --> 00:19:46.000
いいね。

00:19:46.000 --> 00:19:52.000
この最後のタスクを完了し、学習センターに戻ります。

00:19:52.000 --> 00:19:58.000
これで、すべてのタスクが学習センターで完了したとマークされています。つまり、このサンプルを完了しました。

00:19:58.000 --> 00:20:02.000
そして、それがSwift Playgrounds 4の新しいコンテンツ機能を利用する方法です。

00:20:02.000 --> 00:20:06.000
私たちは、あなたが今日のセッションを楽しんだことを願って、あなたがどのような学習経験を構築するかを見ることにとても興奮しています。

00:20:06.000 --> 00:20:11.000
他のSwift Playgroundsセッションをチェックすることを忘れないでください。Swift Playgroundsで最初のアプリを構築してください。

00:20:11.000 --> 00:20:12.000
WWDCの残りの部分を楽しんでください。

00:20:12.000 --> 23:59:59.000
マーカス：そして今、あなたが私たちを許すなら、私たちは出席するパーティーがあります。

