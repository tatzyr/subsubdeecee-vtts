WEBVTT

00:00:00.000 -> 00:00:14.000
- みなさん、こんにちは。私はプラシャントです。WWDCへようこそ。

00:00:14.000 -> 00:00:18.000
2021年、私たちはHLSインタースティシャルを導入しました。

00:00:18.000 -> 00:00:23.000
HLSストリームで広告やその他のインタースティシャルをスケジュールする本当に簡単な方法を提供します。

00:00:23.000 -> 00:00:30.000
今年は、広告インベントリをより適切に最適化し、プレゼンテーションを微調整できる機能を追加しました。

00:00:30.000 -> 00:00:33.000
さあ、HLSインタースティシャルの新機能を見つけましょう。

00:00:33.000 -> 00:00:39.000
この講演では、HLSインタースティシャルの仕組みの簡単な概要から始めます。

00:00:39.000 -> 00:00:44.000
そして、私たちが追加した新しい広告キューイングオプションについて話し合うことで、それに従います。

00:00:44.000 -> 00:00:51.000
その後、特にSNAP属性を使用したライブシナリオで、広告体験を微調整する方法を見ていきます。

00:00:51.000 -> 00:01:03.000
次に、HLS仕様に追加した新しいクエリパラメータのいくつかについて説明し、最後にこれらの新機能を組み込んだAVFoundation APIの変更について説明します。

00:01:03.000 -> 00:01:09.000
しかし、新機能に飛び込む前に、HLSインタースティシャルですぐにリフレッシュしましょう。

00:01:09.000 -> 00:01:15.000
HLSインタースティシャルでは、広告はプログラムのタイムラインにスケジュールできる個別のアセットとして扱われます。

00:01:15.000 -> 00:01:18.000
それらはもう不連続タグで縫う必要はありません。

00:01:18.000 -> 00:01:22.000
代わりに、多変量プレイリストから直接参照できます。

00:01:22.000 -> 00:01:30.000
これにより、プライマリコンテンツから多変量のプレイリストを指すだけでよいため、広告のスケジュールが非常に簡単になります。

00:01:30.000 -> 00:01:35.000
これは、主要なコンテンツのタイムラインを表示する典型的なメディアプレイリストです。

00:01:35.000 -> 00:01:38.000
再生中に2つの広告をスケジュールしたいとします。

00:01:38.000 -> 00:01:42.000
最初の広告を再生後約5秒で表示したいと考えています。

00:01:42.000 -> 00:01:48.000
そのために、DATERANGEタグを使用して広告の開始時刻を指定するだけです。

00:01:48.000 -> 00:01:51.000
そして、2番目の広告を15秒で表示したいと考えています。

00:01:51.000 -> 00:01:54.000
そのために、プレイリストに別のDATERANGEタグを追加します。

00:01:54.000 -> 00:01:57.000
それはそれと同じくらい簡単です。

00:01:57.000 -> 00:02:02.000
また、プライマリコンテンツにすでにいくつかの広告が縫い付けられている可能性もあります。

00:02:02.000 -> 00:02:08.000
ステッチイン広告の期間に等しい履歴書オフセットを指定することで、これらの広告を置き換えることもできます。

00:02:08.000 -> 00:02:18.000
これとは別に、HLSインタースティシャルでは、広告のナビゲーション制限を指定したり、ライブシナリオで早期復帰をスケジュールすることもできます。

00:02:18.000 -> 00:02:26.000
詳細については、WWDC 2021の「HLSにミッドロールとプレロールを動的に挿入する」をご覧ください。

00:02:26.000 -> 00:02:35.000
コンテンツのタイムラインに沿って広告をスケジュールできますが、今年は再生の開始時または終了時に広告の配置を強制する属性を追加しました。

00:02:35.000 -> 00:02:41.000
そのために、CUE属性を使用して指定できる次の新しいキューイングオプションを追加しました。

00:02:41.000 -> 00:02:46.000
この属性は、次の値の1つまたは組み合わせを取ることができます。

00:02:46.000 -> 00:02:51.000
PREの値は、プライマリコンテンツのプレゼンテーションが始まる前に広告を表示します。

00:02:51.000 -> 00:02:58.000
これは、プログラムにチューニングする前にプレミアム広告スポットをスケジュールしたいライブシナリオで特に便利です。

00:02:58.000 -> 00:03:03.000
POSTの値は、プライマリコンテンツのプレゼンテーション後に広告が表示されることを示します。

00:03:03.000 -> 00:03:09.000
これは、ライブイベントの終了時にエンドクレジットをスケジュールしたいイベントストリームに役立つかもしれません。

00:03:09.000 -> 00:03:13.000
そして、ONCEの値は、広告を一度だけ表示します。

00:03:13.000 -> 00:03:18.000
したがって、ユーザーが広告の前に戻って検索した場合、広告が再び再生されるのを見ることはありません。

00:03:18.000 -> 00:03:25.000
これの素晴らしいアプリケーションは、通常、再生の開始時に一度だけ表示される評価画面用です。

00:03:25.000 -> 00:03:31.000
これは、プリロールとポストロールとして広告がスケジュールされているプレイリストの例を示しています。

00:03:31.000 -> 00:03:34.000
プレロールは一度だけ再生される予定であることに注意してください。

00:03:34.000 -> 00:03:40.000
また、再生後約10秒で1回再生される広告も予定されています。

00:03:40.000 -> 00:03:45.000
現在、ライブシナリオで広告をスケジュールするには、独自の課題があります。

00:03:45.000 -> 00:03:56.000
たとえば、パッケージャーは、メディアを生成しているエンコーダが別のクロックによって駆動されている間、プレイリストでプログラムの日付時刻タグを設定するために1つの時計を使用している可能性があります。

00:03:56.000 -> 00:03:59.000
さて、これら2つの時計は必ずしも同期している必要はありません。

00:03:59.000 -> 00:04:09.000
たとえば、この例では、セグメント0とセグメント100に関連付けられた日付時刻タグの差は約800秒です。

00:04:09.000 -> 00:04:17.000
ただし、個々のセグメントの期間が8秒未満であるため、蓄積されたメディアの持続時間はそれよりもわずかに短くなります。

00:04:17.000 -> 00:04:27.000
パッケージクロックがエンコーダクロックよりもわずかに速いシナリオでは、広告が開始される実際のメディアタイムはスレートのどこかに落ちる可能性があります。

00:04:27.000 -> 00:04:37.000
そして、ここに示すように広告期間に等しいオフセットでメインコンテンツに再参加することが期待されている場合、実際にはスレートに続くプライマリコンテンツの一部が欠落してしまいます。

00:04:37.000 -> 00:04:46.000
OUT値でSNAP属性を使用して、意図した広告開始時間に最も近いセグメント境界でプライマリコンテンツからスナップアウトできるようになりました。

00:04:46.000 -> 00:04:54.000
同様に、IN値のSNAP属性を使用して、広告の戻り時間に最も近いプライマリコンテンツにスナップバックします。

00:04:54.000 -> 00:05:04.000
事前にパッケージ化されたビデオオンデマンドコンテンツを扱う場合、このクロックドリフトの概念は存在しないため、ライブシナリオにのみSNAP属性を使用することを期待していることに注意してください。

00:05:04.000 -> 00:05:10.000
ここでは、広告がスナップアウトとスナップインの両方に予定されているライブプレイリストが表示されます。

00:05:10.000 -> 00:05:18.000
今年は、広告インベントリとセッション管理を最適化するのに役立つクエリパラメータも追加しました。

00:05:18.000 -> 00:05:29.000
さて、広告ポッドの途中でライブストリームにチューニングしているときは、残りの時間で最も価値のある在庫を表示できるように、その広告ポッドがどこまで進んだかを知りたいでしょう。

00:05:29.000 -> 00:05:33.000
そのために、HLS_start_offsetクエリパラメータを追加しました。

00:05:33.000 -> 00:05:39.000
HLS_start_offsetクエリパラメータは、インタースティシャルのアセットリストURLの要求とともに提供されます。

00:05:39.000 -> 00:05:54.000
ライブコンテンツの場合、これはライブストリームに参加するときに再生が開始されるアセットリストへのオフセットを指定し、ビデオオンデマンドコンテンツの場合、インタースティシャルに置き換えられた領域に求めるときにアセットリストへのオフセットになります。

00:05:54.000 -> 00:06:01.000
このサンプルでは、プレイリストの上部から5秒から始まる15秒の広告が予定されているライブプレイリストがあります。

00:06:01.000 -> 00:06:05.000
ここに示されているハイライトされたセグメントは、インタースティシャルに置き換えられます。

00:06:05.000 -> 00:06:10.000
現在、ライブ参加中、クライアントは通常、ライブエッジの背後にある約3つのターゲット期間になります。

00:06:10.000 -> 00:06:15.000
その時点で、予定されている15秒の広告ポッドは10秒間再生されていたでしょう。

00:06:15.000 -> 00:06:20.000
したがって、これはHLS_start_offsetクエリパラメータの一部として提供されます。

00:06:20.000 -> 00:06:30.000
クライアントの広告時間は残り5秒しかないため、サーバーはそのリストの最後の5秒に最も価値のある広告を掲載するようにアセットリストを構築できます。

00:06:30.000 -> 00:06:40.000
サーバーでは、誰かに同じ広告を何度も提供しないように、複数の広告リクエストで同じ再生セッションを追跡する方法が必要になるかもしれません。

00:06:40.000 -> 00:06:47.000
したがって、広告リクエストをプライマリ再生セッションに関連付けるために、HLS_primary_idクエリパラメータを追加しました。

00:06:47.000 -> 00:07:02.000
クライアントが特定の再生セッションのすべてのhttpリクエストの再生セッションID要求ヘッダーを設定すると、X-Asset-URIおよびX-Asset-List要求にHLS_primary_idクエリパラメータの一部としてこのセッションIDを指定できます。

00:07:02.000 -> 00:07:15.000
セッションID要求ヘッダーを設定しないクライアントは、すべてのプライマリ再生セッションに一意の値を作成し、それをプライマリアセット要求とインタースティシャルアセット要求の両方のHLS_primary_idクエリパラメータとして使用する必要があります。

00:07:15.000 -> 00:07:26.000
AVFoundationは、クライアント側で広告をスケジュールできるAVPlayerInterstitialControllerとAVPlayerInterstitialEventオブジェクトを提供していることを思い出すかもしれません。

00:07:26.000 -> 00:07:32.000
これで、AVPlayerInterstitialEventオブジェクトにキューとSNAPオプションのサポートも追加しました。

00:07:32.000 -> 00:07:38.000
Cueプロパティを使用して、広告をプレロールまたはポストロールとしてスケジュールするかどうか、キューオプションを指定できます。

00:07:38.000 -> 00:07:46.000
DATERANGEタグのCue属性を介して通知されるplay onceオプションは、willPlayOnceプロパティを介してブール値として設定されます。

00:07:46.000 -> 00:07:58.000
スナップアウトするオプションは、alignsStartWithPrimarySegmentBoundaryプロパティを介して通知され、スナップインするには、alignsResumptionWithPrimarySegmentBoundaryプロパティを設定します。

00:07:58.000 -> 00:08:06.000
AVPlayerInterstitialEventが成長し続けるにつれて、プロパティの設定をオブジェクトの作成から分離した方が良いかもしれないと考えました。

00:08:06.000 -> 00:08:10.000
これで、AVPlayerInterstitialEventオブジェクトを可変にしました。

00:08:10.000 -> 00:08:14.000
プライマリアイテムとイベントの開始時間だけでオブジェクトを作成できるようになりました。

00:08:14.000 -> 00:08:19.000
また、関連するプロパティを設定することで、さまざまな設定オプションを指定できます。

00:08:19.000 -> 00:08:29.000
イベントがコントローラーに設定されると、コントローラーがこれらのオブジェクトのコピーを作るため、イベントオブジェクトへのその後の変更はコントローラーに反映されないことに注意してください。

00:08:29.000 -> 00:08:34.000
変更を有効にするには、コントローラーでイベントをもう一度設定する必要があります。

00:08:34.000 -> 00:08:40.000
まとめると、X-CUE属性を使用して、広告をプレロールまたはポストロールとしてスケジュールできるようになりました。

00:08:40.000 -> 00:08:45.000
X-CUEを1回に設定することで、広告を1回だけ強制的に再生することもできます。

00:08:45.000 -> 00:08:50.000
ライブシナリオでクロックドリフトを管理するには、X-SNAP属性を使用します。

00:08:50.000 -> 00:09:02.000
ライブ参加中にアセットリストを作成するには、HLS_start_offsetクエリパラメータを使用し、HLS_primary_idクエリパラメータを使用して、インタースティシャルリクエストをプライマリ再生セッションに関連付けることができます。

00:09:02.000 -> 00:09:11.000
HLSインタースティシャルを使用して広告をスケジュールすると、AVFoundationがShareplay中に自動的に管理することをご存知ですか？

00:09:11.000 -> 00:09:16.000
詳細については、「SharePlayで広告やその他のインタースティシャルを表示する」トークをチェックしてください。

00:09:16.000 -> 23:59:59.000
皆さん、私にとってはそれだけです。ありがとうございます。

