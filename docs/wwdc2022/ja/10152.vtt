WEBVTT

00:00:00.000 -> 00:00:09.000
♪ ♪

00:00:09.000 -> 00:00:14.000
ドリュー・ハース:こんにちは。私の名前はドリュー・ハースで、アクセシビリティチームのエンジニアです。

00:00:14.000 -> 00:00:19.000
私は、アクセシブルなシングルアプリモード体験を作成する方法について話すためにここにいます。

00:00:19.000 -> 00:00:28.000
シングルアプリモードを使用すると、開発者として、iOSおよびiPadOSデバイスの特定の動作を制限することで、本当にユニークな方法でユーザーにサービスを提供できます。

00:00:28.000 -> 00:00:33.000
つまり、これらのモードでは、デバイスを1つのアプリにロックすることができます。

00:00:33.000 -> 00:00:39.000
モードに応じて、制限はシステムまたはアプリによって開始されます。

00:00:39.000 -> 00:00:46.000
制限された状態と制限されていない状態の間のタイミングを制御できるため、これは素晴らしいことです。

00:00:46.000 -> 00:00:54.000
また、自動ロックが有効になっているかどうかなど、シングルアプリモードの上に追加の制限を適用することもできます。

00:00:54.000 -> 00:00:57.000
アクセシビリティのユースケースを考慮することを忘れないでください。

00:00:57.000 -> 00:01:06.000
アクセシビリティ機能に依存している人々が、デバイスが制限されていても、それらを使用できるようにそれらをオンにする能力を持っていることを確認する必要があります。

00:01:06.000 -> 00:01:11.000
これにより、あなたのアプリは支援技術を使用している人々にとって包括的であることを保証します。

00:01:11.000 -> 00:01:15.000
シングルアプリモードを使用する時期の例をいくつかお話ししたいと思います。

00:01:15.000 -> 00:01:21.000
顧客がレストランやイベントで食べ物や飲み物を注文するアプリを開発しているとしましょう。

00:01:21.000 -> 00:01:29.000
または、患者が医療スタッフが共有したデバイスを扱って情報を記入している診療所で使用されるアプリ。

00:01:29.000 -> 00:01:33.000
あるいは、教室で生徒のテストを容易にするのに役立つアプリ。

00:01:33.000 -> 00:01:40.000
これらはすべて、シングルアプリモードの制限がユーザーに焦点を当てた環境を作成するのに役立つシナリオです。

00:01:40.000 -> 00:01:45.000
そして、コードを書いていなくても、あなたのアプリがシングルアプリモードで使用されるかもしれないことを知っていましたか?

00:01:45.000 -> 00:01:53.000
そうです、ガイド付きアクセスは、ユーザーが任意のアプリをシングルアプリモードにできるアクセシビリティ機能です。

00:01:53.000 -> 00:02:01.000
まず、ガイド付きアクセスについて話し、このモードでアプリを使用するときに考慮すべきいくつかの考慮事項について説明します。

00:02:01.000 -> 00:02:08.000
次に、特定のAPIとフレームワークを採用することで、アプリ内からプログラムで開始する単一のアプリモードについて説明します。

00:02:08.000 -> 00:02:15.000
そして最後に、シングルアプリモードで特別に使用するために設計されたアクセシビリティAPIを提供します。

00:02:15.000 -> 00:02:22.000
このAPIを使用して、特定のアクセシビリティ機能をオンまたはオフにし、シームレスでアクセスしやすいエクスペリエンスを作成します。

00:02:22.000 -> 00:02:25.000
まずはガイド付きアクセスで飛び込みましょう。

00:02:25.000 -> 00:02:32.000
ガイド付きアクセスを開始するには、まずアクセシビリティ設定でオンになっていることを確認してから、ロックしたいアプリを開きます。

00:02:32.000 -> 00:02:37.000
サイドボタンをトリプルクリックして、アクセシビリティショートカットを実行します。

00:02:37.000 -> 00:02:42.000
これは、システム制限を設定するガイド付きアクセスワークスペースを示しています。

00:02:42.000 -> 00:02:45.000
次に、[開始] をタップして開始します。

00:02:45.000 -> 00:02:48.000
現在、デバイスは制限された状態です。

00:02:48.000 -> 00:02:53.000
最前面のアプリにロックされており、オプションメニューで設定した制限が適用されます。

00:02:53.000 -> 00:02:59.000
これは、認知障害を持つ人々のためのガイド付き体験を作成するのに役立ちます。

00:02:59.000 -> 00:03:04.000
ガイド付きアクセスを終了するには、アクセシビリティショートカットを再度実行するだけです。

00:03:04.000 -> 00:03:16.000
オプションメニューでは、タッチインタラクション、ディスプレイモーション、ソフトウェアキーボード、および音量ボタンやスリープ/スリープ解除ボタンなどのハードウェアボタンイベントを制限できます。

00:03:16.000 -> 00:03:32.000
このように制御された環境を持つことは、認知障害を持つ人々にとって特に役立ちますが、この機能は、アクセシビリティユーザーから、これらのデバイス制限に簡単にアクセスすることで恩恵を受けることができる幼い子供の親まで、さまざまなユーザーにも楽しんでいます。

00:03:32.000 -> 00:03:34.000
ここが君の出番だ!

00:03:34.000 -> 00:03:41.000
UIAccessibility APIを使用すると、ガイド付きアクセス中にアプリのエクスペリエンスを調整するためのカスタム制限を作成できます。

00:03:41.000 -> 00:03:50.000
この機会を利用して、認知障害を持つ人が迷子になったり、選択肢に圧倒されたりする可能性のあるアプリの領域を制限または調整してください。

00:03:50.000 -> 00:03:54.000
認知アクセシビリティのためのいくつかの設計上の考慮事項を共有したいと思います。

00:03:54.000 -> 00:04:02.000
これらは、可能であれば常に従うべき原則ですが、特にガイド付きアクセス中にアプリで従う必要があります。

00:04:02.000 -> 00:04:04.000
まず、間違いを許すことです。

00:04:04.000 -> 00:04:16.000
アカウント情報や支払い情報を削除または変更するなど、重要または不可逆的なアクションを実行する前にユーザーに警告することで、エラーが発生する前にエラーを軽減するようにしてください。

00:04:16.000 -> 00:04:24.000
誰もが同じ速度で情報を処理するわけではないので、アプリの特定のことに行動するタイミングへの依存を減らすことを目指すべきです。

00:04:24.000 -> 00:04:31.000
時制アラートを使用したり、短いタイムアウト後に自動的にアクションを実行したりすると、アプリの使用が難しくなります。

00:04:31.000 -> 00:04:40.000
そして、常に、常に、支払いを行う前にユーザーに確認する機会を与える必要があります。これには、ワンタップ購入のアプリが含まれます。

00:04:40.000 -> 00:04:46.000
これらの考慮事項を考慮してアプリを設計することは、アクセシビリティユーザーの独立性を促進します。

00:04:46.000 -> 00:04:48.000
私はあなたに例を見せたい。

00:04:48.000 -> 00:04:54.000
私は、人々が週の間にどれだけ読んだかを追跡するのに役立つReading Observatoryというアプリに取り組んでいます。

00:04:54.000 -> 00:05:02.000
私のアプリのホームページには読書の進捗状況が表示され、アカウント設定と読み続けるボタンの2つのボタンがあります。

00:05:02.000 -> 00:05:08.000
ガイド付きアクセスがアクティブな間にアカウント設定ボタンをロックするアプリのカスタム制限を追加しました。

00:05:08.000 -> 00:05:19.000
これは、ユーザーが意図しない変更を加える可能性のあるアカウント設定に埋もれているなど、他の場所で迷子になるのを防ぐために、この制限の下で私のアプリにユニークな体験を与えます。

00:05:19.000 -> 00:05:27.000
これはまた、誰かが立ち往生し、読書である私のアプリの主な目的で軌道に乗るのに助けを必要とするかもしれない時間の量を減らすでしょう。

00:05:27.000 -> 00:05:33.000
これを行うには、まずAppDelegateをUIGuidedAccessRestrictionDelegateプロトコルに適合させます。

00:05:33.000 -> 00:05:39.000
識別子の配列を提供することで、各制限についてガイド付きアクセスに知らせる必要があります。

00:05:39.000 -> 00:05:41.000
私は1つだけ持っています。

00:05:41.000 -> 00:05:49.000
また、それぞれにユーザー向けタイトルと、追加の詳細を提供する必要がある場合はオプションの説明を指定する必要があります。

00:05:49.000 -> 00:05:52.000
これらの文字列はオプションメニューに表示されます。

00:05:52.000 -> 00:06:00.000
最後に、guidedAccessRestriction (withIdentifier:didChange:) メソッドを実装して、制限が切り替えられたときにコールバックを受信します。

00:06:00.000 -> 00:06:13.000
これは、アプリが、特定のボタンのユーザーインタラクションをオフにしたり、以前の設計原則の一部を導入したりするなど、制限に対応するロジックを実行するための通知を投稿できる場所です。

00:06:13.000 -> 00:06:21.000
UIAccessibilityでguideedAccessRestrictionState(forIdentifier:)を呼び出して、カスタム制限がいつでも有効になっているかどうかを確認してください。

00:06:21.000 -> 00:06:32.000
システムが提供するすべての制限とカスタムアプリベースの制限により、ガイド付きアクセスは非常に設定可能になり、それが素晴らしいアクセシビリティ機能である理由です。

00:06:32.000 -> 00:06:36.000
ガイド付きアクセスは、アクセシビリティ設定にあります。

00:06:36.000 -> 00:06:41.000
他のシングルアプリモードは、デバイス上の制限されたセッションをプログラムで入力するために利用できます。

00:06:41.000 -> 00:06:48.000
彼らはガイド付きアクセスと類似点を共有していますが、主な違いは、プログラムでこのモードに入ることです。

00:06:48.000 -> 00:06:54.000
これは、シングルアプリモードセッションの設定、開始、カスタマイズについて、話すことがたくさんあることを意味します。

00:06:54.000 -> 00:06:57.000
以前のシナリオのそれぞれを覚えていますか?

00:06:57.000 -> 00:07:07.000
iPadは、テスト環境で、診療所でレストランキオスクとして使用されています。単一のアプリモードは、これらすべての状況に適したソリューションです。

00:07:07.000 -> 00:07:14.000
それぞれがわずかに異なるニーズを持っているかもしれませんが、それらはすべてデバイスを単一のアプリにロックすることで利益を得ます。

00:07:14.000 -> 00:07:21.000
これにより、人々がスワイプして家に帰ったり、設定で物事を変更したり、Safariで何かを調べたりするのを防ぎます。

00:07:21.000 -> 00:07:28.000
これらのそれぞれを見てみましょう。必要な制限に基づいて、シングルアプリモードをお勧めします。 

00:07:28.000 -> 00:07:32.000
最初のモードは最も基本的で、展開が最も簡単です。

00:07:32.000 -> 00:07:35.000
それは単にシングルアプリモードと呼ばれています。

00:07:35.000 -> 00:07:42.000
これは、単一のアプリに永続的にとどまる予定のデバイスを持っているときのための正しい解決策です。

00:07:42.000 -> 00:07:48.000
再起動後もアプリ内でロックされたままで、メンテナンスに手動の介入は必要ありません。

00:07:48.000 -> 00:07:51.000
低関与のアプローチに最適です。

00:07:51.000 -> 00:07:52.000
しかし、いくつかの考慮事項!

00:07:52.000 -> 00:07:55.000
デバイスは監視されなければならない。

00:07:55.000 -> 00:08:04.000
監視ツールを使用すると、大量のデバイスを一度にシングルアプリモードにロックできるので、多くのデバイスで作業している場合、これは非常にスケーラブルなソリューションです。

00:08:04.000 -> 00:08:11.000
Apple Configuratorを使用すると、監視対象のデバイスをシングルアプリモードにするなど、さまざまな方法で管理できます。

00:08:11.000 -> 00:08:19.000
監視対象デバイスを選択し、[詳細設定] で [シングル アプリ モードの開始] を選択します。

00:08:19.000 -> 00:08:22.000
最後に必要なのは、アプリを選択することです。

00:08:22.000 -> 00:08:28.000
そうすると、自動的に起動し、フォアグラウンドにロックされます。

00:08:28.000 -> 00:08:30.000
このモードを終了する他の方法はありません。

00:08:30.000 -> 00:08:38.000
前述したように、管理ソフトウェアを介してシングルアプリモードを終了しない限り、再起動してもこのアプリにロックされたままになります。

00:08:38.000 -> 00:08:45.000
自律シングルアプリモードは、制限された状態が頻繁に出入りする状況に適しています。

00:08:45.000 -> 00:08:52.000
たとえば、医療機関では、新しい患者がiPadに情報を入力し、それをスタッフに返します。

00:08:52.000 -> 00:08:55.000
これは、制限の間に手動の介入があることを意味します。

00:08:55.000 -> 00:09:01.000
アプリは、単一のAPIメソッド呼び出しを使用して出入りすることで、単独でこれを行うことができます。

00:09:01.000 -> 00:09:14.000
繰り返しますが、考慮事項 - デバイスを監督する必要があり、このAPIを使用するアプリは、デバイスの構成プロファイルにリストされていることを許可する必要があります。そうしないと、特権がないため、ロックの要求が失敗します。

00:09:14.000 -> 00:09:21.000
強力な方法は、UIAccessibilityのrequestGuidedAccessSession(enabled:complet ionHandler:)です。

00:09:21.000 -> 00:09:23.000
ねえ、それは見覚えがあるね！でしょ？

00:09:23.000 -> 00:09:27.000
このAPIは、ガイド付きアクセスのルーツに直接タップします。

00:09:27.000 -> 00:09:32.000
基本的に、このコードを使用してプログラムでこの機能を入退します。

00:09:32.000 -> 00:09:33.000
かっこいいんじゃない？

00:09:33.000 -> 00:09:38.000
なぜなら、ガイド付きアクセスは、他の単一のアプリモードが存在するための基盤となるからです。

00:09:38.000 -> 00:09:40.000
あなたはそれを知らなかったに違いない！

00:09:40.000 -> 00:09:43.000
このコードが実際にどのように機能するか見てみましょう。

00:09:43.000 -> 00:09:48.000
このモードに出入りする方法があり、準備ができたら電話します。

00:09:48.000 -> 00:09:57.000
彼らは、制限された状態に入ったときに新しい患者のサインアップシートを開始し、終了時に情報をブックキープするなど、さまざまなアクションを実行しています。

00:09:57.000 -> 00:10:02.000
もちろん、完了ハンドラの結果に適切に対処して、何かがうまくいかないかどうかを知る必要があります。

00:10:02.000 -> 00:10:08.000
もしそうなら、あなたはユーザーに警告を与え、彼らが再び試すことができるように、経験の継続を延期したいと思うかもしれません。

00:10:08.000 -> 00:10:16.000
UIAccessibilityでisGuidedAccessEnabledを呼び出して、自律型シングルアプリモードがいつでも有効になっているかどうかを確認してください。

00:10:16.000 -> 00:10:23.000
また、guidedAccessStatusDidChangeNotificationを観察して、このモードに入力または終了するときに追加のコードをトリガーします。

00:10:23.000 -> 00:10:36.000
そして、このAPIを使用するアプリは、自律シングルアプリモードの許可されたアプリケーションとしてアプリのバンドルIDをリストするなど、適切な監督と管理を持っている必要があることを覚えておいてください。

00:10:36.000 -> 00:10:38.000
そして最後に、評価モード。

00:10:38.000 -> 00:10:45.000
これは、アプリがテスト中に特定の機能を制限することで、不公平な利点を防ぐことを目指す場合の正しいモードです。

00:10:45.000 -> 00:10:54.000
受験者が外部のメモやリソースにアクセスできないように、アプリへの自動修正、スペルチェック、およびシングルアプリモードロックをオフにします。

00:10:54.000 -> 00:11:02.000
最近、これらのフレームワークは、自動評価構成フレームワークを導入したとき、iOSとmacOS用に統一されました!

00:11:02.000 -> 00:11:10.000
これを使用するには、以前のモードのようにデバイスを監視する必要はありませんが、アプリの評価資格をAppleに申請する必要があります。

00:11:10.000 -> 00:11:15.000
資格の申請の詳細については、開発者のドキュメントを参照してください。

00:11:15.000 -> 00:11:25.000
私の同僚のジョシュは、大量のコード例やドキュメントリソースを含む、自動評価構成フレームワークの使用方法を説明する素晴らしいWWDCセッションを持っています。

00:11:25.000 -> 00:11:27.000
ぜひチェックしてください。

00:11:27.000 -> 00:11:37.000
どのシングルアプリモードソリューションがあなたに適しているかがわかったら、またはすでに機能しているソリューションがある場合は、支援技術を使用している人々があなたのアプリを使用することを心に留めておくことを忘れないでください。

00:11:37.000 -> 00:11:42.000
この体験にアクセスできるようにするために、追加の手順を踏む必要があるかもしれません。

00:11:42.000 -> 00:11:51.000
レストランのキオスクとして使用されているiPadの古典的な例では、盲目の顧客が注文に来ることを考えてみましょう。

00:11:51.000 -> 00:11:55.000
デバイスがシングルアプリモードに明確にロックされている場合、問題があります。

00:11:55.000 -> 00:12:00.000
このお客様の設定を開き、アクセシビリティに移動し、VoiceOverをオンにすることはできません。

00:12:00.000 -> 00:12:03.000
それで、あなたは何ができますか?

00:12:03.000 -> 00:12:10.000
Apple Configuratorやその他のデバイス管理ソフトウェアは、シングルアプリモードのオプションを設定するのに役立ちます。

00:12:10.000 -> 00:12:29.000
一握りのアクセシビリティ機能が常に有効にでき、「トリプルクリック」メニューとも呼ばれるアクセシビリティショートカットは、ユーザーがVoiceOver、Zoom、Invert Colors、AssistiveTouch、Voice Controlなどのアクセシビリティ機能をすばやく切り替えるように構成できます。

00:12:29.000 -> 00:12:39.000
これらの機能が常にオンになっている場合、またはアクセシビリティショートカットに割り当てられている場合、これらの技術に依存する人々がアプリをナビゲートしている間にそれらを使用できるようにします。

00:12:39.000 -> 00:12:44.000
これを設定するのはかなり簡単なので、そうするチャンスをお見逃しなく。

00:12:44.000 -> 00:12:48.000
しかし、これらのオプションは、シングルアプリモードに入る前に設定する必要があります。

00:12:48.000 -> 00:12:51.000
では、シングルアプリモード中はどうですか?

00:12:51.000 -> 00:12:57.000
UIAccessibilityのAPIを使用して、特定のアクセシビリティ機能をコードで直接切り替えます。

00:12:57.000 -> 00:13:07.000
これは、アクセシビリティショートカットで機能を切り替える優れた代替手段であり、デバイスがハードウェアボタンを遮断するキオスクエンクロージャに収められている場合に役立ちます。

00:13:07.000 -> 00:13:16.000
このAPIを作ったので、アクセシビリティ機能を簡単にオフにできるので、ハウスキーピングを行い、ユーザー間で状態をリセットすることができます。

00:13:16.000 -> 00:13:20.000
これを行うには、UIAccessibilityでconfigureForGuidedAccessを呼び出します。

00:13:20.000 -> 00:13:25.000
互換性のあるアクセシビリティ機能に合格する必要があり、有効にするかどうか。

00:13:25.000 -> 00:13:32.000
これは、ズーム、VoiceOver、色の反転、AssistiveTouch、グレースケールで機能します。

00:13:32.000 -> 00:13:43.000
したがって、アプリにガイド付きアクセスのカスタム制限がある場合でも、シングルアプリモードを中心にエクスペリエンス全体を構築する場合でも、アクセス可能であることを確認する方法を知ることが重要です。

00:13:43.000 -> 00:13:52.000
間違った種類の制限により、使用できにくくなるので、アプリを使用している障害のある人の経験は常に考慮してください。

00:13:52.000 -> 00:13:57.000
アクセシブルなシングルアプリモードエクスペリエンスを作成するために必要なAPIをお見せしました。

00:13:57.000 -> 23:59:59.000
今、何か素晴らしい、そしてアクセス可能なものを作りに行きなさい!

