WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:15.000
みなさん、こんにちは。私の名前はMaryAshley Etefiaで、スクリーンタイムのソフトウェアエンジニアです。

00:00:15.000 --> 00:00:23.000
COVID-19のパンデミックは、デジタルヘルスと生産性のリソースに対する需要の高まりに対応するために、私たちの業界に大きな圧力をかけました。

00:00:23.000 --> 00:00:31.000
パンデミックは社会のバランスの必要性を強化し、誰もが自分のスペースをうまく管理する能力をテストしました。

00:00:31.000 --> 00:00:40.000
昨年、すべてのスクリーンタイムAPIを紹介しました。これにより、ユーザーが子供とデバイスとの関係を管理するのに役立つ新しいアプリを構築できます。

00:00:40.000 --> 00:00:45.000
私たちは、皆さんが私たちの製品を利用した創造的で生産的な方法を見てとてもうれしかったです。

00:00:45.000 --> 00:00:49.000
あなたが私たちの考え方の文化を受け入れているのを見ると、私たちは興奮します。

00:00:49.000 --> 00:00:53.000
また、過去1年間に受け取ったフィードバックにも非常に感謝しています。

00:00:53.000 --> 00:01:01.000
iOS 16のScreenTime APIの新機能を紹介する前に、まずiOS 15リリースのハイライトをいくつかまとめたいと思います。

00:01:01.000 --> 00:01:09.000
昨年のスクリーンタイムAPIは、ファミリーコントロール、管理設定、デバイスアクティビティの3つの新しいフレームワークを導入しました。

00:01:09.000 --> 00:01:15.000
iOS 15では、これらのフレームワークはペアレンタルコントロールアプリに新しい機能をもたらしました。

00:01:15.000 --> 00:01:18.000
記憶を呼び起こすために、3つすべてをざっと見てみましょう。

00:01:18.000 --> 00:01:23.000
ファミリーコントロールは、スクリーンタイムAPIへのアクセスを許可するため、本質的にゲートウェイです。

00:01:23.000 --> 00:01:33.000
このフレームワークにより、ペアレンタルコントロールアプリの削除を防ぐことができ、アプリやウェブサイトを識別するために使用される不透明なトークンを提供することで、ユーザーのプライバシーを保護しました。

00:01:33.000 --> 00:01:43.000
ManagedSettingsを使用すると、アプリはスクリーンタイムと同様に制限を適用し、Webトラフィックをフィルタリングし、アクティビティをシールドできますが、アプリのブランディングと機能でカスタマイズできます。

00:01:43.000 --> 00:01:52.000
デバイスアクティビティフレームワークでは、タイミングウィンドウの開始時と終了時、およびアプリやWebサイトの使用がしきい値を超えたときにコードを実行できます。

00:01:52.000 --> 00:01:56.000
これら3つのフレームワークのそれぞれには、iOS 16でいくつかのエキサイティングな新しいアップデートがあります。

00:01:56.000 --> 00:02:04.000
これらのアップデートは、APIをより使いやすくするだけでなく、ユーザーのエクスペリエンスを向上させます。

00:02:04.000 --> 00:02:08.000
デモアプリケーションであるWorklogを使用して詳細を説明します。

00:02:08.000 --> 00:02:16.000
Worklogは、特定の使用指標が満たされるまで、特定のアプリへのアクセスを制限することで、新しい専門家にとって良い習慣を奨励します。

00:02:16.000 --> 00:02:25.000
このiPhoneの所有者であるAniyahが、iOS 16のScreenTime APIを使用して自分自身にこれらの制限を課す方法をお見せしたいと思います。

00:02:25.000 --> 00:02:27.000
ファミリーコントロールから始めましょう。

00:02:27.000 --> 00:02:35.000
iOS 15を覚えていれば、Family ControlsはiCloud認証を介してのみ子デバイスを認証することができました。

00:02:35.000 --> 00:02:43.000
iOS 16では、ファミリーコントロールが自分のデバイスから独立したユーザーを承認できるようになりました。

00:02:43.000 --> 00:02:50.000
この新しい承認方法は、スクリーンタイムAPIを使用して、単なるペアレンタルコントロールアプリ以上のものを構築できることを意味します。

00:02:50.000 --> 00:02:57.000
既存のペアレンタルコントロール認証とは異なり、個々の認証はデバイスごとに任意の数のアプリで使用できます。

00:02:57.000 --> 00:03:06.000
また、個々の承認はペアレンタルコントロールのユースケース用ではないため、iCloudのサインアウトとアプリの削除に対する暗黙の制限は適用されません。

00:03:06.000 --> 00:03:09.000
新しい承認の使用方法を見てみましょう。 

00:03:09.000 --> 00:03:14.000
アプリの起動時に最初に行う必要があるのは、FamilyControlsの承認をリクエストすることです。

00:03:14.000 --> 00:03:20.000
Worklogが最初に起動したときに、共有承認センターを使用してこのリクエストを行います。

00:03:20.000 --> 00:03:26.000
リクエストにより、承認ステータスが更新されるか、エラーが発生する可能性があります。

00:03:26.000 --> 00:03:32.000
このアプリはこれまでこのiPhoneで実行されたことがないので、requestAuthorizationはアラートでAniyahの承認を求めます。

00:03:32.000 --> 00:03:40.000
許可をタップすると、続行するためにFace ID、Touch ID、またはデバイスパスコードで認証するようにユーザーに促します。

00:03:40.000 --> 00:03:48.000
ユーザーが正常に認証されると、requestAuthorizationを再度呼び出すと、再びアラートが表示されず、代わりに黙って成功します。

00:03:48.000 --> 00:03:54.000
アプリがファミリーコントロールで承認されると、アプリの設定に2つのスイッチが追加されます。

00:03:54.000 --> 00:04:01.000
スクリーンタイムに1つ、スクリーンタイムアクセスリストを持つアプリの下、アプリごとの設定に1つ、スクリーンタイム制限としてラベル付けされています。

00:04:01.000 --> 00:04:07.000
親と個々のユーザーは、これらのスイッチのいずれかを介してファミリーコントロールからアプリの認証を解除することを選択できます。

00:04:07.000 --> 00:04:17.000
ご覧のとおり、新しい個人認証の使用は、ペアレンタルコントロール認証を使用するのと同じくらい簡単で、非同期を使用して両方にいくつかの素晴らしい改善を行いました。

00:04:17.000 --> 00:04:20.000
では、管理設定の新しい変更を見てみましょう。

00:04:20.000 --> 00:04:27.000
管理設定は、特に管理設定ストアの使用において、開発者がより簡単に使用できるように刷新されました。

00:04:27.000 --> 00:04:34.000
なじみのない人のために、マネージド設定ストアは、現在のユーザーまたはデバイスに設定を適用するデータストアです。

00:04:34.000 --> 00:04:39.000
iOS 15では、プロセスごとに1つのマネージド設定ストアしか持つことができませんでした。

00:04:39.000 --> 00:04:44.000
また、アプリとデバイスのアクティビティ拡張機能は、異なる管理設定ストアを持つ必要がありました。

00:04:44.000 --> 00:04:48.000
これにより、デバイスのアクティビティに応じて設定を変更することが困難になりました。

00:04:48.000 --> 00:04:56.000
現在、iOS 16では、プロセスごとに最大50のマネージド設定ストアを作成でき、それぞれが独自の名前を持つことができます。

00:04:56.000 --> 00:05:02.000
これらの名前付きストアは、アプリとすべてのアプリ拡張機能の間でも自動的に共有されます。

00:05:02.000 --> 00:05:07.000
また、指定された名前付きストアのすべての設定を一度に削除できるようになりました。

00:05:07.000 --> 00:05:10.000
Worklogが名前付きストアをどのように使用しているかをお見せしたいと思います。

00:05:10.000 --> 00:05:18.000
Worklogが初めて起動し、Aniyahのデバイスが正常に認証されると、Gaming ManagedSettingsStoreを作成します。

00:05:18.000 --> 00:05:25.000
このストアには、Worklogの場合、すべてのゲームウェブサイトのシールドを含むゲーム制限が含まれます。

00:05:25.000 --> 00:05:33.000
Worklogには、アプリが初めて起動するとすぐにソーシャルメディアアプリやウェブサイトを保護する「ソーシャル」という名前のストアもあります。

00:05:33.000 --> 00:05:44.000
ただし、Worklogを使用する場合、Aniyahは[Allow for Evenings]ボタンをクリックすると、午後5時から午後8時の間にソーシャルメディアのみを許可するデバイスアクティビティスケジュールが作成されます。

00:05:44.000 --> 00:05:49.000
午後5時になると、デバイスアクティビティモニターは、対応する名前付きストアの制限を解除します。

00:05:49.000 --> 00:05:56.000
タイミングウィンドウが午後8時に終了すると、Aniyahのデバイス上のソーシャルメディアアプリやウェブサイトに制限を再適用します。

00:05:56.000 --> 00:06:00.000
さて、「私たちのゲームストアはゲームのウェブサイトを制限していませんでしたか?」と疑問に思う人もいるかもしれません。

00:06:00.000 --> 00:06:05.000
「ソーシャルストアのすべての設定をクリアして、ゲームストアの設定と競合しないのですか?」

00:06:05.000 --> 00:06:07.000
答えはノーです。

00:06:07.000 --> 00:06:13.000
最も制限された設定が常に勝つため、ゲームのウェブサイトは依然としてAniyahのデバイスで制限されたままです。

00:06:13.000 --> 00:06:20.000
これらの新しい名前付きストアは非常に強力であり、管理された設定を使用してアプリを開発することがはるかに簡単になると感じています。

00:06:20.000 --> 00:06:22.000
しかし、私たちはまだ終わっていません。

00:06:22.000 --> 00:06:26.000
また、デバイスアクティビティフレームワークに非常にエキサイティングな機能を追加しました。

00:06:26.000 --> 00:06:35.000
iOS 15では、デバイスアクティビティにより、アプリはタイミングウィンドウの開始と終了、およびアプリやウェブサイトの使用しきい値に応答することができました。

00:06:35.000 --> 00:06:45.000
iOS 16では、デバイスアクティビティには、アプリがSwiftUIを使用して完全にカスタムの使用状況レポートを作成できる新しいレポートサービスがあります。

00:06:45.000 --> 00:06:53.000
使用状況データは、ユーザーに表示されるデータと、それが画面上でどのようにレンダリングされるかをカスタマイズできる新しい拡張ポイントに提供されます。

00:06:53.000 --> 00:07:02.000
これらのデバイスアクティビティレポートを使用すると、エンドユーザーに完全なプライバシーを提供しながら、ユーザーエクスペリエンスを完全にカスタマイズできます。

00:07:02.000 --> 00:07:08.000
Worklogでは、DeviceActivityReport.ContextとDeviceActivityFilterを確立するのを見ることができます。

00:07:08.000 --> 00:07:17.000
DeviceActivityReport.Contextは、DeviceActivityデータに基づいて描画するビューの種類をレポートに伝えるカスタマイズ可能なタイプと考えることができます。

00:07:17.000 --> 00:07:23.000
DeviceActivityFilterを指定することで、レポートコンテキストのタイミングウィンドウをカスタマイズできます。

00:07:23.000 --> 00:07:32.000
次に、何を表現するかをシーンに伝えるために、DeviceActivityReportScene内にデバイスアクティビティレポートコンテキストの定義を設定します。

00:07:32.000 --> 00:07:40.000
私たちのコンテンツは、カスタム設定であるPieChartView.Configurationと、このレポートの結果のSwiftUIビューを定義します。

00:07:40.000 --> 00:07:49.000
次に、makeConfiguration内で、円グラフビューの設定を水和するために、AniyahのDeviceActivityデータをマッピングします。

00:07:49.000 --> 00:07:56.000
フレームワークは、新しい使用データがフェッチされるたびにmakeConfigurationを呼び出すので、自分で呼び出す必要はありません。

00:07:56.000 --> 00:08:05.000
ここでは、PieChartView.ConfigurationがAniyahのデバイスアクティビティデータでビューを提供することで、円グラフビューのビューモデルとして機能する方法を見ることができます。

00:08:05.000 --> 00:08:12.000
最後に、DeviceActivityReport拡張機能の本文で定義することで、カスタムSwiftUIレポートをレンダリングできます。

00:08:12.000 --> 00:08:19.000
Worklog用に作成した円グラフレポートは、デバイスアクティビティレポートをカスタマイズできるエキサイティングな方法の1つにすぎません。

00:08:19.000 --> 00:08:24.000
これで、iOS 16のスクリーンタイムAPIの新機能に関するブリーフィングは終了です。

00:08:24.000 --> 00:08:34.000
ご覧のとおり、スクリーンタイムAPIは、私たちが最初に立ち上げたのと同じ安全でプライバシーを保護する方法で、コア制限やデバイスアクティビティの監視などの機能をサポートし続けています。

00:08:34.000 --> 00:09:01.000
要約すると、独立したユーザーは、デバイスごとに複数のサードパーティアプリケーションを承認するオプションでファミリーコントロールで承認できるようになりました。管理された設定ストアは、アプリとアプリ拡張機能の間で設定をローカルで共有するようになりました。その結果、アプリケーション内の複数の名前付きストアを管理できるようになりました。最後に、デバイスアクティビティフレームワークは、ユーザーに使用状況データを明らかにし、カスタマイズ可能な新しいプライバシー保護UIを導入しています。

00:09:01.000 --> 00:09:07.000
これらの新しい機能強化と追加により、アプリケーションに関与できるユーザーの数が拡大すると信じています。

00:09:07.000 --> 00:09:13.000
この新しいリリースにインスピレーションを与えてくれてありがとう、そしてデジタルヘルスと生産性分野への今後の貢献に感謝します。

00:09:13.000 --> 00:09:18.000
スクリーンタイムAPIを利用する新しいエキサイティングな方法を見るのが待ちきれません。

00:09:18.000 --> 00:09:25.000
私たちは、あなたが持っているフィードバックを歓迎し、この技術をあなたと私たちのユーザーにとってよりアクセスしやすくするために引き続き取り組んでいきます。

00:09:25.000 --> 23:59:59.000
ありがとうございます。

