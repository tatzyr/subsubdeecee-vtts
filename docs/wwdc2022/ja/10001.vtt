WEBVTT

00:00:00.000 --> 00:00:03.000
♪インストゥルメンタルヒップホップ音楽♪

00:00:03.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:14.000
こんにちは、私はサラ・マクラナハンで、伝道チームのデザイナーです。

00:00:14.000 --> 00:00:22.000
今日は、iOSアプリのナビゲーションを改善するための実践的なヒント、ガイダンス、ベストプラクティスを共有します。

00:00:22.000 --> 00:00:31.000
アプリが素晴らしいナビゲーションを持っているとき、人々はコンテンツと経験に集中することができるので、それはしばしば気づかれない。

00:00:31.000 --> 00:00:40.000
ナビゲーションには、物事がどのように振る舞うか、物事がどこに属しているか、アプリで物事がどのように機能するかについて人々に教えることが含まれます。

00:00:40.000 --> 00:00:50.000
ナビゲーションの目標は、人々があなたのコンテンツを簡単に発見し、あなたのアプリと対話できるように、十分な親しみの基盤を提供することです。

00:00:50.000 --> 00:01:01.000
ナビゲーションが私たちの期待からあまりにも遠く離れているとき、または世界に対する私たちの自然な理解と一致しない場合、私たちはしばしば欲求不満を感じ、アプリが使いにくいと感じます。

00:01:01.000 --> 00:01:05.000
しかし、ナビゲーションを正しくするには、集中力と意図が必要です。

00:01:05.000 --> 00:01:14.000
そして、私が今日カバーしている概念は新しいものではありませんが、それらは基本的であり、iOSでアプリを成功させるために不可欠です。

00:01:14.000 --> 00:01:20.000
したがって、プラットフォームを初めてでも、アプリ体験を向上させる方法を探している場合でも、このセッションはあなたのためです。

00:01:20.000 --> 00:01:27.000
今日は、iOSの一般的なナビゲーション形式であるタブバーについて説明します。

00:01:27.000 --> 00:01:36.000
次に、階層的なナビゲーションとモーダルプレゼンテーションを探索して、画面間を移動するためのインタラクションについて説明します。

00:01:36.000 --> 00:01:42.000
ご覧のとおり、ナビゲーションの大きなトピック領域のサブセットのみをカバーします。

00:01:42.000 --> 00:01:56.000
しかし、これらのコアパターンは、私たちがしばしば誤用されるのを見る基盤を表し、それらを理解することは、あなたのアプリが進化したり、他のデバイスをサポートしたりするにつれて、成功のためにあなたを設定することができるので、私たちはここから始めます。

00:01:56.000 --> 00:01:58.000
タブバーから始めましょう。

00:01:58.000 --> 00:02:06.000
タブバーは、画面の下部にあるグローバルナビゲーションコントロールで、アプリのコンテンツをさまざまなセクションに分類します。

00:02:06.000 --> 00:02:12.000
タブは、情報階層を反映するコントロールと考えてください。

00:02:12.000 --> 00:02:20.000
UIコントロール自体は、すでに明確なグループ化を翻訳し、アプリの異なる領域間の関係を確立する必要があります。

00:02:20.000 --> 00:02:26.000
したがって、タブバーはトップレベルのコンテンツを表し、アプリの階層の一番上にあるはずです。

00:02:26.000 --> 00:02:33.000
各タブはアプリのオプションメニューを伝え、これらのセクションは有意義で説明的でなければなりません。

00:02:33.000 --> 00:02:42.000
これは本当に簡単に聞こえますが、実際には、さまざまな理由から、アプリを見失うのは簡単です。

00:02:42.000 --> 00:02:45.000
いくつかの良い例を見てみましょう。

00:02:45.000 --> 00:02:51.000
これらのアプリのコンテンツを見ずに、タブがどのように機能を示唆しているかに注目してください。

00:02:51.000 --> 00:02:56.000
彼らは、簡潔なラベルを表示するだけでアプリができることについての物語を語ります。

00:02:56.000 --> 00:03:04.000
Listen NowとRadioは、これが聴覚メディアを備えたコンテンツベースのアプリであることを示しています。

00:03:04.000 --> 00:03:13.000
このアプリの場合、ライブラリとアルバムは、強力なパーソナライゼーションを示す「For You」タブでコンテンツが豊富なアプリをほのめかしています。

00:03:13.000 --> 00:03:23.000
このアプリには、その機能が自明であるほど焦点を絞ったタブがあり、それらのコンテンツエリアで何ができるかを正確に教えてくれます。

00:03:23.000 --> 00:03:29.000
私たちがよく見るのは、アプリの最初のタブには機能が最も重く読み込まれる傾向があるということです。

00:03:29.000 --> 00:03:34.000
タブ全体に機能を分散して、インターフェイスのバランスを取るようにしてください。

00:03:34.000 --> 00:03:41.000
タブがどのように誤解や混乱を招くかを探るために、例を挙げてみましょう。

00:03:41.000 --> 00:03:48.000
地元のサイクリストのように、人々が都市でキュレーションされたルートを発見できる偽のアプリを持っていると想像してみてください。

00:03:48.000 --> 00:03:57.000
そして、あなたが旅行している、新しい都市に引っ越している、または単にスポーツに入るなら、ルートを保存して旅程を作成する簡単な方法があります。

00:03:57.000 --> 00:03:58.000
ここにあります。

00:03:58.000 --> 00:04:07.000
このアプリは自転車へのルートを見つけることなので、最初に表示されますのは、乗り物のフィルター付きのマップビューです。

00:04:07.000 --> 00:04:15.000
次に、コンテンツを編集したり、友達を招待したりすることでやり取りできる今後の旅程のセクションがあります。

00:04:15.000 --> 00:04:19.000
そして、コレクションビューでグループ化されたルートがあります。

00:04:19.000 --> 00:04:26.000
一目で利用できるので、このようにすべての機能を1つのタブに追加するのは魅力的です。

00:04:26.000 --> 00:04:33.000
あるいは、あなたのアプリは時間の経過とともに進化し、機能をタブバーのセクションにグループ化するのを見失ったのかもしれません。

00:04:33.000 --> 00:04:38.000
さて、今日は、あなたのアプリでこれを再考することをお勧めします。

00:04:38.000 --> 00:04:47.000
このデザインでは、人々は探しているもののためにたくさんスクロールしなければならない可能性があり、無関係で異なる機能を精神的に解析するには努力が必要です。

00:04:47.000 --> 00:04:56.000
マップビューのフィルタリングと旅程の編集は、誰かがこのアプリを開いて使用するときの2つの非常に異なる機能と考え方です。

00:04:56.000 --> 00:05:03.000
アプリの機能をこのように組み合わせたり、人々がアプリの残りの部分と対話しないことを恐れて行うことに注意してください。

00:05:03.000 --> 00:05:11.000
よく整理され、明確に伝えられると、アプリの機能を理解するのがはるかに簡単になります。

00:05:11.000 --> 00:05:17.000
これを行う1つの方法は、一歩下がって自問することです、なぜ人々はあなたのアプリを使うのですか?

00:05:17.000 --> 00:05:20.000
優れたアプリにはソリューションが集中していることを忘れないでください。

00:05:20.000 --> 00:05:25.000
彼らは、1つのアプリですべてを解決しようとするのとは対照的に、いくつかのことを本当にうまくやることを目指しています。

00:05:25.000 --> 00:05:28.000
このサイクリングアプリのタブバーを再考しましょう。

00:05:28.000 --> 00:05:34.000
人々はこのアプリを使って、自分のレベルに合った、気にかけている場所のルートを見つけます。

00:05:34.000 --> 00:05:39.000
これは、人々が最も気にかけているコンテンツを表すため、アプリで最も重要なビューの1つです。

00:05:39.000 --> 00:05:51.000
では、一歩下がってタブバーを再評価して、ルートがどのように使用され、そのコンテンツがよりバランスのとれた方法でアプリでどのように表現できるかを理解しましょう。

00:05:51.000 --> 00:05:54.000
これはルートの詳細です。

00:05:54.000 --> 00:06:06.000
誰かが、距離や標高の上昇などの概要、歩道や道路などのルート全体の地図や路面へのアクセスを見ることを期待しています。

00:06:06.000 --> 00:06:13.000
急な登りや下りの特定の吹き出を見ると、このルートが私のレベルに適しているかどうかを理解するのに役立ちます。

00:06:13.000 --> 00:06:17.000
そして最後に、ルート沿いの食べ物の停留所は計画に最適です。

00:06:17.000 --> 00:06:24.000
わかりました。では、人々はルートを見るというこのコア機能をどのように理解していますか？

00:06:24.000 --> 00:06:29.000
まあ、ルートは、それがどこにあるかを知っている場合にのみ役立ちます。

00:06:29.000 --> 00:06:35.000
ルートは、関連付けられている都市と関係がある可能性が高い。

00:06:35.000 --> 00:06:41.000
それは私にそこでのサイクリングに関する有用な情報を教えてくれる都市の概要につながるかもしれません。

00:06:41.000 --> 00:06:47.000
そして、ビューを下にスクロールすると、乗ることができるすべてのルートのリストが表示されます。

00:06:47.000 --> 00:06:56.000
しかし、このアプリは異なる都市のルートもサポートしています。つまり、各都市はすべての場所のリストに戻る必要があります。

00:06:56.000 --> 00:07:01.000
ルートに移動すると、場所が階層の最上位になる可能性があります。

00:07:01.000 --> 00:07:09.000
ご覧のとおり、このワークフローだけでも多くのコンテンツがあり、このアプリが提供する価値にとって本当に鍵です。

00:07:09.000 --> 00:07:12.000
これはタブバー項目の大きな正当性です。

00:07:12.000 --> 00:07:14.000
今、それがどのように自己完結しているかに注目してください。

00:07:14.000 --> 00:07:20.000
このタブに場所以外のものを入れるのは意味がありません。

00:07:20.000 --> 00:07:24.000
優れたタブバーの設計の一部は、コンテンツを整理することです。

00:07:24.000 --> 00:07:28.000
関係に対処するためのこれらの自然な方法を探してください。

00:07:28.000 --> 00:07:35.000
旅程など、アプリの他の重要な機能でこの演習を行うことができ、自分自身に尋ねることができます。旅程とは何ですか?

00:07:35.000 --> 00:07:37.000
人々はそれをどのように使用しますか?

00:07:37.000 --> 00:07:41.000
そして、私のアプリで彼らのために場所を捧げる場所はどこにありますか?

00:07:41.000 --> 00:07:55.000
たとえ人々があなたのアプリのコンテンツに慣れていなくても、そしておそらく特にそうであっても、あなたの機能とコンテンツを明確に伝え、それがあなたの階層のどこに属しているか、そして人々がそれにどのように関与するかを評価するのが最善です。

00:07:55.000 --> 00:08:05.000
その後、このアプリは、すべての機能を最初のタブに詰め込むことから、より明確で簡単なナビゲーション形式に改善できます。

00:08:05.000 --> 00:08:11.000
現在、これらのセクションは単独で持ちこたえているため、コア機能はタブバーでよりバランスが取れています。

00:08:11.000 --> 00:08:16.000
それらは関連していますが、コンテンツ領域とワークフローは明らかに異なります。

00:08:16.000 --> 00:08:21.000
これにより、ナビゲーションがはるかに直感的になります。

00:08:21.000 --> 00:08:26.000
次に、少し関連するトピックについて話し合いたいのですが、表現が異なります。

00:08:26.000 --> 00:08:32.000
機能を複製して1つのタブに統合することは避けてください。

00:08:32.000 --> 00:08:43.000
このようなコンテンツが豊富なアプリでは、「ホーム」というタイトルのタブは、アプリ全体の機能を1か所で紹介する魅力的なキャッチオールのように思えるかもしれません。

00:08:43.000 --> 00:08:54.000
たとえば、人々は旅程機能に関与していないように見え、機能が存在することを知らないので心配するかもしれません。なぜなら、彼らはその存在を知らないからです。

00:08:54.000 --> 00:09:17.000
したがって、場所カードの新しい旅程や、友人を招待するなど、前面と中央の機能を持つ旅程ビューのバージョンを作成するなど、可視性を高めるためにタブバーでアクションを繰り返すことで、エンゲージメントを奨励することは論理的に思えるかもしれません。または、簡単に追加できるアクションで停留所をリストします。

00:09:17.000 --> 00:09:23.000
アプリ全体でいくつかの機能が発見されないことを恐れて、これを行うのは魅力的かもしれません。

00:09:23.000 --> 00:09:27.000
そして、明確にするために、これはコンテンツの複製に関するものではありません。

00:09:27.000 --> 00:09:36.000
多くのシナリオでは、曲や写真などの同様の種類のコンテンツが多くのタブに存在するが、異なる方法で整理されていることは理にかなっています。

00:09:36.000 --> 00:09:45.000
しかし、人々が物事を達成するために取ることができる行動であるアプリの機能である場合、冗長性は混乱を引き起こします。

00:09:45.000 --> 00:09:49.000
そして実際には、ホームタブはアプリの階層を混乱させます。

00:09:49.000 --> 00:10:02.000
アプリ全体の異なるタブや領域の機能が複製され、十分なコンテキストなしで単一の画面に追加されると、冗長性と混乱が生じます。

00:10:02.000 --> 00:10:10.000
ホームは、タブが発見可能性の問題を解決しようとしているため、すべての機能が不動産のために戦っているタブになります。

00:10:10.000 --> 00:10:16.000
しかし、実際には、コンテンツの理解とそれに基づいて行動する方法との間に解離が生じます。

00:10:16.000 --> 00:10:20.000
これがあなたのアプリなら、ホームタブを完全に削除することを検討してください。

00:10:20.000 --> 00:10:26.000
機能の冗長性は、人々が物事がどこに属し、その理由を理解することを禁止しています。

00:10:26.000 --> 00:10:35.000
ホームタブに関するもう1つの懸念は、アクションが別のタブにも存在するため、機能が繰り返されるため、誰かがタブジャンプする可能性があることです。

00:10:35.000 --> 00:10:42.000
ビュー内の要素をタップして誰かを別のタブに移動するのは、不快で混乱します。

00:10:42.000 --> 00:10:46.000
誰かに自動的にタブの変更を強制しないでください。

00:10:46.000 --> 00:10:58.000
次に、タブ付きナビゲーションの最大のセールスポイントの1つは、複数のトップレベルの階層へのアクセスであるため、ナビゲーション全体でタブバーを隠したり削除したりしないでください。

00:10:58.000 --> 00:11:08.000
タブバーへの永続的なアクセスにより、それぞれのコンテキストを維持しながら、情報階層のさまざまなレベルを切り替えることができます。

00:11:08.000 --> 00:11:26.000
たとえば、[場所]タブで乗車を検討している新しいルートを見て、旅程タブで構築している旅程と比較し、すでに保存したルートは、階層の奥深くにある2つのレベルです。

00:11:26.000 --> 00:11:34.000
これは、タブが目的を定義し、コンテンツの特定のカテゴリを表す場合にのみうまく機能します。

00:11:34.000 --> 00:11:42.000
最後に、堅実な情報アーキテクチャに投資するすべての作業は、明確で簡潔なラベルで尊重されるべきです。

00:11:42.000 --> 00:11:46.000
今年のインタラクションカテゴリーのアップルデザインの受賞者を見てみましょう。

00:11:46.000 --> 00:11:48.000
これはSlopesアプリです。

00:11:48.000 --> 00:11:55.000
アプリを起動すると、シーズン統計のログブックである中央のタブに着地するのはとても素晴らしいことだと思います。

00:11:55.000 --> 00:11:57.000
他のタブは具体的です。

00:11:57.000 --> 00:12:03.000
それらは理解しやすく、私はアプリが何をするのか、それをどのように使用するのかをすぐに理解しています。

00:12:03.000 --> 00:12:08.000
一見すると、これはラベルがコンテンツを代表しているからです。

00:12:08.000 --> 00:12:18.000
スキーの日を記録し、リゾートを閲覧し、友人と統計を比較します。それらはすべて、簡潔なラベルでコア機能を表しています。

00:12:18.000 --> 00:12:21.000
タブバーは、ナビゲーションのための強力なコントロールです。

00:12:21.000 --> 00:12:24.000
私たちが学んだことをすべてまとめましょう。

00:12:24.000 --> 00:12:28.000
タブを使用して、情報階層を反映します。

00:12:28.000 --> 00:12:33.000
タブ全体でバランスを取る方法で機能を整理します。

00:12:33.000 --> 00:12:38.000
機能を複製して1つのタブにマージすることは避けてください。

00:12:38.000 --> 00:12:42.000
アプリ全体でタブバーを常に永続的に保ちます。

00:12:42.000 --> 00:12:46.000
最後に、各タブに明確で簡潔なラベルを使用します。

00:12:46.000 --> 00:12:49.000
よし、インタラクションに飛び込もう。

00:12:49.000 --> 00:13:02.000
アプリの画面間をナビゲートする場合、移行には2つの非常に一般的な形式があります。より詳細にプッシュするなど、「プッシュ」と呼ばれる用語を使用して、アプリの階層をナビゲートできます。

00:13:02.000 --> 00:13:06.000
または、モーダルプレゼンテーションで移行することもできます。

00:13:06.000 --> 00:13:12.000
これらは、アプリの階層とビュー間の移行を横断するための非侵入的で身近な方法です。

00:13:12.000 --> 00:13:14.000
両方をお見せしましょう。

00:13:14.000 --> 00:13:24.000
階層的なナビゲーションを介して移行すると、ビューがプッシュされます。これは、人が要素をタップし、次の画面が右から左にビューにスライドすることを意味します。

00:13:24.000 --> 00:13:30.000
プッシュトランジションは、アプリの階層をさらに掘り下げるときに予想されるデフォルトです。

00:13:30.000 --> 00:13:35.000
プッシュは、情報階層を直接反映するため、素晴らしいです。

00:13:35.000 --> 00:13:41.000
これは、高いレベルからコンテンツを移動し、より詳細に掘り下げるという文字通りの表現です。

00:13:41.000 --> 00:13:46.000
一方、モーダルはインターフェイス内の自己完結型のタスクのために予約されています。

00:13:46.000 --> 00:13:55.000
モーダルは、独立したワークフローに最適です。つまり、誰かがそのビューで決定を下し、タスクを完了するのに十分な情報を持っています。

00:13:55.000 --> 00:14:01.000
モーダルは、人々を情報階層から分離することでフォーカスを作成するため、ユニークです。

00:14:01.000 --> 00:14:07.000
たとえば、新しい旅程の作成はモーダルビューで表示されます。

00:14:07.000 --> 00:14:16.000
誰かが選択をしたり、タイトル、都市、日付の範囲などのデータを入力したり、友人を招待したりすることもできます。

00:14:16.000 --> 00:14:24.000
これは、ビューを閉じたり、アプリの残りの部分をナビゲートしたりする前に、UIを編集して完了することを意図しているため、モーダルに適しています。

00:14:24.000 --> 00:14:31.000
それはすべてユーザー入力なので、アプリの残りの部分はフィールドを完成させるための参照として必要ありません。

00:14:31.000 --> 00:14:35.000
これらの相互作用に精通したので、両方を深く掘り下げてみましょう。

00:14:35.000 --> 00:14:37.000
階層的なナビゲーションから始めます。

00:14:37.000 --> 00:14:40.000
考慮すべきガイドラインをいくつか紹介します。

00:14:40.000 --> 00:14:46.000
プッシュトランジションを使用して、アプリの階層のさまざまなレベル間を移動します。

00:14:46.000 --> 00:14:52.000
階層的なナビゲーションは、トップレベルコンテンツとセカンダリコンテンツの関係を強化します。

00:14:52.000 --> 00:14:55.000
トップレベルのコンテンツは階層でより高いです。

00:14:55.000 --> 00:15:03.000
詳細が知りたいので、階層を掘り下げて補足ビューにアクセスします。

00:15:03.000 --> 00:15:09.000
選択をしながら、私は選択肢を絞り込み、階層の残りの部分へのアクセスを排除します。

00:15:09.000 --> 00:15:11.000
こうあるべきだ。

00:15:11.000 --> 00:15:20.000
コンテンツはますます具体的になるべきであり、私がプッシュして詳細に掘り下げるにつれて、オプションが少なくなるはずです。

00:15:20.000 --> 00:15:27.000
プッシュトランジションを使用する場合は、タブバーが画面の下部に永続的に固定されたままであることが本当に重要です。

00:15:27.000 --> 00:15:32.000
前に話したように、これはタブ付きナビゲーションの最大のセールスポイントの1つです。

00:15:32.000 --> 00:15:34.000
それは一貫しています。

00:15:34.000 --> 00:15:38.000
常に利用可能であるため、アプリのコアエリアにアクセスできます。

00:15:38.000 --> 00:15:42.000
これは、人々が異なる階層でコンテンツを探索できることを意味します。

00:15:42.000 --> 00:15:54.000
ビューが押し込むと、状態が保存されるべき他のタブの階層へのアクセスを失うことなく、どこから来たのかに戻るために左から右にスワイプするのは自然な感じがします。

00:15:54.000 --> 00:16:02.000
次に、階層内の人々を方向付けるために、適切なラベルで画面の上部にあるナビゲーションバーを使用することが重要です。

00:16:02.000 --> 00:16:04.000
お見せしましょう。

00:16:04.000 --> 00:16:16.000
コンテンツを掘り下げて情報階層を移動すると、ナビゲーションバーの戻るボタンが、私が来たばかりの画面のタイトルを反映するようにどのように変化するかに注目してください。

00:16:16.000 --> 00:16:31.000
これは、画面をスクロールしてドリルインしてアプリにさらにナビゲートする際に役立つので、戻るボタンは階層のレベルアップを示すことができるので、どこから来たのか、どうやってそこに戻るのかを覚えておく必要はありません。

00:16:31.000 --> 00:16:40.000
階層ナビゲーションを使用するもう1つの場所は、開示インジケーターが使用されるすべての場合です。

00:16:40.000 --> 00:16:47.000
シェブロンとも呼ばれる開示指標は、移行が期待される方向を示しています。

00:16:47.000 --> 00:16:55.000
シェブロンが異なるトランジションを開始すると、UIが表すものとそれに続く相互作用の間に断絶があります。

00:16:55.000 --> 00:16:59.000
進歩の精神的なモデルにマップをプッシュするという概念。

00:16:59.000 --> 00:17:05.000
西洋文化では、左から右に読み、その方向は進歩を示しています。

00:17:05.000 --> 00:17:13.000
しかし、アラビア語やヘブライ語などの右から左の言語では、進歩の精神的なモデルは別の方向に流れています。

00:17:13.000 --> 00:17:22.000
アプリが右から左の言語をサポートしている場合、プッシュの遷移が反転して、コンテンツの流れとの関連付けが作成されます。

00:17:22.000 --> 00:17:33.000
階層ナビゲーションを使用するときの最後の考慮事項は、誰かがコンテンツ間を頻繁にナビゲートしているときなど、ワークフローのコンテキストについてです。

00:17:33.000 --> 00:17:45.000
ビューを頻繁に切り替えたり、ワークフロー中にアプリを切り替えたり、ビューにかなりの時間を費やしたりして、人々が頻繁にやり取りすることを期待するワークフローを提示している場合は、プッシュを使用します。

00:17:45.000 --> 00:17:48.000
おなじみの例はメッセージアプリです。

00:17:48.000 --> 00:17:55.000
階層は比較的フラットですが、プッシュトランジションでメッセージに簡単に出入りできます。

00:17:55.000 --> 00:18:02.000
各メッセージがプッシュではなく、代わりにモーダルである場合、異なるチャット間をシームレスに移動するのは難しいでしょう。

00:18:02.000 --> 00:18:11.000
メッセージングは流動的に感じるはずですが、関連性がないときにモーダルを却下すると、人々は画面を離れることを考えなければならず、それは過度に複雑に感じます。

00:18:11.000 --> 00:18:17.000
プッシュは、アプリのコア領域間の摩擦のない移行を可能にします。

00:18:17.000 --> 00:18:20.000
それは階層的なナビゲーションの概要です。

00:18:20.000 --> 00:18:21.000
復習しましょう。

00:18:21.000 --> 00:18:26.000
主に、プッシュトランジションは、アプリの階層を横断するために使用されます。

00:18:26.000 --> 00:18:31.000
タブバーは常に画面の下部に固定されたままにしてください。

00:18:31.000 --> 00:18:38.000
各画面のナビゲーションバーを使用して、明確なタイトルとバックラベルを反映して、階層内の人々を方向付けします。

00:18:38.000 --> 00:18:42.000
開示インジケーターが存在する場合は、プッシュを使用してください。

00:18:42.000 --> 00:18:47.000
また、ワークフローがコンテンツ間を頻繁にナビゲートする必要がある場合。

00:18:47.000 --> 00:18:56.000
階層ナビゲーションは非常に一般的で比較的単純なインタラクションであるため、このトランジションはアプリで頻繁に使用される可能性があります。

00:18:56.000 --> 00:19:00.000
しかし、モーダルプレゼンテーションはコンテキストシフトに関するものです。

00:19:00.000 --> 00:19:05.000
それは、誰かを集中的なワークフローや自己完結型のタスクに隔離することです。

00:19:05.000 --> 00:19:11.000
iOSでモーダルを使用する場合は、常に画面の下部から表示してください。

00:19:11.000 --> 00:19:13.000
モーダルは情報階層を中断します。

00:19:13.000 --> 00:19:17.000
タブバーを覆うために画面の下部から来ます。

00:19:17.000 --> 00:19:20.000
これにより、人々があなたのアプリをさらに掘り下げるのを防ぎます。

00:19:20.000 --> 00:19:27.000
そして、目的は焦点を強化することであるため、意図的な混乱です。

00:19:27.000 --> 00:19:30.000
だから今、あなたは疑問に思うかもしれません、自己完結型のタスクとは何ですか?

00:19:30.000 --> 00:19:34.000
3つの大まかな例について話しましょう。

00:19:34.000 --> 00:19:41.000
モーダルプレゼンテーションは、簡単なタスク、マルチステップタスク、またはフルスクリーンコンテンツに使用できます。

00:19:41.000 --> 00:19:45.000
それぞれの例を共有します。

00:19:45.000 --> 00:19:53.000
まず、イベントの作成やリマインダーの設定など、簡単なタスクの達成を必要とするワークフローにモダリティを使用します。

00:19:53.000 --> 00:19:58.000
リマインダーを作成するには、入力フィールドを編集および変更する必要があります。

00:19:58.000 --> 00:20:03.000
これを行う間に焦点を絞ることは、誰かが気を散らすことなくこのタスクを達成するのに役立ちます。

00:20:03.000 --> 00:20:11.000
また、別の要素やタブをタップすることで、誤ってフローを放棄する可能性を最小限に抑えます。

00:20:11.000 --> 00:20:16.000
第二に、複雑なタスクに対応するワークフローにモダリティを使用します。

00:20:16.000 --> 00:20:21.000
これは、ウォレットにトランジットカードを追加するなど、潜在的に複数のステップです。

00:20:21.000 --> 00:20:37.000
複雑なタスクにモーダルを使用するのは直感に反するように思えるかもしれませんが、目的はタブバーを隠し、タスクが完了またはキャンセルされる前に人々がアプリ内を移動するのを防ぐことによって焦点を強化することです。

00:20:37.000 --> 00:20:45.000
そして第三に、最小限の追加ナビゲーションを必要とする記事、ビデオ、またはフルスクリーンコンテンツを表示するときにモーダルを使用します。

00:20:45.000 --> 00:20:54.000
フィットネスアプリでトレーニングを開始すると、ビデオとして表示されますが、モーダルプレゼンテーションに最適なシナリオです。

00:20:54.000 --> 00:20:59.000
階層セクションでは、人々を方向付けるためのナビゲーションバーの重要性について話しました。

00:20:59.000 --> 00:21:03.000
モーダルプレゼンテーションでも同様に重要です。

00:21:03.000 --> 00:21:09.000
モーダルの解剖学を見るときは、ナビゲーションバーをウェイファインディングのガイドとして考えてください。

00:21:09.000 --> 00:21:19.000
ラベルと行動の使用は、人々がどこにいるのか、他の場所に行くためにどのような行動を取ることができるかについて自信を持つことができます。

00:21:19.000 --> 00:21:25.000
タイトルは、「新しい旅程」など、人々を画面のコンテンツに向けるのに役立ちます。

00:21:25.000 --> 00:21:33.000
適切なラベルは好ましいアクションであることを意図しているため、重要性を強調するために太字のフォントで見られることがよくあります。

00:21:33.000 --> 00:21:39.000
ラベル自体は、タップされたときに何を期待するかを正確に教えてくれる簡潔で肯定的な動詞です。

00:21:39.000 --> 00:21:45.000
優先アクションはモーダルを却下し、アプリの以前の状態は保持されるべきです。

00:21:45.000 --> 00:21:57.000
モーダルにまだ入力またはインタラクションがない場合は、優先アクションを非アクティブにすることは、保存または続行するためにフィールドが必要であることを明確にする良い方法です。

00:21:57.000 --> 00:22:06.000
優先アクションがある場合、左のアクションを使用して「キャンセル」でモーダルを却下することは、ワークフローを放棄していることを明確に示しています。

00:22:06.000 --> 00:22:14.000
キャンセルをタップする前に情報を入力した場合は、ここで見られるようにアラートまたはアクションシートを表示するのに良い時期です。

00:22:14.000 --> 00:22:18.000
キャンセルを続けるとデータが失われることを誰かに知らせる。

00:22:18.000 --> 00:22:25.000
しかし、UIと対話していない場合は、[キャンセル]をタップすると、モーダルが終了するだけです。

00:22:25.000 --> 00:22:33.000
近いシンボルを控えめに使用し、モーダルプレゼンテーションが最小限の相互作用を必要とし、テキスト入力を必要としない場合にのみ使用してください。

00:22:33.000 --> 00:22:41.000
App Storeの「Today」タブのこの記事など、主な方法としてモーダルに「X」が表示されることがあります。

00:22:41.000 --> 00:22:49.000
クローズシンボルは、ユーザー入力がないため、ここで機能するため、微妙な却下アクションは、誰かがコンテンツに集中するのに役立ちます。

00:22:49.000 --> 00:22:55.000
以下は、入力とインタラクションを必要とするモーダルで、近いシンボルがどのように問題になるかの例です。

00:22:55.000 --> 00:23:01.000
フィルターを選択した後、[閉じる]をタップすると、選択は適用またはキャンセルされますか?

00:23:01.000 --> 00:23:07.000
明確にラベル付けされたアクションがなければ、人々は「閉じるをタップするとどうなりますか?」と疑問に思うでしょう。

00:23:07.000 --> 00:23:15.000
したがって、より肯定的であり、アクションがより明示的であるため、ナビゲーションバーでラベルを使用することが通常好ましいことを覚えておいてください。

00:23:15.000 --> 00:23:23.000
最後に、イライラし、過度に複雑に感じる可能性があるため、モーダルよりもモーダルを制限しようとします。

00:23:23.000 --> 00:23:29.000
モーダルビュー自体が、関連する場合にサブビューとトランジションをサポートできることは、呼び出す価値があります。

00:23:29.000 --> 00:23:41.000
先ほど述べたように、これは編集ビューです。つまり、テキストフィールドとテーブルセルには、表示だけでなく、対話することを意図した選択と入力があります。

00:23:41.000 --> 00:23:46.000
たとえば、旅程に追加した友人の1人のテーブルセルをタップできます。

00:23:46.000 --> 00:23:50.000
あなたはそれがシェブロンを持っているので、これがプッシュすることを期待しています、覚えていますか？

00:23:50.000 --> 00:23:57.000
私が押し込むと、このビューはケイトに関する情報を表示し、彼女を旅程から削除するオプションを与えるかもしれません。

00:23:57.000 --> 00:24:05.000
しかし、「人を追加」と「写真をアップロード」というラベルは色合いで、これらのアクションがタップ可能であることを示しています。

00:24:05.000 --> 00:24:09.000
これらの各シナリオでは、ワークフロー内のワークフローです。

00:24:09.000 --> 00:24:15.000
旅程を追加することから始めましたが、今は旅程に写真を追加しています。

00:24:15.000 --> 00:24:23.000
写真のアップロードは、カメラロールをスクロールして新しい写真を選択するなど、かなりのインタラクションを含むワークフローです。

00:24:23.000 --> 00:24:27.000
私はまた、これを自己完結型のタスクと定義します。

00:24:27.000 --> 00:24:34.000
写真が選択されると、そのモーダルは却下され、新しい旅程の最初のモーダルに戻ります。

00:24:34.000 --> 00:24:42.000
複数のモダリティスタックを制限しようとしますが、サブビューの一貫性とフォーカスを促進するために必要な場合があります。

00:24:42.000 --> 00:24:46.000
これは、iOSのモーダルプレゼンテーションの概要です。

00:24:46.000 --> 00:24:49.000
モーダルは画面の下部から表示する必要があります。

00:24:49.000 --> 00:24:55.000
シンプル、マルチステップ、フルスクリーンの3種類のタスクに使用できます。

00:24:55.000 --> 00:25:00.000
ナビゲーションバーの優先アクションとキャンセルアクションを使用します。

00:25:00.000 --> 00:25:04.000
最小限の相互作用でコンテンツには、クローズシンボルを使用してください。

00:25:04.000 --> 00:25:06.000
そして、モーダルよりもモーダルを制限します。

00:25:06.000 --> 00:25:09.000
この深いダイビングがお役に立てば幸いです。

00:25:09.000 --> 00:25:20.000
iOSアプリのナビゲーションを設計するときは、コンテンツがどのように整理されているか、人々があなたの機能とどのようにやり取りするか、そしてあなたの階層に関連してそれをどのように表現するのが最善かを考えてください。

00:25:20.000 --> 00:25:25.000
このようにして、人々はあなたのアプリのすべての素晴らしい機能に簡単にアクセスして対話することができます。

00:25:25.000 --> 00:25:26.000
聞いてくれてありがとう。

00:25:26.000 --> 23:59:59.000
♪

