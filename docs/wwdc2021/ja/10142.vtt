WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:10.000
サイモン・ゴールドレイ:こんにちは。

00:00:10.000 --> 00:00:15.000
このセッションでは、HLSでメディアをギャップレスに移行する方法についてです。

00:00:15.000 --> 00:00:20.000
私はサイモンで、ここアップルのストリーミングメディアチームのメンバーです!

00:00:20.000 --> 00:00:30.000
AVQueuePlayerを使用していますか、それともアプリケーションでHLSアイテムのシームレスで次のスタイルの再生を顧客に提供したいですか?

00:00:30.000 --> 00:00:35.000
プロデューサーが意図した継続性をメディアに提示したいですか？

00:00:35.000 --> 00:00:40.000
メディアをより長く楽しむ体験を提供することで、お客様をサポートできますか?

00:00:40.000 --> 00:00:50.000
はいの場合、最高のセッションにチューニングして、HLSアイテムをギャップレスに移行する方法を学びました。

00:00:50.000 --> 00:00:51.000
これが私たちの議題です。

00:00:51.000 --> 00:01:08.000
この新機能で提供できる魅力的なメディア体験のいくつかを調査し、メディアオーサリングの要件を詳述し、ベストプラクティスを強調するいくつかのプレイリストの例をステップスルーし、デモで締めくくります。

00:01:08.000 --> 00:01:15.000
AVQueuePlayerでHLSに裏打ちされたAVPlayerItemsを移行する利点は簡単です。

00:01:15.000 --> 00:01:26.000
今まで、移行のポイントは少し不快になる可能性があります。可聴的な不具合から瞬間的な視覚的なしゃっくり、さらには不確定なバッファリングの兆候まで何でも。

00:01:26.000 --> 00:01:35.000
ギャップレスアイテムの移行は、アプリケーションが顧客とコンテンツの間に提供する絆を維持します。

00:01:35.000 --> 00:01:38.000
「そのダイヤルに触らないで」というフレーズを思い出すかもしれません。

00:01:38.000 --> 00:01:46.000
あるエピソードの終わりから別のエピソードの始まりにシームレスに移行するエピソード治療を構築できます。

00:01:46.000 --> 00:01:54.000
ギャップレストランジションは、私たちが長い間楽しんできたシームレスなトラックツートラックアルバム体験を再現することを可能にします。

00:01:54.000 --> 00:02:01.000
これを行うとき、私たちはライブまたは意図的に作成された可能性のあるもののより正しい複製を提供しています。

00:02:01.000 --> 00:02:07.000
私たちは、途切れることのない、途切れることのない体験を提供することができます。

00:02:07.000 --> 00:02:10.000
線形プログラミングを複製できます。

00:02:10.000 --> 00:02:21.000
しかし、私たちはまた、あるタスクやシーンから視聴者を連れて行き、次のタスクに直接進む、ダイナミックでおそらくインタラクティブな体験を提供することができます。

00:02:21.000 --> 00:02:27.000
一連のトレーニングまたは他の教育メディアの間の移行を検討してください。

00:02:27.000 --> 00:02:36.000
ギャップレストランジションにより、正確な連続性を維持しながら、プログラムで視聴覚シーケンスのシーンをステッチできるようになりました。

00:02:36.000 --> 00:02:39.000
担当者を追加できます...

00:02:39.000 --> 00:02:41.000
...または、ワークアウトにクールダウンを追加します。

00:02:41.000 --> 00:02:50.000
HTTPを介したアダプティブビットレートメディアストリーミングのすべての利点を備えたメディアを提供しながら、これらすべてを達成することができます。

00:02:50.000 --> 00:02:52.000
もちろん、私たちもこれを使います!

00:02:52.000 --> 00:02:58.000
Apple Musicの新機能は、HLSを介してコンテンツを配信し、各曲間のギャップのない移行を実現します。

00:02:58.000 --> 00:03:05.000
私たちはこれをお客様にお届けすることに非常に興奮しており、お客様のお客様にも提供したいと考えています。

00:03:05.000 --> 00:03:13.000
それでは、HLSコンテンツの同じアイテムの遷移に影響を与えるために組み込む必要があるオーサリング要件を詳しく見てみましょう。

00:03:13.000 --> 00:03:23.000
HLSマニフェストで、シーケンシャルアイテム間のオーディオフォーマットの連続性を提供するバリアントを提供することで、ギャップレストランジションを可能にします。

00:03:23.000 --> 00:03:43.000
コンテンツは、次のオーディオメディア特性に一致するバリアントを提供する必要があります。FairPlayストリーミングの使用、ストリームタグのコーデック属性で指定されたオーディオコーデック、およびメディアタグのチャンネル属性で指定されたチャンネル数。

00:03:43.000 --> 00:03:51.000
異なるサンプルレートとビット深度でオーディオレンディションを提供することにした場合、ギャップレス遷移を阻害する可能性があることに注意してください。

00:03:51.000 --> 00:03:58.000
マッチを提供し、継続性を維持するための同じアドバイスは、これらの特性にも当てはまります。

00:03:58.000 --> 00:04:08.000
つまり、ギャップレストランジションを達成するために、連続してキューに入れられたアイテムに対して、各バリアントで同等のオーディオメディアを提供するようにしてください。

00:04:08.000 --> 00:04:15.000
最後に、メディアをオーサリングするときは、CMAFオーサリングガイダンスに従ってください。

00:04:15.000 --> 00:04:19.000
CMAFは「一般的なメディアアプリケーションフォーマット」の略です。

00:04:19.000 --> 00:04:30.000
このMPEG仕様では、プライミングフレームと残りのフレームの存在を知らせるために編集リストを使用する特定の推奨事項があります。

00:04:30.000 --> 00:04:38.000
次に、2つの候補アイテムのマスターバリアントプレイリストを調べて、簡単な例を見てみましょう。

00:04:38.000 --> 00:04:48.000
このHLSマニフェストでは、720pバリアントと1080pバリアントのペアの4つの視聴覚バリアントを提供しました。

00:04:48.000 --> 00:05:02.000
各ペア内で、高効率高度なオーディオコーデック、HE_AAC、およびAAC Low Complexity、またはAAC_LCでエンコードされたバリアントを提供します。

00:05:02.000 --> 00:05:11.000
この例では、再生条件がHE_AACとペアリングされた720pビデオの選択をサポートしていることを考慮してください。

00:05:11.000 --> 00:05:20.000
再生が終わりに近づくと、AVQueuePlayerは、少なくとも最初に、後続のアイテムで提供される同様にエンコードされたバリアントを選択します。

00:05:20.000 --> 00:05:25.000
これは、ネットワーク条件が高品質の層をサポートしている場合でも当てはまります。

00:05:25.000 --> 00:05:34.000
ギャップレストランジションのサービスは、ギャップレストランジション時に高品質を選択するよりも優先度が高い。

00:05:34.000 --> 00:05:43.000
再生が進むにつれて、アダプティブビットレートヒューリスティックが評価され、条件が続く場合、プレーヤーはそのより高い品質にシームレスに切り替えます。

00:05:43.000 --> 00:05:45.000
すばらしい

00:05:45.000 --> 00:05:50.000
さて、項目2でHE_AACを提供しなかったとします。

00:05:50.000 --> 00:06:02.000
その場合、AVQueuePlayerはオーディオの連続性とギャップレストランジションを維持することはできませんが、再生条件に最も適した初期バリアントを自由に選択できます。

00:06:02.000 --> 00:06:07.000
ギャップレスな移行をサポートするためにコンテンツを作成したとしましょう。

00:06:07.000 --> 00:06:11.000
その場合は、AVQueuePlayerの使い方を思い出す必要があります。

00:06:11.000 --> 00:06:14.000
ここに短いコードスニペットがあります。

00:06:14.000 --> 00:06:19.000
2つのAVPlayerItemを作成し、再生前に順番にキューに入れます。

00:06:19.000 --> 00:06:23.000
私たちのアイテムは2つの異なるURLから供給されていることに注意してください。

00:06:23.000 --> 00:06:32.000
AVQueuePlayerを作成した後、「insert after」メソッドを使用して、キュープレーヤーに意図したシーケンスを通知できます。

00:06:32.000 --> 00:06:43.000
残っているのは「プレイ」というメッセージだけです。

00:06:43.000 --> 00:06:49.000
あなたと共有したい高度なテクニックは、単一の資産の使用を許可します。

00:06:49.000 --> 00:06:54.000
このアセットから、複数のAVPlayerItemsをインスタンス化できます。

00:06:54.000 --> 00:07:03.000
AVQueuePlayerでキューに入れる前に、それぞれの異なるAVPlayerItemで異なるインポイントとアウトポイントを定義できます。

00:07:03.000 --> 00:07:10.000
AVPlayerItem seekToTimeメソッドを使用して、インポイントを定義できます。

00:07:10.000 --> 00:07:14.000
次に、forwardPlaybackEndTimeでアウトポイントを定義できます。

00:07:14.000 --> 00:07:17.000
これがこのコンセプトの実例です。

00:07:17.000 --> 00:07:24.000
項目1、2、および3はすべて同じAVAssetから供給され、同じ3つのシーンで構成されています。

00:07:24.000 --> 00:07:36.000
それらは、seekToTimeを使用して異なるポイントでそれぞれをキューし、forwardPlaybackEndTimeを使用して異なるアウトポイントを定義したという点で異なります。

00:07:36.000 --> 00:07:46.000
今、私はこれら3つの同一のアイテムをAVQueuePlayerにキューに入れることができ、私が達成するのはカスタマイズされた動的シーケンスです。

00:07:46.000 --> 00:07:50.000
では、デモでギャップレスなトランジションを見て聞いてみましょう。

00:07:50.000 --> 00:07:56.000
このデモでは、3つのワークアウトビデオストリームをインタラクティブに縫い合わせます。

00:07:56.000 --> 00:08:04.000
AVKitコントロールをそれぞれに表示したままにして、これらが個別のストリームリソースであることを実際に確認できるようにしました。

00:08:04.000 --> 00:08:09.000
まず、3つすべてのシームレスな再生を表示してから、シーケンスをインタラクティブに編集します。

00:08:09.000 --> 00:08:18.000
ソフトウェアでは、同じものを提供すること、またはおそらく並べ替えを実行することをプログラムで想像することができます。

00:08:18.000 --> 00:08:22.000
そうだね！ウォームアップをしましょう。

00:08:22.000 --> 00:08:25.000
♪エネルギッシュなエレクトロニックミュージック♪

00:08:25.000 --> 00:08:30.000
♪

00:08:30.000 --> 00:08:32.000
準備ができているかどうか?丘を走りましょう。

00:08:32.000 --> 00:08:35.000
♪賑やかなヒップホップ音楽♪

00:08:35.000 --> 00:08:40.000
♪

00:08:40.000 --> 00:08:43.000
それでおそれ！私たちは終わりました。クールダウンの時間です。

00:08:43.000 --> 00:08:47.000
♪落ち着いたエレクトロニックミュージック♪

00:08:47.000 --> 00:08:51.000
♪

00:08:51.000 --> 00:08:54.000
それを見ているだけで汗をかくことができます。

00:08:54.000 --> 00:08:58.000
「それでおやおや、私たちは終わった」にまっすぐスキップして、丘のランをスキップしたくなります。

00:08:58.000 --> 00:09:01.000
ここサンフランシスコにはそれがたくさんあります。 

00:09:01.000 --> 00:09:05.000
これを行うには、エクササイズセットの順序を編集しましょう。

00:09:05.000 --> 00:09:08.000
丘の運動を一番上に移動します。

00:09:08.000 --> 00:09:15.000
これにより、ウォームアップを行い、すぐに隙間なくクールダウンに進むことができます。

00:09:15.000 --> 00:09:21.000
次に、最初のトレーニングとして、2番目の位置にあるウォームアップを選択することから始めます。

00:09:21.000 --> 00:09:25.000
そうだね！ウォームアップをしましょう。

00:09:25.000 --> 00:09:28.000
♪エネルギッシュなエレクトロニックミュージック♪

00:09:28.000 --> 00:09:33.000
♪

00:09:33.000 --> 00:09:35.000
それでおそれ！私たちは終わりました。クールダウンの時間です。

00:09:35.000 --> 00:09:39.000
♪落ち着いたエレクトロニックミュージック♪

00:09:39.000 --> 00:09:45.000
♪

00:09:45.000 --> 00:09:49.000
このセッションで学んだ重要なポイントをまとめましょう。

00:09:49.000 --> 00:09:58.000
HLSを使用してギャップレストランジションを実現するには、オーディオフォーマットが一致する各アイテムにバリアントを提供する必要があることを学びました。

00:09:58.000 --> 00:10:07.000
次に、アイテムを順番にキューに入れるだけで、ギャップレストランジションを実行するようにAVQueuePlayerに指示するのがいかに簡単かを見ました。

00:10:07.000 --> 00:10:13.000
バリアント発見のための新しいAPIを紹介する関連セッションが1つあります。

00:10:13.000 --> 00:10:19.000
ソフトウェアやサービスが一致するオーディオフォーマットの項目を保証できない場合、そのセッションが役に立つかもしれません。

00:10:19.000 --> 00:10:25.000
このセッションを楽しんで、このWWDC 2021の残りの部分を楽しんでいただければ幸いです。

00:10:25.000 --> 00:10:27.000
ありがとうございます。

00:10:27.000 --> 23:59:59.000
♪

