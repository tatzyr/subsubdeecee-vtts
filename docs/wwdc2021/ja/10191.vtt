WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:13.000
マックス・ステパノフ:こんにちは!私の名前はマックスで、tvOSチームのソフトウェアエンジニアです。

00:00:13.000 --> 00:00:25.000
今日は、Apple TVのメディア再生UIのまったく新しい外観と、開発者として利用可能なこの新しい機能を最大限に活用するために何ができるかを皆さんと共有できることを嬉しく思います。

00:00:25.000 --> 00:00:42.000
このセッションでは、tvOS 15の標準再生UIの機能強化の概要を説明します。新しいAPIを紹介します。最後に、アプリケーションで優れた再生体験を作成するのに役立つベストプラクティスについて説明します。

00:00:42.000 --> 00:00:44.000
始めましょう。

00:00:44.000 --> 00:00:50.000
AVPlayerViewControllerは、Apple TVのユーザーに標準的なメディア再生を提供します。

00:00:50.000 --> 00:01:01.000
新しいクリックホイールリモコン、スキップ、スキャン、スクラブ機能、Siriコマンド、インタースティシャルサポートなど、さまざまなリモコンをサポートしています。

00:01:01.000 --> 00:01:12.000
ユーザーがApple TVのファーストパーティアプリケーションと同様の体験をできるように、アプリケーションでAVPlayerViewControllerの使用を開始することをお勧めします。

00:01:12.000 --> 00:01:29.000
AVPlayerViewControllerをまだ使用していない場合、またはリフレッシャーの恩恵を受ける場合は、WWDC 2019の「AVKitで直感的なメディア再生を提供する」を見ることをお勧めします。これは、AVPlayerViewControllerをアプリケーションに組み込む方法について詳しく説明します。

00:01:29.000 --> 00:01:34.000
さて、今年導入する機能強化の概要を説明しましょう。

00:01:34.000 --> 00:01:44.000
tvOS 15では、視聴者がより一貫性のあるインタラクティブな体験を通じてその瞬間にとどまるのを助けるために、標準の再生UIを完全に再設計しました。

00:01:44.000 --> 00:01:55.000
トランスポートバーに関連するコントロールとオプションを追加することで、字幕をオンにしたり、オーディオ言語を変更したりするなど、一般的な再生タスクの見つけやすさが向上しました。

00:01:55.000 --> 00:02:01.000
トランスポートバーコントロールは、本質的に普遍的であるだけでなく、アプリケーション固有のものでもあります。

00:02:01.000 --> 00:02:11.000
また、新しいコンテンツタブを使用すると、ユーザーは情報やチャプターなどのサポート情報に簡単にアクセスでき、インラインナビゲーションにアクセスして検出可能にすることができます。

00:02:11.000 --> 00:02:14.000
コンテンツタブは、関連するコンテンツを表示するためにも使用できます。

00:02:14.000 --> 00:02:24.000
この例では、昨年のWWDCのセッションを見ていて、プレーヤーを離れることなくセッションのコンテンツの推奨事項を閲覧することができます。

00:02:24.000 --> 00:02:29.000
最後に、再生中にユーザーが利用できるコンテキストアクションを追加しました。

00:02:29.000 --> 00:02:34.000
これらのアクションには、Skip IntroやRecapなどの完璧な機能があります。

00:02:34.000 --> 00:02:43.000
Apple TVの新しい再生UIを利用するには、アプリケーションをtvOS 15 SDKにリンクする必要があります。

00:02:43.000 --> 00:02:50.000
私たちは、App Storeでユーザーが利用できる既存のアプリケーションとの互換性を維持するために、このアプローチを取りました。

00:02:50.000 --> 00:02:55.000
これらのアプリケーションは、デフォルトのtvOS 14の再生UIと機能を取得します。

00:02:55.000 --> 00:03:03.000
今では、メディアアプリケーションでこの新機能の一部を採用する方法を学ぶことに興奮しているでしょう。

00:03:03.000 --> 00:03:08.000
では、tvOS 15の新しいAPIに飛び込みましょう...

00:03:08.000 --> 00:03:09.000
...タイトルビューから始めます。

00:03:09.000 --> 00:03:16.000
トランスポートバーのすぐ上に表示される新しいタイトルビューは、ユーザーが見ているものを即座に知るのに役立ちます。

00:03:16.000 --> 00:03:29.000
タイトルビューを表示するには、現在のAVPlayerItemのメタデータからcommonIdentifierTitleとiTunesMetadataTrackSubtitleの値を使用します。

00:03:29.000 --> 00:03:38.000
メディアアセットに埋め込まれたメタデータが含まれていない場合、またはそれを拡張する必要がある場合は、AVPlayerItemのexternalMetadataプロパティを使用してください。

00:03:38.000 --> 00:03:46.000
ライブストリーミングコンテンツを再生する場合、タイトルビューには、視聴者にコンテンツの状態を示すバッジも表示されます。

00:03:46.000 --> 00:03:57.000
最後に、アプリケーションがタイトルビューを表示したくない場合は、新しいプロパティtransportBarIncludesTitleViewの値をfalseに設定して、それを抑制します。

00:03:57.000 --> 00:04:01.000
次に、トランスポートバーのコントロールを見てみましょう。

00:04:01.000 --> 00:04:07.000
トランスポートバーコントロールは、トランスポートバースクラバーの真上にあるUI要素のコレクションです。

00:04:07.000 --> 00:04:15.000
これらのコントロールは、ユーザーがアプリケーションが提供するすべての再生オプションを迅速かつ直感的に見つけるのに役立ちます。

00:04:15.000 --> 00:04:23.000
字幕、オーディオ言語、ピクチャ・イン・ピクチャーなどの一部の標準コントロールは、システムによって提供されます。

00:04:23.000 --> 00:04:33.000
開発者として、AVPlayerViewControllerの新しいプロパティであるtransportBarCustomMenuItemsを使用して、トランスポートバーコントロールのリストを拡張できます。

00:04:33.000 --> 00:04:38.000
UIActionとUIMenuクラスのインスタンスをサポートしています。

00:04:38.000 --> 00:04:42.000
トランスポートバーコントロールの使用例を見てみましょう。

00:04:42.000 --> 00:04:49.000
ここでは、UIActionを使用して、ユーザーが現在のメディアアイテムをお気に入りに追加できるようにしています。

00:04:49.000 --> 00:04:57.000
また、UIMenuクラスを使用して、アクションのより高度な配置を作成し、メニューに表示することもできます。

00:04:57.000 --> 00:05:07.000
AVPlayerViewControllerによって提示されたUIMenusは、displayInlineオプションを使用して、最大1レベルのネストをサポートします。

00:05:07.000 --> 00:05:19.000
UIMenuとUIActionクラスの使用の詳細については、WWDC 2019の「iOS 13のUIの近代化」を見ることをお勧めします。

00:05:19.000 --> 00:05:22.000
では、コンテンツタブについて話しましょう。

00:05:22.000 --> 00:05:30.000
コンテンツタブを使用すると、アプリケーションはより多くのコンテンツに関する補完的な情報や推奨事項を表示できます。

00:05:30.000 --> 00:05:42.000
AVPlayerViewControllerは、メディアアセットに埋め込まれたメタデータが含まれている場合、またはAVPlayerItemで外部メタデータを補完する場合、情報タブを表示します。

00:05:42.000 --> 00:05:51.000
また、navigationMarkerGroupsにAVPlayerItemを指定すると、AVPlayerViewControllerにチャプタータブが表示されます。

00:05:51.000 --> 00:06:00.000
アプリケーションは、AVPlayerViewControllerの新しいプロパティであるcustomInfoViewControllersを使用して、追加のコンテンツタブを表示できます。

00:06:00.000 --> 00:06:10.000
また、tvOS 15では、複数のビューコントローラを可能にする新しいプロパティを優先して、customInfoViewControllerプロパティを廃止しています。

00:06:10.000 --> 00:06:22.000
コンテンツタブのサイズを適切に設定するには、preferredContentSizeプロパティを使用して高さを指定するか、適切な自動レイアウト制約を定義してください。

00:06:22.000 --> 00:06:30.000
コンテンツタブを表示するために必要な高さを計算する場合、システムはすべてのビューコントローラーを最も高いコンテンツタブの高さにサイズ設定します。

00:06:30.000 --> 00:06:39.000
複数のコンテンツタブで作業する場合は、カスタムビューコントローラーのサイズを一貫して設定するか、実行時にレイアウトが期待されていることを確認してください。

00:06:39.000 --> 00:06:43.000
また、カスタムビューコントローラーにタイトルプロパティを設定することを忘れないでください。

00:06:43.000 --> 00:06:47.000
コンテンツタブのタイトルに使用します。

00:06:47.000 --> 00:07:02.000
見栄えの良いコンテンツタブを作成するために、今年はTVUIKitフレームワークに新しいコンテンツ構成を導入します。TVMediaItemContent ConfigurationとTVMonogramContent Configurationです。

00:07:02.000 --> 00:07:08.000
これらの設定をコードでどのように使用できるかの例をいくつか見てみましょう。

00:07:08.000 --> 00:07:18.000
たとえば、16:9のアスペクト比でメディアアイテムのリストを表示するには、TVMediaItem ContentConfigurationのワイドセルを使用できます。

00:07:18.000 --> 00:07:22.000
画像、タイトル、セカンダリテキストなどのプロパティを設定します。

00:07:22.000 --> 00:07:27.000
バッジと再生の進行状況を表示するように設定することもできます。

00:07:27.000 --> 00:07:31.000
完了したら、contentConfigurationをコレクションビューセルに割り当てます。

00:07:31.000 --> 00:07:33.000
それはとても簡単です。

00:07:33.000 --> 00:07:42.000
現在のメディアコンテンツに関連付けられている人や文字を表示したい場合は、TVMonogramContentConfigurationを使用してください。

00:07:42.000 --> 00:07:52.000
コンテンツ構成の使用の詳細については、WWDC 2020の「モダンセル構成」を見ることをお勧めします。

00:07:52.000 --> 00:07:55.000
最後に、文脈上のアクション。

00:07:55.000 --> 00:08:00.000
コンテキストアクションにより、アプリケーションは再生中に関連するコントロールを表示できます。

00:08:00.000 --> 00:08:10.000
コンテキストアクションを表示するには、AVPlayerViewControllerの新しいcontextualActionsプロパティを使用し、1つ以上のUIActionsを提供します。

00:08:10.000 --> 00:08:17.000
通常、アプリケーションは、コンテンツの関連セクション中にコンテキストアクションを表示したいと思うでしょう。

00:08:17.000 --> 00:08:25.000
これを実現するには、周期的または境界時間オブザーバーを追加して、AVPlayerのタイミングを観察します。

00:08:25.000 --> 00:08:30.000
コンテキストアクションを非表示にするには、プロパティを空の配列にリセットします。

00:08:30.000 --> 00:08:35.000
アプリケーション内のスキップ機能のソリューションをすでに実装している人もいるかもしれません。

00:08:35.000 --> 00:08:48.000
この新しいAPIを使用すると、コンテキストコントロールとのユーザーインタラクションはフォーカス動作と一致し、使用すると、アプリケーションの「再生中」ステータスも維持されます。

00:08:48.000 --> 00:08:54.000
では、tvOS上のAVPlayerViewControllerのベストプラクティスについて話しましょう。

00:08:54.000 --> 00:09:00.000
まず、そして最も重要なのは、プレイヤーに余分なジェスチャーを追加しないことです。

00:09:00.000 --> 00:09:06.000
これは標準の再生UIに干渉し、将来的にはうまくいかないかもしれません。

00:09:06.000 --> 00:09:10.000
第二に、不足しているメタデータを補足します。

00:09:10.000 --> 00:09:15.000
時には、すべてのメタデータがアセットに組み込まれていないメディアがあります。

00:09:15.000 --> 00:09:26.000
そのような場合は、AVPlayerItemのexternalMetadataプロパティを使用して、タイトル、アートワーク、説明など、すべての重要なメタデータを提供します。

00:09:26.000 --> 00:09:34.000
そして、あなたがそうするとき、私たちはタイトルビューと情報タブにすべての関連情報を入力するために残りを行います。

00:09:34.000 --> 00:09:39.000
最後に、tvOSアプリケーションでピクチャ・イン・ピクチャを有効にすることを検討してください。

00:09:39.000 --> 00:09:50.000
ユーザーにマルチタスクの柔軟性を提供し、同時にビデオ再生を可能にし、フルスクリーンコンテンツとピクチャ・イン・ピクチャを切り替えることができます。

00:09:50.000 --> 00:10:00.000
ピクチャー・イン・ピクチャーを始めるには、WWDC 2020の「Master Picture in Picture on tvOS」を見ることをお勧めします。

00:10:00.000 --> 00:10:01.000
だから、要約します。

00:10:01.000 --> 00:10:09.000
tvOS 15は、標準再生UIを使用して優れたメディア体験を構築することをこれまで以上に簡単にします。

00:10:09.000 --> 00:10:15.000
強力な新しいAPIにより、AVPlayerViewControllerはこれまで以上に設定可能でカスタマイズ可能になります。

00:10:15.000 --> 00:10:19.000
あなたのアプリケーションにそれを採用するのにこれほど良い時期はありません。

00:10:19.000 --> 00:10:21.000
そして、始めるのは簡単です。

00:10:21.000 --> 00:10:26.000
詳細については、開発者アプリのこのセッションの追加リソースを参照してください。

00:10:26.000 --> 00:10:28.000
会議を見て楽しんでくれてありがとう。

00:10:28.000 --> 23:59:59.000
♪

