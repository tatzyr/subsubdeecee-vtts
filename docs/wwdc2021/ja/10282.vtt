WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:14.000
エリック・ホーンバーガー:リサーチ・アンド・ケア・アプリのコードの第3回と最終回へようこそ!

00:00:14.000 --> 00:00:19.000
フォローしたい場合は、セッションリソースでこのアプリのソースコードを見つけることができます。 

00:00:19.000 --> 00:00:23.000
ログインして始めましょう。

00:00:23.000 --> 00:00:26.000
前回のセッションでは、アプリにいくつかのタスクを追加しました。

00:00:26.000 --> 00:00:30.000
それ以来、私はジェイミーからあらゆる種類の通知を受け取っています。

00:00:30.000 --> 00:00:32.000
何かが起きているような気がする。"

00:00:32.000 --> 00:00:34.000
見てみましょう。

00:00:34.000 --> 00:00:38.000
ジェイミーは10分で診療所に到着します。

00:00:38.000 --> 00:00:41.000
ジェイミーはモチベーションプレイリストを共有した。

00:00:41.000 --> 00:00:49.000
うわー！ご覧のとおり、熱狂的なジェイミーは今、臨床医に会いに行く途中です。

00:00:49.000 --> 00:00:56.000
ジェイミーは私たちにいくつかの変更を加え、2つの新機能を追加するように頼んだようです。

00:00:56.000 --> 00:01:00.000
最初のビットは、セッション2で実施した調査を強化することです。

00:01:00.000 --> 00:01:04.000
ジェイミーは、テスターからそれらについていくつかのフィードバックを得たと言います。

00:01:04.000 --> 00:01:12.000
彼は、彼が得たフィードバックは、テスターが事実の後に彼らが与えた答えを伝えることができるようにしたいということでした。

00:01:12.000 --> 00:01:24.000
現在、カードは調査が完了したことを示していますが、数日前にスクロールすると、その日にどのような回答をしたかを知る方法はありません。

00:01:24.000 --> 00:01:28.000
彼らはまた、編集を現在の日付に制限するたいと考えています。

00:01:28.000 --> 00:01:34.000
過去にアンケートの回答を削除したり、モーションテストの範囲をやり直したりすることはできません。

00:01:34.000 --> 00:01:43.000
同様に、未来にスクロールして、まだ来ていない日にアンケートに事前回答できるのは本当に意味がありません。

00:01:43.000 --> 00:01:48.000
だから、私たちはそのフィードバックに対処し、調査を少し強化することから始めます。

00:01:48.000 --> 00:01:51.000
また、まだ少し孤独に見えるこのInsightsタブもあります。

00:01:51.000 --> 00:01:54.000
ジェイミーは、そこに一対のチャートを表示するように頼んだ。

00:01:54.000 --> 00:02:02.000
1つは睡眠と痛みの関係を捉え、もう1つは時間の経過とともに可動域の改善を示します。

00:02:02.000 --> 00:02:12.000
最後に、ジェイミーは、医師が参加者が破れた半月板が何であるかを理解するのを助けるためにいくつかの教育コンテンツを含めるように頼んだと私に言い、ResearchKitはそこで私たちを助けることができるでしょう。

00:02:12.000 --> 00:02:15.000
調査を強化することから始めます。

00:02:15.000 --> 00:02:18.000
患者が与えた答えを示すことに取り組もう。

00:02:18.000 --> 00:02:27.000
先に進み、与えられた答えをテキストとしてカードに表示します。

00:02:27.000 --> 00:02:34.000
現在、CareKitでは、タスクカードの外観の微調整は、viewSynchronizerを初期化子に渡すことによって行われます。

00:02:34.000 --> 00:02:38.000
カスタムビューシンクロナイザーを作成する方法を見てみましょう。

00:02:38.000 --> 00:02:43.000
既存のOCKSurveyTaskViewSynchronizerをサブクラス化します。

00:02:43.000 --> 00:02:48.000
このクラスには、makeViewとupdateViewの2つのメソッドをオーバーライドできます。

00:02:48.000 --> 00:02:56.000
updateViewは、ストア内のデータが変更されるたびに呼び出され、ビューにカスタマイズを適用できます。

00:02:56.000 --> 00:03:03.000
私たちは常にスーパークラスの実装を呼び出すことから始め、それに加えて機能強化を適用します。

00:03:03.000 --> 00:03:07.000
結果が完了したイベントがあるかどうかを確認します。 完了しています。

00:03:07.000 --> 00:03:12.000
もしあれば、それは調査が終了したことを意味します。

00:03:12.000 --> 00:03:20.000
パート2に戻した親切な特性を参照して、痛みの答えと睡眠の答えを手に入れます。

00:03:20.000 --> 00:03:27.000
親切なプロパティを設定することで、後で役立つと述べましたが、これは私がほのめかしていたアプリケーションの1つです。

00:03:27.000 --> 00:03:35.000
答えが便利なので、文字列補間を使用して、カードの指示ラベルに答えを挿入できます。

00:03:35.000 --> 00:03:37.000
そして、それは答えを示すことに対処します。

00:03:37.000 --> 00:03:42.000
ジェイミーはまた、過去のタスクの編集を無効にするように頼みました。

00:03:42.000 --> 00:03:55.000
これを行う方法の1つは、まず自分自身を調査タスクカードのデリゲートとして設定してから、このデリゲートメソッドに記入することです。タスクのviewController shouldAllowDeleting OutcomeForEvent。

00:03:55.000 --> 00:04:05.000
私たちの仕事は、特定のイベントの結果を削除すべきかどうかをCareKitに伝えるブール値を返すことです。

00:04:05.000 --> 00:04:08.000
イベントが開催される日付を見ていきます。

00:04:08.000 --> 00:04:13.000
日付が今日より早い場合は、削除できないと言います。

00:04:13.000 --> 00:04:17.000
今日以降にオンまたはそれ以降の場合は、削除を許可します。

00:04:17.000 --> 00:04:22.000
そして、そのように、私たちは過去のデータの削除を防止しました。

00:04:22.000 --> 00:04:28.000
ジェイミーが尋ねた3番目のことは、参加者が将来の日付に調査を完了できないようにすることです。

00:04:28.000 --> 00:04:44.000
これを行うには、タスクビューコントローラーを作成する直前に同じファイルで少し高く登り、いくつかのカレンダーユーティリティを使用して、コンテンツを入力する日が将来であるかどうかを確認します。

00:04:44.000 --> 00:04:54.000
将来の日付の場合は、タスクカードとのやり取りを無効にし、無効になっていることを視覚的に示すために不透明度を下げます。

00:04:54.000 --> 00:04:56.000
わかった、いいね！

00:04:56.000 --> 00:05:00.000
今、私たちは将来のタスクも完了できないはずです。

00:05:00.000 --> 00:05:05.000
私たちがどこに立っているか見てみましょう。

00:05:05.000 --> 00:05:12.000
最初に気付くのは、アンケートに与えられた回答がアンケートタスクカードに表示されるようになったことです。

00:05:12.000 --> 00:05:22.000
現在の日付でアンケートを削除またはやり直すオプションはまだありますが、過去にスワイプして戻ると、やり直すことができなくなります。

00:05:22.000 --> 00:05:32.000
そして、将来に前進すれば、今後の予定をプレビューできますが、まだ調査を完了することはできません。

00:05:32.000 --> 00:05:34.000
私たちのアプリは今、本当に一緒に来ています!

00:05:34.000 --> 00:05:42.000
私たちがする必要がある最後の2つのことは、チャートと教育コンテンツであり、これらは両方ともインサイトタブにあります。

00:05:42.000 --> 00:05:48.000
痛みの評価と睡眠時間を並べて示す2シリーズの棒グラフから始めます。

00:05:48.000 --> 00:05:53.000
2つのOCKDataSeriesConfigurationオブジェクトを作成する必要があります。

00:05:53.000 --> 00:05:56.000
1つ目は痛みのシリーズです。

00:05:56.000 --> 00:06:01.000
IDは、どのタスクのデータをチャートにプロットするかをCareKitに伝えます。

00:06:01.000 --> 00:06:10.000
また、凡例のタイトル、色、マーカーサイズ（バーの幅を決定する）、およびイベントアグリゲーターも渡します。

00:06:10.000 --> 00:06:22.000
イベントアグリゲーターは、特定の日に発生するすべてのイベントを見て、その日にどのY値を使用すべきかを判断する責任があります。

00:06:22.000 --> 00:06:33.000
チェックインタスクでは、1日に1つのイベントしかないことを知っているので、最初のイベントを取り、痛みの質問に対する答えを得ることができます。

00:06:33.000 --> 00:06:35.000
それがペインシリーズの構成です。

00:06:35.000 --> 00:06:38.000
睡眠にも1つ必要です。

00:06:38.000 --> 00:06:41.000
睡眠シリーズはほぼ同じです。

00:06:41.000 --> 00:06:44.000
まったく同じチェックインタスクからデータをプロットしています。

00:06:44.000 --> 00:06:51.000
違いは、痛みの答えではなく、睡眠の答えを表示することです。

00:06:51.000 --> 00:06:56.000
これらの両方を手にして、チャートビューコントローラーを構築できます。

00:06:56.000 --> 00:07:01.000
棒グラフを選択し、日付を今日に設定します。

00:07:01.000 --> 00:07:11.000
もちろん、2つのシリーズと、店舗の内容が変更されるにつれてチャートを最新の状態に保つために使用される店長への参照も渡す必要があります。

00:07:11.000 --> 00:07:12.000
素晴らしい、それが私たちの最初のチャートです。

00:07:12.000 --> 00:07:14.000
もう1つ作ろう！

00:07:14.000 --> 00:07:18.000
今回は、可動域の散布図になります。

00:07:18.000 --> 00:07:26.000
以前と同じようにデータ系列の設定を作成する必要がありますが、今回は1つだけ必要です。

00:07:26.000 --> 00:07:36.000
今回の唯一の違いは、チェックインタスクではなくモーションタスクの範囲からデータをプロットし、Y軸の範囲の答えを使用していることです。

00:07:36.000 --> 00:07:39.000
次に、ビューコントローラーを作成します。

00:07:39.000 --> 00:07:45.000
今回は散布図になり、データシリーズは1つしかありません。

00:07:45.000 --> 00:07:50.000
そして、ちょうどそのように、私たちは両方のチャートを設定しました。

00:07:50.000 --> 00:07:55.000
彼らがどのように見えるか見てみましょう。

00:07:55.000 --> 00:08:01.000
インサイトタブを飛び越えると、両方のチャートがレンダリングされていることがわかります。

00:08:01.000 --> 00:08:04.000
彼らは本当に素敵に見えます!

00:08:04.000 --> 00:08:17.000
戻って、いくつかの結果を追加または削除すると、火曜日の両方の結果を削除し、インサイトタブに戻ると、チャートが自動的に更新されるはずです。

00:08:17.000 --> 00:08:18.000
そして、彼らは持っています!

00:08:18.000 --> 00:08:21.000
火曜日のデータはもう表示されません。

00:08:21.000 --> 00:08:23.000
いいね！だから、チャートは良さそうです。

00:08:23.000 --> 00:08:34.000
ジェイミーはまた、臨床パートナーから受け取った説明文とともに、膝と半月板の3Dモデルを表示するオプションを参加者に与えるよう求めました。

00:08:34.000 --> 00:08:36.000
ResearchKitはそれで私たちを助けることができます。

00:08:36.000 --> 00:08:44.000
今回は、ResearchKit調査をCareKitのスケジュールに結び付けていないことに注意するために、少し立ち止まりたいと思います。

00:08:44.000 --> 00:08:52.000
参加者にこのコンテンツを見てもらいたい特定の時間はありませんので、スケジュールの概念は必要ありません。

00:08:52.000 --> 00:09:03.000
同様に、CareKitのストアに固執する結果がないため、CareKitタスクを作成したり、CareKitの調査タスクビューコントローラーを使用したりする必要はありません。

00:09:03.000 --> 00:09:12.000
そうは言っても、チームメイトのGaviが昨年WWDCで紹介したFeaturedContentビューを使用できます。

00:09:12.000 --> 00:09:18.000
参加者が注目のコンテンツカードをタップしたときに伝えられるように、自分自身を代理人として設定する必要があります。

00:09:18.000 --> 00:09:29.000
そうしたら、neeModelTaskを作成し、ORKTaskViewControllerでラップし、参加者に提示します。

00:09:29.000 --> 00:09:42.000
モデルの表示が終わったら、ここでコールバックを取得し、それをResearchKitビューコントローラーを却下し、参加者をInsightsタブに戻す機会として使用できます。

00:09:42.000 --> 00:09:44.000
わかった、とてもいいね！

00:09:44.000 --> 00:09:48.000
しかし、この膝のタスクの定義が欠けています。

00:09:48.000 --> 00:09:53.000
Surveys.swiftに記入しに行きましょう。

00:09:53.000 --> 00:09:59.000
たった2つのステップで、最初のステップは指示ステップになります。

00:09:59.000 --> 00:10:07.000
今日すでに数回使用したので、これらが少なくとも少しは身近に感じ始めていることを願っています。

00:10:07.000 --> 00:10:11.000
2番目のステップは3Dモデルのステップです。

00:10:11.000 --> 00:10:22.000
3Dモデルステップを作成するたびに、modelManagerも渡す必要があるので、そのすぐ上に、渡すためにUSDZモデルマネージャーを作成します。

00:10:22.000 --> 00:10:29.000
すべてが機能していることを確認するために、おもちゃのロボットを表示することから始めます。

00:10:29.000 --> 00:10:36.000
最後のビットは、両方のステップで順序付けられたタスクを組み立て、それを返すことです。

00:10:36.000 --> 00:10:50.000
さて、アプリを実行すると、Insightsタブに注目のコンテンツカードが表示され、それをタップすると指示手順が表示され、その後におもちゃのロボットモデルが表示されます。

00:10:50.000 --> 00:10:55.000
回転したり、ズームインしたりすることで、それと対話することができます...

00:10:55.000 --> 00:10:57.000
かなりきちんとしている!

00:10:57.000 --> 00:11:07.000
3Dモデルマネージャーの仕組みや、独自のバージョンを実装する方法について詳しく知りたい場合は、昨年のParieceのWWDCセッションをチェックしてください。

00:11:07.000 --> 00:11:12.000
アプリを完成させるために、おもちゃのロボットをBioDigitalのモデルマネージャーに交換します。

00:11:12.000 --> 00:11:17.000
詳細を知ることに興味がある場合に備えて、プロジェクトのRead Meにこれに関するいくつかのメモを含めます。

00:11:17.000 --> 00:11:25.000
このバージョンのモデルマネージャーを使用すると、臨床医からの教育テキストを提供できます。

00:11:25.000 --> 00:11:30.000
ここでは、私たちの臨床パートナーが提供するいくつかのコンテンツを見ることができます。

00:11:30.000 --> 00:11:39.000
また、参加者の参照のために半月板を強調して、怪我や回復への道をより深く理解できるようにすることもできます。

00:11:39.000 --> 00:11:42.000
私たちのアプリは今、本当に一緒に来ています!

00:11:42.000 --> 00:11:45.000
実際、それだけです、それがすべてです!

00:11:45.000 --> 00:11:48.000
私たちはすべてのボックスをチェックしました!

00:11:48.000 --> 00:11:51.000
そして、ちょうど間一髪で!

00:11:51.000 --> 00:11:57.000
ジェイミーから別の電話がかかってきているようです。

00:11:57.000 --> 00:11:59.000
やあジェイミー、いいタイミングだ！

00:11:59.000 --> 00:12:02.000
私たちは、あなたが私たちに頼んだことをすべてまとめました。

00:12:02.000 --> 00:12:05.000
ジェイミー:ああ、うわー、うん。私は今それを見ています、エリック。。

00:12:05.000 --> 00:12:06.000
見てみましょう...

00:12:06.000 --> 00:12:09.000
ええ、これは本当にうまくいっています。

00:12:09.000 --> 00:12:13.000
チームの残りの部分は興奮するでしょう、そしてこれは非常に多くの研究の機会を開くでしょう!

00:12:13.000 --> 00:12:15.000
あなたに簡単な質問です。

00:12:15.000 --> 00:12:20.000
次の会議に向かう前に、何か質問があれば、チームに何を言うべきですか？

00:12:20.000 --> 00:12:21.000
エリック：ねえ、それはいい質問だね！

00:12:21.000 --> 00:12:26.000
したがって、ResearchKitとCareKitはどちらもオープンソースであり、私たちのチームはGitHubで活動しています。

00:12:26.000 --> 00:12:35.000
フレームワークについて質問がある場合、新しい機能をリクエストしたい場合、または貢献したい場合は、GitHubリポジトリで新しい問題を開くように伝えてください。

00:12:35.000 --> 00:12:36.000
ジェイミー：はい、それは素晴らしいです。

00:12:36.000 --> 00:12:38.000
その情報をチームに渡します。

00:12:38.000 --> 00:12:42.000
エリック：ところでジェイミー、あなたはあなたの研究についてもっと私たちに話すことを検討すべきです！

00:12:42.000 --> 00:12:48.000
researchandcare.orgに行くと、あなたの研究が誰に役立つかについての詳細をAppleに伝えるために使用できるリンクがあります。

00:12:48.000 --> 00:12:52.000
私たちは、私たちのフレームワークがコミュニティによってどのように使用されているかについて聞くのが大好きです!

00:12:52.000 --> 00:12:59.000
また、新しい研究研究を提案する機関にApple Watchの助成金を提供する研究者サポートプログラムもあります。

00:12:59.000 --> 00:13:03.000
応募したい場合は、当社のウェブサイトでも詳細を見つけることができます。

00:13:03.000 --> 00:13:06.000
ジェイミー：本当に？それは素晴らしい！

00:13:06.000 --> 00:13:09.000
彼らは間違いなくそれを利用したいと思うと思います。

00:13:09.000 --> 00:13:11.000
しかし、エリック、大丈夫、私は別の会議に立ち寄らなければなりません。

00:13:11.000 --> 00:13:15.000
後で実行したい2番目のアプリのためのたくさんの大きなアイデアがあります。

00:13:15.000 --> 00:13:19.000
Apple Watch用のアプリにはどれくらいの時間がかかると思いますか？

00:13:19.000 --> 00:13:25.000
エリック：大丈夫ですが、追いついて後で話し合いましょう。数日後に

00:13:25.000 --> 00:13:27.000
しばらく忙しくするのに十分な量があると思います。

00:13:27.000 --> 00:13:31.000
ジェイミー：そうそう、今年はWWDCのためにコードアロングをやっていると聞きました

00:13:31.000 --> 00:13:32.000
がんばってね!

00:13:32.000 --> 00:13:34.000
後で話そう! 

00:13:34.000 --> 00:13:40.000
エリック：より多くの情報をご希望の場合は、researchandcare.orgで見つけることができます。

00:13:40.000 --> 00:13:48.000
ソースコードはGitHubで入手可能で、今年はあなたが今見たものにつながる他の2つのセッションがあります。

00:13:48.000 --> 00:13:50.000
さて、それが私たちがあなたたちのために持っているすべてです。

00:13:50.000 --> 00:13:52.000
私たちのコードアロングにご参加いただきありがとうございます!

00:13:52.000 --> 00:13:58.000
兄弟フレームワークであるResearchKitとCareKitを並行して使用してアプリをすばやく反復する方法を見ました。

00:13:58.000 --> 00:14:02.000
また、いくつかの新機能と最新のベストプラクティスについても取り上げました。

00:14:02.000 --> 00:14:06.000
私はあなたが途中でいくつかのヒントやコツを拾うことができたことを願っています。

00:14:06.000 --> 00:14:11.000
チームの私たち全員から、あなたが素晴らしいWWDCを持っていることを願っています!

00:14:11.000 --> 23:59:59.000
♪

