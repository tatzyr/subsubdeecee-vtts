WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:17.000
プレストン・ルイス:こんにちは、私の名前はプレストンです。今日は、あなたのアプリのチャートにアクセシビリティをもたらす方法について話します。

00:00:17.000 --> 00:00:19.000
今日取り上げる内容を確認しましょう。

00:00:19.000 --> 00:00:24.000
まず、チャートにアクセスできるようにすることの利点のいくつかについて話します。

00:00:24.000 --> 00:00:31.000
次に、チャートの視覚的側面について包括的な決定を下すためのいくつかの原則について確認します。

00:00:31.000 --> 00:00:37.000
次に、VoiceOverでチャートを知覚し、ナビゲート可能にする方法について説明します。

00:00:37.000 --> 00:00:44.000
そして最後に、「オーディオグラフ」と呼ばれるエキサイティングな新機能と、アプリでそれらをサポートする方法について説明します。

00:00:44.000 --> 00:00:46.000
では、始めましょう。

00:00:46.000 --> 00:00:49.000
現代の世界では、データは非常に重要です。

00:00:49.000 --> 00:00:58.000
私たちは毎日データを使用して、財政、健康、目標、その他多くのことについて決定を下しています。

00:00:58.000 --> 00:01:02.000
しかし、データを利用するためには、それを理解できなければなりません。

00:01:02.000 --> 00:01:09.000
チャートは、詳細を深く掘り下げることなく、データが私たちに何を伝えているのかをすばやく理解できるため、便利です。

00:01:09.000 --> 00:01:14.000
しかし、チャートは、視覚障害者や弱視の人にとっては本質的にアクセスできません。

00:01:14.000 --> 00:01:17.000
視覚的なチャートが見えなければ、視覚的なチャートに価値はありません。

00:01:17.000 --> 00:01:22.000
アクセシビリティチームは、視覚障害者や弱視の人々がデータにアクセスしやすくするために何年も懸命に取り組んできました。

00:01:22.000 --> 00:01:29.000
今年は、アプリでオーディオグラフをサポートすることで、失明や弱視の人にチャートのパワーをフルに届けることができます。

00:01:29.000 --> 00:01:32.000
例を見てみましょう。 例を見てみましょう。

00:01:32.000 --> 00:01:38.000
これは、1917年から1975年までの過去の出生率を示すアプリの例です。

00:01:38.000 --> 00:01:41.000
このチャートを見ると、すぐにいくつかの興味深い機能を見ることができます。

00:01:41.000 --> 00:01:50.000
出生率は1935年頃に最小限に減少し、その後すぐに1960年頃に増加し、その後再び減少したことがわかります。

00:01:50.000 --> 00:01:57.000
視覚障害者や弱視の人々に、新しいオーディオグラフVoiceOver機能を使用してデータをすばやく把握できる同じ機能を与えることができます。

00:01:57.000 --> 00:01:58.000
それがどのように機能するかをお見せしましょう。

00:01:58.000 --> 00:02:02.000
まず、VoiceOverローターのオーディオグラフメニューを見つけます。

00:02:02.000 --> 00:02:03.000
VoiceOver: オーディオグラフ。

00:02:03.000 --> 00:02:06.000
プレストン：その後、「チャートの詳細」が聞こえるまで下にスワイプします。

00:02:06.000 --> 00:02:09.000
VoiceOver: オーディオグラフを再生します。チャートの詳細。

00:02:09.000 --> 00:02:14.000
プレストン：次に、ダブルタップしてオーディオグラフエクスプローラービューを開きます。

00:02:14.000 --> 00:02:16.000
VoiceOver: オーディオグラフ。ヘディング。

00:02:16.000 --> 00:02:23.000
プレストン：次に、再生ボタンに移動してオーディオグラフを再生し、データシリーズを連続したトーンとして再生します。

00:02:23.000 --> 00:02:25.000
ボイスオーバー：20世紀の出生率。

00:02:25.000 --> 00:02:28.000
オーディオグラフを再生します。ボタン。

00:02:28.000 --> 00:02:30.000
プレストン:今それを聞いてみましょう。

00:02:30.000 --> 00:02:42.000
ボイスオーバー: 完了。

00:02:42.000 --> 00:02:43.000
プレストン:それはエキサイティングではありませんでしたか?

00:02:43.000 --> 00:02:48.000
あなたが今聞いたのは、あなたが見ているものと同じチャートで、視覚的にではなく聴覚的に表されていました。

00:02:48.000 --> 00:02:55.000
あなたが聞いたピッチは、時間の経過とともに出生率に対応し、より低いピッチはより低い値を意味し、より高いピッチはより高い値を意味します。

00:02:55.000 --> 00:02:58.000
これらのピッチは、ビジュアルチャートの線を正確に反映しています。

00:02:58.000 --> 00:03:04.000
したがって、チャートを見なくても、オーディオグラフを使用すると、わずか数秒でその重要な機能を認識できます。

00:03:04.000 --> 00:03:10.000
データの一般的な感覚がわかったので、興味のある機能についてより正確な情報を入手しましょう。

00:03:10.000 --> 00:03:16.000
次に知りたいのは、最大出生率とそれが発生した年です。

00:03:16.000 --> 00:03:25.000
これを行うには、オーディオグラフは、VoiceOverユーザーがダブルタップして長押ししてからドラッグして自分のペースでデータを聞くことができるインタラクティブモードを提供します。

00:03:25.000 --> 00:03:33.000
一時停止すると、VoiceOverはオーディオグラフ内のユーザーの現在の位置に対応するデータ値を読み取ります。

00:03:33.000 --> 00:03:38.000
このインタラクティブモードを使用して、最大出生率とそれが発生した年を見つけてみましょう。

00:03:38.000 --> 00:03:42.000
ボイスオーバー：20世紀の出生率。

00:03:42.000 --> 00:03:56.000
データポイント。1960年。1万人あたり268人の出生。

00:03:56.000 --> 00:04:07.000
プレストン：最高のピッチを聞くまでオーディオグラフをスクラブし、データ値を聞くために一時停止することで、最大出生率は1960年頃に10,000人あたり268人であったことがわかります。

00:04:07.000 --> 00:04:14.000
最大値が1960年頃に発生したことを知っているので、このピークはベビーブーム時代に対応していると推測できるかもしれません。

00:04:14.000 --> 00:04:21.000
チャートの音響表現から、これらすべてを把握できます。

00:04:21.000 --> 00:04:24.000
さて、別の種類のチャートの例を見てみましょう。 

00:04:24.000 --> 00:04:34.000
このチャートは、いくつかの異なるタイプの自動車のX軸の車両重量とY軸の燃費の関係を示す散布図です。

00:04:34.000 --> 00:04:43.000
このチャートのオーディオグラフでは、聞こえる各トーンは、ビジュアルチャート上の各ビジュアルデータポイントと同様に、1台の自動車のデータポイントを表します。

00:04:43.000 --> 00:04:51.000
各トーンのピッチは、1ガロンあたりのマイルで自動車の燃費を表すので、より高いピッチはより燃費の良い車両を意味します。

00:04:51.000 --> 00:04:54.000
少し時間を取って、私がこのオーディオグラフを再生するときにあなたが聞くことを期待することを考えてください。

00:04:54.000 --> 00:04:56.000
それがどんな風に聞こえるか聞いてみましょう。

00:04:56.000 --> 00:05:01.000
データが上昇傾向にあるか下降傾向にあるかを聞いてみてください。

00:05:01.000 --> 00:05:12.000
ボイスオーバー: 完了。

00:05:12.000 --> 00:05:14.000
プレストン：下降傾向を聞いたことを願っています。

00:05:14.000 --> 00:05:19.000
この傾向は、このデータセットでは、より大きな自動車が燃料効率が低い傾向があることを意味します。

00:05:19.000 --> 00:05:28.000
利用可能な生のデータポイントしかなく、各データポイントを個別に見なければならなかった場合、この関係を理解するのにどれくらいの時間がかかったか想像してみてください。

00:05:28.000 --> 00:05:33.000
また、よく聞いていたら、このデータセットの非常に高い音の外れ値を聞いたことがあるかもしれません。

00:05:33.000 --> 00:05:40.000
ビジュアルチャートで目立つのと同じようにオーディオグラフで目立ち、たまたまこのデータセットで唯一のハイブリッド車です。

00:05:40.000 --> 00:05:51.000
外れ値に関する詳細情報を入手したい場合は、インタラクティブモードを使用して、最も高いピッチが聞こえるまでデータをナビゲートし、出生率チャートで行ったように、一時停止してデータ値を聞くことができます。

00:05:51.000 --> 00:06:04.000
オーディオグラフに加えて、このエクスプローラービューは、このチャートのデータの自動統計分析から推測される形状、傾向、外れ値などのデータの重要な機能に関する要約情報を提供します。

00:06:04.000 --> 00:06:09.000
オーディオグラフに加えて、VoiceOverはこの要約情報を読んで、データの理解を完了することができます。

00:06:09.000 --> 00:06:13.000
さて、アクセシブルなチャートの利点を簡単にまとめましょう。

00:06:13.000 --> 00:06:20.000
チャートにアクセスできるようにすることで、データ豊富なアプリケーションは、視覚障害者や弱視の人を含む幅広いオーディエンスにリーチできます。

00:06:20.000 --> 00:06:29.000
チャートのデータを理解するのに役立つツールを提供することで、ユーザーに力を与え、個人的および職業的な生活の中でデータの信じられないほどの力を活用するのに役立ちます。

00:06:29.000 --> 00:06:34.000
そして最後に、今年新しいAPIが登場し、チャートの作成がこれまで以上に簡単になりました。

00:06:34.000 --> 00:06:43.000
アプリでオーディオグラフをサポートする方法を示すことに本当に興奮していますが、まず、チャートをより視覚的にアクセスしやすくする方法から始めて、いくつかの一般的なチャートのアクセシビリティトピックをカバーする必要があります。

00:06:43.000 --> 00:06:48.000
ビジュアルチャートを誰にとってもより理解しやすくするためにできる簡単なことがいくつかあります。

00:06:48.000 --> 00:06:51.000
このチャートを例に挙げてください。

00:06:51.000 --> 00:06:57.000
これは、熱帯および乾燥地域の月間平均降水量を示す簡単な折れ線グラフです。

00:06:57.000 --> 00:07:02.000
このチャートの視覚的なアクセシビリティを向上させるために、いくつかのアクセシビリティの原則を適用しましょう。

00:07:02.000 --> 00:07:06.000
まず、可能な限りコントラストの高い色を使用することが重要です。

00:07:06.000 --> 00:07:14.000
前景色と背景色のコントラストが高いため、特に弱視の人にとって、チャートの表示と理解が容易になります。

00:07:14.000 --> 00:07:19.000
ご覧のとおり、背景に対する線のコントラストはかなり低いです。

00:07:19.000 --> 00:07:22.000
タイトルとラベルのテキストも少し薄暗いようです。

00:07:22.000 --> 00:07:27.000
背景に対してより高いコントラストを持つように、これらの色を更新しましょう。

00:07:27.000 --> 00:07:29.000
それははるかに良いです。

00:07:29.000 --> 00:07:34.000
色間のコントラスト比をチェックして、コントラストが十分かどうかを判断できます。

00:07:34.000 --> 00:07:41.000
Xcodeに同梱されているアクセシビリティインスペクタには、使用できるカラーコントラスト計算機があります。

00:07:41.000 --> 00:07:45.000
少なくとも4.5:1のコントラスト比を目指すのは良いことです。

00:07:45.000 --> 00:07:51.000
チャートの視覚的なアクセシビリティを向上させるために次にできることは、問題のある色の組み合わせを避けることです。

00:07:51.000 --> 00:07:56.000
可能であれば、赤と緑を一緒に使用することは一般的に良い習慣です。

00:07:56.000 --> 00:08:03.000
赤と緑の色覚異常は最も一般的なタイプであり、これらの色を一緒に使用すると、一部の人にとってチャートの理解が困難になる可能性があります。

00:08:03.000 --> 00:08:10.000
だから、ここに再び折れ線グラフがあり、熱帯地域の降雨量を表す緑の線と乾燥した地域の降雨を表す赤い線があります。

00:08:10.000 --> 00:08:15.000
凡例のカラーエンコーディングを使用して、どのデータシリーズがどれであるかを知ることができます。

00:08:15.000 --> 00:08:20.000
しかし、赤緑色の色覚異常の一種であるdeuteranopiaを持っている場合、チャートはあなたにとってもっとこのように見えるかもしれません。

00:08:20.000 --> 00:08:27.000
どの線が熱帯の降雨を表し、どの線がこれらの色で乾燥した降雨を表しているかを見分けるのは難しいでしょう。

00:08:27.000 --> 00:08:31.000
赤い色を青に置き換えて、これを改善しましょう。

00:08:31.000 --> 00:08:39.000
これは大きな変化のようには思えないかもしれませんが、赤緑色の色覚異常の人にとっては、このチャートはこのように見えるかもしれません。

00:08:39.000 --> 00:08:46.000
この小さな調整により、赤緑色の色覚異常を持つ人がシリーズの違いを見つけやすくなります。

00:08:46.000 --> 00:08:53.000
また、この色覚異常の家族が2番目に一般的であるため、青と黄色を一緒に使用することを避けるのも良いことです。

00:08:53.000 --> 00:09:01.000
これらはいくつかの良い改善ですが、データシリーズを区別するために色に加えてシンボルを使用して、これをさらに一歩進めましょう。

00:09:01.000 --> 00:09:06.000
データシンボルを使用すると、人々は色に頼ることなくチャートを理解できます。

00:09:06.000 --> 00:09:07.000
だから、ここに再び私たちのチャートがあります。

00:09:07.000 --> 00:09:11.000
それでは、各データシリーズにいくつかのシンボルを追加してみましょう。

00:09:11.000 --> 00:09:16.000
熱帯データシリーズには円があり、乾燥したデータシリーズには正方形があることに注意してください。

00:09:16.000 --> 00:09:21.000
関連するシンボルを見るだけで、どのシリーズがどのシリーズであるかがわかります。

00:09:21.000 --> 00:09:27.000
これは、色をまったく知覚できない人でも、あなたのチャートを理解できることを意味します。

00:09:27.000 --> 00:09:34.000
これらすべてをデフォルトで行うのは良いことですが、デザインや製品の制約により、色の選択やシンボルを含める決定が制限されることがあります。

00:09:34.000 --> 00:09:40.000
このような場合、いくつかの簡単なアクセシビリティ設定をサポートすることで、アクセシブルな体験を提供できます。

00:09:40.000 --> 00:09:50.000
デフォルトのケースのチャートにシンボルを追加できない場合でも、Differentiate Without Colorシステムのアクセシビリティ設定が有効になっているときにシンボルを追加することで、アクセス可能な体験を提供できます。

00:09:50.000 --> 00:09:58.000
製品の理由でカラーセットを簡単に変更できない場合は、コントラストのアクセシビリティ設定が設定されている場合は、コントラストの高い色を採用することを検討してください。

00:09:58.000 --> 00:10:03.000
透明性の使用を減らすことで、チャートをより視覚的にアクセスしやすくすることもできます。

00:10:03.000 --> 00:10:09.000
チャートが透明度効果を使用している場合は、透明度を減らすアクセシビリティ設定がオンのときに無効にすることを検討してください。

00:10:09.000 --> 00:10:16.000
iOSアプリではなくmacOSを構築している場合、これらの設定のそれぞれには、サポートできるmacOSの対応があります。

00:10:16.000 --> 00:10:21.000
このセッションの資料には、これらのAPIの開発者ドキュメントへのリンクがあります。

00:10:21.000 --> 00:10:24.000
それでは、VoiceOverでデータをナビゲート可能にする方法を見てみましょう。

00:10:24.000 --> 00:10:27.000
今、私はコーヒーが大好きで、プログラミングが大好きです。

00:10:27.000 --> 00:10:33.000
少しの間、このチャートに示すように、消費されたコーヒーの量とエンジニアが生成するコードの量の間に関係があるふりをしましょう。

00:10:33.000 --> 00:10:35.000
ふりをしてください。

00:10:35.000 --> 00:10:42.000
また、データは12杯のコーヒーまで上がりますが、心配しないでください、このデータの作成でエンジニアは被害を受けませんでした。それはすべてでっち上げです。

00:10:42.000 --> 00:10:46.000
さて、このデータをVoiceOverユーザーがナビゲートできるようにする方法を見てみましょう。

00:10:46.000 --> 00:10:51.000
以下は、チャートビュークラスと対応するモデルオブジェクトからのコードのスニペットの例です。

00:10:51.000 --> 00:10:57.000
チャートビューには、そのモデルへの参照と、それ自体を描画するための機能があるかもしれません。

00:10:57.000 --> 00:11:01.000
そして、モデルには、チャートのタイトルとデータポイントが単純な構造体に含まれている可能性があります。

00:11:01.000 --> 00:11:04.000
最初にやりたいことは、チャートをコンテナにすることです。

00:11:04.000 --> 00:11:09.000
これは、VoiceOverがチャート要素を正しくグループ化し、ナビゲーションに役立ちます。

00:11:09.000 --> 00:11:18.000
チャートをコンテナにするには、ChartViewでaccessibilityContainerTypeをオーバーライドし、セマンティックグループコンテナタイプを返すだけです。

00:11:18.000 --> 00:11:24.000
繰り返しになりますが、これはVoiceOverのナビゲーションと、どの要素がチャートに属しているかを伝えるために重要です。

00:11:24.000 --> 00:11:28.000
次に、チャートにアクセシビリティラベルを与える必要があります。

00:11:28.000 --> 00:11:32.000
これは、チャートに遭遇したときに何を話すべきかをVoiceOverに伝えます。

00:11:32.000 --> 00:11:39.000
通常、これはチャートのタイトルか、VoiceOverがUIでチャートを一意に識別するために話すことができる同様のものでなければなりません。

00:11:39.000 --> 00:11:44.000
最後になりましたが、各データポイントにアクセシビリティ要素を提供する必要があります。

00:11:44.000 --> 00:11:49.000
チャートビューのaccessibilityElementsプロパティをオーバーライドすることで、これらの要素を提供できます。

00:11:49.000 --> 00:11:57.000
これにより、VoiceOverがナビゲートできる要素がチャート内に作成され、個々のデータポイントに関する情報を取得できます。

00:11:57.000 --> 00:12:05.000
これを実装するには、「マップ」を使用して、データポイントのリストからアクセシビリティ要素の配列を構築するだけです。

00:12:05.000 --> 00:12:13.000
データポイントごとに、ChartViewをaccessibilityContainerとして指定して、新しいUIAccessibilityElementオブジェクトを作成します。

00:12:13.000 --> 00:12:19.000
次に、要素のaccessibilityValueプロパティのデータポイントの文字列表現を提供します。

00:12:19.000 --> 00:12:24.000
この文字列は、これらのデータポイント要素にナビゲートするときにVoiceOverが話すものです。

00:12:24.000 --> 00:12:30.000
コードでは、おそらくこの文字列をローカライズしたいと思うでしょうし、文字列辞書を使用して適切な複数形化ルールを定義したいと思うかもしれません。

00:12:30.000 --> 00:12:33.000
しかし、この例では、シンプルにしましょう。

00:12:33.000 --> 00:12:40.000
最後に、VoiceOverが画面上のどこにあるかを知るために、要素のアクセシビリティフレームを提供する必要があります。

00:12:40.000 --> 00:12:46.000
ビジュアルチャートを描くためにこれが必要だったので、おそらくすでに他の場所で各データポイントのフレームを計算するためのロジックを持っているでしょう。

00:12:46.000 --> 00:12:51.000
利用可能な場合は、ここでそのロジックを再利用できます。

00:12:51.000 --> 00:12:55.000
これで、このデータポイントの完成したアクセシビリティ要素を返すことができます。

00:12:55.000 --> 00:12:58.000
わかった！これまでに何を成し遂げたか見てみましょう。

00:12:58.000 --> 00:13:00.000
VoiceOver: 一杯のコーヒーとコードの行。

00:13:00.000 --> 00:13:03.000
ゼロカップ。20行のコード。

00:13:03.000 --> 00:13:06.000
1杯。30行のコード。

00:13:06.000 --> 00:13:09.000
2つのカップ。35行のコード。

00:13:09.000 --> 00:13:13.000
3杯。32行のコード。

00:13:13.000 --> 00:13:14.000
プレストン：すごい！

00:13:14.000 --> 00:13:22.000
聞いたように、VoiceOverは、チャートをセマンティックグループにし、アクセシビリティラベルを与えたため、チャート内の要素に焦点を合わせるときにタイトルを話すようになりました。

00:13:22.000 --> 00:13:30.000
また、それぞれを表すUIAccessibilityElementを作成することで、各データポイントをナビゲートできるようにしました。

00:13:30.000 --> 00:13:33.000
前に進む前にもう一つ言及したいことがあります。

00:13:33.000 --> 00:13:36.000
時には、数百または数千のデータポイントがあるかもしれません。

00:13:36.000 --> 00:13:43.000
このような場合、ナビゲートするにはあまりにも多すぎるため、データポイントごとにアクセシビリティ要素を作成したくありません。

00:13:43.000 --> 00:13:51.000
代わりに、チャートを合理的な間隔に分割し、各データポイントではなく、各間隔のアクセシビリティ要素を作成することをお勧めします。

00:13:51.000 --> 00:13:56.000
これにより、より良いナビゲーション体験が提供され、理解できながらパフォーマンスが向上します。

00:13:56.000 --> 00:13:59.000
私たちはまだ終わっていません。私たちはさらに多くのことができます。

00:13:59.000 --> 00:14:06.000
データをナビゲート可能にすることは重要ですが、私たちはまだ一度に1つのポイントでVoiceOverユーザーに生データを提示しているだけです。

00:14:06.000 --> 00:14:13.000
チャートの価値は、データが実際に私たちに何を伝えているかを示し、個々のデータポイントを超えて見るのを助ける能力です。

00:14:13.000 --> 00:14:16.000
ここでオーディオグラフの出番です。

00:14:16.000 --> 00:14:21.000
それでは、最後に、チャートのオーディオグラフサポートを実装する方法について話しましょう。

00:14:21.000 --> 00:14:26.000
特定のチャートを定義するために必要なすべての情報を含むChartModel構造体があると想像してみてください。

00:14:26.000 --> 00:14:31.000
あなたのコードには、おそらくすでにこのように見えるモデルオブジェクトがあります。

00:14:31.000 --> 00:14:32.000
そうでなければ、心配しないでください。 

00:14:32.000 --> 00:14:36.000
これらの概念は、整理されているにもかかわらず、あなたのコードには引き続き適用されます。

00:14:36.000 --> 00:14:52.000
この例では、チャートにタイトルと要約があり、X軸とY軸があり、各軸にはタイトルと軸の最小表示値と最大表示可能な値を表す数値範囲があるとします。

00:14:52.000 --> 00:14:58.000
そして最後に、チャートの実際のデータを含むデータポイントの配列があります。

00:14:58.000 --> 00:15:04.000
このサンプルモデルオブジェクトの情報を使用して、チャートのオーディオグラフ機能を有効にします。

00:15:04.000 --> 00:15:12.000
まず、アクセシビリティフレームワークをインポートし、AXChartプロトコルに準拠するようにChartViewクラスを拡張します。

00:15:12.000 --> 00:15:17.000
サポートするプロパティが1つしかないため、AXChartプロトコルに準拠するのは簡単です。

00:15:17.000 --> 00:15:20.000
accessibilityChartDescriptorを実装するだけです。

00:15:20.000 --> 00:15:26.000
構築するチャート記述子オブジェクトには、VoiceOverがオーディオグラフエクスペリエンスを提供するために必要なすべての情報が含まれます。

00:15:26.000 --> 00:15:30.000
これらのチャート記述子の1つを段階的に構築する方法を見てみましょう。

00:15:30.000 --> 00:15:34.000
まず、各軸の軸記述子オブジェクトを作成する必要があります。

00:15:34.000 --> 00:15:46.000
各軸記述子は、カテゴリデータまたは数値データを表すかどうか、軸の表示可能な値の範囲、グリッド線の位置、およびスピーキング可能なデータ値をフォーマットする方法に関する情報をVoiceOverに提供します。

00:15:46.000 --> 00:15:52.000
X軸はコーヒーチャートの数値なので、数値軸記述子を作成します。

00:15:52.000 --> 00:15:58.000
X軸にカテゴリデータがある場合は、代わりにカテゴリ軸記述子を使用します。 代わりにカテゴリ軸記述子を使用します。

00:15:58.000 --> 00:16:02.000
モデルオブジェクトを使用して、この軸のタイトルと範囲を提供します。

00:16:02.000 --> 00:16:06.000
オプションで、この軸上のグリッド線の位置を指定することもできます。

00:16:06.000 --> 00:16:11.000
グリッド線を提供すると、再生とインタラクション中の触覚フィードバックとしてオーディオグラフで表されます。

00:16:11.000 --> 00:16:18.000
このチャートにはX軸のグリッド線がないので、今のところ空のままにしておきます。

00:16:18.000 --> 00:16:23.000
数値軸の場合、valueDescriptionProviderクロージャも作成する必要があります。

00:16:23.000 --> 00:16:31.000
このクロージャは、この軸の値の言い方をVoiceOverに伝えるので、単に「5」と言うのではなく「5カップ」と言うことができるので、非常に重要です。

00:16:31.000 --> 00:16:36.000
この軸では、値の後に「カップ」を話すように説明をフォーマットします。

00:16:36.000 --> 00:16:43.000
繰り返しますが、あなたのコードでは、おそらく適切な複数形ルールでこの文字列をローカライズしたいと思うでしょうが、この例はシンプルにしましょう。

00:16:43.000 --> 00:16:52.000
Y軸の軸記述子を作成するために同じことをしますが、値の説明を「カップ」ではなく「コードの行」と言うようにフォーマットします。

00:16:52.000 --> 00:16:58.000
チャートの基本的な構造が定義されたので、データを追加しましょう。

00:16:58.000 --> 00:17:02.000
これを行うには、各データ系列にデータ系列記述子を追加します。

00:17:02.000 --> 00:17:13.000
このチャートにはデータ系列が1つしかないので、1つのデータ系列記述子を作成し、連続しているかどうかにかかわらず、シリーズの名前と、このシリーズの実際のデータポイントを渡します。

00:17:13.000 --> 00:17:24.000
シリーズが点やバーなどの離散マークを使用して視覚的に表現されている場合は「isContinuous」に「false」を渡す必要があり、シリーズが視覚的に線として表現されている場合は「true」を渡す必要があります。

00:17:24.000 --> 00:17:29.000
シリーズのデータについては、AXDataPointオブジェクトの配列を提供する必要があります。

00:17:29.000 --> 00:17:33.000
これを行う最も簡単な方法は、チャートモデルのデータからそれらをマッピングすることです。

00:17:33.000 --> 00:17:34.000
もうすぐ着くよ!

00:17:34.000 --> 00:17:36.000
最後に1つやるべきことがあります。

00:17:36.000 --> 00:17:41.000
そして、それは私たちのAXChartDescriptorオブジェクトを構築するためにすべてのピースをまとめることです。

00:17:41.000 --> 00:17:45.000
私たちはそれにタイトルを与えます、それは再び、私たちのチャートのタイトルになるはずです。

00:17:45.000 --> 00:17:49.000
その後、それがあれば、チャートの要約を提供できます。

00:17:49.000 --> 00:17:52.000
これは、チャートに代替テキストを提供するようなものです。

00:17:52.000 --> 00:17:57.000
このプロパティを使用して、データから最も重要な洞察を1つまたは2つの文で伝える必要があります。

00:17:57.000 --> 00:18:01.000
この要約テキストは、オーディオグラフエクスプローラービューでユーザーに表示されます。

00:18:01.000 --> 00:18:05.000
これは、チャートを理解しようとするVoiceOverユーザーにとって非常に役立ちます。

00:18:05.000 --> 00:18:11.000
最後に、チャート記述子を完成させるために、以前に作成した軸とデータ系列記述子を提供し、それを返します。

00:18:11.000 --> 00:18:14.000
それでおそれ！最終結果を見てみましょう。 

00:18:14.000 --> 00:18:17.000
VoiceOver: オーディオグラフ。オーディオグラフを再生します。

00:18:17.000 --> 00:18:21.000
チャートの詳細。

00:18:21.000 --> 00:18:27.000
オーディオグラフ。見出し：コーヒーのカップとコードの行。

00:18:27.000 --> 00:18:30.000
オーディオグラフを再生します。ボタン。

00:18:30.000 --> 00:18:42.000
完了。

00:18:42.000 --> 00:18:44.000
プレストン：要約しましょう。

00:18:44.000 --> 00:18:48.000
チャートのビジュアルデザインにアクセス可能な選択をしてください。

00:18:48.000 --> 00:19:01.000
これには、良好なコントラスト比の使用、色に加えて記号を使用してデータのカテゴリを区別すること、色覚異常ユーザーにとって問題となる可能性のあるカラースキームの回避が含まれます。

00:19:01.000 --> 00:19:08.000
アクセシビリティツリーでデータ要素を公開して、VoiceOverユーザーに知覚可能でナビゲート可能にしてください。

00:19:08.000 --> 00:19:19.000
最後になりましたが、チャートビューにAXChartプロトコルとaccessibilityChartDescriptorを実装して、VoiceOverユーザーが視力のあるユーザーと同じ値をチャートから取得できるようにします。

00:19:19.000 --> 00:19:23.000
これで、誰にとっても豊かでアクセスしやすいチャートを作成するために必要なものがすべて揃っています。

00:19:23.000 --> 00:19:29.000
データは私たちの生活の中で非常に重要であるため、これらのツールを使用してユーザーに力を与えることを願っています。

00:19:29.000 --> 00:19:36.000
チャートは、データが豊富な世界でデータを理解するための最高のツールの1つであり、今ではすべての人にこの利点をもたらすことができます!

00:19:36.000 --> 23:59:59.000
♪

