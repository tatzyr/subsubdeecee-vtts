WEBVTT

00:00:00.000 --> 00:00:14.000
♪ ♪

00:00:14.000 --> 00:00:15.000
こんにちは。

00:00:15.000 --> 00:00:16.000
私の名前はカシア・ワワーです。

00:00:16.000 --> 00:00:23.000
私はキーボードUIチームのエンジニアで、今日はキーボードレイアウトの素晴らしい世界へのガイドになります。

00:00:23.000 --> 00:00:29.000
私は今日、フレームベースの過去から自動レイアウトの未来にキーボードをもたらすことについてあなたと話すことに非常に興奮しています。

00:00:29.000 --> 00:00:33.000
私たちは新しいガイドについて話すことからツアーを始めます。

00:00:33.000 --> 00:00:39.000
次に、キーボードをレイアウトに完全に統合するためにできる新しいことのいくつかについて確認します。

00:00:39.000 --> 00:00:49.000
そして最後に、キーボードが本当に何であるかについて話します-哲学的に言えば、考慮すべきキーボードの種類、そしてあなたがすぐに考えないかもしれないいくつかのケースについて話します。

00:00:49.000 --> 00:00:51.000
では、ツアーを始めましょう。

00:00:51.000 --> 00:00:55.000
多くのことと同様に、これは古代の過去から始まります。

00:00:55.000 --> 00:01:12.000
以前にアプリでキーボードで作業したことがある場合は、通知を登録し、通知の情報から適切なオフセットとアニメーションを導き、数学を行い、最後にそれを使用してレイアウトを調整することです。

00:01:12.000 --> 00:01:14.000
今、通知が固執しています。

00:01:14.000 --> 00:01:16.000
私たちはそれらを廃止していません。

00:01:16.000 --> 00:01:21.000
興味があれば、2017年の「より良いテキスト入力体験への鍵」で、それらについてもっと学ぶことができます。

00:01:21.000 --> 00:01:26.000
カスタムガイドで通知を使用する方法の簡単な例を見てみましょう。

00:01:26.000 --> 00:01:30.000
さて、このコードを置き換えようとしているので、このコードをコピーしないでください。

00:01:30.000 --> 00:01:33.000
しかし、iOS 15の前にキーボードを扱う方法は次のとおりです。

00:01:33.000 --> 00:01:38.000
通知に応答するためのカスタムガイドとアンカーを作成します。

00:01:38.000 --> 00:01:41.000
その後、適切な通知に登録します。

00:01:41.000 --> 00:01:46.000
通常、少なくともwillShowとwillHideですが、時にはフレームの変更など。

00:01:46.000 --> 00:01:56.000
次に、通知からフレーム情報を取得し、キーボードが画面から離れている場合は、自分のビューとセーフエリアガイドを調整していることを確認することで、上記の通知に応答します。

00:01:56.000 --> 00:02:01.000
そして、通知からアニメーション情報を取得し、最後にガイドを一致するように変更します。

00:02:01.000 --> 00:02:05.000
今、それはトンではありませんが、それはすぐに複雑になる可能性があります。

00:02:05.000 --> 00:02:11.000
本日、自動レイアウトコレクションに新しく追加されたUIキーボードレイアウトガイドを発表できることを嬉しく思います。

00:02:11.000 --> 00:02:15.000
さて、私たちがこれに飛び込むとき、あなたの興奮を抑制してみてください。

00:02:15.000 --> 00:02:19.000
キーボードレイアウトガイドはiOS 15で真新しいです。

00:02:19.000 --> 00:02:20.000
レイアウトガイドです。

00:02:20.000 --> 00:02:23.000
既存のレイアウトのビューとガイドを制約できます。

00:02:23.000 --> 00:02:29.000
レイアウトガイドに慣れていない場合、レイアウトガイドは、ビューを使用せずにレイアウト内のスペースを表す方法です。

00:02:29.000 --> 00:02:32.000
それはビューと同じアンカーをすべて持っています。

00:02:32.000 --> 00:02:37.000
キーボードレイアウトガイドは、レイアウトがそれを説明できるように、キーボードがアプリで占めるスペースを表します。

00:02:37.000 --> 00:02:39.000
そして、それだけです!

00:02:39.000 --> 00:02:42.000
ほとんど。

00:02:42.000 --> 00:02:45.000
代わりにこれを使うために見たコードの更新について話しましょう。

00:02:45.000 --> 00:02:47.000
これがその通知コードです。

00:02:47.000 --> 00:02:50.000
まだコピーしないで、緑色のチェックマークを待ってください。

00:02:50.000 --> 00:02:54.000
だから、今、あなたは先に進んで、あなたが追跡していたアンカーを取り除くことができます。

00:02:54.000 --> 00:03:00.000
そして、レイアウトガイドからビューのkeyboardLayoutGuideに変更します。

00:03:00.000 --> 00:03:04.000
そして、私たちはもう通知に登録する必要はありません。

00:03:04.000 --> 00:03:08.000
そして、私たちも彼らに答える必要はありません。

00:03:08.000 --> 00:03:09.000
そして、それだけです。

00:03:09.000 --> 00:03:12.000
そのコードはすべて、この1行に帰着します。

00:03:12.000 --> 00:03:14.000
実際にそれを見る準備はできましたか?

00:03:14.000 --> 00:03:19.000
通知コードを使用するときにキーボードを表示すると、次のようになります。

00:03:19.000 --> 00:03:24.000
そして、ガイドを使ってそれを持ち出すのはこんな感じです。

00:03:24.000 --> 00:03:30.000
ローカリゼーション以外に、それらは事実上同じに見えたことに気づいたかもしれませんが、それがポイントです。

00:03:30.000 --> 00:03:33.000
それほど多くのことをする必要はありませんし、同じ結果が得られます。

00:03:33.000 --> 00:03:35.000
では、ガイドの更新について話しましょう。

00:03:35.000 --> 00:03:37.000
それはUIビューのプロパティです。

00:03:37.000 --> 00:03:42.000
そして、ほとんどの場合、ガイドのtopAnchorを使用するように更新するだけです。

00:03:42.000 --> 00:03:49.000
このガイドは、引き上げや却下などのキーボードアニメーションと一致し、高さの変化にも続きます。

00:03:49.000 --> 00:03:53.000
キーボードが背が高い時もあれば、短い時もあるからです。

00:03:53.000 --> 00:03:57.000
しかし、ガイドは表示されるサイズに合うように適応します。

00:03:57.000 --> 00:04:06.000
そして、キーボードのドッキングを解除すると、デフォルトでは、ガイドが画面の下部にドロップされ、ウィンドウの幅になり、トップアンカーに結び付けたものはすべて続きます。

00:04:06.000 --> 00:04:10.000
セーフエリアのインセットを説明するので、もう心配する必要はありません。

00:04:10.000 --> 00:04:13.000
基本的な使用のために、それはおそらくあなたが知る必要があるすべてです。

00:04:13.000 --> 00:04:17.000
しかし今、私たちは楽しいことについて話すことができます。

00:04:17.000 --> 00:04:21.000
なぜ私たちは通常のレイアウトガイドだけでなく、新しいクラスを使用することを選んだのですか?

00:04:21.000 --> 00:04:26.000
さて、私たちはあなたが今までキーボードでできた以上のことができるようになりたかったのです。

00:04:26.000 --> 00:04:30.000
私たちの次の目的地は、あなたのアプリへの完全なキーボード統合です。

00:04:30.000 --> 00:04:31.000
なぜ私は「統合」と言うのですか?

00:04:31.000 --> 00:04:41.000
さて、私は人々が避ける必要があるものとして、またはレイアウトと戦っているものとしてキーボードについて話しているのをよく聞いたことがありますが、キーボードはあなたのアプリの一部です。

00:04:41.000 --> 00:04:57.000
UIキーボードレイアウトガイドの背後にある主な動機の1つは、開発者であるあなたに、ユーザーがテキストを入力するためのさまざまな方法に応答する機能を提供し、以前はできなかった方法で、キーボードをレイアウトの一部として完全に考えることです。

00:04:57.000 --> 00:05:01.000
私はあなたがこれらの新機能をどのように活用するかを見て本当に興奮しています。

00:05:01.000 --> 00:05:07.000
では、次の目的地として、キーボードレイアウトガイドが単なるレイアウトガイドではない理由は何ですか?

00:05:07.000 --> 00:05:16.000
UIキーボードレイアウトガイドを使用すると、新しいプロパティを使用して、すべての化身でキーボードを完全にフォローすることができます: followsUndockedKeyboard。

00:05:16.000 --> 00:05:28.000
デフォルトではfalseですが、trueに設定すると、ガイドはドッキング解除またはフローティング時にキーボードに従い、キーボードがどこにいてもレイアウトがどのように反応するかを詳細に制御できます。

00:05:28.000 --> 00:05:30.000
底への自動ドロップはもうありません。

00:05:30.000 --> 00:05:33.000
ドッキングを解除するときに非表示のキーボード通知を聴かないでください。

00:05:33.000 --> 00:05:37.000
レイアウトガイドはキーボードがある場所です。

00:05:37.000 --> 00:05:44.000
しかし、その情報を持つことは、レイアウトがさまざまなタイプのキーボードにどのように反応しているかをもっと意識する必要があるということです。

00:05:44.000 --> 00:05:51.000
したがって、UIキーボードレイアウトガイドは、別の新しいレイアウトガイドのサブクラスです。UIトラッキングレイアウトガイドです。

00:05:51.000 --> 00:05:57.000
画面を移動するときに変更したい制約を追跡するため、トラッキングレイアウトガイドと呼んでいます。

00:05:57.000 --> 00:06:09.000
特定のエッジの近くにいるときにアクティブになり、それを離れるときに非アクティブになる制約の配列、および/または特にエッジから離れているときにアクティブになり、その近くにあるときに非アクティブになる配列を与えることができます。

00:06:09.000 --> 00:06:13.000
これで何ができるかの例と、それを達成するために必要なコードを見てみましょう。 

00:06:13.000 --> 00:06:15.000
これはテストアプリです。

00:06:15.000 --> 00:06:18.000
私はテキストフィールドとキーボードに座ることができるいくつかのコントロールを持っています。

00:06:18.000 --> 00:06:28.000
しかし、画面の上部に近づくと、画面から外れないように下部にドロップしてほしい。

00:06:28.000 --> 00:06:34.000
そして、キーボードが左右に移動すると、UIの残りの部分を少しずらして、もう少しスペースを増やしたいです。

00:06:34.000 --> 00:06:37.000
では、このすべてはどのように達成されますか?

00:06:37.000 --> 00:06:38.000
私たちはここでいくつかのコードを見るつもりです。

00:06:38.000 --> 00:06:45.000
次のスライドでは、editViewはテキストフィールドとコントロールを持つビューで、imageViewは画像ビューです。

00:06:45.000 --> 00:06:52.000
さて、ここで識別子を使用する必要があることに注意してください。サンプルコードに表示されますが、これはスライドにより適しています。

00:06:52.000 --> 00:06:54.000
垂直軸で起こっていることから始めましょう。

00:06:54.000 --> 00:07:01.000
まず、editViewの下部をキーボードレイアウトガイドの上部に結びつける配列を定義します。

00:07:01.000 --> 00:07:08.000
次に、ガイドが上から離れているときにのみアクティブになるように設定し、その近くにあるときに無効になります。

00:07:08.000 --> 00:07:14.000
次に、キーボードがビューの上部に近づいたときに、必要な制約の別の配列を定義します。

00:07:14.000 --> 00:07:19.000
したがって、キーボードレイアウトガイドの上部の代わりに、セーフエリアの下部を使用します。

00:07:19.000 --> 00:07:21.000
ここに助けになるための簡単なビジュアルがあります。

00:07:21.000 --> 00:07:25.000
これがガイドとeditViewです。

00:07:25.000 --> 00:07:28.000
現在、トップから離れているので、a awayFromTopConstraintsはアクティブです。

00:07:28.000 --> 00:07:38.000
しかし、ガイドを一番上に近づけると、aawayFrom制約が無効になり、nearTopConstraintsが有効になり、ビューの一番下に移動します。

00:07:38.000 --> 00:07:41.000
頂上から離れると、その逆が起こります。

00:07:41.000 --> 00:07:43.000
では、水平方向の動きを見てみましょう。

00:07:43.000 --> 00:07:51.000
キーボードが前端と後辺の両方から離れているときは、editViewをキーボードの中央に配置したい。

00:07:51.000 --> 00:07:54.000
imageViewもビューの中央に配置したい。

00:07:54.000 --> 00:08:01.000
したがって、私はこれらの制約を定義し、先頭と末尾の両方から離れているときにアクティブになるように設定します。

00:08:01.000 --> 00:08:06.000
では、エッジに近づいたときに何が起こるかを設定しましょう。

00:08:06.000 --> 00:08:10.000
後縁にいるときに、editViewをトレーリングに移行し、リードに導きます。

00:08:10.000 --> 00:08:14.000
では、まず、それを処理しましょう。

00:08:14.000 --> 00:08:25.000
imageViewをキーボードの邪魔にならないようにしたいので、どちらかの端の近くにいるときは、キーボードの中心から反対側に移動し、キーボードが後縁にあるときに先頭につながり、その逆も同様です。

00:08:25.000 --> 00:08:29.000
次に、適切なエッジに近づいたときにこれらをアクティブに設定します。

00:08:29.000 --> 00:08:33.000
キーボードがその領域に渡るとアクティブになり、離れると無効になります。

00:08:33.000 --> 00:08:34.000
そして、それだけです!

00:08:34.000 --> 00:08:37.000
独自のレイアウトへの超高度なキーボード統合。

00:08:37.000 --> 00:08:39.000
それがどのように見えるかをもう一度見てみましょう。 

00:08:39.000 --> 00:08:42.000
私のeditViewがあります。

00:08:42.000 --> 00:08:47.000
それはフローティングキーボードにとどまり、上に向かって移動すると、下に落ちます。

00:08:47.000 --> 00:08:53.000
そして、私たちが左右に移動するにつれて、私たちが今話した調整が起こります。

00:08:53.000 --> 00:08:55.000
かなりかっこいい！

00:08:55.000 --> 00:09:00.000
次に、キーボードの「near」と「awayFrom」の意味について話しましょう。

00:09:00.000 --> 00:09:06.000
ドッキングされたキーボードは、下部に近く、他の端から離れていると考えられています。

00:09:06.000 --> 00:09:13.000
ドッキング解除とスプリットキーボードは、すべてのエッジから離れるか、上端に近づくことができます。

00:09:13.000 --> 00:09:21.000
フローティングキーボードの場合、どのエッジからでも近くまたは離れていることができ、同時に2つの隣接するエッジの近くにいることさえできます。

00:09:21.000 --> 00:09:25.000
これは、あなたが知っておくべきいくつかの潜在的に興味深い紛争につながる可能性があります。

00:09:25.000 --> 00:09:32.000
さて、これはすべて、followingsUndockedKeyboardをtrueに設定した場合にのみ適用され、残りの話では、それが私たちが作る仮定です。

00:09:32.000 --> 00:09:38.000
わかりました。最終ストレッチ:完全なキーボード統合のための考慮事項。

00:09:38.000 --> 00:09:43.000
キーボードはキーボードです--そうでなくなるまで。

00:09:43.000 --> 00:09:47.000
ドッキングされていないキーボードに従うことを選択した場合、考えるべき余分なことがいくつかあります。

00:09:47.000 --> 00:09:51.000
では、レイアウトを設計するときは、どのようなことに注意を払うべきですか?

00:09:51.000 --> 00:09:55.000
フローティングキーボードはすべてから離れることができることを常に覚えておいてください。

00:09:55.000 --> 00:10:00.000
それがすべての端から離れている場合、あなたは正しくレイアウトされるのに十分な情報を持っていますか?

00:10:00.000 --> 00:10:05.000
また、キーボードが下端から離れているとき、または上端に近いときにはどうなりますか?

00:10:05.000 --> 00:10:08.000
キーボードのtopAnchorに結びついているものにも注意する必要があります。

00:10:08.000 --> 00:10:11.000
なぜなら、それはそこに行くことができます!

00:10:11.000 --> 00:10:13.000
だから、気をつけてください。

00:10:13.000 --> 00:10:23.000
それを解決する方法は、キーボードが離れているときに制約を設定することです。ボトムエッジから、これらのビューをキーボードのtopAnchorからsafeAreaLayoutGuideの下部に移動します。

00:10:23.000 --> 00:10:29.000
ユーザーはいつでもキーボードを動かすこともできるので、それが特定の場所であることを当てにすることはできません。

00:10:29.000 --> 00:10:32.000
あなたもそれを心に留めておきたいと思うでしょう。

00:10:32.000 --> 00:10:36.000
ここに珍しい標本があります:スプリットキーボード。

00:10:36.000 --> 00:10:40.000
分割されたキーボードとドッキング解除されたキーボードは、上部に近づきすぎるまで、すべてのエッジから離れています。

00:10:40.000 --> 00:10:44.000
ドッキングキーボードと同様に、常に先行と後続から離れています。

00:10:44.000 --> 00:10:46.000
新しいことについて話しましょう。 について話そう

00:10:46.000 --> 00:10:52.000
今年はカメラを使ってアプリにテキストを取り込む新しい方法があります。

00:10:52.000 --> 00:10:56.000
それはまだキーボードなので、まだガイドを使うことができます。

00:10:56.000 --> 00:11:02.000
通常のドッキングキーボードと同じですが、ほぼフルスクリーンにできる数少ないキーボードの1つです。

00:11:02.000 --> 00:11:10.000
今年のカメラによるテキスト入力の活用の詳細については、「アプリのキーボード入力にカメラを使用する」をご覧ください。

00:11:10.000 --> 00:11:14.000
新しいことを続けて、ハードウェアキーボードが取り付けられているときはどうですか?

00:11:14.000 --> 00:11:19.000
さて、今年は新しく、もはや常に全幅ではないアダプティブショートカットバーがあります。

00:11:19.000 --> 00:11:24.000
使用している言語とバーにあるボタンの数に基づいて幅が変わります。

00:11:24.000 --> 00:11:34.000
以前は、常に画面の全幅でしたが、現在、ドッキングされていないキーボードに従っている場合は、実際にバーの実際の先頭と後続の端を使用できます。

00:11:34.000 --> 00:11:36.000
それで、エッジでここでの話は何ですか?

00:11:36.000 --> 00:11:41.000
これは常に底の近くにあり、通常の位置では、他の3つのエッジから離れています。

00:11:41.000 --> 00:11:44.000
しかし、それは崩壊可能です!

00:11:44.000 --> 00:11:49.000
折りたたむと、前縁または後縁の近くにあることもあります。

00:11:49.000 --> 00:11:54.000
ちなみに、これはキーボードのwidthAnchorの使用に注意したいいくつかの理由の1つです。

00:11:54.000 --> 00:11:58.000
それは非常に小さい場合も、画面の全幅の場合もかまいません。

00:11:58.000 --> 00:12:07.000
さて、ツアーの最も楽しい部分に入りましょう:あなたが画面上の唯一のアプリではなく、ドッキングされていないキーボードに従っている場合はどうでしょうか?

00:12:07.000 --> 00:12:11.000
まず、キーボードはアプリのスペースを離れることができることを覚えておいてください。

00:12:11.000 --> 00:12:14.000
それが起こったとき、私たちはそれを却下されたかのように扱うつもりです。

00:12:14.000 --> 00:12:23.000
第二に、アプリが最も狭い場合、上端と下端が再生されますが、キーボードがアプリの上にあるかどうかにかかわらず、先頭と末尾は遠ざかります。

00:12:23.000 --> 00:12:29.000
また、ガイドは、画面上の唯一のものではない場合、キーボードのどの部分がアプリのウィンドウの上にあるかに合わせてサイズが設定されています。

00:12:29.000 --> 00:12:33.000
私が何を意味するのかを示すために、いくつかのビジュアルを見てみましょう。

00:12:33.000 --> 00:12:36.000
これはすべて、followsUndockedKeyboardがtrueに設定されている場合にのみ適用されます。

00:12:36.000 --> 00:12:41.000
していない場合、ガイドは画面の下部、ウィンドウの全幅にあります。

00:12:41.000 --> 00:12:45.000
フルスクリーンでキーボードが浮いて真ん中にあるとき、あなたはすべてから離れています。

00:12:45.000 --> 00:12:52.000
awayFromの制約はすべて有効になり、近い制約はすべて無効になりました。

00:12:52.000 --> 00:12:59.000
別のアプリが画面上にあるとき、あなたがより広いアプリであれば、キーボードがすべてから離れるのに十分な幅があります。

00:12:59.000 --> 00:13:03.000
しかし、水平エッジに近づくには、移動量を減らす必要があります。

00:13:03.000 --> 00:13:06.000
これは肖像画にも似ています。 

00:13:06.000 --> 00:13:17.000
しかし、ハーフスクリーンでは、同じ場所のキーボードがあなたの最先端の近くにあり、ガイドはアプリの上にあるキーボードの一部にのみ一致するようにサイズになりました。

00:13:17.000 --> 00:13:28.000
あなたが狭いアプリであるとき、ガイドは常にiPhoneやドッキングキーボードと同じ水平端から離れていると見なされますが、あなたはまだ上端の近くにいることができます。

00:13:28.000 --> 00:13:33.000
そして、繰り返しになりますが、ガイドはアプリ上の一部のみを考慮するサイズであることに注意してください。

00:13:33.000 --> 00:13:41.000
そして、キーボードをドッキングし、それが再びフルサイズになると、リード、トレーリング、トップからも離れています。

00:13:41.000 --> 00:13:46.000
そして、繰り返しになりますが、レイアウトガイドが再びあなたのアプリの上にあるものに合わせてサイズが変更されていることに注意してください。

00:13:46.000 --> 00:13:50.000
スライドオーバーアプリであれば、そのためにもサイズが変更されます。

00:13:50.000 --> 00:13:53.000
前の例とデモコードでは、これはすべてうまく処理されるはずです。

00:13:53.000 --> 00:13:57.000
あなたはこれらのシナリオのいずれかにいるかもしれないことを心に留めておく必要があります。

00:13:57.000 --> 00:14:01.000
これで、アプリをキーボード統合の次のレベルに引き上げる準備が整ったはずです。

00:14:01.000 --> 00:14:04.000
だから、キーボードレイアウトガイドを使ってください。

00:14:04.000 --> 00:14:09.000
アプリが可能であれば、UIトラッキングレイアウトガイドの高度な機能を活用してください。

00:14:09.000 --> 00:14:19.000
そして、最も重要なことは、キーボードのレイアウトをキーボードとの戦いや回避として考えているなら、代わりにそれをレイアウトに統合することを考え始めてください。

00:14:19.000 --> 00:14:25.000
そして、あなたがすでにそのように考えていたなら、今、あなたはあなたの完全なビジョンを実現するためのさらに多くのツールを持っています。

00:14:25.000 --> 00:14:27.000
それは私たちのツアーの終わりに私たちをもたらします。

00:14:27.000 --> 00:14:34.000
終了する前に、すべての個人的なアイテムを持っていることを確認し、ギフトショップを訪問することを忘れないでください、そして素晴らしいWWDCを持っています。

00:14:34.000 --> 23:59:59.000
[エーテルパーカッション音楽]。

