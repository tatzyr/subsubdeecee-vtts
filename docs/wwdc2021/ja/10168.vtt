WEBVTT

00:00:02.000 --> 00:00:10.000
こんにちは。

00:00:10.000 --> 00:00:18.000
メールは重要なアプリケーションであり、メールアプリの拡張機能を使用すると、いくつかの信じられないほど新しい方法でそれを強化することができます。

00:00:18.000 --> 00:00:27.000
私はAbhilashで、同僚のSethと一緒に、素晴らしいMailアプリの拡張機能を構築する方法を説明します。

00:00:27.000 --> 00:00:34.000
macOS Montereyでは、メール拡張機能を構築するための新しいフレームワーク、MailKitを出荷しています。

00:00:34.000 --> 00:00:45.000
これらの拡張機能は、Safariアプリ拡張機能や共有シート拡張機能などの他のアプリ拡張機能と同じ基盤の上に構築されています。

00:00:45.000 --> 00:00:52.000
それらは、ユーザーのプライバシーとセキュリティを一から念頭に置いて構築されています。

00:00:52.000 --> 00:00:59.000
MailKit APIは十分に文書化されており、主要なmacOSリリースでサポートされます。

00:00:59.000 --> 00:01:11.000
他のアプリ拡張機能と同様に、適切に署名されたMacアプリにしたり、既存のアプリにバンドルしたり、App Storeで配布したりできます。

00:01:11.000 --> 00:01:16.000
メールの拡張機能は、メールの拡張の未来です。

00:01:16.000 --> 00:01:20.000
プラグインは、将来のmacOSリリースで機能しなくなります。

00:01:20.000 --> 00:01:26.000
メールのユーザーエクスペリエンスを拡張できる4つの新しい方法を導入しています。

00:01:26.000 --> 00:01:33.000
まず、拡張機能の作成は、メールメッセージを作成するときに新しいワークフローを可能にします。

00:01:33.000 --> 00:01:41.000
アクション拡張機能は、受信メッセージにカスタムルールを提供することで、人々が受信トレイを管理するのに役立ちます。

00:01:41.000 --> 00:01:48.000
コンテンツブロッキング拡張機能は、メールメッセージのWebKitコンテンツブロッカーを提供します。

00:01:48.000 --> 00:01:59.000
最後に、メッセージセキュリティ拡張機能は、人々がメールを送受信するときにメッセージに署名、暗号化、復号化することで、さらなるセキュリティを提供できます。

00:01:59.000 --> 00:02:13.000
これは、メッセージを作成し、受信メッセージに対してアクションを実行し、望ましくないメールコンテンツをブロックし、暗号化と復号化を提供するのに役立つメール拡張機能の完全なスイートを提供します。

00:02:13.000 --> 00:02:14.000
それらは書きやすいです。

00:02:14.000 --> 00:02:16.000
彼らはとても強力です。

00:02:16.000 --> 00:02:23.000
それらは安定しており、OSとメールアプリが時間の経過とともに変化するにつれて機能し続けます。

00:02:23.000 --> 00:02:30.000
これらの機能を備えたMail拡張機能を構築する前に、使用中の例を見てみましょう。

00:02:30.000 --> 00:02:39.000
私が同僚全員が複数の非常に秘密主義のプロジェクトで協力している大規模な多国籍企業で働いていると想像してみてください。

00:02:39.000 --> 00:02:47.000
プロジェクトの機密性を維持するために、メールメッセージの受信者を検証するBig Secrecy Extensionを使用しています。

00:02:47.000 --> 00:02:54.000
火星の新しいリモートオフィスの最新情報について、同僚のセスにメッセージを送りたいです。

00:02:54.000 --> 00:03:00.000
最初に気づくのは、メール作成ウィンドウのBig Secrecy Extensionのボタンです。

00:03:00.000 --> 00:03:08.000
この拡張機能は、私が取り組んでいるプロジェクトのリストを提供し、私はMars Remote Officeを選択します。

00:03:08.000 --> 00:03:13.000
件名とセスのメールを入力します。

00:03:13.000 --> 00:03:21.000
拡張機能は、セスがこのプロジェクトで開示されていることを検証し、青いチェックマークで彼のメールアドレスに注釈を付けることができました。

00:03:21.000 --> 00:03:31.000
もちろん、この重要なプロジェクトでは、マネージャーのマイキーに情報を提供したいので、彼を追加します。

00:03:31.000 --> 00:03:36.000
うーん、マイキーは私たちの新しいリモートオフィスについて開示されていないようです。

00:03:36.000 --> 00:03:42.000
彼を削除してメッセージを送りましょう。

00:03:42.000 --> 00:03:48.000
ああ、セスから返信があり、メッセージリストに赤で表示されます。

00:03:48.000 --> 00:03:57.000
これは、Big Secrecy Extensionが火星プロジェクトに関するメッセージを赤に色付けするアクションを実行したためです。

00:03:57.000 --> 00:04:03.000
拡張機能がこのメッセージに対してアクションを実行したことを示すアイコンもあります。

00:04:03.000 --> 00:04:15.000
メッセージを表示すると、メッセージビューアに、セスからのメッセージが暗号化され、Big Secrecy Extensionによって正常に復号化されたことを示すアイコンがあります。

00:04:15.000 --> 00:04:23.000
それでは、MailKit APIを活用して、Big Secrecy Extensionのような強力な拡張機能を構築する方法を学びましょう。

00:04:23.000 --> 00:04:31.000
メッセージの作成中にユーザーに新しい機能を提供できる拡張機能の作成から始めましょう。

00:04:31.000 --> 00:04:39.000
macOS Montereyでは、拡張機能がメール作成ウィンドウと対話する方法は4つあります。

00:04:39.000 --> 00:05:01.000
拡張機能は、ユーザーが編集している受信者の電子メールアドレスを検証したり、構成されているメッセージに関する追加のコンテキストをビューコントローラーに提供したり、送信メッセージに追加のヘッダーを設定したり、送信前にメッセージのエラーをユーザーに警告したりできます。

00:05:01.000 --> 00:05:06.000
構成拡張機能を構築する方法を見てみましょう。

00:05:06.000 --> 00:05:10.000
既存のmacOSアプリに新しいターゲットを追加することから始めます。

00:05:10.000 --> 00:05:21.000
Xcode 13には、新しいメール拡張ターゲットの作成を開始する新しいメール拡張テンプレートがあります。

00:05:21.000 --> 00:05:28.000
セットアップ中、Xcodeでは、作成する拡張機能のタイプを選択できます。

00:05:28.000 --> 00:05:36.000
構成拡張機能では、[構成セッション ハンドラを含める] 機能を選択します。

00:05:36.000 --> 00:05:47.000
拡張ターゲットのInfo.plistでは、MEComposeSession辞書でアイコンと説明的なツールチップも指定する必要があります。

00:05:47.000 --> 00:05:54.000
メールは、アイコンとツールチップを使用して、作成ウィンドウにツールバーボタンを表示します。

00:05:54.000 --> 00:05:59.000
それでは、拡張機能のプリンシパルクラスの実装を見てみましょう。

00:05:59.000 --> 00:06:05.000
拡張機能のプリンシパルクラスは、MEExtensionプロトコルに準拠している必要があります。

00:06:05.000 --> 00:06:12.000
MEExtensionは、4種類の拡張機能のそれぞれにオプションのハンドラメソッドを公開します。

00:06:12.000 --> 00:06:24.000
compose拡張の場合、プリンシパルクラスはsessionメソッドのハンドラを実装し、MEComposeSessionHandlerプロトコルに準拠したインスタンスを返す必要があります。

00:06:24.000 --> 00:06:34.000
MEComposeSessionHandlerのメソッドは、Composeウィンドウのライフサイクルについて拡張機能に通知するためにメールで呼び出されます。

00:06:34.000 --> 00:06:42.000
最初に呼び出されるメソッドはComposeSessionDidBeginで、新しい作成ウィンドウを開いたときに発生します。

00:06:42.000 --> 00:06:52.000
受信者の電子メールアドレスの編集や電子メールの送信など、ユーザーのアクションに基づいて呼び出されるメソッドもあります。

00:06:52.000 --> 00:07:00.000
MEComposeSessionHandlerのすべてのメソッドには、作成ウィンドウに関する情報を提供するMEComposeSession引数があります。

00:07:00.000 --> 00:07:06.000
メールは、すべてのメール作成ウィンドウに一意のMEComposeSessionインスタンスを作成します。

00:07:06.000 --> 00:07:14.000
編集中のメッセージのさまざまな詳細を公開するMEMessageプロパティがあります。

00:07:14.000 --> 00:07:24.000
この情報を利用して、メールが拡張機能のMEComposeSessionHandlerメソッドを呼び出すときに提供する応答をカスタマイズできます。

00:07:24.000 --> 00:07:31.000
受信者のメールアドレスに注釈を付ける方法の例を見てみましょう。

00:07:31.000 --> 00:07:40.000
メールは、受信者のアドレスが編集されるたびに、ComposeSessionHandlerのannotateAddressesForSessionを呼び出します。

00:07:40.000 --> 00:07:53.000
この例では、MEMessageのallRecipientAddressesプロパティを使用して、seth@example.comと一致しない電子メールのエラーアノテーションを提供しています。

00:07:53.000 --> 00:08:00.000
作成拡張機能は、メールが作成ウィンドウに表示されるビューコントローラーを提供することもできます。

00:08:00.000 --> 00:08:09.000
ビューコントローラーは、各コンポーズウィンドウのビューコントローラーをカスタマイズすることで、ユーザーに貴重なコンテキストを提供できます。

00:08:09.000 --> 00:08:16.000
拡張機能のビューコントローラは、MEExtensionViewControllerのサブクラスである必要があります。

00:08:16.000 --> 00:08:26.000
Mailは、MEComposeSessionHandlerのviewControllerForSessionメソッドを呼び出すことで、このビューコントローラのインスタンスを要求します。

00:08:26.000 --> 00:08:34.000
これらの構成APIの詳細については、MailKitのドキュメントで学び、新しいワークフローの構築を始めることができます。

00:08:34.000 --> 00:08:38.000
では、メールのアクション拡張機能について話しましょう。

00:08:38.000 --> 00:08:46.000
アクション拡張機能は、受信メッセージに対してアクションを実行し、ユーザーが受信トレイを管理できるようにします。

00:08:46.000 --> 00:08:54.000
macOS Montereyでは、拡張機能が新しいメッセージに対して実行できる3種類のアクションを公開しています。

00:08:54.000 --> 00:09:11.000
アクション拡張機能は、受信メッセージの読み取りステータスとフラグを変更したり、迷惑メール、ゴミ箱、アーカイブなどのシステムメールボックスにメッセージを移動したり、メッセージリストに表示されたときにメッセージに色を適用したりできます。

00:09:11.000 --> 00:09:20.000
メール拡張ターゲットを作成するときに[メッセージアクションハンドラーを含める]機能を選択すると、メッセージアクションのサポートを追加できます。

00:09:20.000 --> 00:09:31.000
Compose拡張と同様に、アクション拡張の場合、プリンシパルクラスはメッセージアクションのハンドラーを実装することにより、メッセージアクションハンドラを返す必要があります。

00:09:31.000 --> 00:09:39.000
この例では、プリンシパルクラスはMEMessageActionHandlerを採用することでアクションハンドラとしても機能しています。

00:09:39.000 --> 00:09:47.000
アクション拡張機能は、メッセージメソッドのMEMessageActionHandlerの決定アクションを実装する必要があります。

00:09:47.000 --> 00:09:52.000
メッセージのDecisionActionは、MEMessage引数で呼び出されます。

00:09:52.000 --> 00:10:00.000
ここでは、ヘッダーのプロパティに「Mars」が含まれているかどうかをチェックして、メッセージを赤く着色しています。

00:10:00.000 --> 00:10:03.000
アクションハンドラーについて注意すべき点がいくつかあります。

00:10:03.000 --> 00:10:13.000
メールは、受信トレイに表示される前に、ダウンロードされるすべての新しいメッセージに対して、ハンドラーの決定アクションを呼び出します。

00:10:13.000 --> 00:10:24.000
メールがメッセージメソッドの拡張機能の決定アクションを初めて呼び出すとき、MEMessageインスタンスはメッセージヘッダーのサブセットのみを持ちます。

00:10:24.000 --> 00:10:30.000
利用可能なヘッダーに基づいてメッセージを色付けするなどの決定を提供できます。

00:10:30.000 --> 00:10:37.000
メールがメッセージにアクションを適用すると、受信トレイに表示されます。

00:10:37.000 --> 00:10:45.000
場合によっては、適切な決定を返すためにメッセージの完全な本文とヘッダーが必要になります。

00:10:45.000 --> 00:10:52.000
この場合、disisionAction for messageメソッドはinvokeAgainWithBodyの決定を返すことができます。

00:10:52.000 --> 00:11:03.000
これにより、メールは、メッセージメソッドのハンドラーの決定アクションを再度呼び出す前に、完全なメッセージ本文とヘッダーを取得します。

00:11:03.000 --> 00:11:09.000
受信トレイに表示される前に、より正確な決定を返すことができます。

00:11:09.000 --> 00:11:17.000
今、私はそれをセスに引き渡すつもりです。セスは、コンテンツブロッキングとセキュリティ拡張機能を構築する方法を紹介します。

00:11:17.000 --> 00:11:19.000
ありがとう、アビラッシュ。

00:11:19.000 --> 00:11:23.000
まず、コンテンツブロッカー拡張機能を追加する方法を説明します。

00:11:23.000 --> 00:11:34.000
コンテンツブロッカーは、メッセージビューのMailのWebKit構成にフックして、拡張機能がメッセージのHTMLのトリガーに基づいてコンテンツの読み込みをブロックできるようにします。

00:11:34.000 --> 00:11:43.000
これにより、拡張機能はURLなどのHTMLの基準に基づいてコンテンツの読み込みをブロックできます。

00:11:43.000 --> 00:11:52.000
この例では、拡張機能は、拡張機能のコンテンツルールリストのルールに基づいてリモート画像の読み込みをブロックすることができました。

00:11:52.000 --> 00:12:02.000
メール拡張ターゲットを作成するときに[コンテンツブロッカーを含める]を選択すると、コンテンツブロックのサポートを追加できます。

00:12:02.000 --> 00:12:07.000
次に、拡張機能のプリンシパルクラスのコンテンツブロッカーのハンドラを返します。

00:12:07.000 --> 00:12:14.000
この例では、プリンシパルクラスはMEContentBlockerプロトコルを採用しているため、selfを返します。

00:12:14.000 --> 00:12:20.000
コンテンツルールリストは、Safariのコンテンツブロッカーと同じ構文で指定されます。

00:12:20.000 --> 00:12:29.000
したがって、Safariコンテンツブロッカー拡張機能のコンテンツルールリストをすでにお持ちの場合は、メールアプリの拡張機能にも同じルールを使用できます。

00:12:29.000 --> 00:12:38.000
「Webkitコンテンツブロッカーの紹介」のドキュメントを参照することで、コンテンツルールリストの作成方法に関する詳細情報を入手できます。

00:12:38.000 --> 00:12:44.000
ルールリストが完了したら、contentRulesJSONメソッドで返してメールに提供できます。

00:12:44.000 --> 00:12:49.000
このメソッドは、コンテンツルールリストJSONのデータエンコーディングを期待します。

00:12:49.000 --> 00:12:53.000
そして、それはメールのコンテンツブロッカーのためのものです。

00:12:53.000 --> 00:12:57.000
最後に、メッセージセキュリティ拡張機能について説明します。

00:12:57.000 --> 00:13:03.000
メッセージセキュリティ機能は、拡張機能に暗号化されたメッセージをエンコードおよびデコードする機能を提供します。

00:13:03.000 --> 00:13:10.000
また、メッセージに署名し、署名されたメッセージの証明書を表示する方法を提供することもできます。

00:13:10.000 --> 00:13:18.000
メール拡張ターゲットの作成時に[メッセージセキュリティハンドラを含める]を選択すると、メッセージセキュリティのサポートを追加できます。

00:13:18.000 --> 00:13:28.000
次に、拡張機能のプリンシパルクラスでMEMessageSecurityHandlerプロトコルをサポートする拡張機能からハンドラを返す必要があります。

00:13:28.000 --> 00:13:37.000
この例では、拡張機能のプリンシパルクラスもMEMessageSecurityHandlerプロトコルを採用しているため、selfを返します。

00:13:37.000 --> 00:13:41.000
それでは、構成されているメッセージをエンコードする方法を見てみましょう。

00:13:41.000 --> 00:13:45.000
メッセージのエンコードは2つの部分に分かれています。

00:13:45.000 --> 00:13:49.000
1つ目は、メッセージが構成されるときにUIを駆動するのに役立ちます。

00:13:49.000 --> 00:13:54.000
これにより、拡張機能は、現在のメッセージに署名して暗号化する機能があるかどうかを表示できます。

00:13:54.000 --> 00:14:01.000
次の部分は、送信されるメッセージを実際に暗号化して署名することです。

00:14:01.000 --> 00:14:08.000
メッセージが構成されると、メールは送信者と現在の受信者リストを含むメッセージを拡張機能に送信します。

00:14:08.000 --> 00:14:13.000
拡張機能は、メッセージに署名して暗号化する機能があるかどうかを判断できます。

00:14:13.000 --> 00:14:25.000
拡張機能によって返されるものに基づいて、メッセージに署名して暗号化できるかどうかに応じて、メールはロックと証明書のアイコンを強調表示します。

00:14:25.000 --> 00:14:33.000
送信者または受信者が変更されるたびに、Mailは拡張機能のメッセージセキュリティハンドラでgetEncodingStatusメソッドを呼び出します。

00:14:33.000 --> 00:14:40.000
拡張機能は、メッセージに署名して暗号化し、現在のエンコーディングステータスをメールに戻すことができるかどうかを確認します。

00:14:40.000 --> 00:14:47.000
ここでの例は、メッセージのエンコーディングステータスをチェックする実際の作業を行うためにExampleEncoderをインポートすることです。

00:14:47.000 --> 00:14:53.000
メッセージセキュリティハンドラーは、利用可能になったらステータスを返します。

00:14:53.000 --> 00:15:00.000
次に、メッセージが送信されると、MailはRFC822メッセージデータを受け取り、それを拡張機能に渡します。

00:15:00.000 --> 00:15:09.000
拡張機能は、必要に応じてメッセージに署名して暗号化し、署名され暗号化されたRFC822データをメールに戻します。

00:15:09.000 --> 00:15:15.000
その後、メールはこのデータを送信サーバーに送信します。

00:15:15.000 --> 00:15:24.000
メッセージを送信する準備ができたら、MailはencodeMessageメソッドを使用して現在のメッセージを拡張機能のメッセージセキュリティハンドラに渡します。

00:15:24.000 --> 00:15:29.000
拡張機能のメッセージセキュリティハンドラは、エンコードされたメッセージを返します。

00:15:29.000 --> 00:15:35.000
繰り返しますが、この例では、ExampleEncoderを使用してメッセージをエンコードする実際の作業を行います。

00:15:35.000 --> 00:15:40.000
メッセージセキュリティハンドラは、エンコードされたメッセージを返します。

00:15:40.000 --> 00:15:43.000
メッセージのデコードも同様に機能しますが、逆に機能します。

00:15:43.000 --> 00:15:51.000
メッセージが表示されると、メールはエンコードされたRFC822メッセージデータを拡張機能に送信します。

00:15:51.000 --> 00:15:59.000
拡張機能は、メッセージを暗号化されていない、または署名されたRFC822データにデコードし、それをメールに戻します。

00:15:59.000 --> 00:16:05.000
その後、メールにデコードされたメッセージが表示されます。

00:16:05.000 --> 00:16:12.000
メールがメッセージをデコードする準備ができたら、decodedMessageメソッドを呼び出す拡張機能のセキュリティハンドラに呼び出します。

00:16:12.000 --> 00:16:19.000
拡張機能がメッセージをデコードする機能を持っている場合、そうし、デコードされたRFC822メッセージを返します。

00:16:19.000 --> 00:16:26.000
メッセージのデコードに拡張機能が不要な場合は、すぐにnilを返すはずです。

00:16:26.000 --> 00:16:31.000
メッセージが表示されると、署名され暗号化されているかどうかを判断できます。

00:16:31.000 --> 00:16:40.000
署名されたメッセージの場合、署名者ラベルの横にある署名者証明書をクリックすると、送信者の証明書情報を表示できます。

00:16:40.000 --> 00:16:46.000
メールを使用すると、拡張機能はこの証明書情報をレンダリングするための独自のビューコントローラを提供できます。

00:16:46.000 --> 00:16:52.000
デコードされたメールメッセージの一部として、拡張機能は一連のメッセージ署名者を返す機能を持っています。

00:16:52.000 --> 00:16:56.000
提供されたラベルは、メッセージビューで署名者として表示されます。

00:16:56.000 --> 00:17:04.000
この拡張機能は、署名証明書の表示に必要な情報をコンテキストプロパティに入力することもできます。

00:17:04.000 --> 00:17:12.000
証明書アイコンをクリックすると、メールは拡張機能からViewControllerを要求し、現在のメッセージの署名者のセットを渡します。

00:17:12.000 --> 00:17:18.000
これらの署名者は、メッセージが最初にデコードされたときに内線によってメールに返されたものです。

00:17:18.000 --> 00:17:23.000
ビューコントローラは、MEExtensionViewControllerのサブクラスでなければなりません。

00:17:23.000 --> 00:17:26.000
そして、それはメッセージセキュリティ拡張機能のためのものです。

00:17:26.000 --> 00:17:30.000
メール拡張機能は、メール体験を向上させるための強力な新しい方法です。

00:17:30.000 --> 00:17:37.000
これらのメール機能を活用して素晴らしい新製品を構築する方法に興奮しており、ご意見をお聞かせください。

00:17:37.000 --> 00:17:42.000
だから、私たちに電子メールを送るか、開発者フォーラムにメッセージを投稿してください。

00:17:42.000 --> 00:17:45.000
これらの例は、メールアプリの拡張機能のパワーを示しています。

00:17:45.000 --> 00:17:52.000
受信者を確認する構成拡張機能、受信メッセージを色付けするアクション拡張機能を作成しました。

00:17:52.000 --> 00:17:55.000
コンテンツブロッカーがリモート画像をブロックしているのを見ました。

00:17:55.000 --> 00:18:01.000
最後に、メールにカスタム暗号化と復号化を追加するのがいかに簡単かを見ました。

00:18:01.000 --> 00:18:05.000
このビデオでは、メールアプリの拡張機能を構築する方法を取り上げました。

00:18:05.000 --> 00:18:10.000
私たちは、あなたが本当にクールなことをするためにメールをどのように拡張するかを楽しみにしています。

00:18:10.000 --> 00:18:14.000
だから、外に出て、いくつかの素晴らしい新しいメールアプリ拡張機能を構築してください。

00:18:14.000 --> 23:59:59.000
見てくれてありがとう。

