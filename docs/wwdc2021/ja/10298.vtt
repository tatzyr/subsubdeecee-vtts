WEBVTT

00:00:02.000 --> 00:00:11.000
みなさん、こんにちは！

00:00:11.000 --> 00:00:18.000
WWDC21セッション「スマートホームアプリにMatterのサポートを追加する」へようこそ。

00:00:18.000 --> 00:00:20.000
私はホームエンジニアリングのセリーナです。

00:00:20.000 --> 00:00:29.000
今日、私の同僚、Chris、Sagarと私は、Matterサポートのために今年追加したエキサイティングな機能を説明します。

00:00:29.000 --> 00:00:43.000
月曜日の基調講演で述べたように、Matterは、すべてのスマートホームアクセサリーがシームレスに連携して前進するために、Appleや他の業界リーダーによって開発されているスマートホームアクセサリーの新しい基準です。

00:00:43.000 --> 00:00:55.000
そのビジョンは、世界中のホームオートメーションを民主化し、人々がスマートホームの構築を開始し、今後何年も追加し続けることを可能にすることです。

00:00:55.000 --> 00:01:12.000
Matterプロトコルは、HomeKitを含む実績のある技術を活用し、最も幅広い量のスマートホームデバイスをサポートし、メーカーが製品に簡単に統合できるようにするオープンソースの取り組みとして開発されています。

00:01:12.000 --> 00:01:27.000
Matterを使用すると、スマートホームアクセサリーメーカーは複数のプロトコルを並行してサポートする必要がなくなり、製品を作る開発作業を真に簡素化し、継続的にサポートします。

00:01:27.000 --> 00:01:40.000
また、アプリ開発者は、独自のプロトコルを作成して維持する負担なしに、顧客に最適なアプリ体験の開発に集中する機会を提供します。

00:01:40.000 --> 00:01:54.000
アクセサリーのためのこのような統一されたプロトコルを作成することで、顧客はスマートホームの便利さを簡単に楽しみ、全員が一緒に働くことを知って、自信を持って製品を家に持ち込むことができます。

00:01:54.000 --> 00:02:05.000
これにより、人々が店舗でより多くのアクセサリーを選択でき、世界中の建築業者がそれらを標準として家庭に設置できるようになります。

00:02:05.000 --> 00:02:14.000
これらに動機づけられて、開発者がアクセサリーやアプリの開発でMatterを最も早く使用できるようにしたいと考えています。

00:02:14.000 --> 00:02:24.000
Matterのサポートは、開発者プレビューとしてiOS、iPadOS、tvOS 15でサポートされることをお知らせします。

00:02:24.000 --> 00:02:29.000
今日あなたに紹介したい素晴らしい機能がたくさんあります。

00:02:29.000 --> 00:02:36.000
まず第一に、HomeKitを介してMatterアクセサリーと統合する方法について話しましょう。

00:02:36.000 --> 00:02:44.000
今日、HomeKitアクセサリプロトコルを実装するアクセサリは、HomeKitフレームワークを介してApple Homeと統合されています。

00:02:44.000 --> 00:02:54.000
長年にわたり、私たちはHAPアクセサリーの完全な制御と管理を提供するHomeKitの上に素晴らしい機能を構築してきました。

00:02:54.000 --> 00:03:08.000
MatterアクセサリとApple Homeの統合を検討すると、当然のことながら、Parallel ProtocolとしてMatterをサポートするためにHomeKitフレームワークの責任を拡大することができるという結論に達しました。

00:03:08.000 --> 00:03:20.000
アーキテクチャ的には、これはHomeKitがMatterアクセサリと通信するために、CHIPフレームワークとして知られるオープンソースのMatter実装を呼び出すことを意味します。

00:03:20.000 --> 00:03:28.000
あなたの文脈では、Matterプロジェクトの以前の名前はConnected Home over IP、つまりCHIPでした。

00:03:28.000 --> 00:03:36.000
だからこそ、今日の講演を通して、オープンソースプロジェクトとAPIの両方でCHIPの参照を見ることができます。

00:03:36.000 --> 00:03:41.000
後のリリースでAPIの命名が更新されることを期待しています。

00:03:41.000 --> 00:03:54.000
メイントピックに戻ると、HomeKitが提供するカプセル化により、既存のすべてのApple Home機能がMatterアクセサリでシームレスかつすぐに作業を開始できます。

00:03:54.000 --> 00:04:16.000
たとえば、HAPアクセサリの設定と同じフローを使用してMatterアクセサリを設定し、コントロールセンターでMatterアクセサリを1回下にスワイプするだけで制御し、Siri for Matterアクセサリのステータスとハンズフリーで統合し、すべてのAppleデバイスで制御します。

00:04:16.000 --> 00:04:21.000
しかし、HomeKitの責任は、ファーストパーティの機能をサポートすることだけではありません。

00:04:21.000 --> 00:04:39.000
実際、1日目から、アプリ開発者がアクセサリとの通信プロトコルを実装する負担なしに、顧客のために創造的で楽しいスマートホームアプリを構築するためにHomeKitを活用できるべきだというビジョンを持ってHomeKitを設計しました。

00:04:39.000 --> 00:04:43.000
これはMatterのアクセサリーに引き続き当てはまります。

00:04:43.000 --> 00:04:48.000
HomeKitで使用しているように、既存のAPIを使い続けてください。

00:04:48.000 --> 00:04:55.000
彼らは皆、Matterアクセサリーで作業を開始するだけで、コードの変更は必要ありません。

00:04:55.000 --> 00:04:58.000
アクセサリーのセットアップを例に挙げてみましょう。

00:04:58.000 --> 00:05:05.000
このコードは、今日HomeKitアプリでaddAndSetupAccessories APIを呼び出す方法を示しています。

00:05:05.000 --> 00:05:24.000
iOS 15開発者プレビューでは、このAPIで呼び出すQRコードスキャナは、HAP QRコードで動作するだけでなく、Matter QRコードの認識を開始し、アクセサリのセットアップに使い慣れた一貫した体験を顧客に提供します。

00:05:24.000 --> 00:05:36.000
少し楽しみのために、今年のSwiftのアップデートに細心の注意を払っている人は、Swift並行性の世界で変化が進行中であることを知っています。

00:05:36.000 --> 00:05:46.000
使用したのと同じAPIも、新しいSwift async/awaitパラダイムを介して呼び出すことができるようになったことをお知らせします。

00:05:46.000 --> 00:05:57.000
セットアップに加えて、iOS 15開発者プレビューでは、既存のHomeKit APIを使用して、Matterのアクセサリの状態を読み書きすることもできます。

00:05:57.000 --> 00:06:18.000
さらに、Matterアクセサリーのリモートアクセスとタイムリーな通知を自動的に取得し、HAPアクセサリーで行うのと同じ方法で、シーンとオートメーションAPIを使用してMatterアクセサリーを追加および編集することができます。

00:06:18.000 --> 00:06:22.000
また、未来へのスニークピークを取りましょう。

00:06:22.000 --> 00:06:31.000
Matterプロジェクトが発展し続けるにつれて、ますます多くのアクセサリーカテゴリのサポートを提供することを期待しています。

00:06:31.000 --> 00:06:41.000
私たちは、これらの新しいMatterアクセサリーカテゴリをHomeKitに統合し続け、開発者が簡単に使用できるようにします。

00:06:41.000 --> 00:06:46.000
第二に、HAPはプロトコルとして、カスタム特性をサポートしています。

00:06:46.000 --> 00:06:55.000
これにより、メーカーはアクセサリーを使用して創造的なカスタム機能を構築し、HomeKitを通じてアクセスすることができます。

00:06:55.000 --> 00:06:59.000
Matterは、プロトコルとして、カスタム機能もサポートしています。

00:06:59.000 --> 00:07:07.000
そこで、ここで点をつなげて、HomeKitフレームワークを介してMatterのカスタム機能へのアクセスを提供したいと考えています。

00:07:07.000 --> 00:07:15.000
この機能は後のリリースで提供されるので、お楽しみに、初期の考えがあればお知らせください。

00:07:15.000 --> 00:07:22.000
要するに、私たちはMatterとHomeKitをシームレスに統合することにコミットしています。

00:07:22.000 --> 00:07:32.000
アクセサリー開発者であろうと、HomeKitアプリ開発者であろうと、HomeKitの顧客であろうと、Matter「Just Works」として安心してください。

00:07:32.000 --> 00:07:50.000
HomeKitを使用してMatterアクセサリと統合すると、HomePodやApple TVなどのAppleスマートホームハブのパワーとインテリジェンスのおかげで、安全なリモコンやオートメーションなどの機能を無料で利用できます。

00:07:50.000 --> 00:08:03.000
しかし、顧客がMatterアクセサリーを家庭の他のスマートホームハブと接続するのを手助けする必要がある場合は、iOSアプリからも簡単にできるようにしています。

00:08:03.000 --> 00:08:08.000
次に、クリスに渡して、それについてもっと話します。

00:08:08.000 --> 00:08:10.000
ありがとう、セリーナ。

00:08:10.000 --> 00:08:20.000
今年の開発者プレビューでは、Matterアクセサリとホームハブとの直接接続を確立できる、概念的によく知られた新しいセットアップAPIを構築しています。

00:08:20.000 --> 00:08:24.000
ユーザーエクスペリエンスを探求することから始めましょう。

00:08:24.000 --> 00:08:31.000
ご覧のとおり、この流れは、今日のApple製品とHomeKitアクセサリの両方を設定する方法によく似ています。

00:08:31.000 --> 00:08:37.000
私たちは、お客様がこの流れに精通していることを知っており、彼らがそれを愛していることを知っており、あなたにもその恩恵を受けてほしいと思います。

00:08:37.000 --> 00:08:44.000
これはシステムUIですが、ユーザーが選択した家や部屋はアプリから販売されていることに注意することが重要です。

00:08:44.000 --> 00:08:52.000
あなたのアプリは、必要な操作を完了し、新しいアプリ拡張タイプを介して設定するために要求された情報を提供する責任があります。

00:08:52.000 --> 00:08:56.000
これを一歩ずつ解き明かしましょう。

00:08:56.000 --> 00:09:02.000
セットアップを開始する前に、アプリは管理するホームを表すトポロジオブジェクトを作成します。

00:09:02.000 --> 00:09:06.000
次に、このトポロジオブジェクトを新しいセットアップAPIに渡します。

00:09:06.000 --> 00:09:11.000
この時点で、セットアップが開始され、Matter QRコードをスキャンする準備が整いました。

00:09:11.000 --> 00:09:14.000
これは呼び出しのコード例です。

00:09:14.000 --> 00:09:20.000
ご覧のとおり、このAPIは概念的には、アクセサリのセットアップ用の既存のHomeKit APIと非常によく似ています。

00:09:20.000 --> 00:09:30.000
主な違いは、アプリが管理するホームのセットアップを通知するために使用されるHMCHIPServiceTopologyオブジェクトの追加です。

00:09:30.000 --> 00:09:39.000
ユーザーがスキャナーでMatter QRコードをスキャンすると、セットアップは検出されたアクセサリのカテゴリを示す検出されたカードに自動的に進みます。

00:09:39.000 --> 00:09:46.000
この例では、ユーザーにアプリにアクセサリを追加するオプションが表示されます。

00:09:46.000 --> 00:09:54.000
ユーザーがアクセサリをホームハブに接続することを選択したら、どの特定のホームに追加するかを指定する必要があるかもしれません。

00:09:54.000 --> 00:10:00.000
複数のホームで構成されるトポロジでセットアップを開始した場合に、この画面を提示します。

00:10:00.000 --> 00:10:06.000
トポロジが1つのホームのみで構成されている場合、ユーザーの意図はすでに知られているため、このカードはスキップされます。

00:10:06.000 --> 00:10:14.000
ユーザーがホームを選択すると、iOSは拡張機能に、スキャンしたアクセサリのマターペイロードとペアリングするように要求を送信します。

00:10:14.000 --> 00:10:20.000
拡張機能は、原則HMCHIPServiceRequestHandlerサブクラスを介してこの要求に応答します。

00:10:20.000 --> 00:10:28.000
呼び出されたら、CHIPフレームワークAPIを使用して、Matterアクセサリとホームハブの間に安全なペアリングを作成します。

00:10:28.000 --> 00:10:35.000
次に、iOSは、選択したホームに対応する部屋のリストを拡張機能から要求します。

00:10:35.000 --> 00:10:38.000
これらの部屋は、ユーザー選択のためにUIで表示されます。

00:10:38.000 --> 00:10:41.000
拡張機能でこの要求に応答するコードは簡単です。

00:10:41.000 --> 00:10:47.000
ペア要求と同様に、拡張機能の原則HMCHIPServiceRequestHandlerサブクラスを中心に展開します。

00:10:47.000 --> 00:10:54.000
この機能を実装し、ユーザーが選択したホームに一致する対応する部屋を返すだけです。

00:10:54.000 --> 00:11:03.000
ユーザーがアクセサリの名前と部屋を選択したら、その情報を拡張機能に提供し、アクセサリの設定を依頼します。

00:11:03.000 --> 00:11:13.000
他のリクエストタイプと同様に、拡張機能はCHIPフレームワークAPIを使用してアクセサリを直接設定することで、設定リクエストに応答します。

00:11:13.000 --> 00:11:26.000
最後に、アクセサリがアプリ用に完全に構成された後、ユーザーはApple Homeアプリ、コントロールセンター、およびSiriを使用してこのアクセサリを制御する機会も提供されます。

00:11:26.000 --> 00:11:31.000
ここで再び完全に収集されたのは、あなたの拡張機能が実装することを期待するコードです。

00:11:31.000 --> 00:11:38.000
ルームリクエスト、ペアアクセサリーリクエスト、アクセサリー設定リクエストの3つのシンプルな機能。

00:11:38.000 --> 00:11:46.000
HMCHIPServiceRequestHandlerをサブクラス化し、これらのメソッドをオーバーライドすると、残りのセットアップエクスペリエンスは開発者の観点から本質的に自由になります。

00:11:46.000 --> 00:11:53.000
UIプレゼンテーション、ステップ間の遷移、エラー処理などは、すべてあなたのために処理されます。

00:11:53.000 --> 00:12:01.000
これにより、書く必要のあるコードの量が大幅に削減されると同時に、ユーザーに真に一流の体験を提供します。

00:12:01.000 --> 00:12:12.000
これまでのところ、既存のHomeKit APIを使用してMatterアクセサリと統合する方法と、Matterアクセサリを別のスマートホームハブに接続する必要がある場合は新しいAPIについて話しました。

00:12:12.000 --> 00:12:18.000
Matterアクセサリ開発者の場合は、ファームウェア開発の目的でプロトコル自体にも精通する必要があります。

00:12:18.000 --> 00:12:27.000
次に、同僚のSagarがMatterプロトコルのツアーに参加し、MatterとHAPの類似点を紹介します。

00:12:27.000 --> 00:12:29.000
ありがとう、クリス。

00:12:29.000 --> 00:12:31.000
Matterデータモデルから始めましょう。

00:12:31.000 --> 00:12:36.000
Every Matterアクセサリーは、Matterデータモデルを介してその機能を公開します。

00:12:36.000 --> 00:12:40.000
エンドポイントを使用して、上からこれらの機能に個別に対処できます。

00:12:40.000 --> 00:12:44.000
エンドポイントは、アクセサリの論理的に別々の機能と考えることができます。

00:12:44.000 --> 00:12:53.000
ほとんどのアクセサリーには、これらの2つしかありません。1つは名前、ベンダー、モデルなどの情報用で、もう1つはアクセサリーの主な機能、例えばライト用です。

00:12:53.000 --> 00:12:56.000
各エンドポイントは、その中に複数のクラスターを持つことができます。

00:12:56.000 --> 00:13:00.000
各クラスターは、そのエンドポイントの特定の機能を表します。

00:13:00.000 --> 00:13:07.000
私たちの光の例では、その光の終点には、明るさ、色、および電力制御のためのクラスターがあるかもしれません。

00:13:07.000 --> 00:13:14.000
HomeKitに精通している私たちにとって、クラスターはHomeKitサービスと同等と考えることができます。

00:13:14.000 --> 00:13:17.000
次に、クラスターの中に何があるかを見ていきます。

00:13:17.000 --> 00:13:19.000
クラスターは1つ以上の属性を持つことができます。

00:13:19.000 --> 00:13:22.000
各属性は、アクセサリの状態を表します。

00:13:22.000 --> 00:13:29.000
私たちの光の例では、光の明るさクラスターには、光の明るさを読み、制御できる属性があります。

00:13:29.000 --> 00:13:36.000
繰り返しますが、Matterの属性はHomeKitの特性と同等であると考えることができます。

00:13:36.000 --> 00:13:43.000
最後に、ここでは、各属性が読み取り、書き込み、レポートに至るまでの一連のアクションをサポートする可能性があることがわかります。

00:13:43.000 --> 00:13:51.000
私たちの軽い例では、ライトがオンまたはオフになるたびにアクセサリから通知を受け取るために、オンオフクラスターでレポートを有効にしたい場合があります。

00:13:51.000 --> 00:13:59.000
Matterは通常、その機能に基づいて各属性を設定し、対話するためのAPIの幅広い選択を提供します。

00:13:59.000 --> 00:14:06.000
先ほどお話ししたこれらの概念は、オープンソースのCHIPフレームワークに実装されており、Appleは主要な貢献者の1つです。

00:14:06.000 --> 00:14:14.000
Selinaが先に述べたように、CHIPはMatterに改名されましたが、フレームワークとコードは将来のリリースで更新される予定です。

00:14:14.000 --> 00:14:27.000
完全に認定されたバージョンのCHIPフレームワークはiOSで配布され、HomeKitとMatterアクセサリとの統合が可能になり、アプリで使用する必要がある場合はオープンソースAPIへのアクセスも提供されます。

00:14:27.000 --> 00:14:31.000
CHIPフレームワークを使用して軽いアクセサリーと対話する例を見てみましょう。

00:14:31.000 --> 00:14:36.000
これは、先ほど調べたマターデータモデルの中核的な概念を行使します。

00:14:36.000 --> 00:14:40.000
共有されたCHIPControllerにアクセスすることから始めます。

00:14:40.000 --> 00:14:43.000
このコントローラーは、マターへの私たちの主なハンドルです。

00:14:43.000 --> 00:14:49.000
次に、ペアリング中に割り当てたデバイスIDを使用して、ライトのハンドルを取得します。

00:14:49.000 --> 00:14:54.000
次に、ライトエンドポイントのオンオフクラスターにハンドルを初期化します。

00:14:54.000 --> 00:15:00.000
そして今、このオンオフクラスターでは、オンオフ属性の読み取りと書き込みを実行できます。

00:15:00.000 --> 00:15:05.000
まず、ライトの状態を切り替えるだけのオンオフ属性を切り替えるように要求します。

00:15:05.000 --> 00:15:09.000
次に、オンオフ属性の状態を読み取るように要求します。

00:15:09.000 --> 00:15:16.000
その後、アクセサリは属性のステータスを含む応答を送信し、アプリケーションを更新するために使用できます。

00:15:16.000 --> 00:15:19.000
だから、それはCHIPフレームワークの簡単な外観です。

00:15:19.000 --> 00:15:29.000
今日のセッションを終える前に、Matterで導入された新しいコンセプトについて説明し、それを活用するホームアプリで導入したいくつかの新機能を紹介したいと思います。

00:15:29.000 --> 00:15:36.000
すでにご存知かもしれませんが、Matterプロトコルを使用すると、複数の管理者が同時にアクセサリに接続できます。

00:15:36.000 --> 00:15:44.000
これは、顧客に選択肢を提供するための優れた機能ですが、アクセサリー管理に関しても課題をもたらします。

00:15:44.000 --> 00:15:47.000
ホームアプリがこれをどのように組み込んでいるかを見てみましょう。

00:15:47.000 --> 00:15:55.000
ホームアプリは、この新しいコネクテッドサービスセクションの下で、アクセサリに接続されたすべての管理者のリストを表示できるようになりました。

00:15:55.000 --> 00:16:00.000
ユーザーは、接続された管理者を管理するオプションも与えられます。

00:16:00.000 --> 00:16:08.000
そして最後に、ユーザーはペアリングモードを再度オンにして、新しい管理者がアクセサリに接続できるようにするオプションがあります。

00:16:08.000 --> 00:16:19.000
ここでの目標はシンプルです。お客様が自分に最適なものを選択する自由を確保し、スマートホームアクセサリーがどのように管理されているかを伝える自信を確保したいと考えています。

00:16:19.000 --> 00:16:30.000
したがって、MatterサポートはまずiOS、iPadOS、tvOS 15の開発者プレビューで利用可能になり、それを有効にするにはこれらのプラットフォームに開発者プロファイルをインストールする必要があります。

00:16:30.000 --> 00:16:36.000
また、HomeKit経由でMatterアクセサリーを制御するためのホームハブも必要です。

00:16:36.000 --> 00:16:49.000
Matterが市場で入手可能になったら、資格のあるベンダーIDと認定製品IDを公開することを期待していますが、開発者プレビューでサンプルベンダーIDと製品IDのリストを提供し、開発を容易にします。

00:16:49.000 --> 00:16:57.000
これらのIDは、開発者プレビューですでにサポートされているMatterアクセサリカテゴリを表すように事前に設定されています。

00:16:57.000 --> 00:17:02.000
いつものように、developer.apple.comで当社のAPIに関する詳細情報を見つけることができます。

00:17:02.000 --> 00:17:10.000
また、MatterオープンソースAPIとMatterアクセサリの定義の詳細については、Githubで見つけることができます。

00:17:10.000 --> 00:17:18.000
したがって、結論として、アクセサリ開発者、HomeKitアプリ、およびHomeKitユーザー向けに、HomeKitを介してシームレスなMatterサポートを提供します。

00:17:18.000 --> 00:17:25.000
Matterアクセサリーを他のスマートホームハブに接続する必要がある開発者向けに、今後のシードに新しいセットアップAPIがあります。

00:17:25.000 --> 00:17:32.000
そして、これらすべては、iOS、iPadOS、tvOS 15の開発者プレビューから利用可能になります。

00:17:32.000 --> 00:17:35.000
見てくれてありがとう、そして私のチームと私から、さようなら。

00:17:35.000 --> 23:59:59.000
[パーカッシブミュージック]。

