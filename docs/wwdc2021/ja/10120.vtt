WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:11.000
ソマー・パネージ:こんにちは、私の名前はソマー・パネージです。

00:00:11.000 --> 00:00:16.000
今日、iOSのフルキーボードアクセスについてお話しできることを嬉しく思います。

00:00:16.000 --> 00:00:21.000
フルキーボードアクセスは、運動障害をお持ちのお客様のための機能です。

00:00:21.000 --> 00:00:28.000
では、今日から、iOSの一般的なモーターアクセシビリティの概要を簡単に説明します。

00:00:28.000 --> 00:00:36.000
その後、フルキーボードアクセスと、特にiPadでユーザーにもたらすすべてのパワーを詳しく見ていきます。

00:00:36.000 --> 00:00:48.000
そして最後に、開発者として、キーボードユーザーをサポートしていることを確認するためにアプリケーションを構築する際に必ず心に留めておくべき主要なAPIと原則を掘り下げます。

00:00:48.000 --> 00:00:53.000
では、モーターアクセシビリティのレビューから始めましょう。

00:00:53.000 --> 00:00:59.000
iOS用のアクセシブルなアプリの開発について話し合うときは、すべてのユーザーを念頭に置いておきたい。

00:00:59.000 --> 00:01:05.000
私たちはしばしば、盲目や弱視の人のための技術であるVoiceOverの観点からアクセシビリティについて話します。

00:01:05.000 --> 00:01:12.000
ただし、当社のソフトウェアが運動障害のある人でも機能することを確認することも重要です。

00:01:12.000 --> 00:01:19.000
運動障害は幅広い用語であり、誰かが多くの方法でiOSデバイスを使用する方法に影響を与える可能性があります。

00:01:19.000 --> 00:01:22.000
可動域が限られている人もいるかもしれません。

00:01:22.000 --> 00:01:29.000
他の人は、振戦や画面に触れる他の困難など、より細かい運動障害を持っているかもしれません。

00:01:29.000 --> 00:01:42.000
また、運動障害の重症度に応じて、多くの人々は、キーボード、ジョイスティック、ボタンなどの外部ハードウェアを介してデバイスと対話する方が簡単または必要であると感じています。

00:01:42.000 --> 00:01:50.000
iOSは、運動障害のある人がデバイスをシームレスに体験できるように、数多くの支援技術を提供しています。

00:01:50.000 --> 00:01:58.000
たとえば、ハードウェアのインタラクションやマルチタッチジェスチャーに問題があるかもしれない人のために、AssistiveTouchを提供しています。

00:01:58.000 --> 00:02:06.000
AssistiveTouchは、画面上のメニューを使用して、これらのインタラクションを簡単なシングルタップに簡素化します。

00:02:06.000 --> 00:02:15.000
スイッチコントロールを使用すると、運動能力が制限されている人は、1つ以上の外部スイッチまたはボタンを使用してiOSデバイスと対話できます。

00:02:15.000 --> 00:02:22.000
そしてもちろん、音声コントロールもあり、人々は自分の声だけでiOSデバイスと対話することができます。

00:02:22.000 --> 00:02:28.000
そして、それは私たちの最新のモーター技術の1つであるフルキーボードアクセスに私たちをもたらします。

00:02:28.000 --> 00:02:35.000
iOSはiOS 9以降、キーボードのサポートを提供してきましたが、追加の入力モードとなっています。

00:02:35.000 --> 00:02:44.000
iOS 13.4.1でリリースされたフルキーボードアクセスにより、お客様はキーボードを介して100%デバイスと対話できるようになりました。

00:02:44.000 --> 00:02:57.000
これは、画面に触れるのに十分な器用さがないかもしれないが、必ずしも外部スイッチを必要としない、または使用したくない人のためのAssistiveTouchとスイッチコントロールの中間です。

00:02:57.000 --> 00:03:10.000
また、非言語的、言語障害、または単に音声コントロールの使用が意味をなさない環境にいる可能性のある人のために、音声コントロールの代替手段を提供します。

00:03:10.000 --> 00:03:21.000
フルキーボードアクセスは、片手キーボードやこの人間工学に基づいたスプリットキーボードなどのカスタムまたはアクセス可能なキーボードレイアウトに依存する人にも最適です。

00:03:21.000 --> 00:03:31.000
フルキーボードアクセスは、タッチスクリーンなしで人々に真のiOS体験を提供するために、基本的なキーボード入力に多数の追加を提供します。

00:03:31.000 --> 00:03:43.000
フルキーボードアクセスにはナビゲーションコマンドもあり、ユーザーは画面上のすべての要素、インタラクションコマンド、ドラッグアンドドロップなどのジェスチャーモードにアクセスできます。

00:03:43.000 --> 00:03:47.000
そして、これらのコマンドはすべて、修飾キーとしてTabを使用します。

00:03:47.000 --> 00:03:53.000
しかし、彼らはまた、異なるキーコンボを好むかもしれない人々のために完全にカスタマイズ可能です。

00:03:53.000 --> 00:04:00.000
それでは、ユーザーがフルキーボードアクセスを使用してiPadでどのようにナビゲートするかを見てみましょう。

00:04:00.000 --> 00:04:05.000
まず、矢印キーを使用してメモアプリとスペースバーに移動して有効にすることができます。

00:04:05.000 --> 00:04:12.000
そこから、タブで新しいメモを作成し、すぐに編集できます。

00:04:12.000 --> 00:04:17.000
シェイプシャッフルと呼ばれる私のアプリの1つからバージョン2についてメモを取ると思います。

00:04:17.000 --> 00:04:21.000
iPadで素晴らしいものにしましょう。

00:04:21.000 --> 00:04:30.000
編集が終わったら、Control-Tabを使って編集モードから抜け出すことができます。

00:04:30.000 --> 00:04:38.000
古いメモを削除したい場合は、Tab-Zを使用してアクションのリストを表示できます。

00:04:38.000 --> 00:04:44.000
その後、矢印とスペースを使ってメモを削除できます。

00:04:44.000 --> 00:04:47.000
さて、もう1つ新しいメモを作りたいとしましょう。

00:04:47.000 --> 00:04:55.000
さて、私は再びメモの作成ボタンにタブオーバーするか、タブFを使用して検索機能を使用することができます。

00:04:55.000 --> 00:05:00.000
それから私は「new」と入力するだけで、そこに行きます。

00:05:00.000 --> 00:05:13.000
だから、フルキーボードアクセスとその使用方法についてすべて知っているので、アプリ開発者として、キーボードユーザーが可能な限り最高の体験をできるようにする方法を調べる時が来ました。

00:05:13.000 --> 00:05:21.000
2020年、私はスイッチコントロールについてあなたと話しました、そして、私たちは子供たちが形、色、数字を学ぶためのこの楽しいゲームに取り組みました。

00:05:21.000 --> 00:05:24.000
一緒に、私たちはこのアプリをアクセシブルにしました。

00:05:24.000 --> 00:05:32.000
今年は、フルキーボードアクセスでうまく機能することを確認できるように、iPad用のShape Shuffleを改訂することにしました。

00:05:32.000 --> 00:05:34.000
まだシェイプシャッフルを見ていないなら、心配しないでください。

00:05:34.000 --> 00:05:36.000
これは簡単なツアーです。

00:05:36.000 --> 00:05:42.000
各レベルで、プレイヤーはここで見られるようなプロンプトを受け取ります:2つの黄色の正方形。

00:05:42.000 --> 00:05:53.000
次に、以下のカードをタップして、必要な3枚のカードを見つける必要があります。この場合、2つのオブジェクトを持つカード、正方形のカード、イエローカード。

00:05:53.000 --> 00:05:57.000
それぞれの正しいカードをダブルタップすると、次のレベルに進むことができます。

00:05:57.000 --> 00:06:01.000
そして、レベルが上がるにつれて、プロンプトは難しくなります。

00:06:01.000 --> 00:06:08.000
2つ見つけたようなので、ダブルタップしてボードに追加し、黄色と正方形の検索を続けることができます。

00:06:08.000 --> 00:06:17.000
さて、カードが正しいかどうかわからない場合は、長押ししてピンを入れることができるので、後で戻ってくることができます。

00:06:17.000 --> 00:06:20.000
左下のこの2つにピンを入れます。

00:06:20.000 --> 00:06:25.000
その後、私が戻ったとき、私は最終的な選択をして、レベルを打つことができます。

00:06:25.000 --> 00:06:31.000
うーん...わかった！

00:06:31.000 --> 00:06:38.000
さて、ゲームプレイビューから始めて、別のラウンドをプレイするときに物事がどのように機能するかを見てみましょうが、今回はキーボードを介して。

00:06:38.000 --> 00:06:42.000
だから、タブとスペースバーを押すと、物事はうまくいっているようです。

00:06:42.000 --> 00:06:46.000
タブでカード間を移動し、スペースで反転することができます。

00:06:46.000 --> 00:06:51.000
では、トライアングルカードを追加またはピン留めしてみましょう。

00:06:51.000 --> 00:06:56.000
Tab-Zを押してアクションメニューを表示しますが、利用可能なアクションが表示されません。

00:06:56.000 --> 00:07:05.000
さて、実際には、追加やピンなど、ユーザーがゲームで一般的なアクションにすばやくアクセスできるように対処できる2つの方法があります。

00:07:05.000 --> 00:07:09.000
これを解決できる最初の方法は、カスタムアクションです。

00:07:09.000 --> 00:07:13.000
カスタムアクションは、多くの支援技術に翻訳されるため、素晴らしいです。

00:07:13.000 --> 00:07:21.000
何かにカスタムアクションを追加すると、VoiceOver、スイッチコントロール、フルキーボードアクセスに表示されます。

00:07:21.000 --> 00:07:25.000
カスタムアクションは、Tab-Zを押すと表示されるものです。

00:07:25.000 --> 00:07:38.000
ご覧のように、追加したいアクションのUIAccessibilityCustomActionを作成し、それらをcardViewのaccessibilityCustomActions配列に設定するだけです。

00:07:38.000 --> 00:07:41.000
また、画像を追加することは常に素晴らしいことです。

00:07:41.000 --> 00:07:47.000
これらの画像はフルキーボードアクセスには表示されませんが、スイッチコントロールには表示されます。

00:07:47.000 --> 00:07:50.000
カスタムアクションが追加された私のUIは次のようになります。

00:07:50.000 --> 00:07:56.000
Tab-Zを押すと、カードを追加したりピン留めしたりできるこの素敵なポップオーバーが見えます。

00:07:56.000 --> 00:08:04.000
カスタムアクションは、アクセシビリティ機能を使用している人に最適です。しかし、ここで取ることができる別の本当にクールなアプローチがあります。

00:08:04.000 --> 00:08:07.000
カスタムキーボードショートカットを追加できます。

00:08:07.000 --> 00:08:20.000
カスタムキーボードショートカットの良いところは、フルキーボードアクセスユーザーだけでなく、デバイスでキーボードを使用しているだけで、フルキーボードアクセスがオンになっていないユーザーの両方に機能することです。

00:08:20.000 --> 00:08:24.000
アクセシビリティにもパワーユーザーにも最適です。

00:08:24.000 --> 00:08:29.000
キーボードショートカットのリストを表示するには、Commandキーを押したままにするだけで済みます。

00:08:29.000 --> 00:08:38.000
今年の講演「iPadアプリを次のレベルに引き上げる」では、iPadのキーボードショートカットなどについて学ぶことができます。

00:08:38.000 --> 00:08:50.000
今日は、Mac Catalyst 13で新しく、現在iOSとiPadOS 15にもたらされたこのAPIを活用する方法の簡単な例を紹介します。

00:08:50.000 --> 00:09:01.000
AppDelegateでbuildMenuをオーバーライドすることで、キーコマンドを設定できます。ここでは2つのUIKeyCommandsを作成します。1つは追加アクション用、もう1つはピンアクション用です。

00:09:01.000 --> 00:09:08.000
Commandキーを押したままにすると、KeyCommand HUDに表示されるので、発見可能性のタイトルを必ず追加します。

00:09:08.000 --> 00:09:16.000
次に、「ゲームプレイ」という名前の新しいUIメニューを作成し、新しいコマンドを「子供」として渡します。

00:09:16.000 --> 00:09:22.000
最後に、メニュービルダーにメニューを挿入して、完了です!

00:09:22.000 --> 00:09:36.000
さて、実際に選択したカードを持っている場合にのみ、これらのアイテムをHUDでアクティブにしたいので、GameViewControllerでcanPerformActionをオーバーライドして、カードが実際に選択されたときにのみこれらのアイテムを表示します。

00:09:36.000 --> 00:09:42.000
コマンドキーを押したまま、カードが選択されているとき、私たちのゲームは次のようになります。

00:09:42.000 --> 00:09:47.000
そしてここで、フルキーボードアクセスの開発の重要な原則を強調したいと思います。

00:09:47.000 --> 00:09:56.000
ユーザーの効率を向上させるために、すべての一般的なアクションにカスタムアクションとキーボードショートカットを追加してみてください。

00:09:56.000 --> 00:10:05.000
どちらも簡単に見つけられるだけでなく、キーボードを介してアプリを操作する人の体験を向上させます。

00:10:05.000 --> 00:10:07.000
私たちのゲームに戻りましょう。

00:10:07.000 --> 00:10:09.000
新しいアクションで三角形を追加しました。

00:10:09.000 --> 00:10:13.000
次に、Shift-Tabを使用してホームボタンに戻ります。

00:10:13.000 --> 00:10:17.000
しかし、それをやっていると、別の問題が見られます。

00:10:17.000 --> 00:10:23.000
その三角形は、スペースバーでタップしても何も起こりませんが、選択可能です。

00:10:23.000 --> 00:10:28.000
まず第一に、私たちがそれと対話できないのに、なぜ私たちのカーソルはこの要素に行くのですか?

00:10:28.000 --> 00:10:33.000
さて、私はすでにこのアプリでいくつかのVoiceOverサポート作業をしました、そしてこれがどのように見えるかです。

00:10:33.000 --> 00:10:41.000
私のアイテムでisAccessibilityElementをtrueに設定し、accessibilityLabelを与えていることがわかります。

00:10:41.000 --> 00:10:46.000
VoiceOverは各アイテムをユーザーに読み上げる必要があるため、これは素晴らしいことです。

00:10:46.000 --> 00:10:54.000
ただし、誰かがフルキーボードアクセスユーザーのみの場合、カーソルはisAccessibilityElementでマークされた多くのアイテムにも移動します。

00:10:54.000 --> 00:11:00.000
フルキーボードアクセスにこの要素をスキップするように指示するには、もう1行追加する必要があります。

00:11:00.000 --> 00:11:06.000
ここでは、accessibilityResponds ToUserInteractionをfalseに設定していることがわかります。

00:11:06.000 --> 00:11:12.000
これは、これがアクセシビリティ要素であるが、ユーザーが対話できるものではないことをシステムに伝えます。

00:11:12.000 --> 00:11:19.000
したがって、フルキーボードアクセスやスイッチコントロールなどのモーター技術のカーソルはスキップする必要があります。

00:11:19.000 --> 00:11:27.000
アクセシビリティ RespondsToUserInteraction は、isAccessibilityElement がすでに真である場合にのみ意味があることに注意してください。

00:11:27.000 --> 00:11:34.000
デフォルトでは、システムはisAccessibilityElement trueで要素をインタラクティブかどうかを正しく設定しようとします。

00:11:34.000 --> 00:11:48.000
ほとんどの場合、VoiceOverにはアクセスしたいオブジェクトがあるが、フルキーボードアクセスやその他のモーター技術にはアクセスできないオブジェクトがある場合、accessibilityResponds ToUserInteractionをfalseに設定するだけで済みます。

00:11:48.000 --> 00:11:54.000
これは、フルキーボードアクセスの開発の2番目の重要な原則に私たちをもたらします。

00:11:54.000 --> 00:12:02.000
アプリをテストするときには、カーソルがユーザーが操作できるアイテムにのみ表示されることを確認する必要があります。

00:12:02.000 --> 00:12:12.000
さて、アプリを構築し、フォーカスが正しい場所にしか行かないようにしているので、先ほど説明したAPIではなく、canBecomeFocusedをオーバーライドしたくなるかもしれません。

00:12:12.000 --> 00:12:21.000
ただし、これはフォーカスエンジン全体のフォーカス動作を上書きし、フルキーボードアクセスがオンになっていないときにタブを使用してナビゲートする人々に影響を与えます。

00:12:21.000 --> 00:12:28.000
したがって、フルキーボードアクセスユーザーの動作を変更したい場合のみ、これを避けるのが最善です。

00:12:28.000 --> 00:12:31.000
実際、これは重要な分野をもたらします。

00:12:31.000 --> 00:12:40.000
フルキーボードアクセスを駆動するために使用されるフォーカスシステムは、iPadOSのようなすべてのOSでタブナビゲーションを駆動するのと同じものです。

00:12:40.000 --> 00:12:48.000
フルキーボードアクセスで作業するために触る必要はありませんが、もっと知りたい場合は、これら3つの講演をお勧めします。

00:12:48.000 --> 00:12:57.000
今年は、「iPadキーボードナビゲーションに焦点を当てる」と「SwiftUIのフォーカスを直接反映する」という他の2つの講演があります。

00:12:57.000 --> 00:13:04.000
そして2017年には、フォーカスエンジンがtvOSをどのように駆動するかについて素晴らしい話があります。

00:13:04.000 --> 00:13:11.000
さて、ホーム画面に戻ると、フルキーボードアクセスの素晴らしい検索機能を使用できることを確認したいと思います。

00:13:11.000 --> 00:13:13.000
では、試してみましょう。

00:13:13.000 --> 00:13:17.000
さて、数のレベルは箱から出してすぐにうまく機能します。

00:13:17.000 --> 00:13:22.000
レベル8と12を検索するのは簡単です。

00:13:22.000 --> 00:13:28.000
そして、私はすでにいくつかのVoiceOverサポートを追加したので、私も検索で設定ボタンを取得しています。

00:13:28.000 --> 00:13:32.000
しかし、ボタンが設定と呼ばれていることを知らなかったらどうなりますか?

00:13:32.000 --> 00:13:36.000
「Preferences」または「prefs」と入力するかもしれません。

00:13:36.000 --> 00:13:38.000
うーん。運がない。

00:13:38.000 --> 00:13:44.000
これを解決するために、accessibilityUserInputLabelsに文字列の配列を設定できます。

00:13:44.000 --> 00:13:55.000
ここでは、好み、好み、ギア、および設定のローカライズされた単語をこのラベルに設定して、人々が何をタイプしてもそれに到達できるようにしています。

00:13:55.000 --> 00:14:04.000
これらの文字列を追加することで、これらの名前のいずれかを話して設定ボタンをタップできるようになったので、音声コントロールユーザーにも好意を寄せることができます。

00:14:04.000 --> 00:14:08.000
もちろん、これはあなたのVoiceOverラベルに干渉しません。

00:14:08.000 --> 00:14:15.000
だから今、「prefs」と入力すると、うまくいきます!

00:14:15.000 --> 00:14:19.000
そして、これは今日の私たちの3番目と最後の原則に私をもたらします。

00:14:19.000 --> 00:14:29.000
ユーザーがFindでいつでもすばやくアクセスできるように、画像ベースのコントロールにできるだけ多くのラベルを常に提供してください。

00:14:29.000 --> 00:14:33.000
さて、終わる前に、少し楽しいポリッシュをしたいです。

00:14:33.000 --> 00:14:36.000
では、私のホーム画面をもう一度見てみましょう。

00:14:36.000 --> 00:14:40.000
これらのアイテムはすべてUIボタンなので、タブは自然にそれらに移動しています。

00:14:40.000 --> 00:14:42.000
そして、それは素晴らしいことです。

00:14:42.000 --> 00:14:45.000
しかし、私のカーソルが常に長方形であることに注目してください。

00:14:45.000 --> 00:14:50.000
物事をより遊び心のあるものにするために、ボタンの形に合わせましょう。

00:14:50.000 --> 00:14:59.000
ボタンの周りに素敵なカーソル形状を表示するには、accessibilityPathを使用できます。実際、VoiceOverに使用するのと同じaccessibilityPathです。

00:14:59.000 --> 00:15:06.000
静的ビューの場合、UIBezierPathを使用して、accessibilityPathを図形自体のそれに設定できます。

00:15:06.000 --> 00:15:11.000
画面座標でaccessibilityPathを設定していることに注意してください。

00:15:11.000 --> 00:15:20.000
スクロールビューにいる場合は、accessibilityPathをオーバーライドして、スクロールしているときでも、画面の座標に対して常に正しいようにします。

00:15:20.000 --> 00:15:24.000
この少しのポリッシュがどれほど楽しく見えるかを見てみましょう。

00:15:24.000 --> 00:15:33.000
タブスルーすると、円、三角形、正方形が見えます。

00:15:33.000 --> 00:15:37.000
そして、VoiceOverでも同じです。

00:15:37.000 --> 00:15:46.000
そのために、キーボード、特にフルキーボードアクセス用のアプリを開発する際に留意すべき重要なアイデアのいくつかを確認しましょう。

00:15:46.000 --> 00:15:55.000
まず、カスタムアクションとキーボードショートカットを使用して、アプリをナビゲートするための効率的な手段を追加します。

00:15:55.000 --> 00:16:01.000
次に、ユーザーが実際に操作できないアイテムにカーソルが着地しないことを確認します。

00:16:01.000 --> 00:16:13.000
そして最後に、人々がフルキーボードアクセスの検索機能を最大限に活用できるように、特に画像ベースのコントロールにユーザー入力ラベルを追加するようにしてください。

00:16:13.000 --> 00:16:15.000
そして、それがすべてです!

00:16:15.000 --> 00:16:21.000
今日、あなたがAppleのすべての製品におけるモーターアクセシビリティの重要性を理解していることを願っています。

00:16:21.000 --> 00:16:28.000
私たちのデバイスと対話する方法は数多くありますが、キーボードはユーザーにとって強力なツールとなっています。

00:16:28.000 --> 00:16:37.000
この講演の情報により、アプリがフルキーボードアクセスユーザーとすべての人に優れた体験を提供することを確信できるはずです。

00:16:37.000 --> 00:16:42.000
ありがとう、そして素晴らしいWWDC 2021を。

00:16:42.000 --> 23:59:59.000
♪

