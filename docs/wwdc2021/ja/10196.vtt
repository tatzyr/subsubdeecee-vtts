WEBVTT

00:00:02.000 --> 00:00:13.000
こんにちは。私の名前はルーク・ラーソンで、Xcodeのエンジニアです。

00:00:13.000 --> 00:00:16.000
後で、同僚のYoussef Elabdが加わります。

00:00:16.000 --> 00:00:26.000
Interface Builderは、コードを書かずにアプリのユーザーインターフェイスを視覚的に構築するためのシンプルで直感的な方法を提供し、開発者がアプリを際立たせる上で重要なことに集中できるようにします。

00:00:26.000 --> 00:00:38.000
今日は、Xcode 13のInterface Builderの新機能を紹介します。新しいシステムが提供するコントロールスタイルを含む最新のプラットフォーム機能をこれまで以上に簡単に利用し、アプリをさらに際立たせます。

00:00:38.000 --> 00:00:51.000
このビデオでは、インターフェイスビルダーキャンバスの改善と、ボタンスタイル、テーブルコンテンツスタイル、階層記号、およびアクセシビリティのオーサリングサポートについて説明します。

00:00:51.000 --> 00:00:54.000
キャンバスの改善から始めましょう。

00:00:54.000 --> 00:01:02.000
Xcode 13のInterface Builderで最初に気付くことの1つは、完全に再設計されたキャンバスのボトムバーです。

00:01:02.000 --> 00:01:10.000
バーの左側にあるコントロールは、以前と同じ機能を提供しますが、よりコンパクトな形で、キャンバスのためのより多くのスペースを確保します。

00:01:10.000 --> 00:01:18.000
グループで整理されたさまざまなデバイスを含むデバイスを選択するためのポップオーバーがあります。

00:01:18.000 --> 00:01:26.000
別のデバイスグループをクリックすると展開され、前のグループが折りたたむので、探しているデバイスを見つけやすくなります。

00:01:26.000 --> 00:01:36.000
また、シーンのレイアウト、向き、外観、およびビデオの後半で表示するまったく新しいアクセシビリティオプションを設定するためのボタンもあります。

00:01:36.000 --> 00:01:39.000
その他の改善には、キャンバスアウトラインビューの改良が含まれます。

00:01:39.000 --> 00:01:42.000
そして、それらを示すために、Interface Builderに飛び込みましょう。

00:01:42.000 --> 00:01:51.000
ホテルアプリで予約シーンに取り組んでいますが、左側のアウトラインビューのプロモーションシーンの横に配置されていないことに気づきました。

00:01:51.000 --> 00:01:55.000
予約シーンはプロモーションシーンに続くので、それは私が期待していることです。

00:01:55.000 --> 00:02:02.000
ドラッグアンドドロップを使用して、アウトラインビューで1つ以上の選択したシーンを移動および再配置できるようになりました。

00:02:02.000 --> 00:02:09.000
だから、予約シーンを下にドラッグして、プロモーションシーンのすぐ上に配置します。

00:02:09.000 --> 00:02:14.000
すごい。これで、2つのシーンは隣同士に配置され、移動しやすくなっています。

00:02:14.000 --> 00:02:19.000
Optionキーを押しながらドラッグすることで、シーン全体をコピーすることもできます。

00:02:19.000 --> 00:02:29.000
アウトラインビューのもう1つの改良は、制約のようなアウトライングループが選択可能になり、キーボードナビゲーションやオブジェクトのグループ全体の簡単な変更や削除を可能にすることです。

00:02:29.000 --> 00:02:34.000
これを表示するには、アウトラインビューで制約グループを選択します。

00:02:34.000 --> 00:02:37.000
これは、グループ内のすべての制約を選択するのと同じです。

00:02:37.000 --> 00:02:41.000
右矢印キーを押して、グループに含まれる4つのエッジ制約を明らかにします。

00:02:41.000 --> 00:02:53.000
これで、インスペクタ内のすべてのグループ制約の定数を簡単に変更したり、選択してDeleteキーを押して制約グループ全体を削除したりできます。

00:02:53.000 --> 00:02:57.000
次に、新しいボタンスタイルを続けましょう。

00:02:57.000 --> 00:03:09.000
Xcode 13のInterface Builderは、おなじみのPlainスタイルや、Gray、Tingted、Filledの3つの新しいスタイルなど、新しいプリセットスタイルのオーサリングボタンをサポートしています。

00:03:09.000 --> 00:03:20.000
これらの新しいスタイルにより、ダイナミックタイプ、マルチラインタイトル、アクセシビリティなどのシステム機能を自動的にサポートするインターフェイスビルダーで、美しく一貫性のあるボタンを直接簡単に作成できます。

00:03:20.000 --> 00:03:26.000
さらに、ボタンスタイルは、プリセットボタンサイズやコーナースタイルなどのオプションでさらなるカスタマイズをサポートします。

00:03:26.000 --> 00:03:30.000
ビデオの後半で、より多くのスタイルのカスタマイズについていきます。

00:03:30.000 --> 00:03:35.000
ボタンのスタイルの詳細については、ビデオ「UIKitボタンシステムに会う」をご覧ください。

00:03:35.000 --> 00:03:39.000
インターフェイスビルダーに戻って、これらの新しいスタイルを実際に見てみましょう。

00:03:39.000 --> 00:03:43.000
シーンの下部にブックルームのボタンがあり、注意が必要です。

00:03:43.000 --> 00:03:50.000
ピンチ・トゥ・ズームを使って詳しく見てみます。

00:03:50.000 --> 00:03:54.000
このボタンは、もっと注目を集めるために、塗りつぶしの色と丸みを帯びた角が欲しいです。

00:03:54.000 --> 00:04:00.000
Xcode 13では、ボタンスタイルを使用して、インターフェイスビルダーでこのようなボタンを直接作成できるようになりました。

00:04:00.000 --> 00:04:03.000
検査官に集中しましょう。

00:04:03.000 --> 00:04:07.000
ボタンインスペクタの上部付近に新しいスタイルプロパティがあります。

00:04:07.000 --> 00:04:16.000
デフォルト以外のスタイルを選択すると、ボタンが新しいボタンシステムにオプトインされ、動的タイプ、複数行のタイトル、およびアクセシビリティが自動的にサポートされます。

00:04:16.000 --> 00:04:23.000
先に進み、インスペクタのスタイルポップアップメニューを開き、ブックルームボタンの塗りつぶされたスタイルを選択します。

00:04:23.000 --> 00:04:27.000
ボタンは現在、ちょうどよく見える青い塗りつぶし色と丸みを帯びた角を持っています。

00:04:27.000 --> 00:04:30.000
そして、私がしなければならなかったのは、1つの変更を加えることだけでした。

00:04:30.000 --> 00:04:34.000
ボタンのスタイルは、あなたが望む外観をすばやく得るのに最適です。

00:04:34.000 --> 00:04:52.000
スタイルを選択すると、ボタンインスペクタに新しいプロパティが表示され、字幕、タイトルの配置、カラーオプション、画像の配置、コーナースタイル、より高度な背景設定オプションなど、さらにスタイルのカスタマイズが可能になります。

00:04:52.000 --> 00:05:02.000
名前が示すように、Filledスタイルはアプリの色合いを使用してボタンの塗りつぶし色を設定し、目立つ外観を与え、ユーザーインターフェイスの重要なボタンに適しています。

00:05:02.000 --> 00:05:05.000
また、コーナースタイルは、特定のコーナー半径の設定を心配する必要がないことを意味します。

00:05:05.000 --> 00:05:16.000
デフォルトのコーナースタイルはダイナミックと呼ばれ、ダイナミックタイプで自動的にスケーリングする見栄えの良いコーナー半径を提供し、ボタンの外観を任意のサイズで維持します。

00:05:16.000 --> 00:05:21.000
あるいは、固定コーナースタイルの半径は、ボタンのサイズが変更されたのと同じままです。

00:05:21.000 --> 00:05:28.000
より多くの制御が必要な場合、ダイナミックコーナースタイルと固定コーナースタイルの両方にカスタマイズ可能なコーナー半径があります。

00:05:28.000 --> 00:05:38.000
さらに、スモール、ミディアム、ラージ、カプセルなど、さまざまなプリセットコーナースタイルが用意されており、すべてダイナミックコーナースケーリングをサポートしています。

00:05:38.000 --> 00:05:50.000
スタイルを持つボタンは、小、中、大などのプリセットボタンサイズを含むサイズインスペクタの新しいボタンサイズプロパティにもアクセスできます。

00:05:50.000 --> 00:05:54.000
ホテルのアプリに戻って、ボタンスタイルを採用する機会をもっと探しましょう。

00:05:54.000 --> 00:05:56.000
チェックインとチェックアウトのボタンは少し地味に見えます。

00:05:56.000 --> 00:06:06.000
それらをより目立つようにするために、私は透明な色合いの背景を持ち、重要なボタンに最適ですが、塗りつぶしスタイルが提供する目立つ外観を必要としないティンテッドボタンスタイルを使用します。

00:06:06.000 --> 00:06:15.000
Commandキーを長押しして、アウトラインビューのチェックインボタンとチェックアウトボタンを選択します。

00:06:15.000 --> 00:06:24.000
そして、インスペクタのボタンスタイルメニューからティントを選択します。

00:06:24.000 --> 00:06:27.000
これはまさに私がこれらのボタンを探していたものです。

00:06:27.000 --> 00:06:33.000
次に、このアプリのプロモーションシーンには、新しいティンテッドスタイルにも最適なボタンがいくつかあります。

00:06:33.000 --> 00:06:36.000
進み、見てみましょう。 見てみましょう。

00:06:36.000 --> 00:06:44.000
キャンバスのミニマップを使用して、プロモーションシーンをダブルクリックして直接ジャンプします。

00:06:44.000 --> 00:06:49.000
このシーンには、適切なGetボタンをタップすることで、ゲストが選択できるアクティブなホテルプロモーションのリストが表示されます。

00:06:49.000 --> 00:06:56.000
各取得ボタンは画像をオーバーレイし、ティンテッドスタイルの透明な背景によって提供される余分なコントラストの恩恵を受けるでしょう。

00:06:56.000 --> 00:07:10.000
先に進み、Commandキーを押しながら、アウトラインビューの3つのGetボタンを選択します。

00:07:10.000 --> 00:07:21.000
インスペクタのスタイルメニューから「着色」を選択して、すべてのボタンスタイルを同時に変更します。

00:07:21.000 --> 00:07:23.000
それは素晴らしいですね。

00:07:23.000 --> 00:07:29.000
着色されたボタンのタイトルと背景色は、アプリの色合いの色に基づいており、適切なレベルのコントラストを提供します。

00:07:29.000 --> 00:07:35.000
また、どのプロモーションが選択されたかを示すために、タップされた後、Getボタンを切り替えて外観を変更したいです。

00:07:35.000 --> 00:07:40.000
iOS 15で新しいこの動作を実現するために、それらをトグルボタンに設定します。

00:07:40.000 --> 00:07:51.000
メニューの下のインスペクタで、「プライマリオプションとして選択」プロパティを切り替えて、選択したボタンを切り替えます。

00:07:51.000 --> 00:07:59.000
続行する前に、お客様がヘルプをリクエストできるように、予約シーンに新しいボタンを追加したいと思います。

00:07:59.000 --> 00:08:04.000
先に進んでオブジェクトライブラリを開きます...

00:08:04.000 --> 00:08:13.000
プレーンスタイルのボタンと、グレー、ティンテッド、フィルドの3つの新しいスタイルを含む、新しいスタイルシステムを使用するようにあらかじめ設定されたボタンがあります。

00:08:13.000 --> 00:08:27.000
グレースタイルは、もう少しコントラストを提供する透明なグレーの背景を持っているので、新しいグレーボタンをドラッグして「ヘルプ」ボタンとして機能し、ナビゲーションバーに配置します。

00:08:27.000 --> 00:08:34.000
アウトラインビューで新しいボタンを選択します...

00:08:34.000 --> 00:08:42.000
そして、ピンチツーズームを使用して、詳しく見てみましょう。

00:08:42.000 --> 00:08:51.000
ボタンのタイトルと字幕を設定します...

00:08:51.000 --> 00:09:02.000
疑問符のシンボルへのその画像...

00:09:02.000 --> 00:09:09.000
画像とタイトルの間にもう少しスペースを追加するには、画像パディングを設定します。

00:09:09.000 --> 00:09:13.000
Interface Builderを使用する利点の1つは、変更を試して結果をすばやく確認できることです。

00:09:13.000 --> 00:09:23.000
ここでどのコーナースタイルを使えばいいのかわからないので、カプセルスタイルを試して、どのように見えるか見てみます。

00:09:23.000 --> 00:09:26.000
それは良さそうですが、それは私が探しているものではありません。 

00:09:26.000 --> 00:09:30.000
代わりに、私は希望の外観を得るために大きなコーナースタイルを選択します。

00:09:30.000 --> 00:09:36.000
それは簡単でした。見栄えの良いボタンを作成するために必要なすべてが、ボタンインスペクタで直接利用可能になりました。

00:09:36.000 --> 00:09:53.000
より高度なスタイルのカスタマイズが必要な場合、カスタム背景設定を設定すると、コーナー半径、ストローク、背景画像などの追加のプロパティを明らかにすることで、よりきめ細かい制御が可能になります。

00:09:53.000 --> 00:09:58.000
部屋を予約する前のステップの1つは、部屋に滞在する予定のゲストの数を選択することです。

00:09:58.000 --> 00:10:01.000
このシーンには、1名様から4名様までお選びいただけます。

00:10:01.000 --> 00:10:06.000
iOS 15は、この機能に最適なポップアップボタンをサポートするようになりました。

00:10:06.000 --> 00:10:11.000
ポップアップボタンは、クリックするとアイテムのリストを含むメニューを表示するボタンです。

00:10:11.000 --> 00:10:21.000
その後、そのメニューから1つの項目を選択でき、ポップアップボタンの新しいラベルになります。

00:10:21.000 --> 00:10:25.000
私はすでにゲストラベルを作成したので、今する必要があるのはポップアップボタンを追加することだけです。

00:10:25.000 --> 00:10:38.000
オブジェクトライブラリを開いてドラッグします。

00:10:38.000 --> 00:10:48.000
ポップアップボタンはボタンスタイルもサポートしているので、チェックインボタンとチェックアウトボタンに合わせてティントスタイルを選択します。

00:10:48.000 --> 00:11:02.000
次に、Optionキーを押しながらドラッグを使用してさらに2つのメニュー項目を作成し、アウトラインビューに既存のメニュー項目をコピーします。

00:11:02.000 --> 00:11:15.000
最後に、メニュー項目の値を1から4に設定します。

00:11:15.000 --> 00:11:25.000
Mac Catalyst 15を搭載したMacでアプリが実行されている場合、スタイル付きのボタンは自動的にネイティブのmacOSバリアントにマッピングされ、Macでアプリが見栄えを良くしやすくなることに注意してください。

00:11:25.000 --> 00:11:34.000
iOSのポップアップボタンは、Mac Catalyst 15でもサポートされるようになりました。また、マウスカーソルがコントロールにカーソルを置いたときにより多くの情報を提供するツールチップもサポートされています。

00:11:34.000 --> 00:11:53.000
このアプリのMac Catalystバージョンを計画しているので、コントロールインスペクタの新しいポップアップボタンのツールチップを設定します。

00:11:53.000 --> 00:11:55.000
そして、私たちは終わりました。

00:11:55.000 --> 00:12:01.000
メニュー項目は、実行時に表示するアクションに接続する必要があることに注意してください。

00:12:01.000 --> 00:12:10.000
アプリ全体で新しいボタンスタイルを採用したので、構築して実行しましょう。

00:12:10.000 --> 00:12:18.000
これは、新しいグレースタイルのGet Helpボタン、ティンテッドルームオプション、塗りつぶされた「ブックルーム」ボタンで実行されているアプリです。

00:12:18.000 --> 00:12:22.000
そして最後に、ティンテッドプロモーションボタン、そして彼らは素晴らしく見えます。

00:12:22.000 --> 00:12:28.000
次に、テーブルコンテンツスタイル、階層記号、アクセシビリティをカバーするユセフに渡します。

00:12:28.000 --> 00:12:29.000
ユセフ？

00:12:29.000 --> 00:12:31.000
ありがとう、ルーク。

00:12:31.000 --> 00:12:37.000
私たちが訪問する次のワークフローは、テーブルビューセルのコンテンツ構成スタイルを使用してテーブルビューセルをスタイリングすることです。

00:12:37.000 --> 00:12:39.000
ほとんどの素晴らしいホテルには、素晴らしいレストランもあります。

00:12:39.000 --> 00:12:41.000
このホテルは変わりません。

00:12:41.000 --> 00:12:47.000
最近、私はゲストがレストランのメニューをチェックできるように、アプリにいくつかのビューを追加することに取り組んできました。

00:12:47.000 --> 00:12:49.000
私が中断したところから再開しましょう。

00:12:49.000 --> 00:12:53.000
彼のテーブルビューコントローラーを2本指でダブルタップして、それに集中します。

00:12:53.000 --> 00:13:01.000
この静的なテーブルビューは、ホテルのアメニティのリストを示しており、私は最近、レストランの別のテーブルビュー行を追加しました。

00:13:01.000 --> 00:13:06.000
ここのセルのタイトルラベルは、その下の字幕ラベルの上に目立つようにしたい。

00:13:06.000 --> 00:13:11.000
新しいテーブルビューセルのコンテンツ構成スタイルの1つは、私が望む外観を与えることができます。

00:13:11.000 --> 00:13:25.000
グループ化されたヘッダー、値のセル、グループ化されたフッターなど、新しいセルスタイルで得られるセルレイアウトの一部を次に示します。

00:13:25.000 --> 00:13:31.000
これらの新しいスタイルは画像とうまく機能し、ダイナミックタイプなどの機能も無料で入手できます。

00:13:31.000 --> 00:13:36.000
それでは、Interface Builderに戻り、このテーブルビューのセルのスタイルを変更しましょう。

00:13:36.000 --> 00:13:48.000
ドキュメントアウトラインのすべてのセルを選択し、属性インスペクタの上部にあるスタイルドロップダウンをクリックして、すべての新しいコンテンツ構成スタイルを表示します。

00:13:48.000 --> 00:13:51.000
字幕セルを選択します。

00:13:51.000 --> 00:13:55.000
新しいスタイルの1つを使用しているので、インスペクタから直接イメージパディングを変更できます。

00:13:55.000 --> 00:14:00.000
細胞のラベルとその画像の間に呼吸の余地を置くために、ここでそれをしましょう。

00:14:00.000 --> 00:14:03.000
私たちの細胞は現在、より大きく、より明確なタイトルラベルを持っています。

00:14:03.000 --> 00:14:10.000
これはまさに私が望んでいたものであり、良い視覚的な改善ですが、私はまだ細胞がもう少し色でできると思います。

00:14:10.000 --> 00:14:14.000
次に、階層的なシンボルがここでどのように役立つかを説明します。

00:14:14.000 --> 00:14:22.000
iOS 15の新機能で、シンボルは複数のレイヤーを持つことができ、レイヤーごとに色を指定できます。

00:14:22.000 --> 00:14:26.000
このレンダリングは、私のシンボルにより多くの色と深みを加えることができます。

00:14:26.000 --> 00:14:29.000
これを利用する2つの新しいレンダリングモードがあります。

00:14:29.000 --> 00:14:40.000
1つ目はヒエラルキーで、シンボルのプライマリレイヤーの色を指定し、シンボルの他のレイヤーの色をプライマリレイヤーの色の縮小アルファバージョンとして導き出すことができます。

00:14:40.000 --> 00:14:46.000
もう1つのモードはパレットで、シンボルのレイヤーの色を個別に設定できます。

00:14:46.000 --> 00:14:51.000
新しいシンボルレンダリングモードの詳細については、「SFシンボルの新機能」ビデオをご覧ください。

00:14:51.000 --> 00:14:55.000
テーブルビューのシンボルは現在、モノクロモードでレンダリングされています。

00:14:55.000 --> 00:14:59.000
しかし、シンボルの主な要素を強調したい。

00:14:59.000 --> 00:15:03.000
階層レンダリングモードはこれに最適です。

00:15:03.000 --> 00:15:06.000
これは、この新しいモードを使用してレンダリングされたシンボルです。

00:15:06.000 --> 00:15:14.000
シンボルのレイヤー間のさまざまな不透明度は、私が望むことを強調しているので、インターフェイスビルダーでこれを採用しましょう。

00:15:14.000 --> 00:15:21.000
繰り返しになりますが、すべてのセルが選択された状態で、セルのシンボルのレンダリングモードドロップダウンをクリックします。

00:15:21.000 --> 00:15:28.000
Hierarchicalを選択し、アプリの配色に合わせてTint Colorを選択します。

00:15:28.000 --> 00:15:38.000
すごい。セルの新しいコンテンツ構成スタイルの1つとシンボルの階層レンダリングモードを使用して、このアメニティビューに新鮮な新しい外観を与えました。

00:15:38.000 --> 00:15:42.000
アメニティのビューを更新したので、アクセシビリティについて見てみましょう。

00:15:42.000 --> 00:15:49.000
レストランのメニュー項目の1つに関する詳細情報を示すメニュー項目の詳細ビューに注意を向けましょう。

00:15:49.000 --> 00:15:55.000
ここでの説明ラベルは、サブヘッドテキストスタイルを使用しています。つまり、動的型をサポートしています。

00:15:55.000 --> 00:16:01.000
このラベルはすでにかなり広く、より大きなタイプ設定のいくつかでレイアウトの問題に遭遇するかもしれないと思います。

00:16:01.000 --> 00:16:11.000
Xcode 13のInterface Builderの新機能で、iOSシーンがデザイン時にInterface Builderでアクセシビリティ設定にどのように反応するかをプレビューできるようになりました。

00:16:11.000 --> 00:16:16.000
ルークが前に述べたように、キャンバスの下部バーにはまったく新しいアクセシビリティオプションがあります。

00:16:16.000 --> 00:16:22.000
アクセシビリティボタンをクリックすると、インターフェイスビルダーで調整できるさまざまな設定を示すポップオーバーが表示されます。

00:16:22.000 --> 00:16:27.000
一部の設定では、シーンのテキストサイズ、フレーム値、色を変更できます。

00:16:27.000 --> 00:16:33.000
これで、キャンバスでこれらの設定を有効にしてプレビューして、ビューが意図したとおりに反応することを確認できます。

00:16:33.000 --> 00:16:39.000
さて、説明ラベルに戻り、より大きなタイプのサイズでうまく機能することを確認しましょう。

00:16:39.000 --> 00:16:49.000
これを行うには、アクセシビリティポップオーバーを開き、設定を有効にし、ダイナミックタイプスライダーを移動します。

00:16:49.000 --> 00:16:53.000
説明ラベルがビューの範囲外になったことに注意してください。

00:16:53.000 --> 00:17:00.000
制約ポップオーバーを開き、ラベルに末尾の制約を追加することで、これを修正できます。

00:17:00.000 --> 00:17:07.000
また、属性インスペクタからラベルの行数プロパティを変更し、0に設定する必要があります。

00:17:07.000 --> 00:17:10.000
これにより、ラベルは必要な数の行にラップされます。

00:17:10.000 --> 00:17:15.000
これらの変更により、私のラベルはもはやクリップされなくなり、そのテキストに合うように成長します。

00:17:15.000 --> 00:17:25.000
ダイナミックタイプスライダーをもう一度ドラッグすると、説明ラベルがすべてのタイプサイズに適合するようになったことに注意してください。

00:17:25.000 --> 00:17:36.000
設計時にアクセシビリティ設定をプレビューできることは、iOSアクセシビリティ設定のビューを調整する際に、より速く反復し、インターフェイスビルダー内にとどまることができるため、本当に強力です。

00:17:36.000 --> 00:17:43.000
これらの変更をすべて行ったので、シミュレータで実行されているアプリをチェックしてみましょう。

00:17:43.000 --> 00:17:50.000
アメニティテーブルビューのセルは、私たちが望んでいた新しいレイアウトを与えたテーブルビューセルコンテンツ構成スタイルの1つを使用しています。

00:17:50.000 --> 00:17:58.000
セルには、階層レンダリングモードを使用するように構成したシンボルがあり、シンボルの主要な要素がより顕著になります。

00:17:58.000 --> 00:18:04.000
メニュー項目の詳細ビューをクリックすると、説明ラベルがここにぴったりです。

00:18:04.000 --> 00:18:10.000
要約すると、よりコンパクトなデバイスバーのツアーとアウトラインビューの改善から始めました。

00:18:10.000 --> 00:18:15.000
強力な新しいボタンスタイルシステムを使用して、アプリのボタンをカスタマイズする方法を見てみました。

00:18:15.000 --> 00:18:25.000
iOSとMac Catalystの両方でポップアップボタンを採用する方法と、コンテンツ構成スタイルを使用してテーブルビューセルに新しいレイアウトをすばやく提供する方法について確認しました。

00:18:25.000 --> 00:18:31.000
あなたのシンボルはまた、新しいレンダリングモードでより多くの色と強調を得ることができます。

00:18:31.000 --> 00:18:44.000
最後に、設計時にアクセシビリティ設定をプレビューすることで、アプリのビューが利用可能な多くのiOSアクセシビリティ設定で意図したとおりに機能することをはるかに簡単にする方法についても説明しました。

00:18:44.000 --> 00:18:53.000
私たちは、コードを1行も書かずにこれらすべての変更を行い、アプリを際立たせるものに焦点を当てることにより多くの時間を費やすことができます。

00:18:53.000 --> 00:18:59.000
今日話したすべてのツールを使用して、アプリを更新、様式化、近代化することをお勧めします。

00:18:59.000 --> 00:19:05.000
そして、「UIKitボタンシステムに会う」と「SFシンボルの新機能」のビデオを必ずチェックしてください。

00:19:05.000 --> 00:19:09.000
見てくれてありがとう、そして素晴らしいWWDC21をお過ごしください。

00:19:09.000 --> 23:59:59.000
[パーカッシブミュージック]。

