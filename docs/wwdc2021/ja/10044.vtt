WEBVTT

00:00:02.000 --> 00:00:11.000
こんにちは、ようこそ。

00:00:11.000 --> 00:00:14.000
私の名前はマールで、シャザム製品チームに所属しています。

00:00:14.000 --> 00:00:24.000
WWDC21を楽しんでいることを願っています。オーディオ認識をアプリに統合する機能を提供するフレームワークであるShazamKitを紹介します。

00:00:24.000 --> 00:00:31.000
今日は、ShazamKitとは何か、それを適用するためのいくつかのユースケースを説明します。

00:00:31.000 --> 00:00:40.000
その後、同僚のJamesに渡します。JamesはShazamカタログ認識の仕組みを紹介し、始めるためのヒントを提供します。

00:00:40.000 --> 00:00:43.000
ShazamKitとは何かから始めましょう。

00:00:43.000 --> 00:00:52.000
2008年にApp Storeで最初のアプリの1つとしてデビューした音声認識アプリ、Shazamにすでに精通しているかもしれません。

00:00:52.000 --> 00:00:57.000
13年後、アプリはかなり成長し、Shazamは動詞としても使われています。

00:00:57.000 --> 00:01:04.000
その技術はSiriのWhat Song is Thisを強化し、ショートカットとコントロールセンターに統合されています。

00:01:04.000 --> 00:01:15.000
そのコア技術は、バックグラウンドでのノイズでも、正確でほぼ瞬間的なオーディオマッチングであるオーディオ認識です。

00:01:15.000 --> 00:01:31.000
認識は、オーディオの明確な音響署名を聴き、Shazam独自のコンテンツカタログ内または作成できるカスタムオーディオカタログ内で完全一致を検索することによって達成されます。

00:01:31.000 --> 00:01:40.000
しかし、SoundAnalysisとは異なり、Shazamはスピーチ、歌、またはハミングのクラスを検出して分析するオーディオクラシファーではありません。

00:01:40.000 --> 00:01:48.000
実際、Shazamは笑いや拍手などの特定の音を音声でまったく識別しません。

00:01:48.000 --> 00:01:58.000
Jamesは数分でShazamの認識プロセスを案内し、音の検出と分類について学びたい場合は、SoundAnalysisセッションもチェックしてください。

00:01:58.000 --> 00:02:06.000
それまでの間、アプリに認識機能をもたらすフレームワークであるShazamKitについてもっと話しましょう。

00:02:06.000 --> 00:02:09.000
ShazamKitは3つのコンポーネントに分かれています。

00:02:09.000 --> 00:02:16.000
Shazamカタログ認識、カスタムカタログ認識、図書館管理があります。

00:02:16.000 --> 00:02:23.000
Shazamのカタログ認識により、アプリに曲の識別を追加できます。

00:02:23.000 --> 00:02:32.000
カスタムカタログ認識を使用すると、これをさらに一歩進め、任意のオーディオに対してデバイス上のマッチングを実行できます。

00:02:32.000 --> 00:02:46.000
このセッションでは、主にShazamカタログの認識とライブラリ管理に焦点を当てますが、「アプリのカスタムオーディオエクスペリエンスを作成する」方法を紹介する同僚のAlexと一緒にコーディングしてください。

00:02:46.000 --> 00:02:53.000
次に、アプリ全体でShazamKitを活用するための素晴らしい機会をいくつかお見せします。

00:02:53.000 --> 00:02:56.000
完璧なセルフィーを見つけることから始めましょう。

00:02:56.000 --> 00:03:01.000
彼らは取るのが楽しく、特定の気分や雰囲気を作り出すときにさらに楽しいことができます。

00:03:01.000 --> 00:03:09.000
Shazamカタログの認識は、環境で再生されている曲を認識し、曲のタイトルやアーティストなどの曲のメタデータを取得することで役立ちます。

00:03:09.000 --> 00:03:17.000
しかし、少し異なる体験や雰囲気を作り出すこともできるので、あなたの自撮りはソファからのリスニングやテーピングを超えています。

00:03:17.000 --> 00:03:27.000
ShazamKit APIは、代わりにダウンタウンのクラブでその曲を楽しむことをシミュレートするために使用できるジャンルのようなメタデータも返します。

00:03:27.000 --> 00:03:33.000
ShazamKitはまた、音楽以上のものを認識しており、仮想学習の文脈で役立ちます。

00:03:33.000 --> 00:03:40.000
リモートスクーリングは、画面上のレッスンに追いついたり、アプリ間をナビゲートするなど、教師と生徒にさまざまな課題を引き起こす可能性があります。

00:03:40.000 --> 00:03:47.000
カスタムカタログ認識は、教育アプリの体験をさらにシームレスにする機会を提供します。

00:03:47.000 --> 00:03:56.000
レッスンコンテンツのオーディオを一種のリモートコントロールとして使用することで、フレームワークはビデオ会議を介してコンテンツストリームとして学生アプリで同期されたアクティビティをトリガーすることができます。

00:03:56.000 --> 00:04:04.000
教師は、レッスンの一部を一時停止または繰り返した後でも、生徒のアプリがフォローしていることを知って、より簡単に休むことができます。

00:04:04.000 --> 00:04:13.000
あなたが私と同じくらいホームセンターテレビを楽しんでいるなら、作品が画面上で点滅するのと同じくらい早く家具を検索しようとするという挑戦に感謝するでしょう。

00:04:13.000 --> 00:04:21.000
ShazamKitを使用して、インタラクティブなセカンドスクリーンAR体験でショーやビデオを購入できるようにします。

00:04:21.000 --> 00:04:29.000
リアルタイムで視聴する場合でも、オンデマンドで視聴する場合でも、自宅の視聴者は視聴中にスタイルを同期的に閲覧、シミュレーション、購入できます。

00:04:29.000 --> 00:04:31.000
さあ、実生活でこれを試してみましょう。

00:04:31.000 --> 00:04:37.000
あなたとあなたの友人が共有した瞬間のビデオを見て、バックグラウンドで再生されている曲を知りたいと思ったことはありますか？

00:04:37.000 --> 00:04:40.000
これは、例えば、私の友人が金曜日の夜を比較するために私に送ったものです。

00:04:40.000 --> 00:04:52.000
私に雰囲気をキャッチさせ、周波数を感じ、雰囲気をキャッチさせる人を誰も知らない、あなたと私だけ。

00:04:52.000 --> 00:04:57.000
ShazamKitを使用して、私のアプリは認識を開始し、Shazamのカタログでオーディオマッチを見つけました。

00:04:57.000 --> 00:05:03.000
どの曲が再生されていたかがわかったので、ライブラリに保存するか、それを使って完璧な週末のプレイリストを始めることができます。

00:05:03.000 --> 00:05:09.000
さて、JamesがShazamカタログ認識の仕組みを紹介します。

00:05:09.000 --> 00:05:11.000
ありがとう、マール、そしてこんにちは、みんな。

00:05:11.000 --> 00:05:14.000
私はShazamチームのエンジニアリングマネージャーのJamesです。

00:05:14.000 --> 00:05:20.000
今日は、ShazamKitがマールのビデオの音楽を認識するためにどのように使用されたかを説明します。

00:05:20.000 --> 00:05:24.000
それで、マールが曲の識別ボタンを押したときに何が起こったのですか?

00:05:24.000 --> 00:05:29.000
ShazamKitは、ビデオ内のオーディオの表現をShazamのサーバーに送信しました。

00:05:29.000 --> 00:05:36.000
Shazamの音楽カタログで一致するものが見つかり、曲に関する情報が返され、アプリに表示されました。

00:05:36.000 --> 00:05:41.000
Shazamがオーディオにどのようにマッチするかを詳しく見てみましょう。

00:05:41.000 --> 00:05:46.000
Shazamはオーディオ自体と一致しないことに注意することが重要です。

00:05:46.000 --> 00:05:53.000
むしろ、それは私たちが署名と呼ぶそれの非可逆表現を作成し、それに対して一致します。

00:05:53.000 --> 00:05:55.000
このアプローチには2つの利点があります。

00:05:55.000 --> 00:06:01.000
第一に、署名は、それが派生したオーディオよりも少なくとも1桁小さいです。

00:06:01.000 --> 00:06:06.000
これにより、ネットワーク経由で送信する必要があるデータの量が大幅に削減されます。

00:06:06.000 --> 00:06:13.000
第二に、署名は可逆ではありません。つまり、元のオーディオは特定の署名から再構築できません。

00:06:13.000 --> 00:06:18.000
これは、お客様のプライバシーを保護するために非常に重要です。

00:06:18.000 --> 00:06:21.000
では、署名はどのように聞こえますか?

00:06:21.000 --> 00:06:24.000
1つ再生して、曲を特定できるかどうか確認させてください。

00:06:24.000 --> 00:06:29.000
その通りです。

00:06:29.000 --> 00:06:31.000
ビリー・アイリッシュの「私の未来」です。

00:06:31.000 --> 00:06:36.000
自分でシャザミングを試すこともできます。

00:06:36.000 --> 00:06:39.000
では、カタログについて話しましょう。

00:06:39.000 --> 00:06:43.000
カタログは署名のコレクションです。

00:06:43.000 --> 00:06:51.000
もちろん、カタログの署名は、生成されたオーディオを記述する関連するメタデータがなければ、あまり役に立ちません。

00:06:51.000 --> 00:06:58.000
メタデータは元のオーディオへの参照であるため、これらを参照署名と呼びます。

00:06:58.000 --> 00:07:04.000
Shazamカタログは、世界の音楽の多くを構成する参照署名のコレクションです。

00:07:04.000 --> 00:07:07.000
それはクラウド内にあり、Appleによってホストされ、維持されています。

00:07:07.000 --> 00:07:10.000
最新のトラックで定期的に更新されます。

00:07:10.000 --> 00:07:20.000
Shazamカタログのすべての署名は、曲の完全なオーディオから生成され、その曲のメタデータへの対応する参照があります。

00:07:20.000 --> 00:07:23.000
さて、自分のオーディオとマッチしたい場合はどうなりますか?

00:07:23.000 --> 00:07:26.000
この場合、カスタムカタログを使用できます。

00:07:26.000 --> 00:07:34.000
これらは、音楽だけでなく、任意のオーディオから生成された署名のコレクションであり、独自のカスタムメタデータを追加できます。

00:07:34.000 --> 00:07:41.000
クラウドにあるShazamカタログとは対照的に、カスタムカタログのマッチングはアプリ内で行われます。

00:07:41.000 --> 00:07:49.000
詳細については、コード付きの「ShazamKitでカスタムオーディオ体験を作成する」をご覧ください。

00:07:49.000 --> 00:07:56.000
カタログを検索する場合は、一致させたいオーディオのごく一部を表すクエリ署名が必要です。

00:07:56.000 --> 00:08:02.000
このアプリでは、曲を含むオーディオの一部です。

00:08:02.000 --> 00:08:11.000
この視覚化では、クエリ署名が曲の完全なオーディオを表す参照署名と比較され、一致するものが見つかりました。

00:08:11.000 --> 00:08:17.000
この同じプロセスは、一致する候補者を識別するために、Shazamのカタログのすべての曲で発生します。

00:08:17.000 --> 00:08:30.000
したがって、最初の図に戻ると、参照署名と曲情報のコレクションであるShazamカタログと照合するために、ネットワーク経由でクエリ署名を送信したことがわかっています。

00:08:30.000 --> 00:08:36.000
マールが識別ボタンを押すと、一致するものが見つかり、曲情報が返されました。

00:08:36.000 --> 00:08:42.000
さて、ShazamKitの素晴らしいところは、セッションオブジェクトを通じてこれらすべてを処理することです。

00:08:42.000 --> 00:08:47.000
セッションは、オーディオまたは署名のいずれかを入力として取ることができます。

00:08:47.000 --> 00:08:51.000
結果は、その代理人を介して伝達されます。

00:08:51.000 --> 00:09:00.000
Shazamカタログと照合する前に、開発者ポータルでアプリ識別子のShazamKitアプリサービスを有効にする必要があります。

00:09:00.000 --> 00:09:05.000
このステップは、カスタムカタログとの照合には必要ありません。

00:09:05.000 --> 00:09:08.000
さて、これがコードでどのように見えるか見てみましょう。

00:09:08.000 --> 00:09:10.000
まず、セッションオブジェクトを作成します。

00:09:10.000 --> 00:09:14.000
デフォルトの初期化子は、Shazamカタログと一致します。

00:09:14.000 --> 00:09:20.000
次に、その代理人を設定して、見つかった可能性のある一致が通知されるようにします。

00:09:20.000 --> 00:09:32.000
たとえば、マイクからのオーディオの継続的なストリームと照合している場合は、そのシナリオに最適化されているため、セッションでmatchStreamingBufferメソッドを使用することをお勧めします。

00:09:32.000 --> 00:09:41.000
しかし、私たちの場合、私はすでにビデオの完全なオーディオにアクセスできるので、署名ジェネレータを作成し、それにオーディオを渡します。

00:09:41.000 --> 00:09:49.000
マッチを実行する準備ができたら、ジェネレータの署名メソッドを呼び出して、渡したオーディオを署名に変換します。

00:09:49.000 --> 00:09:54.000
次に、生成された署名をセッションオブジェクトのマッチメソッドに渡します。

00:09:54.000 --> 00:09:56.000
私たちのアプリに戻ります。

00:09:56.000 --> 00:10:06.000
オーディオから署名を生成し、セッションを使用してShazamのカタログで一致する曲を見つけた後、次のステップは曲情報を表示することです。

00:10:06.000 --> 00:10:11.000
先ほど、カタログが署名とメタデータでどのように作られているかを説明しました。

00:10:11.000 --> 00:10:21.000
Shazamカタログの場合、このメタデータは、トラックのタイトルやアーティストなどの曲情報、およびアルバムアートなどの他のプロパティです。

00:10:21.000 --> 00:10:26.000
ShazamKitでは、この情報を表すオブジェクトはメディアアイテムと呼ばれます。

00:10:26.000 --> 00:10:38.000
一致したばかりの署名については、一致したオーディオの所在や、一致したオーディオと元のオーディオの周波数の違いなど、追加情報も返されます。

00:10:38.000 --> 00:10:43.000
これはマッチしたメディアアイテムと呼ばれ、メディアアイテムのサブクラスです。

00:10:43.000 --> 00:10:47.000
前のコード例では、セッションデリゲートを設定しました。

00:10:47.000 --> 00:10:53.000
マッチを実行するときは、成功、ノーマッチ、またはエラーを知らせるためにそれに頼ることができます。

00:10:53.000 --> 00:10:57.000
署名が複数のトラックと一致する可能性があります。

00:10:57.000 --> 00:11:01.000
これらは、一致したメディアアイテムの配列として表されます。

00:11:01.000 --> 00:11:04.000
私たちのアプリコードでは、最初のものを取ります。

00:11:04.000 --> 00:11:09.000
これで、返されたプロパティの一部の設定を開始できます。

00:11:09.000 --> 00:11:13.000
アルバムアートは、artworkURLプロパティを使用して取得されました。

00:11:13.000 --> 00:11:19.000
曲の名前とパフォーマーは、タイトルとアーティストのプロパティから入力されました。

00:11:19.000 --> 00:11:29.000
マッチした曲はApple Musicカタログで利用可能で、その詳細が表示されているため、Apple Musicアイデンティティガイドラインに記載されているようにアトリビューションを与える必要があります。

00:11:29.000 --> 00:11:35.000
アプリには、メディアアイテムから返されたApple MusicのURLを起動するボタンが追加されました。

00:11:35.000 --> 00:11:41.000
アプリで曲を認識したお客様は、これをShazamライブラリに保存したいと思うかもしれません。

00:11:41.000 --> 00:11:52.000
Shazamライブラリは、インストールされている場合はShazamアプリから、または音楽認識コントロールセンターモジュールを長押しすることでアクセスでき、デバイス間で同期されます。

00:11:52.000 --> 00:11:54.000
これを試してみましょう。

00:11:54.000 --> 00:11:59.000
まず、音楽認識コントロールセンターモジュールを長押しします。

00:11:59.000 --> 00:12:02.000
それは私がすでにそこにいくつかの曲を持っていることを示しています。

00:12:02.000 --> 00:12:09.000
次に、アプリのプラスボタンをタップして、一致した曲をそのリストに追加します。

00:12:09.000 --> 00:12:13.000
今、私は図書館を再開し、それが追加されたことを確認します。

00:12:13.000 --> 00:12:19.000
素晴らしい、それはそこにあり、私のアプリの名前が試合のソースとして表示されます。

00:12:19.000 --> 00:12:22.000
そして、コードはこんな感じです。

00:12:22.000 --> 00:12:28.000
SHMediaLibraryは、顧客のShazamライブラリに対応するデフォルトインスタンスを提供します。

00:12:28.000 --> 00:12:34.000
これはエンドツーエンドで暗号化されて保存され、2要素認証を有効にしたデバイスでのみ利用可能です。

00:12:34.000 --> 00:12:39.000
ライブラリは、Shazamカタログの曲に対応するアイテムのみを受け入れます。

00:12:39.000 --> 00:12:48.000
Shazamライブラリに書き込むのに特別な許可は必要ありませんが、顧客に知らせずにコンテンツを保存しないことを強くお勧めします。

00:12:48.000 --> 00:12:54.000
ライブラリに保存されたすべての曲は、それらを追加したアプリに帰属します。

00:12:54.000 --> 00:13:04.000
マッチが行われた曲の居場所を示すmatchOffsetなど、あなたが探索できるようにしたMediaItemには、さらに多くのプロパティが公開されています。

00:13:04.000 --> 00:13:11.000
さらに、新しいMusicKitフレームワークは、曲とその関係を記述する強く型付けされたオブジェクトを提供します。

00:13:11.000 --> 00:13:15.000
これをSongsのプロパティとしてSwiftで利用できるようにしました。

00:13:15.000 --> 00:13:20.000
詳細については、「Meet MusicKit for Swift」セッションをご覧ください。

00:13:20.000 --> 00:13:22.000
だから今、私たちは全体像を持っています。

00:13:22.000 --> 00:13:30.000
私たちは、そのプロセスを管理するためのセッションを使用して、Shazamカタログと一致するオーディオ署名を送信しました。

00:13:30.000 --> 00:13:35.000
その後、セッションは、デリゲートを介して一致したメディアアイテムの形で曲情報を返しました。

00:13:35.000 --> 00:13:41.000
また、アプリのお客様にShazamライブラリに追加するオプションも提供しました。

00:13:41.000 --> 00:13:45.000
さて、私はマールに返します。マールはいくつかのベストプラクティスを案内します。

00:13:45.000 --> 00:13:47.000
あなたに、マール。

00:13:47.000 --> 00:13:49.000
ありがとう、ジェームズ。

00:13:49.000 --> 00:13:55.000
ShazamKitとは何か、どのように機能し、どのように適用するかがわかったので、構築を開始する準備が整いました。

00:13:55.000 --> 00:14:00.000
ShazamKitで実装を開始する際には、これらのベストプラクティスを検討してください。

00:14:00.000 --> 00:14:08.000
まず、例えばマイクからのリアルタイムオーディオと照合する場合は、matchStreamingBufferを使用します。

00:14:08.000 --> 00:14:14.000
よりシンプルで、十分な範囲のシグネチャを生成するための多くの基礎となるロジックを処理します。

00:14:14.000 --> 00:14:20.000
次に、ユースケースにマイクが必要な場合は、必要な結果が得られたらすぐに録音を中止してください。

00:14:20.000 --> 00:14:27.000
そうすれば、不要なリソースを消費したり、顧客が意図するよりも長くマイクを起動したりすることを避けることができます。

00:14:27.000 --> 00:14:37.000
最後に、顧客のライブラリに手紙を書く前に、顧客がオプトインするオプションを提供し、最初からこの行動を明確にすることを強くお勧めします。

00:14:37.000 --> 00:14:39.000
ShazamKitを知るのを楽しんでいただければ幸いです。

00:14:39.000 --> 00:14:44.000
あなたが作った魔法のような体験や機能を見るのが待ちきれません。

00:14:44.000 --> 00:14:50.000
私たちが議論したすべての情報とドキュメントへのリンクは、このセッションに添付されているので、あなたは行く準備ができています。

00:14:50.000 --> 00:14:54.000
そして、カスタムカタログ認識と一緒にコードを試すことを忘れないでください。

00:14:54.000 --> 00:14:59.000
参加してくれてありがとう。WWDC21の残りの部分をお楽しみください。

00:14:59.000 --> 23:59:59.000
[音楽]。

