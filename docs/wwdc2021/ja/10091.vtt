WEBVTT

00:00:00.000 --> 00:00:05.000
♪ベース音楽の演奏♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:15.000
Kritarth Jain:こんにちは、「コミュニケーションと時間に敏感な通知の送信」へようこそ。

00:00:15.000 --> 00:00:23.000
私は通知チームのエンジニアであるKritarthで、後で同僚のKevinが加わります。

00:00:23.000 --> 00:00:36.000
通知はアプリケーションエクスペリエンスの重要な要素であり、特定のカテゴリの通知を高めるとともに、それらを強化する新しい方法について説明します。

00:00:36.000 --> 00:00:45.000
まず、通知の視覚的な更新と、新しいAPIでそれらを拡張する方法について説明します。

00:00:45.000 --> 00:00:56.000
次に、新しい管理コントロールの概要と、これらがコミュニケーションとタイムセンシティブ通知にどのように関連しているかを説明します。

00:00:56.000 --> 00:01:05.000
次に、通知の中断に焦点を当て、それらを制御するための新しいAPIをカバーします。

00:01:05.000 --> 00:01:18.000
その後、タイムセンシティブとコミュニケーションの2種類の通知に磨きをかけ、これらを構成する方法について説明します。

00:01:18.000 --> 00:01:23.000
通知の視覚的な更新から始めましょう。

00:01:23.000 --> 00:01:34.000
現在、通知は、アプリケーションアイコンとともに、コンテンツと関連するメディアに重点を置いた新しい外観になりました。

00:01:34.000 --> 00:01:43.000
豊富な通知プレゼンテーションと付随するアクションが、システムスタイルに合わせて更新されました。

00:01:43.000 --> 00:01:47.000
通知アクションをアイコンに関連付けることができます。

00:01:47.000 --> 00:01:56.000
図像学は、アクションが何をするかを伝え、アクションの横に視覚的なコンテキストを提供します。

00:01:56.000 --> 00:02:08.000
ここには、いいねとコメントの2つの通知アクションがあり、これらはカスタム通知カテゴリに設定されています。

00:02:08.000 --> 00:02:22.000
これらのアクションにアイコンを追加するには、システムイメージまたはテンプレートイメージのいずれかの画像名を持つUNNotificationActionIconタイプのオブジェクトを作成します。

00:02:22.000 --> 00:02:31.000
次に、これらのアイコンをUNNotificationActionのそれぞれのコンストラクタに提供します。

00:02:31.000 --> 00:02:42.000
このカテゴリに関連付けられた通知が展開されると、アクションは提供されたアイコンとともに表示されます。

00:02:42.000 --> 00:02:52.000
通知はアプリアイコンをより大きなサイズで表示するため、アプリケーションバンドルに高解像度のアイコンを提供します。

00:02:52.000 --> 00:03:08.000
コンテンツ拡張機能がリッチ通知の新しいプレゼンテーションとレイアウトで引き続き動作することを確認し、通知アクションのアイコンを採用してコンテキストを追加します。

00:03:08.000 --> 00:03:13.000
次に、新しい通知管理オプションについて説明します。

00:03:13.000 --> 00:03:22.000
アプリケーションからの通知の配信と中断に影響を与える新しいシステムコントロールがあります。

00:03:22.000 --> 00:03:28.000
これらは通知の概要とフォーカスです。

00:03:28.000 --> 00:03:32.000
まず、通知の概要について話し合いましょう。

00:03:32.000 --> 00:03:38.000
通知は、その日のスケジュールされた時間に要約として配信できるようになりました。

00:03:38.000 --> 00:03:48.000
これにより、受信通知からのアクティブな中断の数が減少し、プリセットされた時間にまとめて表示されます。

00:03:48.000 --> 00:03:57.000
スケジュールのサマリーに配信されるすべての通知は、ロック画面の通知リストに表示されます。

00:03:57.000 --> 00:04:09.000
通知内容にメディア添付ファイルを含めると、その通知が通知サマリーの上部に掲載される可能性が高くなります。

00:04:09.000 --> 00:04:23.000
新しいAPIを採用して、通知コンテンツの関連性スコアを提供し、アプリケーションからの適切な通知が通知サマリーにも取り上げられるようにします。

00:04:23.000 --> 00:04:28.000
通知に関連するもう1つの管理ツールはFocusです。

00:04:28.000 --> 00:04:38.000
デバイスは、読書、睡眠、仕事などのアクティビティや時間帯に基づいて、特定のフォーカスで設定できます。

00:04:38.000 --> 00:04:46.000
このような構成の場合、デバイスは通知の表示と中断をフィルタリングします。

00:04:46.000 --> 00:04:54.000
フォーカス設定では、割り込み通知を送信できる人やアプリケーションを選択できます。

00:04:54.000 --> 00:05:05.000
たとえば、ワークフォーカス中、メールとメッセージは、同僚からの直接通信とともに、通知を送信することができます。

00:05:05.000 --> 00:05:15.000
したがって、通知サマリーとフォーカスは、どのアプリケーションが割り込み通知をいつ送信できるかを制御します。

00:05:15.000 --> 00:05:21.000
これにより、1日を通しての中断をより適切に管理できます。

00:05:21.000 --> 00:05:31.000
通知がこれらの管理コントロールを突破する機会がありますが、許可されている場合に限ります。

00:05:31.000 --> 00:05:38.000
コミュニケーションや時間に敏感な通知が突破することも可能です。

00:05:38.000 --> 00:05:45.000
次に、アプリケーションが通知に関連付けられた中断を制御する方法について説明します。

00:05:45.000 --> 00:05:52.000
UserNotificationsフレームワークの一部として、中断レベルの新しいAPIがあります。

00:05:52.000 --> 00:05:56.000
サポートされている4つの異なる割り込みレベルがあります。

00:05:56.000 --> 00:06:01.000
これらはパッシブ、アクティブ、タイムセンシティブ、クリティカルです。

00:06:01.000 --> 00:06:10.000
パッシブ割り込みレベルの通知は、画面を警告したり点灯したりせず、システムコントロールを突破したりしません。

00:06:10.000 --> 00:06:19.000
これらの通知は、通知リストに静かに配信され、次回リストが表示されたときに利用できます。

00:06:19.000 --> 00:06:30.000
受動的な中断は、中断に即時の注意を必要としないが、最終的に見られるべき通知に使用する必要があります。

00:06:30.000 --> 00:06:36.000
いくつかの例は、食事の推奨事項と新しいエピソードの可用性です。

00:06:36.000 --> 00:06:47.000
アクティブな中断は、通知が音と振動を再生し、画面を照らす、今日存在する動作に似ています。

00:06:47.000 --> 00:06:52.000
これらの通知は、通知のシステム管理を突破しません。

00:06:52.000 --> 00:06:55.000
これはデフォルトの割り込みレベルです。

00:06:55.000 --> 00:07:07.000
アクティブ割り込みは、システムが現在中断されないように設定されている場合、割り込みを保証しない通知に使用する必要があります。

00:07:07.000 --> 00:07:14.000
いくつかの例は、スポーツの更新とライブストリームビデオ通知です。

00:07:14.000 --> 00:07:19.000
時間に敏感な通知は、アクティブな通知と同じように警告します。

00:07:19.000 --> 00:07:29.000
これらは、許可されている場合、通知の概要やフォーカスなどのシステム制御を突破できるため、特別です。

00:07:29.000 --> 00:07:38.000
これらの通知は、積極的な中断に関連する場合にのみ使用し、即時の注意が必要です。

00:07:38.000 --> 00:07:44.000
一部の例は、アカウントのセキュリティとパッケージ配送アラートです。

00:07:44.000 --> 00:07:53.000
最後に、クリティカル中断レベルは、iOS 14に存在するクリティカル通知サポートと同等です。

00:07:53.000 --> 00:08:04.000
この中断レベルの通知は、積極的に警告し、システムコントロールを突破し、デバイスの着信音スイッチをバイパスします。

00:08:04.000 --> 00:08:13.000
この破壊的な行動のため、重大な中断は引き続き承認された資格を必要とします。

00:08:13.000 --> 00:08:19.000
重要な通知のいくつかのユースケースは、悪天候と地域の安全警報です。

00:08:19.000 --> 00:08:30.000
UserNotificationsフレームワークの新しいAPIをサポートするために、さまざまなレベルが定義されたUNNotificationInterruptionLevelの新しい列挙型があります。

00:08:30.000 --> 00:08:38.000
通知要求のコンテンツオブジェクトの設定中に、この中断レベルを設定します。

00:08:38.000 --> 00:08:41.000
この例では、パッシブが設定されています。

00:08:41.000 --> 00:08:47.000
割り込みレベルが指定されていない場合は、デフォルトレベルが使用されます。

00:08:47.000 --> 00:08:54.000
プッシュ通知ペイロードの場合、キー割り込みレベルで新しいキーと値のペアを提供します。

00:08:54.000 --> 00:08:59.000
ここでも、中断レベルをパッシブに設定します。

00:08:59.000 --> 00:09:09.000
この通知がデバイスに配信されると、パッシブとして設定されているため、中断することなくロック画面に表示されます。

00:09:09.000 --> 00:09:15.000
通知に関連する中断の別の形態は、アナウンスです。

00:09:15.000 --> 00:09:24.000
AirPods ProやAirPods Maxなどの互換性のあるデバイスが接続されている場合、Siriは通知をアナウンスできます。

00:09:24.000 --> 00:09:34.000
iOS 14でこのアナウンス動作を取得するには、通知をAllowAnnouncementオプションを要求するカテゴリに関連付ける必要がありました。

00:09:34.000 --> 00:09:39.000
iOS 15では、このカテゴリオプションの要件は非推奨です。

00:09:39.000 --> 00:09:46.000
サポートされているオーディオデバイスに接続されている間、アナウンスは任意の通知に対してサポートされています。

00:09:46.000 --> 00:09:52.000
通信と時間に敏感な通知はデフォルトで発表されます。

00:09:52.000 --> 00:10:01.000
CarPlayに接続している間、通信通知は自動的にアナウンスするように設定することができ、体験をよりシームレスにします。

00:10:01.000 --> 00:10:08.000
次に、時間に敏感な通知とその設定方法に焦点を当てましょう。

00:10:08.000 --> 00:10:13.000
時間に敏感な通知は、すぐに注意が必要な通知です。

00:10:13.000 --> 00:10:22.000
その重要性のために、これらは許可されている場合、通知の要約やフォーカスなどのシステム制御を突破することができます。

00:10:22.000 --> 00:10:29.000
時間に敏感な通知の例は、薬の服用に関するリマインダーからのものです。

00:10:29.000 --> 00:10:36.000
この通知は、ワークフォーカスを突破し、すぐに目立つように掲載されます。

00:10:36.000 --> 00:10:41.000
タイムセンシティブ通知を送信する際には、信頼を維持することが重要です。

00:10:41.000 --> 00:10:49.000
中断的な性質を過剰に使用せず、関連する場合にのみ使用してください。

00:10:49.000 --> 00:10:58.000
タイムセンシティブアラートやアプリケーションからのすべての通知をオフにするオプションがあることを知ってください。

00:10:58.000 --> 00:11:07.000
時間に敏感な通知を設定するには、アプリケーションのXcode経由で関連する機能を有効にします。

00:11:07.000 --> 00:11:13.000
投稿される通知リクエストにタイムセンシティブ割り込みレベルを設定します。

00:11:13.000 --> 00:11:19.000
ローカル通知の場合、コンテンツオブジェクトにタイムセンシティブ割り込みレベルが設定されます。

00:11:19.000 --> 00:11:26.000
プッシュペイロードの場合、中断レベルのキーをタイムセンシティブとして設定します。

00:11:26.000 --> 00:11:33.000
配信されると、この通知は目立つよう掲示され、緊急性が強調されます。

00:11:33.000 --> 00:11:36.000
コミュニケーション通知について話し合いましょう。

00:11:36.000 --> 00:11:40.000
そして、それらについてあなたに話すために、ケビンに渡させてください。

00:11:40.000 --> 00:11:41.000
ケビン？

00:11:41.000 --> 00:11:42.000
ケビン・ハリントン:ありがとう、クリタース。

00:11:42.000 --> 00:11:47.000
私は通知チームのエンジニア、ケビンです。

00:11:47.000 --> 00:11:53.000
フォーカスと通知の要約を突破する緊急通知には重要です。

00:11:53.000 --> 00:11:59.000
人々からの通信はまた、高い通知配信を保証します。

00:11:59.000 --> 00:12:05.000
これらの通信は、通話やメッセージなど、さまざまな形で送信できます。

00:12:05.000 --> 00:12:16.000
アプリケーションが通信である通知と、それらの通信に関連する人々に通知できる新しいAPIを強調します。

00:12:16.000 --> 00:12:22.000
コミュニケーション通知の重要性は、ユーザーの決定によって決定されます。

00:12:22.000 --> 00:12:30.000
Siriの提案は、これらの決定を知らせるのに役立ち、中断を許されるべき重要な人々を提案します。

00:12:30.000 --> 00:12:44.000
ユーザーがデバイスとやり取りするとき - 電話に出る、FaceTimeに参加する、メッセージを送る - Siriはフォーカスと通知サマリーを突破する候補者を学習します。

00:12:44.000 --> 00:12:51.000
iOS 15では、通信通知はより豊かなユーザーエクスペリエンスを得る。

00:12:51.000 --> 00:12:54.000
最も目立つのは目立つアバターです。

00:12:54.000 --> 00:12:57.000
タイトルとサブタイトルは標準化されています。

00:12:57.000 --> 00:13:06.000
タイトルには常に送信者が含まれ、グループ通信の場合はサブタイトルに受信者が含まれます。

00:13:06.000 --> 00:13:13.000
タイトルと字幕のテキストは、プラットフォーム間で、すべてのデバイスにローカライズされ、フォーマットされています。

00:13:13.000 --> 00:13:20.000
たとえば、ウォッチはグループコミュニケーションの受信者のファーストネームのみを表示することを好みます。

00:13:20.000 --> 00:13:30.000
Siriは、HomePod、AirPods、CarPlayなど、サポートされているデバイスでの通信通知の内容を発表します。

00:13:30.000 --> 00:13:37.000
そして、Siriはこれらの通信通知に優先順位を付けるのに役立つ提案を提供します。

00:13:37.000 --> 00:13:41.000
アプリのユーザーは、連絡先のユーザーに関連付けられます。

00:13:41.000 --> 00:13:47.000
これらの関連付けは、通知の提案として表示されます。

00:13:47.000 --> 00:13:56.000
ユーザーが提案を確認すると、Siriショートカットはアプリ内のそれらの人々とのタスクに利用できます。

00:13:56.000 --> 00:14:07.000
Siriは、アプリのコミュニケーションに関連する人々を含め、フォーカス設定で突破するために、関連する人々に提案します。

00:14:07.000 --> 00:14:17.000
コミュニケーションとは何か、そうでないものについてこれらの決定を下すために、この新しいAPIを使用すると、SiriKitの呼び出しとメッセージの意図を通知に追加できます。

00:14:17.000 --> 00:14:20.000
意図は一般的なタスクによって駆動されます。

00:14:20.000 --> 00:14:28.000
アプリは、電話をかけたり、メッセージを受け取ったりするなど、イベントが発生すると、これらの意図を寄付します。

00:14:28.000 --> 00:14:41.000
そこから、Siriは、アプリのユーザーが共有シートからメッセージを送ったり、Siri経由でアプリから通話を開始したりするなど、これらの意図に基づいてショートカットと提案を提供します。

00:14:41.000 --> 00:14:50.000
この新しいAPIは、これらの同じ意図を通知に関連付けて、アプリをSiriエコシステムにさらに統合します。

00:14:50.000 --> 00:15:04.000
通信通知にSiriKitインテントを使用すると、アプリ、Siri、システムUI全体で一貫性を維持しながら、アプリのエンゲージメントが向上します。

00:15:04.000 --> 00:15:12.000
関連する通信を表すインテントは、StartCallとSendMessageのインテントです。

00:15:12.000 --> 00:15:20.000
NotificationContentProvidingプロトコルは、インテントを通知に関連付けるメカニズムです。

00:15:20.000 --> 00:15:28.000
NotificationContentオブジェクトでは、通信処理のためのContentProvidingインテントで更新を呼び出します。

00:15:28.000 --> 00:15:32.000
StartCallとSendMessageのインテントは提供に準拠しています。

00:15:32.000 --> 00:15:38.000
通信通知は、Appleプッシュ通知サービスを通じて配信されます。

00:15:38.000 --> 00:15:46.000
アプリのNotificationServiceExtensionでSiriKitインテントでNotificationContentオブジェクトを更新する必要があります。

00:15:46.000 --> 00:15:52.000
SiriKitのインテントはデバイスのローカルであるため、ローカルでサービスを受ける必要があります。

00:15:52.000 --> 00:15:56.000
サービス延長は、まさにこれらのケースのためのものです。

00:15:56.000 --> 00:16:02.000
配信前にリモート通知の内容をカスタマイズする場所です。

00:16:02.000 --> 00:16:08.000
ローカル通知のメインアプリプロセスでこれを行うこともできます。

00:16:08.000 --> 00:16:14.000
didReceive関数で、プッシュペイロードの内容を意図的に更新します。

00:16:14.000 --> 00:16:19.000
メッセージング通知の場合は、SendMessageIntentを作成します。

00:16:19.000 --> 00:16:23.000
また、通話関連の通知には、StartCallIntentを使用してください。

00:16:23.000 --> 00:16:29.000
Siriに何が起こっているのかを知性に伝えるためのインタラクションを作成します。

00:16:29.000 --> 00:16:34.000
通知拡張では、インタラクションの方向は常に着信します。

00:16:34.000 --> 00:16:40.000
これはユーザーに起こっているイベントです。彼らは着信を受信しています。

00:16:40.000 --> 00:16:43.000
次に、インタラクションを寄付する必要があります。

00:16:43.000 --> 00:16:48.000
寄付は、システムが将来的により良い提案をするのにも役立ちます。

00:16:48.000 --> 00:16:52.000
通知の内容を意図して更新します。

00:16:52.000 --> 00:16:57.000
そして最後に、返された意図でcontentHandlerを呼び出します。

00:16:57.000 --> 00:17:03.000
Siriがあなたのアプリで起こる出来事から学ぶことができるように、寄付が必要です。

00:17:03.000 --> 00:17:07.000
インタラクションの方向は常に通知のために受信されます。

00:17:07.000 --> 00:17:19.000
他のSiriKitの使用では、発信メッセージの送信や発信など、デバイスで開始されたアクションの発信を指示することができます。

00:17:19.000 --> 00:17:24.000
コンテンツの提供に準拠したシステムオブジェクトのみがサポートされています。

00:17:24.000 --> 00:17:28.000
オブジェクトをコンテンツ提供に適合させないでください。

00:17:28.000 --> 00:17:36.000
通信通知を送信するには、アプリケーションのXcode経由で通信機能を有効にします。

00:17:36.000 --> 00:17:48.000
Info.plistのユーザーアクティビティタイプ配列にインテントタイプを追加するか、インテント拡張機能を実装することで、コミュニケーションインテントをサポートします。

00:17:48.000 --> 00:17:57.000
ユーザーがメッセージを作成した後に送信を押したときなど、ユーザーがアプリのフォアグラウンドでアクションを実行するときに、コミュニケーションインテントを寄付します。

00:17:57.000 --> 00:18:05.000
その後、Siriは外向的な意図を使用して、フォーカスと要約を突破するために提案されるべき人をよりよく補佐します。

00:18:05.000 --> 00:18:07.000
連絡先の提案についても同様です。

00:18:07.000 --> 00:18:18.000
この機能では、Siriは発信意図の寄付からのみ学習するので、連絡先はスパム発信者のように関与していない人々によって乱雑にされません。

00:18:18.000 --> 00:18:29.000
通信意図の適切な使用は、インテリジェントな通知体験の基本であり、カバーすべき点がいくつかあります。

00:18:29.000 --> 00:18:34.000
インテントパーソンは、SendMessageとStartCallインテントの構成要素です。

00:18:34.000 --> 00:18:42.000
入力するすべてのパラメータは、より豊かでインテリジェントなユーザーエクスペリエンスを提供します。

00:18:42.000 --> 00:18:54.000
意図的な人との意図の作成も同様です。入力するすべてのパラメータは、より豊かでインテリジェントなユーザーエクスペリエンスを提供します。

00:18:54.000 --> 00:18:57.000
まだ使用していない場合は、インテントの使用を開始してください。

00:18:57.000 --> 00:19:05.000
Intentsは、通知、共有シート、連絡先、Spotlightでアプリの可視性を高めます。

00:19:05.000 --> 00:19:13.000
また、SiriKitを使用して、メッセージの送信や通話の開始などのSiriショートカットを提供できます。

00:19:13.000 --> 00:19:20.000
着信と発信の両方のやり取りに意図を寄付する習慣を身につけましょう。

00:19:20.000 --> 00:19:24.000
あなたはすでに発信意図を寄付しているかもしれません。

00:19:24.000 --> 00:19:30.000
サービス拡張機能で着信StartCallとSendMessageインテントの寄付を開始します。

00:19:30.000 --> 00:19:36.000
これは、コミュニケーション通知体験の基本です。

00:19:36.000 --> 00:19:43.000
アプリがまだ通知サービス拡張機能を使用していない場合は、追加する必要があります。

00:19:43.000 --> 00:19:55.000
最後に、コンテンツ提供プロトコルを使用して、通信として配信する各通知を装飾することで、ピースをまとめます。

00:19:55.000 --> 00:20:01.000
このセッションでは、視覚的な更新からコミュニケーション通知まで、多くのことを取り上げました。

00:20:01.000 --> 00:20:03.000
ここにいくつかの持ち帰りがあります。

00:20:03.000 --> 00:20:11.000
新しい視覚的な更新と管理オプションを考慮し、通知がそれらとシームレスに機能することを確認します。

00:20:11.000 --> 00:20:19.000
システム制御との相乗効果で通知がどのように中断されるかをよりよく制御するために、中断レベルを採用します。

00:20:19.000 --> 00:20:30.000
タイムセンシティブ通知は、タイムセンシティブ通知を顕著に中断し、ブレークスルーやアナウンスなどの自動動作を取得します。

00:20:30.000 --> 00:20:42.000
コールとメッセージングの意図を実装して寄付して、通知に結び付けられたアップグレードされたコミュニケーション体験と、行動のブレークスルーとアナウンスを実現します。

00:20:42.000 --> 00:20:49.000
私たちは、あなたが通知を中心に構築するすべての新しい素晴らしい経験を見るのが待ちきれません。

00:20:49.000 --> 00:20:53.000
皆さんが素晴らしいWWDCを過ごせることを願っています!

00:20:53.000 --> 23:59:59.000
♪

