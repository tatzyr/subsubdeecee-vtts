WEBVTT

00:00:09.000 --> 00:00:12.000
こんにちは、私はニッキー・ブラウワーです。

00:00:12.000 --> 00:00:14.000
私は鉛筆と紙のエンジニアです。

00:00:14.000 --> 00:00:19.000
そして今日は、クイックノートを採用する方法を紹介します。

00:00:19.000 --> 00:00:33.000
クイックノートは、iOSとmacOSでメモを取る機能を合理化するだけでなく、複数のアプリとウェブのコンテンツを1か所で接続することを目的とした、まったく新しいシステム全体のメモ作成体験です。

00:00:33.000 --> 00:00:44.000
この機能により、人々はどこでも簡単にメモを表示でき、最良の部分は、すでに存在するAPIを使用することです: NSUserActivity。

00:00:44.000 --> 00:00:49.000
それが聞き覚えがあるなら、それはHandoffのような他の機能に使われているからです。

00:00:49.000 --> 00:00:52.000
今日は、クイックノートをライブで実際にお見せします。

00:00:52.000 --> 00:00:58.000
システム上での仕組みと、NSUserActivityの採用方法について説明します。

00:00:58.000 --> 00:01:04.000
最後に、あなたが最高の体験を創造できるように、いくつかのベストプラクティスについて説明します。

00:01:04.000 --> 00:01:11.000
新しいクイックノート機能を紹介するために、Apple Fitness+を使用して体調を整えるための行動計画を踏むつもりです。

00:01:11.000 --> 00:01:15.000
私はまだサインアップしていないし、行動計画なしではしたくない。

00:01:15.000 --> 00:01:34.000
メモアプリに切り替える代わりに、鉛筆を使って画面の右下隅から上にスワイプして、まったく新しいクイックノートを作成して、始める準備ができたら、Appleのウェブサイトに私が知る必要があるすべての情報があることを覚えておくことができます。

00:01:34.000 --> 00:01:45.000
クイックノートの上部に新しい追加リンクメニューもあり、このコンテンツに簡単に移動できるようにウェブサイトへのリンクを追加します。

00:01:45.000 --> 00:01:51.000
ピクチャー・イン・ピクチャーと同様に、クイックノートウィンドウはデバイスの任意のコーナーに自由に移動できます。

00:01:51.000 --> 00:01:59.000
また、ウィンドウをピンチしてデフォルトのサイズから最小サイズに拡大縮小し、最大サイズに拡大することもできます。

00:01:59.000 --> 00:02:03.000
メモが終わったら、左上隅の「完了」ボタンを押すことができます。

00:02:03.000 --> 00:02:10.000
しかし、まだ追加する必要があるものがあるので、UIを右にスワイプして画面の側面に隠します。

00:02:10.000 --> 00:02:14.000
もちろん、ウェブサイトに加えて、アプリでも機能します。

00:02:14.000 --> 00:02:18.000
マップを使って、HIITワークアウトを練習するのに最適な場所を見つけることができました。

00:02:18.000 --> 00:02:23.000
隠したメモを取り出して、この場所をメモにも追加します。

00:02:23.000 --> 00:02:31.000
描画するスペースを増やすには、クイックノートツールバーからノートアイコンをタップして、ノートアプリでノートにたどり着く。

00:02:31.000 --> 00:02:36.000
ここでは、画像やリンクを描画する機能を利用します。

00:02:36.000 --> 00:02:40.000
私がここに追加したリンクは、単なる古いリンクではありません。

00:02:40.000 --> 00:02:48.000
確かに、それらをタップするとSafariやマップが表示されますが、今ではクイックノートの提案でこれらのアプリからメモに戻ることができます。

00:02:48.000 --> 00:02:56.000
Apple Fitness+に関するサイトにアクセスすると、クイックノートの提案UIが右下隅に表示されます。

00:02:56.000 --> 00:03:05.000
これをタップすると、すぐに元の場所に戻り、私の目標は週に4〜5回HIITトレーニングを行うことであるというメモを追加します。

00:03:05.000 --> 00:03:11.000
iPadでここにメモを作成しましたが、Macとのクロスプラットフォームでも機能します。

00:03:11.000 --> 00:03:18.000
Apple Fitness+に関するリンクにアクセスすると、クイックノートの提案UIも私のMacに表示されます。

00:03:18.000 --> 00:03:22.000
それをクリックすると、メモアプリのメモに移動します。 メモに移動します。

00:03:22.000 --> 00:03:26.000
クイックノートに出会ったので、それがどのように機能するかについて話しましょう。

00:03:26.000 --> 00:03:32.000
NSUserActivityオブジェクトは、アプリの状態をキャプチャして後で使用する方法を提供します。

00:03:32.000 --> 00:03:44.000
ユーザーアクティビティオブジェクトは、Webページの表示やアプリのコンテンツの表示など、何が起こっているかについて作成され、各アプリは現在のアクティビティをシステムに登録します。

00:03:44.000 --> 00:03:49.000
その後、システムはこれらのアクティビティを取得し、Handoffなどの機能に送信します。

00:03:49.000 --> 00:03:53.000
このシステムでピギーバックをリンクするクイックノート。

00:03:53.000 --> 00:04:00.000
Handoff、Spotlight、Remindersに加えて、登録されたアクティビティもクイックノートに送信されます。

00:04:00.000 --> 00:04:06.000
これは、リンクがリンクの追加メニューに表示される方法であり、クイックノートの提案をトリガーするものです。

00:04:06.000 --> 00:04:15.000
NSUserActivityにはすでに、アプリのコンテンツをクイックノートにリンクするための耐久性のある識別子として機能する3つのプロパティがあります。

00:04:15.000 --> 00:04:26.000
このエコシステムに参加するには、targetContentIdentifier、persistentIdentifier、およびwebpageURLの1つ以上のプロパティを設定する必要があります。

00:04:26.000 --> 00:04:32.000
どちらを選択するかは、サポートしたい他の機能によって異なります。

00:04:32.000 --> 00:04:36.000
targetContentIdentifierは、状態の復元中にも使用されます。

00:04:36.000 --> 00:04:42.000
このプロパティは、iPadで動作するアプリのための素晴らしいマルチタスク体験を生み出します。

00:04:42.000 --> 00:04:52.000
persistentIdentifierは、システムのSpotlightインデックスのアプリコンテンツを識別するためにも使用され、webpageURLはHandoff中のWebフォールバックにも使用されます。

00:04:52.000 --> 00:04:58.000
クイックノートリンクが機能するためには、識別子が持つ必要があるいくつかのプロパティがあります。

00:04:58.000 --> 00:05:10.000
それらは、そのコンテンツに対してユニークで、グローバルであるため、すべてのデバイスで動作し、時間の経過とともにそのコンテンツで機能するのに十分安定している必要があります。

00:05:10.000 --> 00:05:17.000
アクティビティの一意でグローバルで安定した識別子を持つことで、クイックノートの提案が可能になります。

00:05:17.000 --> 00:05:31.000
Apple Fitness+に関するウェブサイトに戻ると、クイックノートの提案UIが表示される理由は、1時間前または6ヶ月前に作成されたリンクの識別子がまだウェブサイトの識別子と一致しているからです。

00:05:31.000 --> 00:05:50.000
NSUserActivityを採用するには、主に3つのステップがあります。アプリのInfo.plistでサポートされているアクティビティを宣言し、さまざまな時点で画面に表示される内容を説明するユーザーアクティビティを作成して登録し、アクティビティを継続するための着信リクエストを処理します。

00:05:50.000 --> 00:05:55.000
これは、クイックノートのリンクまたは別のデバイスから来ている可能性があります。

00:05:55.000 --> 00:06:04.000
Info.plistファイルのNSUserActivityTypesキーで、アプリがサポートするアクティビティタイプを宣言します。

00:06:04.000 --> 00:06:11.000
システムは、そのキーの情報を使用して、アプリが特定のユーザーアクティビティオブジェクトを処理できるかどうかを判断します。

00:06:11.000 --> 00:06:19.000
NSUserActivityオブジェクトを作成するには、plistで登録されたアクティビティタイプの文字列の1つを使用し、タイトルを設定します。

00:06:19.000 --> 00:06:23.000
前述の3つの識別子のうち1つ以上を設定します。

00:06:23.000 --> 00:06:26.000
これらの識別子のいずれかをクイックノートに使用できます。

00:06:26.000 --> 00:06:33.000
この例では、あなたのアプリが状態復元のサポートにも関心のあるiPadアプリだとしましょう。

00:06:33.000 --> 00:06:35.000
targetContentIdentifierを設定します。

00:06:35.000 --> 00:06:42.000
アクティビティを継続するために必要なアプリ固有の状態情報を使用して、userInfoプロパティを設定します。

00:06:42.000 --> 00:06:46.000
次に、それをレスポンダーに添付します。

00:06:46.000 --> 00:06:54.000
現在のアプリのアクティビティを手動で管理してアクティビティを登録する代わりに、システムに処理してもらいましょう。

00:06:54.000 --> 00:07:02.000
レスポンダにアクティビティを設定することで、オブジェクトはUIKitとAppKitによって管理されます。

00:07:02.000 --> 00:07:09.000
NSUserActivityはクロスプラットフォームであるため、このコードはiOSとmacOSの両方で機能します。

00:07:09.000 --> 00:07:15.000
最後のステップは、着信アクティビティの受信を処理し、アプリでその状態を復元することです。

00:07:15.000 --> 00:07:25.000
リンクをタップすると、クイックノートはアプリを起動し、UIWindowSceneDelegateのシーン(willContinueUserActivityWithType)メソッドを呼び出します。

00:07:25.000 --> 00:07:31.000
これは、アプリがアクティビティを受信しているというフィードバックを与えることができる場所です。

00:07:31.000 --> 00:07:37.000
クイックノートは、シーン内のアプリにアクティビティを提供します(userActivityを続ける:)。

00:07:37.000 --> 00:07:45.000
ここでは、ビューコントローラー、ビューを設定し、userInfo辞書を使用してアクティビティを復元および続行します。

00:07:45.000 --> 00:07:56.000
Handoffの場合、デバイスが接続できない場合、システムはエラーメッセージを表示できるシーン(didFailToContinueUserActivityWithType)を呼び出します。

00:07:56.000 --> 00:08:04.000
このメソッドはクイックノートには呼び出されませんが、NSUserActivityの包括的な採用のために実装するのに適しています。

00:08:04.000 --> 00:08:20.000
macOSアプリの場合、アプリデリゲートに同等のアプリケーション(willContinueUserActivityWithType)、アプリケーション(continue userActivity)、およびアプリケーション(didFailToContinueUserActivityWithType)を実装します。

00:08:20.000 --> 00:08:32.000
NSUserActivityの採用の詳細については、WWDC 2014のビデオ「iOS 8とOS Xでのハンドオフの採用」をご覧ください。

00:08:32.000 --> 00:08:38.000
NSUserActivityは、他の多くの機能の基盤であるため、ゲートウェイです。

00:08:38.000 --> 00:08:42.000
クイックノートに採用することで、これはあなたが得ることができる他のすべてです。

00:08:42.000 --> 00:08:47.000
ハンドオフはデフォルトでオンになっていますが、他のものはオプトインされています。

00:08:47.000 --> 00:08:59.000
アプリ内のドキュメントに関するリマインダーを作成したり、アプリのブログ投稿にスポットライトを表示したり、マルチウィンドウ処理を改善したりできるため、アプリはさらに強力になる可能性があります。

00:08:59.000 --> 00:09:06.000
詳細については、最新のドキュメントと関連するWWDCビデオをご覧ください。

00:09:06.000 --> 00:09:13.000
最後になりましたが、クイックノートにNSUserActivityを採用するためのベストプラクティスをいくつか確認しましょう。

00:09:13.000 --> 00:09:22.000
私は4つの行動について説明し、これらのそれぞれについて、あなたのアプリにそれらを実装する理由と方法について話します。

00:09:22.000 --> 00:09:27.000
Titleプロパティは、アクティビティの人間が読める文字列です。

00:09:27.000 --> 00:09:30.000
これは、リンクの追加メニューに表示される文字列です。

00:09:30.000 --> 00:09:36.000
そうは言っても、タイトルは内容の良い、説明的な表現を提供する必要があります。

00:09:36.000 --> 00:09:42.000
一般的に、文書やアイテムのタイトルを直接使用することをお勧めします。

00:09:42.000 --> 00:09:48.000
識別子がユニークでグローバルで安定しているのに役立つヒントがいくつかあります。

00:09:48.000 --> 00:09:51.000
デバイス固有のデータの使用は避けてください。

00:09:51.000 --> 00:09:59.000
この写真の識別子がローカルファイルパスの場合、リンクは作成されたデバイスでのみ機能することが保証されます。

00:09:59.000 --> 00:10:06.000
セッションIDや特定の表示プロパティなどの一時的な情報は避けてください。

00:10:06.000 --> 00:10:16.000
写真のタイトルは暗黙的に一意かもしれませんが、変更できる場合、このコンテンツに戻ろうとするときに存在する保証はありません。

00:10:16.000 --> 00:10:27.000
写真にアプリの保存されたUUIDを使用するように、長期的に考えると、コンテンツが移動された場合でも、アプリはクイックノートリンクを復元できます。

00:10:27.000 --> 00:10:38.000
URLはアプリコンテンツの一意の識別子にすることができますが、多くの場合、一時的な状態情報が含まれており、前述の識別子ガイドラインに違反しています。

00:10:38.000 --> 00:10:45.000
クイックノートは、webpageURLよりもtargetContentIdentifierまたはpersistentIdentifierを好みます。

00:10:45.000 --> 00:10:51.000
ガイドラインに従っている限り、webpageURLは使用しても問題ありません。

00:10:51.000 --> 00:11:02.000
アプリが状態復元とSpotlightの両方にNSUserActivityを使用する場合は、targetContentIdentifierとpersistentIdentifierに同じ値を使用します。

00:11:02.000 --> 00:11:09.000
アプリを補完するウェブサイトがある場合は、URLを2番目のフォールバック識別子として追加してください。

00:11:09.000 --> 00:11:15.000
このようにして、アプリがインストールされていない場合、リンクを開くとウェブサイトにリダイレクトされます。

00:11:15.000 --> 00:11:21.000
もう1つの重要な方法は、アプリの現在のNSUserActivityが最新であることを確認することです。

00:11:21.000 --> 00:11:25.000
これは、起こっていることに追いつくことを意味します。

00:11:25.000 --> 00:11:35.000
ベストプラクティスは、別の写真を表示するように選択するなど、アクティビティの変更を検出するときに、タイトルと識別子のプロパティを正確に保つことです。

00:11:35.000 --> 00:11:39.000
アクティビティインスタンスを再利用することはお勧めできません。

00:11:39.000 --> 00:11:44.000
新しい写真のような新しいコンテンツがある場合は、新しいアクティビティを作成します。

00:11:44.000 --> 00:11:54.000
UIKitとAppKitが、サンプルコードで示したように、viewControllersやviewなどのレスポンダーにアクティビティを添付することで、現在のアプリアクティビティを処理させます。

00:11:54.000 --> 00:12:05.000
レスポンダへのアタッチがアプリで機能しない場合は、適切なタイミングで becomeCurrent() と resignCurrent() を呼び出すことで、現在のアプリアクティビティを手動で管理できます。

00:12:05.000 --> 00:12:18.000
たとえば、写真の表示が終了すると、アプリは現在のアクティビティで resignCurrent() を呼び出し、新しい写真が選択されると、アプリは新しいアクティビティで becomeCurrent() を呼び出します。

00:12:18.000 --> 00:12:24.000
パフォーマンスを向上させるには、アクティビティの「needsSave」プロパティを活用してください。

00:12:24.000 --> 00:12:29.000
アクティビティでは、アプリでアクティビティを適切に復元するために、特定のビュープロパティが必要になる場合があります。

00:12:29.000 --> 00:12:34.000
例えば、地図を見るときの位置とズーム。

00:12:34.000 --> 00:12:41.000
これらのプロパティはアクティビティと一緒に渡すことができますが、すべてのジェスチャーの後に更新するとオーバーヘッドがあります。

00:12:41.000 --> 00:12:46.000
アクティビティを更新する代わりに、needsSaveをtrueに設定します。

00:12:46.000 --> 00:13:00.000
システムがアクティビティをクイックノートリンクまたはハンドオフに送信する必要がある場合、デリゲートコールバックuserActivityWillSaveが呼び出され、アプリはオンデマンドですべてのプロパティを更新できます。

00:13:00.000 --> 00:13:08.000
このコールバックは、アクティビティの復元に役立つプロパティを含むようにuserInfo辞書を更新できる場所です。

00:13:08.000 --> 00:13:11.000
準備すべき互換性の問題がいくつかあります。

00:13:11.000 --> 00:13:14.000
アプリが更新された場合はどうなりますか?

00:13:14.000 --> 00:13:17.000
アプリからの2つのリンクでこのメモを取ってください。

00:13:17.000 --> 00:13:23.000
リンクは、デバイス上のものよりも古いバージョンまたは新しいバージョンのアプリからのものである可能性があります。

00:13:23.000 --> 00:13:27.000
完全に問題ありませんが、リンクはまだ機能する必要があります。

00:13:27.000 --> 00:13:39.000
互換性処理の準備のために、アプリの以前のバージョンからのアクティビティの受信を処理するためのサポートがあり、新しいバージョンからアクティビティを受け取るときに優雅に失敗します。

00:13:39.000 --> 00:13:50.000
これは、アクティビティをバージョン管理したり、キーの辞書を使用したり、キーが欠落したり、理解できないものを持っていることに寛容であることからサポートできます。

00:13:50.000 --> 00:13:54.000
コンテンツがもう存在しない場合はどうなりますか?

00:13:54.000 --> 00:13:58.000
アクティビティがリンクしたコンテンツは、削除または移動された可能性があります。

00:13:58.000 --> 00:14:05.000
アプリに戻るときは、削除された場合はエラーメッセージが表示され、コンテンツが移動された場合はリダイレクトされます。

00:14:05.000 --> 00:14:10.000
クイックノートを採用すると、アプリがこの新しいメモ取りシステムに接続されます。

00:14:10.000 --> 00:14:18.000
人、コンテンツ、アプリ間の接続を改善するために設計されたシステム。

00:14:18.000 --> 00:14:20.000
NSUserActivityを採用していることを確認してください。

00:14:20.000 --> 00:14:26.000
今、既存のコードを再訪し、磨く絶好の機会です。

00:14:26.000 --> 00:14:30.000
一意、グローバル、および安定した識別子を持っています。

00:14:30.000 --> 00:14:36.000
そして、レスポンダーにアクティビティを設定して、システムがアプリの現在のNSUserActivityを管理できるようにします。

00:14:36.000 --> 00:14:39.000
ご覧いただきありがとうございます。クイックノートとそれ以降であなたのアプリを見るのを楽しみにしています。

00:14:39.000 --> 23:59:59.000
[パーカッシブミュージック]。

