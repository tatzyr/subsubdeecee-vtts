WEBVTT

00:00:00.000 --> 00:00:05.000
♪ 베이스 음악 연주 ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:11.000
제르 노블: 안녕하세요, 저는 제르입니다!

00:00:11.000 --> 00:00:15.000
그리고 저는 여기 Apple에서 WebKit과 Safari에서 미디어 재생 작업을 합니다.

00:00:15.000 --> 00:00:24.000
사람들은 같은 방, 옆집 또는 지구 반대편에 있는 사람들과 함께 좋아하는 쇼와 영화를 보고 함께 음악을 듣는 것을 좋아합니다.

00:00:24.000 --> 00:00:32.000
그리고 이제 GroupActivities를 사용하면 사용자가 어디에 있든 SharePlay 경험을 그 어느 때보다 쉽게 제공할 수 있습니다.

00:00:32.000 --> 00:00:35.000
이 세션에서, 우리는 네 가지 주제를 다룰 것이다.

00:00:35.000 --> 00:00:55.000
사파리에서 조정된 재생에 대한 소개; 사파리에서 SharePlay와 함께 작동하도록 iOS 앱을 준비하는 방법; 앱의 웹 페이지에서 미디어 세션 API를 채택하는 방법; 그리고 여러 장치에서 재생을 조정하기 위한 새로운 웹 API.

00:00:55.000 --> 00:01:00.000
그래서 SharePlay와 Safari에 대해 조금 이야기하는 것으로 시작합시다.

00:01:00.000 --> 00:01:09.000
이전 세션에서, 당신은 GroupActivities로 iPhone 및 iPad 애플리케이션에서 놀라운 SharePlay 경험을 만드는 방법을 배웠습니다.

00:01:09.000 --> 00:01:18.000
그리고 macOS Monterey에서는 Catalyst를 사용하여 훌륭한 iPhone 및 iPad 앱과 함께 동일한 경험을 Mac에 가져올 수 있습니다.

00:01:18.000 --> 00:01:29.000
그리고 애플리케이션에 컴패니언 웹사이트가 있는 경우, 사용자가 App Store에서 앱을 다운로드하지 않고도 Mac Safari 15 사용자에게 동일한 놀라운 SharePlay 경험을 제공할 수 있습니다.

00:01:29.000 --> 00:01:33.000
그리고 그게 내가 너에게 이 세션에서 어떻게 하는지 보여줄 거야.

00:01:33.000 --> 00:01:36.000
저는 당신이 영화 예고편을 볼 수 있는 iPhone 응용 프로그램을 작업하고 있습니다.

00:01:36.000 --> 00:01:43.000
나는 이미 내 앱에 GroupActivities에 대한 지원을 추가했고, 친구들이 FaceTime을 통해 함께 영화 예고편을 볼 수 있게 해준다.

00:01:43.000 --> 00:01:46.000
하지만 내 영화 예고편 앱에도 웹사이트가 있어.

00:01:46.000 --> 00:01:53.000
그리고 그 웹 페이지에 GroupActivities에 대한 지원을 추가하면 어떻게 보여야 하는지는 다음과 같습니다.

00:01:53.000 --> 00:01:55.000
나는 내 친구 샘과 페이스타임 통화 중이야.

00:01:55.000 --> 00:02:00.000
샘은 영화 예고편을 보는 것을 좋아하기 때문에, 나는 그들에게 이 새로운 영화 예고편 앱을 테스트하는 것을 도와달라고 요청했다.

00:02:00.000 --> 00:02:09.000
그들이 통화 중에 그 앱에서 새로운 예고편을 재생하기 시작하면, 나는 알림을 통해 그 예고편을 보도록 초대받을 것이다.

00:02:09.000 --> 00:02:12.000
그것은 나에게 사파리에서 세션에 참여할 수 있는 옵션을 줄 것이다.

00:02:12.000 --> 00:02:23.000
그 알림을 클릭하면, 사파리는 공유 콘텐츠의 URL로 시작되며, 샘이 예고편을 재생하기 시작하면, 동시에 사파리에서 재생됩니다.

00:02:23.000 --> 00:02:33.000
사파리에서 비디오를 일시 중지하고, 재생하고, 심지어 찾을 수 있으며, 세션의 다른 모든 사람들은 로컬 비디오에 반영된 동일한 명령을 동시에 볼 수 있습니다.

00:02:33.000 --> 00:02:35.000
정말 멋질 거야!

00:02:35.000 --> 00:02:40.000
그래서, 영화 예고편 웹사이트에 GroupActivities 지원을 추가하려면 어떻게 해야 하나요?

00:02:40.000 --> 00:02:50.000
Safari 15에서 사용할 수 있는 새로운 웹 API에서 Safari의 후드 아래를 살펴보기 전에 GroupActivities를 통해 Safari와 함께 작동하도록 앱을 준비하는 방법에 대해 이야기해 봅시다.

00:02:50.000 --> 00:03:02.000
Safari로 GroupActivities 세션에 참여하려면, iPhone 또는 iPad 앱을 사용하는 사용자는 웹사이트를 가리키는 fallbackURL로 GroupSessionActivity를 만들어야 합니다.

00:03:02.000 --> 00:03:08.000
fallbackURL은 웹사이트뿐만 아니라 재생할 특정 콘텐츠를 식별해야 합니다.

00:03:08.000 --> 00:03:20.000
iPhone 사용자가 Mac의 사용자에게 Watch Together 초대장을 발행하면 Safari가 실행되고 GroupSessionActivity에서 제공한 URL을 로드하라는 메시지가 표시됩니다.

00:03:20.000 --> 00:03:27.000
Safari에 fallbackURL이 로드되면, 귀하의 사이트는 몇 가지 간단하지만 중요한 웹 API를 구현해야 합니다.

00:03:27.000 --> 00:03:29.000
첫 번째는 미디어 세션이다.

00:03:29.000 --> 00:03:39.000
미디어 세션은 사이트가 브라우저인 사파리에 페이지 내의 미디어 재생의 현재 상태에 대해 더 자세히 알릴 수 있는 표준 웹 API입니다.

00:03:39.000 --> 00:03:43.000
당신의 사이트는 브라우저에 현재 재생 상태, 콘텐츠의 지속 시간을 알려줄 수 있습니다.

00:03:43.000 --> 00:03:46.000
그것은 현재 재생 항목에 대한 삽화를 제공할 수 있다.

00:03:46.000 --> 00:03:52.000
그것은 심지어 브라우저에 현재 콘텐츠가 건너뛸 수 있는 광고라고 말할 수도 있다.

00:03:52.000 --> 00:04:02.000
브라우저가 이 모든 메타데이터를 사용할 수 있게 되면, 그 메타데이터를 나머지 운영 체제에 제공하고 브라우저 창 자체 외부에서 사용자에게 제공할 수 있습니다.

00:04:02.000 --> 00:04:07.000
운영 체제가 데이터가 "지금 재생 중"이라고 불리는 것 안에 있다는 것을 보여주는 한 곳.

00:04:07.000 --> 00:04:13.000
Now Playing은 사용자가 지금 즐기고 있는 미디어를 빠르게 보고 제어할 수 있는 좋은 방법입니다.

00:04:13.000 --> 00:04:19.000
iOS에서 사용자는 제어 센터와 잠금 화면에서 지금 재생 중으로 액세스할 수 있습니다.

00:04:19.000 --> 00:04:25.000
그리고 이제 macOS Monterey에서 사용자는 메뉴 표시줄에서 직접 지금 재생 중으로 액세스할 수 있습니다.

00:04:25.000 --> 00:04:35.000
그리고 사파리는 미디어 세션을 통해 제공된 정보를 사용하여 콘텐츠의 제목, 지속 시간, 재생 상태, 삽화 등으로 지금 재생 중 등을 채웁니다.

00:04:35.000 --> 00:04:43.000
Now Playing은 또한 사용자가 사용자에게 간단한 재생 컨트롤 세트를 보여줌으로써 듣고 있는 것의 재생을 제어할 수 있게 해준다.

00:04:43.000 --> 00:04:58.000
귀하의 사이트는 사용자가 지금 재생 중과 상호 작용할 때 수행할 특정 작업을 위해 미디어 세션에 등록할 수 있습니다. 예를 들어, 사용자가 지금 재생 중에서 재생 버튼을 탭하면 Safari는 사이트의 자체 작업 핸들러를 실행하여 재생을 시작할 수 있습니다.

00:04:58.000 --> 00:05:08.000
미디어 세션을 통해 사이트는 브라우저에 노출할 메타데이터를 완벽하게 제어할 수 있을 뿐만 아니라 재생 명령을 구현하는 방법을 제어할 수 있습니다.

00:05:08.000 --> 00:05:11.000
재생을 시작하기 전에 설정이나 프리플라이트를 해야 하나요?

00:05:11.000 --> 00:05:12.000
문제없어.

00:05:12.000 --> 00:05:16.000
mediaSession의 플레이 액션 핸들러로, 이제 할 수 있습니다.

00:05:16.000 --> 00:05:21.000
만약 당신의 사이트가 이전에 미디어 세션을 채택했다면, 당신은 이미 반쯤 끝났습니다.

00:05:21.000 --> 00:05:27.000
하지만 영화 예고편 사이트는 아직 미디어 세션을 채택하지 않았으므로, 지금 그것에 대한 지원을 추가합시다.

00:05:27.000 --> 00:05:32.000
이 사이트는 플레이, 일시 정지 및 탐색을 위한 작업을 추가하고 싶을 것이다.

00:05:32.000 --> 00:05:38.000
그렇게 하기 위해, 우리는 네비게이터의 mediaSession 속성을 사용할 것이다.

00:05:38.000 --> 00:05:41.000
먼저 플레이를 위한 액션 핸들러를 추가해 봅시다.

00:05:41.000 --> 00:05:50.000
우리는 mediaSession을 호출할 것입니다. setActionHandler(), 문자열 재생과 비디오 요소에서 play()를 호출하는 인라인 함수를 전달합니다.

00:05:50.000 --> 00:05:56.000
그런 다음, 우리는 일시 정지와 추구를 위해 똑같이 할 것이다.

00:05:56.000 --> 00:06:07.000
그리고 브라우저에 재생 상태를 정확하게 나타내고 있는지 확인하기 위해, 비디오 요소에 이벤트 리스너를 추가하고 상태가 변경되면 mediaSession을 업데이트할 것입니다.

00:06:07.000 --> 00:06:11.000
먼저, updateMediaSessionState()라는 함수를 추가해 봅시다.

00:06:11.000 --> 00:06:16.000
재생 중인지 일시 중지 중인지 알아보기 위해 비디오 요소를 쿼리할 것입니다.

00:06:16.000 --> 00:06:26.000
그런 다음 비디오 요소의 재생 상태에 따라 mediaSession의 playbackState 속성을 문자열 재생 또는 일시 중지로 설정합니다.

00:06:26.000 --> 00:06:31.000
다음으로, 비디오 요소의 지속 시간, 재생 속도 및 현재 시간을 쿼리할 것입니다.

00:06:31.000 --> 00:06:41.000
그런 다음, 그 값을 사용하여, mediaSession의 setPositionState() 함수를 호출하여 사전 매개 변수에서 해당 값을 전달합니다.

00:06:41.000 --> 00:06:50.000
그런 다음, 이벤트 리스너를 추가하여 해당 값이 변경될 때 감지하고 updateMediaSessionState()를 호출하여 mediaSession을 새 값으로 업데이트해 봅시다.

00:06:50.000 --> 00:06:58.000
재생, 일시 정지, 지속 시간 변경, 속도 변경 및 시간 변경을 위한 이벤트 리스너가 필요합니다.

00:06:58.000 --> 00:07:13.000
그리고 마지막으로, 영화 예고편 웹사이트에는 제목 문자열과 제목 작품의 URL이 모두 있기 때문에, 미디어 세션의 메타데이터 속성을 해당 값을 포함하는 새로운 MediaMetadata 객체로 설정할 수 있습니다.

00:07:13.000 --> 00:07:16.000
그러니까 한 번 해보자!

00:07:16.000 --> 00:07:23.000
사파리에서 페이지를 다시 로드하고, 재생을 시작한 다음, 시스템 메뉴에서 지금 재생 중 아이콘을 클릭하세요.

00:07:23.000 --> 00:07:25.000
그리고 나는 지금 재생 중 패널에서 제목과 작품을 본다.

00:07:25.000 --> 00:07:32.000
그리고 일시 정지 버튼을 탭하면 일시 정지 작업 핸들러가 호출되고 재생이 일시 정지됩니다.

00:07:32.000 --> 00:07:43.000
미디어 세션은 브라우저가 페이지에 재생을 시작하거나 중지해야 한다고 말할 수 있는 메커니즘을 제공하여 웹 페이지에서 Watch Together 경험을 위한 빌딩 블록을 제공합니다.

00:07:43.000 --> 00:07:51.000
이제 우리는 웹 페이지에서 공동 시청 경험을 만드는 두 번째 부분으로 넘어갈 준비가 되었습니다: 세션의 모든 장치에서 재생을 조정합니다.

00:07:51.000 --> 00:07:58.000
그렇게 하기 위해, 우리는 "코디네이터"라는 새로운 속성을 추가하여 미디어 세션을 확장했습니다.

00:07:58.000 --> 00:08:13.000
당신의 페이지는 미디어 세션의 코디네이터를 사용하여 세션의 다른 모든 사용자에게 재생을 시작하거나 일시 중지하거나, 미디어 타임라인의 특정 지점을 찾거나, 재생 목록의 다음 항목으로 이동하려는 페이지의 의도를 알립니다.

00:08:13.000 --> 00:08:27.000
코디네이터는 세션의 다른 모든 장치와 이러한 의도를 전달하고 다른 모든 장치의 재생 상태에 대한 변경 사항을 듣고, 충돌을 해결하고, 모든 사람이 재생을 시작할 준비가 될 때까지 기다릴 것입니다.

00:08:27.000 --> 00:08:36.000
그리고 모두가 준비되면, 코디네이터는 이전에 추가한 미디어 세션 액션 핸들러를 사용하여 세션의 다른 모든 사용자와 함께 재생을 시작할 것입니다.

00:08:36.000 --> 00:08:44.000
그리고 다른 사용자가 어떤 이유로든 재생을 일시 중지하면, 코디네이터는 미디어 세션의 일시 정지 작업 핸들러를 호출할 것입니다.

00:08:44.000 --> 00:08:47.000
그렇긴 하지만, 나는 몇 가지 주의 사항을 지적하고 싶다.

00:08:47.000 --> 00:08:59.000
코디네이터 인터페이스는 실험적인 웹 API이다; 아직 표준화를 거치지 않았으며, 그 프로세스가 이 API를 개선할 가능성이 있지만, API의 일부 측면은 변경될 수 있다.

00:08:59.000 --> 00:09:05.000
더 알아보려면, W3C의 미디어 세션 GitHub 페이지를 보세요.

00:09:05.000 --> 00:09:18.000
이 API는 현재 Safari에서만 구현되지만, Safari가 코디네이터를 구현하는 데 사용하는 GroupActivities 프레임워크는 다른 Mac 브라우저에서 채택될 수 있습니다.

00:09:18.000 --> 00:09:30.000
그리고 마지막 주의 사항은 사용자가 Safari의 기존 세션에 참여할 수 있지만, GroupSession은 현재 iPhone, iPad 또는 macOS 애플리케이션에서 시작해야 한다는 것입니다.

00:09:30.000 --> 00:09:35.000
그러니 이제 코디네이터에 대한 지원을 추가합시다.

00:09:35.000 --> 00:09:39.000
내가 가장 먼저 하고 싶은 것은 세션이 가능해지면 세션에 참여하는 것이다.

00:09:39.000 --> 00:09:44.000
그래서 나는 mediaSession에 코디네이터 변경 이벤트 리스너를 추가할 것이다.

00:09:44.000 --> 00:09:51.000
핸들러에서, mediaSession에 null이 아닌 코디네이터 속성이 있다면, join() 함수를 호출할 것이다.

00:09:51.000 --> 00:09:56.000
나는 또한 우리가 세션에서 재생하고 있다는 것을 보여주기 위해 내 컨트롤에 아이콘을 추가하고 싶다.

00:09:56.000 --> 00:10:04.000
그래서 핸들러에서, 나는 mediaSession에 코디네이터 속성이 있는지 여부에 따라 아이콘을 보여주거나 숨길 것이다.

00:10:04.000 --> 00:10:13.000
나는 또한 코디네이터의 leave()를 호출하기 위해 아이콘에 클릭 이벤트 리스너를 연결할 것이다.

00:10:13.000 --> 00:10:23.000
다음으로, 코디네이터의 존재를 확인하기 위해 사용자 지정 컨트롤의 이벤트 핸들러를 수정할 것이며, 코디네이터가 있다면 대신 적절한 코디네이터 기능을 호출할 것입니다.

00:10:23.000 --> 00:10:31.000
재생 버튼과 일시 정지 버튼, 그리고 타임라인 슬라이더를 위해 하나를 추가할 것입니다.

00:10:31.000 --> 00:10:34.000
그리고 그것을 실제로 보자!

00:10:34.000 --> 00:10:39.000
나는 내 친구 샘으로부터 초대를 받았고, 나는 그것을 받아들일 것이다.

00:10:39.000 --> 00:10:43.000
내 페이지는 샘이 아이폰에서 보고 있는 것과 같은 콘텐츠로 로드된다.

00:10:43.000 --> 00:10:50.000
그리고 재생 버튼을 클릭하면, 샘의 아이폰과 내 웹 페이지가 동시에 재생되기 시작합니다.

00:10:50.000 --> 00:10:53.000
앨리 폭스: 우리가 거기에 도착하는 방법은 모험이다.

00:10:53.000 --> 00:10:57.000
디나: 무서워.

00:10:57.000 --> 00:10:59.000
앨리: 그렇게 느껴지지 않았다면, 그것은 모험이 아니었을 것이다.

00:10:59.000 --> 00:11:03.000
♪ &lt; 그거 좋았어.

00:11:03.000 --> 00:11:12.000
이제 예고편이 끝났으니, 샘은 아이폰을 사용하여 처음부터 다시 문지른다.

00:11:12.000 --> 00:11:25.000
우리는 사용자가 iPhone, iPad, Apple TV 또는 Mac에서 실행되는 Safari에서 응용 프로그램에서 좋아하는 콘텐츠를 함께 보거나 듣는 것을 좋아할 것이라고 생각합니다.

00:11:25.000 --> 00:11:31.000
그리고 우리는 당신이 이제 그들이 어디에 있든 모든 사용자에게 그 경험을 제공할 수 있기를 바랍니다.

00:11:31.000 --> 00:11:42.000
GroupActivities API에 대한 자세한 내용은 "그룹 활동과 미디어 재생 조정" 및 "그룹 활동을 위한 디자인" 세션으로 시작하십시오.

00:11:42.000 --> 00:11:51.000
사파리 15에서 사용할 수 있는 다른 새로운 웹 API에 관심이 있다면, "고급 웹 콘텐츠 개발" 세션을 확인하세요.

00:11:51.000 --> 00:11:55.000
와주셔서 감사드리며 나머지 WWDC21을 즐기세요.

00:11:55.000 --> 23:59:59.000
♪

