WEBVTT

00:00:00.000 --> 00:00:05.000
♪ 베이스 음악 연주 ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:10.000
알렉스 텔렉: 안녕하세요, 저는 알렉스입니다.

00:00:10.000 --> 00:00:12.000
저는 Shazam 팀의 엔지니어입니다.

00:00:12.000 --> 00:00:14.000
이 세션에 참여해 주셔서 감사합니다.

00:00:14.000 --> 00:00:22.000
오늘은 사용자 지정 카탈로그 인식을 사용하여 ShazamKit으로 앱에 대한 사용자 지정 오디오 경험을 만드는 방법을 보여드리겠습니다.

00:00:22.000 --> 00:00:31.000
이 세션에서, 저는 카탈로그, 서명 및 미디어 항목과 같은 기존 ShazamKit 개념을 사용할 것입니다.

00:00:31.000 --> 00:00:37.000
아직 그것들에 익숙하지 않다면, "ShazamKit 탐색" 토크를 꼭 확인하세요.

00:00:37.000 --> 00:00:41.000
우리가 오늘 무엇을 다룰지 살펴봅시다.

00:00:41.000 --> 00:00:46.000
우리는 사용자 지정 오디오와 메타데이터로 카탈로그를 만드는 방법에 대해 이야기할 것이다.

00:00:46.000 --> 00:00:55.000
마이크와 AVFAudio 프레임워크를 사용하여 오디오를 녹음할 때 오디오를 사용자 지정 카탈로그와 일치시키는 방법을 배울 것입니다.

00:00:55.000 --> 00:01:01.000
그런 다음 콘텐츠를 사용자 지정 오디오와 동기화하기 위해 앱을 사용자 정의할 것입니다.

00:01:01.000 --> 00:01:08.000
마지막으로, 우리는 당신이 사용자 지정 카탈로그로 작업할 때 사용할 수 있는 몇 가지 모범 사례를 다룰 것입니다.

00:01:08.000 --> 00:01:10.000
이건 코드와 함께야.

00:01:10.000 --> 00:01:16.000
개발자 포털에는 이 세션 내내 사용할 프로젝트가 있습니다.

00:01:16.000 --> 00:01:20.000
시작하기 전에 프로젝트를 다운로드하는 것이 좋습니다.

00:01:20.000 --> 00:01:26.000
학습이 점점 더 디지털화됨에 따라, 우리는 아이들을 계속 참여시킬 방법을 생각해내야 한다.

00:01:26.000 --> 00:01:35.000
Apple TV에서 비디오를 재생하고 정확한 시간에 질문을 표시하는 컴패니언 앱이 있다면 어떨까요?

00:01:35.000 --> 00:01:45.000
오늘, 저는 사용자 지정 카탈로그 인식을 사용하여 교육용 비디오를 동기화하고 반응하는 원격 앱을 만드는 방법을 보여드리겠습니다.

00:01:45.000 --> 00:01:50.000
첫째, 맞춤 카탈로그는 정확히 무엇이며, 어떻게 만들 수 있나요?

00:01:50.000 --> 00:01:56.000
사용자 지정 카탈로그는 모든 오디오에서 생성하는 서명 모음입니다.

00:01:56.000 --> 00:02:01.000
각 서명에 관련 메타데이터를 추가할 수도 있습니다.

00:02:01.000 --> 00:02:06.000
사용자 지정 카탈로그에 서명을 추가하려면, SignatureGenerator 객체를 사용할 수 있습니다.

00:02:06.000 --> 00:02:10.000
그것은 오디오 버퍼를 서명으로 변환할 것이다.

00:02:10.000 --> 00:02:22.000
먼저, 서명 생성기를 만든 다음, audioEngine의 inputNode에서 installTap 기능을 사용하여 버퍼와 audioTime을 생성기에 추가하십시오.

00:02:22.000 --> 00:02:27.000
버퍼 매개 변수는 inputNode의 출력에서 캡처된 오디오의 버퍼이다.

00:02:27.000 --> 00:02:32.000
오디오타임은 버퍼가 캡처된 시간이다.

00:02:32.000 --> 00:02:40.000
audioFormat을 지정할 때 지원되는 샘플 속도 중 하나에서 형식이 PCM인지 확인하십시오.

00:02:40.000 --> 00:02:46.000
생성기에서 서명 기능을 호출하면 오디오 버퍼가 서명으로 변환됩니다.

00:02:46.000 --> 00:02:51.000
우리는 이것을 참조 서명이라고 부르며, 사용자 지정 카탈로그에 추가할 수 있습니다.

00:02:51.000 --> 00:02:56.000
Shazamsignature 파일을 사용하여 카탈로그에 서명을 추가할 수도 있습니다.

00:02:56.000 --> 00:03:00.000
이것은 여러 장치에서 공유할 수 있는 불투명한 파일이다.

00:03:00.000 --> 00:03:07.000
ShazamKit으로 사용자 지정 카탈로그를 더 쉽게 채택할 수 있도록, 이 세션에는 당신이 사용할 수 있도록 이 파일을 포함시켰습니다.

00:03:07.000 --> 00:03:12.000
시작하기 전에, 다운로드한 프로젝트를 열고 거기에 무엇이 있는지 봅시다.

00:03:12.000 --> 00:03:18.000
질문 대상을 자세히 살펴봅시다.

00:03:18.000 --> 00:03:22.000
질문은 앱의 사용자 지정 콘텐츠를 나타냅니다.

00:03:22.000 --> 00:03:26.000
먼저, 제목과 오프셋이 있다.

00:03:26.000 --> 00:03:29.000
제목은 비디오의 섹션을 설명하는 문자열이다.

00:03:29.000 --> 00:03:33.000
오프셋은 이 섹션이 나타나는 시간이다.

00:03:33.000 --> 00:03:38.000
예를 들어, 45초에, 선생님은 수학 방정식에 대해 이야기하기 시작한다.

00:03:38.000 --> 00:03:45.000
당신은 그 제목과 오프셋으로 45로 질문을 만들 것입니다.

00:03:45.000 --> 00:03:50.000
방정식은 수학적 방정식을 보여주는 가르치는 순간을 나타낸다.

00:03:50.000 --> 00:03:53.000
당신은 이것을 증분 빌딩 블록으로 사용할 수 있습니다.

00:03:53.000 --> 00:04:00.000
예를 들어, 당신은 다른 오프셋에서 방정식의 왼쪽과 오른쪽을 보여주고 싶을 수도 있습니다.

00:04:00.000 --> 00:04:11.000
마지막으로, answerRange와 requiresAnswer는 대화형 UI가 언제 표시될지 나타내는 데 사용되므로, 아이들은 질문에 답하는 연습을 할 수 있습니다.

00:04:11.000 --> 00:04:16.000
이것이 우리의 교육용 비디오에서 어떻게 생겼는지 살펴봅시다.

00:04:16.000 --> 00:04:19.000
첫 번째 질문은 14초에 시작한다.

00:04:19.000 --> 00:04:27.000
나는 21초에 빨간 사과 한 개를 가지고 있고 25초에 녹색 사과 세 개를 추가한다.

00:04:27.000 --> 00:04:33.000
마침내, 31초에, 그 학생은 그 질문에 대답할 기회를 갖게 될 것이다.

00:04:33.000 --> 00:04:44.000
참고로, 비디오는 보통 시간, 분, 초로 포맷되므로, 제가 여기서 했던 것처럼 오프셋을 만들려면, 먼저 시간을 초로 변환해야 합니다.

00:04:44.000 --> 00:04:52.000
예를 들어, Siri에게 도움을 요청할 수 있습니다. "초에 3분 14초는 무엇인가요?"

00:04:52.000 --> 00:04:57.000
이제, 코드에 뛰어들어 사용자 지정 카탈로그를 어떻게 시작할 수 있는지 봅시다!

00:04:57.000 --> 00:05:06.000
먼저, 나는 그것과 관련된 메타데이터가 있는 서명을 추가하여 카탈로그를 만들 것이다.

00:05:06.000 --> 00:05:13.000
여기, 카탈로그를 만드는 기능이 있는 CatalogProvider가 있습니다.

00:05:13.000 --> 00:05:24.000
카탈로그에 추가할 참조 서명은 FoodMath.shazamsignature라고 합니다.

00:05:24.000 --> 00:05:29.000
그 파일을 로드하고 그것에서 서명 객체를 만들어 봅시다.

00:05:29.000 --> 00:05:39.000
일단 그것을 갖게 되면, 미디어 항목을 사용하여 메타데이터를 정의합니다.

00:05:39.000 --> 00:05:46.000
제목과 자막과 같은 미리 정의된 미디어 항목 속성 키를 설정할 것입니다.

00:05:46.000 --> 00:05:49.000
이것은 교육용 비디오를 설명할 것이다.

00:05:49.000 --> 00:05:58.000
나는 또한 SHMediaItemProperty에 두 개의 사용자 지정 키로 확장 프로그램을 만들었다: 선생님과 에피소드.

00:05:58.000 --> 00:06:04.000
에피소드 번호와 교사의 이름을 설정하면 카탈로그의 내용을 더욱 맞춤화할 수 있습니다.

00:06:04.000 --> 00:06:15.000
이제 customCatalog 객체를 만들기만 하면 됩니다.

00:06:15.000 --> 00:06:21.000
그런 다음 addReferenceSignature를 호출하고 서명과 mediaItem 객체를 전달하세요.

00:06:21.000 --> 00:06:27.000
이것은 당신이 방금 만든 메타데이터를 디스크에서 로드한 참조 서명과 연관시킬 것입니다.

00:06:27.000 --> 00:06:29.000
완벽해!

00:06:29.000 --> 00:06:36.000
이제 내가 그것을 제자리에 두으므로, 나는 오디오를 카탈로그와 일치시키기 시작하고 그 결과를 실제로 볼 수 있다.

00:06:36.000 --> 00:06:40.000
그럼 매치를 열자.

00:06:40.000 --> 00:06:47.000
우리는 마이크의 입력 오디오를 우리가 방금 만든 사용자 지정 카탈로그의 내용과 일치시킬 것입니다.

00:06:47.000 --> 00:06:54.000
마이크에서 오디오를 캡처하려면, AVFAudio에서 AVAudioEngine을 사용할 수 있습니다.

00:06:54.000 --> 00:07:03.000
이 프로젝트에서, 나는 이미 Info.plist 파일에 마이크 사용에 대한 설명을 추가했다.

00:07:03.000 --> 00:07:12.000
또한 Matcher에서 마이크 권한을 요청하고 오디오 세션을 설정하는 코드를 포함시켰습니다.

00:07:12.000 --> 00:07:23.000
먼저, 경기에 대한 업데이트를 받으려면, 세션 객체를 만들고 대리인을 설정합니다.

00:07:23.000 --> 00:07:30.000
일치 기능은 우리가 전에 만든 사용자 지정 카탈로그를 가져가므로, 당신은 그것을 세션에 전달할 수 있습니다.

00:07:30.000 --> 00:07:41.000
이제 audioEngine의 inputNode에서 installTap 기능을 사용하여 오디오를 일치시킬 준비가 되었습니다.

00:07:41.000 --> 00:07:51.000
이 기능은 마이크에서 변환된 오디오인 audioBuffer와 버퍼가 캡처된 시간인 audioTime을 반환합니다.

00:07:51.000 --> 00:07:59.000
그런 다음 세션에서 matchStreamingBuffer를 호출하고 오디오 버퍼와 오디오 시간을 전달합니다.

00:07:59.000 --> 00:08:09.000
제공된 오디오가 연속적인지 확인하기 위해 세션에 의해 검증될 것이기 때문에 가능한 시간을 포함하는 것이 좋습니다.

00:08:09.000 --> 00:08:24.000
처음에 세션 대리인을 설정했기 때문에, 업데이트를 처리하기 위해 세션: didFind match: 세션 대리인의 기능을 구현할 수 있습니다.

00:08:24.000 --> 00:08:32.000
이를 위해, 나는 MatchResult라는 객체를 만들었다.

00:08:32.000 --> 00:08:43.000
그것은 세션에 의해 반환된 MatchedMediaItem을 포함합니다: didFind match: 함수, 이것은 카탈로그의 참조 서명과 관련된 메타데이터입니다.

00:08:43.000 --> 00:08:49.000
그것은 에피소드 번호와 선생님의 이름과 같이 우리가 이전에 만든 세부 사항을 포함할 것이다.

00:08:49.000 --> 00:08:56.000
그것은 일치에서만 생성될 수 있으며, 그것과 관련된 추가 정보가 포함되어 있습니다.

00:08:56.000 --> 00:09:03.000
또한 MatchResult에는 제가 이전에 보여드린 질문 객체가 있습니다.

00:09:03.000 --> 00:09:07.000
이것은 수학 방정식이 있는 비디오의 섹션을 나타낸다.

00:09:07.000 --> 00:09:11.000
우리는 경기 관련 콘텐츠를 찾기 위해 이것을 사용할 것이다.

00:09:11.000 --> 00:09:26.000
그래서 대리인 내부에서, 우리는 첫 번째 MatchedMediaItem 객체를 취하도록 MatchResult를 설정했고, 지금은 질문에 대해 아무것도 설정하지 않을 것입니다.

00:09:26.000 --> 00:09:30.000
이제 빌드하고 실행하여 경기가 작동하는 것을 봅시다.

00:09:30.000 --> 00:09:36.000
이것은 우리의 FoodMath 앱이며, 학생들이 이용할 수 있는 에피소드 목록이 있습니다.

00:09:36.000 --> 00:09:41.000
나는 비디오를 재생할 수 있고 내 동료 닐과 함께 수학 문제를 푸는 법을 배울 수 있다.

00:09:41.000 --> 00:09:44.000
닐, 오늘 우리를 위해 뭘 가지고 있어?

00:09:44.000 --> 00:09:52.000
닐: 그래서 형식은 내가 너에게 질문을 할 거야, 너는 그것에 대해 생각할 시간이 좀 있을 거야, 그리고 나서 네가 제대로 이해했는지 보자!

00:09:52.000 --> 00:10:02.000
우리 앱이 있다면 너도 같이 놀 수 있어. &lt; 내가 비디오를 시작했을 때, 앱은 우리가 에피소드 3, "Count on Me"를 듣고 있다는 것을 알아챘어.

00:10:02.000 --> 00:10:04.000
이거 멋지다!

00:10:04.000 --> 00:10:12.000
다음으로, 질문 객체를 사용하여 오디오의 특정 오프셋에 대해 어떤 섹션을 보여줄지 알고 싶습니다.

00:10:12.000 --> 00:10:23.000
우리는 MatchedMediaItem을 사용하여 어떤 비디오를 보고 있는지 알 수 있지만, predictedCurrentMatchOffset과 같은 경기에 대한 추가 정보도 포함되어 있습니다.

00:10:23.000 --> 00:10:30.000
이것은 초 단위의 시간 간격으로 표시되는 참조 서명의 자동 업데이트 위치입니다.

00:10:30.000 --> 00:10:37.000
이것을 사용하여 비디오에서 당신이 어디에 있는지 알아내고 관련 질문 객체를 찾을 수 있습니다.

00:10:37.000 --> 00:10:53.000
코드로 돌아가서, 대리자 콜백에서, nil을 설정하는 대신, predicatedCurrentMatchOffset 바로 뒤에 오는 마지막 질문을 찾고 싶습니다.

00:10:53.000 --> 00:10:57.000
나는 값을 비교하기 위해 질문의 오프셋을 사용할 수 있다.

00:10:57.000 --> 00:11:06.000
session:didFindMatch는 같은 일치로 여러 번 호출할 수 있습니다.

00:11:06.000 --> 00:11:13.000
따라서 새로운 질문 객체를 얻을 때만 결과를 업데이트하는 필터를 구현해 봅시다.

00:11:13.000 --> 00:11:21.000
일단 당신이 그것을 갖게 되면, 당신은 값으로 결과를 업데이트할 수 있습니다.

00:11:21.000 --> 00:11:28.000
이제 그것이 어떻게 보이는지 봅시다; 건설하고 실행하세요.

00:11:28.000 --> 00:11:31.000
이번에는 덧셈에 대해 배우고 싶다.

00:11:31.000 --> 00:11:40.000
나는 비디오를 다시 재생하고 질문의 내용이 비디오와 동기화되어 나타나는지 볼 것이다.

00:11:40.000 --> 00:11:43.000
닐: 질문 하나. 시작하자.

00:11:43.000 --> 00:11:54.000
나는 오늘 가게에 갔고 사과를 좋아해서 빨간 사과 한 개를 샀어; 그리고 초록색 사과 한 개, 두 개, 세 개를 샀어.

00:11:54.000 --> 00:11:57.000
내가 총 몇 개의 사과를 샀어?

00:11:57.000 --> 00:12:04.000
네 타이머가 시작해... 지금. &lt; 알렉스: 이제 질문할 시간이야. 하나 더하기 셋이 뭐야?

00:12:04.000 --> 00:12:07.000
다섯이 될 수 있을까?

00:12:07.000 --> 00:12:10.000
오. 아니, 내가 틀렸어. 다시 해보자.

00:12:10.000 --> 00:12:19.000
나는 비디오를 되감 거야, 그리고 이번에는 더 주의를 기울일 거야!

00:12:19.000 --> 00:12:22.000
닐: 질문 하나. 시작하자.

00:12:22.000 --> 00:12:34.000
나는 오늘 가게에 갔고 사과를 좋아해서 빨간 사과 한 개를 샀어; 그리고 초록색 사과 한 개, 두 개, 세 개를 샀어.

00:12:34.000 --> 00:12:36.000
내가 총 몇 개의 사과를 샀어?

00:12:36.000 --> 00:12:46.000
네 타이머가 시작해... 지금. &lt; 알렉스: 이제 다시 들었으니, 답이 4라는 걸 알아.

00:12:46.000 --> 00:12:49.000
이 질문이 너무 쉽다면 어떡해?

00:12:49.000 --> 00:13:00.000
내가 앞으로 건너뛰고 닐이 우리에게 가르쳐 줄 좀 더 복잡한 것이 있는지 볼게.

00:13:00.000 --> 00:13:04.000
닐: 질문 네. 마지막 질문.

00:13:04.000 --> 00:13:08.000
그래서 오늘, 나는 꽤 배고파.

00:13:08.000 --> 00:13:12.000
그래서 나는 사과 14개를 사기로 결정했어.

00:13:12.000 --> 00:13:25.000
하나... 둘... 셋... 넷 -- &lt; 알렉스: 그건 많은 사과야. 내가 조금 더 진행하게 해줘.

00:13:25.000 --> 00:13:27.000
20초 앞으로 건너뛰세요.

00:13:27.000 --> 00:13:32.000
닐: 그래서 나는 사과 28개를 더 사기로 결정했어.

00:13:32.000 --> 00:13:42.000
하나... 둘... 셋...

00:13:42.000 --> 00:13:49.000
넷... 다섯... 여섯...

00:13:49.000 --> 00:13:55.000
26... 27...

00:13:55.000 --> 00:13:57.000
사과 28개.

00:13:57.000 --> 00:13:59.000
내가 총 몇 개의 사과를 샀어?

00:13:59.000 --> 00:14:04.000
네 타이머가 지금 시작해. &lt; 알렉스: 이제, 그건 좋은 질문이야.

00:14:04.000 --> 00:14:05.000
너 따라갔어?

00:14:05.000 --> 00:14:10.000
나는 내가 가장 좋아하는 번호로 갈 거야!

00:14:10.000 --> 00:14:11.000
맞아!

00:14:11.000 --> 00:14:15.000
궁극적인 질문에 대한 답은 42입니다!

00:14:15.000 --> 00:14:21.000
간단합니다: 학생이 비디오에서 어디에 있든, 당신의 원격 앱은 콘텐츠를 따라잡고 업데이트할 것입니다.

00:14:21.000 --> 00:14:27.000
사용자 지정 카탈로그를 사용할 때 몇 가지 모범 사례를 다루겠습니다.

00:14:27.000 --> 00:14:34.000
사용자 지정 카탈로그는 shazamcatalog 파일 확장자를 사용하여 장치 간에 원활하게 공유할 수 있습니다.

00:14:34.000 --> 00:14:41.000
fileURL을 사용하여 디스크에 로드하고 저장할 수 있을 뿐만 아니라 네트워크를 통해 전달할 수 있습니다.

00:14:41.000 --> 00:14:50.000
원격 웹 서비스를 사용할 때, 먼저 카탈로그를 다운로드한 다음 사용자 지정 카탈로그 개체에서 추가 기능을 사용할 수 있습니다.

00:14:50.000 --> 00:14:56.000
네트워크를 통해 사용할 수 있는 카탈로그가 없을 때 로컬 카탈로그를 제공해야 합니다.

00:14:56.000 --> 00:15:01.000
카탈로그는 사용자 지정 키를 저장하여 사용 사례와 관련된 데이터를 반환할 수 있습니다.

00:15:01.000 --> 00:15:08.000
카탈로그에 추가한 데이터가 유효한 속성 목록 값 중 하나인지 확인하세요.

00:15:08.000 --> 00:15:23.000
matchStreamingBuffer를 사용할 때, ShazamKit은 오디오 스트림과 일치하고 성능과 검색 강도의 균형을 유지하여 서명을 생성하고 자동 업데이트하는 모든 작업을 수행합니다.

00:15:23.000 --> 00:15:36.000
그래서 이제 당신은 교육용 비디오와 동기화된 전체 앱을 구축하여 학생이 현재 서명과 사용자 지정 카탈로그만 사용하는 곳으로 콘텐츠를 업데이트했습니다.

00:15:36.000 --> 00:15:43.000
이것은 가능한 많은 예 중 하나일 뿐이며, 우리는 당신이 ShazamKit을 사용하여 무엇을 만들 것인지 보게 되어 정말 기쁩니다.

00:15:43.000 --> 00:15:46.000
고마워 그리고 멋진 WWDC를 보내.

00:15:46.000 --> 23:59:59.000
♪

