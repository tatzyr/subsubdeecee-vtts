WEBVTT

00:00:01.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:11.000
안녕하세요, 저는 젠 시몬스입니다.

00:00:11.000 --> 00:00:14.000
그리고 저는 새로운 사파리가 웹 디자인과 개발에 어떤 영향을 미치는지에 대해 이야기하기 위해 왔습니다.

00:00:14.000 --> 00:00:22.000
만약 당신이 웹 디자이너, 웹 개발자이거나, 웹사이트나 웹 앱을 만드는 데 관련된 역할이 있다면, 이 세션은 당신을 위한 것입니다.

00:00:22.000 --> 00:00:25.000
올해는 사파리에게 큰 해이다.

00:00:25.000 --> 00:00:31.000
이 세션에서, 우리는 사파리의 변화의 시각적 또는 상호 작용 디자인 영향에 초점을 맞출 것입니다.

00:00:31.000 --> 00:00:34.000
사파리는 완전히 새로운 디자인을 가지고 있다.

00:00:34.000 --> 00:00:42.000
기본적으로, 당신의 웹사이트는 멋져 보일 것이지만, 더 많은 노력을 하고 싶다면, 이 세션은 새로운 사파리에서 당신의 작업을 정말 빛나게 할 수 있는 힘을 실어줄 것입니다.

00:00:42.000 --> 00:00:48.000
우리는 macOS, iOS 및 iPadOS의 몇 가지 훌륭한 새로운 기능과 그것이 웹에 어떤 영향을 미칠지에 대해 이야기할 것입니다.

00:00:48.000 --> 00:00:54.000
우리는 내가 가장 좋아하는 새로운 측면 비율 속성을 포함하여 CSS의 새로운 것을 다룰 것이다.

00:00:54.000 --> 00:01:02.000
그리고 우리는 양식 컨트롤, 새로 구현한 컨트롤, 그리고 iOS와 iPadOS의 양식에 대한 완전히 새로운 모습을 살펴볼 것입니다.

00:01:02.000 --> 00:01:06.000
브라우저 자체의 디자인부터 시작합시다.

00:01:06.000 --> 00:01:14.000
웹 브라우저의 진화 초기부터, 우리가 사용한 대부분의 브라우저에는 몇 가지 근본적인 공통점이 있었다.

00:01:14.000 --> 00:01:20.000
상단에는 자체 라인에 있는 URL을 위한 슬롯이 있는 매우 큰 도구 모음이 있습니다.

00:01:20.000 --> 00:01:27.000
그리고 웹사이트는 이 공간, 웹 포털, 뷰포트 안에 있다.

00:01:27.000 --> 00:01:38.000
물론, 사용자로서, 우리는 우리가 사용하고 있는 웹사이트에 모든 초점을 맞추도록 훈련했지만, 수년 동안 브라우저 자체는 강력한 시각적 존재감을 유지해 왔습니다.

00:01:38.000 --> 00:01:45.000
아니요, 웹사이트가 어떻게 보이고 느껴지도록 설계되었든, 브라우저 인터페이스는 그 디자인을 짜맞추고 지배했습니다.

00:01:45.000 --> 00:01:53.000
우리가 그 프레임을 없애고 웹사이트의 디자인을 창의 모든 가장자리까지 확장할 수 있다면 어떨까요?

00:01:53.000 --> 00:01:56.000
음, 그게 우리가 사파리 15에서 한 일이야.

00:01:56.000 --> 00:02:01.000
올해, 우리는 우리가 알고 있는 브라우징 경험을 다시 상상했다.

00:02:01.000 --> 00:02:05.000
우리는 웹 콘텐츠에 모든 초점을 맞추고 있다.

00:02:05.000 --> 00:02:10.000
새로운 사파리는 배경색을 변경하여 탭 바를 각 웹사이트에 혼합합니다.

00:02:10.000 --> 00:02:16.000
전체 인터페이스는 한 줄에 있으며, 필요할 때 자연스럽게 나타난다.

00:02:16.000 --> 00:02:19.000
이것은 당신의 콘텐츠를 더 광범위하게 느끼게 합니다.

00:02:19.000 --> 00:02:24.000
각 웹 페이지 또는 웹 앱은 창의 네 모서리까지 확장됩니다.

00:02:24.000 --> 00:02:27.000
브라우저 인터페이스는 콘텐츠에 양보한다.

00:02:27.000 --> 00:02:31.000
그래서 도구 모음의 배경에 어떤 색이 사용되는지 결정하는 것은 무엇인가요?

00:02:31.000 --> 00:02:37.000
웹 디자이너나 개발자로서, 당신은 HTML에서 선택할 수 있는 색상과 코드를 선택할 수 있습니다.

00:02:37.000 --> 00:02:42.000
색상을 제공하지 않는 사이트의 경우, 사파리는 사용할 색상을 알아낼 것이다.

00:02:42.000 --> 00:02:45.000
때때로 사파리는 웹 페이지의 배경색과 일치한다.

00:02:45.000 --> 00:02:47.000
다른 때는 헤더 배경과 일치한다.

00:02:47.000 --> 00:02:59.000
도구 모음 색상을 선택하려면 name="theme-color"가 있는 메타 태그를 사용하여 HTML 헤드에 넣고 콘텐츠 속성을 사용하여 색상을 지정하십시오.

00:02:59.000 --> 00:03:04.000
HTML 헤드에 이 정보를 제공함으로써, 사파리는 페이지 로드 시 즉시 얻을 것이다.

00:03:04.000 --> 00:03:06.000
그것은 또한 선언적 코드이다.

00:03:06.000 --> 00:03:07.000
그것은 사용하기 매우 간단하다.

00:03:07.000 --> 00:03:12.000
두 가지 색상을 설정하여 라이트 모드와 다크 모드를 모두 지원할 수 있습니다.

00:03:12.000 --> 00:03:15.000
네, 이제 메타 태그에 미디어 속성을 추가할 수 있습니다.

00:03:15.000 --> 00:03:24.000
이 경우, 첫 번째 메타 태그의 media=“(prefers-color-scheme: light)”와 두 번째 메타 태그의 “(prefers-color-scheme: dark)”.

00:03:24.000 --> 00:03:28.000
이것은 우리가 이번 봄에 제안한 HTML 사양에 새로 추가된 것이다.

00:03:28.000 --> 00:03:33.000
그것은 우리에게 사용자가 요청한 색 구성표에 연결할 수 있는 간단하고 강력한 방법을 제공한다.

00:03:33.000 --> 00:03:46.000
Name="theme-color"를 지원하지만 아직 메타 태그에서 미디어 속성 사용을 지원하지 않는 브라우저에서, 해당 브라우저는 첫 번째 테마 색상 선언을 사용하고 나머지는 무시합니다.

00:03:46.000 --> 00:03:51.000
그러니 CSS에서 하는 것처럼 마지막이 아니라 먼저 폴백을 두세요.

00:03:51.000 --> 00:04:00.000
사이트에 다크 모드에 대한 전체 디자인이 없더라도, 장치가 다크 모드에 있을 때 탭 표시줄에 자신만의 색상을 설정하고 싶을 수도 있습니다.

00:04:00.000 --> 00:04:10.000
지정한 색상이 너무 가볍다면, 사파리는 사용자에게 요청한 다크 모드 경험을 제공하기 위해 조정을 할 것입니다.

00:04:10.000 --> 00:04:17.000
HTML 헤드에서 테마 색상을 정의하는 대신, 웹 매니페스트 파일에서 정의할 수 있습니다.

00:04:17.000 --> 00:04:22.000
두 곳에서 모두 지정하면, HTML 헤드의 색상이 사용되는 색상입니다.

00:04:22.000 --> 00:04:32.000
그리고 지금 2021년 6월에, 웹 매니페스트 파일에서 라이트와 다크 모드의 여러 색상을 정의할 수 있는 방법은 아직 없습니다.

00:04:32.000 --> 00:04:36.000
그것을 알아내기 위해 지금 실무 그룹에서 논의가 일어나고 있다.

00:04:36.000 --> 00:04:50.000
또한 사파리가 적용하지 않을 매우 좁은 범위의 색상이 있습니다 - 색상은, 정말로, 사용자의 경험에 완전히 방해가 될 것이며, 아마도 접근할 수 없게 만들 것입니다.

00:04:50.000 --> 00:04:55.000
이것들을 위해, 사파리는 이 사이트의 탭 바를 흰색으로 바꾸는 것과 같은 다른 일을 할 것이다.

00:04:55.000 --> 00:05:01.000
만약 당신이 선택한 색상이 작동하지 않는 것 같다면, 조금 조정해 보세요.

00:05:01.000 --> 00:05:07.000
원한다면, 웹사이트의 다른 부분에서 테마 색상을 다르게 설정할 수 있습니다.

00:05:07.000 --> 00:05:11.000
각각의 HTML 페이지에는 자체 헤드가 있다.

00:05:11.000 --> 00:05:16.000
또는 자바스크립트를 사용하여 사용자의 행동에 반응하여 테마 색상을 동적으로 바꿀 수 있습니다.

00:05:16.000 --> 00:05:23.000
디자인이 탭 바를 사이트에 매끄럽게 혼합할 수 있는 방법을 생각해 보세요.

00:05:23.000 --> 00:05:34.000
그것이 macOS의 Safari 15와 iPadOS 및 iOS 15용 Safari에서 전체 창을 채우는 웹사이트나 웹 앱의 느낌을 만들 수 있는 방법입니다.

00:05:34.000 --> 00:05:42.000
다음으로, 당신의 웹사이트를 다음 단계로 끌어올리기 위해 할 수 있는 두 가지 다른 작은 조정을 살펴봅시다.

00:05:42.000 --> 00:05:47.000
우리 중 많은 사람들이 일할 때 웹 브라우저에서 많은 탭이 열려 있다.

00:05:47.000 --> 00:05:53.000
새로운 사파리는 그 탭을 그룹으로 구성하는 직관적인 방법을 제공한다.

00:05:53.000 --> 00:05:54.000
난 이게 정말 좋아.

00:05:54.000 --> 00:06:03.000
나는 내 작업 프로젝트를 별도의 그룹으로 정리하고 내가 원하는 대로 이름을 지었고, 그런 다음 그것들을 치울 수 있다.

00:06:03.000 --> 00:06:13.000
탭 그룹은 macOS, iOS 및 iPadOS에서 동기화되기 때문에 나중에 모든 장치에서 해당 탭을 다시 로드할 수 있다는 것을 알고 내가 작업하지 않는 것들을 말하세요.

00:06:13.000 --> 00:06:22.000
탭 그룹은 탭 바를 정리할 수 있는 기능을 제공하지만, 여전히 하나의 창에서 많은 탭을 열 수 있습니다.

00:06:22.000 --> 00:06:30.000
탭이 많을 때, 파비콘은 어떤 탭이 어떤 탭인지 쉽게 식별하는 데 매우 중요해진다.

00:06:30.000 --> 00:06:36.000
고해상도 장치를 지원하는 사이트에 훌륭한 아이콘을 제공하고 싶을 것입니다.

00:06:36.000 --> 00:06:43.000
투명한 배경을 가진 파비콘은 특히 멋져 보일 수 있다.

00:06:43.000 --> 00:06:51.000
그건 그렇고, 많은 팀이 자동화된 도구를 사용하여 다양한 크기의 아이콘 형식을 생성하여 다양한 장치를 지원합니다.

00:06:51.000 --> 00:06:59.000
종종, 그러한 툴링은 HTML 헤드의 아이콘 코드와 함께 테마 색상을 지정하는 코드를 생성합니다.

00:06:59.000 --> 00:07:06.000
아니면 당신의 CMS나 프론트엔드 프레임워크가 테마 색상을 정의하고 있는데, 당신은 그것을 깨닫지 못했을 수도 있습니다.

00:07:06.000 --> 00:07:07.000
확인하고 봐.

00:07:07.000 --> 00:07:14.000
그 색상을 테스트하고 그것이 당신의 사이트 디자인에 좋은지 확인하고, 아마도 더 나은 것으로 바꾸세요.

00:07:14.000 --> 00:07:19.000
대부분의 사람들이 새로운 탭 바를 볼 때, 그들은 한 줄에서 모든 탭을 보게 될 것이다.

00:07:19.000 --> 00:07:28.000
웹사이트를 만드는 사람으로서, 당신은 아마 사이트가 브라우저 창에 로드될 때, 그 사이트의 탭에 도메인 이름이 표시된다는 것을 알게 될 것입니다.

00:07:28.000 --> 00:07:37.000
그리고 사이트가 배경 탭에 있을 때, 웹 페이지 제목은 표시되는 것이며, HTML 헤드의 제목 태그에 있는 텍스트입니다.

00:07:37.000 --> 00:07:43.000
페이지 제목의 공간은 제한될 수 있으므로, 웹 페이지 제목에 대한 사려 깊은 패턴을 만드는 것이 중요합니다.

00:07:43.000 --> 00:07:49.000
제목이 더 빨리 요점에 도달할수록, 사용자가 원하는 탭을 더 쉽게 찾을 수 있다.

00:07:49.000 --> 00:07:54.000
일부 사이트는 웹사이트의 이름을 먼저, 페이지의 이름을 두 번째로 둔다.

00:07:54.000 --> 00:07:58.000
대신, 콘텐츠 제목을 먼저 넣으세요.

00:07:58.000 --> 00:08:05.000
그렇게 하면, 누군가가 당신의 사이트를 여러 탭으로 열었다면, 어떤 탭이 어느 탭인지 더 쉽게 알 수 있습니다.

00:08:05.000 --> 00:08:12.000
탭 바의 색상, 파비콘, 페이지 제목은 모두 의도적으로 디자인할 수 있는 사이트의 일부입니다.

00:08:12.000 --> 00:08:18.000
그것들은 웹 페이지 자체에 나타나지 않지만, 당신의 웹사이트나 웹 앱에 대한 누군가의 경험에 깊은 영향을 미칩니다.

00:08:18.000 --> 00:08:24.000
테마 컬러 메타 태그의 힘을 활용하는 방법에 대해 더 많이 보여주기 위해, 여기 마일스가 있습니다.

00:08:24.000 --> 00:08:26.000
안녕, 난 마일스야.

00:08:26.000 --> 00:08:32.000
그리고 저는 WWDC 동안 사람들이 개 비디오를 스트리밍할 수 있는 웹사이트인 Dog Dog DC에서 일하고 있습니다.

00:08:32.000 --> 00:08:35.000
여기서, 당신은 사파리에서 매기의 스트림을 볼 수 있습니다.

00:08:35.000 --> 00:08:36.000
그녀는 정말 행복해 보여!

00:08:36.000 --> 00:08:43.000
나는 지금 일시 정지된 스트림을 시작했지만, 잠시 일시 정지를 해제할 것이다.

00:08:43.000 --> 00:08:45.000
잘 잡았어.

00:08:45.000 --> 00:08:52.000
그리고 Dog Dog DC의 오른쪽에서, 당신은 Maggie가 얼마나 좋은지 표현하기 위해 실시간으로 댓글을 달 수 있습니다.

00:08:52.000 --> 00:08:58.000
이제, 사파리 창 상단에서, 사파리 15는 실제로 내 페이지의 배경색인 탭 바를 검은색으로 채색한다.

00:08:58.000 --> 00:09:04.000
검은색이 하단의 중앙 콘텐츠 영역의 배경으로 사용되는 것을 볼 수 있습니다.

00:09:04.000 --> 00:09:07.000
그리고 그 검은색은 탭 바에서 좋아 보인다.

00:09:07.000 --> 00:09:11.000
전체 창문은 총체적이고 일관된 디자인을 가진 것처럼 보인다.

00:09:11.000 --> 00:09:18.000
당신은 또한 탭 바에서 사파리가 내 페이지가 안전하지 않다고 언급하고 있다는 것을 볼 수 있습니다. 왜냐하면 이것은 내 개발 환경이기 때문입니다.

00:09:18.000 --> 00:09:24.000
이제, 우리는 또한 웹사이트 상단에 탭 바까지 확장되어 정말 멋지게 보이는 떠다니는 파란색 막대가 있습니다.

00:09:24.000 --> 00:09:32.000
그래서 내가 여기 편집기에서 내 소스 코드에 들어가면...

00:09:32.000 --> 00:09:39.000
나는 사파리가 이 아름다운 파란색과 일치하도록 자동으로 발견한 검은색을 재정의할 수 있다.

00:09:39.000 --> 00:09:45.000
나는 이 메타 태그를 추가할 것이고, 이는 그 파란색을 탭 표시줄로 확장할 것이다.

00:09:45.000 --> 00:09:49.000
그럼 내가 다시 장전해서 어떻게 생겼는지 볼게.

00:09:49.000 --> 00:09:59.000
그것은 꽤 좋아 보이지만, 우리는 Dog Dog DC를 상단에 수평의 회색 뉴스레터 바를 포함하도록 설계했으며, 이는 실제로 상단 탭 바에 색상의 흐름을 약간 방해합니다.

00:09:59.000 --> 00:10:13.000
방해받지 않는 캔버스를 얻기 위해, 배경색이 아닌 다른 방법으로 뉴스레터 바를 표시해 봅시다.

00:10:13.000 --> 00:10:15.000
흠.

00:10:15.000 --> 00:10:17.000
나중에 계속 가지고 놀 거야.

00:10:17.000 --> 00:10:25.000
지금은, 나는 그냥 뉴스레터 바를 제거할 것이다.

00:10:25.000 --> 00:10:27.000
와, 그거 지금 멋져 보여.

00:10:27.000 --> 00:10:31.000
그 색은 방해받지 않고 사파리 15에서 정말 빛난다.

00:10:31.000 --> 00:10:35.000
그리고 물론, 같은 효과는 iPadOS에서도 잘 작동한다.

00:10:35.000 --> 00:10:36.000
알았어.

00:10:36.000 --> 00:10:46.000
이제, 나는 여기 앉아서 하루 종일 매기를 볼 수 있지만, 내가 정말로 하고 싶은 것은 그녀의 앞과 중앙을 가져오고 그녀와 채팅 공간을 제외한 모든 것을 어둡게 하는 것이다. 왜냐하면 나는 그 강아지 댓글을 진지하게 받아들이기 때문이다.

00:10:46.000 --> 00:10:50.000
그래서 물론, 나는 이 극장 모드 버튼을 탭할 거야.

00:10:50.000 --> 00:10:52.000
하지만 기다려.

00:10:52.000 --> 00:10:55.000
내가 극장 모드로 들어가면, 탭 바는 여전히 다채롭다.

00:10:55.000 --> 00:11:01.000
극장 모드로 들어갈 때 테마 색상을 업데이트하면 극장 모드가 조금 더 나을 것입니다.

00:11:01.000 --> 00:11:05.000
음, 우리는 여기 내 자바스크립트에서 그걸 고칠 수 있어.

00:11:05.000 --> 00:11:12.000
이전에, 젠은 메타 요소 자체에서 미디어 쿼리를 사용하여 다크 모드와 같은 환경의 변화에 자동으로 반응하는 방법을 보여주었습니다.

00:11:12.000 --> 00:11:27.000
그러나, 내 페이지 자체에 의해 시작된 변경의 경우, 극장 모드로 들어갈 때 표준 자바스크립트를 사용하여 메타 요소 자체를 수정하기 위해 자바스크립트를 사용하여 보다 능동적인 방식으로 이 작업을 수행할 수 있습니다.

00:11:27.000 --> 00:11:34.000
그리고, 물론, 나는 극장 모드를 종료할 때 요소를 재설정하는 것을 잊을 수 없다.

00:11:34.000 --> 00:11:42.000
지금 어떻게 생겼는지 보자.

00:11:42.000 --> 00:11:44.000
완벽해. 그리고 여기 우리가 간다.

00:11:44.000 --> 00:11:45.000
그게 훨씬 더 좋아 보여.

00:11:45.000 --> 00:11:47.000
이제 나는 정말 매기에게 집중할 수 있어.

00:11:47.000 --> 00:11:49.000
너에게 돌아가, 젠.

00:11:49.000 --> 00:11:51.000
개 개 DC.

00:11:51.000 --> 00:11:54.000
온라인이 되면 그 사이트를 꼭 방문할 거야, 마일스.

00:11:54.000 --> 00:11:55.000
고마워.

00:11:55.000 --> 00:12:02.000
나는 이것이 웹 디자이너가 사람들의 본능적인 웹 경험에 영향을 미칠 수 있는 또 다른 방법을 여는 방법을 정말 좋아한다.

00:12:02.000 --> 00:12:06.000
이제 iOS에서 무슨 일이 일어나고 있는지 좀 더 자세히 알아봅시다.

00:12:06.000 --> 00:12:14.000
여기 상단에서도 테마 색상이 사용되는 것을 알 수 있으며, 센서 하우징을 감싸서 웹 페이지나 웹 앱이 전체 화면을 채웁니다.

00:12:14.000 --> 00:12:18.000
당신은 또한 우리가 탭 바를 화면 하단으로 옮겼다는 것을 알게 될 것입니다.

00:12:18.000 --> 00:12:26.000
이것은 사용자의 엄지손가락 바로 아래에 두어, 특히 그들이 한 손으로 휴대폰을 사용하는 경우 더 쉽게 접근할 수 있게 해준다.

00:12:26.000 --> 00:12:30.000
탭 간에 전환하려면 탭 표시줄을 옆으로 스와이프하세요.

00:12:30.000 --> 00:12:36.000
그리고 모든 탭의 그리드를 보고 탭 그룹에 액세스하려면 위로 스와이프하세요.

00:12:36.000 --> 00:12:45.000
사용자가 웹 페이지를 스크롤할 때, 탭 표시줄은 맨 아래에 있는 도메인 이름만 최소화하여 사람들이 어디에 있는지 알 수 있도록 합니다.

00:12:45.000 --> 00:12:51.000
그들이 페이지를 다시 아래로 당기면, 확장된 탭 표시줄이 다시 나타난다.

00:12:51.000 --> 00:12:57.000
이 모든 것은 당신이 만드는 웹사이트와 웹 앱이 쇼의 빛나는 스타라는 것을 의미합니다.

00:12:57.000 --> 00:13:04.000
하지만 페이지 하단에 중요한 것을 만들었고 이제 새로운 탭 표시줄에 의해 가려진다면 어떨까요?

00:13:04.000 --> 00:13:13.000
이것은 CSS에서 환경 변수를 사용하여 충분한 패딩이나 여백 또는 그리드 트랙이 있는지 확인하거나 레이아웃 코드를 작성하는 곳입니다.

00:13:13.000 --> 00:13:21.000
환경 변수를 사용하여 탭 표시줄의 영향을 받는 UI나 콘텐츠가 방해가 되는지 확인할 수 있습니다.

00:13:21.000 --> 00:13:24.000
그래서 환경 변수가 뭐야?

00:13:24.000 --> 00:13:28.000
그것은 브라우저에서 제공하는 동적 측정이다.

00:13:28.000 --> 00:13:32.000
당신은 여기에서 볼 수 있습니다, 녹색은 안전 구역이라고 불리는 것입니다.

00:13:32.000 --> 00:13:36.000
탭 바가 하단에 확장되면, 안전 영역은 그 위에서 시작됩니다.

00:13:36.000 --> 00:13:41.000
탭 표시줄이 최소화됨에 따라, 안전 영역의 크기가 바뀝니다.

00:13:41.000 --> 00:13:50.000
Env(safe-area-inset-bottom)는 안전 영역에서 뷰포트 하단까지 얼마나 많은 픽셀의 측정이다.

00:13:50.000 --> 00:13:54.000
그것은 CSS 사용자 지정 속성의 var 함수와 매우 비슷합니다.

00:13:54.000 --> 00:13:59.000
예를 들어, 사용자 지정 속성을 사용하여 모든 색상을 변수로 바꾸었을 수도 있습니다.

00:13:59.000 --> 00:14:04.000
이 변수를 정의하는 대신, 브라우저가 그것을 정의합니다.

00:14:04.000 --> 00:14:07.000
그것은 환경에 대한 정보를 제공하고 있다.

00:14:07.000 --> 00:14:12.000
그리고 계산 내부를 포함하여 코드의 어느 곳에서나 길이 측정을 사용할 수 있습니다.

00:14:12.000 --> 00:14:19.000
여기, 내 바닥글은 위치이다: 바닥글의 가장자리에서 두 개의 링크를 밀어내기 위해 약간의 패딩으로 끈적끈적하다.

00:14:19.000 --> 00:14:24.000
나는 1rem + env(safe-area-inset-bottom)의 패딩 바닥을 정의했다.

00:14:24.000 --> 00:14:28.000
많은 맥락에서, 그것은 1rem + 0이 될 것이다.

00:14:28.000 --> 00:14:34.000
iOS에서는 1rem과 탭 표시줄을 지우는 데 필요한 거리가 더해질 것이다.

00:14:34.000 --> 00:14:45.000
안전 영역의 가장자리에서 뷰포트의 가장자리까지 측정을 제공하는 네 가지 환경 변수가 있습니다: env(safe-area-inset-top), -right, -bottom 및 -left.

00:14:45.000 --> 00:14:47.000
이러한 환경 변수는 사파리에서만 작동하지 않는다.

00:14:47.000 --> 00:14:53.000
그것들은 CSS 사양에 정의되어 있으며 다양한 브라우저, 장치 및 운영 체제에서 작동합니다.

00:14:53.000 --> 00:15:00.000
수직 조정을 하려면, 환경 변수를 사용하는 조치를 취해야 합니다.

00:15:00.000 --> 00:15:03.000
사파리는 기본적으로 콘텐츠를 옮기려고 하지 않을 것이다.

00:15:03.000 --> 00:15:07.000
그러나 아이폰이 옆으로 회전하면, 조금 다르게 작동한다.

00:15:07.000 --> 00:15:14.000
센서 하우징과 화면의 둥근 가장자리를 피하기 위해 정의된 안전 영역도 있습니다.

00:15:14.000 --> 00:15:22.000
기본적으로, 사파리는 자동으로 웹 콘텐츠를 왼쪽과 오른쪽 가장자리에서 이동시켜 안전한 영역에 넣는다.

00:15:22.000 --> 00:15:24.000
왜 그런지 궁금할 거야.

00:15:24.000 --> 00:15:30.000
음, 대신 사파리가 모든 사이트를 왼쪽과 오른쪽 가장자리로 확장한다면, 콘텐츠가 손실될 수 있습니다.

00:15:30.000 --> 00:15:32.000
여기, 그 텍스트는 가려져 있다.

00:15:32.000 --> 00:15:35.000
그리고 그건 유용성에 좋지 않아.

00:15:35.000 --> 00:15:49.000
데이터 손실을 방지하기 위해, 사파리는 사이트가 반응형 웹 디자인에서 일반적으로 사용되는 메타 태그인 width=device-width의 메타 뷰포트 태그를 사용하는 경우를 포함하여 콘텐츠를 안전한 영역으로 이동합니다.

00:15:49.000 --> 00:15:51.000
하지만 물론 나는 이 디자인이 더 좋아 보였지만.

00:15:51.000 --> 00:15:56.000
보라색 헤더와 사진이 화면 가장자리까지 확장되고 싶습니다.

00:15:56.000 --> 00:16:06.000
메타 뷰포트 태그를 viewport-fit=cover로 변경하여 브라우저가 콘텐츠를 왼쪽과 오른쪽 가장자리로 확장하기를 원한다고 사파리에 신호를 보낼 수 있습니다.

00:16:06.000 --> 00:16:10.000
이제 나는 레이아웃이 작동하는지 확인할 책임이 있다.

00:16:10.000 --> 00:16:14.000
콘텐츠를 완전히 볼 수 있도록 환경 변수를 사용할 것입니다.

00:16:14.000 --> 00:16:22.000
헤더 텍스트와 단락 텍스트에서 env(safe-area-inset-left)의 왼쪽 여백을 정의할 수 있습니다.

00:16:22.000 --> 00:16:33.000
안전 영역 삽입 및 환경 변수에 대한 자세한 내용은 이 세션의 메모에 링크된 WebKit 블로그의 "iPhone X용 웹사이트 디자인" 기사를 확인하세요.

00:16:33.000 --> 00:16:37.000
마일즈에 가서 환경 변수가 어떻게 작동하는지 봅시다.

00:16:37.000 --> 00:16:41.000
이제 iPhone의 Safari에서 Dog Dog DC가 어떻게 생겼는지 봅시다.

00:16:41.000 --> 00:16:48.000
여기 내 아이폰에서, 우리는 전에 그녀를 보았던 것과 같은 방식으로 매기를 볼 수 있지만, 이번에는 더 작은 장치에서 볼 수 있다.

00:16:48.000 --> 00:16:51.000
하지만 기다려. 문제가 있는 것 같아.

00:16:51.000 --> 00:16:56.000
사용자가 채팅 영역을 스크롤할 때, 입력 영역은 탭 표시줄과 겹친다.

00:16:56.000 --> 00:17:07.000
Dog Dog DC는 위에서 아래로 크기를 조정하기 위해 vh 단위를 명시적으로 사용하고 있으며, 현재 탭 표시줄과 공유하고 있는 전체 뷰포트의 크기를 명시적으로 사용하고 있습니다.

00:17:07.000 --> 00:17:12.000
사용자로서, 나는 탭 표시줄을 최소화하기 위해 스크롤할 수 있으며, 그것은 꽤 쉽다.

00:17:12.000 --> 00:17:18.000
하지만 개발자로서, 저는 사용자가 스크롤할 때에도 가능한 최고의 경험을 할 수 있도록 하고 싶습니다.

00:17:18.000 --> 00:17:24.000
운 좋게도, 나는 안전한 영역 삽입을 사용하여 입력 영역을 적절한 양만큼 옮길 수 있다.

00:17:24.000 --> 00:17:34.000
내가 해야 할 일은 바닥 패딩을 추가하고 safe-area-inset-bottom으로 설정하는 것이다.

00:17:34.000 --> 00:17:39.000
그럼 난 그냥 내 웹 페이지를 다시 로드해.

00:17:39.000 --> 00:17:44.000
저는 사실 사파리 15에서 제가 가장 좋아하는 새로운 기능 중 하나를 사용했습니다: 새로고침을 위해 당기세요.

00:17:44.000 --> 00:17:45.000
흠.

00:17:45.000 --> 00:17:50.000
그것은 내가 원하는 것에 꽤 가깝지만, 지금은 조금 너무 높은 것 같다.

00:17:50.000 --> 00:17:52.000
오, 문제가 보여.

00:17:52.000 --> 00:17:58.000
나는 이미 하단 여백이 있을 때 입력 영역 하단 패딩을 주었고, 그 두 가지는 수직으로 쌓였다.

00:17:58.000 --> 00:18:03.000
그래서 대신 안전 영역 삽입을 사용하기 위해 기존 마진을 업데이트해야 할 것 같습니다.

00:18:03.000 --> 00:18:21.000
이 스타일을 다시 조정하고 지금 어떻게 생겼는지 봅시다.

00:18:21.000 --> 00:18:23.000
완벽해.

00:18:23.000 --> 00:18:26.000
이것은 실제로 환경 변수의 힘을 보여준다.

00:18:26.000 --> 00:18:28.000
그것들은 당신의 스타일의 어떤 길이에도 적용될 수 있습니다.

00:18:28.000 --> 00:18:33.000
테두리, 여백, 패딩, 선 높이, 무엇이든 사용할 수 있습니다.

00:18:33.000 --> 00:18:42.000
탭 표시줄이 최소화되고 확장됨에 따라, 환경 변수의 값은 자동으로 업데이트되며, Safari는 자동으로 새로운 값으로 페이지를 다시 레이아웃합니다.

00:18:42.000 --> 00:18:49.000
또한 Dog Dog DC에서 탭 표시줄이 확장될 때 채팅 영역이 어떻게 크기를 조정하는지 볼 수 있습니다.

00:18:49.000 --> 00:18:54.000
그 위의 모든 것은 같은 크기로 유지되는 반면, 그 아래의 모든 것은 탭 바를 껴안는다.

00:18:54.000 --> 00:19:00.000
이것은 우리가 이러한 종류의 행동이 매우 자연스럽고 만들기 쉬운 플렉스박스 레이아웃을 사용하고 있기 때문입니다.

00:19:00.000 --> 00:19:07.000
플렉스박스나 그리드와 같은 더 현대적인 레이아웃 모드를 아직 사용하지 않았다면, 지금이 그들에게 또 다른 모습을 주기에 좋은 시간이 될 것입니다.

00:19:07.000 --> 00:19:11.000
다음으로, 젠으로부터 사파리 15의 몇 가지 더 훌륭한 기능에 대해 들어봅시다.

00:19:11.000 --> 00:19:12.000
고마워, 마일스.

00:19:12.000 --> 00:19:19.000
환경 변수는 누군가가 사용하는 장치에 동적으로 반응하는 레이아웃을 만드는 또 다른 강력한 도구입니다.

00:19:19.000 --> 00:19:24.000
또한 누군가가 홈 화면 앱으로 저장할 때 웹사이트가 어떻게 보이는지 봅시다.

00:19:24.000 --> 00:19:28.000
탭 한 번으로 이 사이트를 홈 화면에 저장할 수 있습니다.

00:19:28.000 --> 00:19:31.000
이제 내 사이트의 아이콘이 내 홈 화면에 있다.

00:19:31.000 --> 00:19:35.000
그것을 탭하면, 사이트가 홈 화면 앱으로 열린 것을 볼 수 있습니다.

00:19:35.000 --> 00:19:37.000
정말 멋져 보여.

00:19:37.000 --> 00:19:41.000
테마 색상은 사파리에서와 마찬가지로 화면 상단을 채웁니다.

00:19:41.000 --> 00:19:44.000
나는 앱과 같은 경험을 한다.

00:19:44.000 --> 00:19:47.000
하단에 탭 바가 없다는 것을 알게 될 것입니다.

00:19:47.000 --> 00:19:49.000
우리는 사파리 앱에 있지 않아.

00:19:49.000 --> 00:19:52.000
우리는 탄력적인 웹 디자인 앱에 있습니다.

00:19:52.000 --> 00:19:58.000
그래서 그것이 새로운 사파리이며 당신의 웹사이트가 환상적으로 보이도록 할 수 있는 방법입니다.

00:19:58.000 --> 00:20:06.000
다음으로, macOS, iOS 및 iPadOS의 몇 가지 놀라운 새로운 기능과 웹에 어떤 영향을 미칠지에 대해 이야기해 봅시다.

00:20:06.000 --> 00:20:16.000
종종, 사람들이 당신의 웹사이트에 대해 갖게 될 첫 번째 경험은 한 사람이 메시지에서 다른 사람에게 링크를 보낼 때와 같이 다른 사람이 그것에 대해 말할 때입니다.

00:20:16.000 --> 00:20:21.000
이런 일이 일어날 때마다, 그 사이트는 간단한 리치 링크로 나타난다.

00:20:21.000 --> 00:20:27.000
이러한 리치 링크가 작동하는 방식은 iOS, iPad OS 및 macOS에서 일관됩니다.

00:20:27.000 --> 00:20:36.000
그리고 올해, Shared with You와 함께, 우리는 사람들이 웹 콘텐츠를 서로 공유할 수 있는 많은 새로운 장소와 많은 새로운 방법을 추가했습니다.

00:20:36.000 --> 00:20:38.000
이건 그냥 두 개야.

00:20:38.000 --> 00:20:43.000
당신은 당신의 사이트가 풍부한 링크로 제시될 때 환상적으로 보이도록 시간을 할애하고 싶을 것입니다.

00:20:43.000 --> 00:20:52.000
기본적으로, 리치 링크는 웹 페이지 제목, 사이트 URL 및 파비콘을 선택하고 간단한 방식으로 표시합니다.

00:20:52.000 --> 00:21:00.000
오픈 그래프 프로토콜에 정의된 이름이 있는 메타 태그를 통해 HTML 헤드의 메타데이터에 추가하여 이를 개선할 수 있습니다.

00:21:00.000 --> 00:21:05.000
웹 페이지 제목보다 이 문맥에 조금 더 나은 제목을 지정해 봅시다.

00:21:05.000 --> 00:21:08.000
그리고 우리는 표시할 그래픽을 지정할 것이다.

00:21:08.000 --> 00:21:15.000
우리는 이 이미지가 이 페이지의 내용의 영웅 이미지와 같은 이 특정 웹 페이지를 위한 무언가가 되기를 바랍니다.

00:21:15.000 --> 00:21:18.000
우리가 원한다면, 우리는 또한 비디오를 제공할 수 있다.

00:21:18.000 --> 00:21:25.000
사용자가 허용하면 비디오가 자동으로 재생되며, 탭하여 소리를 들을 수 있습니다.

00:21:25.000 --> 00:21:32.000
Developer.apple.com의 짧은 비디오인 "아름다운 리치 링크 보장"에서 자세한 내용을 자세히 알아볼 수 있습니다.

00:21:32.000 --> 00:21:39.000
리치 링크를 사용자 정의하는 것은 사람들이 당신의 웹사이트나 웹 앱으로 환상적인 경험을 할 수 있도록 하는 또 다른 세부 사항입니다.

00:21:39.000 --> 00:21:44.000
다음으로, 시각 지능과 웹을 살펴봅시다.

00:21:44.000 --> 00:21:47.000
웹의 너무 많은 텍스트가 이미지 안에 갇혀 있다.

00:21:47.000 --> 00:21:52.000
사파리 15부터, 우리는 그 텍스트를 자유롭게 하기 위해 시각 지능을 사용하고 있다.

00:21:52.000 --> 00:21:58.000
이제 사람들은 웹 페이지의 다른 텍스트와 마찬가지로 직접 상호 작용할 수 있습니다.

00:21:58.000 --> 00:22:02.000
여기 텍스트로 가득 찬 트위터 이미지가 있습니다.

00:22:02.000 --> 00:22:07.000
우리가 그 위에 마우스를 올려놓으면, 마우스 포인터가 커서로 바뀌는 것을 볼 수 있나요?

00:22:07.000 --> 00:22:12.000
이제 우리는 다른 텍스트와 마찬가지로 이 텍스트를 드래그하고 복사할 수 있습니다.

00:22:12.000 --> 00:22:24.000
macOS Monterey에서 이미지 위에 마우스를 올려놓거나 iOS 또는 iPadOS 15에서 이미지를 터치할 때마다 시각적 지능은 해당 이미지의 모든 텍스트를 빠르게 찾고 인식합니다.

00:22:24.000 --> 00:22:37.000
시각 지능이 텍스트를 찾으면, 다른 텍스트와 마찬가지로 선택하고 복사할 수 있을 뿐만 아니라, 검색하고, 번역하고, 그 문구로 웹을 검색하고, 텍스트를 공유하고, 들을 수 있습니다.

00:22:37.000 --> 00:22:46.000
시각 지능이 찾는 텍스트는 일종의 웹 페이지의 일부가 되고, 일종의 웹 페이지의 일부가 되지 않는다.

00:22:46.000 --> 00:22:53.000
텍스트는 이미지 내부의 그림자 DOM에 삽입되며, 이는 자바스크립트의 영향을 받지 않는다는 것을 의미합니다.

00:22:53.000 --> 00:22:55.000
하지만 그것은 z-order의 영향을 받는다.

00:22:55.000 --> 00:23:03.000
따라서, 투명한 상자와 같이 이미지를 오버레이하는 무언가가 있다면, 시각 지능은 아래의 이미지에서 어떤 텍스트도 찾을 수 없을 것입니다.

00:23:03.000 --> 00:23:07.000
위에 있는 층이 방해가 된다.

00:23:07.000 --> 00:23:15.000
우리는 더 많은 사람들이 이미지에 갇힌 텍스트를 사용할 수 있도록 보이스오버와 같은 보조 기술에 시각 지능을 통합했습니다.

00:23:15.000 --> 00:23:20.000
하지만 그것이 이 기능이 현재의 접근성 모범 사례를 바꾼다는 것을 의미하지는 않는다.

00:23:20.000 --> 00:23:33.000
물론, 대부분 텍스트로 구성된 웹의 콘텐츠는 HTML의 텍스트로 웹에 올려야 하며, 원한다면 모양과 느낌을 주기 위해 웹 글꼴로 스타일을 지정해야 하지만, 텍스트 콘텐츠로 해야 합니다.

00:23:33.000 --> 00:23:35.000
이것은 여전히 가장 좋은 관행이다.

00:23:35.000 --> 00:23:45.000
사진, 삽화 또는 기타 이미지인 콘텐츠의 경우, 가장 좋은 방법은 여전히 이미지 요소의 속성으로 대체 텍스트를 포함하는 것입니다.

00:23:45.000 --> 00:23:52.000
훌륭한 대체 텍스트는 인간만이 설명할 수 있는 의미와 맥락을 제공한다.

00:23:52.000 --> 00:24:00.000
게다가, 모든 브라우저가 시각적 지능을 가지고 있는 것은 아니므로, 웹사이트의 이미지에 유용한 대체 텍스트가 있는지 계속 확인하세요.

00:24:00.000 --> 00:24:11.000
즉, 지금까지 다른 곳에서 인용하기 위해 읽거나 다시 입력할 수 있어야 했던 텍스트에 접근할 수 있다는 것은 꽤 좋은 일이다.

00:24:11.000 --> 00:24:16.000
다음으로, 지난 한 해 동안 WebKit에서 구현된 CSS를 살펴봅시다.

00:24:16.000 --> 00:24:19.000
먼저, 종횡비.

00:24:19.000 --> 00:24:26.000
종횡비는 모든 요소에 대해 선호하는 종횡비를 설정할 수 있는 새로운 CSS 속성입니다.

00:24:26.000 --> 00:24:30.000
하지만 "선호하는 종횡비를 설정하라"는 것은 무슨 뜻인가요?

00:24:30.000 --> 00:24:35.000
음, 먼저 자연스러운 종횡비를 가진 웹 콘텐츠의 종류를 살펴봅시다.

00:24:35.000 --> 00:24:37.000
이미지는 좋은 예이다.

00:24:37.000 --> 00:24:41.000
우리가 높은 것보다 두 배나 넓은 매기의 이미지를 가지고 있다고 가정해 봅시다.

00:24:41.000 --> 00:24:44.000
그 이미지는 2:1 종횡비를 가지고 있다.

00:24:44.000 --> 00:24:54.000
우리는 이 이미지를 웹 페이지에 넣고 너비: 100%와 높이: 자동, 고전적인 반응형 웹 디자인 기술을 추가하여 유연하게 만들 것입니다.

00:24:54.000 --> 00:25:02.000
이미지는 자연스러운 종횡비를 가지고 있기 때문에, 높이는 너비와의 직접적인 관계에서 자동으로 변한다.

00:25:02.000 --> 00:25:08.000
이 사진은 항상 키보다 두 배 넓으며, 매기는 항상 정말 좋아 보인다.

00:25:08.000 --> 00:25:13.000
이런 종류의 행동은 너무 예상되어, 우리는 더 이상 그것을 거의 볼 수 없다.

00:25:13.000 --> 00:25:15.000
이것이 바로 이미지가 작동하는 방식이다.

00:25:15.000 --> 00:25:20.000
비디오는 비디오 요소를 사용하여 페이지의 HTML에 넣을 때 같은 방식으로 작동합니다.

00:25:20.000 --> 00:25:24.000
비디오 파일은 또한 자연스러운 종횡비를 가지고 있다.

00:25:24.000 --> 00:25:30.000
그리고 비디오 요소는 페이지 레이아웃을 계산할 때 그 종횡비를 브라우저에 전달한다.

00:25:30.000 --> 00:25:33.000
하지만 모든 콘텐츠가 자연스러운 종횡비를 가지고 있는 것은 아니다.

00:25:33.000 --> 00:25:36.000
여기, 기사 요소가 있어.

00:25:36.000 --> 00:25:39.000
안에는 헤드라인과 단락이 있다.

00:25:39.000 --> 00:25:43.000
기본적으로, 기사 요소는 자동 너비와 자동 높이를 가지고 있다.

00:25:43.000 --> 00:25:49.000
이 쓰기 모드에서, 자동의 너비는 사용 가능한 공간의 100%를 차지하도록 기사를 늘려야 한다는 것을 의미합니다.

00:25:49.000 --> 00:25:57.000
높이 자동은 시야 안에 있는 모든 콘텐츠에 맞을 만큼 충분히 키가 크고 더 크지 않다는 것을 의미합니다.

00:25:57.000 --> 00:26:06.000
텍스트 열이 좁아지면 텍스트가 더 자주 감싸고 점점 더 많은 수직 공간을 차지하는 방법을 알 수 있습니다.

00:26:06.000 --> 00:26:12.000
열이 넓어지면, 텍스트가 리플로우되고 수직 공간을 점점 더 적게 차지한다.

00:26:12.000 --> 00:26:21.000
내 상자의 높이는 어떤 종류의 종횡비도 고려하지 않고 텍스트 내용에 맞게 조정되고 있다 - 너무 짧지도 않고 너무 크지도 않다.

00:26:21.000 --> 00:26:24.000
대부분의 웹 역사에서, 이것이 바로 레이아웃이 작동하는 방식이다.

00:26:24.000 --> 00:26:38.000
사각형을 사용하거나 상자를 만드는 것에 대한 그래픽 디자인 아이디어는 일관된 모양이어야 하며, 그 디자인 아이디어는 "아니요! 웹은 그런 식으로 작동하지 않아!" 지금까지.

00:26:38.000 --> 00:26:44.000
이제 우리는 그렇지 않으면 없는 요소에 대해 선호하는 종횡비를 정의하기 위해 CSS를 작성할 수 있습니다.

00:26:44.000 --> 00:26:59.000
종횡비: 1 / 1을 우리의 코드에 추가하자, 이것이 끝나는 너비가 무엇이든, 그것을 한 단위로 생각하고, 높이도 한 단위로 만들면, 이것을 정사각형으로 만드는 것으로 번역됩니다.

00:26:59.000 --> 00:27:03.000
그 광장을 유지하기 위해 높이가 이전보다 커진다.

00:27:03.000 --> 00:27:07.000
하지만 그 사각형 안에 들어갈 내용이 너무 많으면 어떻게 되나요?

00:27:07.000 --> 00:27:11.000
기본적으로, 상자는 자동으로 더 커질 것이다.

00:27:11.000 --> 00:27:22.000
한 줄의 코드로, 우리는 특정 종횡비를 가진 사각형 세트나 모양 상자를 만들 수 있으며, 내용 중 하나에서 내용이 더 길면 그 상자가 오버플로우를 방지하기 위해 커질 것이라는 것을 알고 있습니다.

00:27:22.000 --> 00:27:31.000
우리가 종횡비를 항상 준수하기를 원한다면, 그것이 오버플로우를 일으키더라도, 우리는 코드에 0의 최소 높이를 추가할 수 있습니다.

00:27:31.000 --> 00:27:37.000
아마도 우리는 오버플로를 추가하는 것과 같은 다른 방법으로 오버플로를 처리하고 싶을 것이다: 스크롤.

00:27:37.000 --> 00:27:43.000
이제, 나는 이 사각형을 1 / 1로 만들기 위해 값을 쓰고 있다.

00:27:43.000 --> 00:27:47.000
하지만 나는 대신 이것을 종횡비로 쓸 수 있다: 1.

00:27:47.000 --> 00:27:56.000
숫자가 하나만 있다면, 브라우저는 그것이 "한 개 이상"이라고 가정할 것이다. 사실, 십진수를 사용하는 것을 포함하여 동일한 종횡비를 표현할 수 있는 많은 방법이 있다.

00:27:56.000 --> 00:28:05.000
이것은 우리에게 영화와 텔레비전 또는 예술과 디자인과 같은 다른 산업에서 익숙할 수 있는 방식으로 종횡비를 쓸 수 있는 자유를 준다.

00:28:05.000 --> 00:28:19.000
지난 10년 동안, 건축, 그림, 책 디자인, 현대 인쇄 디자인에서 인간 문화 전반에 걸쳐 깊고 의미 있는 위치를 차지했음에도 불구하고 웹에서 이러한 비율을 사용하는 것은 거의 불가능했다.

00:28:19.000 --> 00:28:22.000
이제 우리는 이 비율을 사용하여 레이아웃을 만들 수 있습니다.

00:28:22.000 --> 00:28:28.000
특히 측면 비율을 CSS 그리드와 결합하면 모든 종류의 새로운 디자인 가능성이 열립니다.

00:28:28.000 --> 00:28:36.000
영화와 비디오에 대해 말하자면, 종횡비에 대한 매우 일반적인 사용 사례 중 하나는 제3자 서비스의 임베디드 비디오일 것이다.

00:28:36.000 --> 00:28:44.000
YouTube, Vimeo, Wistia 또는 많은 비디오 호스팅 제공 업체를 사용하는 경우, 비디오를 삽입할 수 있는 iFrame을 제공합니다.

00:28:44.000 --> 00:28:49.000
iFrame 요소는 자연스러운 종횡비를 가진 요소가 아니다.

00:28:49.000 --> 00:28:56.000
반응형 웹 디자인이 등장했을 때, 우리는 임베디드 비디오를 유연하게 만들고 싶었지만, 곤경에 처했다.

00:28:56.000 --> 00:29:03.000
우리는 CSS에서 혼란스러운 패딩 해킹을 사용하거나 자바스크립트를 사용하여 비디오의 크기를 조정하는 데 갇혀 있습니다.

00:29:03.000 --> 00:29:09.000
이제 우리는 iFrame에 선호하는 종횡비를 제공하기 위해 한 줄의 CSS를 추가할 수 있습니다.

00:29:09.000 --> 00:29:13.000
그것은 매우 일반적인 문제에 대한 매우 우아한 해결책이다.

00:29:13.000 --> 00:29:19.000
종횡비: 그것은 우리가 원하는 레이아웃을 만들 수 있는 또 다른 강력한 도구를 제공한다.

00:29:19.000 --> 00:29:22.000
다음으로, 플렉스 갭.

00:29:22.000 --> 00:29:29.000
올해 사파리 14.1에서, 우리는 플렉스박스 컨테이너의 틈에 대한 지원을 배송했다.

00:29:29.000 --> 00:29:36.000
플렉스 갭은 항상 갭이 있는지 확인하기 위해 항목 사이의 최소 공간을 정의할 수 있는 방법을 제공합니다.

00:29:36.000 --> 00:29:39.000
여기, 플렉스박스에 배치한 내비게이션 바가 있습니다.

00:29:39.000 --> 00:29:42.000
나는 이 메뉴 바 항목들이 서로 닿는 것을 원하지 않는다.

00:29:42.000 --> 00:29:49.000
1rem 값으로 갭 속성을 추가하면, 이제 항목 사이에 항상 공백이 있습니다.

00:29:49.000 --> 00:29:51.000
왼쪽이나 오른쪽 여백은 필요하지 않습니다.

00:29:51.000 --> 00:29:55.000
나는 바깥쪽 가장자리에 있는 여백을 제거하는 방법을 알아낼 필요가 없다.

00:29:55.000 --> 00:29:57.000
이건 훨씬 더 간단해.

00:29:57.000 --> 00:30:07.000
추가 논리적 속성을 포함하여 올해 WebKit에서 구현된 CSS에는 다른 많은 기능이 있으며, 이는 국제 청중을 지원하는 데 매우 중요합니다.

00:30:07.000 --> 00:30:12.000
개별 변환 속성: 회전, 번역 및 크기 조정.

00:30:12.000 --> 00:30:15.000
스크롤 여백과 스크롤 스냅에 대한 업데이트 및 개선.

00:30:15.000 --> 00:30:18.000
새로운 색 공간에 대한 지원.

00:30:18.000 --> 00:30:22.000
그리고 의사 요소와 이산 속성의 애니메이션.

00:30:22.000 --> 00:30:31.000
이러한 기능 중 상당수는 지난 봄에 macOS의 Safari 14.1과 iOS 및 iPadOS 14.5용 Safari에서 출시되었습니다.

00:30:31.000 --> 00:30:35.000
그리고 나머지는 이번 가을에 사파리 15로 배송될 것이다.

00:30:35.000 --> 00:30:38.000
다음으로, 양식 컨트롤을 살펴봅시다.

00:30:38.000 --> 00:30:44.000
Safari 14.1에서, 우리는 macOS에서 날짜와 시간 입력에 대한 지원을 제공했습니다.

00:30:44.000 --> 00:30:51.000
이제 Mac에서 사용자는 캘린더 컨트롤과 상호 작용하여 날짜 필드를 작성하거나 시간 컨트롤로 시간을 작성할 수 있습니다.

00:30:51.000 --> 00:30:54.000
그리고 고객 측 검증은 바로 내장되어 있다.

00:30:54.000 --> 00:31:00.000
iOS와 iPadOS 15의 경우, 우리는 양식 컨트롤을 완전히 재설계했습니다.

00:31:00.000 --> 00:31:05.000
그들은 전반적인 경험과 더 잘 어울리고 UIKit에 훨씬 더 잘 어울릴 것이다.

00:31:05.000 --> 00:31:07.000
그리고 그들은 다크 모드에서도 멋져 보인다.

00:31:07.000 --> 00:31:10.000
이것들은 양식 컨트롤의 새로운 기본값입니다.

00:31:10.000 --> 00:31:15.000
만약 당신이 이 스타일들 중 하나를 무시했다면, 물론, 당신의 스타일이 적용될 것입니다.

00:31:15.000 --> 00:31:28.000
우리는 또한 iOS와 iPadOS에서 색상을 선택하거나 조정하기 위한 세 개의 패널과 스포이드가 있는 입력 유형="색상"을 위한 새로운 색상 선택기를 구현했습니다.

00:31:28.000 --> 00:31:34.000
그것은 우리의 사파리 15 투어이며 올해 웹킷에 착륙한 것의 하이라이트 중 일부입니다.

00:31:34.000 --> 00:31:44.000
하지만 제가 가기 전에, 저는 당신이 Safari와 WebKit에 대해 더 많이 배울 수 있는 중요한 리소스를 어디서 찾을 수 있는지, 그리고 다음에 보고 싶은 것에 대한 피드백을 제출할 수 있는 곳을 알고 있는지 확인하고 싶습니다.

00:31:44.000 --> 00:31:47.000
이 모든 자원에 대한 링크는 이 세션의 노트에 있습니다.

00:31:47.000 --> 00:31:59.000
새로운 자바스크립트, DOM API 및 미디어 형식 지원에 대해 배우고 싶다면, WWDC21에서 "고급 웹 콘텐츠 개발"을 확인하세요.

00:31:59.000 --> 00:32:07.000
"웹 인스펙터 개선 발견"을 시청하고, 자체 CSS 그리드 인스펙터를 포함하여 사파리에 오는 새로운 웹 개발자 도구에 대해 알아보세요.

00:32:07.000 --> 00:32:14.000
미래에 일어날 일을 따라잡으려면, 보라색 로고가 있는 사파리 기술 미리보기를 다운로드하세요.

00:32:14.000 --> 00:32:16.000
그것은 약 2주마다 업데이트된다.

00:32:16.000 --> 00:32:24.000
최신 버그 수정에 대해 테스트하고 웹 인스펙터의 최신 발전을 사용하는 특히 좋은 방법입니다.

00:32:24.000 --> 00:32:33.000
Webkit.org는 WebKit 릴리스 노트, 새로운 웹 기술을 자세히 설명하는 기사 및 웹 관리자를 위한 문서를 위한 장소입니다.

00:32:33.000 --> 00:32:35.000
그리고 우리는 네 소식을 듣고 싶어.

00:32:35.000 --> 00:32:44.000
웹 인스펙터나 사파리 인터페이스에 대한 제안이 있다면, 애플의 피드백 어시스턴트에 피드백을 제출하세요.

00:32:44.000 --> 00:32:56.000
WebKit에서 깨지거나 누락된 것처럼 보이는 HTML, CSS, JavaScript 또는 DOM API에 대한 버그를 발견하면 bugs.webkit.org에 티켓을 제출하십시오.

00:32:56.000 --> 00:33:01.000
그리고 당신은 트위터 @webkit에서 우리를 찾고 팔로우할 수 있습니다.

00:33:01.000 --> 00:33:18.000
우리처럼 사파리 15의 새로운 디자인, 새로운 탭 바가 디자인에 대한 새로운 차원, 종횡비가 있는 레이아웃의 새로운 가능성, iOS 및 iPad OS의 완전히 새로운 양식 컨트롤 등에 대해 흥분되기를 바랍니다.

00:33:18.000 --> 00:33:21.000
나는 이것이 웹 디자인의 어떤 혁신을 가져오는지 빨리 보고 싶다.

00:33:21.000 --> 00:33:25.000
나와 함께 해줘서 고맙고 WWDC를 즐겨.

00:33:25.000 --> 23:59:59.000
[쾌활한 음악].

