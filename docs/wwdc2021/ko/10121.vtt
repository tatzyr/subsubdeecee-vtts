WEBVTT

00:00:02.000 --> 00:00:20.000
안녕하세요, 저는 Nandini Sundara Raman입니다. 오늘은 AXCustomContent API를 사용하여 데이터가 풍부한 앱에서 VoiceOver 경험을 조정할 수 있는 방법을 보여드리겠습니다.

00:00:20.000 --> 00:00:27.000
VoiceOver는 화면을 볼 수 없더라도 모든 Apple 장치와 상호 작용할 수 있는 Apple의 화면 판독기입니다.

00:00:27.000 --> 00:00:37.000
화면을 터치하여 VoiceOver를 사용하여 손가락 아래에 있는 것을 듣고 스와이프와 같은 간단한 제스처를 수행하여 인터페이스를 탐색할 수 있습니다.

00:00:37.000 --> 00:00:50.000
그래서, 여기 제가 만든 Woof Woof Kennel이라는 간단한 앱이 있습니다. 테이블 뷰에 나열된 여러 개에 대한 자세한 설명이 있으며, VoiceOver 사용자는 목록을 스와이프하여 개집을 탐색할 수 있습니다.

00:00:50.000 --> 00:00:54.000
이 앱의 VoiceOver 경험을 빠르게 살펴봅시다.

00:00:54.000 --> 00:00:58.000
베일리, 비글, 행운아, 훌륭한 사냥개, 그리고 충성스러운 동반자.

00:00:58.000 --> 00:01:01.000
인기, 1번. 나이, 세 살.

00:01:01.000 --> 00:01:05.000
무게, 25파운드. 높이, 14인치.

00:01:05.000 --> 00:01:11.000
윈스턴, 퍼그, 사랑스럽고, 지적이고, 다정하고, 충성스럽고, 매력적이고, 장난스럽고, 장난스럽다.

00:01:11.000 --> 00:01:13.000
인기, 두 번째.

00:01:13.000 --> 00:01:16.000
나이, 세 살. 무게, 14파운드.

00:01:16.000 --> 00:01:17.000
높이, 10인치.

00:01:17.000 --> 00:01:26.000
와! 그것은 셀의 모든 내용을 왼쪽 상단에서 오른쪽 하단으로 읽은 각 개에 대해 VoiceOver가 읽은 많은 데이터였다.

00:01:26.000 --> 00:01:36.000
VoiceOver로 인터페이스를 탐색하는 동안, 너무 많은 데이터가 압도적일 수 있으며, 사용자의 인지 부하와 함께 앱을 탐색하기 어렵게 만들 수 있습니다.

00:01:36.000 --> 00:01:41.000
그리고 데이터가 너무 적으면 앱의 불완전한 경험을 초래할 것입니다.

00:01:41.000 --> 00:01:50.000
두 극단 모두 실망스럽고, 다른 사용자가 앱을 사용할 때 다른 정보를 원할 수 있기 때문에 여기서 균형을 찾는 것은 어려울 수 있습니다.

00:01:50.000 --> 00:01:54.000
이러한 균형을 이루기 위해, 우리는 접근성 사용자 지정 콘텐츠 API를 가지고 있습니다.

00:01:54.000 --> 00:02:01.000
접근성 프레임워크의 이 클래스와 프로토콜은 모든 플랫폼에서 사용할 수 있습니다.

00:02:01.000 --> 00:02:13.000
보이스오버로 복잡한 데이터를 제시하는 일반적인 문제는 측정된 부분으로 사용자에게 접근성 정보를 제공함으로써 이 API에 의해 해결됩니다.

00:02:13.000 --> 00:02:21.000
이 API를 사용하면 보조 기술을 활용하여 앱 사용자가 필요할 때 필요한 콘텐츠만 제공할 수 있습니다.

00:02:21.000 --> 00:02:27.000
이제, 데이터가 풍부한 앱에서 AXCustomContent API를 어떻게 구현할 수 있는지 살펴봅시다.

00:02:27.000 --> 00:02:35.000
그리고 그렇게 하기 위해, 먼저 AXCustomContent API가 구현된 내 앱이 어떻게 보이는지 보여주고 싶습니다.

00:02:35.000 --> 00:02:38.000
베일리, 비글. 더 많은 콘텐츠를 사용할 수 있습니다.

00:02:38.000 --> 00:02:39.000
응! 너 그거 제대로 들었어.

00:02:39.000 --> 00:02:43.000
VoiceOver는 방금 이 셀에서 더 많은 콘텐츠를 사용할 수 있다고 발표했다.

00:02:43.000 --> 00:02:49.000
이것은 더 많은 콘텐츠 로터를 사용하여 이 셀의 추가 콘텐츠에 액세스할 수 있다는 것을 의미합니다.

00:02:49.000 --> 00:02:56.000
보이스오버 로터는 사용자가 애플리케이션을 빠르고 효율적으로 탐색할 수 있게 해준다.

00:02:56.000 --> 00:03:05.000
VoiceOver 언어 설정, 말하기 속도 조정, 웹 페이지의 링크 사이 이동 등과 같은 많은 내장 용도가 있습니다.

00:03:05.000 --> 00:03:12.000
여기서, 더 많은 콘텐츠 로터를 사용하면 VoiceOver 커서 아래의 요소의 추가 콘텐츠 사이를 탐색할 수 있습니다.

00:03:12.000 --> 00:03:24.000
iOS 장치에서 VoiceOver로 더 많은 콘텐츠 로터로 이동하려면, 더 많은 콘텐츠 로터인 원하는 로터 옵션에 도달할 때까지 다이얼을 회전하는 것처럼 화면에서 두 손가락을 돌리세요.

00:03:24.000 --> 00:03:26.000
더 많은 내용.

00:03:26.000 --> 00:03:34.000
그런 다음, VoiceOver 커서 아래에서 사용할 수 있는 다음 또는 이전 추가 콘텐츠로 이동하려면 아래로 스와이프하거나 위로 스와이프하세요.

00:03:34.000 --> 00:03:40.000
이제, 내가 셀을 아래로 스와이프할 때, VoiceOver는 추가 콘텐츠를 보여줄 것이다.

00:03:40.000 --> 00:03:41.000
세 살, 나이.

00:03:41.000 --> 00:03:43.000
첫 번째, 인기.

00:03:43.000 --> 00:03:46.000
25파운드, 무게. 14인치, 키.

00:03:46.000 --> 00:03:50.000
행운아, 훌륭한 사냥개, 그리고 충성스러운 동반자. 설명.

00:03:50.000 --> 00:03:57.000
AXCustomContent API를 구현한 후 동일한 앱의 macOS 버전이 어떻게 작동하는지 봅시다.

00:03:57.000 --> 00:03:59.000
베일리, 비글. 더 많은 콘텐츠를 사용할 수 있습니다.

00:03:59.000 --> 00:04:09.000
VoiceOver 커서가 더 많은 콘텐츠가 있는 요소에 있으면, VO + 명령 + /로 로터를 불러와 사용자 지정 콘텐츠를 표시할 수 있습니다.

00:04:09.000 --> 00:04:11.000
더 많은 콘텐츠 메뉴. 다섯 가지 항목.

00:04:11.000 --> 00:04:15.000
나이, 세 살. 인기, 1번.

00:04:15.000 --> 00:04:17.000
무게, 25파운드.

00:04:17.000 --> 00:04:19.000
높이, 14인치.

00:04:19.000 --> 00:04:24.000
설명, 행운의 행복, 훌륭한 사냥개, 그리고 충성스러운 동반자.

00:04:24.000 --> 00:04:33.000
iOS에서 VoiceOver 요소에 추가 콘텐츠가 있을 때 알림을 받으려면 VoiceOver 환경 설정으로 이동하여 Verbosity 설정을 여세요.

00:04:33.000 --> 00:04:39.000
상세 설정에서, 더 많은 콘텐츠를 선택하세요.

00:04:39.000 --> 00:04:47.000
그리고 힌트를 말하거나, 소리를 재생하거나, 피치를 변경하여 추가 콘텐츠를 사용할 수 있을 때 알림을 받으세요.

00:04:47.000 --> 00:04:53.000
마찬가지로, macOS에서도 사용 가능한 더 많은 콘텐츠 발표의 장황함을 설정할 수 있습니다.

00:04:53.000 --> 00:04:57.000
VoiceOver 유틸리티 기본 설정을 사용하여 이것을 할 수 있습니다.

00:04:57.000 --> 00:05:03.000
이제, Woof Woof Kennel 앱이 접근성 사용자 지정 콘텐츠 API를 어떻게 지원할 수 있는지 봅시다.

00:05:03.000 --> 00:05:18.000
여기, 우리는 개 사진, 이름, 유형, 설명, 인기, 나이, 체중 및 키에 대한 변수가 있는 DogTableViewCell이 있습니다.

00:05:18.000 --> 00:05:24.000
AXCustomContent API를 구현하기 위해, 우리는 먼저 접근성 프레임워크를 가져옵니다.

00:05:24.000 --> 00:05:31.000
그런 다음 TableViewCell에 AXCustomContentProvider 프로토콜을 추가하고 구현해야 합니다.

00:05:31.000 --> 00:05:44.000
프로토콜 방법을 구현하기 전에, 접근성 라벨 속성을 재정의하고 여기서 가장 관련성이 높은 세부 사항이기 때문에 개 이름과 유형만 반환합시다.

00:05:44.000 --> 00:06:00.000
그런 다음 AXCustomContent 객체가 현지화된 문자열의 키-값 쌍인 AXCustomContent 객체 배열로 AXCustomContentProvider 프로토콜 방법 accessibilityCustomContent를 구현합니다.

00:06:00.000 --> 00:06:11.000
여기서 우리는 문자열 "Description"을 레이블로, 설명의 텍스트 값을 AXCustomContent 객체의 값으로 사용하여 설명에 대한 AXCustomContent 객체를 만듭니다.

00:06:11.000 --> 00:06:20.000
그런 다음 인기, 나이, 무게 및 키에 대한 AXCustomContent 객체도 만듭니다.

00:06:20.000 --> 00:06:28.000
그런 다음 VoiceOver가 사용자에게 제시하기를 원하는 순서대로 이러한 모든 AXCustomContent 객체의 배열을 반환합니다.

00:06:28.000 --> 00:06:37.000
이제, TableViewCell에서 AXCustomContentProvider 프로토콜을 구현한 후 VoiceOver 경험이 어떻게 개선되었는지 봅시다.

00:06:37.000 --> 00:06:39.000
베일리, 비글. 더 많은 콘텐츠를 사용할 수 있습니다.

00:06:39.000 --> 00:06:41.000
첫 번째, 인기.

00:06:41.000 --> 00:06:44.000
3살. 25파운드, 몸무게.

00:06:44.000 --> 00:06:45.000
14인치, 높이.

00:06:45.000 --> 00:06:49.000
행운아, 훌륭한 사냥개, 그리고 충성스러운 동반자, 설명.

00:06:49.000 --> 00:06:57.000
이 목록을 찾아보려고 하는 사용자의 경우, 개를 입양하고 싶다면 개의 나이가 중요한 정보가 될 수 있습니다.

00:06:57.000 --> 00:07:02.000
현재, 그 가치는 더 많은 콘텐츠 로터 뒤에 숨겨져 있다.

00:07:02.000 --> 00:07:08.000
AXCustomContent 객체에는 이 문제를 해결하는 데 사용할 수 있는 "중요도"라는 속성이 있습니다.

00:07:08.000 --> 00:07:18.000
우리는 이 속성의 값을 "높음"으로 설정할 수 있으며, VoiceOver가 추가 요소를 순환하지 않고 요소에 초점을 맞출 때 콘텐츠가 항상 표시됩니다.

00:07:18.000 --> 00:07:29.000
개의 나이가 항상 VoiceOver에 의해 제시되도록 하기 위해, 우리는 나이 사용자 지정 콘텐츠 객체에 대한 중요 속성을 "높음"으로 설정했습니다.

00:07:29.000 --> 00:07:34.000
이제, 여기서 우리는 개의 나이가 항상 VoiceOver로 읽힌다는 것을 알 수 있다.

00:07:34.000 --> 00:07:35.000
베일리, 비글, 3년.

00:07:35.000 --> 00:07:38.000
더 많은 콘텐츠를 사용할 수 있습니다.

00:07:38.000 --> 00:07:42.000
이 연령 정보는 더 많은 콘텐츠 로터에서도 사용할 수 있습니다.

00:07:42.000 --> 00:07:47.000
올해 새로운 것은 우리가 SwiftUI와 같은 기능을 지원한다는 것이다.

00:07:47.000 --> 00:08:01.000
라벨과 값 매개 변수 모두에 대한 현지화 가능한 텍스트를 전달하고 필요에 따라 중요도 속성을 설정하여 SwiftUI의 사용자 지정 보기에서 accessibilityCustomContent 수정자를 설정할 수 있습니다.

00:08:01.000 --> 00:08:10.000
이 방법은 사용자 지정 콘텐츠 값이 한 곳에서 추가되고 나중에 계층 구조에서 조작되지 않는 상황에서 잘 작동합니다.

00:08:10.000 --> 00:08:28.000
이것을 DogCell View에서 구현하기 위해, 우리는 먼저 설명 텍스트와 개의 인기, 나이, 무게 및 키가 포함된 HStack에 접근성 숨겨진 수정자를 설정하여 DogCell의 접근성 라벨을 위해 자동으로 선택되지 않도록 합니다.

00:08:28.000 --> 00:08:38.000
그런 다음 중요도가 높음, 인기, 무게, 키 및 설명으로 설정된 연령에 대한 accessibilityCustomContent 수정자를 설정합니다.

00:08:38.000 --> 00:08:50.000
사용자 지정 콘텐츠 값이 Swift UI 계층 구조의 두 개 이상의 장소에서 조작되기를 원한다면, AccessibilityCustomContentKey의 확장을 만들어 키의 재정의를 피할 수 있습니다.

00:08:50.000 --> 00:08:57.000
이것은 현지화 가능한 텍스트 문자열을 다시 만들지 않고도 해당 키의 값을 업데이트하거나 제거할 수 있는 기능을 제공합니다.

00:08:57.000 --> 00:09:06.000
DogCell 예제에서, 우리는 AccessibilityCustomContentKey의 확장을 만들고 사용자 지정 키 중 하나로 나이를 추가했습니다.

00:09:06.000 --> 00:09:17.000
DogCell 바디의 VStack에서, 우리는 여기에 문자열 키를 사용하는 대신 AccessibilityCustomContentKey "age"로 접근성 CustomContent 수정자를 추가했습니다.

00:09:17.000 --> 00:09:24.000
마지막으로, 데이터가 풍부한 앱의 VoiceOver 경험을 맞춤화하기 위해 당신이 하기를 바라는 것은 다음과 같습니다.

00:09:24.000 --> 00:09:28.000
먼저, 앱의 시각적으로 데이터가 풍부한 부분을 식별하세요.

00:09:28.000 --> 00:09:34.000
VoiceOver를 켜고 VoiceOver 커서 아래의 내용이 너무 장황한지 확인하세요.

00:09:34.000 --> 00:09:45.000
장황하다면, AXCustomContentProvider 프로토콜을 구현하고 보충 정보를 accessibilityCustomContent로 옮기는 것을 고려하십시오.

00:09:45.000 --> 00:09:51.000
항상 사용자에게 제시하고 싶은 정보에 대한 중요도 속성을 "높음"으로 설정하세요.

00:09:51.000 --> 00:10:04.000
VoiceOver 사용자의 경우, 측정된 부분으로 콘텐츠에 액세스하고 필요할 때만 콘텐츠를 제공할 수 있는 옵션이 있으면 앱의 접근성 경험을 크게 향상시킬 수 있습니다.

00:10:04.000 --> 00:10:15.000
이제 VoiceOver 사용자에게 더 나은 경험을 제공하기 위해 AXCustomContent API를 데이터가 풍부한 앱에 통합하는 방법을 살펴보시기 바랍니다!

00:10:15.000 --> 00:10:19.000
그리고 이 세션을 시청해 주셔서 정말 감사합니다, 여러분.

00:10:19.000 --> 00:10:20.000
안녕!

00:10:20.000 --> 23:59:59.000
[타격적인 음악].

