WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:11.000
안녕. 제 이름은 케일럽입니다.

00:00:11.000 --> 00:00:14.000
저는 tvOS 팀의 소프트웨어 엔지니어입니다.

00:00:14.000 --> 00:00:20.000
오늘, 저는 tvOS 15에서 로그인하기 위해 우리가 만든 몇 가지 큰 개선 사항을 공유하게 되어 기쁩니다.

00:00:20.000 --> 00:00:27.000
우리는 Apple TV를 사용하는 모든 사람들이 가능한 한 적은 마찰로 콘텐츠에 빠르게 접속할 수 있기를 바랍니다.

00:00:27.000 --> 00:00:32.000
그것은 당신의 앱에 로그인하는 과정이 유동적이고 고통스럽지 않아야 한다는 것을 의미합니다.

00:00:32.000 --> 00:00:36.000
로그인하는 가장 일반적인 방법 중 하나는 비밀번호를 사용하는 것이다.

00:00:36.000 --> 00:00:41.000
사용자는 강력하거나 고유한 비밀번호를 갖도록 권장되지만, 입력하기가 실망스러울 수 있습니다.

00:00:41.000 --> 00:00:48.000
tvOS 15에는 앱에서 비밀번호 기반 로그인을 그 어느 때보다 쉽게 수행할 수 있는 훌륭한 새로운 기능이 있습니다.

00:00:48.000 --> 00:00:51.000
그것은 새로운 시스템 로그인 보기로 시작한다.

00:00:51.000 --> 00:00:54.000
이 견해는 몇 가지 정말 중요한 일을 한다.

00:00:54.000 --> 00:00:58.000
첫째, 그것은 tvOS 전반에 걸쳐 일관된 로그인 경험을 제공한다.

00:00:58.000 --> 00:01:04.000
둘째, 사용자에게 iPhone 또는 iPad를 사용하여 로그인을 완료할 수 있다고 알려줍니다.

00:01:04.000 --> 00:01:09.000
셋째, 앱이 지원할 수 있는 다른 로그인 유형에 대한 사용자 옵션을 제공합니다.

00:01:09.000 --> 00:01:11.000
그건 나중에 더 얘기할게.

00:01:11.000 --> 00:01:15.000
지금은 iPhone이나 iPad를 사용하여 로그인하는 데 집중하고 싶습니다.

00:01:15.000 --> 00:01:23.000
사용자가 앱에서 로그인을 시작한 다음 iPhone을 깨우면 Apple TV에서 이와 같은 알림을 볼 수 있습니다.

00:01:23.000 --> 00:01:28.000
그들이 알림을 탭하면, 아이폰은 로그인 과정을 안내할 것이다.

00:01:28.000 --> 00:01:32.000
그것은 iCloud 키체인의 자격 증명을 제안할 것이다.

00:01:32.000 --> 00:01:36.000
그리고 그들은 Face ID를 사용하여 로그인을 확인할 수 있습니다.

00:01:36.000 --> 00:01:39.000
그런 다음 자격 증명은 Apple TV로 다시 전송됩니다.

00:01:39.000 --> 00:01:45.000
이제, 앱은 로그인을 완료하고 사용자를 콘텐츠로 바로 데려갈 수 있습니다.

00:01:45.000 --> 00:01:50.000
나는 잠시 시간을 내어 이것이 텍스트 입력 경험이 아니라는 것을 지적하고 싶다.

00:01:50.000 --> 00:01:59.000
Apple TV와 iPhone 또는 iPad가 협력하여 로그인 과정을 통해 사용자를 안내하는 일류 로그인 경험입니다.

00:01:59.000 --> 00:02:03.000
이 새로운 로그인 경험을 채택하는 것은 정말 쉽다.

00:02:03.000 --> 00:02:09.000
모든 Apple 플랫폼에는 사람들이 앱에 로그인할 수 있도록 설계된 높은 수준의 API가 있습니다.

00:02:09.000 --> 00:02:12.000
그것은 tvOS 15에서 특히 강력하다.

00:02:12.000 --> 00:02:19.000
약간의 코드만 있으면, 제가 방금 보여준 훌륭한 로그인 경험을 최대한 활용할 수 있습니다.

00:02:19.000 --> 00:02:22.000
나는 지금 너에게 그걸 안내해 줬으면 좋겠어.

00:02:22.000 --> 00:02:26.000
앱의 관련 도메인을 구성하는 것부터 시작합시다.

00:02:26.000 --> 00:02:32.000
관련 도메인은 앱과 도메인 간의 안전한 링크를 설정합니다.

00:02:32.000 --> 00:02:41.000
이를 통해 Apple TV와 iPhone 또는 iPad가 함께 작동하여 로그인에 사용할 자격 증명을 안전하게 제안할 수 있습니다.

00:02:41.000 --> 00:02:55.000
먼저, 도메인에서 호스팅하는 Apple 앱 사이트 연결 파일이 웹 자격 증명 키 안에 tvOS 앱의 애플리케이션 식별자를 나열하는지 확인하십시오.

00:02:55.000 --> 00:03:02.000
다음으로, Xcode에서 tvOS 앱에 관련 도메인 기능을 추가하세요.

00:03:02.000 --> 00:03:09.000
그리고 마지막으로, 웹 자격 증명 접두사로 관련 도메인 기능에 도메인을 추가하세요.

00:03:09.000 --> 00:03:19.000
앱에서 웹 자격 증명 도메인 구성에 대한 자세한 내용은 WWDC 2017의 "앱용 비밀번호 자동 완성 소개" 비디오를 참조하십시오.

00:03:19.000 --> 00:03:25.000
다음으로, AuthenticationServices를 사용하여 자격 증명을 요청하는 방법을 보여드리고자 합니다.

00:03:25.000 --> 00:03:27.000
몇 가지 코드를 살펴봅시다.

00:03:27.000 --> 00:03:31.000
여기에 자격 증명을 요청하는 데 필요한 기본 재료가 있습니다.

00:03:31.000 --> 00:03:39.000
이미 iOS 또는 macOS 앱에서 AuthenticationServices API를 사용하고 있다면, 이 코드는 매우 친숙해 보일 것입니다.

00:03:39.000 --> 00:03:45.000
비밀번호 요청으로 ASAuthorizationController의 인스턴스를 만드는 것으로 시작하겠습니다.

00:03:45.000 --> 00:03:51.000
이 API의 정말 강력한 점은 여러 종류의 요청을 지정할 수 있다는 것입니다.

00:03:51.000 --> 00:03:59.000
앱이 Apple로 로그인을 지원하는 경우, 인증 요청 배열에 Apple ID 요청을 포함할 수 있습니다.

00:03:59.000 --> 00:04:08.000
여러 요청을 지정하면, iPhone과 iPad는 사용자가 로그인하는 데 사용할 자격 증명 유형을 결정할 수 있습니다.

00:04:08.000 --> 00:04:17.000
다음으로, 저는 제 자신을 인증 컨트롤러의 대리인으로 설정하고 performRequests를 호출하여 로그인을 시작할 것입니다.

00:04:17.000 --> 00:04:24.000
이제 ASAuthorization- ControllerDelegate에서 몇 가지 방법을 구현해야 합니다.

00:04:24.000 --> 00:04:33.000
사용자가 iPhone 또는 iPad에서 사용할 자격 증명을 선택하면, 시스템은 didCompleteWithAuthorization을 호출합니다.

00:04:33.000 --> 00:04:40.000
이제 자격 증명의 사용자 및 비밀번호 속성을 사용하여 로그인을 완료할 수 있습니다.

00:04:40.000 --> 00:04:45.000
로그인이 실패하면, 시스템은 didCompleteWithError를 호출할 것이다.

00:04:45.000 --> 00:04:52.000
사용자가 로그인을 취소하면, 앱이 기본 로그인 UI로 돌아갈 수 있도록 이 방법에서 돌아올 것입니다.

00:04:52.000 --> 00:04:57.000
그렇지 않으면, 나는 사용자에게 뭔가 잘못되었고 그들이 다시 시도해야 한다는 것을 알려야 한다.

00:04:57.000 --> 00:05:02.000
다음으로, 시스템 로그인 보기를 사용자 정의하는 방법을 보여드리고자 합니다.

00:05:02.000 --> 00:05:10.000
사용자 지정 인증 방법 API를 사용하면 앱이 지원할 수 있는 다른 로그인 유형의 버튼을 표시할 수 있습니다.

00:05:10.000 --> 00:05:13.000
".다른" 가치는 많은 유연성을 제공한다.

00:05:13.000 --> 00:05:20.000
이 옵션을 사용하여 사용자 이름과 비밀번호를 묻는 것과 같은 수동 로그인 흐름으로 직접 이동할 수 있습니다.

00:05:20.000 --> 00:05:27.000
또는 사용자가 수행할 다른 유형의 로그인을 선택할 수 있는 자신의 UI로 이동하는 데 사용할 수 있습니다.

00:05:27.000 --> 00:05:35.000
앱이 사용자가 TV 공급자 계정을 사용하여 로그인할 수 있도록 허용하는 경우, .videoSubscriberAccount 값을 사용해야 합니다.

00:05:35.000 --> 00:05:41.000
그리고 마지막으로, .restorePurchase 값은 사용자가 인앱 구매를 복원하여 로그인할 수 있게 해준다.

00:05:41.000 --> 00:05:49.000
사용자가 이러한 사용자 지정 인증 방법 중 하나를 선택하면, 요청된 로그인 흐름을 시작하는 것은 앱에 달려 있습니다.

00:05:49.000 --> 00:05:52.000
이것이 어떻게 작동하는지 살펴봅시다.

00:05:52.000 --> 00:05:56.000
먼저, 이전에 보여드린 ASAuthorizationController 코드로 돌아가겠습니다.

00:05:56.000 --> 00:06:04.000
사용자 지정 로그인 옵션을 표시하려면, 인증 컨트롤러에 customAuthorizationMethods 속성을 설정할 것입니다.

00:06:04.000 --> 00:06:14.000
이 예에서는 시스템 로그인 보기에 "수동 로그인" 및 "구매 복원" 버튼을 표시하기 위해 .other 및 .restorePurchase 값을 사용하고 있습니다.

00:06:14.000 --> 00:06:19.000
앱에 적합한 값을 선택해야 합니다.

00:06:19.000 --> 00:06:28.000
사용자가 사용자 지정 인증 방법을 선택하면, 시스템은 내 authorizationController 대리인에 대해 didCompleteWithCustomMethod를 호출할 것이다.

00:06:28.000 --> 00:06:36.000
이 방법으로, 전달된 값을 확인하고 사용자가 요청한 로그인 유형을 수행할 수 있습니다.

00:06:36.000 --> 00:06:40.000
마지막으로, 저는 잠시 시간을 내어 몇 가지 모범 사례에 대해 이야기하고 싶습니다.

00:06:40.000 --> 00:06:45.000
tvOS에서 최고의 로그인 경험은 하나의 "로그인" 버튼으로 시작됩니다.

00:06:45.000 --> 00:06:52.000
그것은 로그인 과정을 통해 사용자를 안내하며, 제한된 수의 명확한 선택을 제공합니다.

00:06:52.000 --> 00:07:02.000
기존 로그인 경험을 새로운 시스템 로그인 보기로 대체함으로써, 사용자는 항상 iPhone 또는 iPad로 로그인할 수 있습니다.

00:07:02.000 --> 00:07:09.000
그리고 사용자 지정 인증 방법 API는 사용자에게 추가 로그인 옵션을 제공할 수 있는 좋은 방법입니다.

00:07:09.000 --> 00:07:15.000
tvOS 15는 그 어느 때보다 쉽게 훌륭한 로그인 경험을 구축할 수 있게 해준다.

00:07:15.000 --> 00:07:20.000
시스템 로그인 보기를 통해 사용자는 iPhone 또는 iPad로 로그인할 수 있습니다.

00:07:20.000 --> 00:07:27.000
그리고 AuthenticationServices의 강력한 새로운 API를 사용하면 쉽게 시작할 수 있습니다.

00:07:27.000 --> 00:07:35.000
이 프레젠테이션에서 공유한 몇 가지 예제를 더 자세히 보려면, 개발자 앱에서 이 세션의 샘플 코드 프로젝트를 참조하십시오.

00:07:35.000 --> 00:07:47.000
AuthenticationServices 프레임워크가 모든 Apple 플랫폼에서 훌륭한 로그인 경험을 구축하는 데 어떻게 도움이 되는지 자세히 알아보려면 WWDC 2019의 "인증의 새로운 기능" 비디오를 참조하십시오.

00:07:47.000 --> 00:07:49.000
봐줘서 고마워, 그리고 회의를 즐겨!

00:07:49.000 --> 23:59:59.000
[쾌활한 음악].

