WEBVTT

00:00:00.000 --> 00:00:05.000
♪ 베이스 음악 연주 ♪

00:00:05.000 --> 00:00:09.000
Nishant Nelogal: 안녕하세요, WWDC에 오신 것을 환영합니다.

00:00:09.000 --> 00:00:14.000
제 이름은 Nishant이고, AVFoundation 팀의 엔지니어입니다.

00:00:14.000 --> 00:00:17.000
오늘, 우리는 HLS 변형을 살펴볼 것이다.

00:00:17.000 --> 00:00:28.000
먼저, AVFoundation API를 사용하여 HLS 변형을 검사하는 방법을 살펴보고, 나중에 다운로드와 함께 HLS 변형을 어떻게 사용할 수 있는지 알아볼 것입니다.

00:00:28.000 --> 00:00:32.000
그럼 변형 검사부터 시작합시다.

00:00:32.000 --> 00:00:36.000
여러분 모두는 전형적인 마스터 플레이리스트가 어떻게 생겼는지 잘 알고 있어야 합니다.

00:00:36.000 --> 00:00:39.000
여기 예시가 있어.

00:00:39.000 --> 00:00:42.000
이 특정 재생 목록에는 두 가지 변형이 있습니다.

00:00:42.000 --> 00:00:52.000
변형 중 하나는 스테레오 오디오가 있는 SDR 변형이고, 다른 하나는 돌비 아트모스 오디오가 있는 돌비 비전 변형이다.

00:00:52.000 --> 00:00:58.000
이 특정 재생 목록을 나타내는 자산은 앱에서 이와 같은 것으로 표시될 수 있습니다.

00:00:58.000 --> 00:01:06.000
자세히 살펴보면, 자산에 4K, Dolby Vision 및 Dolby Atmos 배지가 있다는 것을 알 수 있습니다.

00:01:06.000 --> 00:01:11.000
이전에, 당신은 밴드에서 그런 정보를 얻어야 했습니다.

00:01:11.000 --> 00:01:17.000
이제 iOS 15에서는 HLS 재생 목록을 직접 검사하여 추론할 수 있습니다.

00:01:17.000 --> 00:01:23.000
그것을 위해, 당신은 마스터 재생 목록의 위치를 가리키는 AVURLAsset으로 시작합니다.

00:01:23.000 --> 00:01:29.000
나중에, 당신은 변형의 속성을 통해 HLS 재생 목록을 얻을 수 있습니다.

00:01:29.000 --> 00:01:37.000
여기서 볼 수 있듯이, 이 AVAssetVariant는 마스터 재생 목록과 마찬가지로 HLS 변형을 나타냅니다.

00:01:37.000 --> 00:01:41.000
그래서 그것은 다른 미디어 속성을 나타내는 여러 속성을 가지고 있다.

00:01:41.000 --> 00:01:46.000
미디어 비트레이트와 같은 일부 속성은 직접 접근할 수 있다.

00:01:46.000 --> 00:01:53.000
비디오 및 오디오 변환과 관련된 것과 같은 다른 속성은 자체 하위 클래스로 함께 그룹화됩니다.

00:01:53.000 --> 00:02:00.000
그것들은 각각 VideoAttributes와 AudioAttributes로 불린다.

00:02:00.000 --> 00:02:06.000
보시다시피, 그들 각각은 당신의 자산을 이해하는 데 사용할 수 있는 관련 속성을 가지고 있습니다.

00:02:06.000 --> 00:02:11.000
이제 AVFoundation에서 HLS 변형을 검사하는 방법을 알게 되었습니다.

00:02:11.000 --> 00:02:14.000
다운로드와 함께 그것들을 어떻게 사용할 수 있는지 봅시다.

00:02:14.000 --> 00:02:19.000
오프라인 재생을 위한 HLS 콘텐츠 다운로드는 2016년부터 지원되었습니다.

00:02:19.000 --> 00:02:28.000
HLS 다운로드 API에 익숙하지 않다면, WWDC 2020의 주제에 대한 이전 이야기를 확인하는 것이 좋습니다.

00:02:28.000 --> 00:02:34.000
iOS 15에서, 우리는 HLS 다운로드 API를 사용하여 훨씬 더 강력하게 만들고 있습니다.

00:02:34.000 --> 00:02:40.000
일반적으로, 당신은 다운로드를 위해 선택된 HLS 변형에 영향을 미치고 싶습니다.

00:02:40.000 --> 00:02:45.000
이것은 비즈니스 요구 사항 때문일 수도 있고, 사용자에게 더 많은 선택권을 제공하고 싶을 수도 있습니다.

00:02:45.000 --> 00:02:49.000
이전에는 downloadTask 옵션을 통해 그러한 입력을 제공할 수 있었습니다.

00:02:49.000 --> 00:02:57.000
우리는 HDR 옵션, 무손실 오디오 옵션, 그리고 몇 가지 다른 속성이 있었다.

00:02:57.000 --> 00:03:03.000
iOS 15에서, 우리는 NSPredicates를 사용하여 변형 선택을 확장하고 있습니다.

00:03:03.000 --> 00:03:08.000
당신은 이미 Core Data의 조건자 사용에 익숙할 것입니다.

00:03:08.000 --> 00:03:12.000
그렇지 않다면, 걱정하지 마세요, 당신은 오늘 그들에 대해 배울 것입니다.

00:03:12.000 --> 00:03:17.000
그래서 시작하기 위해, 변형 한정자 인터페이스를 소개하겠습니다.

00:03:17.000 --> 00:03:22.000
이 인터페이스를 사용하면 AVFoundation에 대한 변형 선호도를 지정할 수 있습니다.

00:03:22.000 --> 00:03:27.000
그리고, 내가 말했듯이, 그것들은 NSPredicates를 사용하여 건설될 수 있다.

00:03:27.000 --> 00:03:31.000
몇 가지 예를 보고 이해합시다.

00:03:31.000 --> 00:03:37.000
여기, 우리는 피크 비트레이트를 5메가비트 미만으로 표현하는 NSPredicate를 가지고 있습니다.

00:03:37.000 --> 00:03:44.000
당신은 이것을 사용하여 AVFoundation이 5 메가비트 미만의 변형을 선호하도록 지시하는 변형 한정자를 구성합니다.

00:03:44.000 --> 00:03:47.000
충분히 간단해, 그렇지?

00:03:47.000 --> 00:03:49.000
다른 예를 살펴봅시다.

00:03:49.000 --> 00:03:53.000
여기서 우리는 HDR 비디오 범위를 위한 NSPredicate를 만듭니다.

00:03:53.000 --> 00:03:59.000
그리고 이전과 마찬가지로, 당신은 그것에 대한 변형 한정자를 구성할 수 있습니다.

00:03:59.000 --> 00:04:06.000
또한 여러 술어와 결합하여 복합 술어들을 만들고 이를 사용하여 변형 한정자를 만들 수 있습니다.

00:04:06.000 --> 00:04:11.000
변형의 모든 속성은 조건자를 만드는 데 사용될 수 있다.

00:04:11.000 --> 00:04:20.000
술어 형식 문자열을 사용하여 쉽게 표현할 수 없는 오디오 채널 수와 같은 속성의 경우, 사용자 지정 생성자가 있습니다.

00:04:20.000 --> 00:04:24.000
변형 한정자를 위해 헤더 문서에서 그것들을 찾을 수 있습니다.

00:04:24.000 --> 00:04:30.000
변형 한정자가 있으면, 그것을 사용하여 콘텐츠 구성이라고 불리는 것을 만듭니다.

00:04:30.000 --> 00:04:37.000
각 콘텐츠 구성은 비디오, 오디오 및 자막 변환 세트를 나타냅니다.

00:04:37.000 --> 00:04:42.000
그래, 예를 들어 이해하자.

00:04:42.000 --> 00:04:47.000
여기 우리가 이전에 본 두 개의 술어들을 결합한 변형 한정자가 있습니다.

00:04:47.000 --> 00:04:50.000
어, 이건 합성이야. 하하.

00:04:50.000 --> 00:04:55.000
그것은 AVFoundation이 5메가비트 미만의 HDR 변형을 선호한다고 알려준다.

00:04:55.000 --> 00:05:04.000
우리는 또한 영어와 프랑스어 오디오를 대표하는 미디어 선택 세트와 영어 자막 변환을 가지고 있습니다.

00:05:04.000 --> 00:05:08.000
이 두 가지 모두 콘텐츠 구성 객체를 만드는 데 사용할 수 있습니다.

00:05:08.000 --> 00:05:13.000
이러한 콘텐츠 구성을 여러 개 만들고 downloadTask에 제공할 수 있습니다.

00:05:13.000 --> 00:05:19.000
이러한 여러 콘텐츠 구성은 다운로드 구성 인터페이스에 의해 함께 묶여 있습니다.

00:05:19.000 --> 00:05:23.000
이것은 모든 것을 하나로 묶는 뿌리이다.

00:05:23.000 --> 00:05:30.000
그것은 AVURLAsset으로 만들어졌으며 자산 이름과 선택적으로 이미지가 필요합니다.

00:05:30.000 --> 00:05:35.000
자산 이름과 이미지는 설정 앱에 표시됩니다.

00:05:35.000 --> 00:05:40.000
이를 통해 사용자는 설정 앱의 한 곳에서 모든 다운로드를 관리할 수 있습니다.

00:05:40.000 --> 00:05:46.000
그리고 물론, downloadTask는 여러 콘텐츠 구성으로 구성할 수 있습니다.

00:05:46.000 --> 00:05:57.000
자세히 살펴보면, 콘텐츠 구성 중 하나가 기본으로 지정되고 나머지는 보조가 될 것이다.

00:05:57.000 --> 00:06:10.000
둘의 차이점은 일반적으로 비디오, 오디오 및 자막 변환의 기본 세트를 다운로드한 다음 추가 오디오 또는 자막 변환으로 보완하고 싶다는 것입니다.

00:06:10.000 --> 00:06:21.000
추가 렌디션을 보조 콘텐츠 구성으로 지정함으로써, AVFoundation에 여러 비디오 렌디션을 최적화하고 다운로드하지 않도록 지시합니다.

00:06:21.000 --> 00:06:25.000
우리가 예시를 검토할수록 더 분명해진다.

00:06:25.000 --> 00:06:28.000
여기 완전한 예가 있습니다.

00:06:28.000 --> 00:06:35.000
먼저, 우리는 AVURLAsset과 제목으로 다운로드 구성을 만드는 것으로 시작합니다.

00:06:35.000 --> 00:06:39.000
기본 콘텐츠 구성은 우리가 이전에 본 것과 동일합니다.

00:06:39.000 --> 00:06:47.000
영어와 프랑스어 오디오와 영어 자막이 있는 5메가비트 미만의 HDR 변형을 다운로드하도록 구성되어 있습니다.

00:06:47.000 --> 00:06:55.000
이 특별한 예에서, 우리는 무손실 형식으로 영어 오디오를 다운로드하기 위한 보조 콘텐츠 구성으로 보완하고 싶습니다.

00:06:55.000 --> 00:07:00.000
이제 우리는 다운로드하고 싶은 두 가지 콘텐츠 구성을 모두 가지고 있습니다.

00:07:00.000 --> 00:07:06.000
optimizesAuxiliary ContentConfigurations를 true로 설정하세요.

00:07:06.000 --> 00:07:19.000
그건 그렇고, 그것은 기본적으로 사실이며, AVFoundation은 무손실 변형의 비디오 변환이 기본 콘텐츠 구성과 동일하도록 무손실 변형을 선택할 수 있습니다.

00:07:19.000 --> 00:07:28.000
거짓으로 설정하면 무손실 변형이 독립적으로 평가될 수 있으며, 이로 인해 중복된 비디오 변환이 다운로드될 수 있습니다.

00:07:28.000 --> 00:07:32.000
이것은 우리가 원하지 않는 다운로드 크기를 증가시킬 수 있습니다.

00:07:32.000 --> 00:07:38.000
좋아요, 일단 다운로드 구성이 있으면, 그것을 사용하여 downloadTask를 만들 수 있습니다.

00:07:38.000 --> 00:07:42.000
다운로드를 시작하기 위해 downloadTask를 재개합니다.

00:07:42.000 --> 00:07:48.000
iOS 15부터는 NSProgress 인터페이스를 사용하여 downloadTask의 진행 상황을 관찰할 수도 있습니다.

00:07:48.000 --> 00:07:55.000
NSProgress 객체는 KVO 관찰 가능하며, 사용자 인터페이스를 업데이트하는 데 사용할 수 있습니다.

00:07:55.000 --> 00:07:57.000
계속해.

00:07:57.000 --> 00:08:04.000
우리는 여러분 중 일부가 변종을 선택하기 위한 비즈니스 논리를 가지고 있을 수 있다는 것을 이해하며, 이는 술어로 표현하기가 더 어려울 수 있습니다.

00:08:04.000 --> 00:08:10.000
이러한 경우, 명시적으로 다운로드하려는 변형을 선택할 수도 있습니다.

00:08:10.000 --> 00:08:18.000
이 예에서, 우리는 이미 기본 및 보조 변형과 미디어 선택을 선택했습니다.

00:08:18.000 --> 00:08:25.000
우리는 변형으로 직접 한정자를 만들어 AVFoundation을 그대로 다운로드하도록 지시할 수 있습니다.

00:08:25.000 --> 00:08:30.000
다운로드된 장치에서 재생할 수 있도록 변형을 선택하도록 주의하세요.

00:08:30.000 --> 00:08:32.000
그게 오늘 우리가 가진 전부야, 얘들아.

00:08:32.000 --> 00:08:38.000
마무리하기 위해, 우리는 HLS 변형을 검사하고 이를 사용하여 downloadTask를 구성하는 방법을 살펴보았습니다.

00:08:38.000 --> 00:08:43.000
그 과정에서, 우리는 downloadTask 구성을 위한 다른 인터페이스를 만났다.

00:08:43.000 --> 00:08:46.000
첫 번째는 변형 한정자였다.

00:08:46.000 --> 00:08:49.000
이것은 당신의 변형 선호도를 표현하는 데 사용됩니다.

00:08:49.000 --> 00:08:52.000
그리고 나서 우리는 콘텐츠 구성 인터페이스를 보았다.

00:08:52.000 --> 00:08:58.000
콘텐츠 구성은 변형 환경 설정과 미디어 선택 선택을 연결합니다.

00:08:58.000 --> 00:09:01.000
마침내, 우리는 다운로드 구성을 보았다.

00:09:01.000 --> 00:09:06.000
다운로드 구성은 모든 것을 하나로 묶는 루트 인터페이스이다.

00:09:06.000 --> 00:09:12.000
마지막으로, 우리는 또한 NSProgress를 사용하여 downloadTask를 모니터링할 수 있다는 것을 배웠습니다.

00:09:12.000 --> 00:09:15.000
자세한 내용은 헤더 문서를 확인하세요.

00:09:15.000 --> 00:09:17.000
그들은 아주 잘 댓글을 달았어.

00:09:17.000 --> 00:09:19.000
봐줘서 고마워 그리고 안녕!

00:09:19.000 --> 23:59:59.000
♪

