WEBVTT

00:00:02.000 --> 00:00:13.000
안녕. 제 이름은 루크 라슨이고, 저는 Xcode 엔지니어입니다.

00:00:13.000 --> 00:00:16.000
나중에, 나는 내 동료인 Youssef Elabd와 합류할 것이다.

00:00:16.000 --> 00:00:26.000
인터페이스 빌더는 코드를 작성하지 않고도 앱 사용자 인터페이스를 시각적으로 구축할 수 있는 간단하고 직관적인 방법을 제공하여 개발자가 앱을 돋보이게 만드는 데 중요한 것에 집중할 수 있도록 합니다.

00:00:26.000 --> 00:00:38.000
오늘 우리는 앱을 더욱 돋보이게 하기 위해 새로운 시스템 제공 제어 스타일을 포함한 최신 플랫폼 기능을 그 어느 때보다 쉽게 활용할 수 있는 Xcode 13의 인터페이스 빌더의 새로운 기능을 보여드리겠습니다.

00:00:38.000 --> 00:00:51.000
이 비디오에서는 인터페이스 빌더 캔버스의 개선과 버튼 스타일, 테이블 내용 스타일, 계층적 기호 및 접근성에 대한 저작 지원에 대해 다룰 것입니다.

00:00:51.000 --> 00:00:54.000
캔버스 개선부터 시작합시다.

00:00:54.000 --> 00:01:02.000
Xcode 13의 인터페이스 빌더에서 가장 먼저 알 수 있는 것 중 하나는 완전히 재설계된 캔버스 하단 바입니다.

00:01:02.000 --> 00:01:10.000
바 왼쪽의 컨트롤은 이전과 동일한 기능을 제공하지만, 더 컴팩트한 형태로 캔버스를 위한 더 많은 공간을 확보합니다.

00:01:10.000 --> 00:01:18.000
그룹으로 구성된 다양한 장치가 포함된 장치를 선택할 수 있는 팝오버가 있습니다.

00:01:18.000 --> 00:01:26.000
다른 장치 그룹을 클릭하면 확장되고 이전 그룹이 축소되어 찾고 있는 장치를 더 쉽게 찾을 수 있습니다.

00:01:26.000 --> 00:01:36.000
나중에 비디오에서 보여줄 장면 레이아웃, 방향, 모양 및 완전히 새로운 접근성 옵션을 구성하는 버튼도 있습니다.

00:01:36.000 --> 00:01:39.000
다른 개선 사항에는 캔버스 개요 보기에 대한 개선이 포함된다.

00:01:39.000 --> 00:01:42.000
그리고 그것들을 보여주기 위해, 인터페이스 빌더로 넘어가자.

00:01:42.000 --> 00:01:51.000
나는 호텔 앱에서 예약 장면을 작업하고 있는데, 왼쪽 개요 보기에서 프로모션 장면 옆에 위치하지 않는다는 것을 알아차렸다.

00:01:51.000 --> 00:01:55.000
예약 장면이 프로모션 장면으로 이어지기 때문에, 그것이 내가 기대하는 것이다.

00:01:55.000 --> 00:02:02.000
이제 드래그 앤 드롭을 사용하여 아웃라인 보기에서 하나 이상의 선택된 장면을 이동하고 재정렬할 수 있습니다.

00:02:02.000 --> 00:02:09.000
그래서 나는 프로모션 장면 바로 위에 위치하도록 예약 장면을 아래로 드래그할 것이다.

00:02:09.000 --> 00:02:14.000
좋아. 이제 두 장면은 서로 옆에 위치하며 사이를 더 쉽게 탐색할 수 있다.

00:02:14.000 --> 00:02:19.000
드래그하는 동안 옵션 키를 눌러 전체 장면을 복사할 수도 있습니다.

00:02:19.000 --> 00:02:29.000
개요 보기에 대한 또 다른 개선 사항은 이제 제약과 같은 개요 그룹을 선택할 수 있어 키보드 탐색과 전체 개체 그룹을 쉽게 수정하거나 삭제할 수 있다는 것입니다.

00:02:29.000 --> 00:02:34.000
이것을 보여주기 위해, 나는 개요 보기에서 제약 그룹을 선택할 것이다.

00:02:34.000 --> 00:02:37.000
이것은 그룹의 모든 제약을 선택하는 것과 같다.

00:02:37.000 --> 00:02:41.000
나는 그룹에 포함된 네 가지 가장자리 제약을 밝히기 위해 오른쪽 화살표 키를 누를 것이다.

00:02:41.000 --> 00:02:53.000
이제 인스펙터의 모든 그룹 제약 조건에 대한 상수를 쉽게 수정하거나 선택하고 삭제 키를 눌러 전체 제약 그룹 그룹을 삭제할 수 있습니다.

00:02:53.000 --> 00:02:57.000
다음으로, 새로운 버튼 스타일을 계속해 봅시다.

00:02:57.000 --> 00:03:09.000
Xcode 13의 인터페이스 빌더는 친숙한 일반 스타일과 Gray, Tinted 및 Filled의 세 가지 새로운 스타일을 포함한 새로운 프리셋 스타일의 저작 버튼을 지원합니다.

00:03:09.000 --> 00:03:20.000
이러한 새로운 스타일을 사용하면 동적 유형, 멀티라인 타이틀 및 접근성과 같은 시스템 기능을 자동으로 지원하는 인터페이스 빌더에서 직접 아름답고 일관된 버튼을 쉽게 만들 수 있습니다.

00:03:20.000 --> 00:03:26.000
또한, 버튼 스타일은 사전 설정된 버튼 크기와 코너 스타일과 같은 옵션으로 추가 사용자 지정을 지원합니다.

00:03:26.000 --> 00:03:30.000
나는 나중에 비디오에서 더 많은 스타일 커스터마이징에 들어갈 것이다.

00:03:30.000 --> 00:03:35.000
버튼 스타일에 대한 자세한 내용은 "UIKit 버튼 시스템 만나기" 비디오를 확인하세요.

00:03:35.000 --> 00:03:39.000
인터페이스 빌더로 돌아가서 이러한 새로운 스타일을 실제로 보여드리겠습니다.

00:03:39.000 --> 00:03:43.000
장면 하단에 주의를 기울일 수 있는 북룸 버튼이 있다.

00:03:43.000 --> 00:03:50.000
나는 더 자세히 보기 위해 핀치 투 줌을 사용할 것이다.

00:03:50.000 --> 00:03:54.000
이 버튼에 더 많은 관심을 끌기 위해 채우기 색상과 둥근 모서리가 있으면 싶습니다.

00:03:54.000 --> 00:04:00.000
Xcode 13에서는 이제 버튼 스타일을 사용하여 인터페이스 빌더에서 직접 이와 같은 버튼을 만들 수 있습니다.

00:04:00.000 --> 00:04:03.000
검사관에게 집중하자.

00:04:03.000 --> 00:04:07.000
버튼 인스펙터 상단 근처에 새로운 스타일 속성이 있습니다.

00:04:07.000 --> 00:04:16.000
기본 스타일이 아닌 스타일을 선택하면 버튼이 새 버튼 시스템에 선택되어 동적 유형, 멀티라인 타이틀 및 접근성을 자동으로 지원합니다.

00:04:16.000 --> 00:04:23.000
인스펙터에서 스타일 팝업 메뉴를 열고 북룸 버튼의 채워진 스타일을 선택하겠습니다.

00:04:23.000 --> 00:04:27.000
그 버튼은 이제 파란색 채우기 색상과 딱 맞는 둥근 모서리를 가지고 있다.

00:04:27.000 --> 00:04:30.000
그리고 내가 해야 할 일은 한 가지 변화를 만드는 것뿐이었다.

00:04:30.000 --> 00:04:34.000
버튼 스타일은 당신이 원하는 모습을 빠르게 얻기에 좋습니다.

00:04:34.000 --> 00:04:52.000
스타일을 선택한 후, 새로운 속성이 버튼 관리자에 나타나 자막, 제목 정렬 및 색상 옵션, 이미지 위치, 코너 스타일 및 고급 배경 구성 옵션을 포함한 추가 스타일 사용자 지정을 가능하게 합니다.

00:04:52.000 --> 00:05:02.000
이름에서 알 수 있듯이, 채워진 스타일은 앱 색조를 사용하여 버튼의 채우기 색상을 설정하여 눈에 띄는 모양을 제공하고 사용자 인터페이스의 중요한 버튼에 적합하게 만듭니다.

00:05:02.000 --> 00:05:05.000
그리고 코너 스타일은 특정 코너 반경을 설정하는 것에 대해 걱정할 필요가 없다는 것을 의미합니다.

00:05:05.000 --> 00:05:16.000
기본 코너 스타일은 다이나믹이라고 하며, 동적 유형으로 자동으로 확장되는 멋진 코너 반경을 제공하여 버튼의 모양을 모든 크기로 유지합니다.

00:05:16.000 --> 00:05:21.000
또는, 고정 코너 스타일의 반경은 버튼 크기 변경과 동일하게 유지됩니다.

00:05:21.000 --> 00:05:28.000
더 많은 제어가 필요한 경우, 동적 및 고정 코너 스타일 모두 사용자 정의 가능한 코너 반경을 가지고 있습니다.

00:05:28.000 --> 00:05:38.000
또한, 소형, 중형, 대형 및 캡슐을 포함한 다양한 프리셋 코너 스타일이 제공되며, 모두 동적 코너 스케일링을 지원합니다.

00:05:38.000 --> 00:05:50.000
스타일이 있는 버튼은 또한 소형, 중형 및 대형을 포함한 사전 설정된 버튼 크기를 포함하는 크기 관리자의 새로운 버튼 크기 속성에 액세스할 수 있습니다.

00:05:50.000 --> 00:05:54.000
버튼 스타일을 채택할 수 있는 더 많은 기회를 찾기 위해 호텔 앱으로 돌아가 봅시다.

00:05:54.000 --> 00:05:56.000
체크인과 체크아웃 버튼은 약간 평범해 보인다.

00:05:56.000 --> 00:06:06.000
그것들을 더 눈에 띄게 하기 위해, 나는 투명한 색조의 배경을 가지고 있고 중요하지만 채워진 스타일이 제공하는 눈에 띄는 모양이 필요하지 않은 버튼에 좋은 틴티드 버튼 스타일을 사용할 것이다.

00:06:06.000 --> 00:06:15.000
Command 키를 길게 눌러 개요 보기에서 체크인 및 체크아웃 버튼을 선택하겠습니다.

00:06:15.000 --> 00:06:24.000
그리고 관리자의 버튼 스타일 메뉴에서 색을 선택하세요.

00:06:24.000 --> 00:06:27.000
이것이 바로 내가 이 버튼들을 찾고 있던 것이다.

00:06:27.000 --> 00:06:33.000
계속해서, 이 앱의 프로모션 장면에는 새로운 틴티드 스타일에 완벽한 몇 가지 버튼이 있습니다.

00:06:33.000 --> 00:06:36.000
넘어가서 한 번 보자.

00:06:36.000 --> 00:06:44.000
캔버스 미니맵을 사용하여 프로모션 장면을 두 번 클릭하여 바로 이동할 것입니다.

00:06:44.000 --> 00:06:49.000
이 장면은 적절한 받기 버튼을 눌러 손님이 선택할 수 있는 활성 호텔 프로모션 목록을 표시합니다.

00:06:49.000 --> 00:06:56.000
각 Get 버튼은 이미지를 오버레이하고 틴티드 스타일의 투명한 배경이 제공하는 추가 대비의 이점을 누릴 수 있습니다.

00:06:56.000 --> 00:07:10.000
Command 키를 길게 눌러 개요 보기에서 세 개의 가져오기 버튼을 선택하겠습니다.

00:07:10.000 --> 00:07:21.000
그리고 인스펙터의 스타일 메뉴에서 틴티드를 선택하여 모든 버튼 스타일을 동시에 변경하십시오.

00:07:21.000 --> 00:07:23.000
그거 좋아 보인다.

00:07:23.000 --> 00:07:29.000
틴티드 버튼 제목과 배경색은 앱의 색조 색상을 기반으로 하며 적절한 수준의 대비를 제공합니다.

00:07:29.000 --> 00:07:35.000
또한 어떤 프로모션이 선택되었는지 나타내기 위해 탭한 후 Get 버튼을 토글하고 모양을 변경하고 싶습니다.

00:07:35.000 --> 00:07:40.000
iOS 15의 새로운 동작을 달성하기 위해 토글 버튼으로 구성할 것입니다.

00:07:40.000 --> 00:07:51.000
메뉴 아래의 인스펙터에서 "기본 옵션으로 선택" 속성을 토글하여 선택한 버튼을 토글 버튼으로 만들 것입니다.

00:07:51.000 --> 00:07:59.000
계속하기 전에, 고객이 도움을 요청할 수 있도록 예약 장면에 새 버튼을 추가하고 싶습니다.

00:07:59.000 --> 00:08:04.000
내가 가서 오브젝트 라이브러리를 열게...

00:08:04.000 --> 00:08:13.000
이제 일반 스타일의 버튼과 회색, 틴티드, 채우기의 세 가지 새로운 스타일을 포함하여 새로운 스타일 시스템을 사용하도록 사전 구성된 버튼이 있습니다.

00:08:13.000 --> 00:08:27.000
회색 스타일은 좀 더 대비를 제공하는 투명한 회색 배경을 가지고 있으므로, 새로운 회색 버튼을 드래그하여 "도움말 얻기" 버튼 역할을 하고 탐색 모음에 배치할 것입니다.

00:08:27.000 --> 00:08:34.000
개요 보기에서 새 버튼을 선택하겠습니다...

00:08:34.000 --> 00:08:42.000
그리고 더 자세히 보기 위해 핀치 투 줌을 사용하세요.

00:08:42.000 --> 00:08:51.000
버튼의 제목과 자막을 설정할게...

00:08:51.000 --> 00:09:02.000
물음표 기호에 대한 이미지...

00:09:02.000 --> 00:09:09.000
그리고 이미지와 제목 사이에 공간을 조금 더 추가하려면, 이미지 패딩을 설정하겠습니다.

00:09:09.000 --> 00:09:13.000
인터페이스 빌더를 사용하는 것의 장점 중 하나는 변경 사항을 시도하고 결과를 빠르게 확인할 수 있다는 것이다.

00:09:13.000 --> 00:09:23.000
여기서 어떤 코너 스타일을 사용해야 할지 잘 모르겠어, 그래서 어떻게 보이는지 보기 위해 캡슐 스타일을 시도해 볼게.

00:09:23.000 --> 00:09:26.000
좋아 보이지만, 그건 내가 찾고 있는 게 아니야.

00:09:26.000 --> 00:09:30.000
대신, 나는 원하는 모습을 얻기 위해 큰 코너 스타일을 선택할 것이다.

00:09:30.000 --> 00:09:36.000
그건 쉬웠어. 멋진 버튼을 만드는 데 필요한 모든 것을 이제 버튼 관리자에서 직접 사용할 수 있습니다.

00:09:36.000 --> 00:09:53.000
고급 스타일 사용자 지정이 필요한 경우, 사용자 지정 배경 구성을 설정하면 코너 반경, 스트로크 및 배경 이미지를 포함한 추가 속성을 공개하여 더 세밀하게 제어할 수 있습니다.

00:09:53.000 --> 00:09:58.000
방을 예약하기 전 단계 중 하나는 방에 머무를 것으로 예상되는 손님의 수를 선택하는 것입니다.

00:09:58.000 --> 00:10:01.000
나는 이 장면이 1명에서 4명 중 하나를 선택할 수 있는 옵션이 있으면 좋겠어.

00:10:01.000 --> 00:10:06.000
iOS 15는 이제 이 기능에 완벽한 팝업 버튼을 지원합니다.

00:10:06.000 --> 00:10:11.000
팝업 버튼은 클릭하면 항목 목록이 있는 메뉴를 표시하는 버튼입니다.

00:10:11.000 --> 00:10:21.000
그런 다음 해당 메뉴에서 단일 항목을 선택할 수 있으며, 이는 팝업 버튼의 새로운 라벨이 됩니다.

00:10:21.000 --> 00:10:25.000
저는 이미 게스트 라벨을 만들었기 때문에, 이제 팝업 버튼을 추가하기만 하면 됩니다.

00:10:25.000 --> 00:10:38.000
내가 오브젝트 라이브러리를 열고 하나를 끌어낼게.

00:10:38.000 --> 00:10:48.000
팝업 버튼은 또한 버튼 스타일을 지원하므로, 체크인 및 체크아웃 버튼과 일치하는 틴티드 스타일을 선택하겠습니다.

00:10:48.000 --> 00:11:02.000
그런 다음, 개요 보기에서 기존 메뉴 항목을 복사하기 위해 Option-드래그를 사용하여 두 개의 메뉴 항목을 더 만들 것입니다.

00:11:02.000 --> 00:11:15.000
마지막으로, 1부터 4까지의 값을 갖도록 메뉴 항목을 구성하겠습니다.

00:11:15.000 --> 00:11:25.000
Mac Catalyst 15가 있는 Mac에서 앱이 실행될 때, 스타일이 있는 버튼은 자동으로 기본 macOS 변형에 매핑되어 Mac에서 앱을 더 쉽게 멋지게 보이게 할 수 있습니다.

00:11:25.000 --> 00:11:34.000
iOS 팝업 버튼은 이제 Mac Catalyst 15에서도 지원되며, 마우스 커서가 컨트롤을 가리킬 때 더 많은 정보를 제공하는 툴팁도 지원됩니다.

00:11:34.000 --> 00:11:53.000
저는 이 앱의 Mac Catalyst 버전을 가질 계획이므로, 제어 관리자의 새로운 팝업 버튼에 대한 도구 팁을 설정하겠습니다.

00:11:53.000 --> 00:11:55.000
그리고 우리는 끝났어.

00:11:55.000 --> 00:12:01.000
메뉴 항목은 런타임에 표시하려면 작업에 연결되어야 합니다.

00:12:01.000 --> 00:12:10.000
이제 앱 전반에 걸쳐 새로운 버튼 스타일을 채택했으니, 구축하고 실행합시다.

00:12:10.000 --> 00:12:18.000
여기 새로운 회색 스타일의 Get Help 버튼, 틴티드 룸 옵션 및 채워진 "Book Room" 버튼으로 실행되는 앱이 있습니다.

00:12:18.000 --> 00:12:22.000
그리고 마지막으로 틴티드 프로모션 버튼, 그리고 그것들은 멋져 보인다.

00:12:22.000 --> 00:12:28.000
다음으로, 나는 그것을 테이블 콘텐츠 스타일, 계층적 기호 및 접근성을 다룰 Youssef에게 넘길 것이다.

00:12:28.000 --> 00:12:29.000
유세프?

00:12:29.000 --> 00:12:31.000
고마워, 루크.

00:12:31.000 --> 00:12:37.000
우리가 방문할 다음 워크플로우는 테이블 뷰 셀 콘텐츠 구성 스타일을 사용하여 테이블 뷰 셀을 스타일링하는 것입니다.

00:12:37.000 --> 00:12:39.000
대부분의 훌륭한 호텔에는 또한 훌륭한 레스토랑이 있다.

00:12:39.000 --> 00:12:41.000
이 호텔도 다르지 않아.

00:12:41.000 --> 00:12:47.000
최근에, 나는 손님들이 레스토랑의 메뉴를 확인할 수 있도록 앱에 몇 가지 뷰를 추가하는 작업을 하고 있다.

00:12:47.000 --> 00:12:49.000
내가 중단한 곳에서 시작하자.

00:12:49.000 --> 00:12:53.000
나는 그것에 집중하기 위해 그의 테이블 뷰 컨트롤러를 두 손가락으로 더블 탭할 것이다.

00:12:53.000 --> 00:13:01.000
이 정적 테이블 뷰는 호텔의 편의 시설 목록을 보여주며, 최근에 레스토랑의 또 다른 테이블 뷰 행을 추가했습니다.

00:13:01.000 --> 00:13:06.000
나는 여기 셀의 제목 라벨이 그 아래에 있는 자막 라벨 위에 눈에 띄기를 원한다.

00:13:06.000 --> 00:13:11.000
새로운 테이블 뷰 셀 콘텐츠 구성 스타일 중 하나는 내가 원하는 모양을 줄 수 있다.

00:13:11.000 --> 00:13:25.000
다음은 그룹화된 머리글, 값 셀 및 그룹화된 바닥글과 같은 새로운 셀 스타일로 얻을 수 있는 셀 레이아웃 중 일부입니다.

00:13:25.000 --> 00:13:31.000
이 새로운 스타일은 이미지와 잘 작동하며 동적 유형과 같은 기능을 무료로 얻을 수 있습니다.

00:13:31.000 --> 00:13:36.000
그러니 인터페이스 빌더로 돌아가서 이 테이블 뷰에서 셀의 스타일을 변경해 봅시다.

00:13:36.000 --> 00:13:48.000
문서 개요의 모든 셀을 선택하고 속성 관리자 상단 근처의 스타일 드롭다운을 클릭하여 모든 새로운 콘텐츠 구성 스타일을 보여줍니다.

00:13:48.000 --> 00:13:51.000
나는 자막 셀을 선택할 것이다.

00:13:51.000 --> 00:13:55.000
우리는 지금 새로운 스타일 중 하나를 사용하고 있기 때문에, 인스펙터에서 바로 이미지 패딩을 변경할 수 있습니다.

00:13:55.000 --> 00:14:00.000
셀의 라벨과 이미지 사이에 호흡 공간을 두기 위해 여기서 그렇게 합시다.

00:14:00.000 --> 00:14:03.000
우리 세포는 이제 더 크고 명확한 제목 라벨을 가지고 있다.

00:14:03.000 --> 00:14:10.000
이것은 정확히 내가 원했던 것이고, 좋은 시각적 개선이지만, 나는 여전히 세포가 더 많은 색으로 할 수 있다고 생각한다.

00:14:10.000 --> 00:14:14.000
다음으로, 계층적 상징이 여기서 우리를 어떻게 도울 수 있는지 살펴봅시다.

00:14:14.000 --> 00:14:22.000
iOS 15의 새로운 기능, 기호는 레이어별로 색상을 지정할 수 있는 여러 레이어를 가질 수 있습니다.

00:14:22.000 --> 00:14:26.000
이 렌더링은 내 기호에 더 많은 색상과 깊이를 추가할 수 있다.

00:14:26.000 --> 00:14:29.000
이것을 활용하는 두 가지 새로운 렌더링 모드가 있다.

00:14:29.000 --> 00:14:40.000
첫 번째는 계층적이며, 기호의 기본 레이어의 색상을 지정하고 기호의 다른 레이어의 색상을 기본 레이어 색상의 축소된 알파 버전으로 도출할 수 있습니다.

00:14:40.000 --> 00:14:46.000
다른 모드는 팔레트로, 기호 레이어의 색상을 독립적으로 설정할 수 있습니다.

00:14:46.000 --> 00:14:51.000
"SF 심볼의 새로운 기능" 비디오에서 새로운 심볼 렌더링 모드에 대해 자세히 알아볼 수 있습니다.

00:14:51.000 --> 00:14:55.000
테이블 뷰의 기호는 현재 흑백 모드로 렌더링되고 있습니다.

00:14:55.000 --> 00:14:59.000
하지만, 나는 그 상징의 주요 요소를 강조하고 싶다.

00:14:59.000 --> 00:15:03.000
계층적 렌더링 모드는 이것에 완벽하다.

00:15:03.000 --> 00:15:06.000
여기 이 새로운 모드를 사용하여 렌더링된 기호가 있습니다.

00:15:06.000 --> 00:15:14.000
심볼의 레이어 사이의 다양한 불투명성은 내가 원하는 것을 강조하므로, 인터페이스 빌더에서 이것을 채택합시다.

00:15:14.000 --> 00:15:21.000
다시 말하지만, 모든 셀을 선택하면, 셀 기호에 대한 렌더링 모드 드롭다운을 클릭하겠습니다.

00:15:21.000 --> 00:15:28.000
나는 Hierarchical을 선택하고 내 앱의 색 구성표와 일치하도록 Tint Color를 선택할 것이다.

00:15:28.000 --> 00:15:38.000
좋아. 우리는 셀에 대한 새로운 콘텐츠 구성 스타일 중 하나와 기호에 대한 계층적 렌더링 모드를 사용하여 이 편의 시설 보기에 신선한 새로운 모습을 부여했습니다.

00:15:38.000 --> 00:15:42.000
이제 편의 시설 보기를 업데이트했으니, 접근성을 살펴봅시다.

00:15:42.000 --> 00:15:49.000
레스토랑의 메뉴 항목 중 하나에 대한 더 많은 정보를 보여주는 메뉴 항목 세부 보기로 주의를 돌리자.

00:15:49.000 --> 00:15:55.000
여기 설명 라벨은 부제 텍스트 스타일을 사용하고 있으며, 이는 동적 유형을 지원한다는 것을 의미합니다.

00:15:55.000 --> 00:16:01.000
이 라벨은 이미 꽤 넓으며, 더 큰 유형 설정으로 몇 가지 레이아웃 문제가 발생할 수 있다고 생각합니다.

00:16:01.000 --> 00:16:11.000
Xcode 13의 인터페이스 빌더의 새로운 기능, 이제 디자인 시점에 인터페이스 빌더에서 iOS 장면이 접근성 설정에 어떻게 반응하는지 미리 볼 수 있습니다.

00:16:11.000 --> 00:16:16.000
루크가 전에 언급했듯이, 캔버스 하단 바에는 완전히 새로운 접근성 옵션이 있다.

00:16:16.000 --> 00:16:22.000
접근성 버튼을 클릭하면 인터페이스 빌더에서 조정할 수 있는 다양한 설정을 보여주는 팝오버가 나타납니다.

00:16:22.000 --> 00:16:27.000
일부 설정은 내 장면에서 텍스트 크기, 프레임 값 및 색상을 변경할 수 있습니다.

00:16:27.000 --> 00:16:33.000
이제 내 캔버스에서 이러한 설정을 활성화하고 미리 보고 내 견해가 의도한 대로 반응하는지 확인할 수 있습니다.

00:16:33.000 --> 00:16:39.000
좋아요, 설명 라벨로 돌아가서 더 큰 유형 크기에서 잘 작동하는지 확인해 봅시다.

00:16:39.000 --> 00:16:49.000
이렇게 하려면, 접근성 팝오버를 열고, 설정을 활성화하고, 동적 유형 슬라이더를 이동합니다.

00:16:49.000 --> 00:16:53.000
설명 라벨이 이제 보기의 범위를 벗어났다는 것을 주목하세요.

00:16:53.000 --> 00:17:00.000
제약 팝오버를 열고 라벨에 후행 제약 조건을 추가하여 이 문제를 해결할 수 있습니다.

00:17:00.000 --> 00:17:07.000
또한 속성 관리자에서 라벨의 줄 수 속성을 변경하고 0으로 설정해야 합니다.

00:17:07.000 --> 00:17:10.000
이것은 라벨을 필요한 만큼의 줄로 감싸게 한다.

00:17:10.000 --> 00:17:15.000
이러한 변화와 함께, 내 라벨은 더 이상 잘린 것이 없고 텍스트에 맞게 커진다.

00:17:15.000 --> 00:17:25.000
동적 유형 슬라이더를 다시 드래그하면, 설명 라벨이 이제 모든 유형 크기에 잘 맞는다는 것을 알 수 있습니다.

00:17:25.000 --> 00:17:36.000
디자인 시간에 접근성 설정을 미리 볼 수 있는 것은 iOS 접근성 설정에 대한 보기를 조정할 때 더 빠르게 반복하고 인터페이스 빌더 내에 머물 수 있기 때문에 정말 강력합니다.

00:17:36.000 --> 00:17:43.000
이제 우리가 그 모든 변경 사항을 만들었으니, 시뮬레이터에서 실행되는 앱을 확인해 봅시다.

00:17:43.000 --> 00:17:50.000
Amenities Table View의 셀은 우리가 원하는 새로운 레이아웃을 제공하는 Table View Cell 콘텐츠 구성 스타일 중 하나를 사용하고 있습니다.

00:17:50.000 --> 00:17:58.000
셀에는 계층적 렌더링 모드를 사용하도록 구성한 기호가 있어 기호의 기본 요소를 더 두드러지게 만듭니다.

00:17:58.000 --> 00:18:04.000
메뉴 항목 세부 정보 보기를 클릭하면, 설명 라벨이 여기에 잘 어울립니다.

00:18:04.000 --> 00:18:10.000
요약하자면, 우리는 더 컴팩트한 장치 바를 둘러보고 개요 보기를 개선하는 것으로 시작했습니다.

00:18:10.000 --> 00:18:15.000
우리는 강력한 새로운 버튼 스타일 시스템을 사용하여 앱의 버튼을 사용자 정의할 수 있는 방법을 살펴보았다.

00:18:15.000 --> 00:18:25.000
우리는 iOS와 Mac Catalyst 모두에 팝업 버튼을 채택하는 방법과 콘텐츠 구성 스타일을 사용하여 테이블 뷰 셀에 새로운 레이아웃을 빠르게 제공하는 방법을 검토했습니다.

00:18:25.000 --> 00:18:31.000
당신의 기호는 또한 새로운 렌더링 모드로 훨씬 더 많은 색상과 강조를 얻을 수 있습니다.

00:18:31.000 --> 00:18:44.000
마지막으로, 우리는 또한 디자인 시간에 접근성 설정을 미리 보는 것이 어떻게 앱의 보기가 사용 가능한 많은 iOS 접근성 설정에 대해 의도한 대로 작동하도록 훨씬 쉽게 할 수 있는지 검토했습니다.

00:18:44.000 --> 00:18:53.000
우리는 한 줄의 코드를 작성하지 않고 이러한 모든 변경을 했으며, 앱을 돋보이게 하는 것에 더 많은 시간을 할애할 수 있습니다.

00:18:53.000 --> 00:18:59.000
오늘 이야기한 모든 도구를 사용하여 앱을 새로 고침, 스타일화 및 현대화하도록 초대합니다.

00:18:59.000 --> 00:19:05.000
그리고 "UIKit 버튼 시스템 만나기"와 "SF 심볼의 새로운 기능" 비디오를 꼭 확인하세요.

00:19:05.000 --> 00:19:09.000
시청해 주셔서 감사합니다, 그리고 멋진 WWDC21을 보내세요.

00:19:09.000 --> 23:59:59.000
[타격적인 음악].

