WEBVTT

00:00:00.000 --> 00:00:05.000
♪ 베이스 음악 연주 ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:14.000
데이비드 헤이워드: 안녕하세요, 제 이름은 데이비드 헤이워드이고, 저는 코어 이미지 팀의 엔지니어입니다.

00:00:14.000 --> 00:00:28.000
오늘, 제 동료 Tuomas Viitanen, Matt Dickoff와 저는 ProRAW 이미지 형식에 대해 알아야 할 모든 것과 응용 프로그램에 대한 지원을 추가하는 방법을 보여주는 자세한 프레젠테이션을 할 것입니다.

00:00:28.000 --> 00:00:30.000
이것이 우리가 오늘 논의할 것입니다.

00:00:30.000 --> 00:00:34.000
먼저, 나는 무엇이 ProRAW 파일을 구성하는지 설명할 것이다.

00:00:34.000 --> 00:00:45.000
다음으로, 우리는 이 파일들을 캡처하는 방법, 사진 라이브러리에 저장하는 방법, 그리고 그것들을 편집하고 표시하는 방법에 대해 논의할 것입니다.

00:00:45.000 --> 00:00:48.000
시작하자, ProRAW가 뭐야?

00:00:48.000 --> 00:00:58.000
얼마 동안, Apple 장치는 이미지 신호 프로세서를 완전히 활용하여 표시할 준비가 된 아름다운 HEIC 또는 JPEG 이미지를 캡처할 수 있었습니다.

00:00:58.000 --> 00:01:07.000
그런 다음 iOS 10부터, 우리는 바이엘 패턴 RAW 센서 데이터를 캡처하고 DNG 파일에 저장하는 것을 지원했습니다.

00:01:07.000 --> 00:01:16.000
이 두 가지 접근 방식의 차이점과 장점은 "iOS 사진의 발전"이라는 제목의 WWDC 2016 세션에서 잘 설명되었다.

00:01:16.000 --> 00:01:21.000
그 프레젠테이션은 두 형식을 설명하기 위해 훌륭한 비유를 사용했다.

00:01:21.000 --> 00:01:27.000
가공된 HEIC 또는 JPEG는 빵집에 가서 다층 케이크를 주문하는 것과 같다.

00:01:27.000 --> 00:01:33.000
반면 바이엘 패턴 RAW 파일은 식료품점에 가서 케이크를 만들기 위해 원료를 얻는 것과 같다.

00:01:33.000 --> 00:01:39.000
처리된 HEIC 또는 JPEG의 장점은 Apple이 구운 최종 이미지를 얻을 수 있다는 것입니다.

00:01:39.000 --> 00:01:49.000
스마트 HDR, 딥 퓨전 또는 야간 모드를 사용하여 여러 캡처 프레임을 융합하여 만들어졌기 때문에 디스플레이가 빠르고 품질이 좋습니다.

00:01:49.000 --> 00:01:54.000
또한, 고급 손실 압축을 사용하기 때문에 파일 크기가 작습니다.

00:01:54.000 --> 00:02:00.000
바이엘 RAW의 장점은 편집에 훨씬 더 큰 유연성을 가진 이미지를 얻을 수 있다는 것입니다.

00:02:00.000 --> 00:02:05.000
그것은 손실 압축을 사용하여 저장되지 않았으며, 더 많은 정밀도를 가지고 있다.

00:02:05.000 --> 00:02:12.000
ProRAW의 목표는 둘 다 최고의 기능을 갖춘 이미지 형식을 확립하는 것이었다.

00:02:12.000 --> 00:02:18.000
ProRAW의 장점은 HEIC와 비슷하지만 무손실 압축을 사용한다는 것이다.

00:02:18.000 --> 00:02:25.000
또한, 장면에 따라, 그것은 다중 노출에서 융합되므로, 편집을 위한 훌륭한 다이내믹 레인지를 가지고 있다.

00:02:25.000 --> 00:02:31.000
그것들은 저소음이고 이미 분리되어 있기 때문에, 그것들은 상당히 빠르게 표시할 수 있다.

00:02:31.000 --> 00:02:40.000
ProRAW 형식은 호환성, 품질 및 외관의 세 가지 속성을 극대화하도록 설계되었습니다.

00:02:40.000 --> 00:02:43.000
이것들 각각에 대해 좀 더 자세히 논의해 봅시다.

00:02:43.000 --> 00:02:50.000
호환성을 보장하기 위해, ProRAW 파일은 표준 Adobe DNG 파일에 포함되어 있습니다.

00:02:50.000 --> 00:02:59.000
선형화된 DNG 파일 형식은 사진, 라이트룸과 같은 어도비 앱 등과 같은 애플 앱에서 지원됩니다.

00:02:59.000 --> 00:03:05.000
많은 앱은 시스템 프레임워크, ImageIO 및 Core Image를 통해 자동으로 지원을 받습니다.

00:03:05.000 --> 00:03:10.000
이전 버전의 iOS와 macOS도 형식에 대한 기본적인 지원을 제공합니다.

00:03:10.000 --> 00:03:17.000
그리고 파일이 전체 해상도, JPEG 품질의 사전 렌더링된 미리보기를 포함할 수 있다는 것도 언급할 가치가 있다.

00:03:17.000 --> 00:03:27.000
카메라 앱으로 캡처한 모든 ProRAW에는 ProRAW 모드가 활성화되지 않은 경우 이미지와 동일하게 보이는 미리보기가 포함됩니다.

00:03:27.000 --> 00:03:30.000
ProRAW 파일의 품질은 꽤 인상적이다.

00:03:30.000 --> 00:03:53.000
DNG의 픽셀은 장면 참조 및 선형화 가능하며, 이미지 융합, 무손실 압축 12비트 RGB와 결합된 다중 데모세스 노출에서 생성될 수 있습니다. 그러나 우리는 적응형 컴판딩 곡선을 통해 이러한 비트를 생성하므로 최대 14정거트의 다이내믹 레인지를 달성할 수 있습니다.

00:03:53.000 --> 00:04:02.000
결과 파일 크기는 10메가바이트에서 40메가바이트까지 다양할 수 있지만, 그 크기는 각 사진의 고유한 장면에 따라 확장될 것이다.

00:04:02.000 --> 00:04:05.000
애플은 이미지의 품질을 조정하기 위해 많은 노력을 기울이고 있다.

00:04:05.000 --> 00:04:11.000
ProRAW 이미지는 HEIC 및 JPEG의 모양과 일치하는 기본 모양을 가지고 있습니다.

00:04:11.000 --> 00:04:15.000
이것은 DNG 파일에 특별한 태그를 삽입함으로써 달성된다.

00:04:15.000 --> 00:04:23.000
이 태그는 DNG 사양에 문서화되어 있으며 각 이미지의 기본 모양을 렌더링하는 방법에 대한 레시피를 제공합니다.

00:04:23.000 --> 00:04:31.000
적용된 첫 번째 태그는 12비트 저장된 데이터를 선형 장면 값으로 디컴폴드하는 LinearizationTable이다.

00:04:31.000 --> 00:04:38.000
ProRAW 이미지가 장면의 동적 범위에 적응하기 때문에 BaselineExposure 태그를 사용합니다.

00:04:38.000 --> 00:04:45.000
BaselineSharpness 태그를 사용하면 기본적으로 얼마나 많은 가장자리 샤프닝을 적용할지 지정할 수 있습니다.

00:04:45.000 --> 00:04:55.000
DNG 1.6 사양의 새로운 ProfileGainTableMap 태그를 사용하면 밝고 어두운 영역을 조정하는 방법을 설명할 수 있습니다.

00:04:55.000 --> 00:05:00.000
마지막으로, 출력 글로벌 톤 곡선을 지정하는 ProfileToneCurve입니다.

00:05:00.000 --> 00:05:03.000
이 모든 태그는 각 이미지마다 고유합니다.

00:05:03.000 --> 00:05:08.000
그들은 케이크가 아닌 레시피를 제공하기 때문에, 이미지는 매우 편집 가능한 상태로 남아 있다.

00:05:08.000 --> 00:05:12.000
예를 들어, 기본 선명도 또는 톤 곡선은 언제든지 변경할 수 있습니다.

00:05:12.000 --> 00:05:21.000
마지막으로, 현장에 있을 때, 우리는 사람, 피부, 하늘과 같은 지역을 위해 ProRAW에 시맨틱 마스크를 저장합니다.

00:05:21.000 --> 00:05:27.000
이제 ProRAW를 구성하는 것이 무엇인지 알았으니, 저는 그들을 포착하는 방법을 설명할 Tuomas를 소개하고 싶습니다.

00:05:27.000 --> 00:05:29.000
투오마스 비이타넨: 고마워, 데이비드.

00:05:29.000 --> 00:05:31.000
제 이름은 투오마스 비이탄입니다.

00:05:31.000 --> 00:05:38.000
저는 카메라 소프트웨어 팀의 엔지니어이며, 애플리케이션으로 Apple ProRAW를 캡처하는 방법을 안내해 드리겠습니다.

00:05:38.000 --> 00:05:43.000
AVFoundation Capture API는 iOS 및 MacOS에서 카메라에 대한 액세스를 제공합니다.

00:05:43.000 --> 00:05:49.000
그것들을 사용하면 라이브 미리보기와 비디오를 스트리밍하고, 사진을 캡처하고, 영화를 녹화할 수 있습니다.

00:05:49.000 --> 00:05:55.000
그리고 최근 추가로, 우리는 새로운 Apple ProRAW DNG 형식으로 사진을 캡처하기 위한 지원을 추가했습니다.

00:05:55.000 --> 00:06:12.000
AVFoundation Capture API의 기본 사용에 대한 좋은 정보 출처는 AVCapture 사진 출력과 AVCam 샘플 코드를 사용하는 방법을 설명하는 WWDC 2016의 iOS 사진 토크의 발전입니다.

00:06:12.000 --> 00:06:16.000
다음으로, 우리는 Apple ProRAW 캡처를 자세히 살펴볼 것입니다.

00:06:16.000 --> 00:06:21.000
하지만 먼저, Apple ProRAW가 지원되는 곳을 빠르게 살펴봅시다.

00:06:21.000 --> 00:06:26.000
그것을 위한 좋은 출발점은 기존 바이엘 RAW 지원과 비교하는 것이다.

00:06:26.000 --> 00:06:31.000
바이엘 RAW는 iOS 10에 도입되었으며 다양한 장치에서 지원됩니다.

00:06:31.000 --> 00:06:40.000
Apple ProRAW는 iOS 14.3에 도입되었으며 iPhone 12 Pro 및 iPhone 12 Pro Max에서 지원됩니다.

00:06:40.000 --> 00:06:47.000
Apple의 자체 카메라 애플리케이션은 딥 퓨전 및 야간 모드와 같은 모든 퓨전 캡처와 플래시 캡처와 함께 Apple ProRAW 캡처를 지원합니다.

00:06:47.000 --> 00:06:58.000
Apple ProRAW를 사용하면 사진 품질 우선 순위를 .balanced 및 .quality로 설정할 수 있으므로 RAW 캡처에 대한 Apple 이미지 융합의 이점을 얻을 수 있습니다.

00:06:58.000 --> 00:07:04.000
바이엘 RAW는 와이드 및 텔레와 같은 단일 카메라 AVCaptureDevices에서만 지원됩니다.

00:07:04.000 --> 00:07:13.000
Apple ProRAW는 줌할 때 카메라 간에 원활하게 전환하는 듀얼 와이드, 듀얼 및 트리플 카메라 장치를 포함한 모든 장치에서 지원됩니다.

00:07:13.000 --> 00:07:21.000
Bayer RAW와 마찬가지로, Apple ProRAW는 깊이 데이터 전달이나 콘텐츠 인식 왜곡 보정을 지원하지 않습니다.

00:07:21.000 --> 00:07:31.000
라이브 포토 캡처는 바이엘 RAW에서만 지원되지만 초상화 효과 매트 및 시맨틱 세분화 스킨과 스카이 매트는 ProRAW에서만 지원됩니다.

00:07:31.000 --> 00:07:35.000
그래서, Apple ProRAW를 캡처하는 방법을 살펴봅시다.

00:07:35.000 --> 00:07:49.000
우리가 다루는 항목은 캡처 장치와 캡처 세션을 설정하는 방법, 사진 출력을 설정하는 방법, ProRAW 캡처를 위한 사진 설정을 준비하는 방법, 그리고 ProRAW 사진을 캡처한 후 어떤 옵션이 있는지입니다.

00:07:49.000 --> 00:07:53.000
세션 설정부터 시작합시다.

00:07:53.000 --> 00:07:58.000
Apple ProRAW는 최고 품질의 사진을 지원하는 형식에서만 지원됩니다.

00:07:58.000 --> 00:08:02.000
캡처 sessionPreset을 .photo로 설정하면 그것을 얻을 수 있습니다.

00:08:02.000 --> 00:08:09.000
또는 장치 형식을 수동으로 선택하려면, 최고 품질의 스틸을 지원하는 형식을 찾을 수 있습니다.

00:08:09.000 --> 00:08:15.000
이것은 더 넓은 형식 세트에서 지원되는 고품질 스틸과 다르다는 점에 유의하십시오.

00:08:15.000 --> 00:08:21.000
그런 다음 원하는 형식을 장치의 activeFormat로 구성하기만 하면 됩니다.

00:08:21.000 --> 00:08:32.000
이 예와 나중에, 저는 단순히 지원되는 항목 목록의 첫 번째 인덱스를 사용하고 있지만, 이것을 응용 프로그램에 가장 적합한 기준에 기반한 선택으로 대체하고 싶을 것입니다.

00:08:32.000 --> 00:08:37.000
이제, ProRAW 캡처를 위한 사진 출력을 어떻게 구성할 수 있는지 봅시다.

00:08:37.000 --> 00:08:41.000
먼저, photoOutput에서 ProRAW를 활성화해야 합니다.

00:08:41.000 --> 00:08:48.000
그렇지 않으면 파이프라인 재구성이 길기 때문에 세션을 시작하기 전에 이미 그렇게 해야 합니다.

00:08:48.000 --> 00:08:58.000
이 속성을 true로 설정하면 ProRAW 캡처를 위한 캡처 파이프라인이 준비되고, 지원되는 RAW 사진 픽셀 형식 유형 목록에 ProRAW 픽셀 형식을 추가합니다.

00:08:58.000 --> 00:09:07.000
원한다면, 캡처의 속도나 품질을 선호하는지, 아니면 둘 사이의 균형을 선호하는지 여부를 캡처 파이프라인에 표시할 수도 있습니다.

00:09:07.000 --> 00:09:17.000
캡처된 사진에 대한 사진 품질 우선 순위 지정의 효과에 대한 자세한 정보는 비디오 포맷 토크를 사용하여 캡처 고품질 사진에서 찾을 수 있습니다.

00:09:17.000 --> 00:09:20.000
그리고 다음으로, 우리는 당신이 캡처를 어떻게 준비할 수 있는지 살펴볼 것입니다.

00:09:20.000 --> 00:09:26.000
ProRAW 캡처를 위한 사진 설정을 만들려면, 올바른 RAW 픽셀 형식을 선택해야 합니다.

00:09:26.000 --> 00:09:35.000
지원되는 바이엘 RAW 형식을 제공하는 동일한 사용 가능한 RawPhoto PixelFormatTypes에서 지원되는 RAW 픽셀 형식을 얻을 수 있습니다.

00:09:35.000 --> 00:09:44.000
photoOutput의 새로운 isAppleProRAWPixelFormat 클래스 방법을 사용하여 ProRAW 형식과 BayerRAW 형식을 구별할 수 있습니다.

00:09:44.000 --> 00:09:52.000
ProRAW 픽셀 형식의 예는 16비트 풀 레인지 RGBA 픽셀 형식인 l64r입니다.

00:09:52.000 --> 00:09:59.000
참고로, isBayerRAWPixelFormat 클래스 메서드를 사용하여 형식이 바이엘 RAW 형식인지 여부를 쿼리할 수도 있습니다.

00:09:59.000 --> 00:10:08.000
다음으로, 우리는 Apple ProRAW를 캡처하기 위한 몇 가지 옵션과 선택적으로 완전히 렌더링된 프로세스 사진을 살펴볼 것입니다.

00:10:08.000 --> 00:10:13.000
ProRAW를 캡처하는 첫 번째이자 가장 간단한 옵션은 ProRAW 사진만 요청하는 것입니다.

00:10:13.000 --> 00:10:19.000
그렇게 하려면, 사진 설정을 만들 때 rawPixelFormatType을 지정하기만 하면 됩니다.

00:10:19.000 --> 00:10:25.000
이것은 매트가 나중에 보여줄 것처럼 간단하게 작업하고 사진 라이브러리에 저장할 수 있는 단일 자산을 제공합니다.

00:10:25.000 --> 00:10:36.000
사진 설정에 대한 처리된 포맷을 제공하여 바이엘 RAW로 할 수 있는 것과 유사한 한 쌍의 처리된 사진과 ProRAW를 캡처할 수도 있습니다.

00:10:36.000 --> 00:10:42.000
하지만 이를 위해서는 여러 자산으로 작업해야 하며, 사진 라이브러리에서 그것들을 추적하는 것도 더 어렵습니다.

00:10:42.000 --> 00:10:52.000
운 좋게도, Apple ProRAW는 최대 전체 해상도의 JPEG 이미지를 썸네일로 지원하며, 많은 경우 이전 두 가지 옵션 중 최고를 제공합니다.

00:10:52.000 --> 00:11:01.000
썸네일을 요청하려면, availableRawEmbedded ThumbnailPhotoCodecTypes에서 원하는 형식을 선택하고 원하는 썸네일 크기를 지정할 수 있습니다.

00:11:01.000 --> 00:11:05.000
이제 ProRAW 사진을 찍을 준비가 거의 다 되었습니다.

00:11:05.000 --> 00:11:11.000
하지만 그 전에, 원한다면, 이 캡처에 대한 사진 품질의 우선 순위를 지정할 수 있습니다.

00:11:11.000 --> 00:11:20.000
여기서 지정한 값은 photoOutput에서 이전에 지정한 maxPhotoQualityPrioritization보다 작거나 같아야 합니다.

00:11:20.000 --> 00:11:29.000
캡처 후 고객에게 빠르게 보여줄 무언가를 갖고 싶다면 디스플레이 크기의 미리보기 이미지를 요청할 수도 있습니다.

00:11:29.000 --> 00:11:36.000
그런 다음 다른 모든 스틸 캡처에도 사용되는 동일한 capturePhoto 방법을 사용하여 ProRAW 사진을 캡처할 수 있습니다.

00:11:36.000 --> 00:11:44.000
이제 스틸 캡처가 진행 중이 되었으니, 요청된 사진이 준비되면 무엇을 할 수 있는지 살펴봅시다.

00:11:44.000 --> 00:11:53.000
사진이 완전히 처리되면, didFinishProcessingPhoto 대리인은 ProRAW 사진을 나타내는 AVCapturePhoto로 호출됩니다.

00:11:53.000 --> 00:12:03.000
캡처를 위한 미리보기 이미지를 요청한 경우, 이제 압축되지 않은 미리보기 이미지 또는 디스플레이에 표시할 CGImageRepresentation이 있는 픽셀 버퍼를 얻을 수 있습니다.

00:12:03.000 --> 00:12:11.000
그리고 ProRAW와 함께 처리된 사진을 요청한 경우, didFinishProcessingPhoto 대리인이 두 번 호출됩니다.

00:12:11.000 --> 00:12:18.000
받은 AVCapturePhoto의 isRawPhoto 속성을 사용하여 ProRAW와 처리된 사진을 구별할 수 있습니다.

00:12:18.000 --> 00:12:26.000
그런 다음 ProRAW에 대한 fileDataRepresentation을 요청하여 DNG를 사진 라이브러리에 저장할 수 있습니다.

00:12:26.000 --> 00:12:32.000
또는 선택적으로, 작업하고 싶다면 RAW 픽셀 데이터로 픽셀 버퍼를 받으세요.

00:12:32.000 --> 00:12:38.000
데이비드가 앞서 언급했듯이, ProRAW DNG는 시맨틱 세분화 매트를 포함할 수 있다.

00:12:38.000 --> 00:12:42.000
이 매트의 포함은 자동이며 장면에 따라 다릅니다.

00:12:42.000 --> 00:12:51.000
매트는 현재 AVFoundation Capture API를 통해 사용할 수 없지만, David가 나중에 보여줄 것처럼 Core Image 및 ImageIO API를 통해 검색할 수 있습니다.

00:12:51.000 --> 00:12:56.000
그리고 마지막으로, 우리는 ProRAW DNG로 가지고 있는 몇 가지 사용자 지정 옵션을 살펴볼 것입니다.

00:12:56.000 --> 00:13:03.000
AVCapturePhotoFileData RepresentationCustomizer 위임 방법을 구현하여 ProRAW를 사용자 정의할 수 있습니다.

00:13:03.000 --> 00:13:13.000
replacementAppleProRAW CompressionSettings를 구현하면 ProRAW 사진의 압축 비트 깊이와 품질을 변경할 수 있습니다.

00:13:13.000 --> 00:13:18.000
Apple ProRAW는 기본적으로 컴판딩 곡선이 있는 12비트를 사용하여 무손실로 인코딩됩니다.

00:13:18.000 --> 00:13:28.000
품질 수준을 1로 유지하고 커스터마이저로 원하는 비트 깊이를 제공하여 무손실 압축 ProRAW의 비트 깊이를 변경할 수 있습니다.

00:13:28.000 --> 00:13:32.000
이것은 저장 공간을 절약하지만 여전히 ProRAW 사진의 높은 품질을 유지합니다.

00:13:32.000 --> 00:13:42.000
손실 압축을 선호하는 경우, 품질 수준을 1 이하로 설정할 수 있으며, 이 경우 ProRAW는 8비트 손실 압축을 사용하여 자동으로 압축됩니다.

00:13:42.000 --> 00:13:47.000
이것은 당신에게 작은 파일 크기를 제공하지만, ProRAW 사진의 품질에 분명한 영향을 미칩니다.

00:13:47.000 --> 00:13:56.000
이제 커스터마이저를 구현했으므로, didFinishProcessingPhoto 대리인에서 캡처된 ProRAW DNG에 대한 사용자 지정을 요청할 수 있습니다.

00:13:56.000 --> 00:14:05.000
커스터마이저를 만들고 fileDataRepresentation을 위해 제공함으로써, 방금 제공한 압축 설정으로 사용자 지정 ProRAW를 다시 받을 수 있습니다.

00:14:05.000 --> 00:14:10.000
그것은 AVFoundation Capture API를 사용한 Apple ProRAW 캡처에 대한 소개였다.

00:14:10.000 --> 00:14:15.000
Apple ProRAW와 사진 라이브러리에 대해 더 자세히 알려줄 Matt에게 넘겨줄게.

00:14:15.000 --> 00:14:16.000
매트?

00:14:16.000 --> 00:14:18.000
맷 디코프: 고마워, 투오마스! 안녕!

00:14:18.000 --> 00:14:21.000
제 이름은 맷 디코프이고, 저는 사진 팀의 엔지니어입니다.

00:14:21.000 --> 00:14:26.000
방금 캡처한 ProRAW 파일을 사진 라이브러리에 완전한 자산으로 저장하는 방법을 안내해 드리겠습니다.

00:14:26.000 --> 00:14:31.000
그런 다음, 우리는 사진 라이브러리에 이미 존재하는 RAW를 가져오는 방법을 살펴볼 것입니다.

00:14:31.000 --> 00:14:36.000
PhotoKit은 Apple 플랫폼의 사진 라이브러리와 상호 작용하는 데 사용되는 한 쌍의 프레임워크입니다.

00:14:36.000 --> 00:14:41.000
그것은 이 릴리스에서 처음 도입되었고 그 이후로 개선과 추가를 보았다.

00:14:41.000 --> 00:14:45.000
특히, 그것은 Apple ProRAW와 같은 RAW 이미지 형식을 지원합니다.

00:14:45.000 --> 00:14:50.000
오늘 저는 사진 라이브러리에서 RAW를 다루는 특정 API만 다룰 것입니다.

00:14:50.000 --> 00:14:57.000
이 프레젠테이션 후에도 PhotoKit에 대해 여전히 질문이 있다면, 온라인 개발자 문서를 살펴보는 것이 좋습니다.

00:14:57.000 --> 00:15:02.000
새로운 자산을 저장하려면, 공유 PHPhotoLibrary에서 변경을 수행해야 합니다.

00:15:02.000 --> 00:15:13.000
모든 자산을 저장하는 것과 마찬가지로, 우리가 할 변화는 PHAssetCreationRequest이며, 우리는 이 자산에 Apple ProRAW 파일을 기본 .photo PHAssetResource로 추가할 것입니다.

00:15:13.000 --> 00:15:16.000
그래서 그 코드가 어떻게 생겼는지 봅시다.

00:15:16.000 --> 00:15:21.000
먼저, 우리는 공유 사진 라이브러리를 변경하는 것으로 시작합니다.

00:15:21.000 --> 00:15:28.000
우리는 단순히 PHAssetCreationRequest를 만든 다음 Apple ProRAW 파일을 기본 사진 리소스로 추가할 것입니다.

00:15:28.000 --> 00:15:30.000
그리고 그게 다야!

00:15:30.000 --> 00:15:33.000
애플리케이션이 적합하다고 생각하는 대로 성공과 오류를 처리하세요.

00:15:33.000 --> 00:15:42.000
이제 사진 라이브러리에 자산을 추가하는 방법을 알았으니, 사용자가 이미 라이브러리에 가지고 있을 수 있는 RAW 자산을 포함하여 어떻게 다시 가져올 수 있는지 살펴봅시다.

00:15:42.000 --> 00:15:50.000
iOS 15에서 새로운 PHAssetCollectionSubtype인 .smartAlbumRAW를 제공했다고 말하게 되어 기쁩니다.

00:15:50.000 --> 00:15:56.000
이 스마트 앨범을 사용하면 RAW 리소스가 있는 사진 라이브러리의 모든 자산이 포함된 컬렉션을 쉽게 얻을 수 있습니다.

00:15:56.000 --> 00:16:00.000
이 앨범은 Apple Photos 앱에서 볼 수 있는 것과 동일한 RAW 앨범입니다.

00:16:00.000 --> 00:16:08.000
이제 RAW 자원이 있는 PHAssets가 있으니, 실제로 그 자원을 얻기 위해 무엇이 필요한지 살펴봅시다.

00:16:08.000 --> 00:16:12.000
먼저, 우리는 PHAsset에 대한 모든 PHAssetResources를 얻고 싶을 것이다.

00:16:12.000 --> 00:16:19.000
다음으로, 우리는 두 가지 유형의 리소스를 찾을 것입니다: 이전에 이야기한 .photo와 추가로 .alternatePhoto.

00:16:19.000 --> 00:16:23.000
저는 잠시 시간을 내어 .alternatePhoto가 무엇인지 설명하고 싶습니다.

00:16:23.000 --> 00:16:30.000
일부 사진 라이브러리에는 일부 DSLR 카메라가 사용하는 오래된 RAW와 JPEG 저장 모델을 따르는 자산이 포함될 것이다.

00:16:30.000 --> 00:16:39.000
이를 위해서는 RAW와 JPEG를 두 개의 별개의 리소스로 저장해야 합니다. JPEG를 사진으로, RAW를 대체 사진으로 저장해야 합니다.

00:16:39.000 --> 00:16:46.000
이것은 사진 라이브러리의 파일 풋프린트 증가, 휴대성 감소, 그리고 종종 혼란스러운 사용자 경험으로 이어진다.

00:16:46.000 --> 00:16:48.000
이 모델은 Apple ProRAW에 권장되지 않습니다.

00:16:48.000 --> 00:16:57.000
ProRAW 파일을 사진 라이브러리에 저장하려는 경우, 캡처 설정을 사용하여 파일에 전체 크기의 JPEG 미리보기를 삽입해야 합니다.

00:16:57.000 --> 00:16:59.000
이제, 우리의 자원으로 돌아가.

00:16:59.000 --> 00:17:06.000
우리는 리소스의 uniformTypeIdentifier를 확인하여 우리가 관심 있는 RAW 유형과 일치하는지 확인할 것입니다.

00:17:06.000 --> 00:17:13.000
그리고 마지막으로, RAW 리소스가 생기면, PHAssetResourceManager를 사용하여 실제 데이터를 검색할 것입니다.

00:17:13.000 --> 00:17:16.000
이제 코드에서 그것을 살펴봅시다.

00:17:16.000 --> 00:17:34.000
먼저, 자산의 모든 PHAssetResources를 반복하고, .photo 또는 .alternatePhoto 유형을 찾고, RAW 이미지 UTType을 준수하는지 확인하고, 마지막으로 PHAssetResourceManager를 사용하여 해당 리소스에 대한 데이터를 요청합니다.

00:17:34.000 --> 00:17:35.000
그리고 그게 다야!

00:17:35.000 --> 00:17:41.000
이제 PhotoKit을 사용하여 사진 라이브러리에서 RAW 리소스로 자산을 저장하고 검색하는 방법을 알게 되었습니다.

00:17:41.000 --> 00:17:47.000
이제 나는 그것을 Apple ProRAW 이미지를 편집하고 표시하는 가장 좋은 방법에 대해 이야기할 David에게 돌려줄 것이다.

00:17:47.000 --> 00:17:48.000
데이비드: 고마워, 맷.

00:17:48.000 --> 00:17:56.000
오늘 우리 이야기의 마지막 섹션은 Core Image 프레임워크를 사용하여 ProRAW 이미지를 편집하고 표시하는 방법에 관한 것입니다.

00:17:56.000 --> 00:18:23.000
ProRAW 파일에서 CIImages를 만드는 방법, 가장 일반적인 사용자 조정을 적용하는 방법, 선형, 장면 참조 값을 얻기 위해 기본 모양을 끄는 방법, HEIC와 같은 출력 참조 형식에 대한 편집을 렌더링하는 방법, 그리고 마지막으로, 확장 다이내믹 레인지 디스플레이로 Mac에 ProRAW를 표시하는 방법을 설명할 것입니다.

00:18:23.000 --> 00:18:34.000
ProRAW에서 미리보기 이미지를 얻는 것은 CGImageSourceCreateWithURL과 CGImageSourceCreate ThumbnailAtIndex API를 사용하여 가능합니다.

00:18:34.000 --> 00:18:41.000
iOS 15와 macOS 12의 새로운 기능, Core Image는 미리보기에 액세스할 수 있는 새로운 편의 API를 추가했습니다.

00:18:41.000 --> 00:18:52.000
사람, 피부, 하늘과 같은 의미론적 세분화 매트를 얻는 것은 CIImage를 초기화할 때 원하는 옵션 키를 전달함으로써 지원됩니다.

00:18:52.000 --> 00:18:59.000
이것 또한 선택적 무광택 이미지에 접근할 수 있는 새롭고 더 편리한 API가 있다.

00:18:59.000 --> 00:19:05.000
가장 중요한 것은, 당신의 애플리케이션은 기본 ProRAW 이미지를 얻고 싶어할 것입니다.

00:19:05.000 --> 00:19:14.000
애플리케이션이 기본 렌더링 모양을 보여주고 싶다면, URL이나 데이터에서 불변의 CIImage를 만들기만 하면 됩니다.

00:19:14.000 --> 00:19:22.000
그러나, 애플리케이션이 ProRAW의 전체 편집 가능성을 잠금 해제하려면, URL에서 CIFilter를 만드세요.

00:19:22.000 --> 00:19:29.000
출력 이미지에 대해 필터를 요청하면, 기본 모양이 있는 CIImage를 얻을 수 있습니다.

00:19:29.000 --> 00:19:34.000
이 API의 주요 장점은 필터를 쉽게 수정할 수 있다는 것이다.

00:19:34.000 --> 00:19:41.000
RAW CIFilter에는 애플리케이션이 새로운 출력 이미지를 생성하기 위해 변경할 수 있는 몇 가지 입력이 있습니다.

00:19:41.000 --> 00:19:47.000
기본 코드 패턴은 문서화된 키 문자열 중 하나에 대한 값 객체를 설정하는 것입니다.

00:19:47.000 --> 00:19:52.000
하지만 이 setValue forKey API는 업데이트될 예정이었다.

00:19:52.000 --> 00:19:59.000
iOS 15와 macOS 12의 새로운 기능, 우리는 더 발견 가능하고 Swift 친화적인 API를 만들었습니다.

00:19:59.000 --> 00:20:07.000
새 API를 사용하려면, CIRAWFilter 인스턴스를 만든 다음 원하는 속성을 새 값으로 설정하세요.

00:20:07.000 --> 00:20:12.000
다음으로, 어떤 부동산을 바꾸고 싶은지 논의해 봅시다.

00:20:12.000 --> 00:20:17.000
ProRAW 이미지의 동적 범위를 감안할 때, 제공하는 가장 중요한 컨트롤 중 하나는 노출이다.

00:20:17.000 --> 00:20:20.000
이 값을 모든 플로트로 설정할 수 있습니다.

00:20:20.000 --> 00:20:28.000
예를 들어, 이미지를 두 배로 밝게 만들기 위해 양수 1로 설정하거나 음수 1로 설정하여 절반으로 밝게 만드세요.

00:20:28.000 --> 00:20:35.000
ProRAW는 선형 장면 참조 공간에서 편집되기 때문에, 이미지 화이트 밸런스를 조정하는 것이 더 효과적이다.

00:20:35.000 --> 00:20:43.000
장면 중립은 켈빈도의 온도 또는 x/y 색도 좌표로 지정할 수 있다.

00:20:43.000 --> 00:20:50.000
ProRAW 룩의 기본 선명도는 0에서 1까지 모든 값으로 조정할 수 있습니다.

00:20:50.000 --> 00:20:56.000
그리고 ProRAW 로컬 톤 맵의 강도는 0에서 1까지 모든 값으로 조정할 수 있습니다.

00:20:56.000 --> 00:21:02.000
로컬 톤 맵은 이미지의 각 영역이 자체적으로 최적화된 톤 곡선을 가질 수 있게 해준다.

00:21:02.000 --> 00:21:08.000
다음은 로컬 톤 맵 강도가 완전히 꺼진 ProRAW 이미지의 예입니다...

00:21:08.000 --> 00:21:10.000
그리고 절반의 힘으로...

00:21:10.000 --> 00:21:12.000
그리고 완전히 켜.

00:21:12.000 --> 00:21:23.000
이 이미지에서, 로컬 톤 곡선은 더 어두운 영역을 가져오고 더 밝은 영역을 끌어내려 표준 다이내림 범위 디스플레이에서 최상의 결과를 제공합니다.

00:21:23.000 --> 00:21:30.000
다음으로, 당신의 애플리케이션이 선형 장면 참조 데이터의 14정거트에 직접 접근할 수 있는 방법에 대해 논의해 봅시다.

00:21:30.000 --> 00:21:39.000
대부분의 사용자는 앞서 설명한 일반적인 조정을 선호할 것이지만, 선형 데이터에 대한 접근은 특정 애플리케이션 사례에 매우 유용할 수 있다.

00:21:39.000 --> 00:21:46.000
선형 이미지를 얻으려면, 이미지에 기본 모양을 적용하는 필터 입력을 끄기만 하면 됩니다.

00:21:46.000 --> 00:21:57.000
baselineExposure, exposureBias, boost 및 localToneMapAmount를 0으로 설정하고 outputImage를 얻기 전에 영역 매핑을 비활성화하십시오.

00:21:57.000 --> 00:22:05.000
linearRAWImage가 있으면, 다른 코어 이미지 필터에 대한 입력으로 사용하여 장면 참조 계산을 수행할 수 있습니다.

00:22:05.000 --> 00:22:12.000
예를 들어, 내장된 코어 이미지 히스토그램 필터를 사용하여 통계를 계산할 수 있습니다.

00:22:12.000 --> 00:22:16.000
또는 픽셀 데이터를 얻기 위해 선형 이미지를 렌더링하고 싶을 수도 있습니다.

00:22:16.000 --> 00:22:35.000
이렇게 하려면, RGBA-반부동 가변 데이터에 대한 CIRenderDestination을 만들고, 렌더링 대상에게 원하는 선형 colorSpace를 사용하도록 말한 다음, CIContext가 rawFilter의 출력 이미지를 렌더링하는 작업을 시작하도록 하세요.

00:22:35.000 --> 00:22:42.000
다음은 캡처된 선형 장면 참조 이미지와 비교하여 기본 모양을 가진 ProRAW의 예입니다.

00:22:42.000 --> 00:22:51.000
선형 이미지는 평평하고 노출이 부족해 보이지만, 여전히 장면에서 전체 및 클립되지 않은 14개의 스톱의 데이터를 포함하고 있다.

00:22:51.000 --> 00:23:00.000
이 한 쌍의 이미지는 또한 출력 참조 이미지와 장면 참조 이미지의 차이점에 대한 좋은 설명을 제공한다.

00:23:00.000 --> 00:23:07.000
출력 참조 기본 모양에서, 최대 루마를 가진 이미지의 영역은 왼쪽의 일몰에 있습니다.

00:23:07.000 --> 00:23:13.000
하지만 오른쪽에 있는 이 하늘 지역은 일몰만큼 80퍼센트 밝은 루마를 가지고 있다.

00:23:13.000 --> 00:23:20.000
기본 이미지는 멋져 보이지만, 루마 값은 장면의 현실을 나타내지 않는다.

00:23:20.000 --> 00:23:31.000
선형 장면 참조 이미지의 경우, 이미지 오른쪽의 하늘은 일몰의 광채의 12%에 불과한 최대 광채를 가지고 있으며, 이는 물리적으로 더 논리적이다.

00:23:31.000 --> 00:23:36.000
이것이 선형 장면 참조 이미지가 이미지 처리 및 분석에 매우 중요한 이유입니다.

00:23:36.000 --> 00:23:48.000
애플리케이션이 ProRAW CIFilter 속성을 변경한 후, 이미지를 HEIC 또는 JPEG와 같은 출력 참조 형식으로 저장할 수 있습니다.

00:23:48.000 --> 00:23:54.000
다음은 rawFilter 출력 이미지를 8비트 딥 HEIC 파일에 저장하는 방법의 예입니다.

00:23:54.000 --> 00:24:01.000
이 API를 사용하면 사용할 출력 colorSpace를 지정할 수 있지만, displayP3를 권장합니다.

00:24:01.000 --> 00:24:07.000
옵션 사전을 사용하여 시맨틱 마스크를 HEIC에 저장할 수도 있습니다.

00:24:07.000 --> 00:24:17.000
또한, ProRAW는 더 정밀하기 때문에, 이 새로운 Core Image API를 사용하여 10비트 딥 HEIC 파일에 저장하는 것을 고려할 수 있습니다.

00:24:17.000 --> 00:24:25.000
지금까지, 내가 설명한 모든 조정은 표준 다이내믹 레인지로 톤 매핑되고 영역 매핑된 출력 이미지를 생성합니다.

00:24:25.000 --> 00:24:28.000
이것은 일반적으로 "SDR"로 축약된다.

00:24:28.000 --> 00:24:38.000
제가 논의하고 싶은 다음 주제는 확장된 다이내믹 레인지 디스플레이에서 ProRAW 이미지의 다이내믹 레인지를 완전히 영광스럽게 제시하는 방법입니다.

00:24:38.000 --> 00:24:48.000
MacBook Pro에서 iMac, Pro Display XDR에 이르기까지 많은 Mac 디스플레이는 MetalKit View를 사용하여 EDR 콘텐츠를 표시할 수 있습니다.

00:24:48.000 --> 00:24:55.000
ProRAW CIImage를 표시하려면, 최상의 성능을 위해 MetalKit View 하위 클래스를 사용하는 것이 좋습니다.

00:24:55.000 --> 00:25:02.000
MetalKit View 하위 클래스는 뷰에 대한 CIContext와 MTLCommandQueue를 만들어야 합니다.

00:25:02.000 --> 00:25:11.000
MetalKit View에서 Core Image로 최고의 성능을 얻는 방법에 대한 중요한 세부 사항은 이 주제에 대한 작년 프레젠테이션을 검토하십시오.

00:25:11.000 --> 00:25:23.000
Mac 디스플레이가 EDR을 지원하는 경우, 보기의 colorPixelFormat을 rgba16Float로 설정하고 wantsExtendedDynamic RangeContent를 true로 설정할 수 있습니다.

00:25:23.000 --> 00:25:35.000
그런 다음, 뷰 서브클래스를 그릴 때가 되면, rawFilter.extended DynamicRangeAmount를 1로 설정하고 Core Image 컨텍스트에 outputImage를 렌더링하는 작업을 시작하라고 말하십시오.

00:25:35.000 --> 00:25:42.000
EDR 디스플레이에서 ProRAW 이미지를 보는 것은 완전히 감상하기 위해 직접 봐야 하는 것이다.

00:25:42.000 --> 00:25:45.000
하지만 그게 어떻게 생겼는지 대략적으로 해볼게.

00:25:45.000 --> 00:25:55.000
여기에 SDR 이미지가 표시되는 반면, 이것은 EDR에서 동일한 ProRAW 파일이 어떻게 느껴질지 보여줍니다.

00:25:55.000 --> 00:26:03.000
밝은 영역과 반사 하이라이트는 더 이상 톤 매핑에 의해 제한되지 않으므로, 완전한 영광으로 보일 것이다.

00:26:03.000 --> 00:26:07.000
이것으로 Apple ProRAW에 대한 우리의 프레젠테이션을 마칩니다.

00:26:07.000 --> 00:26:16.000
오늘 우리는 파일 형식의 디자인과 내용뿐만 아니라 이러한 이미지를 캡처, 저장 및 편집하는 방법에 대해 자세히 설명했습니다.

00:26:16.000 --> 00:26:21.000
저는 당신의 애플리케이션이 어떻게 이 이미지의 잠재력을 최대한 발휘할 수 있는지 보기를 기대합니다.

00:26:21.000 --> 23:59:59.000
♪

