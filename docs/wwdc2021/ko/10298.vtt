WEBVTT

00:00:02.000 --> 00:00:11.000
안녕하세요, 여러분!

00:00:11.000 --> 00:00:18.000
WWDC21 세션에 오신 것을 환영합니다, "스마트 홈 앱에 물질에 대한 지원을 추가하세요."

00:00:18.000 --> 00:00:20.000
저는 홈 엔지니어링의 셀리나입니다.

00:00:20.000 --> 00:00:29.000
오늘, 제 동료인 Chris, Sagar와 저는 Matter 지원을 위해 올해 추가한 흥미로운 기능을 안내해 드리겠습니다.

00:00:29.000 --> 00:00:43.000
월요일 기조 연설에서 언급했듯이, Matter는 모든 스마트 홈 액세서리가 원활하게 작동하도록 하기 위해 Apple과 다른 업계 리더들이 개발하고 있는 스마트 홈 액세서리의 새로운 표준이다.

00:00:43.000 --> 00:00:55.000
그것의 비전은 전 세계적으로 홈 오토메이션을 민주화하여 사람들이 스마트 홈을 짓기 시작한 다음 앞으로 몇 년 동안 계속 추가할 수 있도록 하는 것이다.

00:00:55.000 --> 00:01:12.000
Matter 프로토콜은 HomeKit을 포함한 입증된 기술을 활용하는 오픈 소스 노력으로 개발되어 가장 광범위한 양의 스마트 홈 장치를 지원한 다음 제조업체가 제품에 쉽게 통합할 수 있도록 합니다.

00:01:12.000 --> 00:01:27.000
Matter를 사용하여, 스마트 홈 액세서리 제조업체는 더 이상 여러 프로토콜을 병렬로 지원할 필요가 없으며, 제품을 만들고 지속적으로 지원하는 개발 노력을 진정으로 단순화합니다.

00:01:27.000 --> 00:01:40.000
또한 앱 개발자에게 독점 프로토콜을 만들고 유지할 부담 없이 고객을 위한 최고의 앱 경험을 개발하는 데 집중할 수 있는 기회를 제공합니다.

00:01:40.000 --> 00:01:54.000
액세서리에 대한 통합 프로토콜을 만들면, 고객은 스마트 홈의 편리함을 쉽게 즐길 수 있으며, 모두 함께 작동할 것이라는 것을 알고 자신 있게 제품을 집으로 가져올 수 있습니다.

00:01:54.000 --> 00:02:05.000
그것은 사람들이 상점에서 선택할 수 있는 더 많은 액세서리를 가능하게 할 것이며, 모든 건축업자들은 그것들을 가정에 표준으로 설치할 수 있을 것이다.

00:02:05.000 --> 00:02:14.000
이것들에 동기를 부여하여, 우리는 개발자들이 당신의 액세서리와 앱 개발에서 가장 빨리 Matter를 사용할 수 있기를 바랍니다.

00:02:14.000 --> 00:02:24.000
Matter에 대한 지원이 iOS, iPadOS 및 tvOS 15에서 개발자 미리보기로 제공된다는 것을 알려드리게 되어 기쁩니다.

00:02:24.000 --> 00:02:29.000
오늘 우리가 당신에게 소개하고 싶은 많은 훌륭한 기능들이 있습니다.

00:02:29.000 --> 00:02:36.000
무엇보다도, HomeKit을 통해 Matter 액세서리와 통합하는 방법에 대해 이야기해 봅시다.

00:02:36.000 --> 00:02:44.000
오늘날, HomeKit 액세서리 프로토콜을 구현하는 액세서리는 HomeKit 프레임워크를 통해 Apple Home과 통합됩니다.

00:02:44.000 --> 00:02:54.000
수년에 걸쳐, 우리는 HAP 액세서리의 완전한 제어와 관리를 제공하는 HomeKit 위에 훌륭한 기능을 구축했습니다.

00:02:54.000 --> 00:03:08.000
Matter 액세서리를 Apple Home과 통합하는 것을 살펴볼 때, 우리는 자연스럽게 Matter를 병렬 프로토콜로 지원하기 위해 HomeKit 프레임워크의 책임을 확장할 수 있다는 결론에 도달했습니다.

00:03:08.000 --> 00:03:20.000
건축학적으로, 이것은 HomeKit이 Matter 액세서리와 통신하기 위해 CHIP 프레임워크로 알려진 오픈 소스 Matter 구현을 호출한다는 것을 의미합니다.

00:03:20.000 --> 00:03:28.000
당신의 맥락에서, Matter 프로젝트의 이전 이름은 Connected Home over IP, 즉 CHIP였습니다.

00:03:28.000 --> 00:03:36.000
그렇기 때문에, 오늘 이야기 내내, 당신은 여전히 오픈 소스 프로젝트와 API 모두에서 CHIP의 참조를 보게 될 것입니다.

00:03:36.000 --> 00:03:41.000
우리는 이후 릴리스에서 API의 이름을 업데이트할 것으로 예상합니다.

00:03:41.000 --> 00:03:54.000
주요 주제로 돌아가서, HomeKit에서 제공하는 캡슐화는 기존의 모든 Apple Home 기능을 Matter 액세서리로 원활하고 즉시 작업할 수 있게 해줍니다.

00:03:54.000 --> 00:04:16.000
예를 들어, HAP 액세서리 설정과 동일한 흐름을 사용하여 Matter 액세서리를 설정하고, 한 번의 스와이프로 Control Center에서 Matter 액세서리를 제어하고, Siri for Matter 액세서리 상태와의 훌륭한 핸즈프리 통합을 한 다음 모든 Apple 장치에서 제어할 수 있습니다.

00:04:16.000 --> 00:04:21.000
하지만 HomeKit의 책임은 단지 당사자 기능을 지원하는 것이 아니다.

00:04:21.000 --> 00:04:39.000
사실, 첫날부터, 우리는 앱 개발자가 HomeKit을 활용하여 액세서리와 통신 프로토콜을 구현하는 부담 없이 고객을 위한 창의적이고 즐거운 스마트 홈 앱을 구축할 수 있어야 한다는 비전으로 HomeKit을 설계했습니다.

00:04:39.000 --> 00:04:43.000
이것은 Matter 액세서리에서 계속 사실이다.

00:04:43.000 --> 00:04:48.000
HomeKit에서 사용했던 것처럼 기존 API를 계속 사용하세요.

00:04:48.000 --> 00:04:55.000
그들은 모두 코드 변경 없이 Matter 액세서리로 작업을 시작할 것이다.

00:04:55.000 --> 00:04:58.000
액세서리 설정을 예로 들어 봅시다.

00:04:58.000 --> 00:05:05.000
이 코드는 오늘 HomeKit 앱에서 addAndSetupAccessories API를 호출하는 방법을 보여줍니다.

00:05:05.000 --> 00:05:24.000
iOS 15 개발자 미리보기를 사용하면 이 API로 호출하는 QR 코드 스캐너는 HAP QR 코드에서 작동할 뿐만 아니라 Matter QR 코드를 인식하기 시작하여 고객에게 액세서리 설정에 대한 친숙하고 일관된 경험을 제공합니다.

00:05:24.000 --> 00:05:36.000
약간의 재미를 위해, 올해의 스위프트 업데이트에 세심한 주의를 기울인 사람들은 스위프트 동시성의 세계에서 변화가 진행되고 있다는 것을 알고 있습니다.

00:05:36.000 --> 00:05:46.000
우리는 당신이 익숙한 것과 동일한 API가 이제 새로운 Swift async/await 패러다임을 통해 호출될 수 있다는 것을 알려드리게 되어 기쁩니다.

00:05:46.000 --> 00:05:57.000
설정 외에도 iOS 15 개발자 미리보기를 사용하면 기존 HomeKit API를 사용하여 Matter 액세서리 상태를 읽고 쓸 수 있습니다.

00:05:57.000 --> 00:06:18.000
또한, Matter 액세서리에 대한 원격 액세스와 적시 알림을 자동으로 받은 다음, HAP 액세서리로 하는 것과 같은 방식으로 장면 및 자동화 API를 사용하여 Matter 액세서리를 추가하고 편집할 수 있습니다.

00:06:18.000 --> 00:06:22.000
또한 미래를 살짝 들여다보자.

00:06:22.000 --> 00:06:31.000
Matter 프로젝트가 계속 발전함에 따라, 우리는 그것이 점점 더 많은 액세서리 카테고리에 대한 지원을 제공할 것으로 기대합니다.

00:06:31.000 --> 00:06:41.000
우리는 이러한 새로운 Matter 액세서리 카테고리를 HomeKit에 계속 통합하여 개발자들이 쉽게 사용할 수 있도록 할 것입니다.

00:06:41.000 --> 00:06:46.000
둘째, HAP는 프로토콜로서 사용자 지정 특성을 지원합니다.

00:06:46.000 --> 00:06:55.000
이를 통해 제조업체는 액세서리로 창의적인 사용자 지정 기능을 구축하고 HomeKit을 통해 액세스할 수 있습니다.

00:06:55.000 --> 00:06:59.000
프로토콜로서, Matter는 사용자 지정 기능도 지원합니다.

00:06:59.000 --> 00:07:07.000
그래서, 우리는 여기에 점들을 연결한 다음 HomeKit 프레임워크를 통해 Matter 사용자 지정 기능에 대한 액세스를 제공하고자 합니다.

00:07:07.000 --> 00:07:15.000
이 기능은 나중에 출시될 예정이니, 계속 지켜봐 주시고, 초기 생각이 있으면 알려주세요.

00:07:15.000 --> 00:07:22.000
간단히 말해서, 우리는 Matter를 HomeKit과 원활하게 통합하기 위해 최선을 다하고 있습니다.

00:07:22.000 --> 00:07:32.000
당신이 액세서리 개발자이든, HomeKit 앱 개발자이든, HomeKit 고객이든, Matter "Just Works"로 안심하세요.

00:07:32.000 --> 00:07:50.000
HomeKit을 사용하여 Matter 액세서리와 통합하면 HomePod 및 Apple TV와 같은 Apple 스마트 홈 허브의 성능과 지능 덕분에 안전한 원격 제어 및 자동화와 같은 기능을 무료로 얻을 수 있습니다.

00:07:50.000 --> 00:08:03.000
하지만 고객이 Matter 액세서리를 가정의 다른 스마트 홈 허브와 연결할 수 있도록 도와야 한다면, iOS 앱에서도 쉽게 연결할 수 있도록 하고 있습니다.

00:08:03.000 --> 00:08:08.000
다음으로, 나는 너에게 그것에 대해 더 말하기 위해 크리스에게 전달할 거야.

00:08:08.000 --> 00:08:10.000
고마워, 셀리나.

00:08:10.000 --> 00:08:20.000
올해의 개발자 미리보기를 위해, 우리는 Matter 액세서리와 홈 허브 간의 직접적인 연결을 설정할 수 있는 새롭고 개념적으로 친숙한 설정 API를 구축하고 있습니다.

00:08:20.000 --> 00:08:24.000
사용자 경험을 탐구하는 것으로 시작합시다.

00:08:24.000 --> 00:08:31.000
여기서 볼 수 있듯이, 이 흐름은 오늘날 우리가 Apple 제품과 HomeKit 액세서리를 모두 설정하는 방법과 매우 유사합니다.

00:08:31.000 --> 00:08:37.000
우리는 고객들이 이 흐름에 익숙하다는 것을 알고 있으며, 그들이 그것을 좋아한다는 것을 알고 있으며, 당신도 그것으로부터 이익을 얻길 바랍니다.

00:08:37.000 --> 00:08:44.000
이것이 시스템 UI이지만, 사용자가 선택한 집과 방은 앱에서 판매된다는 점에 유의하는 것이 중요합니다.

00:08:44.000 --> 00:08:52.000
당신의 앱은 필요한 작업을 완료하고 새로운 앱 확장 유형을 통해 설정하기 위해 요청된 정보를 제공할 책임이 있습니다.

00:08:52.000 --> 00:08:56.000
당신을 위해 이것을 단계별로 풀어봅시다.

00:08:56.000 --> 00:09:02.000
설정을 시작하기 전에, 앱은 관리하는 집을 나타내는 토폴로지 객체를 만듭니다.

00:09:02.000 --> 00:09:06.000
그런 다음 이 토폴로지 객체를 새로운 설정 API로 전달합니다.

00:09:06.000 --> 00:09:11.000
이 시점에서, 설정이 시작되고 Matter QR 코드를 스캔할 준비가 되었습니다.

00:09:11.000 --> 00:09:14.000
여기 호출을 위한 코드 예제가 있습니다.

00:09:14.000 --> 00:09:20.000
보시다시피, 이 API는 개념적으로 액세서리 설정을 위한 기존 HomeKit API와 매우 유사합니다.

00:09:20.000 --> 00:09:30.000
가장 큰 차이점은 앱이 관리하는 가정의 설정을 알리는 데 사용되는 HMCHIPServiceTopology 객체를 추가한 것입니다.

00:09:30.000 --> 00:09:39.000
사용자가 스캐너로 Matter QR 코드를 스캔하면, 감지된 액세서리의 범주를 보여주는 감지된 카드로 설정이 자동으로 진행됩니다.

00:09:39.000 --> 00:09:46.000
사용자는 이제 이 예에서 Autohome에 액세서리를 앱에 추가할 수 있는 옵션이 제공됩니다.

00:09:46.000 --> 00:09:54.000
사용자가 액세서리를 홈 허브에 연결하기로 선택하면, 추가할 특정 홈을 지정해야 할 수도 있습니다.

00:09:54.000 --> 00:10:00.000
우리는 당신이 하나 이상의 집으로 구성된 토폴로지로 설정을 시작한 경우에 이 화면을 제시합니다.

00:10:00.000 --> 00:10:06.000
토폴로지가 하나의 집으로만 구성되어 있다면, 사용자의 의도가 이미 알려져 있기 때문에 이 카드는 건너뜁니다.

00:10:06.000 --> 00:10:14.000
사용자가 홈을 선택하면, iOS는 확장 프로그램에 스캔한 액세서리의 Matter 페이로드와 페어링하도록 요청하는 요청을 보냅니다.

00:10:14.000 --> 00:10:20.000
당신의 확장 프로그램은 기본 HMCHIPServiceRequestHandler 서브클래스를 통해 이 요청에 응답합니다.

00:10:20.000 --> 00:10:28.000
호출되면, CHIP 프레임워크 API를 사용하여 Matter 액세서리와 홈 허브 간의 안전한 페어링을 만드세요.

00:10:28.000 --> 00:10:35.000
다음으로, iOS는 선택한 집에 해당하는 확장 프로그램의 객실 목록을 요청할 것입니다.

00:10:35.000 --> 00:10:38.000
이 방들은 사용자 선택을 위해 UI로 표시됩니다.

00:10:38.000 --> 00:10:41.000
확장 프로그램에서 이 요청에 응답하는 코드는 간단합니다.

00:10:41.000 --> 00:10:47.000
페어 요청과 마찬가지로, 확장의 기본 HMCHIPServiceRequestHandler 서브클래스를 중심으로 진행됩니다.

00:10:47.000 --> 00:10:54.000
이 기능을 구현하고 사용자가 선택한 집과 일치하는 해당 방을 반환하기만 하면 됩니다.

00:10:54.000 --> 00:11:03.000
사용자가 액세서리의 이름과 공간을 선택하면, 우리는 그 정보를 확장 프로그램에 제공하고 액세서리를 구성하도록 요청합니다.

00:11:03.000 --> 00:11:13.000
다른 요청 유형과 마찬가지로, 확장 프로그램은 CHIP 프레임워크 API를 사용하여 액세서리를 직접 구성하여 구성 요청에 응답합니다.

00:11:13.000 --> 00:11:26.000
마지막으로, 액세서리가 앱에 대해 완전히 구성된 후, 사용자에게 Apple Home 앱, 제어 센터 및 Siri를 사용하여 이 액세서리를 제어할 수 있는 기회가 제공됩니다.

00:11:26.000 --> 00:11:31.000
여기서 다시 전체적으로 수집된 것은 우리가 당신의 확장이 구현할 것으로 기대하는 코드입니다.

00:11:31.000 --> 00:11:38.000
세 가지 간단한 기능: 룸 요청, 페어 액세서리 요청 및 액세서리 구성 요청.

00:11:38.000 --> 00:11:46.000
HMCHIPServiceRequestHandler를 서브클래스하고 이러한 방법을 재정의하면, 나머지 설정 경험은 본질적으로 개발자의 관점에서 자유롭습니다.

00:11:46.000 --> 00:11:53.000
UI 프레젠테이션, 단계 간 전환, 오류 처리 등과 같은 것들이 모두 당신을 위해 처리됩니다.

00:11:53.000 --> 00:12:01.000
이것은 당신이 작성해야 하는 코드의 양을 크게 줄이는 동시에 사용자에게 진정한 일류 경험을 제공합니다.

00:12:01.000 --> 00:12:12.000
지금까지, 우리는 기존 HomeKit API를 사용하여 Matter 액세서리와 통합하는 방법과 Matter 액세서리를 다른 스마트 홈 허브와 연결해야 하는 경우 새로운 API에 대해 이야기했습니다.

00:12:12.000 --> 00:12:18.000
Matter 액세서리 개발자라면, 펌웨어 개발을 위해 프로토콜 자체에 익숙해져야 합니다.

00:12:18.000 --> 00:12:27.000
그래서 다음으로, 제 동료인 Sagar가 우리를 Matter 프로토콜 투어에 데려가서 Matter와 HAP 사이의 유사점을 보여줄 것입니다.

00:12:27.000 --> 00:12:29.000
고마워, 크리스.

00:12:29.000 --> 00:12:31.000
Matter 데이터 모델부터 시작합시다.

00:12:31.000 --> 00:12:36.000
모든 Matter 액세서리는 Matter 데이터 모델을 통해 기능을 노출한다.

00:12:36.000 --> 00:12:40.000
우리는 엔드포인트를 통해 위에서부터 이러한 기능을 개별적으로 다룰 수 있습니다.

00:12:40.000 --> 00:12:44.000
엔드포인트는 액세서리의 논리적으로 분리된 기능으로 생각할 수 있다.

00:12:44.000 --> 00:12:53.000
대부분의 액세서리에는 이 중 몇 가지만 있습니다: 하나는 이름, 공급 업체 및 모델과 같은 정보를 위한 것이고, 다른 하나는 액세서리의 주요 기능, 예를 들어 조명을 위한 것입니다.

00:12:53.000 --> 00:12:56.000
각 엔드포인트는 그 안에 여러 클러스터를 가질 수 있다.

00:12:56.000 --> 00:13:00.000
각 클러스터는 그 끝점의 특정 기능을 나타낸다.

00:13:00.000 --> 00:13:07.000
우리의 조명 예시의 경우, 조명 끝점에는 밝기, 색상 및 전력 제어를 위한 클러스터가 있을 수 있습니다.

00:13:07.000 --> 00:13:14.000
HomeKit에 익숙한 사람들을 위해, 클러스터는 HomeKit 서비스와 동등하다고 생각할 수 있다.

00:13:14.000 --> 00:13:17.000
다음으로, 우리는 클러스터가 그 안에 무엇을 가지고 있는지 살펴본다.

00:13:17.000 --> 00:13:19.000
클러스터는 하나 이상의 속성을 가질 수 있다.

00:13:19.000 --> 00:13:22.000
각 속성은 액세서리의 상태를 나타낸다.

00:13:22.000 --> 00:13:29.000
빛의 예를 들어, 빛의 밝기 클러스터는 빛의 밝기를 읽고 제어할 수 있는 속성을 가질 것이다.

00:13:29.000 --> 00:13:36.000
다시 말하지만, Matter의 속성은 HomeKit 특성과 동등하다고 생각할 수 있다.

00:13:36.000 --> 00:13:43.000
마지막으로, 여기서 각 속성이 읽기, 쓰기 및 보고에 이르기까지 일련의 작업을 지원할 수 있음을 알 수 있습니다.

00:13:43.000 --> 00:13:51.000
우리의 가벼운 예에서, 우리는 불이 켜지거나 꺼질 때마다 액세서리로부터 알림을 받기 위해 온-오프 클러스터에서 보고를 활성화하기를 원할 수 있습니다.

00:13:51.000 --> 00:13:59.000
Matter는 일반적으로 기능에 따라 각 속성을 구성하고 상호 작용할 수 있는 광범위한 API를 제공합니다.

00:13:59.000 --> 00:14:06.000
우리가 방금 이야기한 이러한 개념은 오픈 소스 CHIP 프레임워크에서 구현되고 있으며, 애플은 주요 기여자 중 하나이다.

00:14:06.000 --> 00:14:14.000
Selina가 앞서 언급했듯이, CHIP는 Matter로 이름이 바뀌었지만, 프레임워크와 코드는 향후 릴리스에서 업데이트될 것이다.

00:14:14.000 --> 00:14:27.000
완전히 인증된 버전의 CHIP 프레임워크는 iOS에 배포되어 HomeKit을 Matter 액세서리와 통합할 수 있으며, 앱에서 사용해야 하는 경우 오픈 소스 API에 대한 액세스를 제공합니다.

00:14:27.000 --> 00:14:31.000
CHIP 프레임워크를 사용하여 가벼운 액세서리와 상호 작용하는 예를 살펴봅시다.

00:14:31.000 --> 00:14:36.000
이것은 우리가 방금 검토한 물질 데이터 모델의 핵심 개념을 실행한다.

00:14:36.000 --> 00:14:40.000
우리는 공유된 CHIPController에 접근하는 것으로 시작합니다.

00:14:40.000 --> 00:14:43.000
이 컨트롤러는 Matter에 대한 우리의 주요 핸들이다.

00:14:43.000 --> 00:14:49.000
다음으로, 페어링 중에 할당한 장치 ID를 사용하여 조명을 처리합니다.

00:14:49.000 --> 00:14:54.000
그런 다음, 우리는 라이트 엔드포인트의 온-오프 클러스터에 대한 핸들을 초기화합니다.

00:14:54.000 --> 00:15:00.000
그리고 이제, 이 온-오프 클러스터로, 우리는 온-오프 속성에 대한 읽기와 쓰기를 수행할 수 있다.

00:15:00.000 --> 00:15:05.000
먼저, 우리는 빛의 상태를 전환하는 온-오프 속성을 전환할 것을 요청합니다.

00:15:05.000 --> 00:15:09.000
그런 다음, 우리는 온-오프 속성의 상태를 읽을 것을 요청합니다.

00:15:09.000 --> 00:15:16.000
그런 다음 액세서리는 우리가 애플리케이션을 업데이트하는 데 사용할 수 있는 속성의 상태에 대한 응답을 보냅니다.

00:15:16.000 --> 00:15:19.000
그래서, 그것은 CHIP 프레임워크에 대한 빠른 살펴보기이다.

00:15:19.000 --> 00:15:29.000
오늘 세션을 마치기 전에, 우리는 Matter에 도입된 새로운 개념을 검토하고 그것을 활용하는 홈 앱에서 도입한 몇 가지 새로운 기능을 보여주고 싶습니다.

00:15:29.000 --> 00:15:36.000
이미 알고 있듯이, Matter 프로토콜을 사용하면 여러 관리자가 동시에 액세서리에 연결할 수 있습니다.

00:15:36.000 --> 00:15:44.000
이것은 고객에게 선택권을 제공하는 훌륭한 기능이지만, 액세서리 관리와 관련하여 우리에게 도전을 제기합니다.

00:15:44.000 --> 00:15:47.000
홈 앱이 이것을 어떻게 통합하는지 살펴봅시다.

00:15:47.000 --> 00:15:55.000
홈 앱은 이제 이 새로운 연결된 서비스 섹션에서 액세서리에 연결된 모든 관리자 목록을 표시할 수 있습니다.

00:15:55.000 --> 00:16:00.000
사용자에게는 또한 연결된 관리자를 관리할 수 있는 옵션이 제공됩니다.

00:16:00.000 --> 00:16:08.000
그리고 마지막으로, 사용자는 새 관리자가 액세서리와 연결할 수 있도록 페어링 모드를 다시 켤 수 있는 옵션이 있습니다.

00:16:08.000 --> 00:16:19.000
여기서 우리의 목표는 간단합니다: 우리는 고객이 그들에게 가장 적합한 것을 선택할 수 있는 자유와 스마트 홈 액세서리가 어떻게 관리되고 있는지 말할 수 있는 자신감을 갖도록 하고 싶습니다.

00:16:19.000 --> 00:16:30.000
따라서, Matter 지원은 먼저 iOS, iPadOS 및 tvOS 15 개발자 미리보기에서 사용할 수 있으며, 이를 활성화하려면 이러한 플랫폼에 개발자 프로필을 설치해야 합니다.

00:16:30.000 --> 00:16:36.000
또한 HomeKit을 통해 Matter 액세서리를 제어하려면 홈 허브가 필요합니다.

00:16:36.000 --> 00:16:49.000
Matter가 시장에서 사용할 수 있게 되면 자격을 갖춘 공급 업체 ID와 인증된 제품 ID를 게시할 것으로 예상하지만, 개발자 미리보기와 함께 샘플 공급 업체 ID 및 제품 ID 목록을 제공하여 개발을 용이하게 할 것입니다.

00:16:49.000 --> 00:16:57.000
이 ID는 개발자 미리보기에서 이미 지원되는 Matter 액세서리 카테고리를 나타내도록 사전 구성되어 있습니다.

00:16:57.000 --> 00:17:02.000
항상 그렇듯이, developer.apple.com에서 API에 대한 자세한 정보를 찾을 수 있습니다.

00:17:02.000 --> 00:17:10.000
그리고 Matter 오픈 소스 API와 Matter 액세서리 정의에 대한 자세한 정보는 Github에서 찾을 수 있습니다.

00:17:10.000 --> 00:17:18.000
그래서, 결론적으로, 우리는 액세서리 개발자, HomeKit 앱 및 HomeKit 사용자를 위해 HomeKit을 통해 원활한 Matter 지원을 제공하고 있습니다.

00:17:18.000 --> 00:17:25.000
Matter 액세서리를 다른 스마트 홈 허브와 연결해야 하는 개발자를 위한 새로운 설정 API가 곧 있을 것입니다.

00:17:25.000 --> 00:17:32.000
그리고 이 모든 것은 iOS, iPadOS 및 tvOS 15 개발자 미리보기부터 사용할 수 있습니다.

00:17:32.000 --> 00:17:35.000
시청해 주셔서 감사합니다, 그리고 제 팀과 저는 안녕히 계세요.

00:17:35.000 --> 23:59:59.000
[타격적인 음악].

