WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:10.000
Simon Goldrei: Xin chào.

00:00:10.000 --> 00:00:15.000
Phiên này là tất cả về cách chuyển đổi phương tiện truyền thông một cách vô nghĩa với HLS.

00:00:15.000 --> 00:00:20.000
Tôi là Simon và tôi là thành viên của nhóm Truyền thông Trực tuyến tại Apple!

00:00:20.000 --> 00:00:30.000
Bạn có sử dụng AVQueuePlayer hay muốn cung cấp cho khách hàng của mình khả năng phát lại liền mạch, theo phong cách Up Next của các mục HLS trong ứng dụng của bạn?

00:00:30.000 --> 00:00:35.000
Bạn có muốn trình bày phương tiện truyền thông của mình sự liên tục mà nhà sản xuất dự định không?

00:00:35.000 --> 00:00:40.000
Chúng tôi có thể hỗ trợ khách hàng của mình bằng cách cung cấp trải nghiệm để thưởng thức phương tiện truyền thông của chúng tôi lâu hơn không?

00:00:40.000 --> 00:00:50.000
Nếu có, thì bạn đã điều chỉnh phiên tốt nhất để tìm hiểu cách bây giờ bạn có thể chuyển đổi các mục HLS một cách không có khoảng trống.

00:00:50.000 --> 00:00:51.000
Đây là chương trình nghị sự của chúng tôi.

00:00:51.000 --> 00:01:08.000
Chúng tôi sẽ khảo sát một số trải nghiệm truyền thông hấp dẫn mà bạn có thể cung cấp với tính năng mới này, tôi sẽ trình bày chi tiết các yêu cầu của tác giả phương tiện truyền thông, tôi sẽ xem qua một số ví dụ về danh sách phát nêu bật các phương pháp hay nhất và chúng tôi sẽ kết thúc bằng bản demo.

00:01:08.000 --> 00:01:15.000
Lợi ích của việc chuyển đổi giữa các vật phẩm AVPlayer được hỗ trợ bởi HLS trong AVQueuePlayer rất đơn giản.

00:01:15.000 --> 00:01:26.000
Cho đến bây giờ, điểm chuyển đổi có thể hơi chói tai; bất cứ điều gì từ trục trặc âm thanh đến trục trặc thị giác nhất thời hoặc thậm chí là dấu hiệu của bộ đệm không xác định.

00:01:26.000 --> 00:01:35.000
Quá trình chuyển đổi mục không có khoảng trống duy trì mối liên kết mà ứng dụng của bạn cung cấp giữa khách hàng và nội dung.

00:01:35.000 --> 00:01:38.000
Có lẽ bạn nhớ lại cụm từ "đừng chạm vào mặt số đó."

00:01:38.000 --> 00:01:46.000
Bạn có thể xây dựng một phương pháp điều trị theo từng đợt chuyển đổi liền mạch từ cuối tập này sang đầu tập khác.

00:01:46.000 --> 00:01:54.000
Quá trình chuyển đổi không có khoảng trống cho phép khả năng tái tạo trải nghiệm album theo dõi liền mạch mà chúng tôi đã tận hưởng từ lâu.

00:01:54.000 --> 00:02:01.000
Khi làm điều này, chúng tôi đang cung cấp một bản sao chính xác hơn của những gì có thể đã được phát trực tiếp hoặc được cố ý tác giả.

00:02:01.000 --> 00:02:07.000
Chúng tôi có thể mang đến trải nghiệm không bị gián đoạn và không bị gián đoạn.

00:02:07.000 --> 00:02:10.000
Chúng ta có thể tái tạo lập trình tuyến tính.

00:02:10.000 --> 00:02:21.000
Nhưng chúng tôi cũng có thể cung cấp trải nghiệm năng động và thậm chí có thể tương tác đưa người xem từ một nhiệm vụ hoặc cảnh và trực tiếp chuyển sang nhiệm vụ tiếp theo.

00:02:21.000 --> 00:02:27.000
Hãy xem xét sự chuyển đổi giữa một tập hợp các bài tập hoặc các phương tiện hướng dẫn khác.

00:02:27.000 --> 00:02:36.000
Với sự chuyển đổi không có khoảng trống, giờ đây chúng ta có thể, theo chương trình, ghép các cảnh của một chuỗi nghe nhìn trong khi vẫn duy trì tính liên tục chính xác.

00:02:36.000 --> 00:02:39.000
Bạn có thể thêm đại diện...

00:02:39.000 --> 00:02:41.000
...Hoặc thêm thời gian hồi chiêu, vào bài tập.

00:02:41.000 --> 00:02:50.000
Chúng tôi có thể đạt được tất cả những điều này trong khi vẫn cung cấp phương tiện truyền thông với tất cả các lợi ích của phương tiện tốc độ bit thích ứng phát trực tuyến qua HTTP.

00:02:50.000 --> 00:02:52.000
Tất nhiên, chúng tôi cũng sử dụng cái này!

00:02:52.000 --> 00:02:58.000
Các tính năng mới của Apple Music cung cấp nội dung thông qua HLS và đạt được sự chuyển đổi không khoảng trống giữa mỗi bài hát.

00:02:58.000 --> 00:03:05.000
Chúng tôi rất vui mừng được mang điều này đến cho khách hàng của mình và chúng tôi cũng muốn cung cấp điều này cho khách hàng của bạn.

00:03:05.000 --> 00:03:13.000
Bây giờ chúng ta hãy xem xét chi tiết các yêu cầu tác giả mà bạn cần kết hợp để ảnh hưởng đến quá trình chuyển đổi cùng một mục trong nội dung HLS của bạn.

00:03:13.000 --> 00:03:23.000
Bằng cách cung cấp - trong bản kê khai HLS của bạn - các biến thể cung cấp tính liên tục định dạng âm thanh giữa các mục tuần tự, bạn đang cho phép chuyển đổi không có khoảng trống.

00:03:23.000 --> 00:03:43.000
Nội dung của bạn nên cung cấp các biến thể phù hợp với các đặc điểm phương tiện âm thanh sau: việc sử dụng FairPlay Streaming, codec âm thanh - được chỉ định bởi thuộc tính codec của thẻ Stream - và số lượng kênh, như được chỉ định bởi thuộc tính Kênh của thẻ Media.

00:03:43.000 --> 00:03:51.000
Lưu ý rằng nếu bạn quyết định cung cấp kết xuất âm thanh, ở tốc độ mẫu và độ sâu bit khác nhau, bạn có thể ức chế quá trình chuyển đổi không có khe hở.

00:03:51.000 --> 00:03:58.000
Lời khuyên tương tự để cung cấp một trận đấu và duy trì tính liên tục cũng áp dụng cho những đặc điểm này.

00:03:58.000 --> 00:04:08.000
Có nghĩa là, để đạt được sự chuyển đổi không có khoảng trống, hãy đảm bảo cung cấp phương tiện âm thanh tương đương trong mỗi biến thể cho các mục được xếp hàng liên tiếp.

00:04:08.000 --> 00:04:15.000
Cuối cùng, khi soạn thảo phương tiện truyền thông của bạn, vui lòng tuân thủ hướng dẫn tác giả CMAF.

00:04:15.000 --> 00:04:19.000
CMAF là viết tắt của "định dạng ứng dụng phương tiện phổ biến."

00:04:19.000 --> 00:04:30.000
Trong đặc tả MPEG này, có một khuyến nghị cụ thể để sử dụng danh sách chỉnh sửa để báo hiệu sự hiện diện của khung mồi và khung còn lại.

00:04:30.000 --> 00:04:38.000
Bây giờ chúng ta hãy xem xét một ví dụ đơn giản bằng cách kiểm tra danh sách phát biến thể chính của hai mục ứng cử viên.

00:04:38.000 --> 00:04:48.000
Trong bản kê khai HLS này, tôi đã cung cấp bốn biến thể nghe nhìn: một cặp biến thể 720p và một cặp biến thể 1080p.

00:04:48.000 --> 00:05:02.000
Trong mỗi cặp, tôi cung cấp một biến thể được mã hóa với Bộ giải mã âm thanh nâng cao hiệu quả cao, HE_AAC và một biến thể khác với Độ phức tạp thấp AAC hoặc AAC_LC.

00:05:02.000 --> 00:05:11.000
Trong ví dụ này, hãy xem xét rằng các điều kiện phát lại hỗ trợ lựa chọn video 720p được ghép nối với HE_AAC.

00:05:11.000 --> 00:05:20.000
Khi phát lại gần kết thúc, AVQueuePlayer, ít nhất là ban đầu, sẽ chọn biến thể được mã hóa tương tự được cung cấp trong mục tiếp theo.

00:05:20.000 --> 00:05:25.000
Điều này đúng ngay cả khi các điều kiện mạng hiện hỗ trợ cấp chất lượng cao hơn.

00:05:25.000 --> 00:05:34.000
Phục vụ quá trình chuyển đổi không có khe hở là ưu tiên cao hơn so với việc chọn chất lượng cao khi chuyển đổi không có khe hở.

00:05:34.000 --> 00:05:43.000
Khi quá trình phát lại diễn ra, các heuristic tốc độ bit thích ứng được đánh giá và, nếu các điều kiện vẫn tồn tại, người chơi sẽ liên tục chuyển sang chất lượng cao hơn đó.

00:05:43.000 --> 00:05:45.000
Tuyệt vời!

00:05:45.000 --> 00:05:50.000
Bây giờ giả sử chúng tôi không cung cấp HE_AAC trong mục hai.

00:05:50.000 --> 00:06:02.000
Trong trường hợp đó, AVQueuePlayer không thể duy trì tính liên tục của âm thanh và quá trình chuyển đổi không có khe hở nhưng có thể tự do chọn biến thể ban đầu phù hợp nhất cho các điều kiện phát lại.

00:06:02.000 --> 00:06:07.000
Giả sử rằng chúng tôi đã soạn thảo nội dung của mình để hỗ trợ quá trình chuyển đổi không có khoảng trống.

00:06:07.000 --> 00:06:11.000
Trong trường hợp đó, chúng ta nên nhắc nhở bản thân cách sử dụng AVQueuePlayer.

00:06:11.000 --> 00:06:14.000
Ở đây chúng tôi có một đoạn mã ngắn.

00:06:14.000 --> 00:06:19.000
Chúng tôi tạo hai AVPlayerItems và xếp hàng chúng, theo thứ tự, trước khi phát lại.

00:06:19.000 --> 00:06:23.000
Lưu ý rằng các mục của chúng tôi có nguồn gốc từ hai URL khác nhau.

00:06:23.000 --> 00:06:32.000
Sau khi tạo AVQueuePlayer của chúng tôi, chúng tôi có thể sử dụng phương thức "chèn sau" để thông báo cho trình phát hàng đợi về chuỗi dự định.

00:06:32.000 --> 00:06:43.000
Tất cả những gì còn lại là nhắn tin "chơi".

00:06:43.000 --> 00:06:49.000
Một kỹ thuật tiên tiến mà tôi muốn chia sẻ với bạn cho phép sử dụng một tài sản duy nhất.

00:06:49.000 --> 00:06:54.000
Từ tài sản này, bạn có thể khởi tạo nhiều AVPlayerItems.

00:06:54.000 --> 00:07:03.000
Chúng tôi có thể xác định các điểm vào và ra khác nhau trên mỗi AVPlayerItem riêng biệt, trước khi xếp hàng trong AVQueuePlayer của chúng tôi.

00:07:03.000 --> 00:07:10.000
Sử dụng phương pháp AVPlayerItem seekToTime, chúng ta có thể xác định điểm của mình.

00:07:10.000 --> 00:07:14.000
Sau đó, chúng ta có thể xác định điểm ra của mình với forwardPlaybackEndTime.

00:07:14.000 --> 00:07:17.000
Đây là một minh họa cho khái niệm này.

00:07:17.000 --> 00:07:24.000
Mục một, hai và ba đều có nguồn gốc từ cùng một bộ AVA, bao gồm ba cảnh giống nhau.

00:07:24.000 --> 00:07:36.000
Chúng khác biệt ở chỗ tôi đã gợi ý mỗi điểm khác nhau, sử dụng seekToTime và xác định các điểm riêng biệt, sử dụng forwardPlaybackEndTime.

00:07:36.000 --> 00:07:46.000
Bây giờ tôi có thể xếp hàng ba vật phẩm giống hệt nhau này vào AVQueuePlayer của mình và những gì tôi đạt được là một chuỗi động, tùy chỉnh.

00:07:46.000 --> 00:07:50.000
Bây giờ hãy xem và nghe các chuyển tiếp không có khe hở trong hành động với một bản demo.

00:07:50.000 --> 00:07:56.000
Trong bản demo này, chúng tôi sẽ tương tác ghép ba luồng video tập luyện lại với nhau.

00:07:56.000 --> 00:08:04.000
Tôi đã để các điều khiển AVKit hiển thị trong mỗi điều khiển để bạn thực sự có thể thấy đây là những tài nguyên luồng riêng biệt.

00:08:04.000 --> 00:08:09.000
Tôi sẽ bắt đầu bằng cách hiển thị phát lại liền mạch của cả ba và sau đó chúng tôi sẽ chỉnh sửa chuỗi tương tác.

00:08:09.000 --> 00:08:18.000
Trong phần mềm của bạn, bạn có thể tưởng tượng việc cung cấp tương tự - hoặc có thể thực hiện sắp xếp lại - theo chương trình.

00:08:18.000 --> 00:08:22.000
Đúng rồi! Hãy khởi động nào.

00:08:22.000 --> 00:08:25.000
♪ Nhạc điện tử tràn đầy năng lượng ♪

00:08:25.000 --> 00:08:30.000
♪

00:08:30.000 --> 00:08:32.000
Sẵn sàng hay chưa? Hãy chạy trên những ngọn đồi.

00:08:32.000 --> 00:08:35.000
♪ Nhạc hip-hop sống động ♪

00:08:35.000 --> 00:08:40.000
♪

00:08:40.000 --> 00:08:43.000
Thế là xong! Chúng ta đã xong. Đã đến lúc hồi chiêu.

00:08:43.000 --> 00:08:47.000
♪ Nhạc điện tử bình tĩnh ♪

00:08:47.000 --> 00:08:51.000
♪

00:08:51.000 --> 00:08:54.000
Tôi có thể đổ mồ hôi chỉ bằng cách xem nó.

00:08:54.000 --> 00:08:58.000
Tôi bị cám dỗ để bỏ qua thẳng "Đó là nó, chúng ta đã hoàn thành" và bỏ qua những ngọn đồi chạy.

00:08:58.000 --> 00:09:01.000
Có rất nhiều thứ ở đây tại San Francisco.

00:09:01.000 --> 00:09:05.000
Để làm điều này, hãy chỉnh sửa thứ tự các bộ bài tập của chúng ta.

00:09:05.000 --> 00:09:08.000
Tôi sẽ di chuyển bài tập trên đồi lên đỉnh.

00:09:08.000 --> 00:09:15.000
Điều này cho phép tôi chỉ cần khởi động sau đó ngay lập tức và không có khoảng thời gian hồi chiêu.

00:09:15.000 --> 00:09:21.000
Sau đó, tôi sẽ bắt đầu bằng cách chọn khởi động, bây giờ ở vị trí thứ hai, làm bài tập đầu tiên của tôi.

00:09:21.000 --> 00:09:25.000
Đúng rồi! Hãy khởi động nào.

00:09:25.000 --> 00:09:28.000
♪ Nhạc điện tử tràn đầy năng lượng ♪

00:09:28.000 --> 00:09:33.000
♪

00:09:33.000 --> 00:09:35.000
Thế là xong! Chúng ta đã xong. Đã đến lúc hồi chiêu.

00:09:35.000 --> 00:09:39.000
♪ Nhạc điện tử bình tĩnh ♪

00:09:39.000 --> 00:09:45.000
♪

00:09:45.000 --> 00:09:49.000
Hãy tóm tắt những điểm chính mà chúng ta đã học được trong phiên này.

00:09:49.000 --> 00:09:58.000
Chúng tôi đã học được rằng để đạt được sự chuyển đổi không có khoảng trống bằng cách sử dụng HLS, chúng tôi phải cung cấp các biến thể trong mỗi mục có định dạng âm thanh phù hợp.

00:09:58.000 --> 00:10:07.000
Sau đó, chúng tôi đã thấy việc hướng dẫn AVQueuePlayer thực hiện quá trình chuyển đổi không có khoảng trống dễ dàng như thế nào chỉ bằng cách xếp hàng các mục theo trình tự.

00:10:07.000 --> 00:10:13.000
Chúng tôi có một phiên liên quan, nơi chúng tôi giới thiệu các API mới để khám phá biến thể.

00:10:13.000 --> 00:10:19.000
Bạn có thể thấy phiên đó hữu ích nếu phần mềm hoặc dịch vụ của bạn không thể đảm bảo các mục có định dạng âm thanh phù hợp.

00:10:19.000 --> 00:10:25.000
Tôi hy vọng bạn thích buổi học này và tận hưởng phần còn lại của WWDC 2021 này.

00:10:25.000 --> 00:10:27.000
Cảm ơn bạn.

00:10:27.000 --> 23:59:59.000
♪

