WEBVTT

00:00:02.000 --> 00:00:10.000
Xin chào.

00:00:10.000 --> 00:00:18.000
Mail là một ứng dụng quan trọng và các tiện ích mở rộng ứng dụng Mail sẽ cho phép bạn nâng cao nó theo một số cách mới đáng kinh ngạc.

00:00:18.000 --> 00:00:27.000
Tôi là Abhilash, và cùng với đồng nghiệp của tôi, Seth, chúng tôi sẽ hướng dẫn bạn cách xây dựng các tiện ích mở rộng ứng dụng Thư tuyệt vời.

00:00:27.000 --> 00:00:34.000
Trong macOS Monterey, chúng tôi đang vận chuyển một khuôn khổ mới, MailKit, để xây dựng các tiện ích mở rộng Mail.

00:00:34.000 --> 00:00:45.000
Các tiện ích mở rộng này được xây dựng trên nền tảng cơ bản giống như các tiện ích mở rộng ứng dụng khác như tiện ích mở rộng ứng dụng Safari và tiện ích mở rộng bảng chia sẻ.

00:00:45.000 --> 00:00:52.000
Chúng được xây dựng với sự riêng tư và bảo mật của người dùng trong tâm trí từ đầu.

00:00:52.000 --> 00:00:59.000
MailKit APIs được ghi chép đầy đủ và sẽ được hỗ trợ trên các bản phát hành chính của macOS.

00:00:59.000 --> 00:01:11.000
Giống như các tiện ích mở rộng ứng dụng khác, chúng có thể có trong bất kỳ ứng dụng Mac nào được ký đúng cách, có thể được đóng gói trong các ứng dụng hiện có của bạn và cũng có thể được phân phối trong App Store.

00:01:11.000 --> 00:01:16.000
Tiện ích mở rộng thư là tương lai của việc mở rộng thư.

00:01:16.000 --> 00:01:20.000
Các trình cắm sẽ ngừng hoạt động trong bản phát hành macOS trong tương lai.

00:01:20.000 --> 00:01:26.000
Chúng tôi đang giới thiệu bốn cách mới để bạn có thể mở rộng trải nghiệm người dùng của Mail.

00:01:26.000 --> 00:01:33.000
Đầu tiên, soạn các tiện ích mở rộng sẽ cho phép quy trình làm việc mới khi soạn tin nhắn thư.

00:01:33.000 --> 00:01:41.000
Tiện ích mở rộng hành động giúp mọi người quản lý hộp thư đến của họ bằng cách cung cấp các quy tắc tùy chỉnh trên các tin nhắn đến.

00:01:41.000 --> 00:01:48.000
Tiện ích mở rộng chặn nội dung cung cấp trình chặn nội dung WebKit cho tin nhắn Thư.

00:01:48.000 --> 00:01:59.000
Cuối cùng, các tiện ích mở rộng bảo mật tin nhắn có thể cung cấp bảo mật hơn nữa bằng cách ký, mã hóa và giải mã tin nhắn khi mọi người gửi và nhận thư.

00:01:59.000 --> 00:02:13.000
Điều này cung cấp một bộ tiện ích mở rộng Thư đầy đủ để giúp soạn tin nhắn, thực hiện hành động đối với các tin nhắn đến, chặn nội dung thư không mong muốn và cung cấp mã hóa và giải mã.

00:02:13.000 --> 00:02:14.000
Chúng rất dễ viết.

00:02:14.000 --> 00:02:16.000
Họ rất mạnh mẽ.

00:02:16.000 --> 00:02:23.000
Chúng ổn định và sẽ tiếp tục hoạt động khi ứng dụng OS và Mail thay đổi theo thời gian.

00:02:23.000 --> 00:02:30.000
Trước khi chúng ta đi sâu vào để xây dựng một tiện ích mở rộng Thư với những khả năng này, chúng ta hãy xem qua một ví dụ về một tiện ích đang được sử dụng.

00:02:30.000 --> 00:02:39.000
Hãy tưởng tượng tôi đang làm việc cho một tập đoàn đa quốc gia lớn, nơi tất cả các đồng nghiệp của tôi đang hợp tác trong nhiều dự án rất bí mật.

00:02:39.000 --> 00:02:47.000
Để giúp giữ bí mật cho các dự án của chúng tôi, chúng tôi đang sử dụng Tiện ích mở rộng bí mật lớn để xác thực người nhận tin nhắn thư.

00:02:47.000 --> 00:02:54.000
Tôi muốn gửi tin nhắn cho đồng nghiệp Seth của tôi để cập nhật về văn phòng từ xa mới của chúng tôi trên sao Hỏa.

00:02:54.000 --> 00:03:00.000
Điều đầu tiên bạn nhận thấy là một nút cho Tiện ích mở rộng bí mật lớn trong cửa sổ soạn thư.

00:03:00.000 --> 00:03:08.000
Tiện ích mở rộng này cung cấp danh sách các dự án tôi đang thực hiện và tôi chọn Mars Remote Office.

00:03:08.000 --> 00:03:13.000
Tôi nhập một chủ đề và email của Seth.

00:03:13.000 --> 00:03:21.000
Phần mở rộng đã có thể xác nhận rằng Seth được tiết lộ trong dự án này và chú thích địa chỉ email của anh ấy bằng dấu kiểm màu xanh lam.

00:03:21.000 --> 00:03:31.000
Tất nhiên, đối với một dự án có tầm quan trọng này, chúng tôi muốn thông báo cho người quản lý của chúng tôi, Mikey, vì vậy tôi sẽ thêm anh ấy.

00:03:31.000 --> 00:03:36.000
Hmm, có vẻ như Mikey không được tiết lộ về văn phòng từ xa mới của chúng tôi.

00:03:36.000 --> 00:03:42.000
Hãy để tôi xóa anh ấy và gửi tin nhắn.

00:03:42.000 --> 00:03:48.000
Ồ, tôi đã nhận được câu trả lời từ Seth, và nó xuất hiện màu đỏ trong danh sách tin nhắn.

00:03:48.000 --> 00:03:57.000
Điều này là do Big Secrecy Extension đã thực hiện một hành động để tô màu các thông điệp liên quan đến dự án sao Hỏa là màu đỏ.

00:03:57.000 --> 00:04:03.000
Ngoài ra còn có một biểu tượng chỉ ra rằng một tiện ích mở rộng đã thực hiện một hành động trên tin nhắn này.

00:04:03.000 --> 00:04:15.000
Khi tôi đi xem tin nhắn, có một biểu tượng trong Trình xem tin nhắn chỉ ra rằng tin nhắn từ Seth đã được mã hóa và giải mã thành công bởi Tiện ích mở rộng bí mật lớn.

00:04:15.000 --> 00:04:23.000
Bây giờ chúng ta hãy đi sâu vào và tìm hiểu cách bạn có thể tận dụng MailKit APIs để xây dựng các tiện ích mở rộng mạnh mẽ như Big Secrecy Extension.

00:04:23.000 --> 00:04:31.000
Hãy bắt đầu với các tiện ích mở rộng soạn thảo có thể cung cấp các tính năng mới cho người dùng trong khi soạn tin nhắn.

00:04:31.000 --> 00:04:39.000
Trong macOS Monterey, có bốn cách tiện ích mở rộng của bạn có thể tương tác với cửa sổ soạn Thư.

00:04:39.000 --> 00:05:01.000
Tiện ích mở rộng có thể xác thực địa chỉ email của người nhận khi người dùng đang chỉnh sửa chúng, cung cấp bộ điều khiển chế độ xem với ngữ cảnh bổ sung về tin nhắn đang được soạn, đặt tiêu đề bổ sung trên tin nhắn gửi đi hoặc cảnh báo người dùng về lỗi trong tin nhắn trước khi nó được gửi.

00:05:01.000 --> 00:05:06.000
Hãy cùng xem qua cách xây dựng phần mở rộng soạn thảo.

00:05:06.000 --> 00:05:10.000
Bạn bắt đầu bằng cách thêm một mục tiêu mới vào Ứng dụng macOS hiện có.

00:05:10.000 --> 00:05:21.000
Trong Xcode 13, có một mẫu Tiện ích mở rộng thư mới sẽ giúp bạn bắt đầu tạo mục tiêu Tiện ích mở rộng thư mới.

00:05:21.000 --> 00:05:28.000
Trong quá trình thiết lập, Xcode sẽ cho phép bạn chọn loại tiện ích mở rộng bạn muốn tạo.

00:05:28.000 --> 00:05:36.000
Đối với tiện ích mở rộng soạn thảo, bạn chọn khả năng Bao gồm Trình xử lý phiên soạn thảo.

00:05:36.000 --> 00:05:47.000
Trong Info.plist cho mục tiêu tiện ích mở rộng, bạn cũng phải chỉ định một biểu tượng và chú giải công cụ mô tả trong từ điển MEComposeSession.

00:05:47.000 --> 00:05:54.000
Mail sẽ sử dụng biểu tượng và chú giải công cụ để hiển thị nút thanh công cụ trong cửa sổ soạn thảo.

00:05:54.000 --> 00:05:59.000
Bây giờ hãy xem xét việc triển khai cho lớp chính của tiện ích mở rộng của bạn.

00:05:59.000 --> 00:06:05.000
Lớp chính của tiện ích mở rộng của bạn phải phù hợp với giao thức MEExtension.

00:06:05.000 --> 00:06:12.000
MEExtension hiển thị các phương thức xử lý tùy chọn cho mỗi trong bốn loại tiện ích mở rộng.

00:06:12.000 --> 00:06:24.000
Đối với phần mở rộng soạn thảo, lớp chính của bạn phải triển khai trình xử lý cho phương thức phiên và trả về một phiên bản phù hợp với giao thức MEComposeSessionHandler.

00:06:24.000 --> 00:06:34.000
Các phương thức trong MEComposeSessionHandler được gọi bằng Mail để thông báo cho tiện ích mở rộng về vòng đời của cửa sổ Soạn thảo.

00:06:34.000 --> 00:06:42.000
Phương thức đầu tiên sẽ được gọi là ComposeSessionDidBegin, xảy ra khi một cửa sổ soạn thảo mới được mở.

00:06:42.000 --> 00:06:52.000
Ngoài ra còn có các phương pháp được gọi dựa trên hành động của người dùng như chỉnh sửa địa chỉ email của người nhận hoặc gửi email.

00:06:52.000 --> 00:07:00.000
Tất cả các phương thức trong MEComposeSessionHandler đều có đối số MEComposeSession cung cấp thông tin về cửa sổ soạn thảo.

00:07:00.000 --> 00:07:06.000
Mail tạo ra một phiên bản MEComposeSession duy nhất cho mọi cửa sổ soạn Thư.

00:07:06.000 --> 00:07:14.000
Nó có thuộc tính MEMessage hiển thị các chi tiết khác nhau của tin nhắn đang được chỉnh sửa.

00:07:14.000 --> 00:07:24.000
Bạn có thể sử dụng thông tin này để tùy chỉnh các phản hồi mà bạn cung cấp khi Mail gọi các phương thức MEComposeSessionHandler của tiện ích mở rộng của bạn.

00:07:24.000 --> 00:07:31.000
Hãy xem xét một ví dụ về cách bạn có thể làm điều này để chú thích địa chỉ email của người nhận.

00:07:31.000 --> 00:07:40.000
Mail sẽ gọi cho chú thích của ComposeSessionHandler của bạn annotateAddressesForSession bất cứ khi nào địa chỉ người nhận được chỉnh sửa.

00:07:40.000 --> 00:07:53.000
Trong ví dụ này, chúng tôi đang sử dụng thuộc tính allRecipientAddresses của MEMessage để cung cấp chú thích lỗi cho các email không khớp seth@example.com.

00:07:53.000 --> 00:08:00.000
Soạn các tiện ích mở rộng cũng có thể cung cấp bộ điều khiển chế độ xem mà Mail sẽ hiển thị trong cửa sổ soạn thảo.

00:08:00.000 --> 00:08:09.000
Bộ điều khiển chế độ xem của bạn có thể cung cấp ngữ cảnh có giá trị cho người dùng bằng cách tùy chỉnh bộ điều khiển chế độ xem cho mỗi cửa sổ soạn thảo.

00:08:09.000 --> 00:08:16.000
Bộ điều khiển chế độ xem của tiện ích mở rộng của bạn phải là một lớp con của MEExtensionViewController.

00:08:16.000 --> 00:08:26.000
Mail sẽ yêu cầu một phiên bản của bộ điều khiển chế độ xem này bằng cách gọi phương thức viewControllerForSession của MEComposeSessionHandler.

00:08:26.000 --> 00:08:34.000
Bạn có thể tìm hiểu thêm về các API soạn thảo này trong tài liệu MailKit và bắt đầu xây dựng quy trình làm việc mới.

00:08:34.000 --> 00:08:38.000
Bây giờ hãy nói về các tiện ích mở rộng hành động Mail.

00:08:38.000 --> 00:08:46.000
Tiện ích mở rộng hành động thực hiện các hành động trên các tin nhắn đến để giúp người dùng quản lý hộp thư đến của họ.

00:08:46.000 --> 00:08:54.000
Trong macOS Monterey, chúng tôi đang hiển thị ba loại hành động mà tiện ích mở rộng có thể thực hiện trên một tin nhắn mới.

00:08:54.000 --> 00:09:11.000
Tiện ích mở rộng hành động có thể sửa đổi trạng thái đọc và cờ của tin nhắn đến, di chuyển tin nhắn đến hộp thư hệ thống như Rác, Thùng rác hoặc Lưu trữ hoặc áp dụng màu sắc cho tin nhắn khi chúng được hiển thị trong danh sách tin nhắn.

00:09:11.000 --> 00:09:20.000
Bạn có thể thêm hỗ trợ cho các hành động tin nhắn bằng cách chọn khả năng Bao gồm Trình xử lý hành động tin nhắn khi bạn đang tạo mục tiêu mở rộng Thư.

00:09:20.000 --> 00:09:31.000
Tương tự như tiện ích mở rộng soạn thảo, đối với tiện ích mở rộng hành động, lớp chính của bạn phải trả về trình xử lý hành động tin nhắn bằng cách triển khai trình xử lý cho các hành động tin nhắn.

00:09:31.000 --> 00:09:39.000
Trong ví dụ này, lớp chính cũng hoạt động như một trình xử lý hành động bằng cách áp dụng MEMessageActionHandler.

00:09:39.000 --> 00:09:47.000
Tiện ích mở rộng hành động của bạn phải triển khai phương thức decideAction cho tin nhắn của MEMessageActionHandler.

00:09:47.000 --> 00:09:52.000
DecideAction cho tin nhắn được gọi với một đối số MEMessage.

00:09:52.000 --> 00:10:00.000
Ở đây, chúng tôi đang tô màu tin nhắn màu đỏ bằng cách kiểm tra xem thuộc tính tiêu đề có chứa "Sao Hỏa" hay không.

00:10:00.000 --> 00:10:03.000
Một vài điều cần lưu ý về trình xử lý hành động.

00:10:03.000 --> 00:10:13.000
Mail gọi quyết định Hành động của người xử lý của bạn cho tin nhắn cho mọi tin nhắn mới mà nó tải xuống trước khi nó hiển thị trong hộp thư đến.

00:10:13.000 --> 00:10:24.000
Lần đầu tiên Mail gọi phương thức decideAction for message của tiện ích mở rộng của bạn, phiên bản MEMessage sẽ chỉ có một tập hợp con các tiêu đề tin nhắn.

00:10:24.000 --> 00:10:30.000
Bạn có thể đưa ra quyết định như tô màu tin nhắn dựa trên các tiêu đề có sẵn.

00:10:30.000 --> 00:10:37.000
Khi Mail áp dụng hành động trên tin nhắn, nó sẽ hiển thị trong hộp thư đến.

00:10:37.000 --> 00:10:45.000
Trong một số trường hợp, bạn sẽ cần toàn bộ nội dung và tiêu đề của tin nhắn để trả lại một quyết định thích hợp.

00:10:45.000 --> 00:10:52.000
Trong trường hợp này, phương thức decideAction for message của bạn có thể trả về quyết định invokeAgainWithBody.

00:10:52.000 --> 00:11:03.000
Điều này sẽ khiến Mail tìm nạp toàn bộ nội dung tin nhắn và tiêu đề trước khi gọi lại phương thức quyết định Hành động cho tin nhắn của trình xử lý của bạn.

00:11:03.000 --> 00:11:09.000
Bây giờ bạn có thể trả lại một quyết định chính xác hơn trước khi nó hiển thị trong hộp thư đến.

00:11:09.000 --> 00:11:17.000
Bây giờ tôi sẽ chuyển nó cho Seth, người sẽ chỉ cho bạn cách xây dựng các tiện ích mở rộng chặn nội dung và bảo mật.

00:11:17.000 --> 00:11:19.000
Cảm ơn, Abhilash.

00:11:19.000 --> 00:11:23.000
Đầu tiên, tôi sẽ hướng dẫn bạn cách thêm tiện ích mở rộng chặn nội dung.

00:11:23.000 --> 00:11:34.000
Trình chặn nội dung kết nối với cấu hình WebKit của Mail để xem tin nhắn của nó để cho phép các tiện ích mở rộng chặn nội dung tải dựa trên các trình kích hoạt trong HTML của tin nhắn.

00:11:34.000 --> 00:11:43.000
Điều này cho phép các tiện ích mở rộng chặn tải nội dung dựa trên các tiêu chí của HTML như URL.

00:11:43.000 --> 00:11:52.000
Trong ví dụ này, tiện ích mở rộng có thể chặn tải các hình ảnh từ xa dựa trên các quy tắc trong danh sách quy tắc nội dung của tiện ích mở rộng.

00:11:52.000 --> 00:12:02.000
Bạn có thể thêm hỗ trợ chặn nội dung bằng cách chọn Bao gồm Trình chặn nội dung khi bạn đang tạo mục tiêu mở rộng Thư.

00:12:02.000 --> 00:12:07.000
Tiếp theo, bạn trả về một trình xử lý cho trình chặn nội dung trong lớp chính của tiện ích mở rộng của bạn.

00:12:07.000 --> 00:12:14.000
Trong ví dụ này, lớp chính đang áp dụng giao thức MEContentBlocker để nó trả về self.

00:12:14.000 --> 00:12:20.000
Danh sách quy tắc nội dung được chỉ định bằng cách sử dụng cú pháp tương tự như trình chặn nội dung Safari.

00:12:20.000 --> 00:12:29.000
Vì vậy, nếu bạn đã có danh sách quy tắc nội dung cho tiện ích mở rộng chặn nội dung Safari của mình, bạn cũng có thể sử dụng các quy tắc tương tự cho tiện ích mở rộng ứng dụng Mail.

00:12:29.000 --> 00:12:38.000
Bạn có thể nhận thêm thông tin về cách tạo danh sách quy tắc nội dung bằng cách tham khảo tài liệu "Giới thiệu về Trình chặn nội dung Webkit".

00:12:38.000 --> 00:12:44.000
Khi danh sách quy tắc của bạn hoàn tất, bạn có thể cung cấp nó cho Mail bằng cách trả lại nó trong phương thức contentRulesJSON.

00:12:44.000 --> 00:12:49.000
Phương pháp này mong đợi một mã hóa dữ liệu của Danh sách quy tắc nội dung JSON.

00:12:49.000 --> 00:12:53.000
Và đó là nó dành cho những người chặn nội dung Thư.

00:12:53.000 --> 00:12:57.000
Cuối cùng, chúng ta sẽ xem xét các tiện ích mở rộng bảo mật Tin nhắn.

00:12:57.000 --> 00:13:03.000
Khả năng bảo mật Tin nhắn cung cấp cho các tiện ích mở rộng khả năng mã hóa và giải mã các tin nhắn được mã hóa.

00:13:03.000 --> 00:13:10.000
Họ cũng có thể ký tin nhắn và cung cấp một cách để xem chứng chỉ tin nhắn đã ký.

00:13:10.000 --> 00:13:18.000
Bạn có thể thêm hỗ trợ bảo mật tin nhắn bằng cách chọn Bao gồm Trình xử lý bảo mật tin nhắn khi bạn tạo mục tiêu mở rộng Thư.

00:13:18.000 --> 00:13:28.000
Tiếp theo, bạn cần trả lại trình xử lý từ tiện ích mở rộng của mình hỗ trợ giao thức MEMessageSecurityHandler trong lớp chính của tiện ích mở rộng của chúng tôi.

00:13:28.000 --> 00:13:37.000
Trong ví dụ này, lớp chính của tiện ích mở rộng cũng đang áp dụng giao thức MEMessageSecurityHandler, vì vậy nó tự trả về.

00:13:37.000 --> 00:13:41.000
Bây giờ chúng ta hãy xem cách mã hóa các tin nhắn đang được soạn.

00:13:41.000 --> 00:13:45.000
Mã hóa một tin nhắn được chia thành hai phần.

00:13:45.000 --> 00:13:49.000
Đầu tiên giúp điều khiển giao diện người dùng khi tin nhắn được soạn.

00:13:49.000 --> 00:13:54.000
Điều này cho phép tiện ích mở rộng hiển thị nếu nó có khả năng ký và mã hóa tin nhắn hiện tại.

00:13:54.000 --> 00:14:01.000
Phần tiếp theo là thực sự mã hóa và ký vào tin nhắn khi nó đang được gửi đi.

00:14:01.000 --> 00:14:08.000
Khi một tin nhắn được soạn, Mail sẽ gửi tin nhắn, bao gồm người gửi và danh sách người nhận hiện tại đến tiện ích mở rộng.

00:14:08.000 --> 00:14:13.000
Tiện ích mở rộng sau đó có thể xác định xem nó có khả năng ký và mã hóa tin nhắn hay không.

00:14:13.000 --> 00:14:25.000
Dựa trên những gì được trả về bởi tiện ích mở rộng, Mail sẽ làm nổi bật các biểu tượng Khóa và Chứng chỉ, tùy thuộc vào việc tin nhắn có thể được ký và mã hóa hay không.

00:14:25.000 --> 00:14:33.000
Mỗi khi người gửi hoặc người nhận thay đổi, Mail sẽ gọi phương thức getEncodingStatus trên trình xử lý bảo mật tin nhắn của tiện ích mở rộng.

00:14:33.000 --> 00:14:40.000
Tiện ích mở rộng sẽ xác minh xem nó có thể ký và mã hóa tin nhắn hay không và trả lại cho Mail trạng thái mã hóa hiện tại.

00:14:40.000 --> 00:14:47.000
Ví dụ ở đây là nhập một ExampleEncoder để thực hiện công việc thực tế là kiểm tra trạng thái mã hóa của tin nhắn.

00:14:47.000 --> 00:14:53.000
Trình xử lý bảo mật tin nhắn trả về trạng thái khi có sẵn.

00:14:53.000 --> 00:15:00.000
Tiếp theo, khi tin nhắn được gửi đi, Mail sẽ lấy dữ liệu tin nhắn RFC822 và chuyển nó đến tiện ích mở rộng.

00:15:00.000 --> 00:15:09.000
Tiện ích mở rộng sẽ ký và mã hóa tin nhắn khi cần thiết, và trả lại dữ liệu RFC822 đã ký và mã hóa trở lại Mail.

00:15:09.000 --> 00:15:15.000
Thư sau đó sẽ gửi dữ liệu này đến máy chủ gửi đi.

00:15:15.000 --> 00:15:24.000
Khi tin nhắn đã sẵn sàng để gửi, Mail sẽ chuyển tin nhắn hiện tại bằng cách sử dụng phương thức encodeMessage đến Trình xử lý bảo mật tin nhắn của tiện ích mở rộng.

00:15:24.000 --> 00:15:29.000
Trình xử lý bảo mật tin nhắn của tiện ích mở rộng sẽ trả về tin nhắn được mã hóa.

00:15:29.000 --> 00:15:35.000
Một lần nữa, trong ví dụ này, chúng tôi đang sử dụng ExampleEncoder để thực hiện công việc mã hóa tin nhắn thực tế.

00:15:35.000 --> 00:15:40.000
Trình xử lý bảo mật tin nhắn trả về tin nhắn được mã hóa.

00:15:40.000 --> 00:15:43.000
Giải mã tin nhắn hoạt động tương tự nhưng ngược lại.

00:15:43.000 --> 00:15:51.000
Khi tin nhắn được xem, Mail sẽ gửi dữ liệu tin nhắn RFC822 được mã hóa đến tiện ích mở rộng.

00:15:51.000 --> 00:15:59.000
Tiện ích mở rộng sẽ giải mã tin nhắn thành dữ liệu RFC822 không được mã hóa hoặc đã ký và trả lại cho Mail.

00:15:59.000 --> 00:16:05.000
Thư sau đó sẽ hiển thị tin nhắn được giải mã.

00:16:05.000 --> 00:16:12.000
Khi Mail sẵn sàng giải mã tin nhắn, nó sẽ gọi vào Trình xử lý bảo mật của Tiện ích mở rộng gọi phương thức decodedMessage.

00:16:12.000 --> 00:16:19.000
Nếu tiện ích mở rộng có khả năng giải mã tin nhắn, nó sẽ làm như vậy và trả về tin nhắn RFC822 đã được giải mã.

00:16:19.000 --> 00:16:26.000
Nếu tiện ích mở rộng không cần thiết để giải mã tin nhắn, nó sẽ nhanh chóng trả về số không.

00:16:26.000 --> 00:16:31.000
Khi một tin nhắn được xem, nó có thể được xác định nếu nó được ký và mã hóa.

00:16:31.000 --> 00:16:40.000
Đối với các tin nhắn đã ký, có thể nhấp vào chứng chỉ người ký bên cạnh nhãn người ký để xem thông tin chứng chỉ của người gửi.

00:16:40.000 --> 00:16:46.000
Mail cho phép các tiện ích mở rộng cung cấp bộ điều khiển chế độ xem của riêng nó để hiển thị thông tin chứng chỉ này.

00:16:46.000 --> 00:16:52.000
Là một phần của tin nhắn Thư được giải mã, tiện ích mở rộng có khả năng trả về một bộ người ký tin nhắn.

00:16:52.000 --> 00:16:56.000
Nhãn được cung cấp sẽ được hiển thị dưới dạng người ký trong chế độ xem tin nhắn.

00:16:56.000 --> 00:17:04.000
Tiện ích mở rộng cũng có thể điền vào thuộc tính ngữ cảnh với bất kỳ thông tin nào có thể cần thiết để hiển thị chứng chỉ ký.

00:17:04.000 --> 00:17:12.000
Khi nhấp vào biểu tượng chứng chỉ, Mail yêu cầu ViewController từ tiện ích mở rộng và chuyển cho nó bộ người ký cho tin nhắn hiện tại.

00:17:12.000 --> 00:17:18.000
Những người ký này là những gì đã được trả lại cho Mail bởi tiện ích mở rộng khi tin nhắn ban đầu được giải mã.

00:17:18.000 --> 00:17:23.000
Bộ điều khiển chế độ xem phải là một lớp con của MEExtensionViewController.

00:17:23.000 --> 00:17:26.000
Và đó là nó cho các tiện ích mở rộng bảo mật tin nhắn.

00:17:26.000 --> 00:17:30.000
Tiện ích mở rộng thư là một cách mới mạnh mẽ để bạn nâng cao trải nghiệm Thư.

00:17:30.000 --> 00:17:37.000
Chúng tôi rất vui khi thấy cách bạn tận dụng các khả năng Mail này để xây dựng các sản phẩm mới tuyệt vời và chúng tôi muốn nghe phản hồi của bạn.

00:17:37.000 --> 00:17:42.000
Vì vậy, hãy gửi email cho chúng tôi hoặc đăng tin nhắn trên Diễn đàn Nhà phát triển của chúng tôi.

00:17:42.000 --> 00:17:45.000
Những ví dụ này cho thấy sức mạnh của các tiện ích mở rộng ứng dụng Mail.

00:17:45.000 --> 00:17:52.000
Chúng tôi đã tạo một tiện ích mở rộng soạn thảo để xác minh người nhận, một tiện ích mở rộng hành động tô màu các tin nhắn đến.

00:17:52.000 --> 00:17:55.000
Chúng tôi đã thấy một trình chặn nội dung chặn các hình ảnh từ xa.

00:17:55.000 --> 00:18:01.000
Cuối cùng, chúng tôi đã thấy việc thêm mã hóa và giải mã tùy chỉnh vào Mail dễ dàng như thế nào.

00:18:01.000 --> 00:18:05.000
Trong video này, chúng tôi đã đề cập đến cách xây dựng các tiện ích mở rộng ứng dụng Mail.

00:18:05.000 --> 00:18:10.000
Chúng tôi rất mong được xem cách bạn mở rộng Mail để làm một số điều thực sự thú vị.

00:18:10.000 --> 00:18:14.000
Vì vậy, hãy ra khỏi đó và xây dựng một số tiện ích mở rộng ứng dụng Thư mới tuyệt vời.

00:18:14.000 --> 23:59:59.000
Cảm ơn vì đã xem.

