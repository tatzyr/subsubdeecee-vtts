WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:13.000
Xin chào, tên tôi là Balraj, và tôi là một kỹ sư trong nhóm Xcode.

00:00:13.000 --> 00:00:19.000
Hôm nay, tôi muốn nói với bạn tất cả về việc phân phối ứng dụng trong Xcode 13.

00:00:19.000 --> 00:00:34.000
Có nhiều cách khác nhau để phân phối ứng dụng và hôm nay, tôi sẽ thảo luận về cách tải ứng dụng lên App Store Connect, các tùy chọn phân phối bên ngoài App Store Connect và cách tự động hóa phân phối.

00:00:34.000 --> 00:00:49.000
Tôi cũng sẽ xem xét các tính năng mới mà chúng tôi đã thêm vào quy trình phân phối trong Xcode 13, vì vậy bạn sẽ thấy nội dung trong phiên này có giá trị, cho dù đây là lần đầu tiên bạn phân phối một ứng dụng hay thứ một trăm.

00:00:49.000 --> 00:00:56.000
Gần đây, tôi đã nướng khá nhiều, vì vậy tôi cảm thấy được truyền cảm hứng để tạo ra một ứng dụng để giúp những người khác bắt đầu có tên là Baker.

00:00:56.000 --> 00:01:02.000
Baker sẽ giúp mọi người làm nhiều loại bánh mì và bánh nướng khác nhau.

00:01:02.000 --> 00:01:12.000
Gần đây tôi đã hoàn thành bản dựng đầu tiên của ứng dụng Baker iOS, thử nghiệm nó rộng rãi và muốn phân phối ứng dụng cho những người thử nghiệm beta để nhận phản hồi.

00:01:12.000 --> 00:01:21.000
Để thử nghiệm beta, tôi muốn ứng dụng của mình có sẵn trên TestFlight, đây là một dịch vụ phân phối các bản dựng beta của ứng dụng và nhận phản hồi.

00:01:21.000 --> 00:01:29.000
Để cung cấp bản dựng của Baker trên TestFlight, trước tiên tôi sẽ cần tải bản dựng lên App Store Connect.

00:01:29.000 --> 00:01:36.000
App Store Connect là nơi tôi có thể quản lý các bản dựng của Baker trên TestFlight, cũng như định cấu hình cài đặt cho nhóm nhà phát triển của mình.

00:01:36.000 --> 00:01:41.000
App Store Connect cũng là nơi tôi sẽ quản lý các bản dựng của Baker cho App Store.

00:01:41.000 --> 00:01:51.000
Vì vậy, cho dù tôi có ý định cung cấp Baker trên TestFlight hay App Store, trước tiên tôi sẽ cần tải bản dựng Baker lên App Store Connect.

00:01:51.000 --> 00:02:00.000
Tôi sẽ tải bản dựng beta của Baker lên App Store Connect ngay trong Xcode, vì vậy quá trình phân phối bắt đầu ngay tại nơi tôi đang phát triển ứng dụng của mình.

00:02:00.000 --> 00:02:12.000
Xcode 13 có một số thay đổi mới thú vị trong phân phối cho phép tôi tải lên Baker mà không cần thực hiện bất kỳ thiết lập nào trên App Store Connect hoặc máy cục bộ của tôi.

00:02:12.000 --> 00:02:20.000
Bổ sung mới đầu tiên trong Xcode 13 là bạn có thể tạo bản ghi ứng dụng trực tiếp trong Xcode trước khi tải lên.

00:02:20.000 --> 00:02:26.000
Tiếp theo, Xcode có thể quản lý số bản dựng ứng dụng của bạn cho bạn trong quá trình phân phối.

00:02:26.000 --> 00:02:36.000
Và cuối cùng, với việc ký tên đám mây, chứng chỉ và khóa riêng sẽ được lưu trữ trên đám mây, có nghĩa là bạn sẽ không còn cần phải thiết lập chúng cục bộ theo cách thủ công khi sử dụng ký tự động.

00:02:36.000 --> 00:02:42.000
Hãy cùng xem tất cả điều này hoạt động như thế nào bằng cách tải ứng dụng Baker lên App Store Connect từ Xcode.

00:02:42.000 --> 00:02:46.000
Tôi đã mở dự án Baker, sẵn sàng để tải lên.

00:02:46.000 --> 00:02:51.000
Điều đầu tiên tôi cần là một bản dựng của ứng dụng Baker có thể được xử lý để phân phối.

00:02:51.000 --> 00:03:03.000
Để thực hiện loại bản dựng này, trước tiên tôi sẽ chọn đích chạy bất kỳ thiết bị iOS nào trên thanh công cụ, vì tôi cần đảm bảo Baker có thể chạy trên bất kỳ thiết bị iOS nào được hỗ trợ.

00:03:03.000 --> 00:03:08.000
Sau đó tôi sẽ chọn Sản phẩm trong thanh menu và nhấp vào Lưu trữ.

00:03:08.000 --> 00:03:18.000
Kho lưu trữ là bản dựng phát hành do nhà phát triển ký của một ứng dụng, chứa siêu dữ liệu về ứng dụng và nhóm của bạn sẽ được sử dụng khi phân phối.

00:03:18.000 --> 00:03:24.000
Sau khi thao tác lưu trữ hoàn tất, trình tổ chức Xcode sẽ tự động xuất hiện.

00:03:24.000 --> 00:03:30.000
Kho lưu trữ được xây dựng được chọn tự động, đó là những gì tôi muốn sử dụng để phân phối.

00:03:30.000 --> 00:03:42.000
Trong thanh tra bên phải, tôi cũng có thể thấy thông tin về kho lưu trữ, chẳng hạn như phiên bản, ID gói, tên nhóm, cũng như một nút lớn màu xanh lam ở góc trên cùng bên phải để phân phối.

00:03:42.000 --> 00:03:56.000
Ngoài việc lưu trữ tài liệu lưu trữ, trình tổ chức cũng là nơi tôi có thể xem các phân tích ứng dụng khác nhau cho tất cả các ứng dụng của mình như sự cố, năng lượng, thông tin chi tiết và số liệu.

00:03:56.000 --> 00:04:03.000
Vì Baker đang được thử nghiệm beta, tôi chắc chắn sẽ kiểm tra lại ở đây để có cái nhìn sâu sắc về cách ứng dụng đang chạy.

00:04:03.000 --> 00:04:10.000
Để bắt đầu phân phối, tôi sẽ sử dụng kho lưu trữ hiện được chọn và nhấp vào nút Phân phối ứng dụng.

00:04:10.000 --> 00:04:16.000
Bước đầu tiên của phân phối là chọn cách tôi muốn phân phối Baker.

00:04:16.000 --> 00:04:22.000
App Store Connect là phương pháp mặc định và tôi sẽ để phương pháp đó được chọn, vì đây là nơi tôi muốn tải lên.

00:04:22.000 --> 00:04:32.000
Có nhiều cách bổ sung để phân phối ứng dụng của bạn được hiển thị trong cửa sổ này, chẳng hạn như Ad Hoc và Enterprise, và tôi sẽ xem xét những cách này chi tiết hơn sau.

00:04:32.000 --> 00:04:40.000
Để tiếp tục tải lên App Store Connect, tôi sẽ nhấp vào Tiếp theo ở góc dưới cùng bên phải của trợ lý phân phối.

00:04:40.000 --> 00:04:46.000
Sau đó tôi được đưa đến một bước hỏi xem tôi muốn tải lên hay xuất.

00:04:46.000 --> 00:05:00.000
Tải lên sẽ lấy kho lưu trữ của tôi, ký và tạo IPA, là định dạng của một ứng dụng được đóng gói để tải lên và gửi nó đến App Store Connect, trong khi Export cũng sẽ xây dựng IPA và ký nội dung theo cùng một cách.

00:05:00.000 --> 00:05:08.000
Sự khác biệt duy nhất là Xcode sẽ không tải IPA lên App Store Connect, mà là di chuyển nó đến một thư mục được chỉ định trên máy của bạn.

00:05:08.000 --> 00:05:13.000
IPA này sau đó có thể được gửi đến App Store bằng Transporter.

00:05:13.000 --> 00:05:20.000
Vì tôi muốn tải Baker lên App Store Connect ngay bây giờ, tôi sẽ để Tải lên được chọn và nhấp vào Tiếp theo để tiếp tục.

00:05:20.000 --> 00:05:26.000
Xcode bây giờ sẽ kiểm tra trạng thái App Store Connect và thực hiện nhiều bước thiết lập phân phối khác nhau.

00:05:26.000 --> 00:05:37.000
Mới trong Xcode 13, tôi được hiển thị lời nhắc tạo bản ghi ứng dụng trên App Store Connect, được yêu cầu trước khi chúng tôi có thể tải lên bản dựng thực tế của Baker.

00:05:37.000 --> 00:05:49.000
Bước tạo bản ghi ứng dụng cung cấp các giá trị mặc định cho các thuộc tính như tên ứng dụng, ID gói và ngôn ngữ chính, có nguồn gốc từ kho lưu trữ Baker và cài đặt hệ thống.

00:05:49.000 --> 00:05:54.000
Tôi hài lòng với các tùy chọn mặc định, vì vậy tôi sẽ nhấp vào Tiếp theo.

00:05:54.000 --> 00:05:58.000
Xcode hiện tạo bản ghi ứng dụng bắt buộc trên App Store Connect.

00:05:58.000 --> 00:06:09.000
Bản ghi ứng dụng là nơi tôi có thể xem tất cả các bản dựng đã tải lên của Baker và là nơi tôi có thể thiết lập TestFlight, mua hàng trong ứng dụng, thông tin giá cả và hơn thế nữa.

00:06:09.000 --> 00:06:15.000
Bản ghi ứng dụng Baker hiện có sẵn trên App Store Connect và hiển thị trong danh sách ứng dụng của tôi.

00:06:15.000 --> 00:06:25.000
Bản ghi ứng dụng Baker mới được tạo sẽ là nơi quản lý tất cả các bản dựng của Baker, vì vậy tôi sẽ không phải tạo lại bản ghi ứng dụng mới khi thực hiện các lần tải lên tiếp theo.

00:06:25.000 --> 00:06:39.000
Sau khi Xcode đã tạo bản ghi ứng dụng Baker và xác thực cài đặt App Store Connect của chúng tôi, tôi sẽ được cung cấp một danh sách các tùy chọn được xác định bởi nội dung lưu trữ của tôi và cách tôi phân phối ứng dụng.

00:06:39.000 --> 00:06:56.000
Tôi muốn xây dựng cho mã bit, tôi muốn bao gồm các ký hiệu để các báo cáo sự cố của ứng dụng của tôi được chi tiết và mô tả, và tôi muốn đảm bảo số lượng bản dựng của Baker nhất quán trên mọi khuôn khổ, vì vậy tôi sẽ giữ các giá trị mặc định được chọn và nhấp vào Tiếp theo để tiếp tục.

00:06:56.000 --> 00:07:00.000
Bây giờ tôi được đưa đến một trang hỏi tôi muốn ký Baker như thế nào.

00:07:00.000 --> 00:07:08.000
Ký tên được sử dụng để xác nhận rằng Baker đến từ một nhà phát triển đáng tin cậy và để đảm bảo rằng phần mềm được bảo mật để chạy.

00:07:08.000 --> 00:07:13.000
Hai tùy chọn được cung cấp cho tôi là ký tự động và ký thủ công.

00:07:13.000 --> 00:07:21.000
Ký tự động cho phép Xcode xử lý việc ký cho tôi, trong khi hướng dẫn sử dụng dành cho khi tôi muốn toàn quyền kiểm soát quá trình ký.

00:07:21.000 --> 00:07:27.000
Tôi muốn Xcode xử lý việc ký cho tôi, vì vậy tôi sẽ tiếp tục kiểm tra việc ký tự động và nhấp vào Tiếp theo để tiếp tục.

00:07:27.000 --> 00:07:33.000
Xcode bây giờ sẽ chuyển đổi kho lưu trữ Baker thành IPA và ký nó để phân phối.

00:07:33.000 --> 00:07:41.000
Đăng nhập tự động vào quy trình phân phối đã trải qua một số thay đổi thú vị khiến việc ký hoạt động mà không cần thiết lập máy cục bộ.

00:07:41.000 --> 00:07:48.000
Quá trình ký yêu cầu chứng chỉ và khóa riêng để xác thực rằng tôi là một nhà phát triển đáng tin cậy.

00:07:48.000 --> 00:08:01.000
Khi ký cục bộ, tôi sẽ cần đảm bảo rằng tôi đã cài đặt chứng chỉ phân phối và khóa riêng trên máy của mình, điều này thường yêu cầu thiết lập thủ công trước khi vào quy trình phân phối.

00:08:01.000 --> 00:08:08.000
Trong Xcode 13, khi sử dụng ký tự động, không cần thiết lập chứng chỉ.

00:08:08.000 --> 00:08:16.000
Chứng chỉ và khóa riêng tư hiện có thể được lưu trữ an toàn trên đám mây, nơi hoạt động ký hiện đang diễn ra.

00:08:16.000 --> 00:08:21.000
Điều này có nghĩa là khi sử dụng ký tự động, tôi hoàn toàn không phải thiết lập chứng chỉ.

00:08:21.000 --> 00:08:31.000
Kiểu ký mới này được hỗ trợ bởi mọi phương thức phân phối trong Xcode, chẳng hạn như tải lên App Store, ID nhà phát triển và phân phối Doanh nghiệp.

00:08:31.000 --> 00:08:37.000
Ký điện toán đám mây hoạt động hoàn toàn đằng sau hậu trường bằng cách quản lý tất cả tài sản ký và ký ứng dụng của bạn.

00:08:37.000 --> 00:08:40.000
Hãy xem xét cách thức hoạt động chi tiết hơn.

00:08:40.000 --> 00:08:48.000
Xcode sẽ lấy ứng dụng Baker do nhà phát triển ký vào kho lưu trữ của bạn và tạo một phần chữ ký cho nó.

00:08:48.000 --> 00:08:53.000
Chữ ký một phần này chứa hàm băm của nội dung trong ứng dụng của bạn.

00:08:53.000 --> 00:09:02.000
Một bản sao của các hàm băm đó sau đó được gửi đến máy chủ của chúng tôi, những người, sử dụng khóa và chứng chỉ riêng tư, ký ứng dụng của bạn trên đám mây.

00:09:02.000 --> 00:09:12.000
Sau đó, chúng tôi trả lại phần còn lại của chữ ký và chèn nó vào chữ ký một phần để hoàn tất quá trình ký.

00:09:12.000 --> 00:09:23.000
Giờ đây, bằng cách sử dụng ký tự động và ký điện toán đám mây, chúng tôi có một ứng dụng Baker có chữ ký phân phối đầy đủ có thể được tải lên App Store Connect.

00:09:23.000 --> 00:09:31.000
Bất kỳ ai có vai trò Quản trị viên hoặc Chủ tài khoản trên App Store Connect đều có thể đăng nhập đám mây để phân phối App Store Connect theo mặc định.

00:09:31.000 --> 00:09:43.000
Nếu tôi muốn ai đó có vai trò Nhà phát triển tải lên Baker bằng cách sử dụng ký điện toán đám mây, tôi có thể cấp cho họ quyền trên App Store Connect bằng cách chọn hộp kiểm Truy cập vào Chứng chỉ Phân phối được Quản lý Đám mây.

00:09:43.000 --> 00:09:54.000
Xcode hiện đã hoàn thành việc đóng gói và ký kết đám mây ứng dụng Baker và hiển thị cho tôi một trang tóm tắt trước khi tôi thực hiện tải lên App Store Connect.

00:09:54.000 --> 00:10:03.000
Tôi có thể xem thông tin như loại chứng chỉ được sử dụng, số phiên bản và các quyền lợi mà ứng dụng Baker đã được ký.

00:10:03.000 --> 00:10:08.000
Tôi hài lòng với những gì tôi thấy, vì vậy tôi sẽ tiếp tục và nhấp vào Tải lên.

00:10:08.000 --> 00:10:14.000
Bây giờ, Xcode sẽ tải bản dựng đầu tiên của Baker lên App Store Connect.

00:10:14.000 --> 00:10:22.000
Bây giờ, khi tôi vào App Store Connect, tôi có thể thấy bản dựng đầu tiên của Baker trong bản ghi ứng dụng Xcode được tạo trước đó.

00:10:22.000 --> 00:10:27.000
Từ đây, tôi sẽ có thể thiết lập Baker cho TestFlight và bắt đầu thử nghiệm beta.

00:10:27.000 --> 00:10:35.000
Để biết thông tin về cách thiết lập ứng dụng của bạn trên App Store Connect cho TestFlight, và cả App Store, vui lòng xem hướng dẫn của chúng tôi trong phần mô tả.

00:10:35.000 --> 00:10:42.000
Sau khi đưa Baker vào TestFlight và thử nghiệm beta, tôi đã giải quyết nhiều lỗi và phản hồi.

00:10:42.000 --> 00:10:47.000
Bây giờ tôi muốn tải lên một bản dựng khác của ứng dụng của mình với các bản cập nhật cần thiết.

00:10:47.000 --> 00:10:50.000
Quá trình này trông gần giống với những gì chúng tôi vừa trải qua.

00:10:50.000 --> 00:10:56.000
Tôi sẽ lưu trữ ứng dụng của mình với những thay đổi mong muốn và phân phối thông qua Xcode Organizer.

00:10:56.000 --> 00:10:59.000
Sẽ có hai điểm khác biệt.

00:10:59.000 --> 00:11:12.000
Đầu tiên, tôi sẽ không cần tạo lại bản ghi ứng dụng và thứ hai, tôi sẽ cần đảm bảo số bản dựng của Baker là khác nhau, vì App Store Connect giữ từng bản dựng và sử dụng phiên bản và số bản dựng để phân biệt chúng.

00:11:12.000 --> 00:11:18.000
Tôi có thể làm điều này bằng cách sửa đổi số bản dựng trong tệp dự án của mình trước khi lưu trữ.

00:11:18.000 --> 00:11:25.000
Nhưng nếu tôi không muốn quản lý số bản dựng của mình, quy trình phân phối bây giờ có thể làm điều này cho tôi.

00:11:25.000 --> 00:11:39.000
Mới trong Xcode 13, nếu Xcode phát hiện tôi đang phân phối với một số bản dựng đã được sử dụng trên App Store Connect hoặc không tăng, nó sẽ đề nghị tăng số bản dựng trong kho lưu trữ thành một số hợp lệ.

00:11:39.000 --> 00:11:46.000
Hãy xem tùy chọn Quản lý Phiên bản và Số Xây dựng để xem số bản dựng Xcode được chọn.

00:11:46.000 --> 00:11:58.000
Khi tôi để quy trình phân phối quản lý số bản dựng của mình, tôi đã làm theo quy trình giống hệt như lần tải lên đầu tiên của Baker và bây giờ tôi có bản dựng thứ hai của Baker trên App Store Connect.

00:11:58.000 --> 00:12:09.000
Chu kỳ phát hành các bản dựng beta và giải quyết phản hồi này sẽ tiếp tục cho đến khi tôi có một bản dựng đáp ứng chất lượng mong muốn cần thiết cho bản phát hành App Store.

00:12:09.000 --> 00:12:22.000
Để đưa Baker lên App Store, tôi có thể quảng bá một trong những bản dựng TestFlight trên App Store Connect hoặc tải lên một bản dựng khác trong trình tổ chức lên App Store Connect giống hệt như cách chúng tôi đã làm trước đây.

00:12:22.000 --> 00:12:30.000
Khi Baker ở trên App Store, tôi có thể tiếp tục làm việc để thêm các tính năng mới, sửa lỗi và cải tiến vào ứng dụng Baker.

00:12:30.000 --> 00:12:39.000
Khi tôi sẵn sàng cho lần tải lên tiếp theo cho TestFlight hoặc App Store, tôi có thể làm lại quy trình tương tự trong Xcode.

00:12:39.000 --> 00:12:56.000
Với những bổ sung mới mà chúng tôi đã thực hiện cho quy trình phân phối trong Xcode 13, chẳng hạn như ký điện toán đám mây, tạo bản ghi ứng dụng và quản lý số xây dựng, giờ đây có thể phân phối các ứng dụng mà không cần thiết lập hoặc thiết lập máy trước đó trên App Store Connect.

00:12:56.000 --> 00:13:00.000
Điều này làm cho việc phân phối các ứng dụng của bạn được sắp xếp hợp lý hơn bao giờ hết.

00:13:00.000 --> 00:13:05.000
Xcode cung cấp vô số tùy chọn phân phối khác nhau.

00:13:05.000 --> 00:13:11.000
Hãy cùng xem xét một số tùy chọn khác để phân phối ứng dụng, bắt đầu với các ứng dụng Mac.

00:13:11.000 --> 00:13:18.000
Hầu hết các ứng dụng iOS, bao gồm Baker, đều có sẵn trên Apple silicon Macs theo mặc định.

00:13:18.000 --> 00:13:24.000
Để định cấu hình cài đặt này, tôi có thể vào phần Quyền riêng tư và Tính khả dụng của bản ghi ứng dụng Baker.

00:13:24.000 --> 00:13:38.000
Tuy nhiên, tôi muốn Baker cũng có sẵn trên Intel Macs, vì vậy tôi có thể tạo phiên bản Mac Catalyst hoặc phiên bản Mac gốc của Baker, và sau đó tôi sẽ có hai tùy chọn về cách phân phối ứng dụng của mình ra thế giới.

00:13:38.000 --> 00:13:48.000
Tôi có thể phân phối bản dựng ứng dụng Mac Baker của mình lên Mac App Store bằng cách ký và phân phối trên đám mây giống hệt như cách chúng tôi đã làm cho iOS.

00:13:48.000 --> 00:13:55.000
Nếu sử dụng cùng một ID gói như ứng dụng iOS, ứng dụng Mac của tôi sẽ sử dụng cùng một bản ghi ứng dụng như phiên bản iOS.

00:13:55.000 --> 00:14:02.000
Điều này cũng có nghĩa là một số tính năng nhất định, chẳng hạn như mua hàng trong ứng dụng, sẽ được chia sẻ trên hai nền tảng.

00:14:02.000 --> 00:14:10.000
Tôi cũng sẽ có thể cung cấp ứng dụng Mac của mình trong TestFlight, vì nó mới có sẵn trong MacOS Monterey.

00:14:10.000 --> 00:14:18.000
Điều này có nghĩa là tôi sẽ có thể sử dụng TestFlight để thử nghiệm beta Baker trên tất cả các nền tảng của Apple.

00:14:18.000 --> 00:14:26.000
Nếu tôi muốn mọi người tải xuống Baker bên ngoài Mac App Store, tôi có thể chọn phân phối ứng dụng của mình bằng ID nhà phát triển.

00:14:26.000 --> 00:14:37.000
Đám mây phân phối ID nhà phát triển ký Baker bằng chứng chỉ ID nhà phát triển và tải lên ứng dụng để kiểm tra phần mềm độc hại trong một quy trình được gọi là công chứng.

00:14:37.000 --> 00:14:44.000
Khi Baker đã được ký và công chứng, macOS sẽ tin tưởng ứng dụng chạy trên bất kỳ máy Mac nào.

00:14:44.000 --> 00:14:53.000
Để biết thêm thông tin về việc phân phối bằng ID Nhà phát triển và công chứng, vui lòng xem phiên "Tất cả về công chứng".

00:14:53.000 --> 00:15:03.000
ID nhà phát triển và Mac App Store là hai phương thức phân phối chính cho macOS và cả hai đều là những lựa chọn tuyệt vời để đưa ứng dụng của bạn ra thế giới.

00:15:03.000 --> 00:15:13.000
Bây giờ chúng ta đã xem xét các cách khác nhau để phân phối trên Mac, chúng ta hãy xem thêm một vài cách để phân phối ứng dụng của bạn trên iOS.

00:15:13.000 --> 00:15:18.000
Đôi khi, tôi muốn trực tiếp gửi cho các đồng đội của mình một bản dựng có chữ ký phân phối của Baker.

00:15:18.000 --> 00:15:26.000
Điều này có thể được thực hiện để kiểm tra sửa lỗi, thử nghiệm một tính năng mới thử nghiệm hoặc nhiều lý do khác.

00:15:26.000 --> 00:15:30.000
Đối với trường hợp sử dụng này, tôi sẽ muốn sử dụng phân phối đặc biệt.

00:15:30.000 --> 00:15:39.000
Phân phối đặc biệt cho phép tôi đăng ký Baker để chạy trên tối đa 100 thiết bị đã đăng ký cho nhóm của tôi cho mỗi loại thiết bị.

00:15:39.000 --> 00:15:48.000
Sử dụng Xcode, tôi có thể chọn tùy chọn phân phối đặc biệt, xuất ứng dụng của mình và sau đó gửi Baker cho một trong những đồng đội của tôi với một thiết bị đã đăng ký.

00:15:48.000 --> 00:15:57.000
Cuối cùng, nhóm của tôi có một ứng dụng gọi là Campus Explorer mà chúng tôi muốn phân phối nội bộ trong công ty của mình.

00:15:57.000 --> 00:16:04.000
Xcode cung cấp hai tùy chọn để phân phối theo cách này: ứng dụng tùy chỉnh và phân phối doanh nghiệp.

00:16:04.000 --> 00:16:10.000
Để sử dụng các ứng dụng tùy chỉnh, tôi có thể phân phối đến App Store Connect và thiết lập ứng dụng tùy chỉnh của mình ở đó.

00:16:10.000 --> 00:16:19.000
Thứ hai, nếu tôi muốn phân phối riêng tư thông qua chương trình doanh nghiệp, tôi có thể chọn phương thức phân phối doanh nghiệp trong trình tổ chức.

00:16:19.000 --> 00:16:30.000
Để biết thêm thông tin chi tiết về phân phối ứng dụng tùy chỉnh, vui lòng xem phiên "Phân phối ứng dụng tùy chỉnh với Apple Business Manager".

00:16:30.000 --> 00:16:36.000
Chúng tôi hiện đã phân phối Baker theo nhiều cách khác nhau và cho nhiều bản dựng khác nhau.

00:16:36.000 --> 00:16:46.000
Theo thời gian, tôi sẽ liên tục chọn các tùy chọn và phương thức tương tự khi phân phối, vì vậy tôi sẽ muốn bắt đầu tự động hóa quy trình phân phối.

00:16:46.000 --> 00:16:57.000
Tự động phân phối đặc biệt tuyệt vời khi sử dụng dịch vụ tích hợp liên tục, vì tôi có thể xây dựng, kiểm tra và phân phối ứng dụng của mình trong một quy trình làm việc liên tục.

00:16:57.000 --> 00:17:01.000
Dịch vụ Xcode Cloud CI mới rất tuyệt vời cho việc này.

00:17:01.000 --> 00:17:09.000
Khi bạn đã xây dựng và thử nghiệm ứng dụng của mình, Xcode Cloud hỗ trợ phân phối tự động ứng dụng của bạn lên App Store Connect.

00:17:09.000 --> 00:17:18.000
Để tìm hiểu cách thiết lập và phân phối ứng dụng của bạn trong Xcode Cloud, vui lòng xem phiên "Khám phá quy trình làm việc của Xcode Cloud".

00:17:18.000 --> 00:17:30.000
Nếu bạn muốn tự động phân phối bằng cách sử dụng một dịch vụ CI khác hoặc tự động hóa nó cục bộ trên máy của mình, bạn có thể sử dụng công cụ dòng lệnh Xcode, xcodebuild.

00:17:30.000 --> 00:17:41.000
Lệnh `xcodebuild -exportArchive` được sử dụng để tự động phân phối và nó cần vào kho lưu trữ, plist tùy chọn xuất và thông tin đăng nhập.

00:17:41.000 --> 00:17:51.000
Tôi có thể tạo kho lưu trữ trong Xcode, giống như tôi đã làm trong lần tải lên đầu tiên của Baker, hoặc tôi có thể xây dựng nó bằng lệnh lưu trữ của xcodebuild.

00:17:51.000 --> 00:18:00.000
Để tham khảo kho lưu trữ đã xây dựng, tôi sẽ sử dụng đối số `-archivePath` và chuyển đường dẫn đến kho lưu trữ đã xây dựng của mình.

00:18:00.000 --> 00:18:06.000
Tiếp theo là plist tùy chọn xuất, giống như một công thức để phân phối ứng dụng.

00:18:06.000 --> 00:18:13.000
Đây là nơi tất cả các tùy chọn tôi đã chọn thủ công trong quy trình phân phối của Xcode được chỉ định.

00:18:13.000 --> 00:18:21.000
Nếu bạn xuất IPA, một plist tùy chọn xuất sẽ được lưu vào thư mục đã xuất của bạn với tất cả các tùy chọn bạn đã chọn.

00:18:21.000 --> 00:18:34.000
Khi chúng tôi tải Baker lên App Store Connect, một plist tùy chọn xuất đã được tạo, theo dõi các tùy chọn như chọn tải lên, bật mã bit và chọn ký tự động.

00:18:34.000 --> 00:18:42.000
Khi xcodebuild sử dụng plist này, nó sẽ phân phối bằng cách chọn các tùy chọn giống hệt như chúng tôi đã làm trong Xcode.

00:18:42.000 --> 00:18:51.000
Để có danh sách các tùy chọn có sẵn trong danh sách tùy chọn xuất, bạn có thể chạy `xcodebuild -help` trên dòng lệnh.

00:18:51.000 --> 00:19:01.000
Để chỉ định plist tùy chọn xuất, tôi cần chuyển đối số `-exportOptionsPlist`, với đường dẫn đến tệp plist của tôi.

00:19:01.000 --> 00:19:10.000
Cuối cùng, tôi sẽ cần đảm bảo xcodebuild có quyền truy cập vào thông tin đăng nhập hợp lệ để đăng nhập đám mây thành công và tải lên App Store.

00:19:10.000 --> 00:19:13.000
Có hai cách để làm điều này.

00:19:13.000 --> 00:19:23.000
Cách đầu tiên là đăng nhập vào Xcode trước khi chạy xcodebuild và phiên sẽ tồn tại trên máy của tôi trong một khoảng thời gian.

00:19:23.000 --> 00:19:35.000
Nếu tôi đăng nhập bằng Xcode, cờ yêu cầu duy nhất sẽ là `-allowProvisioningUpdates`, cho phép xcodebuild giao tiếp với trang web của Nhà phát triển Apple.

00:19:35.000 --> 00:19:44.000
Mới trong Xcode 13, bạn có thể sử dụng các phím App Store Connect để đăng nhập vào xcodebuild mà không cần đăng nhập vào Xcode.

00:19:44.000 --> 00:19:48.000
Các khóa có thể được tìm nạp từ App Store Connect và chuyển đến xcodebuild.

00:19:48.000 --> 00:20:09.000
Ba thứ bạn sẽ cần là ID Nhà phát hành, được chuyển đến xcodebuild bằng cách sử dụng `-authenticationKeyIssuerID`; ID Khóa, được chuyển bằng `-authenticationKeyID`; và cuối cùng, bạn sẽ cần tải xuống Khóa API bằng nút Tải xuống Khóa API.

00:20:09.000 --> 00:20:17.000
Đường dẫn đến tệp đã tải xuống có thể được chuyển đến xcodebuild bằng cách sử dụng `-authenticationKeyPath`.

00:20:17.000 --> 00:20:24.000
Xcodebuild vẫn yêu cầu cho phép cập nhật cung cấp, vì nó vẫn cần giao tiếp với trang web của nhà phát triển.

00:20:24.000 --> 00:20:32.000
Khi bạn có khóa đó và tất cả các khóa App Store Connect, bạn sẽ có thông tin đăng nhập cần thiết để xcodebuild phân phối ứng dụng của mình.

00:20:32.000 --> 00:20:41.000
Bây giờ tôi đã có một kho lưu trữ, plist tùy chọn xuất và thông tin đăng nhập, tôi có mọi thứ cần thiết để xây dựng lệnh xcodebuild đầy đủ.

00:20:41.000 --> 00:20:47.000
Đây là tất cả các yếu tố được kết hợp với nhau cho lệnh để tự động phân phối cho Baker.

00:20:47.000 --> 00:20:58.000
Tôi muốn tiếp tục cung cấp các bản cập nhật cho những người thử nghiệm beta của mình mỗi tuần một lần, vì vậy tôi sẽ thiết lập CI của mình để thực hiện việc này bằng cách sử dụng lệnh này để phân phối.

00:20:58.000 --> 00:21:03.000
Và đó là tất cả các cách để phân phối ứng dụng sử dụng Xcode 13.

00:21:03.000 --> 00:21:13.000
Từ phân phối đến App Store Connect cho TestFlight và App Store, đến các phương thức phân phối như ID nhà phát triển, đặc biệt và doanh nghiệp.

00:21:13.000 --> 00:21:20.000
Sau đó, cuối cùng, để tự động hóa quy trình phân phối, bạn có thể sử dụng xcodebuild hoặc dịch vụ Xcode Cloud CI.

00:21:20.000 --> 00:21:39.000
Để biết thêm thông tin về cách phân phối ứng dụng của bạn bằng Xcode Cloud, vui lòng xem phiên "Khám phá quy trình làm việc của Xcode Cloud" và để biết thêm thông tin chi tiết về các phương thức phân phối khác, phiên "Phân phối ứng dụng - Từ Ad Hoc đến Enterprise" có một số thông tin tuyệt vời.

00:21:39.000 --> 00:21:42.000
Cảm ơn bạn rất nhiều vì đã lắng nghe, và chúc bạn có một WWDC tuyệt vời!

00:21:42.000 --> 23:59:59.000
[Nhạc lạc quan].

