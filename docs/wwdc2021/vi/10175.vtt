WEBVTT

00:00:02.000 --> 00:00:12.000
Xin chào, và chào mừng đến với WWDC.

00:00:12.000 --> 00:00:23.000
Tên tôi là Manjeet Chawla, một quản lý chương trình kỹ thuật tại App Store, và tôi thực sự vui mừng được nói về một số tính năng mới sẽ giúp bạn hỗ trợ khách hàng và xử lý việc hoàn tiền.

00:00:23.000 --> 00:00:28.000
Đây là phiên thứ ba của loạt ba phần tập trung vào mua hàng trong ứng dụng.

00:00:28.000 --> 00:00:39.000
Và nếu bạn chưa xem "Gặp gỡ StoreKit 2" hoặc "Quản lý mua hàng trong ứng dụng trên máy chủ của bạn", tôi khuyên bạn nên xem sau phiên này để có được toàn bộ câu chuyện.

00:00:39.000 --> 00:00:47.000
Trong phiên này, trước tiên tôi sẽ nói về hỗ trợ khách hàng và cách bạn có thể cung cấp hỗ trợ theo ngữ cảnh cho khách hàng của mình.

00:00:47.000 --> 00:00:56.000
Và bởi vì hoàn tiền là một phần quan trọng của sự hỗ trợ, đồng nghiệp của tôi, Joe, sẽ nói về việc xử lý hoàn tiền và API máy chủ mới để thông báo và cải thiện quy trình hoàn tiền.

00:00:56.000 --> 00:01:06.000
Hãy bắt đầu với việc hỗ trợ khách hàng, những lợi ích và thách thức của việc cung cấp hỗ trợ có thể mở rộng khi doanh nghiệp của bạn phát triển trên App Store.

00:01:06.000 --> 00:01:23.000
Cho dù ứng dụng của bạn cung cấp đăng ký tự động gia hạn hay mua hàng một lần trong ứng dụng như hàng tiêu dùng hay hàng không hàng tiêu dùng, chúng tôi đang giới thiệu API máy chủ StoreKit và App Store mới để giúp giải quyết các vấn đề hỗ trợ khách hàng một cách kịp thời và hiệu quả.

00:01:23.000 --> 00:01:44.000
Và ngoài việc cung cấp hỗ trợ, các API này sẽ giúp bạn quản lý mối quan hệ của mình với khách hàng hiện tại sau khi bạn có được chúng ban đầu, tăng khả năng giữ chân tổng thể, cải thiện sự hài lòng của khách hàng, điều này có thể dẫn đến mức độ tương tác cao hơn và giảm sự gián đoạn làm tăng doanh thu lâu dài của bạn.

00:01:44.000 --> 00:01:52.000
Hôm nay, nếu khách hàng cần trợ giúp cho việc mua hàng trong ứng dụng của họ, họ có thể liên hệ với Apple hoặc bạn, nhà phát triển.

00:01:52.000 --> 00:02:05.000
Và dựa trên kịch bản, khách hàng có thể sử dụng trang web tự phục vụ của Apple, "Report-A-Problem" hoặc liên hệ với bộ phận Hỗ trợ của Apple qua điện thoại, email hoặc trò chuyện để giải quyết vấn đề.

00:02:05.000 --> 00:02:14.000
Ngoài ra, họ cũng có thể liên hệ với bạn qua phương tiện truyền thông xã hội, diễn đàn hoặc trò chuyện trực tiếp bên trong ứng dụng.

00:02:14.000 --> 00:02:20.000
Và khi họ liên hệ với bạn về việc mua hàng trong ứng dụng, vấn đề có thể rơi vào một trong những tình huống này.

00:02:20.000 --> 00:02:39.000
Từ việc xác định các giao dịch mua hoặc hoàn tiền trong ứng dụng của khách hàng, đến việc bồi thường cho sự cố dịch vụ hoặc ngừng hoạt động hoặc giúp họ quản lý đăng ký hoặc yêu cầu hoàn tiền, những câu hỏi này bao gồm hầu hết các tình huống hỗ trợ và tôi sẽ xem xét từng tình huống chi tiết hơn.

00:02:39.000 --> 00:02:46.000
Hãy bắt đầu với kịch bản đầu tiên, làm thế nào để bạn xác định các giao dịch mua được thực hiện bởi khách hàng khi họ liên hệ với bạn lần đầu tiên để được hỗ trợ?

00:02:46.000 --> 00:02:51.000
Bây giờ, nếu bạn đã mua bất kỳ nội dung nào trên App Store, bạn có thể đã thấy email này.

00:02:51.000 --> 00:02:58.000
Hôm nay, khi khách hàng mua hàng trong ứng dụng, họ sẽ nhận được hóa đơn cho giao dịch mua đó qua email.

00:02:58.000 --> 00:03:03.000
Hóa đơn này chứa ID đơn hàng, là duy nhất cho mỗi hóa đơn.

00:03:03.000 --> 00:03:10.000
Và khách hàng có quyền truy cập vào điều này qua email hoặc bằng cách xem lịch sử mua hàng trong cài đặt tài khoản.

00:03:10.000 --> 00:03:25.000
Và bây giờ, khi khách hàng liên hệ với bạn để được hỗ trợ, bạn có thể yêu cầu khách hàng cung cấp ID đơn hàng trên hóa đơn của họ và sử dụng API từ máy chủ đến máy chủ mới để tra cứu các giao dịch mua trong ứng dụng cho hóa đơn do khách hàng trình bày.

00:03:25.000 --> 00:03:32.000
Ngoài việc xác thực hóa đơn, API này cũng giúp bạn xác định bất kỳ vấn đề nào với giao dịch mua trong ứng dụng.

00:03:32.000 --> 00:03:40.000
Ví dụ, nếu hóa đơn chứa bất kỳ giao dịch mua nào đã được App Store hoàn trả.

00:03:40.000 --> 00:03:44.000
Bây giờ, chúng ta hãy xem API này hoạt động như thế nào.

00:03:44.000 --> 00:04:01.000
Vì vậy, bây giờ, khi khách hàng liên hệ với nhóm hỗ trợ của bạn, bạn có thể yêu cầu khách hàng cung cấp ID đơn đặt hàng hóa đơn và máy chủ của bạn có thể gọi API tra cứu hóa đơn và để đáp lại, App Store trả về trạng thái và các giao dịch cho hóa đơn đó được ký ở định dạng JWS.

00:04:01.000 --> 00:04:08.000
Và cuối cùng, sử dụng thông tin này, bạn có thể cung cấp hỗ trợ cho các giao dịch mua trong ứng dụng chính xác.

00:04:08.000 --> 00:04:20.000
Để triển khai API này trên máy chủ của bạn, bạn có thể gọi điểm cuối tra cứu với ID đơn hàng hóa đơn trong URL và ID Apple cho ứng dụng trong yêu cầu.

00:04:20.000 --> 00:04:29.000
Phản hồi bao gồm một đối tượng signedTransactions, chứa các giao dịch cho hóa đơn đó được ký ở định dạng JWS.

00:04:29.000 --> 00:04:35.000
Bạn có thể giải mã tải trọng cho mỗi giao dịch để biết chi tiết về giao dịch mua.

00:04:35.000 --> 00:04:39.000
Bây giờ, chúng ta hãy xem xét kỹ hơn trường trạng thái mới.

00:04:39.000 --> 00:04:43.000
Trường này xác định trạng thái tổng thể của hóa đơn.

00:04:43.000 --> 00:04:59.000
Các giá trị có thể là 0, có nghĩa là hóa đơn hợp lệ và chứa các giao dịch cho ID đơn đặt hàng này, 1, có nghĩa là ID đơn hàng không hợp lệ và 2, có nghĩa là hóa đơn hợp lệ, nhưng không tìm thấy giao dịch phù hợp nào cho ID đơn hàng này.

00:04:59.000 --> 00:05:05.000
Bây giờ, hãy xem lại một ví dụ về cách bạn có thể sử dụng phản hồi từ API này.

00:05:05.000 --> 00:05:15.000
Đây là cơ sở dữ liệu tài khoản khách hàng mẫu nơi bạn có thể lưu trữ originalTransactionId cho giao dịch mua trong ứng dụng của mỗi khách hàng, cùng với ID sản phẩm và ngày mua hàng.

00:05:15.000 --> 00:05:25.000
Sử dụng API này, bạn có thể liên kết ID đơn đặt hàng hóa đơn với các giao dịch mua trong ứng dụng của khách hàng khi họ liên hệ với bạn về một vấn đề.

00:05:25.000 --> 00:05:36.000
Ví dụ: nếu khách hàng này đã mua tiền xu trong ứng dụng của bạn và nếu họ liên hệ với bạn để được hỗ trợ, bạn có thể lưu trữ ID đơn đặt hàng hóa đơn cho tiền xu đã mua.

00:05:36.000 --> 00:05:43.000
Bây giờ, hãy thực hiện một kịch bản mà bạn có OriginalTransactionId cho khách hàng và bạn muốn tra cứu các khoản hoàn lại trước đây của họ.

00:05:43.000 --> 00:05:52.000
Hôm nay, bạn có thể dựa vào thông báo máy chủ verifyReceipt API hoặc App Store để nhận thông báo về việc hoàn tiền.

00:05:52.000 --> 00:06:02.000
Tuy nhiên, nếu có sự cố ngừng hoạt động và máy chủ của bạn không nhận được bất kỳ thông báo nào từ App Store, làm cách nào để tra cứu số tiền hoàn lại trước đây của khách hàng này?

00:06:02.000 --> 00:06:14.000
Chúng tôi đang giới thiệu một API từ máy chủ đến máy chủ mới để tra cứu các giao dịch được hoàn lại cho khách hàng bằng cách sử dụng ID giao dịch ban đầu cho bất kỳ giao dịch mua nào trong ứng dụng của họ trong ứng dụng của bạn.

00:06:14.000 --> 00:06:23.000
API này cho phép bạn xử lý sự cố ngừng hoạt động hoặc bảo trì theo lịch trình bằng cách tra cứu tiền hoàn lại bất cứ lúc nào một cách nhanh chóng và dễ dàng.

00:06:23.000 --> 00:06:30.000
Ngoài ra, API này cũng có thể giúp bạn xác định toàn bộ lịch sử hoàn tiền của khách hàng cho ứng dụng của bạn.

00:06:30.000 --> 00:06:41.000
Ví dụ: nếu ứng dụng của bạn cung cấp cả đăng ký và hàng tiêu dùng, API này sẽ trả về tất cả các giao dịch được hoàn lại trên tất cả các loại nội dung của bạn.

00:06:41.000 --> 00:06:53.000
Để triển khai API này trên máy chủ của bạn, bạn tạo yêu cầu với ID giao dịch gốc trong URL và ID Apple cho ứng dụng trong các tham số yêu cầu.

00:06:53.000 --> 00:06:59.000
Phản hồi chứa danh sách các giao dịch được hoàn lại được ký ở định dạng JWS.

00:06:59.000 --> 00:07:07.000
Bạn có thể nhận được tất cả thông tin cần thiết về việc mua hàng bằng cách giải mã tải trọng cho mỗi giao dịch.

00:07:07.000 --> 00:07:22.000
Vì vậy, quay trở lại cơ sở dữ liệu tài khoản khách hàng mẫu, bây giờ bạn có thể sử dụng thông tin được trả về bởi API này để cập nhật các giao dịch được hoàn lại cho khách hàng này bằng ID giao dịch ban đầu.

00:07:22.000 --> 00:07:27.000
Bây giờ, sau khi bạn đã xác định được có vấn đề về dịch vụ, làm thế nào để bạn bồi thường cho khách hàng?

00:07:27.000 --> 00:07:30.000
Hôm nay, có một vài lựa chọn khác nhau để xem xét.

00:07:30.000 --> 00:07:38.000
Đối với các trò chơi, bạn có thể cung cấp một số hình thức bồi thường trong ứng dụng dưới dạng tiền ảo hoặc nội dung.

00:07:38.000 --> 00:07:43.000
Hoặc đối với đăng ký, bạn có thể muốn giảm giá cho lần gia hạn tiếp theo của họ.

00:07:43.000 --> 00:07:47.000
Vậy, làm thế nào để bạn bồi thường cho người đăng ký cho một vấn đề dịch vụ?

00:07:47.000 --> 00:08:01.000
Trong iOS 14, chúng tôi đã giới thiệu một tính năng mới gọi là Mã ưu đãi đăng ký để giúp bạn có được, giữ chân và giành lại người đăng ký bằng cách cung cấp đăng ký giảm giá hoặc miễn phí trong thời gian giới hạn.

00:08:01.000 --> 00:08:07.000
Bạn có thể phân phối các mã độc đáo, một lần này bằng cách sử dụng các kênh trực tuyến hoặc ngoại tuyến.

00:08:07.000 --> 00:08:16.000
Và đối với các vấn đề dịch vụ khách hàng, bạn có thể cung cấp mã ưu đãi như một khoản bồi thường cho vấn đề, giúp cải thiện khả năng duy trì.

00:08:16.000 --> 00:08:21.000
Bạn cũng có thể sử dụng điều này như một cơ hội để đề xuất một đăng ký thay thế.

00:08:21.000 --> 00:08:27.000
Ví dụ, một kế hoạch có thời hạn dài hơn cung cấp nhiều giá trị hơn với mức giá thấp hơn.

00:08:27.000 --> 00:08:42.000
Và khách hàng trên iOS 14 và iPadOS 14 trở lên có thể đổi mã ưu đãi trên App Store thông qua URL đổi mã một lần hoặc trong ứng dụng của bạn, nếu bạn đã triển khai presentCodeRedemptionSheet API trong StoreKit.

00:08:42.000 --> 00:08:47.000
Bây giờ, chúng ta hãy xem xét quy trình đổi mã mẫu trong ứng dụng của bạn.

00:08:47.000 --> 00:08:53.000
Giao diện người dùng tùy chỉnh duy nhất bạn cần tạo là giao diện người dùng bắt đầu quy trình đổi quà.

00:08:53.000 --> 00:08:57.000
Có một số nơi tự nhiên để cung cấp giao diện người dùng này.

00:08:57.000 --> 00:09:06.000
Ví dụ: trong màn hình cài đặt ứng dụng của bạn hoặc bên trong chức năng trò chuyện trực tiếp khi khách hàng đang trò chuyện với đại lý hỗ trợ của bạn.

00:09:06.000 --> 00:09:20.000
Sau khi khách hàng nhấn vào nút đổi, hệ thống sẽ tự động cung cấp một loạt các màn hình đổi mã, giống như màn hình được hiển thị ở đây, để khách hàng nhập mã và đổi ưu đãi.

00:09:20.000 --> 00:09:32.000
Bây giờ, chúng ta hãy xem xét một kịch bản xảy ra sự cố ngừng hoạt động hoặc một sự kiện đã bị hủy bỏ, điều này có thể phổ biến hơn đối với các ứng dụng dựa trên phát trực tuyến, chẳng hạn như thể thao, truyền hình trực tiếp hoặc video.

00:09:32.000 --> 00:09:37.000
Đối với những sự cố ngừng hoạt động hoặc các sự kiện bị hủy này, làm thế nào bạn có thể xoa dịu khách hàng?

00:09:37.000 --> 00:09:46.000
Chúng tôi đang giới thiệu một API từ máy chủ đến máy chủ mới cho các đăng ký tự động gia hạn, để kéo dài ngày gia hạn cho đăng ký hoạt động trả phí.

00:09:46.000 --> 00:09:57.000
Với API này, bạn có thể cung cấp dịch vụ miễn phí cho khách hàng của mình thêm thời gian, có thể được sử dụng như một sự xoa dịu cho sự cố ngừng hoạt động tạm thời hoặc các vấn đề dịch vụ.

00:09:57.000 --> 00:10:09.000
Bạn có thể chuyển ngày gia hạn đăng ký của khách hàng hai lần mỗi năm dương lịch, mỗi ngày lên đến 90 ngày trong tương lai, giúp bạn linh hoạt giải quyết các vấn đề dịch vụ hoặc ngừng hoạt động.

00:10:09.000 --> 00:10:18.000
Lưu ý rằng thời gian gia hạn không được tính vào một năm dịch vụ trả phí cần thiết để nhận được tỷ lệ tiền thu được 85%.

00:10:18.000 --> 00:10:23.000
Bây giờ, hãy xem cách bạn có thể triển khai API này trên máy chủ của mình.

00:10:23.000 --> 00:10:34.000
Yêu cầu cho API này yêu cầu ID giao dịch gốc cho đăng ký của khách hàng, thời lượng gia hạn, tính bằng ngày và mã lý do cho tiện ích mở rộng.

00:10:34.000 --> 00:10:51.000
Phản hồi chứa ID giao dịch đã được chuyển trong yêu cầu, ID mục dòng đơn đặt hàng web để gia hạn mở rộng, cờ thành công để cho biết liệu yêu cầu có thành công hay không và ngày có hiệu lực để gia hạn nếu yêu cầu thành công.

00:10:51.000 --> 00:10:56.000
Bây giờ, chúng ta hãy xem xét hai kịch bản khác nhau mà bạn có thể sử dụng API này.

00:10:56.000 --> 00:11:12.000
Trong trường hợp đầu tiên, khi khách hàng liên hệ với nhóm hỗ trợ của bạn về sự cố dịch vụ hoặc sự cố ngừng hoạt động, bạn có thể xoa dịu khách hàng bằng cách gọi API này và để đáp lại, App Store mở rộng đăng ký và thông báo cho khách hàng qua email.

00:11:12.000 --> 00:11:33.000
Hoặc kịch bản thứ hai, nếu có sự hủy bỏ đối với một trận đấu thể thao do các tình huống không lường trước được hoặc gián đoạn sự kiện được phát trực tiếp, nhóm hỗ trợ của bạn có thể chủ động sử dụng API này và để đáp lại, App Store mở rộng đăng ký và thông báo cho khách hàng qua email.

00:11:33.000 --> 00:11:42.000
Bây giờ, đối với một tình huống mà khách hàng muốn quản lý đăng ký của họ, làm thế nào bạn có thể cho phép khách hàng quản lý đăng ký của họ ngay bên trong ứng dụng?

00:11:42.000 --> 00:11:56.000
Chúng tôi đang giới thiệu một API StoreKit 2 mới để hiển thị trang quản lý đăng ký, cho phép bạn cung cấp chức năng quản lý đăng ký ngay trong ứng dụng của mình mà không cần chuyển hướng khách hàng đến App Store.

00:11:56.000 --> 00:12:08.000
Tùy chọn, bạn cũng có thể trình bày ưu đãi lưu trước khi họ thấy trang quản lý đăng ký hoặc khảo sát thoát sau khi họ hủy để có lý do hủy.

00:12:08.000 --> 00:12:16.000
Và với API này, bạn cũng có thể kiểm tra việc quản lý các giao dịch mua đăng ký trong môi trường hộp cát.

00:12:16.000 --> 00:12:20.000
API này thực sự đơn giản để thực hiện và nó cần một dòng mã.

00:12:20.000 --> 00:12:28.000
Bạn chỉ cần gọi phương thức showManageSubscriptions() trong StoreKit 2 để hiển thị trang quản lý đăng ký.

00:12:28.000 --> 00:12:33.000
Bây giờ, chúng ta hãy xem một giao diện người dùng quản lý đăng ký mẫu trong ứng dụng của bạn.

00:12:33.000 --> 00:12:38.000
Trong cài đặt tài khoản, chúng tôi có thể thêm một tùy chọn để người dùng quản lý đăng ký của họ.

00:12:38.000 --> 00:12:49.000
Khi khách hàng nhấn vào nút này, App Store sẽ hiển thị trang quản lý đăng ký hiện có, với đăng ký hiện đang hoạt động và các tùy chọn gia hạn.

00:12:49.000 --> 00:13:01.000
Đây là cùng một chế độ xem mà khách hàng quen thuộc khi họ truy cập quản lý đăng ký trong cài đặt tài khoản trong App Store, nơi họ có thể xem, nâng cấp, hạ cấp hoặc hủy đăng ký của mình.

00:13:01.000 --> 00:13:10.000
Bây giờ, nếu khách hàng chọn hủy đăng ký của họ, họ sẽ thấy màn hình xác nhận với chi tiết hủy và ngày hết hạn dịch vụ.

00:13:10.000 --> 00:13:22.000
Và đối với bất kỳ hành động nào mà người dùng có thể thực hiện trên trang này, máy chủ của bạn sẽ nhận được thông báo máy chủ App Store và ứng dụng của bạn sẽ được thông báo nếu bạn đã triển khai API StoreKit 2 mới.

00:13:22.000 --> 00:13:31.000
Cuối cùng, nếu một khách hàng không hài lòng với giao dịch mua của họ và muốn yêu cầu hoàn lại tiền, họ không cần phải rời khỏi ứng dụng của bạn để được trợ giúp.

00:13:31.000 --> 00:13:36.000
Vậy, làm thế nào bạn có thể cho phép khách hàng yêu cầu hoàn lại tiền bên trong ứng dụng của bạn?

00:13:36.000 --> 00:13:47.000
Chúng tôi hiện đang giới thiệu một API StoreKit 2 mới được gọi là beginRefundRequest cho phép khách hàng yêu cầu hoàn lại tiền cho giao dịch mua trong ứng dụng trực tiếp từ bên trong ứng dụng của bạn.

00:13:47.000 --> 00:13:55.000
Và nếu việc hoàn tiền được chấp thuận, ứng dụng của bạn sẽ được thông báo và máy chủ của bạn nhận được thông báo HOÀN TIỀN từ App Store.

00:13:55.000 --> 00:14:02.000
Hoặc nếu việc hoàn tiền bị từ chối, máy chủ của bạn sẽ nhận được thông báo HOÀN TIỀN MỚI.

00:14:02.000 --> 00:14:11.000
Và lần đầu tiên, sử dụng API này, bây giờ bạn có thể bắt đầu và kiểm tra hoàn tiền trong hộp cát, ngay trong ứng dụng.

00:14:11.000 --> 00:14:20.000
Để triển khai API này, bạn chỉ cần gọi phương thức beginRefundRequest với ID giao dịch cho giao dịch mua đó.

00:14:20.000 --> 00:14:26.000
Và sau khi yêu cầu được gửi, bạn có thể xử lý lỗi bằng cách sử dụng câu lệnh do-catch.

00:14:26.000 --> 00:14:39.000
Ví dụ: nếu đây là yêu cầu trùng lặp cho một giao dịch đã được hoàn trả hoặc nếu yêu cầu không thành công vì một số lý do khác, mã lỗi phản ánh trạng thái của yêu cầu hoàn tiền.

00:14:39.000 --> 00:14:43.000
Đây là giao diện người dùng yêu cầu hoàn tiền mẫu trong ứng dụng của bạn.

00:14:43.000 --> 00:14:48.000
Trong trang Trợ giúp, bây giờ có một tùy chọn mới để "Yêu cầu Hoàn tiền".

00:14:48.000 --> 00:14:54.000
Sau khi lựa chọn, ứng dụng sẽ hiển thị các giao dịch mua cho khách hàng đó để yêu cầu hoàn lại tiền.

00:14:54.000 --> 00:15:09.000
Và nếu giao dịch mua tăng điện không hoạt động như mong đợi, khách hàng có thể nhấn vào giao dịch mua đó để gọi bảng yêu cầu hoàn tiền, trong đó có chi tiết mua hàng và danh sách các mã lý do để khách hàng lựa chọn.

00:15:09.000 --> 00:15:23.000
Sau khi yêu cầu được gửi, ngoài màn hình xác nhận trong ứng dụng, App Store cũng gửi cho khách hàng một email có liên kết đến "Báo cáo sự cố" của Apple, nơi họ có thể kiểm tra trạng thái hoàn tiền của mình.

00:15:23.000 --> 00:15:34.000
Vì vậy, với các API mới, giờ đây bạn có thể cung cấp hỗ trợ theo ngữ cảnh và liền mạch cho các giao dịch mua trong ứng dụng ngay trong ứng dụng của mình và trên các kênh hỗ trợ khác.

00:15:34.000 --> 00:15:47.000
Cung cấp hỗ trợ tốt làm tăng khả năng giữ chân tổng thể, cải thiện sự hài lòng của khách hàng, dẫn đến mức độ tương tác cao hơn và cuối cùng là xếp hạng và đánh giá tích cực hơn.

00:15:47.000 --> 00:15:50.000
Nói cách khác, đó là một trải nghiệm tốt hơn cho tất cả mọi người.

00:15:50.000 --> 00:16:02.000
Bây giờ, chúng tôi đã nói về cách bạn có thể cung cấp cho khách hàng một cách để yêu cầu hoàn tiền bằng cách sử dụng API yêu cầu hoàn tiền mới, nhưng có rất nhiều điều để hoàn tiền xảy ra sau khi bắt đầu yêu cầu.

00:16:02.000 --> 00:16:10.000
Vì vậy, tôi sẽ mời đồng nghiệp của mình, Joe, nói nhiều hơn về việc xử lý hoàn tiền và một cơ hội mới liên quan đến quyết định hoàn tiền.

00:16:10.000 --> 00:16:12.000
Cảm ơn, Manjeet.

00:16:12.000 --> 00:16:16.000
Xin chào, tên tôi là Joe Mani, và tôi là quản lý chương trình tại App Store.

00:16:16.000 --> 00:16:20.000
Hoàn tiền là một chủ đề nhạy cảm, và ở đây tại App Store, chúng tôi rất coi trọng nó.

00:16:20.000 --> 00:16:26.000
Nó ảnh hưởng đến một tỷ lệ nhỏ các giao dịch, nhưng chúng tôi hiểu tác động của nó đối với các ứng dụng của bạn.

00:16:26.000 --> 00:16:32.000
Tôi muốn bắt đầu với một bản tóm tắt nhanh về các thông báo hoàn tiền, được đưa ra tại WWDC20.

00:16:32.000 --> 00:16:35.000
Sau đó, tôi sẽ cung cấp một số thông tin chi tiết về cách chúng tôi xử lý việc hoàn tiền.

00:16:35.000 --> 00:16:42.000
Cuối cùng, chúng ta sẽ nói về một tính năng mới, tính năng này sẽ giúp bạn thông báo và cải thiện quy trình hoàn tiền.

00:16:42.000 --> 00:16:47.000
Trong WWDC20, chúng tôi đã công bố một loại thông báo mới có tên REFUND.

00:16:47.000 --> 00:16:54.000
Sau khi khách hàng được hoàn tiền, App Store sẽ gửi thông báo HOÀN TIỀN đến máy chủ của bạn.

00:16:54.000 --> 00:17:01.000
Nếu bạn đã định cấu hình URL máy chủ trong App Store Connect, bạn có thể đã nhận được thông báo HOÀN TIỀN.

00:17:01.000 --> 00:17:08.000
Khi máy chủ của bạn nhận được thông báo này, hãy phản hồi bằng mã trạng thái HTTP 200 thành công.

00:17:08.000 --> 00:17:14.000
Sau đó, bạn có thể thực hiện hành động thích hợp để hoàn tiền để phản hồi.

00:17:14.000 --> 00:17:22.000
Kể từ khi ra mắt thông báo HOÀN TIỀN, chúng tôi đã có cơ hội nghe phản hồi của bạn và tôi muốn chia sẻ một số phương pháp hay nhất với bạn.

00:17:22.000 --> 00:17:26.000
Tìm chiến lược phản hồi tốt nhất phù hợp với mô hình kinh doanh của bạn.

00:17:26.000 --> 00:17:38.000
Ví dụ: nếu người dùng mua tiền trong trò chơi và sau đó yêu cầu hoàn lại tiền, bạn có thể khấu trừ số dư từ tài khoản của họ sau khi máy chủ của bạn nhận được thông báo HOÀN TIỀN.

00:17:38.000 --> 00:17:46.000
Trong khi, đối với đăng ký, bạn có thể thu hồi quyền truy cập vào dịch vụ sau khi đăng ký đã được hoàn trả và hủy bỏ.

00:17:46.000 --> 00:17:52.000
Xem xét tác động đến thiết kế trò chơi khi xác định chiến lược phản hồi của bạn.

00:17:52.000 --> 00:18:05.000
Sử dụng các công cụ tiếp thị và quảng cáo để thu hút lại khách hàng và luôn cung cấp thông điệp rõ ràng cho khách hàng của bạn trên các kênh giao tiếp của bạn về bất kỳ hành động nào bạn đã thực hiện.

00:18:05.000 --> 00:18:11.000
Hãy xem xét dòng thời gian hoàn tiền mẫu cho một ứng dụng cung cấp tiền xu dưới dạng tiền tệ trong trò chơi.

00:18:11.000 --> 00:18:17.000
Sau khi khách hàng mua 100 xu, họ có thể ngay lập tức chi tiêu những đồng xu đó trong trò chơi của bạn.

00:18:17.000 --> 00:18:25.000
Nếu khách hàng sau đó yêu cầu hoàn tiền bằng API hoàn tiền yêu cầu mới hoặc bằng cách liên hệ với Bộ phận Hỗ trợ của Apple.

00:18:25.000 --> 00:18:33.000
Và nếu việc hoàn tiền được chấp thuận, App Store sẽ hoàn tiền, gửi cho máy chủ của bạn thông báo hoàn tiền và cũng thông báo cho khách hàng.

00:18:33.000 --> 00:18:37.000
Và điều này thường xảy ra trong vòng 48 giờ.

00:18:37.000 --> 00:18:44.000
Bây giờ, chúng ta hãy xem xét những gì xảy ra sau khi yêu cầu hoàn tiền và trước khi App Store đưa ra quyết định.

00:18:44.000 --> 00:18:51.000
Ở cấp độ cao, mỗi yêu cầu hoàn tiền sẽ thông qua Hệ thống Quyết định Hoàn tiền của chúng tôi để đưa ra quyết định.

00:18:51.000 --> 00:19:00.000
Hệ thống Quyết định Hoàn tiền bao gồm thông tin về giao dịch đang được đề cập và các yếu tố khác, chẳng hạn như lịch sử mua hàng và hoàn tiền của khách hàng.

00:19:00.000 --> 00:19:12.000
Bây giờ, chúng tôi đã nghe từ bạn rằng bạn muốn có vai trò tích cực hơn trong các quyết định hoàn tiền, vì vậy chúng tôi rất vui mừng thông báo một tính năng mới mà bạn sẽ cải thiện và thông báo quy trình hoàn tiền.

00:19:12.000 --> 00:19:20.000
Với API tiêu dùng mới, bạn có thể chia sẻ thông tin về giao dịch mua trong ứng dụng của khách hàng với App Store.

00:19:20.000 --> 00:19:33.000
Khi khách hàng yêu cầu hoàn lại tiền cho giao dịch mua trong ứng dụng tiêu hao, App Store sẽ gửi cho máy chủ của bạn một thông báo mới có tên LÀ YÊU CẦU TIÊU DÙNG, để bạn trả lời lại dữ liệu tiêu dùng.

00:19:33.000 --> 00:19:41.000
Trong hầu hết các trường hợp, khách hàng bắt đầu tiêu thụ nội dung ngay sau khi họ mua và biết thông tin này rất hữu ích trong quá trình quyết định hoàn tiền.

00:19:41.000 --> 00:19:50.000
Đảm bảo gửi thông tin tiêu dùng đến App Store sau 12 giờ nhận được YÊU CẦU TIÊU DÙNG, để có thể sử dụng thông báo quyết định hoàn tiền.

00:19:50.000 --> 00:19:55.000
Bây giờ, chúng ta hãy xem những trường nào được bao gồm trong dữ liệu tiêu dùng.

00:19:55.000 --> 00:20:03.000
Tải trọng tiêu thụ chứa các điểm dữ liệu sau, mỗi điểm giúp thông báo quyết định hoàn tiền.

00:20:03.000 --> 00:20:09.000
Đầu tiên, bạn bao gồm ID giao dịch gốc cho giao dịch mua trong ứng dụng trong URL yêu cầu.

00:20:09.000 --> 00:20:22.000
Đặt trường customerConsented thành "true" nếu người dùng đồng ý gửi dữ liệu API tiêu dùng được yêu cầu cho Apple, để Apple sử dụng dữ liệu đó trong việc ra quyết định.

00:20:22.000 --> 00:20:24.000
Lĩnh vực trạng thái tiêu dùng rất quan trọng.

00:20:24.000 --> 00:20:30.000
Sử dụng nó để cho biết liệu người dùng đã sử dụng giao dịch mua trong ứng dụng một phần, đầy đủ hay hoàn toàn không.

00:20:30.000 --> 00:20:41.000
Ví dụ: nếu ứng dụng của bạn có một nền tảng trao đổi có trao đổi hoặc có giao dịch mua trong ứng dụng đã được chuyển từ tài khoản này sang tài khoản khác, nó được coi là đã tiêu thụ.

00:20:41.000 --> 00:20:47.000
Trường nền tảng tiêu dùng xác định xem ứng dụng của bạn có phải là đa nền tảng hay không và nó được tiêu thụ ở đâu.

00:20:47.000 --> 00:20:58.000
Sử dụng trường sampleContent để cho biết liệu bạn đã cung cấp mẫu hoặc bản dùng thử miễn phí cho người dùng hay người dùng có được mua hàng trong ứng dụng tương tự trong ứng dụng hay không.

00:20:58.000 --> 00:21:09.000
Ngoài ra, hãy sử dụng trường này để cho biết liệu người dùng có được cung cấp thông tin về giao dịch mua trong ứng dụng và cách chơi hoặc cơ chế trò chơi dự kiến trước khi mua hay không.

00:21:09.000 --> 00:21:17.000
Sử dụng trường Trạng thái giao hàng để cho biết giao dịch mua trong ứng dụng đã được giao thành công cho khách hàng và nó hoạt động bình thường.

00:21:17.000 --> 00:21:20.000
AppAccountToken là một trường mới được giới thiệu trong StoreKit 2.

00:21:20.000 --> 00:21:31.000
Đây sẽ là UUID được liên kết với tài khoản người dùng của ứng dụng mà bạn tạo đang bắt đầu mua hàng và tiêu thụ nội dung để mua hàng.

00:21:31.000 --> 00:21:43.000
Các trường còn lại bao gồm thông tin về thời gian người dùng đã có tài khoản, thời gian họ đã chơi trong ứng dụng của bạn, tổng chi tiêu và trạng thái hiện tại của tài khoản của họ.

00:21:43.000 --> 00:21:57.000
Đối với yêu cầu hoàn tiền, có ba thông báo máy chủ App Store liên quan: thông báo YÊU CẦU TIÊU DÙNG mới để thông báo cho bạn khi yêu cầu hoàn tiền đã được bắt đầu cho giao dịch mua trong ứng dụng tiêu hao.

00:21:57.000 --> 00:22:05.000
Đối với tất cả các loại nội dung, thông báo HOÀN TIỀN sẽ thông báo cho bạn khi hoàn tiền được phát hành cho khách hàng.

00:22:05.000 --> 00:22:15.000
Và đối với tất cả các loại nội dung, thông báo HOÀN TIỀN-DECLINED thông báo cho bạn khi khoản tiền hoàn lại bị từ chối cho một yêu cầu được bắt đầu bằng API Store Kit.

00:22:15.000 --> 00:22:17.000
Bây giờ chúng ta hãy quay lại thời hạn hoàn tiền.

00:22:17.000 --> 00:22:28.000
Khi khách hàng yêu cầu hoàn lại tiền cho giao dịch mua trong ứng dụng tiêu hao, máy chủ App Store bây giờ sẽ gửi cho máy chủ của bạn thông báo yêu cầu tiêu dùng.

00:22:28.000 --> 00:22:36.000
Máy chủ của bạn phản hồi lại trong vòng 12 giờ với dữ liệu tiêu thụ trở lại máy chủ App Store, sau đó sẽ được sử dụng để quyết định.

00:22:36.000 --> 00:22:50.000
Nếu nó được chấp thuận, App Store sẽ gửi thông báo HOÀN TIỀN và sau khi máy chủ của bạn phản hồi bằng phản hồi HTTP OK, bạn có thể thực hiện hành động thích hợp cho khoản hoàn tiền đó.

00:22:50.000 --> 00:22:56.000
Và API tiêu thụ có sẵn cả trong sản xuất và thử nghiệm trong hộp cát kể từ hôm nay.

00:22:56.000 --> 00:23:02.000
Bây giờ hãy đề cập đến một số lợi ích của việc gửi thông tin đến Apple với API Tiêu dùng mới.

00:23:02.000 --> 00:23:08.000
Có được các điểm dữ liệu này sẽ giúp tăng tính minh bạch và cải thiện quy trình hoàn tiền tổng thể của chúng tôi.

00:23:08.000 --> 00:23:13.000
Điều này, đến lượt nó, cung cấp một kết quả tổng thể tốt hơn cho khách hàng của bạn.

00:23:13.000 --> 00:23:22.000
Ngoài ra, với thông báo HOÀN TIỀN mới, bạn có nhiều cơ hội hơn để tiếp cận khách hàng của mình, do đó tăng cường giao tiếp tổng thể.

00:23:22.000 --> 00:23:28.000
Bây giờ, tôi muốn chuyển nó lại cho đồng nghiệp của tôi, Manjeet, để chia sẻ một số điểm mấu chốt từ mọi thứ chúng tôi đã đề cập.

00:23:28.000 --> 00:23:31.000
Vì vậy, chúng tôi đã đề cập đến rất nhiều chủ đề ngày hôm nay.

00:23:31.000 --> 00:23:34.000
Hãy để tôi xem qua những điều quan trọng rút ra cho phiên này.

00:23:34.000 --> 00:23:46.000
Với API StoreKit mới, giờ đây bạn có thể triển khai giao diện người dùng trợ giúp tùy chỉnh trong ứng dụng của mình để khách hàng yêu cầu hoàn lại tiền và đăng ký, một cách để quản lý đăng ký của họ trong ứng dụng.

00:23:46.000 --> 00:23:53.000
Xem xét và tối ưu hóa hành trình hỗ trợ khách hàng của bạn bằng cách triển khai các API từ máy chủ đến máy chủ mới.

00:23:53.000 --> 00:24:00.000
Ví dụ: sử dụng API tra cứu hóa đơn để xác định và xác thực giao dịch mua trong ứng dụng của khách hàng.

00:24:00.000 --> 00:24:10.000
Và nếu bạn chưa có, hãy thiết lập máy chủ của bạn để nhận tiền hoàn lại, yêu cầu tiêu thụ và các thông báo cập nhật trạng thái khác từ App Store.

00:24:10.000 --> 00:24:17.000
Xác định chiến lược phản hồi hoạt động tốt nhất cho mô hình kinh doanh ứng dụng của bạn để thực hiện hành động khi được hoàn lại tiền.

00:24:17.000 --> 00:24:29.000
Và cuối cùng, bây giờ bạn có thể thông báo cho hệ thống quyết định hoàn tiền của Apple bằng cách phản hồi các thông báo yêu cầu tiêu dùng từ App Store bằng cách gửi dữ liệu tiêu dùng mới nhất.

00:24:29.000 --> 00:24:32.000
Vì vậy, đây là "Hỗ trợ khách hàng và xử lý hoàn tiền."

00:24:32.000 --> 00:24:45.000
Để biết thêm thông tin về API StoreKit 2 mới, hãy xem "Gặp gỡ StoreKit 2" và để biết thêm thông tin về việc xây dựng logic phía máy chủ để mua hàng trong ứng dụng, hãy xem "Quản lý mua hàng trong ứng dụng trên máy chủ của bạn."

00:24:45.000 --> 00:24:49.000
Cảm ơn vì đã lắng nghe hôm nay, và tận hưởng phần còn lại của WWDC.

00:24:49.000 --> 23:59:59.000
[Nhạc gõ].

