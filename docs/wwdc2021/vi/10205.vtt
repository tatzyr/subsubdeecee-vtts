WEBVTT

00:00:00.000 --> 00:00:10.000
Xin chào mọi người.

00:00:10.000 --> 00:00:15.000
Tên tôi là Kieran, và tôi là một kỹ sư Xcode làm việc về công nghệ kiểm soát nguồn.

00:00:15.000 --> 00:00:25.000
Xcode 13 hoàn toàn mô phỏng lại chế độ đánh giá mã và giới thiệu quy trình làm việc cộng tác hoàn toàn mới để giúp bạn cải thiện chất lượng ứng dụng của mình.

00:00:25.000 --> 00:00:30.000
Trong phiên này, tôi sẽ hướng dẫn bạn qua một quy trình làm việc điển hình với ứng dụng Fruta của chúng tôi.

00:00:30.000 --> 00:00:42.000
Chúng tôi sẽ sử dụng các tính năng đánh giá mã và kéo yêu cầu mới trong Xcode 13 để tìm lỗi, nhận phản hồi, tích hợp những thay đổi đó và cung cấp phản hồi cho các đồng nghiệp của tôi.

00:00:42.000 --> 00:00:44.000
Hãy bắt đầu nào.

00:00:44.000 --> 00:00:49.000
Một phần lớn công việc của tôi là xem xét các vấn đề mà người dùng của chúng tôi đã báo cáo.

00:00:49.000 --> 00:00:54.000
Để sửa một lỗi, trước tiên tôi phải hiểu khi nào và tại sao nó bắt đầu xảy ra.

00:00:54.000 --> 00:01:01.000
Bằng cách quay ngược thời gian thông qua các thay đổi mã của mình, tôi thường có thể tìm ra nguyên nhân bằng cách sử dụng chế độ xem lại mã.

00:01:01.000 --> 00:01:08.000
Một trong những đánh giá của App Store mà chúng tôi đã đề cập rằng một số thay đổi giao diện người dùng được thực hiện gần đây đối với ứng dụng của chúng tôi trông không hoàn toàn đúng.

00:01:08.000 --> 00:01:14.000
Tôi có một ý tưởng khá hay về các vấn đề là gì, vì vậy tôi sẽ tiếp tục và bắt đầu thực hiện một số thay đổi.

00:01:14.000 --> 00:01:19.000
Khi tôi bắt đầu nhập, những thay đổi xuất hiện trong máng xối của trình chỉnh sửa nguồn.

00:01:19.000 --> 00:01:26.000
Tôi thấy thực sự hữu ích khi biết các giá trị trước đó là gì để tôi có thể có ý tưởng tốt về mọi thứ đã thay đổi.

00:01:26.000 --> 00:01:29.000
Đối với điều này, tôi có thể chuyển sang chế độ xem lại mã.

00:01:29.000 --> 00:01:40.000
Chỉ cần nhấp vào nút Đánh giá mã trong thanh trình chỉnh sửa để xem so sánh các chỉnh sửa cục bộ với bản sửa đổi gần đây nhất.

00:01:40.000 --> 00:01:52.000
Khi tôi đang làm việc trên tài liệu của mình, chế độ xem lại mã liên tục làm nổi bật các chỉnh sửa tôi đang thực hiện để tôi luôn biết những gì đã thay đổi kể từ lần cam kết cuối cùng của mình.

00:01:52.000 --> 00:01:59.000
Khi tôi đã thực hiện nhiều chỉnh sửa đối với một tệp, điều khiển bước ở thanh dưới cùng sẽ cho tôi biết tôi đã thực hiện bao nhiêu thay đổi.

00:01:59.000 --> 00:02:04.000
Nhấp vào biểu tượng mũi tên sẽ nhảy giữa các thay đổi mã của tôi.

00:02:04.000 --> 00:02:08.000
Bằng cách đó, tôi không cần phải tự mình cuộn qua tệp để tìm kiếm các chỉnh sửa.

00:02:08.000 --> 00:02:14.000
Đôi khi có thể dễ dàng hơn để xem những gì đã thay đổi cạnh nhau, nhưng tôi thích xem những thay đổi của mình trực tuyến hơn.

00:02:14.000 --> 00:02:22.000
Xcode có thể hiển thị cho tôi các thay đổi của tôi theo một trong hai kiểu và tôi có thể lật giữa hai kiểu bằng cách sử dụng menu Trình chỉnh sửa ở trên cùng bên phải.

00:02:22.000 --> 00:02:26.000
Tôi muốn đảm bảo rằng tôi đã gặp mọi vấn đề với lỗi giao diện người dùng.

00:02:26.000 --> 00:02:33.000
Để thực sự tìm hiểu và hiểu lỗi đến từ đâu, tôi cần xem điều gì đã thay đổi giữa các bản phát hành ứng dụng của mình.

00:02:33.000 --> 00:02:39.000
Tôi có thể sử dụng các điều khiển cam kết ở thanh dưới cùng để thiết lập những so sánh đó.

00:02:39.000 --> 00:02:50.000
Xcode 13 cho phép tôi chọn các cam kết trên các chi nhánh, thẻ và vị trí gần đây nhất của mình để tôi có thể dễ dàng xem các thay đổi trong ứng dụng của mình giữa hai thời điểm bất kỳ.

00:02:50.000 --> 00:03:00.000
Tôi thường cắt một nhánh phát hành mỗi khi tôi gửi đến TestFlights hoặc App Store, vì vậy tôi sẽ xem xét hai phiên bản mã của mình liên quan đến bản phát hành đó.

00:03:00.000 --> 00:03:07.000
Với cam kết của tôi được chọn, Xcode cho tôi thấy sự so sánh của hai phiên bản lịch sử của tài liệu của tôi.

00:03:07.000 --> 00:03:14.000
Các màu nổi bật thay đổi thành tím và cam, tương ứng với các cam kết được hiển thị ở thanh dưới cùng.

00:03:14.000 --> 00:03:20.000
Như trước đây, tôi có thể nhảy giữa các thay đổi bằng cách sử dụng điều khiển bước.

00:03:20.000 --> 00:03:25.000
Tôi có thể thấy sự so sánh trực tuyến hoặc cạnh nhau.

00:03:25.000 --> 00:03:33.000
Khi tôi khám phá xong so sánh này, tôi có thể nhanh chóng quay lại những thay đổi gần đây nhất của mình bằng cách sử dụng nút Đặt lại ở thanh dưới cùng.

00:03:33.000 --> 00:03:38.000
Thông thường, những thay đổi mà tôi thực hiện đối với các ứng dụng của mình trải dài trên nhiều tệp.

00:03:38.000 --> 00:03:47.000
Mặc dù nó thực sự hữu ích để khám phá các thay đổi trong một tệp, tôi thường muốn có cái nhìn tổng quan về tất cả các tệp mà tôi đã thay đổi trong toàn bộ dự án của mình.

00:03:47.000 --> 00:03:55.000
Nhờ tab Thay đổi mới trong Bộ điều hướng kiểm soát nguồn, tôi có thể xem danh sách tất cả các tệp tôi đã thay đổi kể từ lần cam kết cuối cùng của mình.

00:03:55.000 --> 00:04:02.000
Nhấp vào bất kỳ cái nào trong số chúng sẽ tự động vào chế độ xem lại mã và hiển thị cho tôi tất cả các thay đổi mà tôi đã thực hiện trong tệp đó.

00:04:02.000 --> 00:04:08.000
Tôi thích lật giữa các tệp để nhanh chóng nhắc nhở bản thân về các chỉnh sửa khác mà tôi đã thực hiện.

00:04:08.000 --> 00:04:16.000
Bây giờ tôi đã biết tại sao ứng dụng của chúng tôi gặp sự cố này khi hiển thị các thành phần, tôi sẽ tiếp tục và tạo một chi nhánh mới với các thay đổi của mình để khắc phục nó.

00:04:16.000 --> 00:04:23.000
Tạo và chuyển đổi chi nhánh là điều tôi làm rất nhiều, và Xcode 13 có một cách mới tuyệt vời để làm điều đó.

00:04:23.000 --> 00:04:30.000
Thanh công cụ của Xcode hiện hiển thị chi nhánh hiện tại của tôi, đây là một lời nhắc nhở hữu ích về những gì tôi đã làm lần cuối.

00:04:30.000 --> 00:04:36.000
Bằng cách nhấp vào nó, tôi có thể nhanh chóng chuyển đổi giữa bất kỳ chi nhánh nào mà tôi đã làm việc gần đây.

00:04:36.000 --> 00:04:51.000
Trong trường hợp này, tôi sẽ sử dụng menu phụ để tạo một nhánh cho bản sửa lỗi của mình.

00:04:51.000 --> 00:04:56.000
Sau khi khám phá lịch sử ở chế độ xem lại mã, tôi đã có thể đưa ra bản sửa lỗi.

00:04:56.000 --> 00:05:01.000
Bây giờ tôi đã có một giải pháp được đề xuất, tôi muốn nhận phản hồi về sự thay đổi mã của mình.

00:05:01.000 --> 00:05:10.000
Vì tôi không hoàn toàn quen thuộc với phần này của cơ sở mã, tôi muốn các đồng đội của mình xác nhận rằng những thay đổi của tôi sẽ không gây ra các vấn đề khác.

00:05:10.000 --> 00:05:14.000
Để cộng tác với các đồng nghiệp của tôi về việc thay đổi mã, tôi sẽ tạo một yêu cầu kéo.

00:05:14.000 --> 00:05:22.000
Tôi có thể làm điều đó ngay từ Xcode 13 bằng cách sử dụng hỗ trợ tích hợp mới cho GitHub và Bitbucket Server.

00:05:22.000 --> 00:05:26.000
Tôi có thể tạo các yêu cầu kéo của mình ngay từ cửa sổ bật lên điều khiển nguồn.

00:05:26.000 --> 00:05:34.000
Xcode sẽ tạo một yêu cầu kéo nháp để hợp nhất với nhánh của tôi vào nhánh ngược dòng mặc định, trong trường hợp này là chính.

00:05:34.000 --> 00:05:39.000
Tôi có thể chuẩn bị yêu cầu kéo của mình với thông tin về bản sửa lỗi trước khi xuất bản nó.

00:05:39.000 --> 00:05:50.000
Những thay đổi mà tôi đã cam kết và đẩy đến chi nhánh của mình sẽ hiển thị trong phần Yêu cầu kéo trong Trình điều hướng thay đổi, cho tôi xem trước các thay đổi sẽ được bao gồm sau khi xuất bản.

00:05:50.000 --> 00:05:58.000
Phần Thay đổi cục bộ cho phép tôi xem các tệp sẽ không được bao gồm trong yêu cầu kéo của tôi cho đến khi tôi cam kết và đẩy chúng.

00:05:58.000 --> 00:06:13.000
Khi tôi hài lòng với nội dung của yêu cầu kéo của mình, tôi sẽ cung cấp cho nó một tiêu đề và một mô tả.

00:06:13.000 --> 00:06:30.000
Tôi muốn yêu cầu một vài đồng đội nói riêng xem xét thay đổi này, vì vậy tôi sẽ nhấp vào nút Người tham gia và gắn thẻ họ là Người đánh giá.

00:06:30.000 --> 00:06:37.000
Khi tôi chờ phản hồi và chuyển sang các chi nhánh khác, Xcode sẽ tìm ra yêu cầu kéo nào để hiển thị.

00:06:37.000 --> 00:06:44.000
Xcode sẽ xác định yêu cầu kéo liên quan dựa trên nhánh nguồn của nó và nhánh hiện tại của bạn.

00:06:44.000 --> 00:06:50.000
Khi bạn chuyển đổi nhánh, Xcode sẽ tự động phát hiện các yêu cầu kéo hiện có.

00:06:50.000 --> 00:06:56.000
Tôi đã công bố yêu cầu kéo của mình cách đây ít lâu và nhóm của tôi đã để lại cho tôi một số phản hồi.

00:06:56.000 --> 00:06:58.000
Hãy xem xét điều đó ngay bây giờ.

00:06:58.000 --> 00:07:07.000
Với yêu cầu kéo được chọn trong Bộ điều hướng thay đổi, tôi có thể xem tổng quan về yêu cầu kéo của mình và mọi thứ đã xảy ra kể từ khi tôi xuất bản nó.

00:07:07.000 --> 00:07:11.000
Nhóm của tôi đã để lại cho tôi một số phản hồi về mã của tôi.

00:07:11.000 --> 00:07:19.000
Tôi có thể trả lời các cuộc thảo luận này nếu tôi thích hoặc nhấp vào "Xem thay đổi" để chuyển thẳng vào tệp ở chế độ xem lại mã.

00:07:19.000 --> 00:07:30.000
Có một số gợi ý tuyệt vời ở đây từ Matt, và bây giờ chúng tôi có cơ hội có cuộc trò chuyện này về yêu cầu kéo của tôi trong Xcode và kết nối trực tiếp với mã nguồn.

00:07:30.000 --> 00:07:35.000
Tôi đã tiếp tục và cập nhật yêu cầu kéo của mình để phản hồi phản hồi.

00:07:35.000 --> 00:07:41.000
Bây giờ, nhìn vào những bình luận mà các đồng đội của tôi đã để lại ở đây, có vẻ như họ đang đồng ý với sự thay đổi mới nhất của tôi.

00:07:41.000 --> 00:07:44.000
Tôi thấy rằng đồng nghiệp của tôi đã chấp thuận yêu cầu kéo này.

00:07:44.000 --> 00:07:48.000
Bây giờ tôi chỉ cần kiểm tra trạng thái của tôi về quy trình làm việc tích hợp liên tục của chúng tôi.

00:07:48.000 --> 00:07:57.000
Vì tôi đang sử dụng Xcode Cloud, tôi cũng có thể thấy trạng thái của quy trình làm việc tích hợp liên tục của mình trong cửa sổ bật lên CI của yêu cầu kéo.

00:07:57.000 --> 00:08:05.000
Tôi có thể nhanh chóng xem bản tóm tắt kết quả kiểm tra của mình và nhấp vào mục nhập sẽ đưa tôi thẳng vào báo cáo Xcode Cloud chi tiết.

00:08:05.000 --> 00:08:13.000
Để biết thêm thông tin về Xcode Cloud và chạy mã của bạn trong CI, hãy xem phiên "Gặp gỡ Xcode Cloud".

00:08:13.000 --> 00:08:21.000
Được rồi, vì tất cả các đồng đội của tôi đã phê duyệt các thay đổi của tôi và tất cả các công việc Xcode Cloud của tôi đã thành công, tôi đã sẵn sàng hợp nhất yêu cầu kéo của mình.

00:08:21.000 --> 00:08:25.000
Tôi sẽ sử dụng các hành động Yêu cầu Kéo và chọn "Hợp nhất".

00:08:25.000 --> 00:08:32.000
Xcode cho phép tôi chọn một chiến lược hợp nhất xác định cách các thay đổi được tích hợp vào nhánh mục tiêu.

00:08:32.000 --> 00:08:35.000
Tôi sẽ chọn mặc định, bao gồm Cam kết Hợp nhất.

00:08:35.000 --> 00:08:40.000
Bạn cũng có thể nhập một thông báo cam kết tùy chọn, nhưng tôi sẽ để nguyên như vậy.

00:08:40.000 --> 00:08:46.000
Mọi thứ có vẻ ổn, vì vậy tôi sẽ hợp nhất nó ngay bây giờ.

00:08:46.000 --> 00:08:50.000
Bây giờ tôi đã hợp nhất yêu cầu kéo của mình, đã đến lúc chuyển trở lại công việc khác.

00:08:50.000 --> 00:08:58.000
Giống như tôi thấy hữu ích khi hỏi các đồng nghiệp của mình phản hồi của họ, họ cũng thường yêu cầu tôi xem lại những thay đổi của họ.

00:08:58.000 --> 00:09:05.000
Ngoài các chi nhánh mà tôi đã làm việc gần đây, cửa sổ bật lên kiểm soát nguồn cũng hiển thị cho tôi các yêu cầu kéo có liên quan đến tôi.

00:09:05.000 --> 00:09:14.000
Tôi sẽ xem các yêu cầu kéo mà tôi đã tạo, nhưng Xcode cũng hiển thị cho tôi bất kỳ yêu cầu kéo nào mà đồng đội của tôi đã yêu cầu tôi xem xét.

00:09:14.000 --> 00:09:20.000
Nhìn vào cửa sổ bật lên kiểm soát nguồn, có vẻ như một trong những đồng đội của tôi đã yêu cầu tôi làm điều đó.

00:09:20.000 --> 00:09:23.000
Hãy kiểm tra chi nhánh của họ và xem xét nó.

00:09:23.000 --> 00:09:32.000
Cũng giống như với các yêu cầu kéo của riêng tôi, tôi có thể xem tổng quan của anh ấy, xem lại trạng thái và thảo luận về các yêu cầu kéo của đồng đội kể từ khi tôi được gắn thẻ.

00:09:32.000 --> 00:09:34.000
Hãy cùng xem những thay đổi của họ.

00:09:34.000 --> 00:09:41.000
Tôi sẽ xem qua các tệp trong Bộ điều hướng thay đổi bên dưới nút yêu cầu kéo.

00:09:41.000 --> 00:09:49.000
Nhấp vào bất kỳ cái nào trong số này sẽ đưa tôi vào chế độ xem lại mã, hiển thị cho tôi những thay đổi sẽ được áp dụng nếu yêu cầu kéo được hợp nhất.

00:09:49.000 --> 00:09:55.000
Tôi có thể để lại bình luận cho anh ấy bên trong trình chỉnh sửa bằng cách nhấp vào thứ cấp và chèn một bình luận mới vào dòng.

00:09:55.000 --> 00:10:05.000
Tôi nghĩ rằng tôi thấy một sự cải thiện tiềm năng trong mã của anh ấy, vì vậy hãy để lại một ghi chú cho đồng đội của tôi.

00:10:05.000 --> 00:10:09.000
Phản hồi của tôi khá nhỏ, và yêu cầu kéo này có vẻ tốt để thực hiện.

00:10:09.000 --> 00:10:18.000
Tôi sẽ phê duyệt nó bằng cách sử dụng các hành động ở trên cùng bên phải.

00:10:18.000 --> 00:10:25.000
Xcode 13 cung cấp những cách mới tuyệt vời để xem lại mã và cộng tác với các đồng nghiệp của bạn.

00:10:25.000 --> 00:10:35.000
Chế độ xem lại mã là một công cụ mạnh mẽ để điều tra các vấn đề và thay đổi hành vi trong ứng dụng của bạn bằng cách cung cấp cho bạn cái nhìn sâu sắc về cách mã nguồn của ứng dụng của bạn đã thay đổi theo thời gian.

00:10:35.000 --> 00:10:46.000
Chế độ xem lại mã cũng cung cấp cho bạn chế độ trình bày nội tuyến mới và các tùy chọn so sánh mở rộng để cho phép quy trình làm việc của bạn linh hoạt hơn.

00:10:46.000 --> 00:10:58.000
Yêu cầu kéo cho phép bạn cộng tác với nhóm của mình để cải thiện chất lượng mã ứng dụng của bạn bằng cách đưa ra và nhận phản hồi mã về các thay đổi của nhóm bạn trước khi hợp nhất chúng vào nhánh chính.

00:10:58.000 --> 00:11:05.000
Các cuộc thảo luận hiển thị ngay trong mã nguồn ứng dụng của bạn, làm cho tinh thần đồng đội thực sự là một phần của quá trình phát triển.

00:11:05.000 --> 00:11:10.000
Cảm ơn bạn, chúc bạn có một WWDC tuyệt vời, và.

00:11:10.000 --> 23:59:59.000
[Nhạc gõ].

