WEBVTT

00:00:02.000 --> 00:00:17.000
Xin chào và chào mừng đến với "Có gì mới trong watchOS 8." Tên tôi là Jake Behrens, và tôi là Nhà truyền giáo Đồng hồ của Apple.

00:00:17.000 --> 00:00:45.000
watchOS 7 đã mở ra nhiều cơ hội mới, với các tính năng như Thiết lập gia đình, cho phép các thành viên trong gia đình duy trì kết nối mà không cần iPhone; nhiều biến chứng, cho phép bạn tạo ra trải nghiệm phong phú hơn cho mặt đồng hồ; và chia sẻ mặt đồng hồ, cho phép bạn tạo mặt đồng hồ hoàn toàn của riêng bạn với các biến chứng

00:00:45.000 --> 00:00:53.000
Trong watchOS 8, chúng tôi đã tập trung vào một số yêu cầu hàng đầu của bạn để giúp bạn tạo ra trải nghiệm ứng dụng Watch đáng kinh ngạc hơn nữa.

00:00:53.000 --> 00:00:57.000
Có rất nhiều điều để nói, vì vậy chúng ta hãy đi sâu vào.

00:00:57.000 --> 00:01:00.000
Đầu tiên là màn hình luôn bật.

00:01:00.000 --> 00:01:12.000
Apple Watch Series 5 và watchOS 6 đã mang Màn hình Luôn Bật lên mặt đồng hồ, và bây giờ trong watchOS 8, chúng tôi đang mang Màn hình Luôn Bật cho các ứng dụng của bạn.

00:01:12.000 --> 00:01:24.000
Tôi cũng sẽ nói về cách bạn có thể tận dụng lợi thế của việc phân phối nền dữ liệu HealthKit và quét Bluetooth để cập nhật các biến chứng liên quan đến sức khỏe.

00:01:24.000 --> 00:01:28.000
Apple Watch đã trở nên độc lập hơn theo thời gian.

00:01:28.000 --> 00:01:33.000
Với watchOS 8, chúng tôi đang đưa thông báo người dùng dựa trên khu vực đến cổ tay.

00:01:33.000 --> 00:01:41.000
Tôi sẽ nói về cách những thứ này có thể mang thông tin liên quan đến cho ai đó vào đúng thời điểm ở đúng nơi.

00:01:41.000 --> 00:01:52.000
Cuối cùng, tôi sẽ nói về một số cải tiến hệ thống và API mới đến với watchOS 8 giúp việc phát triển và sử dụng các ứng dụng Watch thậm chí còn tốt hơn.

00:01:52.000 --> 00:01:55.000
Hãy bắt đầu với Màn hình Luôn Bật.

00:01:55.000 --> 00:02:02.000
Màn hình luôn bật cho phép bạn xem nội dung trên đồng hồ của mình mà không cần phải nâng cổ tay lên.

00:02:02.000 --> 00:02:06.000
Khi bạn nâng cổ tay lên, màn hình sẽ hoạt động trở lại.

00:02:06.000 --> 00:02:12.000
Màn hình luôn bật được hỗ trợ trên Apple Watch Series 5 và 6.

00:02:12.000 --> 00:02:19.000
Trong watchOS 7, trạng thái luôn bật cho thấy giao diện người dùng của ứng dụng của bạn bị mờ khi thời gian được phủ lên.

00:02:19.000 --> 00:02:31.000
Khi bạn xây dựng lại ứng dụng của mình bằng watchOS 8 SDK, giao diện người dùng của ứng dụng của bạn bây giờ sẽ được hiển thị ở trạng thái mờ và ngay lập tức tương tác nếu ai đó nhấn vào giao diện người dùng.

00:02:31.000 --> 00:02:40.000
Ở trạng thái luôn bật, hệ thống sẽ tự động giảm độ sáng tổng thể của màn hình trong khi vẫn giữ cho nó đủ sáng để ai đó nhìn thấy.

00:02:40.000 --> 00:02:51.000
Để giúp bạn điều chỉnh giao diện người dùng ứng dụng của mình với độ sáng giảm này, chúng tôi đang giới thiệu một thuộc tính môi trường SwiftUI được gọi là isLuminanceReduced.

00:02:51.000 --> 00:03:00.000
Bạn có thể phản hồi trạng thái này bằng cách làm nổi bật thông tin đặc biệt quan trọng và ẩn thông tin nên giữ kín.

00:03:00.000 --> 00:03:09.000
Để giúp bạn lặp lại nhanh chóng, chúng tôi đã bao gồm hỗ trợ cho thuộc tính môi trường này trong các bản xem trước Xcode cũng như trong trình giả lập.

00:03:09.000 --> 00:03:15.000
Trong trình giả lập, bạn nhấp vào một nút trong cửa sổ để mô phỏng một sự kiện xuống cổ tay.

00:03:15.000 --> 00:03:22.000
Điều này sẽ thực sự hữu ích khi bạn muốn xem giao diện người dùng của ứng dụng phản ứng như thế nào với trạng thái luôn bật.

00:03:22.000 --> 00:03:28.000
Bây giờ hãy nói về một số nguyên tắc hướng dẫn cho giao diện người dùng ứng dụng của bạn ở trạng thái luôn bật.

00:03:28.000 --> 00:03:34.000
Quá trình chuyển đổi từ trạng thái hoạt động sang trạng thái luôn bật sẽ cảm thấy liền mạch.

00:03:34.000 --> 00:03:39.000
Đừng thay đổi mạnh mẽ giao diện người dùng hoặc sắp xếp lại thông tin.

00:03:39.000 --> 00:03:45.000
Nếu không, quá trình chuyển đổi từ trạng thái luôn bật sang trạng thái hoạt động sẽ chói tai.

00:03:45.000 --> 00:03:50.000
Duy trì ngữ cảnh của giao diện người dùng đang hoạt động là chìa khóa.

00:03:50.000 --> 00:04:00.000
Trong ví dụ này, Fitbod giữ cho giao diện người dùng có căn cứ và nhất quán giữa các trạng thái trong khi làm mờ thêm một số yếu tố sáng hơn và văn bản phụ.

00:04:00.000 --> 00:04:05.000
Tiếp theo, bạn nên làm mờ thông tin và các yếu tố không cần thiết.

00:04:05.000 --> 00:04:17.000
Nếu bạn có văn bản, hình ảnh hoặc nội dung phụ, bạn có thể tự làm mờ chúng hơn nữa để làm nổi bật hơn cho phần thông tin bạn muốn được tô sáng và hiển thị.

00:04:17.000 --> 00:04:32.000
AnyList, giúp bạn tạo và chia sẻ danh sách mua sắm hàng tạp hóa và sắp xếp các công thức nấu ăn, loại bỏ nền tảng của các mục trong danh sách và làm mờ thêm thông tin phụ, như hương vị của sữa chua Hy Lạp hoặc bao nhiêu sữa.

00:04:32.000 --> 00:04:42.000
Điều này cho phép tiêu đề mặt hàng trong danh sách chính thậm chí còn dễ nhìn hơn, vì bạn có thể đang đẩy giỏ hàng hoặc mang theo giỏ hàng.

00:04:42.000 --> 00:05:00.000
Nếu giao diện người dùng của bạn có các yếu tố lớn chứa đầy màu sắc hoặc hình ảnh, bạn có thể muốn giảm các yếu tố đó được thể hiện bằng một nét vẽ hoặc màu mờ, một lần nữa duy trì nền tảng của giao diện người dùng nhưng vẫn cho phép thông tin được đánh dấu của bạn vẫn hiển thị.

00:05:00.000 --> 00:05:10.000
Trong ví dụ này, Pandora làm mờ các điều khiển thứ cấp dọc theo phía dưới và loại bỏ tác phẩm nghệ thuật album và sử dụng màu tương tự nhưng mờ đi.

00:05:10.000 --> 00:05:17.000
Điều này hoạt động rất tốt để làm nổi bật tên bài hát và tên nghệ sĩ trong nháy mắt.

00:05:17.000 --> 00:05:24.000
Khi độ sáng giảm, bạn cũng có thể muốn chỉnh sửa hoặc xóa thông tin nhạy cảm.

00:05:24.000 --> 00:05:36.000
Thông tin như số tài khoản, số dư, được hiển thị trong ví dụ này và một số dữ liệu sức khỏe cá nhân có thể là những ứng cử viên tốt để che khuất khỏi những con mắt tò mò trong khi cổ tay của ai đó bị hạ xuống.

00:05:36.000 --> 00:05:48.000
Để tìm hiểu thêm về chỉnh sửa bằng SwiftUI, hãy xem video "Nguyên tắc của các tiện ích tuyệt vời" trong ứng dụng Nhà phát triển, vì các tiện ích chia sẻ mô hình chỉnh sửa tương tự.

00:05:48.000 --> 00:05:57.000
Cuối cùng, nếu bạn có hình ảnh động đang diễn ra, bạn nên đặt lại chúng vào khung đầu tiên của vòng lặp của chúng hoặc giải quyết chúng ở trạng thái nghỉ ngơi.

00:05:57.000 --> 00:06:00.000
Tốt nhất là không để chúng hoạt hình giữa chừng.

00:06:00.000 --> 00:06:12.000
Bây giờ bạn đã biết cách làm cho giao diện người dùng của mình trông đẹp nhất ở trạng thái luôn bật, hãy nói về khía cạnh kỹ thuật của cách bạn cập nhật giao diện người dùng ứng dụng của mình khi cổ tay bị tắt.

00:06:12.000 --> 00:06:23.000
Đối với các ứng dụng có phiên hoạt động, liên tục như phiên tập luyện hoặc phiên âm thanh cung cấp cho bạn thời gian chạy liên tục, bạn có thể cập nhật giao diện người dùng của mình lên đến một lần mỗi giây.

00:06:23.000 --> 00:06:35.000
Điều này cho phép bạn cập nhật bộ đếm, số liệu và dữ liệu khác, mặc dù sẽ yêu cầu bạn xóa gia số dưới giây, như một phần mười giây.

00:06:35.000 --> 00:06:41.000
Đối với các ứng dụng không có phiên hoạt động, bạn có thể cập nhật tối đa một lần mỗi phút.

00:06:41.000 --> 00:06:54.000
Mặc dù thời gian chờ mặc định trước khi hệ thống quay lại mặt đồng hồ là hai phút, bạn nên lên kế hoạch cho ứng dụng của mình hiển thị lâu hơn thế này, vì khách hàng của bạn có thể thay đổi cài đặt này.

00:06:54.000 --> 00:06:59.000
Vậy làm thế nào để bạn nói với chúng tôi rằng ứng dụng không hoạt động của bạn cần cập nhật giao diện người dùng của nó?

00:06:59.000 --> 00:07:03.000
Vì điều đó, chúng tôi đã tạo một TimelineView trong SwiftUI.

00:07:03.000 --> 00:07:09.000
TimelineView lấy một lịch trình và xây dựng một chế độ xem phụ thuộc vào một ngày.

00:07:09.000 --> 00:07:18.000
Khi nói đến việc lên lịch cập nhật, chúng tôi đã cung cấp một số Lịch trình Dòng thời gian để giúp bạn làm bất cứ điều gì phù hợp với ứng dụng của mình.

00:07:18.000 --> 00:07:22.000
Có Mỗi phút, cập nhật mỗi phút.

00:07:22.000 --> 00:07:31.000
Điều này cũng phù hợp với đồng hồ hệ thống, có nghĩa là mỗi bản cập nhật sẽ diễn ra ở đầu phút trên thiết bị.

00:07:31.000 --> 00:07:39.000
Có Định kỳ, cho phép bạn đặt một khoảng thời gian, chẳng hạn như cứ hai phút một lần hoặc bất cứ điều gì phù hợp với ứng dụng của bạn.

00:07:39.000 --> 00:07:46.000
Nếu bạn sử dụng lịch trình định kỳ trong khoảng thời gian một phút, chúng không được căn chỉnh theo đồng hồ hệ thống.

00:07:46.000 --> 00:07:54.000
Điều này có thể thực sự hữu ích nếu bạn cần tính thời gian cập nhật liên quan đến một sự kiện cụ thể, chẳng hạn như khi bắt đầu tập luyện.

00:07:54.000 --> 00:08:07.000
Có Rõ ràng, nếu bạn có những thay đổi xảy ra vào những thời điểm cụ thể, chẳng hạn như cần cập nhật sau 1,5 phút, sau đó là cập nhật 2,5 phút sau đó, v.v.

00:08:07.000 --> 00:08:09.000
Ngoài ra còn có Tùy chỉnh.

00:08:09.000 --> 00:08:20.000
Điều này có thể hoạt động thực sự tốt nếu bạn có một cái gì đó giống như bộ hẹn giờ cập nhật mỗi phút nhưng bạn muốn nó cập nhật một lần mỗi giây trong 60 giây cuối cùng.

00:08:20.000 --> 00:08:35.000
Nếu ứng dụng của bạn không ở trong phiên hoạt động và bạn nói với chúng tôi rằng bạn cần cập nhật nhanh hơn trong một khoảng thời gian ngắn, như trong 60 giây cuối cùng của bộ đếm thời gian này, hệ thống sẽ cố gắng làm như vậy, nhưng những cập nhật đó không được đảm bảo.

00:08:35.000 --> 00:08:39.000
Cuối cùng, có một lịch trình Hoạt hình.

00:08:39.000 --> 00:08:53.000
Để tìm hiểu thêm về TimelineView, lịch trình, hoạt ảnh và hơn thế nữa, hãy xem video "Có gì mới trong SwiftUI" và "Thêm đồ họa phong phú vào ứng dụng SwiftUI của bạn" trong ứng dụng Nhà phát triển.

00:08:53.000 --> 00:08:58.000
Chúng tôi yêu thích tác động mà các ứng dụng sức khỏe và thể dục đã tạo ra trên Apple Watch.

00:08:58.000 --> 00:09:03.000
Trong watchOS 8, chúng tôi đã mang việc phân phối nền dữ liệu HealthKit đến các ứng dụng Watch.

00:09:03.000 --> 00:09:13.000
Điều này mở ra việc theo dõi sức khỏe thụ động cho các ứng dụng và có thể tạo ra tác động lớn cho các ứng dụng Đồng hồ độc lập được sử dụng trong các cấu hình Thiết lập Gia đình.

00:09:13.000 --> 00:09:19.000
Thiết lập phân phối nền của dữ liệu HealthKit hoạt động tương tự như iOS.

00:09:19.000 --> 00:09:31.000
Trên watchOS, khi vị ngữ khớp do dữ liệu sức khỏe mới được thu thập và truy vấn người quan sát nền của bạn được xử lý, ứng dụng của bạn sẽ được đánh thức để nhận kết quả.

00:09:31.000 --> 00:09:35.000
Điều này có thể lên đến một lần mỗi giờ cho một ứng dụng Watch.

00:09:35.000 --> 00:09:44.000
Nếu ai đó đã thêm các biến chứng của ứng dụng của bạn vào mặt đồng hồ đang hoạt động của họ, bạn có thể nhận được kết quả tối đa bốn lần mỗi giờ.

00:09:44.000 --> 00:10:00.000
Tất cả những cơ hội này sẽ được tính vào ngân sách làm mới ứng dụng nền của ứng dụng của bạn, vì vậy chúng sẽ chỉ cộng tối đa bốn kết quả nhận được mỗi giờ và có thể ảnh hưởng đến việc làm mới ứng dụng nền vì những lý do khác.

00:10:00.000 --> 00:10:02.000
Hãy nói về tần suất cập nhật.

00:10:02.000 --> 00:10:16.000
Khi chúng tôi cung cấp kết quả cho ứng dụng của bạn, chúng tôi sẽ thực hiện ngay lập tức cho các loại dữ liệu quan trọng khác nhau, bao gồm các sự kiện té ngã, độ bão hòa oxy trong máu thấp, các sự kiện nhịp tim và hơn thế nữa.

00:10:16.000 --> 00:10:24.000
Xem tài liệu dành cho nhà phát triển trên trang web Nhà phát triển Apple để biết danh sách đầy đủ các loại dữ liệu bị ảnh hưởng.

00:10:24.000 --> 00:10:29.000
Tất cả các loại dữ liệu khác sẽ được phân phối hàng giờ hoặc trong khoảng thời gian dài hơn.

00:10:29.000 --> 00:10:40.000
Chúng tôi cũng đã thêm thông tin mới vào bảng ủy quyền HealthKit để cho khách hàng biết rằng ứng dụng của bạn đã nâng cao nhận thức về dữ liệu sức khỏe của họ trên Apple Watch.

00:10:40.000 --> 00:10:49.000
Chúng tôi nghĩ rằng việc phân phối nền tảng dữ liệu HealthKit sẽ mang lại những khả năng mới cho các biến chứng liên quan đến sức khỏe và thể dục trên mặt đồng hồ.

00:10:49.000 --> 00:10:57.000
Trong watchOS 4, chúng tôi đã kích hoạt các thiết bị Bluetooth kết nối trực tiếp với Apple Watch và sử dụng Core Bluetooth.

00:10:57.000 --> 00:11:02.000
Chúng tôi đã thấy một số công dụng thực sự đáng kinh ngạc của điều này.

00:11:02.000 --> 00:11:16.000
Trong watchOS 8, chúng tôi đang tiến thêm một bước nữa và cho phép các thiết bị kết nối trong các cơ hội làm mới ứng dụng nền mà các biến chứng của ứng dụng của bạn gặp phải khi chúng ở trên mặt đồng hồ đang hoạt động.

00:11:16.000 --> 00:11:25.000
Ví dụ, đây là Qardio, cho phép mọi người theo dõi tình trạng tim của họ bằng ECG cấp y tế của Qardio.

00:11:25.000 --> 00:11:40.000
Và đây là Sonra Watch, cho phép các huấn luyện viên bóng đá, hoặc bóng đá, cho những người bạn bên ngoài Hoa Kỳ, theo dõi tối đa 28 chỉ số thời gian thực về hiệu suất của cầu thủ trong quá trình tập luyện bằng thiết bị theo dõi GPS của họ.

00:11:40.000 --> 00:11:54.000
Với các kết nối Bluetooth trong quá trình làm mới ứng dụng nền, điều này có nghĩa là các biến chứng của ứng dụng của bạn có thể được cập nhật với thiết bị Bluetooth của bạn và hiển thị thông tin cập nhật suốt cả ngày.

00:11:54.000 --> 00:12:04.000
Làm mới ứng dụng nền mang đến cho các biến chứng của ứng dụng của bạn trên mặt đồng hồ đang hoạt động lên đến bốn cơ hội mỗi giờ để kết nối và cập nhật.

00:12:04.000 --> 00:12:11.000
Hãy nhớ rằng những cơ hội này sẽ được tính vào ngân sách làm mới ứng dụng nền tổng thể của ứng dụng của bạn.

00:12:11.000 --> 00:12:17.000
Đảm bảo thiết lập kết nối thiết bị ban đầu của bạn khi ứng dụng ở phía trước.

00:12:17.000 --> 00:12:20.000
Điều này không thể được thực hiện từ nền.

00:12:20.000 --> 00:12:29.000
Khi kết nối với thiết bị được thiết lập, việc làm mới ứng dụng nền sẽ mang đến cho ứng dụng của bạn cơ hội kết nối và nhận dữ liệu mới.

00:12:29.000 --> 00:12:35.000
Việc kết nối và xử lý dữ liệu của bạn trong một khoảng thời gian rất ngắn cũng rất quan trọng.

00:12:35.000 --> 00:12:47.000
Để giúp bạn điều này, chúng tôi đã thêm một trình xử lý hết hạn mới trên WKRefreshBackgroundTask để bạn có thể được thông báo khi nào bạn sắp hết thời gian và cần hoàn thành những gì bạn đang làm.

00:12:47.000 --> 00:12:51.000
Điều này cho phép ứng dụng của bạn dọn dẹp và xuống cấp một cách duyên dáng nếu cần.

00:12:51.000 --> 00:12:59.000
Để biết thêm thông tin, hãy xem "Kết nối thiết bị Bluetooth với Apple Watch" trong ứng dụng Nhà phát triển.

00:12:59.000 --> 00:13:02.000
Apple Watch là thiết bị luôn ở bên bạn.

00:13:02.000 --> 00:13:15.000
Với các ứng dụng Đồng hồ độc lập trở nên phổ biến hơn và khách hàng ngày càng hết cà phê hoặc đến cửa hàng chỉ với đồng hồ của họ, vị trí là một phần quan trọng để luôn cập nhật những gì quan trọng.

00:13:15.000 --> 00:13:20.000
Trong watchOS 8, chúng tôi đang đưa thông báo người dùng dựa trên khu vực đến Apple Watch.

00:13:20.000 --> 00:13:27.000
Điều này có nghĩa là bạn có thể nhận được thông báo về những điều quan trọng dựa trên hàng rào địa lý.

00:13:27.000 --> 00:13:33.000
Ví dụ, bạn có thể được nhắc nhở bắt đầu tập luyện trượt tuyết khi bạn đang ở thang máy, sử dụng Slopes.

00:13:33.000 --> 00:13:40.000
Hoặc bạn có thể nhận thông tin chuyến bay của mình khi bạn đến sân bay bằng Ứng dụng trong Air.

00:13:40.000 --> 00:13:46.000
Thông báo người dùng dựa trên khu vực trên watchOS hoạt động tương tự như iOS.

00:13:46.000 --> 00:13:56.000
Để bảo vệ quyền riêng tư của khách hàng, trước tiên họ sẽ nhận được thông báo tĩnh, nơi họ có thể nhấn vào một nút để xem thông báo động đầy đủ.

00:13:56.000 --> 00:14:08.000
Điều này cho phép bạn gửi các thông báo cục bộ được tạo sẵn dựa trên việc ai đó vào hoặc ra khỏi khu vực mà bạn đã đặt để kích hoạt thông báo dựa trên vị trí.

00:14:08.000 --> 00:14:15.000
Hãy nhớ rằng quyền "Khi sử dụng" là bắt buộc để bạn tận dụng điều này.

00:14:15.000 --> 00:14:28.000
Bạn cũng nên giới hạn số lượng khu vực chỉ bao gồm các điểm quan tâm quan trọng gần ai đó hoặc các địa điểm mà họ đã thể hiện ý định rõ ràng, chẳng hạn như đặt vị trí cửa hàng yêu thích.

00:14:28.000 --> 00:14:35.000
Các khu vực tiết kiệm năng lượng nhất khi chúng có bán kính khoảng vài trăm mét.

00:14:35.000 --> 00:14:43.000
Cùng với các thông báo của người dùng dựa trên khu vực, watchOS 8 hỗ trợ nút vị trí mới trong Vị trí cốt lõi.

00:14:43.000 --> 00:14:52.000
Nút này cung cấp ủy quyền vị trí một lần mà không cần thông qua lời nhắc ủy quyền mỗi khi nó được nhấn.

00:14:52.000 --> 00:14:58.000
Đằng sau hậu trường, nó hoạt động giống như một ủy quyền truyền thống "Cho phép một lần".

00:14:58.000 --> 00:15:07.000
Nút vị trí là một cách dễ dàng để có được sự tin tưởng từ mọi người bằng cách cho họ nhiều quyền kiểm soát hơn khi họ muốn chia sẻ vị trí của mình.

00:15:07.000 --> 00:15:18.000
Để biết thêm thông tin về các bản cập nhật Vị trí cốt lõi trong watchOS 8 và iOS 15, hãy xem "Nút Gặp gỡ vị trí" có sẵn trong ứng dụng Nhà phát triển.

00:15:18.000 --> 00:15:24.000
Chúng tôi cũng đang giới thiệu một API máy đo độ cao luôn bật mới trong Core Motion.

00:15:24.000 --> 00:15:35.000
Điều này cho phép bạn truy cập vào các bản cập nhật độ cao theo thời gian thực với tác động tối thiểu đến thời lượng pin cả ngày và không yêu cầu ai đó chia sẻ vị trí của họ với ứng dụng.

00:15:35.000 --> 00:15:44.000
Ngoài các tính năng và API mới đến với watchOS 8, chúng tôi đã thực hiện rất nhiều cải tiến để giúp việc phát triển và sử dụng các ứng dụng Đồng hồ của bạn dễ dàng hơn bao giờ hết.

00:15:44.000 --> 00:15:50.000
Với watchOS 8, Apple Watch giờ đây có thể đo nhịp hô hấp trong khi bạn ngủ.

00:15:50.000 --> 00:16:00.000
Điều này cho phép các ứng dụng như Sleep Details hiển thị dữ liệu nhịp hô hấp của bạn và trực quan hóa những thay đổi khi bạn thức dậy vào buổi sáng.

00:16:00.000 --> 00:16:05.000
Chúng tôi rất vui khi mang AssistiveTouch lên Apple Watch cho những người có sự khác biệt về chân tay.

00:16:05.000 --> 00:16:14.000
Điều này thực sự thú vị vì chúng ta có thể nhận ra cử chỉ tay của một người để giúp họ thực hiện các hành động và điều hướng giao diện người dùng.

00:16:14.000 --> 00:16:20.000
Chúng tôi cũng đang mang đến một kích thước văn bản có khả năng truy cập lớn cho watchOS 8.

00:16:20.000 --> 00:16:30.000
Để tìm hiểu thêm về cách làm cho ứng dụng Watch của bạn dễ tiếp cận hơn, hãy xem "Tạo trải nghiệm có thể truy cập cho watchOS" trong ứng dụng Nhà phát triển.

00:16:30.000 --> 00:16:37.000
Kiểm tra đơn vị và kiểm tra giao diện người dùng cho các ứng dụng Đồng hồ đã được giới thiệu trong Xcode 12.5.

00:16:37.000 --> 00:16:49.000
Nhưng làm cho các ứng dụng của bạn có thể truy cập được là điều cho phép chúng có thể kiểm tra được, vì vậy với các tính năng trợ năng mới trên watchOS, chưa bao giờ tốt hơn để làm cho các ứng dụng của bạn dễ tiếp cận hơn.

00:16:49.000 --> 00:17:01.000
watchOS 8 cũng thêm các tiêu đề lớn ở đầu chế độ xem cuộn, giống như bạn thấy trong iOS, cho phép cảm giác nhất quán hơn trên các thiết bị.

00:17:01.000 --> 00:17:13.000
Đầu vào văn bản đã được cải tiến trong watchOS 8, hãy nhớ xem ai đó thích Viết nguệch ngoạc hoặc Đọc chính tả cho mỗi ứng dụng và cho phép truy cập nhanh chóng để thay đổi giữa các loại đầu vào trong khi nhập văn bản.

00:17:13.000 --> 00:17:23.000
Điều này cho phép dễ dàng nhập nhiều văn bản hơn và bạn nhận được chức năng này miễn phí với các trường văn bản SwiftUI.

00:17:23.000 --> 00:17:30.000
API có thể tìm kiếm mới cho phép bạn dễ dàng thêm các trường tìm kiếm vào ứng dụng của mình với các đề xuất tùy chỉnh.

00:17:30.000 --> 00:17:36.000
Khách hàng sẽ thấy một nút trong trường tìm kiếm cho biết các đề xuất có sẵn.

00:17:36.000 --> 00:17:40.000
Khi họ nhấn vào đó, họ sẽ thấy các đề xuất tùy chỉnh của bạn.

00:17:40.000 --> 00:17:44.000
Bạn cũng có thể cung cấp giao diện người dùng tùy chỉnh cho kết quả.

00:17:44.000 --> 00:17:53.000
Bạn có thể tìm hiểu thêm bằng cách xem video "Trải nghiệm tìm kiếm thủ công trong SwiftUI" trong ứng dụng Nhà phát triển.

00:17:53.000 --> 00:18:03.000
Danh sách hiện hỗ trợ các hành động vuốt, vì vậy ngoài việc xóa các mục, giờ đây bạn có thể thực hiện các hành động tùy chỉnh như yêu thích.

00:18:03.000 --> 00:18:18.000
Vai trò của nút cho phép hệ thống biết cách trình bày và xử lý các loại nút cụ thể, như các loại nút phá hoại, nhưng chúng cũng bao gồm công cụ sửa đổi controlProminence, điều này sẽ cung cấp cho các nút đó một xúc giác bổ sung khi được nhấn.

00:18:18.000 --> 00:18:30.000
Và SwiftUI Canvas API cũng có sẵn trên watchOS 8, có nghĩa là bạn có thể thực hiện bản vẽ lập trình phong phú sử dụng GPU đáng kinh ngạc được tìm thấy trong Apple Watch.

00:18:30.000 --> 00:18:36.000
Có nhiều lý do để hào hứng với những khả năng mới trên Apple Watch với watchOS 8.

00:18:36.000 --> 00:18:43.000
TimelineView có thể giúp bạn cập nhật giao diện người dùng của mình khi cổ tay của một người bị hạ xuống và họ cần lấy thông tin trong nháy mắt.

00:18:43.000 --> 00:18:48.000
Đây là điều mà tất cả các ứng dụng nên áp dụng, vì vậy hãy kiểm tra nó trước.

00:18:48.000 --> 00:18:58.000
Các biến chứng của ứng dụng của bạn đã có được những cách mới để cập nhật thông tin cho họ với việc phân phối nền dữ liệu HealthKit và kết nối Bluetooth.

00:18:58.000 --> 00:19:04.000
Điều này hỗ trợ thêm rằng các biến chứng là cách chính mà một số người sử dụng ứng dụng Watch.

00:19:04.000 --> 00:19:09.000
Nếu bạn có thể giao hàng nhiều hơn trong nháy mắt, bạn hoàn toàn nên làm vậy.

00:19:09.000 --> 00:19:15.000
Thông báo người dùng dựa trên khu vực đã nâng cao ý nghĩa của vị trí đối với các ứng dụng Xem.

00:19:15.000 --> 00:19:23.000
Áp dụng những điều này ở nơi chúng có ý nghĩa có thể thêm khoảnh khắc bất ngờ và thích thú khiến khách hàng tham gia vào ứng dụng của bạn.

00:19:23.000 --> 00:19:35.000
Và cuối cùng, sử dụng các khả năng cấp độ tiếp theo như AssistiveTouch và SwiftUI Canvas API có thể làm cho các ứng dụng Đồng hồ của bạn dễ sử dụng hơn và nhập vai hơn bao giờ hết.

00:19:35.000 --> 00:19:38.000
Tôi sẽ xem để xem những gì bạn tạo ra.

00:19:38.000 --> 00:19:40.000
Cảm ơn bạn.

00:19:40.000 --> 23:59:59.000
[Âm nhạc].

