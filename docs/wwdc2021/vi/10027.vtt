WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:11.000
Xin chào. Tên tôi là Ellie Epskamp-Hunt.

00:00:11.000 --> 00:00:13.000
Tôi làm việc như một kỹ sư Safari.

00:00:13.000 --> 00:00:18.000
Hôm nay, tôi đang đưa ra một cái nhìn tổng quan về một số Tiện ích mở rộng Web mới API có sẵn trong Safari.

00:00:18.000 --> 00:00:22.000
Năm ngoái, Safari đã thêm hỗ trợ cho Web Extensions API trên macOS.

00:00:22.000 --> 00:00:29.000
Thật tuyệt vời khi thấy tất cả các tiện ích mở rộng Safari mới đã được vận chuyển trong năm qua sử dụng hỗ trợ API mới này.

00:00:29.000 --> 00:00:35.000
Và với bản phát hành này, chúng tôi thực sự vui mừng khi mang các tiện ích mở rộng web đến iOS và iPadOS.

00:00:35.000 --> 00:00:42.000
Bạn có thể tìm hiểu thêm về các tiện ích mở rộng trên các nền tảng mới này trong phiên chuyên dụng của riêng nó, "Gặp gỡ Tiện ích mở rộng web Safari trên iOS."

00:00:42.000 --> 00:00:47.000
Và nếu bạn muốn tìm hiểu thêm về Tiện ích mở rộng web Safari nói chung, bạn có thể xem phiên năm ngoái.

00:00:47.000 --> 00:00:49.000
Hôm nay, chúng tôi sẽ đề cập đến ba API mở rộng mới.

00:00:49.000 --> 00:00:56.000
Đầu tiên, chúng ta sẽ nói về các trang nền không liên tục, đây là một cách để cấu trúc tiện ích mở rộng của bạn để có hiệu suất tốt hơn.

00:00:56.000 --> 00:01:00.000
Sau đó, tôi sẽ giới thiệu một API chặn nội dung cho các tiện ích mở rộng web được gọi là yêu cầu mạng khai báo.

00:01:00.000 --> 00:01:04.000
Và cuối cùng, chúng ta sẽ xem xét cách các tiện ích mở rộng có thể tùy chỉnh các tab mới trong Safari.

00:01:04.000 --> 00:01:09.000
Trước khi chúng ta tìm hiểu thêm về API mới này, hãy nói về các trang nền liên tục.

00:01:09.000 --> 00:01:13.000
Các tiện ích mở rộng web được tạo bằng JavaScript, HTML và CSS.

00:01:13.000 --> 00:01:18.000
Một số tiện ích mở rộng có một tập lệnh chạy trong nền của trình duyệt được gọi là trang nền.

00:01:18.000 --> 00:01:24.000
Nó không có bất kỳ giao diện người dùng hiển thị nào, nhưng nó có thể phản ứng với các sự kiện như mở tab hoặc tin nhắn từ một phần khác của tiện ích mở rộng.

00:01:24.000 --> 00:01:27.000
Một trang nền liên tục không bao giờ đóng lại.

00:01:27.000 --> 00:01:33.000
Vì vậy, nếu tôi bật hai tiện ích mở rộng trong trình duyệt của mình, sẽ có hai trang nền chạy liên tục.

00:01:33.000 --> 00:01:39.000
Và nếu tôi sử dụng tám tiện ích mở rộng, đó là tám quy trình tiện ích mở rộng luôn chạy trong nền.

00:01:39.000 --> 00:01:41.000
Chúng ta có thể thấy có một vấn đề ở đây.

00:01:41.000 --> 00:01:48.000
Các trang nền liên tục giống như những tab vô hình mà người dùng không bao giờ có thể đóng, và chúng ăn hết bộ nhớ và tăng mức sử dụng CPU.

00:01:48.000 --> 00:01:53.000
Người dùng không cần phải thỏa hiệp giữa việc sử dụng tiện ích mở rộng của họ và nhận được hiệu suất tuyệt vời từ trình duyệt của họ.

00:01:53.000 --> 00:01:57.000
Vì vậy, thay vào đó, các tiện ích mở rộng có thể áp dụng một trang nền không liên tục.

00:01:57.000 --> 00:02:05.000
Các loại trang này có thể đến và đi khi cần thiết, làm cho tiện ích mở rộng của bạn hiệu quả hơn và mang lại cho người dùng của bạn trải nghiệm duyệt web tổng thể tốt hơn.

00:02:05.000 --> 00:02:13.000
Nếu bạn đang phát triển cho iOS, tiện ích mở rộng của bạn phải có trang nền không liên tục vì những hạn chế về tài nguyên trên các thiết bị iOS.

00:02:13.000 --> 00:02:19.000
Vì vậy, bây giờ chúng ta đã hiểu được lý do sử dụng trang nền không liên tục, chúng ta hãy xem cách chúng hoạt động.

00:02:19.000 --> 00:02:22.000
Tuổi thọ của một trang nền không liên tục được cấu trúc xung quanh các sự kiện.

00:02:22.000 --> 00:02:30.000
Trang nền đăng ký trình nghe sự kiện để phản ứng với những điều xảy ra trong trình duyệt như đóng tab hoặc tin nhắn từ một phần khác của tiện ích mở rộng.

00:02:30.000 --> 00:02:35.000
Và những sự kiện đó giúp trình duyệt xác định xem trang nền của bạn nên được tải hay dỡ xuống.

00:02:35.000 --> 00:02:37.000
Hãy xem xét một ví dụ.

00:02:37.000 --> 00:02:43.000
Khi tiện ích mở rộng của bạn được bật hoặc cập nhật, trang nền của bạn sẽ được tải và nó sẽ đăng ký trình nghe sự kiện.

00:02:43.000 --> 00:02:49.000
Vì lợi ích của ví dụ này, giả sử rằng trang nền này có chính xác một trình nghe cho một tin nhắn từ một tập lệnh nội dung.

00:02:49.000 --> 00:02:57.000
Nếu thời gian trôi qua và tập lệnh nội dung của chúng tôi không gửi bất kỳ tin nhắn nào, trang nền sẽ được trình duyệt dỡ xuống vì không hoạt động đó.

00:02:57.000 --> 00:03:06.000
Nhưng nếu tập lệnh nội dung của chúng tôi gửi một tin nhắn, trang nền sẽ được đánh thức để nó có thể nhận và phản hồi với tin nhắn đó.

00:03:06.000 --> 00:03:11.000
Và sau khi sự kiện xảy ra, trang nền sẽ vẫn được tải.

00:03:11.000 --> 00:03:16.000
Nhưng nếu thời gian trôi qua một lần nữa và không còn sự kiện nào nữa, trang nền sẽ dỡ xuống.

00:03:16.000 --> 00:03:22.000
Vì vậy, với mô hình tinh thần đó trong tâm trí, chúng ta có thể nói về cách thực sự triển khai một trang nền không liên tục.

00:03:22.000 --> 00:03:27.000
Đầu tiên, bạn sẽ thêm khóa "suy tục" vào phần nền của bản kê khai của mình.

00:03:27.000 --> 00:03:31.000
Và sau đó bạn có thể phải thực hiện thêm một vài thay đổi đối với kịch bản nền của mình.

00:03:31.000 --> 00:03:37.000
Bởi vì trang nền của bạn có thể được dỡ xuống, bạn sẽ cần sử dụng API lưu trữ để ghi thông tin vào đĩa khi cần thiết.

00:03:37.000 --> 00:03:41.000
Sử dụng browser.storage để duy trì thông tin trong suốt vòng đời của trang nền của bạn.

00:03:41.000 --> 00:03:45.000
Tiếp theo, bạn sẽ cần đăng ký trình nghe sự kiện của mình ở cấp cao nhất của kịch bản.

00:03:45.000 --> 00:03:50.000
Không đăng ký người nghe trong trình xử lý hoàn thành của người nghe sự kiện khác.

00:03:50.000 --> 00:03:53.000
Và bạn sẽ muốn sử dụng browser.alarms API thay vì hẹn giờ.

00:03:53.000 --> 00:03:57.000
Bộ hẹn giờ sẽ không được gọi nếu trang nền đã được tải xuống.

00:03:57.000 --> 00:04:00.000
Bây giờ hãy nói về một số mã bạn muốn tránh.

00:04:00.000 --> 00:04:03.000
Xóa các cuộc gọi đến browser.extension. getBackgroundPage.

00:04:03.000 --> 00:04:07.000
Nó sẽ không đánh thức trang nền nếu nó đã được dỡ xuống.

00:04:07.000 --> 00:04:10.000
Và cuối cùng, bạn sẽ cần xóa bất kỳ trình nghe webRequest nào.

00:04:10.000 --> 00:04:19.000
webRequest là một API cho phép bạn phân tích lưu lượng truy cập web và tần suất kích hoạt các sự kiện webRequest khiến API này không tương thích với các trang nền không liên tục.

00:04:19.000 --> 00:04:22.000
Vì vậy, để xem tất cả điều này hoạt động cùng nhau như thế nào, hãy thử nó trong Safari.

00:04:22.000 --> 00:04:27.000
Tôi đang sử dụng phiên bản sửa đổi của mã mẫu từ phiên năm ngoái về các tiện ích mở rộng Safari.

00:04:27.000 --> 00:04:34.000
Tiện ích mở rộng này có thể thay thế các từ trong các trang web bằng biểu tượng cảm xúc và báo cáo tổng số lần thay thế đã xảy ra.

00:04:34.000 --> 00:04:37.000
Đầu tiên, hãy xem tiện ích mở rộng này làm gì mà không thực hiện bất kỳ thay đổi nào.

00:04:37.000 --> 00:04:42.000
Bởi vì chúng tôi đã bỏ qua khóa "liên tục" trong bản kê khai, trang nền là liên tục theo mặc định.

00:04:42.000 --> 00:04:45.000
Tôi sẽ xây dựng và chạy ứng dụng có chứa tiện ích mở rộng.

00:04:45.000 --> 00:04:48.000
Và sau đó tôi sẽ bật nó lên trong tùy chọn của Safari.

00:04:48.000 --> 00:04:50.000
Bây giờ tôi sẽ sử dụng tiện ích mở rộng trên một trang web.

00:04:50.000 --> 00:04:58.000
Hãy đến bài viết Wikipedia này về cá, và tôi sẽ sử dụng cửa sổ bật lên để tương tác với tiện ích mở rộng.

00:04:58.000 --> 00:05:03.000
Khi tôi nhấp vào nút "thay thế từ", mọi trường hợp của từ "cá" đều được thay thế bằng biểu tượng cảm xúc cá.

00:05:03.000 --> 00:05:09.000
Nếu tôi nhấp vào cửa sổ bật lên một lần nữa, tôi có thể thấy tổng số từ đã được thay thế.

00:05:09.000 --> 00:05:13.000
Trang nền cho tiện ích mở rộng này chịu trách nhiệm theo dõi số lượng thay thế đó.

00:05:13.000 --> 00:05:17.000
Hãy đến Activity Monitor để xem quy trình gia hạn của chúng tôi.

00:05:17.000 --> 00:05:21.000
Ở đây chúng ta có thể thấy quy trình web nơi tất cả mã mở rộng của chúng tôi đang chạy.

00:05:21.000 --> 00:05:30.000
Bởi vì tiện ích mở rộng của chúng tôi sử dụng trang nền liên tục, quá trình này sẽ luôn chạy khi Safari đang chạy, ngay cả khi tôi ngừng sử dụng tiện ích mở rộng này vài giờ sau đó.

00:05:30.000 --> 00:05:35.000
Vì vậy, hãy làm cho tiện ích mở rộng này tốt hơn một chút và làm cho trang nền của nó không liên tục.

00:05:35.000 --> 00:05:39.000
Điều đầu tiên tôi sẽ làm là thêm khóa "suy tục" vào phần nền của bản kê khai của tôi.

00:05:39.000 --> 00:05:42.000
Và hãy dừng lại ở đây và xem liệu tiện ích mở rộng của chúng tôi có còn hoạt động không.

00:05:42.000 --> 00:05:45.000
Tôi sẽ xây dựng ứng dụng chứa tiện ích mở rộng của mình.

00:05:45.000 --> 00:05:48.000
Tôi sẽ quay lại Safari và tải lại trang.

00:05:48.000 --> 00:05:50.000
Sau đó tôi sẽ thay thế một số từ.

00:05:50.000 --> 00:05:54.000
Sau đó, tôi sẽ đợi một thời gian ngắn, cho trang nền một chút thời gian để không hoạt động.

00:05:54.000 --> 00:05:59.000
Với mục đích của bản demo này, tôi đã sửa đổi Safari để dỡ các trang nền nhanh hơn nhiều so với bình thường.

00:05:59.000 --> 00:06:06.000
Trên thực tế, chúng tôi có thể xác minh rằng trang nền đã được tải xuống trong menu phát triển, bên dưới Trang nền mở rộng web.

00:06:06.000 --> 00:06:09.000
Đây cũng là nơi bạn có thể kiểm tra trang nền của mình.

00:06:09.000 --> 00:06:13.000
Lưu ý rằng nếu bạn chọn kiểm tra trang khi nó được tải xuống, nó sẽ tải ngay lập tức.

00:06:13.000 --> 00:06:16.000
Bây giờ trang nền đã được tải xuống, hãy mở lại cửa sổ bật lên.

00:06:16.000 --> 00:06:21.000
Thay vì số lượng dự kiến của chúng tôi là 564, chúng tôi thấy không có từ nào được thay thế.

00:06:21.000 --> 00:06:23.000
Vì vậy, chúng tôi có một lỗi trong tiện ích mở rộng của mình.

00:06:23.000 --> 00:06:29.000
Chúng tôi cần quay lại và thực hiện thêm một số thay đổi để tiện ích mở rộng của chúng tôi hoạt động chính xác với trang nền không liên tục.

00:06:29.000 --> 00:06:32.000
Ở đây chúng tôi đang ở trong mã cho trang nền của tiện ích mở rộng.

00:06:32.000 --> 00:06:34.000
Trang nền này làm hai việc.

00:06:34.000 --> 00:06:38.000
Nó hoặc thêm một vào số lượng thay thế từ, hoặc nó báo cáo số lượng hiện tại.

00:06:38.000 --> 00:06:41.000
Biến toàn cục là nguyên nhân gây ra lỗi của chúng tôi.

00:06:41.000 --> 00:06:44.000
Khi trang nền được tải lại, số lượng được đặt lại thành 0.

00:06:44.000 --> 00:06:49.000
Vì vậy, thay vì duy trì trạng thái rằng 564 từ đã được thay thế, chúng tôi sẽ mất nó.

00:06:49.000 --> 00:06:55.000
Vì vậy, để giải quyết vấn đề này, hãy sử dụng browser.storage API để lưu và tải số lượng từ của chúng tôi khi cần thiết.

00:06:55.000 --> 00:07:00.000
Đầu tiên, chúng tôi sẽ thêm một số mã để tải số lượng đó từ bộ nhớ.

00:07:00.000 --> 00:07:06.000
Tôi sẽ phân tích kết quả từ API lưu trữ để có được giá trị mà tôi muốn.

00:07:06.000 --> 00:07:11.000
Và tôi sẽ lưu giá trị đó trở lại bộ nhớ bất cứ khi nào nó được cập nhật.

00:07:11.000 --> 00:07:19.000
Và sau đó tôi sẽ đưa trình nghe onMessage đó vào phần thân của cuộc gọi lại lưu trữ.

00:07:19.000 --> 00:07:22.000
Nhưng chờ đã. Chúng tôi có một vấn đề.

00:07:22.000 --> 00:07:28.000
Chúng tôi biết rằng người nghe sự kiện phải được đăng ký ở cấp cao nhất của kịch bản của chúng tôi, vì vậy điều này sẽ không hoạt động.

00:07:28.000 --> 00:07:37.000
Vì vậy, hãy tái cấu trúc mọi thứ ở đây và đưa cuộc gọi lưu trữ vào nội dung của người nghe.

00:07:37.000 --> 00:07:45.000
Và bởi vì chúng tôi đang sử dụng API lưu trữ, chúng tôi cần thêm quyền lưu trữ vào bản kê khai.

00:07:45.000 --> 00:07:50.000
Bây giờ tôi sẽ xây dựng lại ứng dụng và kiểm tra lại tiện ích mở rộng của mình.

00:07:50.000 --> 00:07:53.000
Tôi sẽ làm chính xác điều tương tự như trước đây.

00:07:53.000 --> 00:07:57.000
Tôi sẽ xem trang Wikipedia đó về cá và tải lại trang.

00:07:57.000 --> 00:08:05.000
Sau đó, tôi sẽ thay thế một số từ và đợi một lúc, cho nền tảng của chúng tôi một chút thời gian để dỡ hàng.

00:08:05.000 --> 00:08:06.000
Tuyệt vời.

00:08:06.000 --> 00:08:10.000
Cửa sổ bật lên của chúng tôi hiện báo cáo số lượng từ chính xác được thay thế.

00:08:10.000 --> 00:08:16.000
Chúng tôi đã lấy một tiện ích mở rộng với một trang nền liên tục và chuyển đổi thành công nó để sử dụng một trang nền không liên tục.

00:08:16.000 --> 00:08:26.000
Và nếu chúng tôi quay lại Activity Monitor, quá trình mở rộng sẽ không còn tồn tại sau khi trang nền đã được tải xuống vì chúng tôi đã thực hiện công việc này để áp dụng một trang nền không liên tục.

00:08:26.000 --> 00:08:30.000
Đó là tổng quan về hỗ trợ trang nền không liên tục trong Safari.

00:08:30.000 --> 00:08:37.000
Hãy nhớ rằng, nếu bạn đang phát triển một tiện ích mở rộng cho iOS, bạn sẽ phải áp dụng một trang nền không liên tục.

00:08:37.000 --> 00:08:41.000
Tiếp theo, chúng ta hãy xem xét yêu cầu mạng khai báo, một API chặn nội dung mới.

00:08:41.000 --> 00:08:47.000
Safari đã hỗ trợ Tiện ích mở rộng chặn nội dung, được xây dựng bằng Danh sách quy tắc nội dung WebKit, kể từ năm 2015.

00:08:47.000 --> 00:08:53.000
Có một vài cải tiến đối với chúng trong năm nay, bạn có thể xem trong tài liệu cập nhật của Apple.

00:08:53.000 --> 00:09:00.000
Tuy nhiên, các tiện ích mở rộng web đã không có khả năng chặn nội dung nhanh chóng, bảo vệ quyền riêng tư như vậy cho đến bây giờ.

00:09:00.000 --> 00:09:06.000
API yêu cầu mạng khai báo, được Chrome giới thiệu gần đây, kiểm tra tất cả các hộp đó.

00:09:06.000 --> 00:09:10.000
Hãy xem qua những điều cơ bản.

00:09:10.000 --> 00:09:14.000
Các quy tắc chặn nội dung được viết ở định dạng JSON.

00:09:14.000 --> 00:09:22.000
Các quy tắc JSON đó được nhóm lại một cách hợp lý thành các tệp được gọi là bộ quy tắc và có API JavaScript cho phép bạn bật hoặc tắt các bộ quy tắc này một cách riêng lẻ.

00:09:22.000 --> 00:09:29.000
Và bởi vì Chrome cũng hỗ trợ API này, bạn có thể viết một trình chặn nội dung có thể chạy trong nhiều trình duyệt trên nhiều nền tảng.

00:09:29.000 --> 00:09:34.000
Hãy xem qua cách viết các quy tắc chặn nội dung bằng cách sử dụng yêu cầu mạng khai báo.

00:09:34.000 --> 00:09:38.000
Bước đầu tiên là chỉ định một bộ quy tắc trong bản kê khai của tiện ích mở rộng.

00:09:38.000 --> 00:09:41.000
Ở đây, tôi đã tuyên bố một bộ quy tắc.

00:09:41.000 --> 00:09:44.000
Bạn cũng sẽ cần thêm quyền yêu cầu ròng khai báo.

00:09:44.000 --> 00:09:49.000
Đây là một ví dụ về quy tắc yêu cầu mạng khai báo sẽ đi vào bên trong tệp mà chúng tôi đã chỉ định trong bộ quy tắc.

00:09:49.000 --> 00:09:52.000
Nó có bốn mảnh.

00:09:52.000 --> 00:09:59.000
Có một ID duy nhất cùng với mức độ ưu tiên, xác định thứ tự áp dụng các quy tắc.

00:09:59.000 --> 00:10:04.000
Phần hành động của quy tắc cho phép bạn chặn, cho phép hoặc nâng cấp sơ đồ của một tài nguyên.

00:10:04.000 --> 00:10:09.000
Và điều kiện là nơi bạn nói với Safari ở đâu và trong những điều kiện nào để chạy quy tắc này.

00:10:09.000 --> 00:10:12.000
Trong từ điển điều kiện của quy tắc này, có hai khóa.

00:10:12.000 --> 00:10:20.000
"regexFilter" được khớp với URL tài nguyên và mảng "resourceTypes" chỉ định các loại tài nguyên sẽ bị chặn.

00:10:20.000 --> 00:10:25.000
Hãy đi vào chi tiết hơn về những gì được hỗ trợ trong từ điển điều kiện này.

00:10:25.000 --> 00:10:32.000
Đây là tất cả các loại tài nguyên bạn có thể nhắm mục tiêu bằng cách sử dụng quy tắc yêu cầu ròng khai báo.

00:10:32.000 --> 00:10:38.000
Phím "excludedResourceTypes" cho phép bạn chỉ định các loại mà bạn không muốn khớp với.

00:10:38.000 --> 00:10:46.000
"Khóa domainType" cho phép bạn chặn một tài nguyên dựa trên mối quan hệ giữa miền của tài nguyên đang được tải và miền của tài liệu.

00:10:46.000 --> 00:10:51.000
Tải "bên thứ nhất" là bất kỳ tải nào mà URL có cùng nguồn gốc bảo mật với tài liệu.

00:10:51.000 --> 00:10:54.000
Mọi trường hợp khác đều là "bên thứ ba."

00:10:54.000 --> 00:11:00.000
Và cuối cùng, phím "Case-Sensitive" cho phép bạn kiểm soát xem regexFilter có phân biệt chữ hoa chữ thường hay không.

00:11:00.000 --> 00:11:03.000
Theo mặc định, đó là sự thật.

00:11:03.000 --> 00:11:08.000
Vì vậy, bây giờ, hãy xây dựng một tiện ích mở rộng web chặn nội dung bằng cách sử dụng API yêu cầu mạng khai báo.

00:11:08.000 --> 00:11:13.000
Điều đầu tiên tôi sẽ làm là thêm phần yêu cầu ròng khai báo vào bản kê khai.

00:11:13.000 --> 00:11:22.000
Bên trong phần yêu cầu mạng khai báo đó, tôi sẽ thêm một bộ quy tắc bằng cách viết ID, bool để chỉ ra rằng nó đang bật và đường dẫn đến tệp JSON chứa các quy tắc của tôi.

00:11:22.000 --> 00:11:26.000
Và trong khi chúng ta đang ở trong bản kê khai, tôi cũng sẽ thêm quyền yêu cầu mạng khai báo.

00:11:26.000 --> 00:11:31.000
Từ đây, chúng ta hãy đi vào tệp JSON của bộ quy tắc.

00:11:31.000 --> 00:11:37.000
Tôi sẽ viết một quy tắc để chặn hình ảnh trên tất cả các trang web.

00:11:37.000 --> 00:11:43.000
Tôi sẽ xây dựng ứng dụng chứa tiện ích mở rộng và mở Safari.

00:11:43.000 --> 00:11:51.000
Lưu ý rằng tiện ích mở rộng này không có khả năng xem bất kỳ lịch sử duyệt web hoặc nội dung trang web nào, mặc dù nó sẽ có thể chặn nội dung trên tất cả các trang web.

00:11:51.000 --> 00:11:56.000
Trước khi tôi bật tiện ích mở rộng, tôi sẽ mở một bài đăng trên blog WebKit với một số hình ảnh trong đó.

00:11:56.000 --> 00:12:00.000
Chúng ta có thể thấy rằng có hai hình ảnh trên trang web này.

00:12:00.000 --> 00:12:10.000
Nếu tôi quay lại tùy chọn và bật tiện ích mở rộng, sau đó tải lại trang, hình ảnh sẽ bị chặn.

00:12:10.000 --> 00:12:14.000
Bây giờ chúng ta hãy đi đến một trang web khác như trang Wikipedia này về cá.

00:12:14.000 --> 00:12:19.000
Hình ảnh cũng bị chặn ở đây, nhưng tôi thực sự muốn xem hình ảnh trên trang cụ thể này.

00:12:19.000 --> 00:12:24.000
Vì vậy, hãy sửa đổi tiện ích mở rộng của chúng tôi để hình ảnh bị chặn ở mọi nơi ngoại trừ ở đây.

00:12:24.000 --> 00:12:29.000
Tôi sẽ quay lại Xcode và viết một quy tắc để cho phép hình ảnh trên trang này.

00:12:29.000 --> 00:12:34.000
Loại hành động của quy tắc này sẽ được "cho phép" và nó sẽ là quy tắc ưu tiên cao hơn quy tắc chặn đầu tiên của chúng tôi.

00:12:34.000 --> 00:12:38.000
Tôi sẽ xây dựng lại ứng dụng của mình, và sau đó tôi sẽ quay lại Safari.

00:12:38.000 --> 00:12:42.000
Tôi sẽ tải lại trang.

00:12:42.000 --> 00:12:49.000
Nhưng quy tắc mới này không hiệu quả vì tôi vẫn không thấy bất kỳ hình ảnh nào.

00:12:49.000 --> 00:12:53.000
Tôi sẽ xem xét trong tùy chọn tiện ích mở rộng cho bất kỳ thông báo lỗi nào.

00:12:53.000 --> 00:13:02.000
Được rồi, có vẻ như tôi đã sử dụng một mảng trống cho khóa loại tài nguyên thay vì một mảng có chuỗi "hình ảnh".

00:13:02.000 --> 00:13:05.000
Tôi sẽ quay lại Xcode để sửa lỗi của mình.

00:13:05.000 --> 00:13:17.000
Tôi sẽ xây dựng lại và quay lại tùy chọn của Safari để xác minh rằng thông báo lỗi đã biến mất.

00:13:17.000 --> 00:13:20.000
Sau đó, tôi sẽ tải lại trang.

00:13:20.000 --> 00:13:24.000
Và tuyệt vời, hình ảnh không còn bị chặn trên trang Wikipedia này nữa.

00:13:24.000 --> 00:13:29.000
Vì vậy, đó là tổng quan về cách xây dựng tiện ích mở rộng web có thể chặn nội dung trên web.

00:13:29.000 --> 00:13:34.000
Bạn có thể tham khảo tài liệu của Apple để biết thêm thông tin về cách sử dụng yêu cầu mạng khai báo.

00:13:34.000 --> 00:13:38.000
Cuối cùng, chúng ta hãy xem cách các tiện ích mở rộng có thể tùy chỉnh các tab mới trong Safari.

00:13:38.000 --> 00:13:42.000
Chúng tôi biết rằng người dùng thích cá nhân hóa trình duyệt của họ và tiện ích mở rộng là một cách tuyệt vời để làm điều đó.

00:13:42.000 --> 00:13:49.000
API ghi đè tab mới cho phép các tiện ích mở rộng tiếp quản trang tab mới trong Safari và tùy chỉnh nó hoàn toàn.

00:13:49.000 --> 00:13:53.000
API này đã có sẵn công khai trong Safari 14.1.

00:13:53.000 --> 00:13:57.000
Ghi đè tab mới được khai báo trong bản kê khai.

00:13:57.000 --> 00:14:06.000
Và khi người dùng bật tiện ích mở rộng có ghi đè tab mới, họ sẽ đưa ra lựa chọn có để tiện ích mở rộng đó tiếp quản các tab mới trong Safari hay không.

00:14:06.000 --> 00:14:10.000
Đây là cách bạn chỉ ra trang ghi đè tab mới của mình trong bản kê khai.

00:14:10.000 --> 00:14:14.000
Hãy cùng nhau xây dựng một tiện ích mở rộng sử dụng API mới này.

00:14:14.000 --> 00:14:17.000
Tôi sẽ thêm một tab ghi đè mới vào tiện ích mở rộng Sea Creator.

00:14:17.000 --> 00:14:22.000
Mục tiêu của chúng tôi là có một trang web vui nhộn xuất hiện mỗi khi chúng tôi mở một tab mới trong Safari.

00:14:22.000 --> 00:14:29.000
Tôi sẽ bắt đầu bằng cách tuyên bố rằng trang HTML của tôi là một tab mới ghi đè trong bản kê khai.

00:14:29.000 --> 00:14:33.000
Tôi có một số tệp HTML và CSS hiện có mà tôi muốn sử dụng.

00:14:33.000 --> 00:14:36.000
Chúng nằm trong thư mục tài nguyên của tiện ích mở rộng của tôi.

00:14:36.000 --> 00:14:39.000
Tôi chỉ cần thêm chúng vào dự án Xcode.

00:14:39.000 --> 00:14:42.000
Nếu bạn chưa bao giờ thêm tệp vào dự án Xcode, đừng lo lắng.

00:14:42.000 --> 00:14:44.000
Nó khá dễ dàng.

00:14:44.000 --> 00:14:58.000
Tôi sẽ nhấp vào Tệp, Thêm Tệp vào Sea Creator, và sau đó chọn các tệp tôi muốn thêm, đảm bảo chúng là một phần của mục tiêu tiện ích mở rộng chứ không phải mục tiêu ứng dụng.

00:14:58.000 --> 00:15:02.000
HTML này tạo ra một trang đầy màu sắc với một sự thật thú vị.

00:15:02.000 --> 00:15:09.000
Vì vậy, hãy chạy ứng dụng và trong Safari, tôi sẽ bật tiện ích mở rộng.

00:15:09.000 --> 00:15:14.000
Tôi nhận được lời nhắc này, hỏi tôi liệu tôi có muốn tiện ích mở rộng này có thể tiếp quản các tab và cửa sổ mới của tôi không.

00:15:14.000 --> 00:15:19.000
Tôi sẽ cho phép nó làm như vậy.

00:15:19.000 --> 00:15:25.000
Nếu tôi muốn thay đổi điều này sau, tôi có thể vào Cài đặt Chung.

00:15:25.000 --> 00:15:29.000
Nhưng bây giờ, khi tôi tạo các tab mới trong Safari, trang tab mới của tôi sẽ xuất hiện.

00:15:29.000 --> 00:15:31.000
Nó trông khá đẹp!

00:15:31.000 --> 00:15:34.000
Nhưng tôi muốn thực hiện một vài điều chỉnh.

00:15:34.000 --> 00:15:40.000
Trang ghi đè tab mới của tôi không có tiêu đề đẹp lắm.

00:15:40.000 --> 00:15:48.000
Vì vậy, trở lại Xcode, tôi sẽ thêm một tiêu đề để các trang của tôi trông đẹp trong thanh tab của Safari.

00:15:48.000 --> 00:15:54.000
Tôi cũng có thể chọn một màu chủ đề khác nếu tôi muốn thứ gì đó khác biệt với màu mà Safari suy ra từ trang.

00:15:54.000 --> 00:15:57.000
Thẻ meta này tôi đang sử dụng không dành riêng cho ghi đè tab mới.

00:15:57.000 --> 00:15:59.000
Nó sẽ hoạt động trên bất kỳ trang web nào.

00:15:59.000 --> 00:16:09.000
Nếu bạn muốn tìm hiểu thêm về những thay đổi đối với giao diện người dùng của Safari, hãy nhớ kiểm tra phiên có tên "Thiết kế cho Safari 15".

00:16:09.000 --> 00:16:11.000
Hãy xem nó trông như thế nào bây giờ.

00:16:11.000 --> 00:16:14.000
Tôi sẽ xây dựng lại.

00:16:14.000 --> 00:16:17.000
Và trở lại Safari, tôi sẽ tạo một tab mới.

00:16:17.000 --> 00:16:19.000
Tuyệt vời.

00:16:19.000 --> 00:16:24.000
Chúng tôi đã thêm thành công một tab ghi đè mới vào tiện ích mở rộng Sea Creator.

00:16:24.000 --> 00:16:29.000
Và đó là một cái nhìn về cách các tiện ích mở rộng có thể tùy chỉnh các tab mới trong Safari.

00:16:29.000 --> 00:16:34.000
Hôm nay, chúng tôi đã thảo luận về ba API mở rộng web mới có sẵn trong Safari trên macOS và iOS.

00:16:34.000 --> 00:16:39.000
Tôi khuyến khích bạn tải xuống các dự án mẫu liên quan đến phiên này và chơi với các API mới.

00:16:39.000 --> 00:16:45.000
Tôi đã chỉ cho bạn cách các tiện ích mở rộng này hoạt động trên macOS, nhưng chúng cũng hoạt động trên iOS.

00:16:45.000 --> 00:16:47.000
Chúng tôi cũng rất muốn biết bạn nghĩ gì.

00:16:47.000 --> 00:16:53.000
Bạn có thể sử dụng Trợ lý Phản hồi để gửi lỗi hoặc bạn có thể trò chuyện với chúng tôi trên Diễn đàn Nhà phát triển Safari.

00:16:53.000 --> 00:16:57.000
Và cuối cùng, hãy xem các phiên khác mà tôi đã đề cập hôm nay nếu bạn chưa có.

00:16:57.000 --> 00:16:59.000
Cảm ơn bạn và chúc bạn có một WWDC tuyệt vời.

00:16:59.000 --> 23:59:59.000
[Nhạc gõ ethereal].

