WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:25.000
Garrett Davidson: Xin chào, tôi là Garrett, một kỹ sư trong nhóm Trải nghiệm Xác thực và tôi rất vui mừng được cung cấp cho bạn cái nhìn về những gì chúng tôi đang làm: bước đầu tiên Apple đang thực hiện để hỗ trợ quá trình chuyển đổi toàn ngành khỏi mật khẩu.

00:00:25.000 --> 00:00:31.000
Mỗi khi bạn đăng nhập vào một ứng dụng hoặc trang web hôm nay, có lẽ bạn đang nhập mật khẩu.

00:00:31.000 --> 00:00:42.000
Cặp trường Tên người dùng và Mật khẩu mang tính biểu tượng có thể nhận ra ngay lập tức và thực sự dễ sử dụng, và hầu hết mọi người ngay lập tức biết phải làm gì khi họ gặp phải nó.

00:00:42.000 --> 00:00:57.000
Nhưng các nhà phát triển, người dùng và toàn bộ ngành công nghiệp đã học được rằng sự tiện lợi tuyệt vời này của việc có thể nhanh chóng xác thực để đăng nhập vào tài khoản đi kèm với chi phí bảo mật tài khoản.

00:00:57.000 --> 00:01:04.000
Khi các công nghệ xác thực đã phát triển qua nhiều năm, có một vài bài học cơ bản mà ngành công nghiệp đã học được.

00:01:04.000 --> 00:01:10.000
Trước hết, việc bảo vệ bí mật rất khó, đặc biệt là khi những bí mật đó được chia sẻ.

00:01:10.000 --> 00:01:22.000
Hầu hết xác thực ngày nay phụ thuộc vào việc người dùng và máy chủ chia sẻ bí mật - như mật khẩu - khi tài khoản được tạo và chia sẻ lại bí mật đó trong mỗi lần xác thực.

00:01:22.000 --> 00:01:30.000
Mỗi lần bí mật đó được chia sẻ, có nguy cơ ai đó không phải là người nhận dự định sẽ biết bí mật đó.

00:01:30.000 --> 00:01:38.000
Lừa đảo - chẳng hạn như email và cuộc gọi điện thoại giả mạo hoặc các trang web gây hiểu lầm - là cách phổ biến nhất để nhầm bên tìm hiểu bí mật.

00:01:38.000 --> 00:01:48.000
Và nếu một bí mật như mật khẩu thoát ra, việc sử dụng mật khẩu yếu hoặc sử dụng lại cùng một mật khẩu trên nhiều tài khoản có thể nhanh chóng làm phức tạp thêm vấn đề.

00:01:48.000 --> 00:02:01.000
Trên thực tế, theo Báo cáo Điều tra Vi phạm Dữ liệu Verizon năm 2020, hơn 80 phần trăm các vi phạm dữ liệu liên quan đến hack liên quan đến lực lượng thông tin đăng nhập vũ phu hoặc sử dụng thông tin đăng nhập bị mất hoặc bị đánh cắp.

00:02:01.000 --> 00:02:03.000
Nó không nhất thiết phải theo cách này.

00:02:03.000 --> 00:02:09.000
Công nghệ xác thực đã tiếp tục phát triển để cố gắng giảm thiểu một số rủi ro này.

00:02:09.000 --> 00:02:13.000
Lúc đầu, mật khẩu chủ yếu được lưu trữ trong đầu mọi người.

00:02:13.000 --> 00:02:21.000
Nhưng hóa ra mọi người thường không giỏi trong việc nghĩ ra và ghi nhớ mật khẩu mạnh và duy nhất cho mọi tài khoản.

00:02:21.000 --> 00:02:29.000
Trình quản lý mật khẩu có thể tạo mật khẩu mạnh, duy nhất cho mỗi tài khoản và có thể cung cấp gợi ý về một số hình thức lừa đảo có thể xảy ra.

00:02:29.000 --> 00:02:40.000
Trình quản lý mật khẩu của iCloud Keychain được tích hợp vào các thiết bị Apple của bạn và chúng tôi đã cung cấp API cho các bên thứ ba để tích hợp trình quản lý mật khẩu của riêng họ vào hệ thống.

00:02:40.000 --> 00:02:54.000
Chủ sở hữu dịch vụ cũng có thể thêm các bước bổ sung vào quy trình đăng nhập, chẳng hạn như yêu cầu mật khẩu cộng với yếu tố bổ sung như OTP; ví dụ: SMS hoặc mã xác minh một lần được tạo.

00:02:54.000 --> 00:03:09.000
macOS Monterey và iOS 15 thậm chí còn có trình tạo mã được tích hợp vào trình quản lý mật khẩu Chuỗi khóa iCloud, bạn có thể tìm hiểu thêm trong video "Đăng nhập an toàn bằng mã xác minh Chuỗi khóa iCloud" từ đồng đội Eryn của tôi.

00:03:09.000 --> 00:03:19.000
Một số ứng dụng và trang web thay vào đó chọn thuê ngoài xác thực hoàn toàn cho bên thứ ba thông qua xác thực liên kết, chẳng hạn như Đăng nhập bằng Apple.

00:03:19.000 --> 00:03:27.000
Xác thực liên kết cho phép mọi người giữ niềm tin của họ bị giới hạn trong một số lượng nhỏ các tài khoản được bảo vệ cao.

00:03:27.000 --> 00:03:32.000
Nhưng đối với video này, tôi sẽ tập trung vào các tùy chọn xác thực không liên kết.

00:03:32.000 --> 00:03:34.000
Hãy nói về cách những thứ này so sánh.

00:03:34.000 --> 00:03:43.000
Tất cả chúng đều khá dễ sử dụng, tất cả chúng đều hoạt động trên hầu hết các thiết bị và ít nhiều chúng luôn ở bên bạn.

00:03:43.000 --> 00:03:46.000
Nhưng mức độ bảo mật có thể tốt hơn.

00:03:46.000 --> 00:03:52.000
Mật khẩu có thể được ghi nhớ có lẽ không mạnh và duy nhất cho mọi tài khoản.

00:03:52.000 --> 00:04:03.000
Trình quản lý mật khẩu có thể được sử dụng để tạo mật khẩu mạnh và duy nhất, nhưng nó chỉ mạnh bằng mật khẩu - và các yếu tố bổ sung tiềm ẩn - mà bạn sử dụng để bảo vệ nó.

00:04:03.000 --> 00:04:13.000
Và mã sử dụng một lần cũng có thể hữu ích nhưng vẫn phải chịu nhiều vấn đề tương tự như mật khẩu, vì chúng vẫn là những bí mật có thể đánh máy, lừa đảo, được chia sẻ.

00:04:13.000 --> 00:04:17.000
Ngoài ra, nếu mật khẩu ở trong đầu bạn, bạn có thể quên chúng đi.

00:04:17.000 --> 00:04:24.000
Điều này có nghĩa là các ứng dụng và trang web cần một quy trình khôi phục riêng biệt, mà ngày nay thường là một liên kết trong email.

00:04:24.000 --> 00:04:32.000
Điều này có thể làm giảm mức độ bảo mật của toàn bộ tài khoản xuống mức độ bảo mật của nhà cung cấp email, đây thường không phải là thứ bạn kiểm soát.

00:04:32.000 --> 00:04:39.000
Một số trình quản lý mật khẩu và giải pháp yếu tố thứ hai có thể giúp khôi phục nhưng có xu hướng phải đối mặt với các vấn đề tương tự.

00:04:39.000 --> 00:04:44.000
Mật khẩu được ghi nhớ cũng không cung cấp bất kỳ loại kháng lừa đảo nào.

00:04:44.000 --> 00:04:58.000
Trình quản lý mật khẩu có thể cung cấp gợi ý về lừa đảo - chẳng hạn như không đề nghị điền mật khẩu trên trang web lừa đảo có vẻ hợp pháp - nhưng họ vẫn không thể ngăn ai đó tự nhập mật khẩu theo cách thủ công và bị lừa đảo.

00:04:58.000 --> 00:05:04.000
Mã một lần có các vấn đề tương tự, mặc dù có một số biện pháp giảm thiểu hiện đại mà bạn có thể đưa ra.

00:05:04.000 --> 00:05:17.000
Và cuối cùng, tất cả các phương pháp này đều dựa vào bí mật được chia sẻ giữa người dùng và máy chủ, về cơ bản chúng không mạnh hơn sự bảo vệ yếu nhất của bí mật được chia sẻ đó.

00:05:17.000 --> 00:05:23.000
Với biểu đồ đó trong tâm trí, hãy nói về các thuộc tính của một giải pháp thực tế cho vấn đề mật khẩu.

00:05:23.000 --> 00:05:29.000
Trước hết, việc thay thế mật khẩu cần được bảo mật theo thiết kế.

00:05:29.000 --> 00:05:36.000
Mật khẩu có thể được bảo mật hợp lý, nếu tuân thủ tất cả các phương pháp hay nhất.

00:05:36.000 --> 00:05:42.000
Tuy nhiên, kinh nghiệm đã cho chúng ta thấy rằng điều đó khá khó để mọi người làm mọi lúc.

00:05:42.000 --> 00:05:48.000
Việc thay thế mật khẩu nên xây dựng bảo mật đó ngay từ đầu.

00:05:48.000 --> 00:05:51.000
Nhưng chúng tôi cũng không muốn đi ngược lại khả năng sử dụng.

00:05:51.000 --> 00:05:56.000
Mật khẩu đã tồn tại với chúng tôi quá lâu vì chúng rất dễ sử dụng.

00:05:56.000 --> 00:05:58.000
Chúng tôi không muốn đánh mất điều đó.

00:05:58.000 --> 00:06:04.000
Dễ dàng bao gồm luôn có sẵn và có thể sử dụng ở mọi nơi.

00:06:04.000 --> 00:06:11.000
Hôm nay, miễn là tôi biết hoặc có thể tra cứu mật khẩu của mình, tôi có thể cho rằng thiết bị tôi muốn đăng nhập hỗ trợ nó.

00:06:11.000 --> 00:06:20.000
Bất kỳ ma sát bổ sung nào trong việc xác thực trên các thiết bị mới sẽ làm tổn thương việc áp dụng từ những người chỉ muốn nhanh chóng đăng nhập.

00:06:20.000 --> 00:06:27.000
Và cuối cùng, phục hồi nên là một tính năng hạng nhất chứ không phải là thứ được thêm vào như một suy nghĩ sau.

00:06:27.000 --> 00:06:40.000
Mọi người mắc lỗi, những điều tồi tệ xảy ra và một giải pháp cho mật khẩu phải đủ chịu lỗi để xử lý con người là con người mà không ảnh hưởng đến bảo mật tổng thể.

00:06:40.000 --> 00:06:50.000
Một trong những tùy chọn bảo mật mạnh nhất hiện nay là khóa bảo mật, dongle phần cứng hoặc fobs thường được sử dụng làm yếu tố thứ hai trong bối cảnh bảo mật đặc biệt cao.

00:06:50.000 --> 00:06:57.000
Chúng dựa trên tiêu chuẩn xác thực web - hoặc WebAuthn -, mở cửa cho tất cả mọi người.

00:06:57.000 --> 00:07:01.000
Và hầu hết chúng đều khá dễ sử dụng sau đường cong học tập ban đầu.

00:07:01.000 --> 00:07:05.000
Và chúng an toàn hơn nhiều so với chỉ một mật khẩu.

00:07:05.000 --> 00:07:10.000
Hầu hết sức mạnh này đến từ WebAuthn, mà tôi sẽ nói thêm một chút.

00:07:10.000 --> 00:07:15.000
Các trình duyệt web hiện đại cũng hỗ trợ các khóa bảo mật trên hầu hết các thiết bị hiện đại.

00:07:15.000 --> 00:07:23.000
Safari trên macOS và iOS đã hỗ trợ các phím bảo mật USB, NFC và Lightning trong một thời gian.

00:07:23.000 --> 00:07:31.000
Hầu hết các khóa bảo mật cũng hỗ trợ nhiều hơn một phương thức kết nối, vì vậy một khóa phần cứng duy nhất có thể được sử dụng trên nhiều thiết bị khác nhau.

00:07:31.000 --> 00:07:35.000
Hãy so sánh WebAuthn và mật khẩu.

00:07:35.000 --> 00:07:41.000
Một trong những ưu điểm lớn nhất của WebAuthn là nó sử dụng các cặp khóa công khai/riêng tư thay vì các bí mật được chia sẻ.

00:07:41.000 --> 00:07:47.000
Nếu chúng tôi kiểm tra mật khẩu hoạt động như thế nào hôm nay, trước tiên bạn hãy nhập mật khẩu của mình.

00:07:47.000 --> 00:07:57.000
Sau đó, nó thường bị xáo trộn thông qua một cái gì đó như băm cộng với muối, và kết quả là băm muối được gửi đến máy chủ.

00:07:57.000 --> 00:08:09.000
Bây giờ, cả bạn và máy chủ đều có một bản sao của bí mật, mặc dù bản sao của máy chủ bị xáo trộn và cả hai bạn đều có trách nhiệm như nhau trong việc bảo vệ bí mật đó.

00:08:09.000 --> 00:08:12.000
Đây là những gì chúng tôi đang loại bỏ.

00:08:12.000 --> 00:08:18.000
Với các cặp khóa công khai/riêng tư, thay vì mật khẩu, thiết bị của bạn tạo ra một cặp khóa.

00:08:18.000 --> 00:08:23.000
Một trong những khóa này là công khai; cũng công khai như tên người dùng của bạn.

00:08:23.000 --> 00:08:28.000
Nó có thể được chia sẻ với bất kỳ ai và tất cả mọi người, và không phải là một bí mật.

00:08:28.000 --> 00:08:30.000
Chìa khóa còn lại là riêng tư.

00:08:30.000 --> 00:08:35.000
Khóa riêng tư này là một bí mật và được bảo vệ bởi thiết bị của bạn.

00:08:35.000 --> 00:08:40.000
Thiết bị của bạn không bao giờ chia sẻ khóa này với bất kỳ ai khác, kể cả máy chủ.

00:08:40.000 --> 00:08:47.000
Khi bạn tạo một tài khoản, thiết bị của bạn sẽ tạo ra hai khóa liên quan này.

00:08:47.000 --> 00:08:51.000
Sau đó nó chia sẻ khóa công khai với máy chủ.

00:08:51.000 --> 00:08:59.000
Bây giờ, máy chủ có một bản sao của khóa công khai, không có các yêu cầu bảo vệ giống như mật khẩu vì đó là thông tin công khai.

00:08:59.000 --> 00:09:07.000
Khóa riêng tư vẫn còn trên thiết bị của bạn và chỉ có thiết bị đó chịu trách nhiệm bảo vệ nó.

00:09:07.000 --> 00:09:12.000
Sau đó, khi bạn muốn đăng nhập, bạn không gửi cho máy chủ bất cứ điều gì bí mật.

00:09:12.000 --> 00:09:21.000
Thay vào đó, bạn chứng minh rằng đó là tài khoản của bạn bằng cách chứng minh rằng thiết bị của bạn biết khóa riêng được liên kết với khóa công khai của tài khoản của bạn.

00:09:21.000 --> 00:09:24.000
Sự trao đổi đó hoạt động như thế này.

00:09:24.000 --> 00:09:28.000
Đầu tiên, tôi đăng nhập vào tài khoản của mình.

00:09:28.000 --> 00:09:34.000
Sau đó, trang web yêu cầu thiết bị của tôi chứng minh rằng đó thực sự là tài khoản của tôi.

00:09:34.000 --> 00:09:45.000
Nó thực hiện điều này bằng cách thực hiện cái được gọi là "thách thức" để tôi chứng minh rằng thiết bị của tôi có khóa riêng được liên kết với khóa công khai của tài khoản của tôi mà không thực sự nói khóa riêng tư của tôi là gì.

00:09:45.000 --> 00:09:50.000
Để làm như vậy, máy chủ sẽ gửi lại một thử thách sử dụng một lần.

00:09:50.000 --> 00:09:59.000
Thiết bị của tôi có khóa riêng tư, vì vậy nó thực hiện thử thách đó và thực hiện một việc gọi là "ký" thử thách, sử dụng khóa riêng tư của tôi.

00:09:59.000 --> 00:10:03.000
Chỉ có khóa riêng tư của tôi mới có thể tạo ra chữ ký hợp lệ cho tài khoản của tôi.

00:10:03.000 --> 00:10:06.000
Chữ ký này sau đó được gửi lại cho máy chủ.

00:10:06.000 --> 00:10:13.000
Máy chủ đã có khóa công khai của tôi, vì vậy nó có thể kiểm tra chữ ký này đối với khóa công khai đó.

00:10:13.000 --> 00:10:19.000
Bất cứ ai có khóa công khai của tôi đều có thể dễ dàng kiểm tra xem chữ ký có khớp với khóa đó không.

00:10:19.000 --> 00:10:26.000
Tuy nhiên, chỉ có tôi mới có thể tạo chữ ký hợp lệ cho thử thách vì chỉ có tôi mới có khóa riêng.

00:10:26.000 --> 00:10:35.000
Do đó, bất kỳ ai cũng có thể dễ dàng xác minh danh tính của tôi mà không bao giờ biết bí mật của tôi là gì.

00:10:35.000 --> 00:10:43.000
Và cuối cùng, giả sử chữ ký thực sự khớp với khóa công khai của tôi, máy chủ cho tôi biết tôi đã đăng nhập!

00:10:43.000 --> 00:10:46.000
Lưu ý rằng khóa riêng tư của tôi không bao giờ rời khỏi thiết bị của tôi.

00:10:46.000 --> 00:10:58.000
Máy chủ đã có thể xác minh rằng đây là tài khoản của tôi mà không bao giờ biết bí mật của tôi - khóa riêng tư của tôi - thực sự là gì.

00:10:58.000 --> 00:11:14.000
Bởi vì các cặp khóa công khai/riêng tư có nghĩa là thông tin đăng nhập được tạo và quản lý bởi thiết bị - và các khóa riêng tư không bao giờ được chia sẻ với máy chủ - những khóa này sẽ không bao giờ có thể đoán được, sử dụng lại, yếu hoặc dễ bị vi phạm bởi máy chủ của bạn.

00:11:14.000 --> 00:11:21.000
WebAuthn cũng bắt nguồn từ niềm tin vào trình duyệt và hệ điều hành, không phải con người.

00:11:21.000 --> 00:11:34.000
Phần mềm thực thi nghiêm ngặt rằng thông tin đăng nhập chỉ có thể sử dụng được trên các trang web và ứng dụng mà chúng được tạo ra, ngăn ai đó thậm chí cố gắng xác thực trên trang web không chính xác.

00:11:34.000 --> 00:11:45.000
Và bởi vì tất cả thông tin đăng nhập trong WebAuthn là các cặp khóa công khai/riêng tư, máy chủ không còn chịu trách nhiệm duy trì bí mật xác thực nữa.

00:11:45.000 --> 00:11:59.000
Điều này có nghĩa là ít công việc hơn ở phía máy chủ để giữ bí mật an toàn và máy chủ là mục tiêu ít giá trị hơn cho kẻ tấn công vì không có bí mật xác thực nào để kẻ tấn công đánh cắp.

00:11:59.000 --> 00:12:05.000
Hãy so sánh các khóa bảo mật với các mục khác trong biểu đồ đó.

00:12:05.000 --> 00:12:09.000
Chúng khá dễ sử dụng sau đường cong học tập ban đầu.

00:12:09.000 --> 00:12:16.000
Chúng hoạt động trên tất cả các thiết bị Apple của bạn và nhiều thiết bị không phải Apple hiện đại.

00:12:16.000 --> 00:12:19.000
Nhưng họ không nhất thiết phải luôn ở bên bạn.

00:12:19.000 --> 00:12:24.000
Bạn cần mua và mang theo phần cứng bổ sung mọi lúc.

00:12:24.000 --> 00:12:31.000
Đây có thể là một rào cản đối với việc gia nhập để áp dụng và là một bước lùi về khả năng sử dụng so với mật khẩu.

00:12:31.000 --> 00:12:35.000
Tuy nhiên, mức độ bảo mật rất tốt.

00:12:35.000 --> 00:12:48.000
Thông tin đăng nhập trên khóa bảo mật được đảm bảo không bao giờ dễ dàng đoán hoặc sử dụng lại trên nhiều tài khoản và có tính năng bảo vệ chống lừa đảo được tích hợp ở cấp hệ điều hành.

00:12:48.000 --> 00:12:50.000
Tuy nhiên, sự an toàn đó phải trả giá.

00:12:50.000 --> 00:13:00.000
Nếu thông tin đăng nhập được gắn với khóa bảo mật duy nhất và khóa bảo mật đó từng bị mất, bị đánh cắp hoặc bị hỏng, thì tất cả các thông tin đăng nhập đó cũng vậy.

00:13:00.000 --> 00:13:11.000
Những người nhận nuôi phải có một hệ thống dự phòng tại chỗ, chẳng hạn như mua một khóa bảo mật bổ sung, lưu trữ nó ở một nơi an toàn và hy vọng họ không bao giờ mất cả hai cùng một lúc.

00:13:11.000 --> 00:13:21.000
Tuy nhiên, nhờ WebAuthn, chúng cung cấp khả năng chống lừa đảo rất mạnh và loại bỏ nhu cầu về các bí mật được lưu trữ trên máy chủ.

00:13:21.000 --> 00:13:28.000
Trong iOS 14.5, chúng tôi đã mở rộng hỗ trợ khóa bảo mật để hoạt động trong tất cả các trình duyệt trên iOS.

00:13:28.000 --> 00:13:40.000
Mới trong macOS Monterey và iOS 15, chúng tôi cũng lần đầu tiên cung cấp API khóa bảo mật cho tất cả các ứng dụng trên macOS và iOS.

00:13:40.000 --> 00:13:51.000
API này đang được thêm vào họ API ASAuthorization trong khung AuthenticationServices, tương đương với API WebAuthn trên web.

00:13:51.000 --> 00:14:03.000
ASAuthorization là cửa hàng một cửa của bạn để đăng nhập bằng bất kỳ cơ chế nào mà hệ thống hỗ trợ, bao gồm mật khẩu, Đăng nhập bằng Apple và bây giờ là các khóa bảo mật.

00:14:03.000 --> 00:14:09.000
Tuy nhiên, việc mang theo phần cứng bổ sung, như khóa bảo mật, không nhất thiết phải dành cho tất cả mọi người.

00:14:09.000 --> 00:14:23.000
Chúng tôi tin rằng API này sẽ hữu ích cho các ứng dụng trong bối cảnh bảo mật đặc biệt cao, nơi sự đánh đổi khả năng sử dụng cho người dùng của bạn vượt xa nhu cầu bảo mật đặc biệt và chúng tôi rất vui khi bạn dùng thử nếu bạn thuộc danh mục đó.

00:14:23.000 --> 00:14:30.000
Giờ đây, xác thực không cần mật khẩu bằng cách sử dụng các cặp khóa là điều quan trọng tiếp theo trong công nghệ xác thực.

00:14:30.000 --> 00:14:40.000
Tiêu chuẩn là một nỗ lực hợp tác trong toàn ngành từ cả nhà cung cấp nền tảng và chủ sở hữu dịch vụ với mục tiêu thúc đẩy bảo mật tài khoản về phía trước.

00:14:40.000 --> 00:14:49.000
Hỗ trợ cho WebAuthn đang phát triển trên các hệ điều hành, nền tảng ứng dụng, trình duyệt web và trang web.

00:14:49.000 --> 00:15:13.000
Những gì tôi sẽ nói trong phần còn lại của video này và những gì tôi thực sự hào hứng giới thiệu ở đây, là bản xem trước về sự đóng góp của Apple cho thế giới sau mật khẩu; một tính năng mới xây dựng tính bảo mật của WebAuthn vào mọi iPhone, iPad và Mac, vì vậy nó có thể được sử dụng ở mọi nơi để thay thế mật khẩu

00:15:13.000 --> 00:15:17.000
Nó được gọi là "passkeys trong iCloud Keychain".

00:15:17.000 --> 00:15:23.000
Tính năng mới này lưu trữ một loại thông tin xác thực mới, được gọi là "passkey", trong Chuỗi khóa iCloud của bạn.

00:15:23.000 --> 00:15:36.000
Mật khẩu là thông tin đăng nhập WebAuthn với tính bảo mật tuyệt vời mà tiêu chuẩn cung cấp kết hợp với khả năng sử dụng được sao lưu, đồng bộ hóa và làm việc trên tất cả các thiết bị của bạn.

00:15:36.000 --> 00:15:40.000
Chúng tôi đang lưu trữ chúng trong Chuỗi khóa iCloud.

00:15:40.000 --> 00:15:47.000
Giống như mọi thứ khác trong Chuỗi khóa iCloud của bạn, chúng được mã hóa đầu cuối, vì vậy ngay cả Apple cũng không thể đọc chúng.

00:15:47.000 --> 00:15:50.000
Bí mật của bạn là bí mật của bạn.

00:15:50.000 --> 00:15:53.000
Và chúng rất dễ sử dụng.

00:15:53.000 --> 00:15:58.000
Trong hầu hết các trường hợp, chỉ cần một cú chạm hoặc nhấp chuột để đăng nhập.

00:15:58.000 --> 00:16:09.000
Và chúng mạnh hơn hầu hết các giải pháp mật khẩu cộng với yếu tố thứ hai hiện nay, nhờ vào tính bảo mật kết hợp của WebAuthn và Chuỗi khóa iCloud.

00:16:09.000 --> 00:16:21.000
Và bởi vì nó chỉ là một cú chạm để đăng nhập, nó đồng thời dễ dàng hơn, nhanh hơn và an toàn hơn hầu hết các hình thức xác thực phổ biến hiện nay.

00:16:21.000 --> 00:16:23.000
Hãy thêm nó vào biểu đồ đó.

00:16:23.000 --> 00:16:29.000
Như tôi vừa nói, nó cực kỳ dễ sử dụng; thường chỉ cần một cú chạm hoặc nhấp chuột để đăng nhập.

00:16:29.000 --> 00:16:35.000
Những gì chúng tôi đang phát hành như một phần của macOS Monterey và iOS 15 hoạt động trên tất cả các thiết bị Apple của bạn.

00:16:35.000 --> 00:16:44.000
Tất nhiên, để thay thế mật khẩu cho mọi người, công nghệ này cần hoạt động trên tất cả các thiết bị của bạn, bao gồm cả những thiết bị không hỗ trợ Chuỗi khóa iCloud.

00:16:44.000 --> 00:16:49.000
Chức năng đó không có trong macOS Monterey và iOS 15.

00:16:49.000 --> 00:16:56.000
Bởi vì nó được tích hợp vào tất cả các thiết bị Apple của bạn, nó có sẵn bất cứ khi nào bạn có iPhone, iPad hoặc Mac gần đó.

00:16:56.000 --> 00:16:59.000
Không yêu cầu phần cứng bổ sung.

00:16:59.000 --> 00:17:06.000
Nó được xây dựng trên tất cả các biện pháp bảo vệ nâng cao là một phần của cả tiêu chuẩn WebAuthn và Chuỗi khóa iCloud.

00:17:06.000 --> 00:17:13.000
Và vì nó được hỗ trợ bởi Chuỗi khóa iCloud, bạn vẫn có thể lấy lại thông tin đăng nhập của mình, ngay cả khi bạn mất tất cả các thiết bị Apple của mình.

00:17:13.000 --> 00:17:18.000
Nó có khả năng chống lừa đảo được cung cấp bởi nền tảng mạnh mẽ giống như các khóa bảo mật.

00:17:18.000 --> 00:17:31.000
Và bởi vì nó sử dụng các cặp khóa công khai/riêng tư, nó cũng có nghĩa là các máy chủ có thể thoát khỏi công việc lưu trữ bí mật xác thực, khiến chúng trở thành mục tiêu ít có giá trị hơn đối với những kẻ tấn công.

00:17:31.000 --> 00:17:34.000
Vậy đây là cách nó hoạt động.

00:17:34.000 --> 00:17:42.000
Đây là Shiny, ứng dụng demo xác thực yêu thích của chúng tôi, có mã nguồn bạn có thể tìm thấy trong các liên kết liên quan cho video này.

00:17:42.000 --> 00:17:45.000
Đầu tiên, tôi cần tạo tài khoản của mình.

00:17:45.000 --> 00:17:51.000
Tôi sẽ nhập tên người dùng của mình và nhấn vào nút Tạo tài khoản.

00:17:51.000 --> 00:17:58.000
Sau đó, một bảng hệ thống đáng tin cậy đưa ra một số thông tin về thông tin xác thực và nơi tôi có thể mong đợi sử dụng nó.

00:17:58.000 --> 00:18:03.000
Tôi sẽ nhấn Tiếp tục, Face ID, và tôi đã hoàn tất.

00:18:03.000 --> 00:18:14.000
Tôi thực sự không phải suy nghĩ về nó, nhưng bây giờ tôi có thông tin xác thực khóa công khai/riêng tư rất mạnh cho tài khoản này, được lưu trữ an toàn trong Chuỗi khóa iCloud của tôi.

00:18:14.000 --> 00:18:19.000
Khi tôi quay lại ứng dụng này và muốn đăng nhập, nó cũng dễ dàng như vậy.

00:18:19.000 --> 00:18:28.000
Khi trang tính xuất hiện, tôi được hỏi một câu hỏi rất rõ ràng, bao gồm tên của ứng dụng tôi đang đăng nhập và tài khoản của tôi.

00:18:28.000 --> 00:18:34.000
Đó là những gì tôi muốn, vì vậy tôi sẽ nhấn Tiếp tục, Face ID, và tôi đã hoàn tất.

00:18:34.000 --> 00:18:35.000
Thế là xong!

00:18:35.000 --> 00:18:40.000
Đây là tất cả những gì mọi người cần để tạo và sử dụng những thông tin đăng nhập mới này.

00:18:40.000 --> 00:18:57.000
Và bởi vì chúng là các cặp khóa công khai/riêng tư do hệ thống quản lý, chúng sẽ không được sử dụng lại hoặc đoán được, chúng không dễ bị vi phạm ứng dụng hoặc trang web và các biện pháp bảo vệ lừa đảo rất mạnh được tích hợp vào hệ điều hành và trình duyệt.

00:18:57.000 --> 00:19:01.000
Nói về trình duyệt, những thông tin đăng nhập này cũng hoạt động trên web.

00:19:01.000 --> 00:19:08.000
Tôi đang ở Safari trên trang chủ của trang web Shiny, trang đã áp dụng WebAuthn.

00:19:08.000 --> 00:19:17.000
Khi tôi nhấn vào nút Đăng nhập, tôi nhận được các tùy chọn ở đây để sử dụng thông tin xác thực mà tôi vừa tạo hoặc khóa bảo mật nếu tôi muốn sử dụng nó.

00:19:17.000 --> 00:19:23.000
Tôi có thể nhấn Tiếp tục ở đây, Face ID, và tôi đã đăng nhập, giống như trong ứng dụng.

00:19:23.000 --> 00:19:27.000
Điều này cũng hoạt động trong tất cả các ứng dụng trình duyệt web trên iOS.

00:19:27.000 --> 00:19:29.000
Và nó cũng hoạt động trên Mac!

00:19:29.000 --> 00:19:42.000
Những thông tin đăng nhập này được lưu trữ trong Chuỗi khóa iCloud, vì vậy chúng đồng bộ hóa trên tất cả các thiết bị của bạn và chúng hoạt động trong tất cả các loại ứng dụng Mac, cũng như trên web trong Safari.

00:19:42.000 --> 00:19:46.000
Bây giờ chúng ta hãy xem qua việc triển khai.

00:19:46.000 --> 00:19:56.000
Trước hết, để bảo vệ chống lừa đảo mạnh mẽ, do nền tảng cung cấp hoạt động cho các ứng dụng của bạn, thiết bị cần một liên kết chặt chẽ giữa ứng dụng và trang web của bạn.

00:19:56.000 --> 00:20:02.000
Điều này được thực hiện thông qua các miền liên quan, sử dụng loại liên kết "webcredentials".

00:20:02.000 --> 00:20:10.000
Tôi sẽ không đi sâu vào quá nhiều chi tiết ở đây, nhưng bạn có thể tìm hiểu thêm bằng cách xem video "Giới thiệu tự động điền mật khẩu cho ứng dụng" từ vài năm trước.

00:20:10.000 --> 00:20:13.000
Tiếp theo, hãy nói về việc tạo một tài khoản.

00:20:13.000 --> 00:20:16.000
Mã ở đây thực sự khá đơn giản.

00:20:16.000 --> 00:20:18.000
Hãy phá vỡ nó.

00:20:18.000 --> 00:20:31.000
Chức năng createAccount của chúng tôi cần ba đầu vào: thử thách sử dụng một lần được tìm nạp từ máy chủ của bạn, tên người dùng cho tài khoản và userID, thường là số nhận dạng cho tài khoản trên phụ trợ của bạn.

00:20:31.000 --> 00:20:36.000
Đầu tiên, bạn cần một nhà cung cấp yêu cầu để tạo các đối tượng yêu cầu.

00:20:36.000 --> 00:20:41.000
relyingPartyIdentifier phụ thuộc vào thiết lập WebAuthn của bạn, nhưng nó thường là tên miền của bạn.

00:20:41.000 --> 00:20:49.000
Sử dụng nhà cung cấp đó để tạo Yêu cầu đăng ký và chuyển yêu cầu đến bộ điều khiển ủy quyền.

00:20:49.000 --> 00:20:55.000
Cuối cùng, đặt đại diện và presentationContextProvider trên bộ điều khiển ủy quyền và bắt đầu yêu cầu của bạn.

00:20:55.000 --> 00:21:00.000
Điều này sẽ khiến trang tính đó từ trước đó bật lên và yêu cầu bạn tạo thông tin xác thực.

00:21:00.000 --> 00:21:07.000
Khi giao dịch kết thúc, bạn sẽ nhận được một cuộc gọi lại đại diện với các chi tiết của thông tin xác thực mới.

00:21:07.000 --> 00:21:10.000
Bây giờ, đăng nhập rất giống nhau.

00:21:10.000 --> 00:21:12.000
Chỉ một vài thứ cần thay đổi.

00:21:12.000 --> 00:21:21.000
Thay vì tạo Yêu cầu đăng ký, bây giờ bạn tạo Yêu cầu xác nhận, đây là thuật ngữ WebAuthn được sử dụng khi đăng nhập.

00:21:21.000 --> 00:21:25.000
Yêu cầu khẳng định chỉ cần một thử thách.

00:21:25.000 --> 00:21:27.000
Và đó là tất cả những gì bạn cần thay đổi.

00:21:27.000 --> 00:21:33.000
Tôi muốn dành một giây để nhấn mạnh rằng tham số này đối với bộ điều khiển ủy quyền là một mảng.

00:21:33.000 --> 00:21:43.000
Bạn có thể chuyển danh sách yêu cầu ở đây cho tất cả các cơ chế xác thực khác nhau mà ứng dụng của bạn hỗ trợ, bao gồm mật khẩu và Đăng nhập bằng Apple.

00:21:43.000 --> 00:21:48.000
Tờ đó từ trước đó sẽ được điền với bất kỳ thông tin đăng nhập nào hiện có sẵn.

00:21:48.000 --> 00:21:56.000
Lưu ý duy nhất là các yêu cầu đăng ký khóa công khai không thể bị trộn lẫn với các tùy chọn không đăng ký.

00:21:56.000 --> 00:22:02.000
Được rồi, cuối cùng, hãy nói về việc gọi lại đối tượng đại diện của bạn khi ủy quyền hoàn tất.

00:22:02.000 --> 00:22:07.000
Thông tin xác thực là một thuộc tính của đối tượng ủy quyền được cung cấp.

00:22:07.000 --> 00:22:13.000
Nếu người dùng đã đăng ký thông tin đăng nhập nền tảng mới, bạn sẽ nhận được đăng ký thông tin đăng nhập nền tảng.

00:22:13.000 --> 00:22:21.000
Nếu họ đăng nhập bằng thông tin xác thực nền tảng hiện có, bạn sẽ nhận được xác nhận thông tin xác thực nền tảng.

00:22:21.000 --> 00:22:28.000
Hoặc nếu họ đăng nhập bằng thứ gì đó khác mà bạn hỗ trợ, bạn cũng có thể xử lý điều đó tại đây.

00:22:28.000 --> 00:22:39.000
Trong mọi trường hợp, bạn nên đọc các thuộc tính mà bạn cần từ đối tượng thông tin xác thực giống như bạn làm trên web, gửi các giá trị đó đến máy chủ của bạn, xác minh chúng và hoàn tất thao tác.

00:22:39.000 --> 00:22:41.000
Và đó là cách nó hoạt động.

00:22:41.000 --> 00:22:44.000
Bây giờ, tôi chỉ muốn đề cập thêm một vài chi tiết.

00:22:44.000 --> 00:22:51.000
Việc chuyển đổi khỏi mật khẩu sẽ mất thời gian và điều quan trọng là phải làm đúng chi tiết.

00:22:51.000 --> 00:23:00.000
Trong macOS Monterey và iOS 15, mật khẩu trong Chuỗi khóa iCloud đang được phát hành dưới dạng bản xem trước công nghệ và bị tắt theo mặc định.

00:23:00.000 --> 00:23:05.000
Trên iOS, có một công tắc mới trong phần cài đặt Nhà phát triển của ứng dụng Cài đặt.

00:23:05.000 --> 00:23:11.000
Bật tính cách này sẽ cho phép bạn sử dụng các phím được đồng bộ hóa này trong cả ứng dụng và trên web.

00:23:11.000 --> 00:23:15.000
Và trên macOS, công tắc tồn tại trong menu Phát triển của Safari.

00:23:15.000 --> 00:23:20.000
Đầu tiên, bạn sẽ cần bật menu Phát triển, trong cài đặt Nâng cao của Safari.

00:23:20.000 --> 00:23:25.000
Bạn sẽ tìm thấy cài đặt cho điều này ở cuối ngăn Nâng cao trong tùy chọn của Safari.

00:23:25.000 --> 00:23:32.000
Sau đó, bạn có thể tìm thấy tùy chọn bật Trình xác thực nền tảng đồng bộ hóa trong menu Phát triển.

00:23:32.000 --> 00:23:35.000
Đảm bảo bật tính năng khi thử nghiệm.

00:23:35.000 --> 00:23:42.000
Trong macOS Monterey và iOS 15, những mật khẩu này chỉ dành cho thử nghiệm, không dành cho tài khoản sản xuất.

00:23:42.000 --> 00:23:50.000
Điểm nhấn của bản xem trước này là công nghệ xác thực, triển khai WebAuthn được hỗ trợ bởi Chuỗi khóa iCloud.

00:23:50.000 --> 00:23:59.000
Một quá trình chuyển đổi toàn ngành khỏi mật khẩu sẽ cần các mẫu thiết kế được áp dụng chu đáo và nhất quán, không phải là một phần của bản xem trước này.

00:23:59.000 --> 00:24:05.000
Và cuối cùng, vì đây là bản xem trước, chúng tôi đã đảm bảo rằng nó hoạt động duyên dáng khi tắt.

00:24:05.000 --> 00:24:16.000
Các yêu cầu đăng ký nền tảng sẽ trả về lỗi và các yêu cầu xác nhận nền tảng sẽ bị âm thầm bỏ qua khi tắt công tắc, ngay cả khi trộn lẫn với các loại yêu cầu thông tin xác thực khác.

00:24:16.000 --> 00:24:19.000
Vậy đây là những gì bạn có thể làm tiếp theo.

00:24:19.000 --> 00:24:25.000
Thông tin đăng nhập dựa trên khóa công khai, chống lừa đảo là biên giới tiếp theo trong xác thực tài khoản.

00:24:25.000 --> 00:24:32.000
Hãy xem tài liệu dành cho nhà phát triển của chúng tôi và mã mẫu được liên kết từ video này để giúp bạn bắt đầu.

00:24:32.000 --> 00:24:42.000
Và nếu bạn chưa có, hãy triển khai WebAuthn trên máy chủ của bạn, để bạn có thể bắt đầu dùng thử thông tin đăng nhập dựa trên WebAuthn.

00:24:42.000 --> 00:24:54.000
Bây giờ, phần yêu thích của tôi: hãy thử bản xem trước công nghệ này của mật khẩu trong Chuỗi khóa iCloud để xem nó phù hợp với quy trình làm việc hiện tại của bạn như thế nào trong các trang web và ứng dụng của bạn.

00:24:54.000 --> 00:25:00.000
Khi bạn đang dùng thử, vui lòng cho chúng tôi biết suy nghĩ của bạn trong diễn đàn nhà phát triển và Trợ lý phản hồi.

00:25:00.000 --> 00:25:02.000
Chúng tôi thực sự muốn nghe ý kiến của bạn.

00:25:02.000 --> 00:25:12.000
Như tôi đã đề cập trước đó, đây là bước đầu tiên của nỗ lực nhiều năm trong việc thay thế mật khẩu và chúng tôi rất quan tâm đến những gì tất cả các bạn phải nói.

00:25:12.000 --> 00:25:14.000
Cảm ơn bạn đã xem!

00:25:14.000 --> 23:59:59.000
♪

