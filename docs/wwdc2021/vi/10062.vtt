WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:15.000
Mathieu Tozer: Xin chào, tôi là Mathieu Tozer, và tôi là một kỹ sư trong nhóm macOS SwiftUI.

00:00:15.000 --> 00:00:22.000
SwiftUI là một khung đa nền tảng cốt lõi của nó, với mục tiêu giúp dễ dàng xây dựng các ứng dụng tuyệt vời ở mọi nơi.

00:00:22.000 --> 00:00:30.000
Khi tiếp cận bất kỳ khái niệm hoặc API mới nào, chúng tôi lùi lại một bước và xem xét những gì mỗi nền tảng mong đợi từ tính năng đó.

00:00:30.000 --> 00:00:40.000
Điều tuyệt vời về SwiftUI là các API và khái niệm của nó áp dụng cho tất cả các nền tảng và trong bài nói chuyện này, chúng tôi sẽ chỉ ra cách chúng được tinh chỉnh cho Mac.

00:00:40.000 --> 00:00:45.000
Đây là một mã cùng, nơi bạn sẽ tải xuống một dự án khung và viết một ứng dụng Mac với tôi.

00:00:45.000 --> 00:00:53.000
Trước khi chúng ta bắt đầu, hãy xem xét một số nguyên tắc chính đi vào các ứng dụng Mac tuyệt vời mà chúng ta sẽ tham khảo lại khi làm việc trên ứng dụng của mình.

00:00:53.000 --> 00:00:59.000
Đây là những thứ linh hoạt, quen thuộc, mở rộng và chính xác.

00:00:59.000 --> 00:01:04.000
Ứng dụng Mac rất linh hoạt, điều chỉnh theo cách mỗi chúng ta sử dụng chúng.

00:01:04.000 --> 00:01:14.000
Điều này bắt đầu với cách chúng tôi sử dụng máy Mac của mình từ bàn phím, chuột, bàn di chuột, điều khiển công tắc, thậm chí cả iPad - và sau đó mở rộng sang chính phần mềm.

00:01:14.000 --> 00:01:26.000
Tôi có thể tùy chỉnh quy trình làm việc của mình bằng cách điều chỉnh các cột bảng, thanh bên, bảng chi tiết, chế độ hiển thị và cửa sổ theo cách phù hợp nhất với tôi và giao diện sẽ thích ứng.

00:01:26.000 --> 00:01:29.000
Và đồng thời, các ứng dụng Mac rất quen thuộc.

00:01:29.000 --> 00:01:37.000
Sử dụng các điều khiển và mẫu thiết kế phù hợp với hệ thống làm cho một ứng dụng có thể tiếp cận ngay lập tức, nhờ vào một ngôn ngữ hình ảnh chung.

00:01:37.000 --> 00:01:47.000
Ví dụ: menu Tệp là nơi tôi luôn tiếp cận để tạo ra những thứ mới và thanh tìm kiếm có giao diện nhất quán trên tất cả các thanh công cụ ứng dụng của tôi.

00:01:47.000 --> 00:02:00.000
Bạn có thể làm cho ứng dụng của mình dễ tiếp cận hơn bằng cách phân vùng các khu vực của cửa sổ, giữ điều hướng và phân cấp trong thanh bên, nội dung ở trung tâm và các chức năng của người dùng dọc theo phía trên và bên phải.

00:02:00.000 --> 00:02:04.000
Nhưng tính nhất quán đó vẫn có thể để lại chỗ cho các ứng dụng trở nên độc đáo và nổi bật giữa những ứng dụng khác.

00:02:04.000 --> 00:02:08.000
Bạn có thể thêm tùy chỉnh, chẳng hạn như màu nhấn của ứng dụng.

00:02:08.000 --> 00:02:14.000
Và khi bạn thấy mình cần một điều khiển tùy chỉnh, nó nên được thiết kế để phù hợp với các điều khiển hệ thống.

00:02:14.000 --> 00:02:16.000
Các ứng dụng Mac rất mở rộng.

00:02:16.000 --> 00:02:25.000
Màn hình lớn, thường có nghĩa là nhiều thông tin hơn có thể được sắp xếp trên màn hình mà không bị ẩn trong các ngăn xếp điều hướng kiểu khoan.

00:02:25.000 --> 00:02:38.000
Cụ thể, mở rộng có nghĩa là sử dụng các điều khiển như thanh bên với chế độ xem phác thảo và xem trước hình thu nhỏ, cửa sổ bật lên cho các yếu tố thoáng qua, các tab để chuyển đổi giữa các ô điều khiển và các nhóm hiển thị để hiển thị nội dung.

00:02:38.000 --> 00:02:41.000
Cuối cùng, các ứng dụng Mac rất chính xác.

00:02:41.000 --> 00:02:54.000
Chúng không chỉ có cửa sổ lớn, mà chế độ xem của chúng còn có lề và khoảng cách chặt chẽ hơn dẫn đến mật độ nội dung và điều khiển cao, và các điều khiển này được thiết kế để sử dụng với con trỏ chuột.

00:02:54.000 --> 00:03:04.000
Tất cả những gì đã nói, mật độ tăng lên không cần phải dẫn đến tăng độ phức tạp; một ứng dụng phục vụ một mục đích đơn giản, duy nhất vẫn có thể là một ứng dụng Mac tuyệt vời.

00:03:04.000 --> 00:03:07.000
Bạn có thể nhận ra những ý tưởng này từ các ứng dụng Mac yêu thích của mình.

00:03:07.000 --> 00:03:11.000
Tiếp theo chúng ta sẽ áp dụng những ý tưởng này vào thực tế.

00:03:11.000 --> 00:03:13.000
Tôi sẽ xây dựng một ứng dụng Mac với bạn.

00:03:13.000 --> 00:03:19.000
Nhấn Tạm dừng tại đây và tải xuống dự án, dự án này sẽ chứa các điểm bắt đầu và kết thúc cho phiên này.

00:03:19.000 --> 00:03:21.000
Tôi thực sự thích làm vườn.

00:03:21.000 --> 00:03:26.000
Tôi nghĩ sẽ thật tuyệt nếu có một ứng dụng chuyên dụng để theo dõi khu vườn của tôi trong những năm qua.

00:03:26.000 --> 00:03:28.000
Chúng tôi sẽ xây dựng ứng dụng này cho Mac.

00:03:28.000 --> 00:03:38.000
Chúng tôi sẽ tận dụng các tính năng của nền tảng như cửa sổ linh hoạt và mật độ thông tin cao, cho phép tôi thực sự tương tác với dữ liệu ứng dụng của mình theo cách tuyệt vời trên macOS.

00:03:38.000 --> 00:03:43.000
Ở bên trái, tôi có một thanh bên hiển thị chế độ xem phác thảo của tất cả các dự án khu vườn của tôi.

00:03:43.000 --> 00:03:49.000
Tôi có thể chọn một khu vườn và xem tất cả các chi tiết thực vật trong chế độ xem bảng hoặc dưới dạng phòng trưng bày.

00:03:49.000 --> 00:03:51.000
Hãy bắt đầu triển khai ứng dụng này.

00:03:51.000 --> 00:03:55.000
Mở Session1.workspace trong dự án khởi động.

00:03:55.000 --> 00:04:04.000
Chúng tôi có một cấu trúc khu vườn chứa một loạt các loài thực vật, và chúng tôi có một số chế độ xem và người trợ giúp để tăng tốc chúng tôi, nhưng chúng tôi sẽ bắt đầu trong Chế độ xem nội dung.

00:04:04.000 --> 00:04:10.000
Tôi sẽ thu gọn thanh bên của mình và nhường chỗ cho các bản xem trước Xcode của mình.

00:04:10.000 --> 00:04:12.000
Ứng dụng Mac của chúng tôi sẽ có bố cục hai cột.

00:04:12.000 --> 00:04:15.000
Tôi sẽ nhúng chế độ xem văn bản này vào Chế độ xem điều hướng.

00:04:15.000 --> 00:04:22.000
Tôi sẽ loại bỏ phần đệm và tôi sẽ thay đổi văn bản thành Thanh bên.

00:04:22.000 --> 00:04:25.000
Cột thứ hai sẽ dành cho Bảng thực vật của chúng tôi.

00:04:25.000 --> 00:04:32.000
Hệ thống phân cấp phẳng này cung cấp một nền tảng vững chắc cho trải nghiệm điều hướng mở rộng trên màn hình lớn của Mac.

00:04:32.000 --> 00:04:34.000
Hãy bắt đầu trên thanh bên của chúng ta.

00:04:34.000 --> 00:04:43.000
Nếu tôi nhấp vào lệnh, tôi có thể trích xuất chế độ xem này vào chế độ xem con của riêng nó và tôi sẽ đổi tên nó thành "Thanh bên".

00:04:43.000 --> 00:04:48.000
Tôi cần quyền truy cập vào cửa hàng của mình.

00:04:48.000 --> 00:04:57.000
Và tôi muốn hiển thị một danh sách các khu vườn của tôi trong năm hiện tại.

00:04:57.000 --> 00:05:04.000
Và chúng tôi sẽ hiển thị tên của mỗi khu vườn trong một nhãn với hình ảnh hệ thống lá.

00:05:04.000 --> 00:05:13.000
Tôi muốn có thể xem khu vườn nào là hiện tại, đặt lịch sử vào phần riêng của nó và sau đó kiểm soát chính xác những gì tôi thấy bằng cách nhấp vào các hình tam giác tiết lộ.

00:05:13.000 --> 00:05:21.000
Chúng tôi sẽ sử dụng DisclosureGroup, giúp làm phẳng hệ thống định vị của chúng tôi hơn nữa trong khi cung cấp một cách quen thuộc để quản lý sự phức tạp.

00:05:21.000 --> 00:05:29.000
Tôi sẽ thay đổi danh sách thành ForEach và nếu tôi nhấp vào Command, tôi có thể chọn nhúng nó vào danh sách.

00:05:29.000 --> 00:05:34.000
Chúng tôi đã có nội dung mà chúng tôi lặp lại được xác định, vì vậy chúng tôi có thể xóa nội dung đó.

00:05:34.000 --> 00:05:43.000
Bây giờ, biểu thức này tương đương với những gì chúng ta đã có trước đây, nhưng bây giờ chúng ta có thể nhúng ForEach vào một Nhóm Tiết lộ.

00:05:43.000 --> 00:05:48.000
Và đối với hệ thống Hình ảnh, tốt, cái này hơi hấp dẫn nhưng chúng ta bắt đầu.

00:05:48.000 --> 00:05:53.000
Chúng tôi sẽ sử dụng biểu đồ.bar.doc.hình ảnh ngang.

00:05:53.000 --> 00:06:00.000
Được rồi, tuyệt vời. Tôi sắp xếp các khu vườn của mình theo cấu trúc phác thảo, cho tôi sự linh hoạt để kiểm soát những gì tôi nhìn thấy.

00:06:00.000 --> 00:06:09.000
Nhưng tôi muốn nhóm hiện tại được mở theo mặc định và để trạng thái mở rộng tồn tại mỗi khi tôi mở ứng dụng, điều này làm cho ứng dụng của tôi quen thuộc hơn.

00:06:09.000 --> 00:06:14.000
Để lưu trạng thái mở rộng, chúng tôi sẽ thêm một thuộc tính vào Thanh bên.

00:06:14.000 --> 00:06:25.000
Tôi sẽ chú thích nó bằng trình bao bọc thuộc tính @SceneStorage, cung cấp khóa của trạng thái mở rộng.

00:06:25.000 --> 00:06:31.000
Điều này sẽ yêu cầu SwiftUI giảm tải thuộc tính này khi ứng dụng thoát và tải lại khi cửa sổ được khôi phục.

00:06:31.000 --> 00:06:40.000
Bây giờ tôi sẽ chuyển một ràng buộc cho Nhóm Tiết lộ cho năm hiện tại...

00:06:40.000 --> 00:06:43.000
...Và bây giờ nhóm hiện tại được mở rộng.

00:06:43.000 --> 00:06:55.000
Tôi nghĩ thanh bên của tôi hơi chật, vì vậy tôi sẽ đặt chiều rộng tối thiểu.

00:06:55.000 --> 00:07:04.000
Tôi sẽ hiển thị lịch sử trong một phần và tôi sẽ sử dụng chế độ xem GardenHistoryOutline mà tôi đã thực hiện trước đó.

00:07:04.000 --> 00:07:15.000
Tôi cũng sẽ vượt qua trạng thái mở rộng đó.

00:07:15.000 --> 00:07:21.000
Tôi sẽ thêm một huy hiệu để làm nổi bật khi những cây nghèo của tôi cần nước.

00:07:21.000 --> 00:07:26.000
Được rồi, để xem chi tiết bên phải, tôi sẽ cần thêm lựa chọn.

00:07:26.000 --> 00:07:31.000
Chúng tôi sẽ thêm một ràng buộc vào ID của khu vườn đã chọn.

00:07:31.000 --> 00:07:36.000
Và sau đó chúng tôi có thể cung cấp lựa chọn đó như một ràng buộc cho danh sách.

00:07:36.000 --> 00:07:44.000
Cha mẹ của Thanh bên, Chế độ xem nội dung, sẽ giữ giá trị, chuyển các ràng buộc xuống thanh bên và bảng.

00:07:44.000 --> 00:07:57.000
Vì vậy, tôi cũng sẽ sao chép cái này ở đây và tôi sẽ đưa nó vào @SceneStorage để nó tồn tại giữa các lần chạy.

00:07:57.000 --> 00:08:04.000
Và tôi cũng sẽ chuyển nó đến Thanh bên.

00:08:04.000 --> 00:08:06.000
Tôi nghĩ thanh bên của tôi trông ổn.

00:08:06.000 --> 00:08:13.000
Tôi có thể kiểm soát những gì tôi thấy với các hình tam giác tiết lộ và nếu máy Mac của tôi khởi động lại, mọi thứ sẽ được khôi phục về cách tôi rời khỏi nó.

00:08:13.000 --> 00:08:17.000
Chúng ta có thể bắt đầu xem GardenDetail ngay bây giờ.

00:08:17.000 --> 00:08:22.000
Nó cũng cần một sự ràng buộc với sự lựa chọn.

00:08:22.000 --> 00:08:29.000
Và nếu tôi nhấp lệnh, tôi có thể chuyển đến định nghĩa của chế độ xem.

00:08:29.000 --> 00:08:33.000
Chế độ xem này đã chứa các thuộc tính cho cửa hàng của chúng tôi và một số tài sản khác mà chúng tôi sẽ sớm sử dụng.

00:08:33.000 --> 00:08:39.000
Nó cũng được thiết lập để hiển thị tên và năm của khu vườn dưới dạng Tiêu đề điều hướng và Phụ đề.

00:08:39.000 --> 00:08:49.000
Chúng tôi sẽ triển khai bảng theo biến riêng của nó trên chế độ xem chi tiết và chúng tôi sẽ sử dụng nó ở đây từ phần thân máy.

00:08:49.000 --> 00:08:57.000
Hãy bắt đầu bằng cách chỉ hiển thị danh sách các loại cây trong vườn.

00:08:57.000 --> 00:09:04.000
Chúng tôi có thể hiển thị các thuộc tính thực vật khác trong chế độ xem ngăn xếp ngang, nhưng chúng tôi có rất nhiều dữ liệu để hiển thị và rất nhiều dữ liệu là văn bản.

00:09:04.000 --> 00:09:11.000
Ngoài ra, chúng tôi muốn thêm khả năng sắp xếp các cây theo thứ tự bảng chữ cái hoặc theo thứ tự chúng tôi đã trồng.

00:09:11.000 --> 00:09:14.000
Vì những lý do này, chúng tôi sẽ trưng bày thực vật trong một cái bàn.

00:09:14.000 --> 00:09:23.000
Một bảng cung cấp một cách chính xác để xem, lọc, sắp xếp và chỉnh sửa dữ liệu của chúng tôi trong giao diện người dùng mở rộng, tận dụng tốt không gian màn hình.

00:09:23.000 --> 00:09:28.000
Nói chung, nếu bạn có các yếu tố trực quan để hiển thị và không cần sắp xếp phức tạp, hãy sử dụng danh sách.

00:09:28.000 --> 00:09:32.000
Nếu không, nếu bạn cần nhiều cột, hãy xem xét một bảng.

00:09:32.000 --> 00:09:43.000
Tôi sẽ thay thế danh sách bằng một bảng và cung cấp một số cột để chia từng hàng.

00:09:43.000 --> 00:09:47.000
Và dễ dàng như vậy, tôi có một cái bàn với một cột duy nhất!

00:09:47.000 --> 00:09:49.000
Vậy hãy thêm một số cột nữa.

00:09:49.000 --> 00:09:55.000
Tôi muốn biết sẽ mất bao lâu để mỗi cây phát triển, vì vậy tôi sẽ thêm một cột cho điều đó.

00:09:55.000 --> 00:10:02.000
Thay vì cung cấp một đường dẫn chính, tôi sẽ mở phần đóng nội dung cho TableColumn và nó sẽ được trao cho một nhà máy.

00:10:02.000 --> 00:10:12.000
Bây giờ, chúng tôi có thể cung cấp bất kỳ chế độ xem nào chúng tôi thích ở đây, nhưng thuộc tính daysToMaturity là một số nguyên, vì vậy chúng tôi sẽ cung cấp chế độ xem văn bản với một chuỗi được định dạng.

00:10:12.000 --> 00:10:16.000
Tôi có rất nhiều cây, và tôi luôn trồng nhiều hơn.

00:10:16.000 --> 00:10:21.000
Có thể chọn và sắp xếp các hàng sẽ giúp giữ cho các nhà máy của chúng ta ngăn nắp.

00:10:21.000 --> 00:10:24.000
Vì vậy, trước tiên chúng ta có thể thêm một ràng buộc vào lựa chọn.

00:10:24.000 --> 00:10:32.000
Khi làm cho bảng có thể sắp xếp được, chúng tôi cần đảm bảo rằng chúng tôi cung cấp một ràng buộc sortOrder và một đường dẫn chính đến mỗi cột.

00:10:32.000 --> 00:10:37.000
Vì vậy, chúng ta sẽ cần thêm một đường dẫn chính vào cột daysToMaturity.

00:10:37.000 --> 00:10:43.000
Để thực sự linh hoạt sức mạnh của bảng, hãy dán thêm một số cột từ tệp TableColumns trong thư mục Lượt xem.

00:10:43.000 --> 00:10:54.000
Họ sẽ cho phép chúng tôi đặt một số ngày quan trọng và gắn cờ một cây là cây yêu thích.

00:10:54.000 --> 00:11:01.000
Tôi sẽ tắt bản xem trước ngay bây giờ và chạy ứng dụng.

00:11:01.000 --> 00:11:04.000
Nhìn vào tất cả dữ liệu thực vật này!

00:11:04.000 --> 00:11:10.000
Tôi có thể chọn các hàng và tôi có thể nhấp vào tiêu đề cột để sắp xếp chúng.

00:11:10.000 --> 00:11:21.000
Điều này thật tuyệt, nhưng ngay bây giờ tôi không có cách nào để thực hiện nhiều hành động cơ bản cần thiết để quản lý một khu vườn, chẳng hạn như thêm một cây mới vào bàn hoặc đánh dấu nhiều cây là đã được tưới nước.

00:11:21.000 --> 00:11:30.000
Thanh công cụ là một nơi quen thuộc cho những loại hành động này - đó là một vị trí tiêu chuẩn mà người dùng macOS có thể khám phá các cách sử dụng ứng dụng của bạn.

00:11:30.000 --> 00:11:39.000
Chúng ta có thể thêm một thanh công cụ ở đây, bắt đầu bằng một nút để thêm một cây.

00:11:39.000 --> 00:11:48.000
Chúng tôi sẽ cung cấp cho nó một nhãn với tiêu đề, "Thêm thực vật" và hệ thống Hình ảnh "cộng".

00:11:48.000 --> 00:11:54.000
Tôi sẽ xây dựng và chạy, và bây giờ tôi có thể thêm một cái cây vào bàn của mình!

00:11:54.000 --> 00:12:02.000
Tùy chỉnh trên giao diện ứng dụng của chúng tôi cũng có thể được hiển thị trên thanh công cụ, chẳng hạn như cách chúng tôi muốn xem khu vườn.

00:12:02.000 --> 00:12:07.000
Chúng ta có thể thêm DisplayModePicker vào đây.

00:12:07.000 --> 00:12:15.000
Tôi có rất nhiều cây, và trong khi tôi có thể đặt hàng chúng, sẽ thật tuyệt nếu thu hẹp số lượng hàng một cách nhanh chóng và chính xác.

00:12:15.000 --> 00:12:26.000
Chúng tôi luôn có quyền truy cập ngay vào bàn phím phần cứng trên Mac, vì vậy tôi sẽ thêm công cụ sửa đổi có thể tìm kiếm vào Bảng, chuyển liên kết đến searchText.

00:12:26.000 --> 00:12:33.000
searchText là một thuộc tính trên chế độ xem chi tiết mà chúng tôi sử dụng để lọc mảng thực vật được đưa đến bảng.

00:12:33.000 --> 00:12:37.000
Và đó là tất cả những gì chúng ta cần làm để thêm bộ lọc tìm kiếm!

00:12:37.000 --> 00:12:45.000
Chúng tôi đã thiết lập cấu trúc cửa sổ của mình, nhưng tôi thực sự muốn có thể nhìn thấy miếng rau và bồn hoa ở sân sau của tôi cùng một lúc.

00:12:45.000 --> 00:12:48.000
Chà, hóa ra chúng ta đã có khả năng này rồi.

00:12:48.000 --> 00:12:56.000
Tôi có thể mở một cửa sổ mới từ menu Tệp và mỗi cửa sổ có lựa chọn riêng và trạng thái mở rộng thanh bên.

00:12:56.000 --> 00:13:03.000
Tất nhiên, mỗi thanh công cụ thuộc về cửa sổ riêng của nó, vì vậy tôi có thể thêm cây vào miếng rau hoặc bồn hoa.

00:13:03.000 --> 00:13:06.000
Cây của tôi cần tưới nước thường xuyên.

00:13:06.000 --> 00:13:13.000
Tôi muốn có thể phân loại và lọc cây của mình, chọn một số hàng và đánh dấu chúng là đã được tưới nước cùng một lúc.

00:13:13.000 --> 00:13:17.000
Chúng tôi sẽ thêm các lệnh để thực hiện các hành động này vào menu chính của macOS.

00:13:17.000 --> 00:13:23.000
Menu là một phần quen thuộc của giao diện người dùng thậm chí có thể được tìm kiếm, giúp mọi người khám phá ứng dụng của bạn.

00:13:23.000 --> 00:13:30.000
Trước khi thêm các lệnh tùy chỉnh của chúng tôi, hãy bắt đầu bằng cách thêm một số lệnh mà hệ thống cung cấp cho chúng tôi.

00:13:30.000 --> 00:13:32.000
Chuyển sang tệp GardenApp.

00:13:32.000 --> 00:13:38.000
Tôi sẽ thêm công cụ sửa đổi lệnh vào WindowGroup và thêm SidebarCommands().

00:13:38.000 --> 00:13:44.000
Bây giờ thanh bên có thể được chuyển đổi từ menu Xem hoặc bằng phím tắt.

00:13:44.000 --> 00:13:46.000
Bây giờ cho các lệnh tùy chỉnh của chúng tôi.

00:13:46.000 --> 00:13:51.000
Mở tệp PlantCommands trong thư mục Menu Chính.

00:13:51.000 --> 00:13:59.000
Tôi muốn có thể gửi các hành động đến khu vườn ở cửa sổ ngoài cùng phía trước, vì vậy tôi sẽ cần một biến số khu vườn.

00:13:59.000 --> 00:14:08.000
Chúng tôi sẽ sử dụng trình bao bọc thuộc tính @FocusedBinding, chuyển đường dẫn chính đến thuộc tính tùy chỉnh mà tôi đã xác định trong tiện ích mở rộng trên FocusedValues.

00:14:08.000 --> 00:14:20.000
Các mục menu lệnh thực vật cũng sẽ cần biết những cây nào được chọn trong bảng để chúng ta có thể kiểm tra chúng là đã được tưới nước, vì vậy chúng ta cũng sẽ cần phải vượt qua lựa chọn.

00:14:20.000 --> 00:14:28.000
Di chuyển vào phần thân, bạn sẽ nhận thấy rằng các lệnh được khai báo tương tự như chế độ xem, có nghĩa là bạn có thể tạo của riêng mình và xây dựng một cây lệnh tùy chỉnh để đại diện cho các menu của bạn.

00:14:28.000 --> 00:14:30.000
Đầu tiên là hành động thêm thực vật.

00:14:30.000 --> 00:14:41.000
Bây giờ, trong khi chúng ta đã có thể thêm một cây từ thanh công cụ, menu chính sẽ chứa tất cả các hành động có thể mà ứng dụng của bạn có thể thực hiện, trong khi thanh công cụ, thường chỉ là một số tập hợp con để thuận tiện.

00:14:41.000 --> 00:14:46.000
Vì đây là một hành động để tạo ra thứ gì đó, chúng tôi sẽ đặt nó ở một nơi quen thuộc.

00:14:46.000 --> 00:14:52.000
Sử dụng CommandGroup, chúng tôi sẽ đặt nó trước newItem trong menu File.

00:14:52.000 --> 00:14:57.000
Đối với hành động tưới nước của mình, tôi muốn đưa nó vào một CommandMenu mới có tên là "Plants".

00:14:57.000 --> 00:15:07.000
Cái này sẽ xuất hiện bên cạnh menu Xem trong ứng dụng của chúng tôi.

00:15:07.000 --> 00:15:14.000
Những chế độ xem này chỉ đơn giản là chứa các nút biến đổi khu vườn và các công cụ sửa đổi để xác định hành vi của nút.

00:15:14.000 --> 00:15:17.000
Chúng tôi có nhiều cửa sổ, nhưng chỉ có một thanh menu.

00:15:17.000 --> 00:15:24.000
Tôi không muốn đặt cà rốt trong bồn hoa của mình, vậy làm thế nào thực đơn có thể biết nên gửi hành động đến khu vườn nào?

00:15:24.000 --> 00:15:32.000
Quay lại chế độ xem GardenDetail, tôi sẽ thêm công cụ sửa đổi focusedSceneValue vào bảng, chuyển qua đường dẫn chính của tôi và một ràng buộc.

00:15:32.000 --> 00:15:37.000
Tôi sẽ làm điều tương tự cho việc lựa chọn.

00:15:37.000 --> 00:15:44.000
Điều này yêu cầu hệ thống hiển thị các giá trị này cho đường dẫn chính đã cho khi toàn bộ cảnh được lấy nét.

00:15:44.000 --> 00:15:50.000
Cuối cùng, trong tệp GardenApp, chúng ta cần thêm các lệnh mới của mình sau SidebarCommands() mà chúng ta đã thêm trước đó.

00:15:50.000 --> 00:15:54.000
SwiftUI sau đó sẽ biết thêm chúng vào menu chính.

00:15:54.000 --> 00:15:59.000
Bây giờ tôi có thể cắm một cái cây vào khu vườn ở cửa sổ ngoài cùng từ menu chính.

00:15:59.000 --> 00:16:08.000
Tôi cũng có thể chọn các loại cây cần được đánh dấu là đã tưới nước và làm như vậy từ menu Cây.

00:16:08.000 --> 00:16:17.000
Thêm menu vào tất cả các hành động của ứng dụng của bạn làm tăng tính linh hoạt của ứng dụng của bạn bằng cách bật các phím tắt và cung cấp các cách khác nhau để hoàn thành công việc trong ứng dụng của bạn.

00:16:17.000 --> 00:16:24.000
Nó cũng hỗ trợ khả năng khám phá các hành động, trao quyền cho mọi người khám phá và khám phá các tính năng của ứng dụng của bạn.

00:16:24.000 --> 00:16:37.000
Nói về, trong phần hai, bạn sẽ thêm nhiều tính năng hơn và đánh bóng vào ứng dụng của mình với Jeff, bao gồm màu nhấn, kéo và thả giữa các bảng và cách chụp và đính kèm ảnh cây bằng thiết bị iOS.

00:16:37.000 --> 00:16:38.000
Hôm nay chúng tôi đã đề cập rất nhiều.

00:16:38.000 --> 00:16:48.000
Chúng tôi đã xây dựng giao diện cho một ứng dụng Mac từ đầu bằng SwiftUI và chỉ ra cách mỗi thành phần đóng góp vào những gì có thể tạo nên một ứng dụng Mac tuyệt vời.

00:16:48.000 --> 00:16:49.000
Cảm ơn vì đã xem!

00:16:49.000 --> 23:59:59.000
♪

