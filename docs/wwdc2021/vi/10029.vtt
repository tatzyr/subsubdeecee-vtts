WEBVTT

00:00:01.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:11.000
Xin chào, tôi là Jen Simmons.

00:00:11.000 --> 00:00:14.000
Và tôi ở đây để nói về cách Safari mới tác động đến thiết kế và phát triển web.

00:00:14.000 --> 00:00:22.000
Nếu bạn là nhà thiết kế web, nhà phát triển web hoặc có bất kỳ vai trò nào liên quan đến việc tạo trang web hoặc ứng dụng web, phiên này là dành cho bạn.

00:00:22.000 --> 00:00:25.000
Đây là một năm tuyệt vời đối với Safari.

00:00:25.000 --> 00:00:31.000
Trong phiên này, chúng ta sẽ tập trung vào tác động thiết kế trực quan hoặc tương tác của những thay đổi trong Safari.

00:00:31.000 --> 00:00:34.000
Safari có một thiết kế hoàn toàn mới.

00:00:34.000 --> 00:00:42.000
Theo mặc định, trang web của bạn sẽ trông tuyệt vời, nhưng nếu bạn muốn đi xa hơn, phiên này sẽ trao quyền cho bạn để làm cho công việc của bạn thực sự tỏa sáng trong Safari mới.

00:00:42.000 --> 00:00:48.000
Chúng ta sẽ nói về một vài tính năng mới tuyệt vời trong macOS, iOS và iPadOS và cách chúng sẽ tác động đến web.

00:00:48.000 --> 00:00:54.000
Chúng tôi sẽ đề cập đến những gì mới trong CSS, bao gồm cả thuộc tính yêu thích của tôi, thuộc tính tỷ lệ khía cạnh mới.

00:00:54.000 --> 00:01:02.000
Và chúng ta sẽ xem xét các điều khiển biểu mẫu, các điều khiển mà chúng ta mới triển khai và một giao diện hoàn toàn mới cho các biểu mẫu trên iOS và iPadOS.

00:01:02.000 --> 00:01:06.000
Hãy bắt đầu với thiết kế của chính trình duyệt.

00:01:06.000 --> 00:01:14.000
Kể từ rất sớm trong quá trình phát triển của trình duyệt web, hầu hết các trình duyệt chúng tôi đã sử dụng đều có một vài điểm chung cơ bản.

00:01:14.000 --> 00:01:20.000
Có một thanh công cụ rất cao ở trên cùng với một khe cắm cho URL nằm trên dòng riêng của nó.

00:01:20.000 --> 00:01:27.000
Và trang web nằm trong không gian này, cổng thông tin này đến web, khung nhìn.

00:01:27.000 --> 00:01:38.000
Tất nhiên, với tư cách là người dùng, chúng tôi đã tự đào tạo bản thân để tập trung vào trang web mà chúng tôi đang sử dụng, nhưng trong nhiều năm, bản thân trình duyệt đã duy trì sự hiện diện trực quan mạnh mẽ.

00:01:38.000 --> 00:01:45.000
Không, bất kể một trang web được thiết kế để nhìn và cảm nhận như thế nào, giao diện trình duyệt đã đóng khung thiết kế đó và thống trị nó.

00:01:45.000 --> 00:01:53.000
Điều gì sẽ xảy ra nếu chúng ta có thể loại bỏ khung đó và mở rộng thiết kế của trang web đến mọi cạnh của cửa sổ?

00:01:53.000 --> 00:01:56.000
Chà, đó là những gì chúng tôi đã làm trong Safari 15.

00:01:56.000 --> 00:02:01.000
Năm nay, chúng tôi đã mô phỏng lại trải nghiệm duyệt web như chúng tôi biết.

00:02:01.000 --> 00:02:05.000
Chúng tôi đang tập trung tất cả vào nội dung web.

00:02:05.000 --> 00:02:10.000
Safari mới kết hợp thanh tab vào mỗi trang web bằng cách thay đổi màu nền của nó.

00:02:10.000 --> 00:02:16.000
Toàn bộ giao diện nằm trên một dòng và mọi thứ tự nhiên xuất hiện khi cần thiết.

00:02:16.000 --> 00:02:19.000
Điều này làm cho nội dung của bạn cảm thấy mở rộng hơn.

00:02:19.000 --> 00:02:24.000
Mỗi trang web hoặc ứng dụng web tiếp quản, mở rộng đến cả bốn cạnh của cửa sổ.

00:02:24.000 --> 00:02:27.000
Giao diện trình duyệt mang lại nội dung.

00:02:27.000 --> 00:02:31.000
Vậy điều gì quyết định màu nào được sử dụng cho nền của thanh công cụ?

00:02:31.000 --> 00:02:37.000
Là một nhà thiết kế hoặc phát triển web, bạn có thể chọn màu sắc và mã mà bạn chọn vào HTML của mình.

00:02:37.000 --> 00:02:42.000
Đối với các trang web không cung cấp màu sắc, Safari sẽ tìm ra màu để sử dụng.

00:02:42.000 --> 00:02:45.000
Đôi khi Safari khớp với màu nền của trang web.

00:02:45.000 --> 00:02:47.000
Những lần khác, nó khớp với nền tiêu đề.

00:02:47.000 --> 00:02:59.000
Để cung cấp sự lựa chọn của bạn cho màu thanh công cụ, hãy đặt nó vào đầu HTML bằng cách sử dụng thẻ meta có tên "theme-color" và sử dụng thuộc tính nội dung để chỉ định màu.

00:02:59.000 --> 00:03:04.000
Bằng cách cung cấp thông tin này trong đầu HTML, Safari sẽ nhận được nó ngay lập tức khi tải trang.

00:03:04.000 --> 00:03:06.000
Nó cũng là mã khai báo.

00:03:06.000 --> 00:03:07.000
Nó rất đơn giản để sử dụng.

00:03:07.000 --> 00:03:12.000
Bạn có thể hỗ trợ cả Chế độ Sáng và Tối bằng cách đặt hai màu.

00:03:12.000 --> 00:03:15.000
Có, bây giờ bạn có thể thêm các thuộc tính phương tiện vào thẻ meta.

00:03:15.000 --> 00:03:24.000
Trong trường hợp này, media="(prefers-color-scheme: light)" trong thẻ meta đầu tiên và "(prefers-color-scheme: dark)" trong thẻ thứ hai.

00:03:24.000 --> 00:03:28.000
Đây là một bổ sung mới cho đặc tả HTML mà chúng tôi đã đề xuất vào mùa xuân này.

00:03:28.000 --> 00:03:33.000
Nó cung cấp cho chúng tôi một cách đơn giản, mạnh mẽ để kết nối bảng màu mà người dùng đã yêu cầu.

00:03:33.000 --> 00:03:46.000
Trong các trình duyệt hỗ trợ name="theme-color" nhưng chưa hỗ trợ sử dụng thuộc tính phương tiện trên thẻ meta, các trình duyệt đó sẽ sử dụng khai báo màu chủ đề đầu tiên và bỏ qua phần còn lại.

00:03:46.000 --> 00:03:51.000
Vì vậy, hãy đặt dự phòng của bạn lên hàng đầu, không phải cuối cùng, theo cách bạn làm trong CSS.

00:03:51.000 --> 00:04:00.000
Ngay cả khi trang web của bạn không có toàn bộ thiết kế cho Chế độ tối, bạn có thể muốn đặt màu của riêng mình cho thanh tab khi thiết bị ở Chế độ tối.

00:04:00.000 --> 00:04:10.000
Nếu một màu bạn đã chỉ định quá sáng, Safari sẽ thực hiện các điều chỉnh để cung cấp cho người dùng trải nghiệm Chế độ tối mà họ đã yêu cầu.

00:04:10.000 --> 00:04:17.000
Thay vì xác định màu chủ đề trên đầu HTML, bạn có thể xác định nó trong tệp kê khai web.

00:04:17.000 --> 00:04:22.000
Nếu bạn chỉ định nó ở cả hai nơi, màu trong đầu HTML là màu được sử dụng.

00:04:22.000 --> 00:04:32.000
Và ngay bây giờ vào tháng 6 năm 2021, vẫn chưa có cách nào để xác định nhiều màu cho Chế độ Sáng và Tối trong tệp kê khai web.

00:04:32.000 --> 00:04:36.000
Có một cuộc thảo luận đang diễn ra trong nhóm làm việc ngay bây giờ để tìm ra điều đó.

00:04:36.000 --> 00:04:50.000
Ngoài ra còn có một phạm vi màu rất hẹp mà Safari sẽ không áp dụng - màu sắc, thực sự, điều đó sẽ hoàn toàn cản trở trải nghiệm của người dùng, có thể khiến nó không thể truy cập được.

00:04:50.000 --> 00:04:55.000
Đối với những thứ này, Safari sẽ làm một cái gì đó khác, như ở đây, thay đổi thanh tab của trang web này thành màu trắng.

00:04:55.000 --> 00:05:01.000
Nếu màu sắc mà bạn đã chọn dường như không hoạt động, chỉ cần thử điều chỉnh nó một chút.

00:05:01.000 --> 00:05:07.000
Nếu bạn muốn, bạn có thể đặt màu chủ đề khác nhau trên các phần khác nhau trên trang web của mình.

00:05:07.000 --> 00:05:11.000
Mỗi trang HTML riêng biệt có đầu riêng.

00:05:11.000 --> 00:05:16.000
Hoặc bạn có thể sử dụng JavaScript để hoán đổi màu chủ đề một cách linh hoạt để phản ứng với hành vi của người dùng.

00:05:16.000 --> 00:05:23.000
Hãy suy nghĩ thông qua những cách mà thiết kế của bạn có thể kết hợp thanh tab liền mạch vào trang web của bạn.

00:05:23.000 --> 00:05:34.000
Đó là cách bạn có thể tạo cảm giác về trang web hoặc ứng dụng web của mình lấp đầy toàn bộ cửa sổ trong Safari 15 trên macOS và Safari cho iPadOS và iOS 15.

00:05:34.000 --> 00:05:42.000
Tiếp theo, hãy xem xét hai điều chỉnh nhỏ khác mà bạn có thể thực hiện để thực sự đưa trang web của mình lên một tầm cao mới.

00:05:42.000 --> 00:05:47.000
Nhiều người trong chúng ta có rất nhiều tab mở trong trình duyệt web của mình khi chúng ta làm việc.

00:05:47.000 --> 00:05:53.000
Safari mới cung cấp một cách trực quan để sắp xếp các tab đó thành các nhóm.

00:05:53.000 --> 00:05:54.000
Tôi thực sự thích điều này.

00:05:54.000 --> 00:06:03.000
Tôi đã sắp xếp các dự án công việc của mình thành các nhóm riêng biệt và đặt tên cho từng dự án tôi muốn, và sau đó tôi có thể cất chúng đi.

00:06:03.000 --> 00:06:13.000
Đặt cách những thứ mà tôi không làm việc, biết rằng tôi có thể tải lại các tab đó sau này trên bất kỳ thiết bị nào, vì Nhóm Tab được đồng bộ hóa trên macOS, iOS và iPadOS.

00:06:13.000 --> 00:06:22.000
Mặc dù Nhóm Tab cung cấp cho chúng ta khả năng giải mã thanh tab, nhưng vẫn có thể mở nhiều tab trong bất kỳ một cửa sổ nào.

00:06:22.000 --> 00:06:30.000
Khi có nhiều tab, biểu tượng yêu thích trở nên khá quan trọng để dễ dàng xác định tab nào là tab nào.

00:06:30.000 --> 00:06:36.000
Bạn sẽ muốn đảm bảo rằng bạn cung cấp một biểu tượng tuyệt vời cho trang web của mình, một biểu tượng hỗ trợ các thiết bị có độ phân giải cao.

00:06:36.000 --> 00:06:43.000
Một biểu tượng yêu thích với nền trong suốt có thể trông đặc biệt tuyệt vời.

00:06:43.000 --> 00:06:51.000
Nhân tiện, rất nhiều nhóm sử dụng công cụ tự động để tạo ra các kích thước và định dạng biểu tượng khác nhau để hỗ trợ nhiều loại thiết bị.

00:06:51.000 --> 00:06:59.000
Thông thường, công cụ như vậy tạo ra mã chỉ định màu chủ đề cùng với mã biểu tượng cho đầu HTML.

00:06:59.000 --> 00:07:06.000
Hoặc có lẽ CMS của bạn hoặc khung giao diện người dùng của bạn đang xác định màu chủ đề và bạn đã không nhận ra điều đó.

00:07:06.000 --> 00:07:07.000
Kiểm tra và xem.

00:07:07.000 --> 00:07:14.000
Kiểm tra màu đó và xem nó có tốt cho thiết kế trang web của bạn không, có lẽ thay đổi nó thành màu tốt hơn.

00:07:14.000 --> 00:07:19.000
Khi hầu hết mọi người nhìn vào thanh tab mới, họ sẽ chỉ thấy tất cả các tab của họ trên một dòng.

00:07:19.000 --> 00:07:28.000
Là một người tạo trang web, bạn có thể sẽ nhận thấy rằng khi trang web được tải vào cửa sổ trình duyệt, tab cho trang web đó sẽ hiển thị tên miền của nó.

00:07:28.000 --> 00:07:37.000
Và khi một trang web nằm trong tab nền, tiêu đề trang web là những gì được hiển thị, văn bản trong thẻ tiêu đề trong đầu HTML.

00:07:37.000 --> 00:07:43.000
Không gian cho tiêu đề trang có thể bị hạn chế, vì vậy việc tạo ra một mẫu chu đáo cho tiêu đề trang web của bạn là rất quan trọng.

00:07:43.000 --> 00:07:49.000
Tiêu đề đi vào vấn đề càng nhanh, người dùng càng dễ dàng tìm thấy tab mà họ muốn.

00:07:49.000 --> 00:07:54.000
Một số trang web đặt tên của trang web đầu tiên và tên của trang thứ hai.

00:07:54.000 --> 00:07:58.000
Thay vào đó, hãy đặt tiêu đề nội dung lên hàng đầu.

00:07:58.000 --> 00:08:05.000
Bằng cách đó, nếu ai đó mở trang web của bạn trong nhiều tab, sẽ dễ dàng hơn để biết tab nào là tab nào.

00:08:05.000 --> 00:08:12.000
Màu sắc của thanh tab, biểu tượng yêu thích và tiêu đề trang là tất cả các phần của trang web để thiết kế với ý định.

00:08:12.000 --> 00:08:18.000
Chúng không hiển thị trên chính trang web, nhưng chúng tác động sâu sắc đến trải nghiệm của ai đó về trang web hoặc ứng dụng web của bạn.

00:08:18.000 --> 00:08:24.000
Để chỉ cho bạn nhiều hơn về cách tận dụng sức mạnh của thẻ meta màu chủ đề, đây là Myles.

00:08:24.000 --> 00:08:26.000
Xin chào, tôi là Myles.

00:08:26.000 --> 00:08:32.000
Và tôi đang làm việc trên Dog Dog DC, đây là một trang web nơi mọi người có thể phát trực tuyến video về những chú chó của họ trong WWDC.

00:08:32.000 --> 00:08:35.000
Tại đây, bạn có thể xem luồng của Maggie trong Safari.

00:08:35.000 --> 00:08:36.000
Cô ấy trông thật hạnh phúc!

00:08:36.000 --> 00:08:43.000
Tôi đã bắt đầu phát trực tuyến tạm dừng ngay bây giờ, nhưng tôi sẽ tạm dừng nó một chút.

00:08:43.000 --> 00:08:45.000
Bắt tốt.

00:08:45.000 --> 00:08:52.000
Và ở phía bên phải của Dog Dog DC, bạn có thể bình luận trong thời gian thực để thể hiện Maggie giỏi như thế nào.

00:08:52.000 --> 00:08:58.000
Bây giờ, ở đầu cửa sổ Safari, Safari 15 tô màu đen cho thanh tab, đây thực sự là màu nền của trang của tôi.

00:08:58.000 --> 00:09:04.000
Bạn có thể thấy màu đen được sử dụng làm nền của khu vực nội dung trung tâm ở phía dưới.

00:09:04.000 --> 00:09:07.000
Và màu đen đó trông đẹp ở trên đó trong thanh tab.

00:09:07.000 --> 00:09:11.000
Toàn bộ cửa sổ trông giống như nó có một thiết kế toàn diện, mạch lạc.

00:09:11.000 --> 00:09:18.000
Bạn cũng có thể thấy trong thanh tab rằng Safari đang đề cập đến trang của tôi là Không an toàn, điều mà tôi mong đợi vì đây là môi trường phát triển của tôi.

00:09:18.000 --> 00:09:24.000
Bây giờ, chúng tôi cũng có một thanh màu xanh nổi ở đầu trang web trông thực sự tuyệt vời được mở rộng lên thanh tab.

00:09:24.000 --> 00:09:32.000
Vì vậy, nếu tôi vào mã nguồn của mình trong Trình chỉnh sửa ở đây...

00:09:32.000 --> 00:09:39.000
Tôi có thể ghi đè màu đen mà Safari tự động phát hiện ra để phù hợp với màu xanh tuyệt đẹp này.

00:09:39.000 --> 00:09:45.000
Tôi sẽ thêm một thẻ meta này, thẻ này sẽ mở rộng màu xanh lam đó lên thanh tab.

00:09:45.000 --> 00:09:49.000
Sau đó tôi sẽ tải lại và xem nó trông như thế nào.

00:09:49.000 --> 00:09:59.000
Điều đó có vẻ khá tốt, nhưng chúng tôi đã thiết kế Dog Dog DC để chứa một thanh bản tin màu xám ở trên cùng nằm ngang, điều này thực sự làm gián đoạn luồng màu sắc một chút vào thanh tab trên cùng.

00:09:59.000 --> 00:10:13.000
Để có được một khung vẽ không bị gián đoạn, hãy biểu thị thanh bản tin theo cách khác thay vì màu nền.

00:10:13.000 --> 00:10:15.000
Hừm.

00:10:15.000 --> 00:10:17.000
Tôi sẽ tiếp tục chơi với nó sau.

00:10:17.000 --> 00:10:25.000
Hiện tại, tôi sẽ xóa thanh bản tin.

00:10:25.000 --> 00:10:27.000
Chà, bây giờ trông thật tuyệt.

00:10:27.000 --> 00:10:31.000
Màu sắc không bị gián đoạn và thực sự tỏa sáng trong Safari 15.

00:10:31.000 --> 00:10:35.000
Và tất nhiên, hiệu ứng tương tự cũng hoạt động tốt trên iPadOS.

00:10:35.000 --> 00:10:36.000
Được rồi.

00:10:36.000 --> 00:10:46.000
Bây giờ, tôi có thể ngồi đây và xem Maggie cả ngày, nhưng những gì tôi thực sự muốn làm là đưa cô ấy về phía trước và trung tâm và làm mờ mọi thứ ngoại trừ cô ấy và khu vực trò chuyện, bởi vì tôi rất coi trọng những bình luận doggo đó.

00:10:46.000 --> 00:10:50.000
Vì vậy, tất nhiên, tôi sẽ nhấn vào nút Chế độ Rạp hát này.

00:10:50.000 --> 00:10:52.000
Nhưng chờ đã.

00:10:52.000 --> 00:10:55.000
Khi tôi vào Chế độ Rạp hát, thanh tab vẫn đầy màu sắc.

00:10:55.000 --> 00:11:01.000
Chế độ rạp hát sẽ tốt hơn một chút nếu chúng ta cập nhật màu chủ đề khi vào Chế độ rạp hát.

00:11:01.000 --> 00:11:05.000
Chà, chúng ta có thể sửa nó ở đây trong JavaScript của tôi.

00:11:05.000 --> 00:11:12.000
Trước đó, Jen đã chỉ cho bạn cách sử dụng truy vấn phương tiện trong chính phần tử meta để tự động phản ứng với những thay đổi trong môi trường, như Chế độ tối.

00:11:12.000 --> 00:11:27.000
Tuy nhiên, đối với những thay đổi do chính trang của tôi khởi xướng, tôi có thể làm điều này một cách chủ động hơn bằng cách sử dụng JavaScript để chỉ cần sửa đổi chính phần tử meta bằng JavaScript tiêu chuẩn khi vào Chế độ Rạp hát.

00:11:27.000 --> 00:11:34.000
Và, tất nhiên, tôi không thể quên đặt lại phần tử khi thoát khỏi Chế độ Rạp hát.

00:11:34.000 --> 00:11:42.000
Hãy xem nó trông như thế nào bây giờ.

00:11:42.000 --> 00:11:44.000
Hoàn hảo. Và chúng ta bắt đầu.

00:11:44.000 --> 00:11:45.000
Điều đó trông tốt hơn rất nhiều.

00:11:45.000 --> 00:11:47.000
Bây giờ tôi thực sự có thể tập trung vào Maggie.

00:11:47.000 --> 00:11:49.000
Quay lại với bạn, Jen.

00:11:49.000 --> 00:11:51.000
Chó Chó DC.

00:11:51.000 --> 00:11:54.000
Tôi sẽ đảm bảo truy cập trang web đó khi nó trực tuyến, Myles.

00:11:54.000 --> 00:11:55.000
Cảm ơn.

00:11:55.000 --> 00:12:02.000
Tôi thực sự thích cách điều này mở ra một cách khác để các nhà thiết kế web tác động đến trải nghiệm nội tạng của mọi người trên web.

00:12:02.000 --> 00:12:06.000
Bây giờ chúng ta hãy đi sâu hơn một chút vào những gì đang xảy ra trên iOS.

00:12:06.000 --> 00:12:14.000
Bạn sẽ nhận thấy màu chủ đề cũng được sử dụng ở đây, ở trên cùng, quấn quanh vỏ cảm biến để trang web hoặc ứng dụng web lấp đầy toàn bộ màn hình.

00:12:14.000 --> 00:12:18.000
Bạn cũng sẽ nhận thấy rằng chúng tôi đã di chuyển thanh tab xuống cuối màn hình.

00:12:18.000 --> 00:12:26.000
Điều này đặt nó trực tiếp dưới ngón tay cái của người dùng, giúp họ tiếp cận dễ dàng hơn, đặc biệt nếu họ đang sử dụng điện thoại bằng một tay.

00:12:26.000 --> 00:12:30.000
Vuốt sang một bên trên thanh tab để chuyển đổi giữa các tab.

00:12:30.000 --> 00:12:36.000
Và vuốt lên để xem lưới tất cả các tab và để truy cập Nhóm Tab.

00:12:36.000 --> 00:12:45.000
Khi người dùng cuộn trang web, thanh tab sẽ thu nhỏ xuống chỉ còn tên miền ở dưới cùng để đảm bảo mọi người biết họ đang ở đâu.

00:12:45.000 --> 00:12:51.000
Khi họ kéo trang xuống, thanh tab mở rộng xuất hiện trở lại.

00:12:51.000 --> 00:12:57.000
Tất cả những điều này có nghĩa là các trang web và ứng dụng web mà bạn tạo ra là ngôi sao sáng của chương trình.

00:12:57.000 --> 00:13:04.000
Nhưng điều gì sẽ xảy ra nếu bạn đã xây dựng một cái gì đó quan trọng ở cuối trang và bây giờ nó được che phủ bởi thanh tab mới?

00:13:04.000 --> 00:13:13.000
Đây là nơi bạn muốn sử dụng các biến môi trường trong CSS của mình để đảm bảo có đủ phần đệm hoặc lề hoặc rãnh lưới hoặc theo cách bạn viết mã bố cục của mình.

00:13:13.000 --> 00:13:21.000
Bạn có thể sử dụng biến môi trường để đảm bảo bất kỳ giao diện người dùng hoặc nội dung nào bị ảnh hưởng bởi thanh tab sẽ bị ảnh hưởng.

00:13:21.000 --> 00:13:24.000
Vậy biến môi trường là gì?

00:13:24.000 --> 00:13:28.000
Đó là một phép đo động được cung cấp bởi trình duyệt.

00:13:28.000 --> 00:13:32.000
Bạn có thể thấy ở đây, màu xanh lá cây được gọi là khu vực an toàn.

00:13:32.000 --> 00:13:36.000
Khi thanh tab được mở rộng ở phía dưới, khu vực an toàn bắt đầu từ phía trên nó.

00:13:36.000 --> 00:13:41.000
Khi thanh tab thu nhỏ, kích thước của khu vực an toàn sẽ thay đổi.

00:13:41.000 --> 00:13:50.000
Env(safe-area-inset-bottom) là phép đo dù có bao nhiêu điểm ảnh từ khu vực an toàn đến dưới cùng của khung nhìn.

00:13:50.000 --> 00:13:54.000
Nó rất giống hàm var trong các thuộc tính tùy chỉnh CSS.

00:13:54.000 --> 00:13:59.000
Ví dụ, có thể bạn đã sử dụng các thuộc tính tùy chỉnh để biến tất cả các màu của mình thành các biến.

00:13:59.000 --> 00:14:04.000
Chỉ thay vì bạn xác định biến này, trình duyệt mới xác định nó.

00:14:04.000 --> 00:14:07.000
Nó cung cấp thông tin về môi trường.

00:14:07.000 --> 00:14:12.000
Và bạn có thể sử dụng phép đo độ dài đó ở bất kỳ vị trí nào trong mã của mình, kể cả bên trong một calc.

00:14:12.000 --> 00:14:19.000
Ở đây, chân trang của tôi là vị trí: dính với một số đệm để đẩy hai liên kết của tôi ra khỏi các cạnh của chân trang.

00:14:19.000 --> 00:14:24.000
Tôi đã xác định đáy đệm của 1rem + env (safe-area-inset-bottom).

00:14:24.000 --> 00:14:28.000
Trong nhiều ngữ cảnh, đó sẽ là 1rem + 0.

00:14:28.000 --> 00:14:34.000
Trên iOS, nó sẽ là 1rem cộng với khoảng cách cần thiết để xóa thanh tab.

00:14:34.000 --> 00:14:45.000
Có bốn biến môi trường cung cấp phép đo từ rìa của khu vực an toàn đến cạnh của khung nhìn: env (safe-area-inset-top), -right, -bottom và -left.

00:14:45.000 --> 00:14:47.000
Các biến môi trường này không chỉ hoạt động trong Safari.

00:14:47.000 --> 00:14:53.000
Chúng được xác định trong đặc tả CSS và hoạt động trên các trình duyệt, thiết bị và hệ điều hành khác nhau.

00:14:53.000 --> 00:15:00.000
Nếu bạn muốn thực hiện các điều chỉnh theo chiều dọc, bạn cần thực hiện hành động sử dụng biến môi trường.

00:15:00.000 --> 00:15:03.000
Safari sẽ không cố gắng di chuyển nội dung xung quanh theo mặc định.

00:15:03.000 --> 00:15:07.000
Tuy nhiên, khi một chiếc iPhone được xoay sang một bên, nó hoạt động hơi khác một chút.

00:15:07.000 --> 00:15:14.000
Ngoài ra còn có một khu vực an toàn được xác định để tránh vỏ cảm biến và các cạnh tròn của màn hình.

00:15:14.000 --> 00:15:22.000
Theo mặc định, Safari sẽ tự động di chuyển nội dung web từ cạnh trái và phải và đưa nó vào khu vực an toàn.

00:15:22.000 --> 00:15:24.000
Bạn có thể tự hỏi tại sao.

00:15:24.000 --> 00:15:30.000
Chà, nếu thay vào đó, Safari mở rộng mọi trang web sang cạnh trái và phải, nội dung có thể bị mất.

00:15:30.000 --> 00:15:32.000
Ở đây, văn bản được che đậy.

00:15:32.000 --> 00:15:35.000
Và đó là - điều đó không tốt cho khả năng sử dụng.

00:15:35.000 --> 00:15:49.000
Để ngăn ngừa mất dữ liệu, Safari sẽ đưa nội dung vào khu vực an toàn, bao gồm cả khi một trang web đang sử dụng thẻ meta viewport với width=device-width, đây là thẻ meta thường được sử dụng trong thiết kế web đáp ứng.

00:15:49.000 --> 00:15:51.000
Nhưng tất nhiên tôi muốn thiết kế này trông đẹp hơn.

00:15:51.000 --> 00:15:56.000
Tôi muốn tiêu đề màu tím của mình và bức ảnh mở rộng đến các cạnh của màn hình.

00:15:56.000 --> 00:16:06.000
Tôi có thể báo hiệu cho Safari rằng tôi muốn trình duyệt mở rộng nội dung sang các cạnh trái và phải bằng cách thay đổi thẻ meta viewport thành viewport-fit=cover.

00:16:06.000 --> 00:16:10.000
Bây giờ tôi có trách nhiệm đảm bảo rằng bố cục hoạt động.

00:16:10.000 --> 00:16:14.000
Tôi sẽ sử dụng các biến môi trường để đảm bảo nội dung hiển thị đầy đủ.

00:16:14.000 --> 00:16:22.000
Tôi có thể xác định lề trái của env (safe-area-inset-left) trên văn bản tiêu đề và trên văn bản đoạn văn.

00:16:22.000 --> 00:16:33.000
Để biết thêm thông tin về các biến vùng an toàn và các biến môi trường, hãy xem bài viết "Thiết kế trang web cho iPhone X" trên Blog WebKit, được liên kết trong ghi chú cho phiên này.

00:16:33.000 --> 00:16:37.000
Hãy đến Myles và xem các biến môi trường hoạt động như thế nào.

00:16:37.000 --> 00:16:41.000
Bây giờ hãy xem Dog Dog DC trông như thế nào trong Safari trên iPhone.

00:16:41.000 --> 00:16:48.000
Ở đây trên iPhone của tôi, chúng ta có thể nhìn thấy Maggie giống như cách chúng ta đã nhìn thấy cô ấy trước đây, nhưng lần này trên một thiết bị nhỏ hơn.

00:16:48.000 --> 00:16:51.000
Nhưng chờ đã. Có vẻ như có một vấn đề.

00:16:51.000 --> 00:16:56.000
Khi người dùng cuộn khu vực trò chuyện, khu vực đầu vào sẽ chồng lên thanh tab.

00:16:56.000 --> 00:17:07.000
Dog Dog DC đang sử dụng rõ ràng các đơn vị vh để tự định cỡ từ trên xuống dưới, lấy chính xác kích thước của toàn bộ khung nhìn, hiện đang chia sẻ với thanh tab.

00:17:07.000 --> 00:17:12.000
Là một người dùng, tôi có thể cuộn để thu nhỏ thanh tab, và điều đó khá dễ dàng.

00:17:12.000 --> 00:17:18.000
Nhưng với tư cách là một nhà phát triển, tôi muốn đảm bảo rằng người dùng của tôi có trải nghiệm tốt nhất có thể ngay cả khi họ cuộn.

00:17:18.000 --> 00:17:24.000
May mắn thay, tôi có thể sử dụng các miếng lót khu vực an toàn để di chuyển khu vực đầu vào lên với số lượng thích hợp.

00:17:24.000 --> 00:17:34.000
Tất cả những gì tôi phải làm là thêm phần đệm phía dưới và đặt nó thành vùng an toàn-mặt dưới.

00:17:34.000 --> 00:17:39.000
Sau đó tôi chỉ cần tải lại trang web của mình.

00:17:39.000 --> 00:17:44.000
Tôi thực sự vừa sử dụng một trong những tính năng mới yêu thích của Safari 15: kéo để làm mới.

00:17:44.000 --> 00:17:45.000
Hừm.

00:17:45.000 --> 00:17:50.000
Điều đó khá gần với những gì tôi muốn, nhưng có vẻ như bây giờ nó hơi quá cao.

00:17:50.000 --> 00:17:52.000
Ồ, tôi thấy vấn đề.

00:17:52.000 --> 00:17:58.000
Tôi đã đưa ra phần đệm dưới cùng của khu vực đầu vào khi nó đã có lề dưới cùng và hai thứ đó xếp chồng lên nhau theo chiều dọc.

00:17:58.000 --> 00:18:03.000
Vì vậy, có vẻ như tôi chỉ nên cập nhật biên độ hiện có để sử dụng khu vực an toàn bên trong thay thế.

00:18:03.000 --> 00:18:21.000
Hãy điều chỉnh lại những phong cách này và xem nó trông như thế nào bây giờ.

00:18:21.000 --> 00:18:23.000
Hoàn hảo.

00:18:23.000 --> 00:18:26.000
Điều này thực sự cho thấy sức mạnh của các biến môi trường.

00:18:26.000 --> 00:18:28.000
Chúng có thể được áp dụng cho bất kỳ độ dài nào theo phong cách của bạn.

00:18:28.000 --> 00:18:33.000
Bạn có thể sử dụng chúng trong đường viền, lề, đệm, chiều cao dòng, bất cứ thứ gì.

00:18:33.000 --> 00:18:42.000
Khi thanh tab được thu nhỏ và mở rộng, giá trị của biến môi trường sẽ tự động cập nhật và Safari sẽ tự động bố trí lại trang với giá trị mới khi chúng thực hiện.

00:18:42.000 --> 00:18:49.000
Bạn cũng có thể thấy trong Dog Dog DC khu vực trò chuyện là khu vực thay đổi kích thước khi thanh tab được mở rộng như thế nào.

00:18:49.000 --> 00:18:54.000
Mọi thứ bên trên nó vẫn giữ nguyên kích thước, trong khi mọi thứ bên dưới nó ôm lấy thanh tab.

00:18:54.000 --> 00:19:00.000
Điều này là do chúng tôi đang sử dụng bố cục Flexbox, nơi loại hành vi này rất tự nhiên và dễ tạo ra.

00:19:00.000 --> 00:19:07.000
Nếu bạn chưa bắt đầu sử dụng các chế độ bố cục hiện đại hơn này như Flexbox hoặc grid, bây giờ sẽ là thời điểm tuyệt vời để cung cấp cho chúng một cái nhìn khác.

00:19:07.000 --> 00:19:11.000
Tiếp theo, hãy nghe từ Jen về một số tính năng tuyệt vời hơn trong Safari 15.

00:19:11.000 --> 00:19:12.000
Cảm ơn, Myles.

00:19:12.000 --> 00:19:19.000
Các biến môi trường là một công cụ mạnh mẽ khác để tạo bố cục phản hồi tự động với bất kỳ thiết bị nào mà ai đó đang sử dụng.

00:19:19.000 --> 00:19:24.000
Chúng ta cũng hãy xem một trang web trông như thế nào khi ai đó lưu nó dưới dạng ứng dụng Màn hình chính.

00:19:24.000 --> 00:19:28.000
Tôi có thể lưu trang web này vào Màn hình chính của mình chỉ bằng một cú chạm.

00:19:28.000 --> 00:19:31.000
Bây giờ biểu tượng trang web của tôi nằm trên Màn hình chính của tôi.

00:19:31.000 --> 00:19:35.000
Nếu tôi nhấn vào nó, tôi có thể thấy trang web được mở dưới dạng ứng dụng Màn hình chính.

00:19:35.000 --> 00:19:37.000
Nó trông thật tuyệt vời.

00:19:37.000 --> 00:19:41.000
Màu chủ đề lấp đầy phần trên cùng của màn hình, giống như trong Safari.

00:19:41.000 --> 00:19:44.000
Tôi có được một trải nghiệm giống như ứng dụng.

00:19:44.000 --> 00:19:47.000
Bạn sẽ nhận thấy không có thanh tab ở phía dưới.

00:19:47.000 --> 00:19:49.000
Chúng tôi không ở trong ứng dụng Safari.

00:19:49.000 --> 00:19:52.000
Chúng tôi đang ở trong ứng dụng thiết kế web Resilient.

00:19:52.000 --> 00:19:58.000
Vì vậy, đó là Safari mới và cách bạn có thể đảm bảo trang web của mình trông tuyệt vời.

00:19:58.000 --> 00:20:06.000
Tiếp theo, hãy nói về một số tính năng mới tuyệt vời của macOS, iOS và iPadOS và cách chúng sẽ tác động đến web.

00:20:06.000 --> 00:20:16.000
Thông thường, trải nghiệm đầu tiên mà mọi người sẽ có trên trang web của bạn là khi người khác nói với họ về nó, chẳng hạn như khi một người gửi liên kết đến một người khác trong Tin nhắn.

00:20:16.000 --> 00:20:21.000
Bất cứ khi nào điều này xảy ra, trang web sẽ xuất hiện dưới dạng một liên kết phong phú đơn giản.

00:20:21.000 --> 00:20:27.000
Cách thức hoạt động của các liên kết phong phú này nhất quán trên iOS, iPad OS và macOS.

00:20:27.000 --> 00:20:36.000
Và năm nay, với Shared with You, chúng tôi đã thêm nhiều địa điểm mới và nhiều cách mới để mọi người chia sẻ nội dung web với nhau.

00:20:36.000 --> 00:20:38.000
Đây chỉ là hai.

00:20:38.000 --> 00:20:43.000
Bạn sẽ muốn dành thời gian để đảm bảo trang web của mình trông tuyệt vời khi nó được trình bày trong các liên kết phong phú.

00:20:43.000 --> 00:20:52.000
Theo mặc định, nếu không có gì khác, các liên kết phong phú sẽ chọn tiêu đề trang web, URL trang web và biểu tượng yêu thích và hiển thị chúng một cách đơn giản.

00:20:52.000 --> 00:21:00.000
Chúng ta có thể cải thiện điều này bằng cách thêm vào siêu dữ liệu của chúng ta trong đầu HTML của chúng ta thông qua các thẻ meta với các tên được xác định trong giao thức đồ thị mở.

00:21:00.000 --> 00:21:05.000
Hãy chỉ định một tiêu đề tốt hơn một chút cho ngữ cảnh này so với tiêu đề trang web.

00:21:05.000 --> 00:21:08.000
Và chúng tôi sẽ chỉ định một hình ảnh để hiển thị.

00:21:08.000 --> 00:21:15.000
Chúng tôi muốn hình ảnh này là một cái gì đó cho trang web cụ thể này, giống như hình ảnh anh hùng từ nội dung của trang này.

00:21:15.000 --> 00:21:18.000
Nếu chúng tôi muốn, chúng tôi cũng có thể cung cấp một video.

00:21:18.000 --> 00:21:25.000
Video sẽ tự động phát âm thầm nếu người dùng cho phép và họ có thể nhấn vào nó để nghe âm thanh.

00:21:25.000 --> 00:21:32.000
Bạn có thể tìm hiểu thêm về các chi tiết trong "Đảm bảo các liên kết phong phú đẹp", một video ngắn trên developer.apple.com.

00:21:32.000 --> 00:21:39.000
Tùy chỉnh các liên kết phong phú của bạn là một chi tiết khác đảm bảo mọi người có trải nghiệm tuyệt vời với trang web hoặc ứng dụng web của bạn.

00:21:39.000 --> 00:21:44.000
Tiếp theo, chúng ta hãy xem xét trí thông minh thị giác và web.

00:21:44.000 --> 00:21:47.000
Rất nhiều văn bản trên web bị mắc kẹt bên trong hình ảnh.

00:21:47.000 --> 00:21:52.000
Bắt đầu từ Safari 15, chúng tôi đang sử dụng trí thông minh thị giác để giải phóng văn bản đó.

00:21:52.000 --> 00:21:58.000
Giờ đây mọi người có thể tương tác trực tiếp với nó, giống như họ làm với bất kỳ văn bản nào khác trên trang web.

00:21:58.000 --> 00:22:02.000
Đây là một hình ảnh trên Twitter chứa đầy văn bản.

00:22:02.000 --> 00:22:07.000
Khi chúng ta di chuột qua nó, thấy con trỏ chuột thay đổi thành con trỏ?

00:22:07.000 --> 00:22:12.000
Bây giờ chúng ta có thể kéo qua văn bản này và sao chép nó, giống như bất kỳ văn bản nào khác.

00:22:12.000 --> 00:22:24.000
Bất cứ khi nào bạn di chuột qua một hình ảnh trên macOS Monterey hoặc chạm vào hình ảnh trên iOS hoặc iPadOS 15, trí thông minh thị giác sẽ nhanh chóng tìm và nhận ra tất cả văn bản trong hình ảnh đó.

00:22:24.000 --> 00:22:37.000
Một khi trí thông minh thị giác tìm thấy văn bản, bạn không chỉ có thể chọn và sao chép nó, bạn có thể tra cứu nó, dịch nó, tìm kiếm trên web với cụm từ đó, chia sẻ văn bản, nghe nó, giống như bất kỳ văn bản nào khác.

00:22:37.000 --> 00:22:46.000
Văn bản mà trí thông minh thị giác tìm thấy, nó trở thành một phần của trang web và nó không trở thành một phần của trang web.

00:22:46.000 --> 00:22:53.000
Văn bản được đưa vào Shadow DOM bên trong hình ảnh, có nghĩa là nó không bị ảnh hưởng bởi JavaScript.

00:22:53.000 --> 00:22:55.000
Nhưng nó bị ảnh hưởng bởi z-order.

00:22:55.000 --> 00:23:03.000
Vì vậy, nếu có thứ gì đó phủ lên hình ảnh của bạn, như hộp trong suốt, trí thông minh thị giác sẽ không thể tìm thấy bất kỳ văn bản nào trong hình ảnh bên dưới.

00:23:03.000 --> 00:23:07.000
Lớp trên cùng cản trở.

00:23:07.000 --> 00:23:15.000
Chúng tôi đã tích hợp trí thông minh thị giác vào các công nghệ hỗ trợ như VoiceOver để làm cho văn bản bị mắc kẹt trong hình ảnh có sẵn cho nhiều người hơn.

00:23:15.000 --> 00:23:20.000
Nhưng điều đó không có nghĩa là tính năng này thay đổi các phương pháp hay nhất về khả năng tiếp cận hiện tại.

00:23:20.000 --> 00:23:33.000
Tất nhiên, nội dung trên web bao gồm chủ yếu là văn bản thực sự nên được đưa lên web dưới dạng văn bản trong HTML, được tạo kiểu với phông chữ web để mang lại cho nó giao diện nếu bạn muốn, nhưng dưới dạng nội dung văn bản.

00:23:33.000 --> 00:23:35.000
Đây vẫn là phương pháp hay nhất.

00:23:35.000 --> 00:23:45.000
Đối với nội dung là ảnh, hình minh họa hoặc hình ảnh khác, cách tốt nhất vẫn là bao gồm văn bản thay thế làm thuộc tính trên phần tử hình ảnh.

00:23:45.000 --> 00:23:52.000
Văn bản thay thế tuyệt vời cung cấp loại ý nghĩa và ngữ cảnh mà chỉ con người mới có thể giải thích.

00:23:52.000 --> 00:24:00.000
Thêm vào đó, không phải tất cả các trình duyệt đều có trí thông minh thị giác, vì vậy hãy tiếp tục đảm bảo rằng các hình ảnh trên trang web của bạn có văn bản thay thế hữu ích.

00:24:00.000 --> 00:24:11.000
Điều đó nói rằng, thật tuyệt khi có thể truy cập văn bản, cho đến bây giờ, bạn phải có khả năng xem để đọc hoặc nhập lại để trích dẫn ở một nơi khác.

00:24:11.000 --> 00:24:16.000
Tiếp theo, chúng ta hãy xem CSS đã được triển khai trong WebKit trong năm qua.

00:24:16.000 --> 00:24:19.000
Đầu tiên, tỷ lệ khung hình.

00:24:19.000 --> 00:24:26.000
Tỷ lệ khung hình là một thuộc tính CSS mới cho phép bạn đặt tỷ lệ khung hình ưa thích cho bất kỳ phần tử nào.

00:24:26.000 --> 00:24:30.000
Nhưng điều đó có nghĩa là gì, "đặt một tỷ lệ khung hình ưa thích"?

00:24:30.000 --> 00:24:35.000
Chà, trước tiên chúng ta hãy xem xét các loại nội dung trên web có tỷ lệ khung hình tự nhiên.

00:24:35.000 --> 00:24:37.000
Hình ảnh là một ví dụ điển hình.

00:24:37.000 --> 00:24:41.000
Giả sử chúng ta có một hình ảnh của Maggie rộng gấp đôi so với nó cao.

00:24:41.000 --> 00:24:44.000
Hình ảnh đó có tỷ lệ khung hình 2:1.

00:24:44.000 --> 00:24:54.000
Chúng tôi sẽ đưa hình ảnh này lên một trang web và làm cho nó linh hoạt bằng cách thêm chiều rộng: 100% và chiều cao: tự động, một kỹ thuật thiết kế web đáp ứng cổ điển.

00:24:54.000 --> 00:25:02.000
Bởi vì hình ảnh có tỷ lệ khung hình tự nhiên, chiều cao sẽ tự động thay đổi mối quan hệ trực tiếp với chiều rộng.

00:25:02.000 --> 00:25:08.000
Bức ảnh này luôn rộng gấp đôi so với chiều cao của nó, và Maggie luôn trông rất đẹp.

00:25:08.000 --> 00:25:13.000
Loại hành vi này rất được mong đợi, chúng tôi gần như thậm chí không nhìn thấy nó nữa.

00:25:13.000 --> 00:25:15.000
Đây chỉ là cách hình ảnh hoạt động.

00:25:15.000 --> 00:25:20.000
Video hoạt động theo cùng một cách khi bạn đặt nó vào HTML của trang bằng cách sử dụng phần tử video.

00:25:20.000 --> 00:25:24.000
Các tệp video cũng có tỷ lệ khung hình tự nhiên.

00:25:24.000 --> 00:25:30.000
Và yếu tố video truyền tải tỷ lệ khung hình đó đến trình duyệt khi nó tính toán bố cục trang.

00:25:30.000 --> 00:25:33.000
Nhưng không phải tất cả nội dung đều có tỷ lệ khung hình tự nhiên.

00:25:33.000 --> 00:25:36.000
Ở đây, tôi có một yếu tố bài viết.

00:25:36.000 --> 00:25:39.000
Bên trong, có một tiêu đề và một đoạn văn.

00:25:39.000 --> 00:25:43.000
Theo mặc định, phần tử bài viết có chiều rộng của ô tô và chiều cao của ô tô.

00:25:43.000 --> 00:25:49.000
Trong chế độ viết này, chiều rộng của tự động có nghĩa là vui lòng kéo dài bài viết ra để nó chiếm 100% không gian có sẵn.

00:25:49.000 --> 00:25:57.000
Chiều cao tự động có nghĩa là đủ cao để phù hợp với tất cả nội dung bên trong chế độ xem và không cao hơn.

00:25:57.000 --> 00:26:06.000
Chúng ta có thể thấy khi cột văn bản trở nên hẹp hơn, văn bản kết thúc thường xuyên hơn và chiếm ngày càng nhiều không gian dọc hơn.

00:26:06.000 --> 00:26:12.000
Khi cột trở nên rộng hơn, văn bản sẽ chảy lại và chiếm ngày càng ít không gian dọc hơn.

00:26:12.000 --> 00:26:21.000
Chiều cao hộp của tôi đang điều chỉnh để phù hợp với nội dung văn bản - không quá ngắn và không quá cao - mà không quan tâm đến bất kỳ loại tỷ lệ khung hình nào.

00:26:21.000 --> 00:26:24.000
Đối với hầu hết lịch sử của web, đây chỉ là cách bố cục hoạt động.

00:26:24.000 --> 00:26:38.000
Bất kỳ ý tưởng thiết kế đồ họa nào về việc sử dụng hình vuông hoặc làm hộp đều có hình dạng nhất quán, những ý tưởng thiết kế đó, tốt, chúng đã được ném vào xô "Không! Trang web không hoạt động theo cách đó!" Cho đến bây giờ.

00:26:38.000 --> 00:26:44.000
Bây giờ chúng ta có thể viết CSS để xác định tỷ lệ khung hình ưa thích trên các phần tử mà nếu không sẽ không có.

00:26:44.000 --> 00:26:59.000
Hãy thêm tỷ lệ khía cạnh: 1 / 1 vào mã của chúng tôi, cho biết bất kỳ chiều rộng nào mà điều này kết thúc, hãy nghĩ về điều đó như một đơn vị, và sau đó làm cho chiều cao cũng là một đơn vị, điều này có nghĩa là làm cho nó trở thành một hình vuông.

00:26:59.000 --> 00:27:03.000
Chiều cao phát triển lớn hơn trước đây để duy trì hình vuông đó.

00:27:03.000 --> 00:27:07.000
Nhưng điều gì sẽ xảy ra khi có quá nhiều nội dung để vừa với hình vuông đó?

00:27:07.000 --> 00:27:11.000
Theo mặc định, hộp sẽ tự động phát triển để cao hơn.

00:27:11.000 --> 00:27:22.000
Với một dòng mã, chúng ta có thể tạo một tập hợp các hình vuông hoặc bất kỳ hộp hình dạng nào với bất kỳ tỷ lệ khung hình nhất định nào, biết rằng nếu nội dung dài hơn trong một trong các hộp, hộp đó sẽ phát triển để ngăn tràn.

00:27:22.000 --> 00:27:31.000
Nếu chúng ta muốn tỷ lệ khung hình luôn được tuân thủ, ngay cả khi điều đó gây ra tràn, chúng ta có thể thêm chiều cao tối thiểu là 0 vào mã của mình.

00:27:31.000 --> 00:27:37.000
Có lẽ chúng tôi muốn xử lý tràn theo một cách khác, như bằng cách thêm tràn: cuộn.

00:27:37.000 --> 00:27:43.000
Bây giờ, tôi đã viết giá trị để làm cho hình vuông này là 1 / 1.

00:27:43.000 --> 00:27:47.000
Nhưng thay vào đó tôi chỉ có thể viết điều này dưới dạng tỷ lệ khía cạnh: 1.

00:27:47.000 --> 00:27:56.000
Nếu chỉ có một số, trình duyệt sẽ cho rằng nó "trên một". Trên thực tế, có rất nhiều cách tôi có thể thể hiện cùng một tỷ lệ khung hình, bao gồm cả việc sử dụng các số thập phân.

00:27:56.000 --> 00:28:05.000
Điều này cho phép chúng tôi tự do viết tỷ lệ khung hình theo những cách mà bạn có thể quen thuộc từ các ngành công nghiệp khác như phim ảnh và truyền hình hoặc nghệ thuật và thiết kế.

00:28:05.000 --> 00:28:19.000
Trong thập kỷ qua, hầu như không thể sử dụng các tỷ lệ này trên web, mặc dù chúng đã có một vị trí sâu sắc và có ý nghĩa trong văn hóa con người trong kiến trúc, hội họa, thiết kế sách, thiết kế in ấn hiện đại.

00:28:19.000 --> 00:28:22.000
Bây giờ chúng ta có thể xây dựng bố cục của mình bằng cách sử dụng các tỷ lệ này.

00:28:22.000 --> 00:28:28.000
Đặc biệt là khi bạn kết hợp tỷ lệ khía cạnh với lưới CSS, tất cả các loại khả năng thiết kế mới sẽ mở ra.

00:28:28.000 --> 00:28:36.000
Nói về phim và video, một trường hợp sử dụng rất phổ biến cho tỷ lệ khung hình sẽ là video được nhúng từ các dịch vụ của bên thứ ba.

00:28:36.000 --> 00:28:44.000
Nếu bạn sử dụng YouTube, Vimeo, Wistia hoặc bất kỳ nhà cung cấp dịch vụ lưu trữ video nào, những người đó sẽ cung cấp cho bạn một iFrame để nhúng video của bạn.

00:28:44.000 --> 00:28:49.000
Phần tử iFrame không phải là phần tử có tỷ lệ khung hình tự nhiên.

00:28:49.000 --> 00:28:56.000
Khi thiết kế web đáp ứng xuất hiện, chúng tôi muốn làm cho các video nhúng của mình trở nên linh hoạt, nhưng chúng tôi đã gặp rắc rối.

00:28:56.000 --> 00:29:03.000
Chúng tôi đã bị mắc kẹt khi sử dụng một bản hack đệm khó hiểu trong CSS hoặc sử dụng JavaScript để thay đổi kích thước video.

00:29:03.000 --> 00:29:09.000
Bây giờ chúng ta có thể thêm một dòng CSS để cung cấp cho iFrame đó một tỷ lệ khung hình ưa thích.

00:29:09.000 --> 00:29:13.000
Đó là một giải pháp rất thanh lịch cho một vấn đề rất phổ biến.

00:29:13.000 --> 00:29:19.000
Tỷ lệ khung hình: nó cung cấp cho chúng ta một công cụ mạnh mẽ khác để tạo ra bố cục mà chúng ta muốn.

00:29:19.000 --> 00:29:22.000
Tiếp theo, những khoảng trống linh hoạt.

00:29:22.000 --> 00:29:29.000
Năm nay trong Safari 14.1, chúng tôi đã vận chuyển hỗ trợ cho các khoảng trống trong các thùng chứa Flexbox.

00:29:29.000 --> 00:29:36.000
Khoảng cách linh hoạt cung cấp cho bạn một cách để xác định không gian tối thiểu giữa các mục để đảm bảo rằng luôn có một khoảng trống.

00:29:36.000 --> 00:29:39.000
Ở đây, tôi có một thanh điều hướng mà tôi đã đặt ra trong Flexbox.

00:29:39.000 --> 00:29:42.000
Tôi không muốn những món trên thanh menu này chạm vào nhau.

00:29:42.000 --> 00:29:49.000
Nếu tôi thêm một thuộc tính khoảng cách, với giá trị 1rem, bây giờ luôn có một khoảng trống giữa các mục.

00:29:49.000 --> 00:29:51.000
Không cần lề trái hoặc lề phải.

00:29:51.000 --> 00:29:55.000
Tôi không cần phải tìm ra cách loại bỏ những lề đó ở rìa bên ngoài.

00:29:55.000 --> 00:29:57.000
Điều này đơn giản hơn nhiều.

00:29:57.000 --> 00:30:07.000
Có nhiều tính năng khác trong CSS đã được triển khai trong WebKit năm nay, bao gồm các thuộc tính logic bổ sung, rất quan trọng để hỗ trợ khán giả quốc tế.

00:30:07.000 --> 00:30:12.000
Các thuộc tính biến đổi riêng lẻ: xoay, dịch và chia tỷ lệ.

00:30:12.000 --> 00:30:15.000
Cập nhật và cải tiến để cuộn lề và cuộn snap.

00:30:15.000 --> 00:30:18.000
Hỗ trợ cho không gian màu mới.

00:30:18.000 --> 00:30:22.000
Và hoạt ảnh của các yếu tố giả và các thuộc tính rời rạc.

00:30:22.000 --> 00:30:31.000
Nhiều tính năng trong số này đã được vận chuyển vào mùa xuân vừa qua trong Safari 14.1 trên macOS và Safari cho iOS và iPadOS 14.5.

00:30:31.000 --> 00:30:35.000
Và phần còn lại sẽ được giao vào mùa thu này trong Safari 15.

00:30:35.000 --> 00:30:38.000
Tiếp theo, chúng ta hãy xem xét các điều khiển biểu mẫu.

00:30:38.000 --> 00:30:44.000
Trong Safari 14.1, chúng tôi đã vận chuyển hỗ trợ cho các đầu vào Ngày và Giờ trên macOS.

00:30:44.000 --> 00:30:51.000
Bây giờ trên Mac, người dùng có thể điền vào các trường Ngày bằng cách tương tác với điều khiển Lịch hoặc điền thời gian bằng điều khiển Thời gian.

00:30:51.000 --> 00:30:54.000
Và xác thực phía máy khách được tích hợp ngay.

00:30:54.000 --> 00:31:00.000
Đối với iOS và iPadOS 15, chúng tôi đã thiết kế lại hoàn toàn các điều khiển biểu mẫu.

00:31:00.000 --> 00:31:05.000
Chúng sẽ phù hợp hơn với trải nghiệm tổng thể và phù hợp hơn nhiều với UIKit.

00:31:05.000 --> 00:31:07.000
Và chúng trông cũng tuyệt vời ở Chế độ tối.

00:31:07.000 --> 00:31:10.000
Đây là những mặc định mới cho các điều khiển biểu mẫu.

00:31:10.000 --> 00:31:15.000
Nếu bạn đã ghi đè bất kỳ phong cách nào trong số này, thì tất nhiên, phong cách của bạn sẽ được áp dụng.

00:31:15.000 --> 00:31:28.000
Chúng tôi cũng đã triển khai một bộ chọn màu mới cho loại đầu vào "màu sắc" trên iOS và iPadOS với ba bảng để chọn hoặc điều chỉnh màu, cộng với ống nhỏ mắt.

00:31:28.000 --> 00:31:34.000
Đó là chuyến tham quan Safari 15 của chúng tôi và một số điểm nổi bật về những gì đã hạ cánh trên WebKit năm nay.

00:31:34.000 --> 00:31:44.000
Nhưng trước khi tôi đi, tôi muốn đảm bảo rằng bạn biết nơi tìm các tài nguyên quan trọng để tìm hiểu thêm về Safari và WebKit và nơi bạn có thể gửi phản hồi về những gì bạn muốn xem tiếp theo.

00:31:44.000 --> 00:31:47.000
Các liên kết đến tất cả các tài nguyên này có trong ghi chú cho phiên này.

00:31:47.000 --> 00:31:59.000
Nếu bạn quan tâm đến việc tìm hiểu về JavaScript mới, DOM APIs và hỗ trợ định dạng phương tiện, hãy xem "Phát triển nội dung web nâng cao" tại đây tại WWDC21.

00:31:59.000 --> 00:32:07.000
Chắc chắn xem "Khám phá các cải tiến của trình kiểm tra Web" và tìm hiểu về các công cụ phát triển web mới đến với Safari, bao gồm cả trình kiểm tra CSS Grid của riêng chúng tôi.

00:32:07.000 --> 00:32:14.000
Để cập nhật những gì sắp tới trong tương lai, hãy tải xuống Bản xem trước công nghệ Safari, bản có logo màu tím.

00:32:14.000 --> 00:32:16.000
Nó cập nhật khoảng hai tuần một lần.

00:32:16.000 --> 00:32:24.000
Đó là một cách đặc biệt tuyệt vời để kiểm tra các bản sửa lỗi mới nhất và sử dụng những tiến bộ gần đây nhất trong trình kiểm tra Web.

00:32:24.000 --> 00:32:33.000
Webkit.org là nơi dành cho các ghi chú phát hành WebKit, các bài viết chi tiết về các công nghệ web mới và tài liệu cho trình kiểm tra Web.

00:32:33.000 --> 00:32:35.000
Và chúng tôi muốn nghe từ bạn.

00:32:35.000 --> 00:32:44.000
Nếu bạn có đề xuất cho trình kiểm tra Web hoặc cho giao diện của Safari, hãy gửi phản hồi trong Trợ lý phản hồi của Apple.

00:32:44.000 --> 00:32:56.000
Nếu bạn gặp lỗi trong WebKit, điều gì đó về HTML, CSS, JavaScript hoặc DOM APIs có vẻ bị hỏng hoặc bị thiếu, vui lòng gửi phiếu tại bugs.webkit.org.

00:32:56.000 --> 00:33:01.000
Và bạn có thể tìm và theo dõi chúng tôi trên Twitter @webkit.

00:33:01.000 --> 00:33:18.000
Tôi hy vọng bạn cũng hào hứng với thiết kế mới của Safari 15 như chúng tôi, cách thanh tab mới mang đến cho bạn một chiều hướng mới cho thiết kế của bạn, khả năng bố cục mới với tỷ lệ khung hình, điều khiển biểu mẫu hoàn toàn mới trên iOS và iPad OS, và hơn thế nữa.

00:33:18.000 --> 00:33:21.000
Tôi nóng lòng muốn xem điều này mang lại những đổi mới nào trong thiết kế web.

00:33:21.000 --> 00:33:25.000
Cảm ơn vì đã tham gia cùng tôi và tận hưởng WWDC.

00:33:25.000 --> 23:59:59.000
[Nhạc lạc quan].

