WEBVTT

00:00:00.000 --> 00:00:14.000
Xin chào. Tôi là Camille Moussette, nhà thiết kế trong nhóm Thiết kế Apple.

00:00:14.000 --> 00:00:22.000
Trong phần này, tôi sẽ hướng dẫn bạn các bước thực tế và cân nhắc thiết kế để thêm âm thanh và phản hồi xúc giác vào một ứng dụng.

00:00:22.000 --> 00:00:32.000
Trong lịch sử, nó khá khó khăn cả từ góc độ thiết kế và kỹ thuật để cung cấp trải nghiệm ứng dụng phong phú bao gồm hoạt hình, âm thanh và xúc giác.

00:00:32.000 --> 00:00:39.000
Với Core Haptics trên iPhone, giờ đây việc tạo ra những khoảnh khắc kỳ diệu trông, âm thanh và cảm giác chân thực trở nên dễ dàng hơn.

00:00:39.000 --> 00:00:47.000
Để giải thích và thực hành những kỹ năng đó, tôi sẽ sử dụng một ứng dụng iOS có nguồn gốc từ một dự án mẫu mã trước đó có tên là HapticBounce.

00:00:47.000 --> 00:00:56.000
Một vài bổ sung đã được thực hiện để làm cho nó giống như một trò chơi nhỏ và cung cấp một khung vẽ để thiết kế hình ảnh, âm thanh và xúc giác hoạt động tốt với nhau.

00:00:56.000 --> 00:01:01.000
Bản demo mới được gọi là HapticRicochet.

00:01:01.000 --> 00:01:09.000
HapticRicochet là câu chuyện về một quả bóng trở nên sống động trong iPhone và di chuyển xung quanh dựa trên định hướng của iPhone.

00:01:09.000 --> 00:01:18.000
Quả bóng lăn xung quanh và bật ra khỏi tường của điện thoại với âm thanh và phản hồi xúc giác, giống như bạn mong đợi trong thế giới vật chất.

00:01:18.000 --> 00:01:22.000
Nếu bạn chạm bóng...

00:01:22.000 --> 00:01:23.000
Nó phát triển thành một quả bóng lớn hơn.

00:01:23.000 --> 00:01:28.000
Nếu bạn chạm một lần nữa, một lá chắn sẽ được thêm vào quả bóng.

00:01:28.000 --> 00:01:37.000
Tấm chắn đó bị hư hỏng và cạn kiệt với mỗi lần va chạm với các bức tường, và cuối cùng quả bóng nổ tung và chết.

00:01:37.000 --> 00:01:43.000
Chúng tôi cũng đã thêm một kết cấu vào nền mà bạn bật hoặc tắt bằng cách nhấn vào bất kỳ đâu trên nền.

00:01:43.000 --> 00:01:55.000
Đối với phiên này, tôi sẽ chỉ tập trung vào hai cơ chế: thêm tấm chắn và cho phép kết cấu lăn.

00:01:55.000 --> 00:01:59.000
Trước khi tôi tiếp tục, hãy xem lại chương trình nghị sự.

00:01:59.000 --> 00:02:04.000
Trước tiên tôi sẽ xem xét các nguyên tắc thiết kế âm thanh và xúc giác chính mà chúng tôi thường sử dụng trong Apple.

00:02:04.000 --> 00:02:14.000
Tôi sẽ tiếp tục với phần giới thiệu ngắn gọn về Core Haptics, khuôn khổ cho phép phản hồi đa phương thức phong phú.

00:02:14.000 --> 00:02:26.000
Cốt lõi của phiên sẽ kiểm tra dự án HapticRicochet trong Xcode và xem cách người ta thêm, thiết kế và tinh chỉnh phản hồi cho các khoảnh khắc kết cấu khiên và lăn.

00:02:26.000 --> 00:02:34.000
Thiết kế trải nghiệm đa phương thức có thể là một thách thức, nhưng khi được thực hiện tốt, nó thực sự nâng cao trải nghiệm người dùng.

00:02:34.000 --> 00:02:38.000
Nó cảm thấy kỳ diệu, thú vị và vừa phải.

00:02:38.000 --> 00:02:41.000
Một ví dụ là nút Đèn pin trong iOS.

00:02:41.000 --> 00:02:50.000
Nó kết hợp hoạt hình trực quan, âm thanh và phản hồi xúc giác trong một trải nghiệm thống nhất rõ ràng, chính xác và ngắn gọn.

00:02:50.000 --> 00:02:56.000
Đó là một quá trình lặp đi lặp lại và sáng tạo liên quan đến nỗ lực thiết kế và kỹ thuật.

00:02:56.000 --> 00:03:07.000
Thông thường bạn sẽ cảm nhận được xúc giác hơn là nghe thấy chúng, nhưng với mục đích trình diễn, chúng tôi đã chuyển đổi những xúc giác này thành âm thanh để bạn có thể nghe thấy nó trong video này.

00:03:07.000 --> 00:03:13.000
Để giúp đạt được điều kỳ diệu và thích thú trong trải nghiệm ứng dụng của bạn, đây là ba nguyên tắc để hướng dẫn công việc.

00:03:13.000 --> 00:03:18.000
Chúng rất hữu ích cho chúng tôi trong nội bộ, và tôi hy vọng chúng cũng có thể giúp bạn.

00:03:18.000 --> 00:03:25.000
Chúng là quan hệ nhân quả, hài hòa và tiện ích.

00:03:25.000 --> 00:03:29.000
Để phản hồi hữu ích, phải rõ ràng nguyên nhân gây ra nó.

00:03:29.000 --> 00:03:33.000
Đó là về việc làm cho nguồn hoặc nguyên nhân của phản hồi rõ ràng và rõ ràng.

00:03:33.000 --> 00:03:39.000
Hình thức đơn giản nhất là nhận phản hồi khi quả bóng chạm vào tường và ranh giới của điện thoại.

00:03:39.000 --> 00:03:43.000
Đó là một sự va chạm với âm thanh và xúc giác liên quan.

00:03:43.000 --> 00:03:49.000
Tương tự, kết cấu lăn xúc giác chỉ được trình bày khi hình nền được hiển thị.

00:03:49.000 --> 00:03:54.000
Bạn hiểu rằng lưới là thứ đã tạo ra cảm giác đó.

00:03:54.000 --> 00:04:05.000
Nguyên tắc thứ hai của chúng tôi, sự hài hòa, nhấn mạnh rằng các giác quan của chúng tôi hoạt động tốt nhất khi chúng mạch lạc, nhất quán và làm việc cùng nhau để tạo ra một trải nghiệm nhất định.

00:04:05.000 --> 00:04:10.000
Nó nên cảm nhận được vẻ ngoài của nó, và âm thanh của nó.

00:04:10.000 --> 00:04:13.000
Một quả bóng nhỏ nên cảm thấy nhỏ và âm thanh nhỏ.

00:04:13.000 --> 00:04:20.000
Một quả bóng lớn phải phát ra âm thanh và cảm thấy nặng hơn, giống như nó có khối lượng thực sự tăng thêm.

00:04:20.000 --> 00:04:27.000
Nguyên tắc thứ ba của chúng tôi, tiện ích, là cung cấp giá trị rõ ràng cho trải nghiệm ứng dụng của bạn.

00:04:27.000 --> 00:04:30.000
Đừng thêm phản hồi chỉ vì bạn có thể.

00:04:30.000 --> 00:04:34.000
Nó có thể nhanh chóng trở nên quá sức và khó chịu.

00:04:34.000 --> 00:04:41.000
Dự trữ xúc giác và âm thanh cho những khoảnh khắc quan trọng trong ứng dụng của bạn, như sự phát triển của quả bóng.

00:04:41.000 --> 00:04:44.000
Tiếp theo, hãy xem lại Core Haptics.

00:04:44.000 --> 00:04:51.000
Core Haptics là công nghệ trên iPhone và iOS cho phép bạn thiết kế xúc giác tùy chỉnh và phản hồi âm thanh cho ứng dụng của mình.

00:04:51.000 --> 00:05:01.000
Đó là một API mạnh mẽ tập trung vào bốn yếu tố cơ bản: công cụ, trình phát, mô hình và sự kiện.

00:05:01.000 --> 00:05:03.000
Hãy xem lại chúng một cách ngắn gọn.

00:05:03.000 --> 00:05:06.000
Yếu tố cấp cao nhất là động cơ.

00:05:06.000 --> 00:05:10.000
Đó là liên kết của chúng tôi với bộ truyền động vật lý trên điện thoại.

00:05:10.000 --> 00:05:12.000
Tiếp theo chúng ta có một người chơi.

00:05:12.000 --> 00:05:17.000
Nó được sử dụng để điều khiển phát lại, như bắt đầu, dừng và tạm dừng.

00:05:17.000 --> 00:05:20.000
Sau đó chúng ta có các mô hình và sự kiện.

00:05:20.000 --> 00:05:23.000
Các mẫu là một tập hợp các sự kiện theo thời gian.

00:05:23.000 --> 00:05:27.000
Sự kiện là các khối xây dựng được sử dụng để xác định trải nghiệm.

00:05:27.000 --> 00:05:29.000
Có rất nhiều loại sự kiện.

00:05:29.000 --> 00:05:33.000
Những cái phổ biến nhất là thoáng qua và liên tục.

00:05:33.000 --> 00:05:37.000
Trên thực tế, đây là một ví dụ cụ thể về một mô hình được tạo thành từ các sự kiện.

00:05:37.000 --> 00:05:45.000
Tôi đang sử dụng QuickLook Visualizer có sẵn trong MacOS 12 để xem mẫu xúc giác được chỉ định trong tệp .ahap.

00:05:45.000 --> 00:05:49.000
AHAP là viết tắt của Apple Haptic Audio Pattern.

00:05:49.000 --> 00:05:51.000
Hãy xem lại nó một lần nữa.

00:05:51.000 --> 00:05:59.000
Chọn một tệp .ahap trong Finder, sau đó nhấn phím cách trên bàn phím của bạn.

00:05:59.000 --> 00:06:03.000
Bây giờ chúng ta hãy xem xét chi tiết các mục trong mẫu.

00:06:03.000 --> 00:06:08.000
Sự kiện đầu tiên màu xanh lam là một sự kiện thoáng qua.

00:06:08.000 --> 00:06:14.000
Sự kiện thứ hai trong màu cam là một sự kiện liên tục.

00:06:14.000 --> 00:06:16.000
Mẫu đang sử dụng cú pháp JSON.

00:06:16.000 --> 00:06:21.000
Sự kiện tạm thời được tạo ra từ mã này.

00:06:21.000 --> 00:06:25.000
Điều này tổng hợp tổng quan của chúng tôi về Core Haptics.

00:06:25.000 --> 00:06:29.000
Để biết thêm thông tin chuyên sâu, hãy xem tài liệu trực tuyến.

00:06:29.000 --> 00:06:35.000
Đối với việc thực hành trong phiên này, chúng tôi sẽ tập trung vào việc tải, thay đổi và chơi các mẫu.

00:06:35.000 --> 00:06:37.000
Đã đến lúc cho Xcode và HapticRicochet.

00:06:37.000 --> 00:06:42.000
Mở dự án từ thư mục HapticRicochet-Start.

00:06:42.000 --> 00:06:46.000
Đảm bảo rằng bạn có thể biên dịch và chạy dự án trên iPhone của mình.

00:06:46.000 --> 00:06:49.000
Trình mô phỏng không hoạt động cho xúc giác.

00:06:49.000 --> 00:06:53.000
Bạn cần một chiếc iPhone 8 vật lý hoặc mới hơn để cảm nhận xúc giác.

00:06:53.000 --> 00:06:58.000
Xác minh rằng điện thoại không bị tắt tiếng và mức âm lượng cao.

00:06:58.000 --> 00:07:06.000
Kế hoạch là làm việc với các tệp ViewController và các tệp nội dung .ahap, .wav và .png.

00:07:06.000 --> 00:07:10.000
Đảm bảo rằng bạn làm quen với trò chơi và tất cả các tương tác của nó.

00:07:10.000 --> 00:07:15.000
Hãy nhớ rằng, bạn có thể chạm vào quả bóng, chạm vào nền và nghiêng điện thoại xung quanh.

00:07:15.000 --> 00:07:24.000
Khi bạn đã sẵn sàng, hãy đi sâu vào quá trình biến đổi lá chắn.

00:07:24.000 --> 00:07:30.000
Tôi sẽ sử dụng nguyên tắc hài hòa để phân tích khoảnh khắc khiên và xem xét các chi tiết thiết kế.

00:07:30.000 --> 00:07:38.000
Đối với hình ảnh, chúng tôi có một hình ảnh động có thời lượng 500 mili giây và trông như thế này ở phía trên bên phải.

00:07:38.000 --> 00:07:43.000
Đối với xúc giác, chúng tôi sẽ muốn làm nổi bật sự chuyển đổi sang một trạng thái mới.

00:07:43.000 --> 00:07:51.000
Đối với âm thanh, chúng tôi muốn truyền tải mức tăng năng lượng và trạng thái kết thúc mạnh mẽ và được bảo vệ.

00:07:51.000 --> 00:07:56.000
Đối với thực tiễn này, chúng tôi đã tạo ra hai tài sản khác nhau truyền đạt những phẩm chất khác nhau.

00:07:56.000 --> 00:08:00.000
Chúng tôi sẽ xem xét chúng và xem điều gì phù hợp nhất với trải nghiệm khiên.

00:08:00.000 --> 00:08:06.000
Nhưng trước tiên, hãy xem cách chúng ta tải và chơi phản hồi cho lá chắn.

00:08:06.000 --> 00:08:10.000
Về mặt chức năng, mã được chia thành hai phần.

00:08:10.000 --> 00:08:18.000
Đầu tiên chúng tôi khởi tạo các khối xây dựng của mình và thứ hai, một chức năng để chơi và hiển thị sự biến đổi lá chắn đó.

00:08:18.000 --> 00:08:24.000
Trong hàm initializeShieldHaptics, trước tiên tôi tạo một mẫu từ tệp ShieldTransient.

00:08:24.000 --> 00:08:29.000
Sau đó tạo một shieldPlayer với mẫu đó.

00:08:29.000 --> 00:08:33.000
Phản hồi đã sẵn sàng để chơi vào thời điểm này.

00:08:33.000 --> 00:08:38.000
Lá chắn hàm được gọi khi phép biến đổi đã sẵn sàng để được hiển thị.

00:08:38.000 --> 00:08:44.000
Phản hồi xúc giác và âm thanh được phát thông qua gọi startPlayer trên shieldPlayer của chúng tôi.

00:08:44.000 --> 00:08:48.000
Đó là một chức năng tiện lợi mà chúng tôi sử dụng lại thường xuyên trong dự án.

00:08:48.000 --> 00:08:52.000
Hình ảnh động trực quan sau đó được phát.

00:08:52.000 --> 00:08:56.000
Bây giờ hãy nhìn vào tài sản ShieldTransient của chúng tôi.

00:08:56.000 --> 00:09:00.000
Nó xác định trải nghiệm mà chúng ta có cho phản hồi xúc giác và âm thanh.

00:09:00.000 --> 00:09:08.000
Cảm giác nên có cảm giác như thế này: Và âm thanh sẽ phát ra như thế này: Tôi thích âm thanh.

00:09:08.000 --> 00:09:12.000
Cảm giác như một sự mạnh mẽ và bảo vệ cho quả bóng.

00:09:12.000 --> 00:09:14.000
Hãy nghe lại lần nữa.

00:09:14.000 --> 00:09:17.000
Vấn đề là xúc giác và âm thanh không thực sự phù hợp.

00:09:17.000 --> 00:09:19.000
Haptic được tạo thành từ ba chuyển tiếp...

00:09:19.000 --> 00:09:23.000
Trong khi âm thanh liên tục và liên tục.

00:09:23.000 --> 00:09:26.000
Không có sự hài hòa giữa hai giác quan.

00:09:26.000 --> 00:09:33.000
Hãy xem xét tài sản thay thế được gọi là ShieldContinuous.

00:09:33.000 --> 00:09:35.000
Nó có một sự tiến triển xúc giác liên tục...

00:09:35.000 --> 00:09:38.000
Và một âm thanh lung lay phân rã.

00:09:38.000 --> 00:09:44.000
Một lần nữa, tôi có thể cảm nhận và nghe thấy rằng xúc giác và âm thanh không thực sự phù hợp.

00:09:44.000 --> 00:09:46.000
Nhưng tôi thích xúc giác.

00:09:46.000 --> 00:09:50.000
Cảm giác như một sự biến đổi tốt để có được một lá chắn.

00:09:50.000 --> 00:09:52.000
Hãy nghe lại xúc giác.

00:09:52.000 --> 00:10:00.000
Kế hoạch của tôi là sử dụng mô hình xúc giác liên tục đó nhưng sử dụng âm thanh từ tài sản đầu tiên.

00:10:00.000 --> 00:10:08.000
Tôi sẽ sử dụng hai nội dung và lấy âm thanh tôi thích từ mẫu đầu tiên và sử dụng nó trong mẫu xúc giác liên tục thứ hai.

00:10:08.000 --> 00:10:11.000
Hãy xem tôi làm điều đó như thế nào trong thực tế.

00:10:11.000 --> 00:10:18.000
Đầu tiên tôi mở tệp ShieldContinuous.ahap trong trình soạn thảo văn bản và cuộn đến cuối tệp.

00:10:18.000 --> 00:10:26.000
Bạn sẽ thấy sự kiện này, nơi chúng tôi chỉ định tệp âm thanh để phát với xúc giác.

00:10:26.000 --> 00:10:31.000
Nó đang sử dụng EventType AudioCustom với tên tệp cho tệp âm thanh.

00:10:31.000 --> 00:10:38.000
Bạn có thể chỉ định và điều chỉnh âm lượng bằng ParameterValue.

00:10:38.000 --> 00:10:49.000
Để sử dụng âm thanh ưa thích, tôi thay đổi tham chiếu tệp từ ShieldB.wav thành ShieldA.wav.

00:10:49.000 --> 00:10:52.000
Tài sản sửa đổi và cuối cùng trông như thế này.

00:10:52.000 --> 00:10:55.000
Sự xúc giác...

00:10:55.000 --> 00:10:58.000
Và âm thanh mạch lạc.

00:10:58.000 --> 00:11:01.000
Họ hỗ trợ và củng cố lẫn nhau.

00:11:01.000 --> 00:11:05.000
Hãy cùng nhau nghe âm thanh và xúc giác kết hợp.

00:11:05.000 --> 00:11:11.000
Thay đổi cuối cùng cần thiết là sử dụng tài sản cuối cùng mà tôi vừa tạo.

00:11:11.000 --> 00:11:23.000
Tôi quay lại chức năng InitializeShieldHaptics và thay vì sử dụng ShieldTransient, tôi chỉ định và tải tệp ShieldContinuous.

00:11:23.000 --> 00:11:26.000
Voilà! Ở đây chúng tôi có nó.

00:11:26.000 --> 00:11:29.000
Bây giờ tôi biên dịch và chạy trên thiết bị.

00:11:29.000 --> 00:11:36.000
Tôi kết thúc với một sự biến đổi lá chắn hài hòa mà cảm thấy vừa phải.

00:11:36.000 --> 00:11:43.000
Xúc giác, âm thanh và hình ảnh đang hoạt động tốt với nhau để truyền tải việc bổ sung bảo vệ lá chắn cho quả bóng.

00:11:43.000 --> 00:11:49.000
Tiếp theo, tôi sẽ xem xét cách thêm kết cấu cuộn vào ứng dụng.

00:11:49.000 --> 00:11:55.000
HapticRicochet bắt đầu không có kết cấu lăn, chỉ va chạm với các bức tường.

00:11:55.000 --> 00:12:03.000
Nếu tôi chạm vào nền, kết cấu chấm bi sẽ xuất hiện và tôi nhận được phản hồi xúc giác bổ sung khi quả bóng lăn xung quanh.

00:12:03.000 --> 00:12:09.000
Chúng tôi sẽ gặp phải và giải quyết hai vấn đề trong tương lai, một vấn đề có tính chất kỹ thuật.

00:12:09.000 --> 00:12:15.000
Cái còn lại liên quan đến thiết kế của trải nghiệm.

00:12:15.000 --> 00:12:22.000
Trong hàm initializeTextureHaptics, trước tiên tôi tạo một mẫu từ tệp ahap kết cấu.

00:12:22.000 --> 00:12:26.000
Sau đó tôi tạo một ShieldPlayer với mẫu đó.

00:12:26.000 --> 00:12:32.000
Chức năng updateTexturePlayer được gọi trên mọi khung hình mà kết cấu đang hoạt động.

00:12:32.000 --> 00:12:37.000
Chúng tôi sử dụng nó để cập nhật cường độ xúc giác dựa trên tốc độ của quả bóng.

00:12:37.000 --> 00:12:40.000
Hãy xem kết quả.

00:12:40.000 --> 00:12:45.000
Vấn đề tôi nhận thấy là kết cấu biến mất sau vài giây.

00:12:45.000 --> 00:12:50.000
Tôi biết tại sao nó lại xảy ra như thế này.

00:12:50.000 --> 00:12:53.000
Có một cách dễ dàng để khắc phục hành vi đó.

00:12:53.000 --> 00:13:00.000
Vấn đề chúng tôi gặp phải là kết cấu của các tệp .ahap chỉ có 2 giây nội dung xúc giác.

00:13:00.000 --> 00:13:05.000
Có một cách để thay đổi hành vi đó và làm cho nó chơi không ngừng.

00:13:05.000 --> 00:13:14.000
Biến thể nâng cao của trình phát mẫu cung cấp các chức năng bổ sung như tạm dừng, tiếp tục và các cuộc gọi lại khác.

00:13:14.000 --> 00:13:21.000
Trong HapticRicochet, tôi sẽ chỉ sử dụng trình phát mẫu nâng cao cho khả năng lặp lại của nó.

00:13:21.000 --> 00:13:24.000
Hãy cùng trải qua sự thay đổi này.

00:13:24.000 --> 00:13:32.000
Đầu tiên tôi sửa đổi khai báo của texturePlayer thành loại CHHapticAdvancedPatternPlayer.

00:13:32.000 --> 00:13:38.000
Sau đó, tôi sẽ sử dụng cùng một tệp kết cấu, nhưng lần này, tạo một AdvancedPlayer.

00:13:38.000 --> 00:13:43.000
Bây giờ tôi có thể kích hoạt hành vi lặp lại trên AdvancedPlayer đó.

00:13:43.000 --> 00:13:47.000
Điều tuyệt vời là phần còn lại của mã vẫn giữ nguyên.

00:13:47.000 --> 00:13:51.000
Hãy xem kết quả.

00:13:51.000 --> 00:14:00.000
Kết cấu lăn diễn ra trong một vòng lặp lần này mà không có sự tạm dừng hoặc đường may rõ ràng.

00:14:00.000 --> 00:14:09.000
Vấn đề thứ hai tôi muốn giải quyết liên quan đến giao diện của kết cấu.

00:14:09.000 --> 00:14:16.000
Chúng tôi thấy rằng tài sản mô hình xúc giác của chúng tôi khá dày đặc, với gần 100 mục nhập trong 2 giây.

00:14:16.000 --> 00:14:21.000
Kết cấu nền trực quan của chúng tôi rất thô, chỉ với một vài chấm ngang.

00:14:21.000 --> 00:14:29.000
Tôi nghĩ trải nghiệm sẽ được cải thiện và thực tế hơn nếu mô hình chấm dày đặc hơn.

00:14:29.000 --> 00:14:35.000
Tôi sẽ thay đổi tệp tài nguyên mà chúng tôi đã sử dụng cho backgroundImage để sử dụng phiên bản Fine của tệp này.

00:14:35.000 --> 00:14:39.000
Nếu tôi chạy ứng dụng, kết cấu dày đặc hơn mới sẽ được sử dụng.

00:14:39.000 --> 00:14:41.000
Hãy cùng xem nào.

00:14:41.000 --> 00:14:57.000
Nếu bạn gặp sự cố hoặc sự cố, chúng tôi đã đưa phiên bản cuối cùng của dự án vào thư mục HapticRicochet-Final.

00:14:57.000 --> 00:15:06.000
Nó có tất cả những thay đổi mà chúng tôi đã thực hiện trong phiên này, sẵn sàng để biên dịch và cảm nhận trên iPhone của bạn.

00:15:06.000 --> 00:15:10.000
Vẫn còn chỗ để bạn khám phá và thiết kế những trải nghiệm xúc giác của riêng mình.

00:15:10.000 --> 00:15:18.000
Tôi mời bạn xem xét sự biến đổi khác trong trò chơi và cố gắng thiết kế phản hồi xúc giác và âm thanh mới của riêng bạn cho họ.

00:15:18.000 --> 00:15:26.000
Tóm lại, tôi đã giới thiệu các nguyên tắc thiết kế âm thanh và xúc giác có thể hướng dẫn bạn thiết kế những trải nghiệm đa phương thức tuyệt vời trong ứng dụng của mình.

00:15:26.000 --> 00:15:32.000
Tôi đã xem xét các nguyên tắc cơ bản của Core Haptics, API để thêm phản hồi tùy chỉnh trong iOS.

00:15:32.000 --> 00:15:39.000
Tôi đã đưa chúng vào thực tế bằng cách sử dụng dự án HapticRicochet, tập trung vào cơ chế kết cấu lá chắn và lăn.

00:15:39.000 --> 00:15:46.000
Để biết thêm thông tin và tài nguyên, vui lòng tham khảo Hướng dẫn Giao diện Con người và tài liệu dành cho Nhà phát triển.

00:15:46.000 --> 00:15:53.000
Cuối cùng, bạn có thể xem lại phiên WWDC 2019 bao gồm sự ra mắt của Core Haptics.

00:15:53.000 --> 00:15:55.000
Cảm ơn bạn đã xem.

00:15:55.000 --> 23:59:59.000
[Nhạc gõ].

