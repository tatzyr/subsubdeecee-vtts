WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:12.000
Erik Hornberger: Chào mừng trở lại ứng dụng nghiên cứu và chăm sóc code-along!

00:00:12.000 --> 00:00:19.000
Đây là phần hai của loạt ba phần của chúng tôi, nơi bạn và tôi sẽ xây dựng một ứng dụng vật lý trị liệu cho người bạn Jamie của chúng tôi.

00:00:19.000 --> 00:00:24.000
Nếu bạn muốn theo dõi, bạn có thể tìm thấy dự án của chúng tôi trong tài nguyên phiên.

00:00:24.000 --> 00:00:27.000
Tôi sẽ tiếp tục và đăng nhập ở đây.

00:00:27.000 --> 00:00:33.000
Nếu bạn tham gia cùng chúng tôi trong phiên một, bạn sẽ nhớ lại rằng chúng tôi vừa hoàn thành việc giới thiệu và đồng ý.

00:00:33.000 --> 00:00:36.000
Trong phiên này - Ồ, chờ đã.

00:00:36.000 --> 00:00:38.000
Có vẻ như chúng tôi đã nhận được tin nhắn từ Jamie.

00:00:38.000 --> 00:00:41.000
"Có một số ý tưởng mới cho ứng dụng.

00:00:41.000 --> 00:00:43.000
"Bạn có thấy tin nhắn cuối cùng của tôi không?

00:00:43.000 --> 00:00:45.000
Yêu cầu ứng dụng bổ sung.

00:00:45.000 --> 00:00:49.000
Jamie đã mời bạn cộng tác trên một tài liệu Ghi chú.

00:00:49.000 --> 00:00:55.000
Được rồi, chúng ta hãy xem lần này chúng ta sẽ làm gì!

00:00:55.000 --> 00:00:59.000
Hiển thị biểu mẫu, duy trì một số dữ liệu, lịch trình động, phạm vi chuyển động. Được rồi.

00:00:59.000 --> 00:01:09.000
Vì vậy, có vẻ như Jamie muốn chúng tôi thiết lập một cuộc khảo sát kiểm tra hàng ngày, nơi chúng tôi hỏi những người tham gia về việc họ đã ngủ bao nhiêu giấc và họ đang trải qua bao nhiêu cơn đau.

00:01:09.000 --> 00:01:15.000
Chúng tôi sẽ chỉ cho bạn cách sử dụng các mục biểu mẫu của ResearchKit để đặt nhiều câu hỏi trên một trang duy nhất.

00:01:15.000 --> 00:01:21.000
Sau đó, chúng ta sẽ cần phân tích các kết quả từ cuộc khảo sát ResearchKit và đưa chúng vào CareKit.

00:01:21.000 --> 00:01:26.000
Điều đó sẽ khiến các vòng hoàn thành của chúng tôi đầy và giao diện người dùng thẻ nhiệm vụ của chúng tôi được cập nhật.

00:01:26.000 --> 00:01:39.000
Chúng tôi cũng sẽ đi vào chi tiết về cách tạo lịch trình nâng cao hơn với CareKit, và sau đó chúng tôi sẽ sử dụng một trong những lịch trình đó - cùng với ResearchKit - để nhắc nhở người tham gia đo phạm vi chuyển động ở đầu gối của họ.

00:01:39.000 --> 00:01:43.000
Chúng ta có rất nhiều thứ để đề cập ở đây, vì vậy hãy nhảy vào!

00:01:43.000 --> 00:01:46.000
Chúng ta sẽ bắt đầu với cuộc khảo sát đăng ký hàng ngày.

00:01:46.000 --> 00:01:53.000
Giống như chúng tôi đã làm cho nhiệm vụ giới thiệu của mình, chúng tôi sẽ bắt đầu bằng cách xác định lịch trình và nhiệm vụ CareKit.

00:01:53.000 --> 00:02:00.000
Nó được cho là đăng ký hàng ngày, vì vậy hãy lên lịch để nó diễn ra vào mỗi buổi sáng, chẳng hạn như 8:00 sáng.

00:02:00.000 --> 00:02:05.000
Chúng tôi sẽ tạo nhiệm vụ đăng ký với một mã định danh duy nhất và lịch trình mà chúng tôi vừa xác định.

00:02:05.000 --> 00:02:10.000
Và tất nhiên, chúng tôi sẽ cần phải duy trì nó ở đây trong cửa hàng của chúng tôi.

00:02:10.000 --> 00:02:13.000
Tất cả đều giống hệt như những gì chúng tôi đã làm cho nhiệm vụ giới thiệu.

00:02:13.000 --> 00:02:17.000
Hy vọng rằng nó bắt đầu cảm thấy quen thuộc với bạn!

00:02:17.000 --> 00:02:26.000
Và cũng giống như nhiệm vụ giới thiệu, bước tiếp theo của chúng tôi sẽ là chuyển sang CareFeedViewController và cho CareKit biết cách hiển thị nhiệm vụ này.

00:02:26.000 --> 00:02:31.000
Lần này, hãy làm cho giải pháp của chúng ta chung chung hơn một chút.

00:02:31.000 --> 00:02:34.000
Chúng tôi sẽ tìm nạp tất cả các nhiệm vụ cho ngày hiện tại.

00:02:34.000 --> 00:02:39.000
Sau đó, đối với mỗi tác vụ, chúng tôi sẽ tạo một bộ điều khiển chế độ xem và thêm bộ điều khiển chế độ xem đó vào danh sách của chúng tôi.

00:02:39.000 --> 00:02:42.000
Điều này sẽ mở rộng quy mô đẹp hơn một chút khi chúng tôi thêm nhiều nhiệm vụ hơn.

00:02:42.000 --> 00:02:49.000
Bây giờ, chúng tôi chưa thực sự xác định phương thức fetchTasks này hoặc phương thức viewController này.

00:02:49.000 --> 00:02:54.000
Chúng ta sẽ cần thả xuống sâu hơn một chút trong tệp của mình và viết chúng ra.

00:02:54.000 --> 00:02:56.000
Vậy đây là phương pháp fetchTasks của chúng tôi.

00:02:56.000 --> 00:03:05.000
Chúng tôi bắt đầu bằng cách tạo một truy vấn nhiệm vụ cho một ngày cụ thể và chúng tôi chỉ định rằng chúng tôi muốn loại trừ các nhiệm vụ không có bất kỳ sự kiện đã lên lịch nào.

00:03:05.000 --> 00:03:09.000
Điều này phát huy tác dụng khi chúng ta có những nhiệm vụ không xảy ra hàng ngày.

00:03:09.000 --> 00:03:13.000
Giả sử, ví dụ, bạn đã được kê đơn thuốc để uống thuốc vào thứ Hai hàng tuần.

00:03:13.000 --> 00:03:19.000
Vào thứ Ba và thứ Tư, đơn thuốc đó vẫn được chỉ định cho bạn, chỉ là không có bất kỳ viên thuốc nào để uống.

00:03:19.000 --> 00:03:24.000
Thuộc tính này đảm bảo rằng các nhiệm vụ như vậy không được trả về từ truy vấn.

00:03:24.000 --> 00:03:31.000
Khi truy vấn quay trở lại, chúng tôi sẽ chuyển các nhiệm vụ mà chúng tôi đã tìm nạp cho trình xử lý hoàn thành của mình.

00:03:31.000 --> 00:03:36.000
Chúng ta cũng sẽ cần điền vào một phương thức thực hiện một nhiệm vụ và trả về một bộ điều khiển chế độ xem.

00:03:36.000 --> 00:03:45.000
Chúng tôi sẽ kiểm tra id của nhiệm vụ và nếu đó là nhiệm vụ checkIn, chúng tôi sẽ sử dụng SurveyTaskViewController mới mà chúng tôi đã giới thiệu trong phần một.

00:03:45.000 --> 00:03:52.000
Giống như trước đây, chúng tôi sẽ cung cấp một nhiệm vụ, một eventQuery và một tham chiếu đến storeManager.

00:03:52.000 --> 00:04:00.000
Chúng ta cũng sẽ cần phải vượt qua một cuộc khảo sát ResearchKit và một chức năng để chuyển đổi kết quả ResearchKit thành một mảng các giá trị kết quả CareKit.

00:04:00.000 --> 00:04:12.000
Chúng ta sẽ viết hai phương pháp này trong giây lát, nhưng trước tiên chúng ta hãy xem ứng dụng của chúng ta, ResearchKit và CareKit sẽ hoạt động cùng nhau như thế nào.

00:04:12.000 --> 00:04:16.000
Ứng dụng của chúng tôi sẽ tạo ra một cuộc khảo sát ResearchKit.

00:04:16.000 --> 00:04:22.000
ResearchKit sẽ tiếp quản và hướng dẫn người tham gia thông qua quy trình khảo sát.

00:04:22.000 --> 00:04:28.000
Nó sẽ tạo ra một ORKTaskResult, nó sẽ chuyển lại cho ứng dụng của chúng tôi.

00:04:28.000 --> 00:04:36.000
Sau đó, ứng dụng của chúng tôi sẽ chuyển đổi kết quả ResearchKit thành các giá trị kết quả CareKit để được duy trì trong cửa hàng của CareKit.

00:04:36.000 --> 00:04:42.000
Lưu một kết quả mới sẽ khiến các vòng hoàn thành của chúng tôi đầy và giao diện người dùng của thẻ nhiệm vụ của chúng tôi được cập nhật.

00:04:42.000 --> 00:04:45.000
Được rồi, vậy hãy giải quyết hai phương pháp này.

00:04:45.000 --> 00:04:49.000
Chúng tôi sẽ xác định chúng trong Surveys.swift.

00:04:49.000 --> 00:04:53.000
Tôi đã chuẩn bị một vài số nhận dạng mà chúng tôi sẽ sử dụng bên dưới.

00:04:53.000 --> 00:05:01.000
Chúng tôi cần một phương pháp để tạo khảo sát ResearchKit và một phương pháp để chuyển đổi kết quả thành các giá trị kết quả CareKit.

00:05:01.000 --> 00:05:11.000
Chúng tôi muốn khám phá xem liệu có mối liên hệ nào giữa số lượng giấc ngủ mà người tham gia nhận được và mức độ đau đớn mà họ trải qua hay không, vì vậy chúng tôi sẽ tạo một biểu mẫu với hai câu hỏi.

00:05:11.000 --> 00:05:17.000
FormStep yêu cầu một mã định danh duy nhất, một tiêu đề và một số văn bản.

00:05:17.000 --> 00:05:23.000
Chúng tôi cũng sẽ đánh dấu nó không tùy chọn, vì chúng tôi không muốn biểu mẫu có thể bỏ qua.

00:05:23.000 --> 00:05:27.000
Tiếp theo, hãy tạo ra hai mục của chúng ta.

00:05:27.000 --> 00:05:32.000
Người đầu tiên sẽ hỏi về nỗi đau, và chúng tôi sẽ biến nó thành một câu hỏi không tùy chọn.

00:05:32.000 --> 00:05:42.000
Điều đó có nghĩa là bản thân biểu mẫu không thể bỏ qua, chúng tôi cũng không thể gửi biểu mẫu mà không có câu trả lời cho câu hỏi cụ thể này.

00:05:42.000 --> 00:05:46.000
Bạn có thể thấy rằng chúng tôi cũng cần cung cấp định dạng câu trả lời.

00:05:46.000 --> 00:05:53.000
Định dạng câu trả lời cho ResearchKit biết loại câu trả lời mong đợi và cách nhắc người dùng nhập nó.

00:05:53.000 --> 00:05:58.000
Họ đang nhập trọng lượng, họ đang chọn một hình ảnh, hay họ đang ghi âm giọng nói của họ?

00:05:58.000 --> 00:06:06.000
Trong trường hợp này, chúng tôi sẽ chọn sử dụng ORKScaleAnswerFormat, tạo UISlider.

00:06:06.000 --> 00:06:15.000
Thanh trượt là một giao diện quen thuộc với người dùng iOS; chúng trực quan và chúng cung cấp trải nghiệm đẹp hơn nhiều so với việc điền vào vòng kết nối trên một cuộc khảo sát trên giấy.

00:06:15.000 --> 00:06:31.000
Chúng tôi sẽ chỉ định điểm đau tối đa là 10, giá trị tối thiểu là 1, đặt kích thước bước thành 1 để chỉ cho phép các số tròn và cung cấp mô tả về các giá trị tối thiểu và tối đa.

00:06:31.000 --> 00:06:36.000
Được rồi, chúng ta hãy thả xuống xa hơn một chút và tạo thêm một mục nữa: một món đồ ngủ.

00:06:36.000 --> 00:06:43.000
Điều này gần giống hệt với painItem và chúng tôi cũng sẽ sử dụng định dạng câu trả lời gần như giống hệt nhau.

00:06:43.000 --> 00:06:50.000
Sự khác biệt duy nhất là số nhận dạng và chúng tôi đã thay đổi tối thiểu thành 0 giờ ngủ và tối đa thành 12 giờ ngủ.

00:06:50.000 --> 00:07:01.000
Bây giờ chúng ta chỉ cần chuyển hai mục này vào mục biểu mẫu của mình, sau đó tạo một ORKOrderedTask với một formStep duy nhất.

00:07:01.000 --> 00:07:08.000
Hàm thứ hai được cho là lấy kết quả tác vụ ResearchKit và tạo ra một mảng các giá trị CareKit để duy trì.

00:07:08.000 --> 00:07:17.000
Nhưng trước khi chúng ta viết mã này, chúng ta hãy xem cấu trúc của kết quả tác vụ ResearchKit để chúng ta có ý tưởng tốt hơn về cách phân tích cú pháp nó.

00:07:17.000 --> 00:07:22.000
Điều quan trọng là phải hiểu rằng ORKTaskResults là các loại lồng nhau.

00:07:22.000 --> 00:07:30.000
Chúng tôi muốn bắt đầu từ kết quả gốc cho cuộc khảo sát đăng ký và sau đó đi sâu vào biểu mẫu checkin.

00:07:30.000 --> 00:07:37.000
Bản thân checkin.form có hai đứa con, và chúng ta sẽ cần phải đào sâu vào từng đứa.

00:07:37.000 --> 00:07:46.000
Đầu tiên, chúng tôi muốn tìm câu trả lời được đưa ra cho mã định danh mục đau và sau đó cho mã định danh mục giấc ngủ.

00:07:46.000 --> 00:07:51.000
Chúng tôi biết đó đều là kết quả câu hỏi quy mô và chúng tôi có thể nhận được câu trả lời quy mô từ chúng.

00:07:51.000 --> 00:07:56.000
Trong ví dụ này, 4 và 11.

00:07:56.000 --> 00:08:03.000
Vì vậy, đó là những gì nó trông giống như trực quan, và đây là quá trình tương tự trông giống như trong mã.

00:08:03.000 --> 00:08:09.000
Bắt đầu từ kết quả gốc, chúng tôi tìm thấy đứa trẻ đầu tiên được đánh dấu bằng mã định danh biểu mẫu.

00:08:09.000 --> 00:08:18.000
Kết quả đó sẽ có con riêng của nó, và chúng ta có thể trích xuất tất cả những đứa trẻ với loại ORKScaleQuestionResult, trong đó chúng ta biết sẽ có hai.

00:08:18.000 --> 00:08:26.000
Câu trả lời đau là câu trả lời đầu tiên được đánh dấu bằng mã định danh cơn đau và câu trả lời về giấc ngủ là câu trả lời đầu tiên được đánh dấu bằng mã định danh giấc ngủ.

00:08:26.000 --> 00:08:31.000
Cả hai sẽ có thuộc tính scaleAnswer.

00:08:31.000 --> 00:08:39.000
Khi chúng ta có câu trả lời trong tay, chúng ta cần chuyển đổi chúng thành giá trị kết quả CareKit - một cho giấc ngủ và một cho cơn đau.

00:08:39.000 --> 00:08:42.000
Tài sản loại ở đây là tùy chọn.

00:08:42.000 --> 00:08:47.000
Bạn không cần phải thiết lập nó, nhưng nó có thể hữu ích nếu bạn muốn tra cứu một giá trị sau này.

00:08:47.000 --> 00:08:50.000
Chúng ta sẽ xem tại sao điều này lại hữu ích trong phần ba!

00:08:50.000 --> 00:08:55.000
Điều cuối cùng mà chúng ta cần làm là trả về hai giá trị của chúng ta từ hàm này.

00:08:55.000 --> 00:08:59.000
Với tất cả những điều đó tại chỗ, việc đăng ký hàng ngày của chúng tôi sẽ rất tốt để đi!

00:08:59.000 --> 00:09:04.000
Hãy chạy ứng dụng và xem chúng ta đang làm như thế nào.

00:09:04.000 --> 00:09:10.000
Lưu ý rằng chúng tôi đã hoàn thành việc giới thiệu trong phần một, vì vậy chúng tôi không cần phải trải qua quy trình đồng ý một lần nữa.

00:09:10.000 --> 00:09:17.000
Đây là nội dung thực sự của ứng dụng của chúng tôi và nhiệm vụ đăng ký CareKit mà chúng tôi vừa tạo nằm ngay tại nơi chúng tôi mong đợi.

00:09:17.000 --> 00:09:22.000
Nhấn vào thẻ sẽ đưa chúng ta vào cuộc khảo sát ResearchKit.

00:09:22.000 --> 00:09:24.000
Chúng tôi sẽ tiếp tục và đưa ra một số câu trả lời ở đây.

00:09:24.000 --> 00:09:31.000
Hãy đi với, giống như, giả sử, 4 cho cơn đau và chúng ta sẽ đi với 8 giờ ngủ.

00:09:31.000 --> 00:09:41.000
Khi chúng tôi quay lại Nguồn cấp dữ liệu Chăm sóc của mình, chúng tôi có thể thấy rằng vòng hoàn thành ở trên cùng đã đầy, cho thấy rằng các câu trả lời từ ResearchKit đã được phân tích cú pháp thành công vào CareKit.

00:09:41.000 --> 00:09:43.000
Cái này trông rất đẹp.

00:09:43.000 --> 00:09:52.000
Vì vậy, chúng tôi đã hoàn thành cuộc khảo sát đăng ký của mình với biểu mẫu nhiều câu hỏi của nó và chúng tôi đã xác minh rằng dữ liệu được duy trì trong CareKit theo cách mà chúng tôi muốn.

00:09:52.000 --> 00:09:54.000
Điều đó có nghĩa là chúng ta đã đi được nửa chặng đường!

00:09:54.000 --> 00:10:01.000
Đã đến lúc chuyển sang lịch trình nâng cao trong CareKit, sau này chúng tôi sẽ áp dụng cho phạm vi nhiệm vụ chuyển động của mình.

00:10:01.000 --> 00:10:07.000
Giống như nhiệm vụ đăng ký và nhiệm vụ giới thiệu trước đó, bước đầu tiên là xác định lịch trình.

00:10:07.000 --> 00:10:12.000
Nhưng chúng ta sẽ làm điều gì đó liên quan nhiều hơn một chút cho cái này.

00:10:12.000 --> 00:10:19.000
Jamie đã yêu cầu chúng tôi giảm tần suất chúng tôi yêu cầu người tham gia đo phạm vi chuyển động của họ khi thời gian trôi qua.

00:10:19.000 --> 00:10:33.000
Cụ thể, chúng tôi muốn thiết lập một lịch trình nhắc nhở người tham gia đo phạm vi chuyển động của họ mỗi ngày trong tuần đầu tiên, nhưng sau đó, chỉ một lần một tuần cho đến cuối tháng, và sau đó không bao giờ nữa.

00:10:33.000 --> 00:10:39.000
Vì vậy, mỗi ngày một lần trong tuần đầu tiên, sau đó mỗi tuần một lần trong phần còn lại của tháng.

00:10:39.000 --> 00:10:47.000
Hãy bắt đầu bằng cách xác định một vài ngày quan trọng: thisMorning, nextWeek, và nextMonth.

00:10:47.000 --> 00:10:55.000
Bây giờ, nếu bạn muốn tạo nhiều lịch trình nhiều sắc thái hơn trong CareKit, OCKScheduleElement là công cụ cho công việc.

00:10:55.000 --> 00:11:02.000
Các yếu tố lịch trình có ngày bắt đầu, ngày kết thúc và lặp lại trong một khoảng thời gian nào đó trong khoảng thời gian đó.

00:11:02.000 --> 00:11:10.000
Yếu tố hàng ngày ở đây bắt đầu vào sáng nay, kết thúc vào tuần tới và lặp lại mỗi ngày.

00:11:10.000 --> 00:11:13.000
Yếu tố thứ hai là yếu tố hàng tuần.

00:11:13.000 --> 00:11:19.000
Nó bắt đầu vào tuần tới, kết thúc vào tháng tới và lặp lại mỗi tuần.

00:11:19.000 --> 00:11:31.000
Bây giờ chúng ta đã có hai yếu tố của mình, chúng ta có thể soạn chúng lại với nhau để tạo ra một lịch trình ghép, và sau đó chúng ta có thể tạo một phạm vi nhiệm vụ chuyển động mới bằng cách sử dụng lịch trình đó.

00:11:31.000 --> 00:11:34.000
Tất nhiên, chúng tôi cũng sẽ cần thêm nó vào cửa hàng của mình.

00:11:34.000 --> 00:11:43.000
Cũng giống như các nhiệm vụ khác của chúng tôi, bước tiếp theo là quay lại CareFeed của chúng tôi và chỉ định cách chúng tôi muốn CareKit hiển thị nhiệm vụ này.

00:11:43.000 --> 00:11:52.000
Một lần nữa, chúng tôi sẽ sử dụng SurveyTaskViewController và chúng tôi sẽ cần cung cấp một cuộc khảo sát, cũng như các chức năng, để trích xuất các câu trả lời.

00:11:52.000 --> 00:12:00.000
Hãy quay trở lại Khảo sát.nhanh chóng và sơ khai những thứ đó để cung cấp một chút cấu trúc trước khi chúng ta bắt đầu.

00:12:00.000 --> 00:12:04.000
Được rồi, vì vậy phạm vi của nhiệm vụ chuyển động thực sự khá đơn giản.

00:12:04.000 --> 00:12:09.000
Trên thực tế, nó được tích hợp vào ResearchKit như một nhiệm vụ được xác định trước.

00:12:09.000 --> 00:12:15.000
Chúng ta chỉ cần cung cấp cho nó một mã định danh và chỉ định đầu gối nào sẽ được đo.

00:12:15.000 --> 00:12:28.000
Bây giờ nhiệm vụ được xác định trước có một bước hoàn thành được tích hợp trong đó và thông báo mà nó hiển thị là một mặc định hợp lý, nhưng chúng tôi thực sự muốn hiển thị một thông báo tùy chỉnh phù hợp với trường hợp sử dụng của chúng tôi.

00:12:28.000 --> 00:12:32.000
Vì vậy, chúng tôi sẽ yêu cầu ResearchKit bỏ qua bước hoàn thành tiêu chuẩn.

00:12:32.000 --> 00:12:40.000
Sau đó, chúng tôi sẽ xác định chính mình và đưa ra một thông điệp khích lệ liên quan cụ thể đến vật lý trị liệu.

00:12:40.000 --> 00:12:41.000
Vậy đó là chức năng đầu tiên.

00:12:41.000 --> 00:12:48.000
Cái thứ hai là nơi chúng ta sẽ chuyển đổi từ kết quả ResearchKit sang giá trị kết quả CareKit.

00:12:48.000 --> 00:12:52.000
Hy vọng rằng điều này đang bắt đầu cảm thấy quen thuộc bây giờ.

00:12:52.000 --> 00:12:58.000
Có rất nhiều cách chúng ta có thể giải quyết vấn đề này, nhưng hôm nay chúng ta sẽ đào sâu cho đến khi chúng ta đạt được phạm vi đầu tiên của kết quả chuyển động.

00:12:58.000 --> 00:13:01.000
Và chúng tôi biết sẽ chỉ có một.

00:13:01.000 --> 00:13:14.000
Phạm vi kết quả chuyển động thực sự có một loạt các đặc tính hữu ích trên chúng, nhưng tính mà chúng tôi quan tâm nhất cho trường hợp sử dụng của mình là phạm vi, đo lường mức độ người tham gia có thể uốn cong đầu gối của họ theo độ.

00:13:14.000 --> 00:13:20.000
Chúng ta có thể sử dụng trường loại cùng với các đường dẫn chính để dễ dàng tra cứu giá trị này sau này.

00:13:20.000 --> 00:13:24.000
Nhân tiện, đó là điềm báo cho phần ba.

00:13:24.000 --> 00:13:29.000
Được rồi, và điều đó kết thúc chức năng của chúng tôi để trích xuất các giá trị kết quả.

00:13:29.000 --> 00:13:32.000
Tuyệt vời! Tôi nghĩ tất cả chúng ta đã được thiết lập.

00:13:32.000 --> 00:13:35.000
Hãy chạy ứng dụng của chúng tôi và tôi sẽ chỉ cho bạn cách tất cả hoạt động.

00:13:35.000 --> 00:13:40.000
Điều đầu tiên mà chúng tôi muốn kiểm tra là lịch trình của chúng tôi đang hoạt động theo cách mà chúng tôi dự định.

00:13:40.000 --> 00:13:45.000
Nhiệm vụ Range Of Motion nên hiển thị mỗi ngày trong tuần đầu tiên.

00:13:45.000 --> 00:13:53.000
Khi tôi trang đến ngày 8, và ngày 9, và ngày 10, phạm vi nhiệm vụ chuyển động xuất hiện mỗi ngày.

00:13:53.000 --> 00:14:03.000
Nhưng khi tôi ra ngoài vào tuần tới, nó sẽ ngừng xuất hiện ngoại trừ vào thứ Hai ở đây, đó là một ngày trong tuần mà chúng tôi vẫn muốn nó xuất hiện.

00:14:03.000 --> 00:14:06.000
Ở đây nó vẫn chỉ hiển thị một lần mỗi tuần.

00:14:06.000 --> 00:14:14.000
Nhưng nếu chúng ta đi xa hơn nữa trong tương lai, cho đến tháng tới, nó sẽ không còn xuất hiện nữa.

00:14:14.000 --> 00:14:19.000
Lịch trình CareKit là một cách tuyệt vời để lập trình trước các chế độ như thế này.

00:14:19.000 --> 00:14:27.000
Hãy quay lại ngày hôm nay và thử cái này.

00:14:27.000 --> 00:14:33.000
Khi tôi nhấn Bắt đầu, bước hướng dẫn của chúng tôi giúp tôi hiểu phải làm gì.

00:14:33.000 --> 00:14:40.000
Khi tôi bắt đầu, Siri sẽ cho tôi hướng dẫn âm thanh, vì vậy tôi sẽ làm theo hướng dẫn của cô ấy.

00:14:40.000 --> 00:14:42.000
Siri: Đặt thiết bị của bạn lên đầu gối trái.

00:14:42.000 --> 00:14:45.000
Chạm vào màn hình và mở rộng đầu gối trái của bạn càng xa càng tốt.

00:14:45.000 --> 00:14:50.000
Chạm vào bất cứ nơi nào để tiếp tục.

00:14:50.000 --> 00:14:55.000
Khi bạn hoàn thành, hãy đưa đầu gối trái của bạn trở lại vị trí bắt đầu, sau đó chạm vào bất cứ đâu.

00:14:55.000 --> 00:15:01.000
Erik: Tốt.

00:15:01.000 --> 00:15:04.000
Điều đó khá gọn gàng, phải không?

00:15:04.000 --> 00:15:15.000
Thông thường bạn sẽ phải đến văn phòng bác sĩ và một nhà trị liệu sẽ giúp bạn thực hiện các phép đo như thế này, nhưng ResearchKit có thể giúp những người tham gia thực hiện các phép đo tại nhà riêng của họ.

00:15:15.000 --> 00:15:19.000
Tôi nghĩ Jamie sẽ thực sự ấn tượng với sự tiến bộ mà chúng tôi đã đạt được.

00:15:19.000 --> 00:15:24.000
Tôi sẽ FaceTime cho anh ấy ngay sau đó và gửi cho anh ấy phiên bản mới nhất của ứng dụng của chúng tôi trên TestFlight.

00:15:24.000 --> 00:15:34.000
Trong khi tôi đang đưa Jamie tăng tốc độ về tiến trình của chúng tôi, bạn có thể tìm thêm thông tin về các khuôn khổ của chúng tôi trên researchandcare.org hoặc đọc qua mã nguồn trên GitHub.

00:15:34.000 --> 00:15:37.000
Trong phiên một, chúng tôi thiết lập giới thiệu.

00:15:37.000 --> 00:15:40.000
Trong phiên này, chúng tôi đã lên lịch một cặp nhiệm vụ.

00:15:40.000 --> 00:15:47.000
Tham gia với chúng tôi một lần nữa trong phiên thứ ba và cuối cùng của chúng tôi để xem ResearchKit và CareKit có thể giúp chúng tôi hoàn thành ứng dụng của mình như thế nào.

00:15:47.000 --> 00:15:49.000
Hẹn gặp lại!

00:15:49.000 --> 23:59:59.000
♪

