WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
Nishant Nelogal: Xin chào, và chào mừng đến với WWDC.

00:00:09.000 --> 00:00:14.000
Tên tôi là Nishant, và tôi là một kỹ sư trong nhóm AVFoundation.

00:00:14.000 --> 00:00:17.000
Hôm nay, chúng ta sẽ xem xét các biến thể HLS.

00:00:17.000 --> 00:00:28.000
Đầu tiên, chúng tôi sẽ xem xét cách bạn có thể kiểm tra các biến thể HLS, sử dụng API AVFoundation và sau đó, chúng tôi sẽ xem cách chúng tôi có thể sử dụng các biến thể HLS khi tải xuống.

00:00:28.000 --> 00:00:32.000
Vậy hãy bắt đầu với việc kiểm tra biến thể.

00:00:32.000 --> 00:00:36.000
Tất cả các bạn phải quen thuộc với danh sách phát chính điển hình trông như thế nào.

00:00:36.000 --> 00:00:39.000
Đây là một ví dụ.

00:00:39.000 --> 00:00:42.000
Trong danh sách phát cụ thể này, chúng tôi có hai biến thể.

00:00:42.000 --> 00:00:52.000
Một trong những biến thể là biến thể SDR với âm thanh nổi, và biến thể còn lại là biến thể Dolby Vision với âm thanh Dolby Atmos.

00:00:52.000 --> 00:00:58.000
Nội dung đại diện cho danh sách phát cụ thể này có thể được trình bày một cái gì đó như thế này trong ứng dụng của bạn.

00:00:58.000 --> 00:01:06.000
Nhìn kỹ, bạn thấy rằng tài sản có huy hiệu 4K, Dolby Vision và Dolby Atmos.

00:01:06.000 --> 00:01:11.000
Trước đó, bạn phải lấy thông tin như vậy ra khỏi ban nhạc.

00:01:11.000 --> 00:01:17.000
Bây giờ trong iOS 15, bạn có thể trực tiếp kiểm tra danh sách phát HLS để suy ra chúng.

00:01:17.000 --> 00:01:23.000
Đối với điều đó, bạn bắt đầu với một AVURLAsset trỏ đến vị trí của danh sách phát chính của bạn.

00:01:23.000 --> 00:01:29.000
Sau đó, bạn có thể lấy danh sách phát HLS thông qua thuộc tính của biến thể.

00:01:29.000 --> 00:01:37.000
AVAssetVariant này, như chúng ta thấy ở đây, đại diện cho một biến thể HLS như từ danh sách phát chính.

00:01:37.000 --> 00:01:41.000
Vì vậy, nó có nhiều thuộc tính đại diện cho các thuộc tính phương tiện khác nhau.

00:01:41.000 --> 00:01:46.000
Một số thuộc tính, chẳng hạn như tốc độ bit phương tiện, có thể được truy cập trực tiếp.

00:01:46.000 --> 00:01:53.000
Các thuộc tính khác, chẳng hạn như những thuộc tính liên quan đến kết xuất video và âm thanh, được nhóm lại với nhau trong các lớp con của riêng chúng.

00:01:53.000 --> 00:02:00.000
Chúng được gọi lần lượt là Thuộc tính Video và Thuộc tính Âm thanh.

00:02:00.000 --> 00:02:06.000
Như bạn thấy, mỗi người trong số họ có các thuộc tính có liên quan, mà bạn có thể sử dụng để hiểu tài sản của mình.

00:02:06.000 --> 00:02:11.000
Bây giờ bạn đã biết cách kiểm tra các biến thể HLS trong AVFoundation.

00:02:11.000 --> 00:02:14.000
Hãy xem cách chúng ta có thể sử dụng chúng với các bản tải xuống.

00:02:14.000 --> 00:02:19.000
Tải xuống nội dung HLS để phát lại ngoại tuyến đã được hỗ trợ từ năm 2016.

00:02:19.000 --> 00:02:28.000
Nếu bạn không quen thuộc với các API tải xuống HLS, tôi khuyên bạn nên xem bài nói chuyện trước đó của chúng tôi về chủ đề này từ WWDC 2020.

00:02:28.000 --> 00:02:34.000
Trong iOS 15, chúng tôi đang sử dụng các API tải xuống HLS của mình và làm cho chúng trở nên mạnh mẽ hơn.

00:02:34.000 --> 00:02:40.000
Thông thường, bạn muốn ảnh hưởng đến các biến thể HLS được chọn để tải xuống.

00:02:40.000 --> 00:02:45.000
Điều này có thể là do các yêu cầu kinh doanh, hoặc bạn chỉ muốn cung cấp nhiều sự lựa chọn hơn cho người dùng của mình.

00:02:45.000 --> 00:02:49.000
Trước đây, bạn có thể cung cấp đầu vào như vậy thông qua các tùy chọn downloadTask.

00:02:49.000 --> 00:02:57.000
Chúng tôi đã có một tùy chọn cho HDR, một tùy chọn cho âm thanh không mất dữ liệu và một vài thuộc tính khác.

00:02:57.000 --> 00:03:03.000
Trong iOS 15, chúng tôi đang mở rộng lựa chọn biến thể với việc sử dụng NSPredicates.

00:03:03.000 --> 00:03:08.000
Bạn có thể đã quen với việc sử dụng các vị ngữ từ Core Data.

00:03:08.000 --> 00:03:12.000
Nếu không, đừng lo lắng, bạn sẽ tìm hiểu về chúng ngay hôm nay.

00:03:12.000 --> 00:03:17.000
Vì vậy, để bắt đầu, hãy để tôi giới thiệu giao diện vòng loại biến thể.

00:03:17.000 --> 00:03:22.000
Giao diện này cho phép bạn chỉ định các tùy chọn biến thể của mình cho AVFoundation.

00:03:22.000 --> 00:03:27.000
Và, như tôi đã nói, chúng có thể được xây dựng bằng NSPredicates.

00:03:27.000 --> 00:03:31.000
Hãy hiểu bằng cách xem xét một vài ví dụ.

00:03:31.000 --> 00:03:37.000
Ở đây, chúng tôi có một NSPredicate thể hiện tốc độ bit cực đại nhỏ hơn năm megabit.

00:03:37.000 --> 00:03:44.000
Bạn sử dụng điều này để xây dựng vòng loại biến thể của mình, hướng dẫn AVFoundation thích các biến thể dưới năm megabit.

00:03:44.000 --> 00:03:47.000
Đủ đơn giản, phải không?

00:03:47.000 --> 00:03:49.000
Hãy xem xét một ví dụ khác.

00:03:49.000 --> 00:03:53.000
Ở đây chúng tôi tạo ra một NSPredicate cho phạm vi video HDR.

00:03:53.000 --> 00:03:59.000
Và tương tự như trước đây, bạn có thể xây dựng một vòng loại biến thể cho nó.

00:03:59.000 --> 00:04:06.000
Bạn cũng có thể kết hợp nhiều vị ngữ để tạo ra một vị ngữ ghép và sử dụng chúng để tạo vòng loại biến thể của mình.

00:04:06.000 --> 00:04:11.000
Bất kỳ thuộc tính nào trên biến thể đều có thể được sử dụng để tạo ra một vị ngữ chống lại.

00:04:11.000 --> 00:04:20.000
Đối với các thuộc tính như số lượng kênh âm thanh, không thể dễ dàng thể hiện bằng cách sử dụng chuỗi định dạng vị ngữ, chúng tôi có các hàm tạo tùy chỉnh.

00:04:20.000 --> 00:04:24.000
Bạn có thể tra cứu chúng trong tài liệu tiêu đề của chúng tôi để biết vòng loại biến thể.

00:04:24.000 --> 00:04:30.000
Khi bạn có vòng loại biến thể của mình, bạn sử dụng nó để tạo ra thứ gọi là cấu hình nội dung.

00:04:30.000 --> 00:04:37.000
Mỗi cấu hình nội dung đại diện cho một tập hợp các phiên bản video, âm thanh và phụ đề.

00:04:37.000 --> 00:04:42.000
Được rồi, hãy hiểu bằng một ví dụ.

00:04:42.000 --> 00:04:47.000
Đây là vòng loại biến thể kết hợp hai vị ngữ mà chúng ta đã thấy trước đó.

00:04:47.000 --> 00:04:50.000
Eh, đây là sự kết hợp. Ha-ha.

00:04:50.000 --> 00:04:55.000
Nó thông báo cho AVFoundation thích các biến thể HDR dưới năm megabit.

00:04:55.000 --> 00:05:04.000
Chúng tôi cũng có một tập hợp các lựa chọn phương tiện đại diện cho âm thanh tiếng Anh và tiếng Pháp, và các phiên bản phụ đề tiếng Anh.

00:05:04.000 --> 00:05:08.000
Cả hai thứ này đều có thể được sử dụng để tạo ra một đối tượng cấu hình nội dung.

00:05:08.000 --> 00:05:13.000
Bạn có thể tạo nhiều cấu hình nội dung này và cung cấp nó cho downloadTask.

00:05:13.000 --> 00:05:19.000
Nhiều cấu hình nội dung này được liên kết với nhau bởi giao diện cấu hình tải xuống.

00:05:19.000 --> 00:05:23.000
Đây là gốc rễ giữ mọi thứ lại với nhau.

00:05:23.000 --> 00:05:30.000
Nó được tạo bằng AVURLAsset và cần một tên tài sản, và tùy chọn, một hình ảnh.

00:05:30.000 --> 00:05:35.000
Tên tài sản và hình ảnh được hiển thị trong ứng dụng Cài đặt.

00:05:35.000 --> 00:05:40.000
Điều này cho phép người dùng của bạn quản lý tất cả các bản tải xuống của họ ở một nơi trong ứng dụng Cài đặt.

00:05:40.000 --> 00:05:46.000
Và tất nhiên, downloadTask có thể được cấu hình với nhiều cấu hình nội dung.

00:05:46.000 --> 00:05:57.000
Nhìn kỹ, một trong những cấu hình nội dung sẽ được chỉ định là chính và phần còn lại sẽ là phụ trợ.

00:05:57.000 --> 00:06:10.000
Sự khác biệt giữa cả hai là bạn thường muốn tải xuống một bộ video, âm thanh và phụ đề chính và sau đó bổ sung chúng bằng các phiên bản âm thanh hoặc phụ đề bổ sung.

00:06:10.000 --> 00:06:21.000
Bằng cách chỉ định các phiên bản bổ sung của bạn dưới dạng cấu hình nội dung phụ trợ, bạn hướng dẫn AVFoundation tối ưu hóa và tránh tải xuống nhiều bản hiển thị video.

00:06:21.000 --> 00:06:25.000
Nó trở nên rõ ràng hơn khi chúng ta xem qua một ví dụ.

00:06:25.000 --> 00:06:28.000
Đây là ví dụ đầy đủ.

00:06:28.000 --> 00:06:35.000
Đầu tiên, chúng tôi bắt đầu bằng cách tạo một cấu hình tải xuống với AVURLAsset và một tiêu đề.

00:06:35.000 --> 00:06:39.000
Cấu hình nội dung chính giống như cấu hình mà chúng ta đã thấy trước đó.

00:06:39.000 --> 00:06:47.000
Nó được cấu hình để tải xuống các biến thể HDR dưới năm megabit, với âm thanh tiếng Anh và tiếng Pháp và các phiên bản phụ đề tiếng Anh.

00:06:47.000 --> 00:06:55.000
Trong ví dụ cụ thể này, chúng tôi muốn bổ sung nó bằng cấu hình nội dung phụ trợ để tải xuống âm thanh tiếng Anh ở định dạng không mất dữ liệu.

00:06:55.000 --> 00:07:00.000
Bây giờ chúng tôi có cả hai cấu hình nội dung mà chúng tôi muốn tải xuống.

00:07:00.000 --> 00:07:06.000
Đảm bảo đặt optimizesAuxiliary ContentConfigurations thành true.

00:07:06.000 --> 00:07:19.000
Nhân tiện, nó đúng theo mặc định và nó cho phép AVFoundation chọn biến thể không mất dữ liệu, sao cho việc hiển thị video của biến thể không mất dữ liệu giống như cấu hình nội dung chính.

00:07:19.000 --> 00:07:28.000
Đặt nó thành sai có thể khiến biến thể không mất dữ liệu được đánh giá độc lập, điều này có thể khiến các bản trình diễn video trùng lặp được tải xuống.

00:07:28.000 --> 00:07:32.000
Điều này có thể làm tăng kích thước tải xuống của bạn, điều mà chúng tôi không muốn.

00:07:32.000 --> 00:07:38.000
Được rồi, một khi bạn có cấu hình tải xuống, bạn có thể sử dụng nó để tạo downloadTask.

00:07:38.000 --> 00:07:42.000
Bạn tiếp tục tải xuống Nhiệm vụ để bắt đầu tải xuống.

00:07:42.000 --> 00:07:48.000
Bắt đầu từ iOS 15, bạn cũng có thể quan sát tiến trình của downloadTask bằng giao diện NSProgress.

00:07:48.000 --> 00:07:55.000
Đối tượng NSProgress có thể quan sát KVO và bạn có thể sử dụng nó để cập nhật giao diện người dùng của mình.

00:07:55.000 --> 00:07:57.000
Tiếp tục.

00:07:57.000 --> 00:08:04.000
Chúng tôi hiểu rằng một số bạn có thể có logic kinh doanh để chọn các biến thể, điều này có thể khó diễn đạt hơn thông qua các vị ngữ.

00:08:04.000 --> 00:08:10.000
Đối với những trường hợp như vậy, bạn cũng có thể chọn chọn các biến thể bạn muốn tải xuống một cách rõ ràng.

00:08:10.000 --> 00:08:18.000
Ở đây trong ví dụ này, chúng tôi đã chọn biến thể chính và phụ trợ của mình và các lựa chọn phương tiện đi kèm với nó.

00:08:18.000 --> 00:08:25.000
Chúng tôi có thể hướng dẫn AVFoundation tải chúng xuống như hiện tại, bằng cách tạo vòng loại trực tiếp với biến thể.

00:08:25.000 --> 00:08:30.000
Hãy cẩn thận chọn các biến thể để chúng có thể chơi được trên thiết bị nơi chúng được tải xuống.

00:08:30.000 --> 00:08:32.000
Đó là tất cả những gì chúng ta có hôm nay, các bạn.

00:08:32.000 --> 00:08:38.000
Để kết thúc, chúng tôi đã xem xét cách bạn có thể kiểm tra các biến thể HLS và sử dụng chúng để định cấu hình downloadTask.

00:08:38.000 --> 00:08:43.000
Trên đường đi, chúng tôi đã gặp phải các giao diện khác nhau để cấu hình downloadTask.

00:08:43.000 --> 00:08:46.000
Cái đầu tiên là vòng loại biến thể.

00:08:46.000 --> 00:08:49.000
Điều này được sử dụng để thể hiện sở thích biến thể của bạn.

00:08:49.000 --> 00:08:52.000
Sau đó chúng tôi thấy giao diện cấu hình nội dung.

00:08:52.000 --> 00:08:58.000
Cấu hình nội dung liên kết các tùy chọn biến thể của bạn và các lựa chọn lựa chọn phương tiện của bạn.

00:08:58.000 --> 00:09:01.000
Cuối cùng, chúng tôi đã thấy cấu hình tải xuống.

00:09:01.000 --> 00:09:06.000
Cấu hình tải xuống là giao diện gốc liên kết mọi thứ lại với nhau.

00:09:06.000 --> 00:09:12.000
Cuối cùng, nhưng không kém phần quan trọng, chúng tôi cũng đã học được rằng bạn có thể theo dõi downloadTask của mình bằng NSProgress.

00:09:12.000 --> 00:09:15.000
Để biết thêm thông tin, hãy kiểm tra tài liệu tiêu đề của chúng tôi.

00:09:15.000 --> 00:09:17.000
Họ được bình luận rất tốt.

00:09:17.000 --> 00:09:19.000
Cảm ơn bạn đã xem và tạm biệt!

00:09:19.000 --> 23:59:59.000
♪

