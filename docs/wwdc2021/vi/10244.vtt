WEBVTT

00:00:00.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:15.000
Xin chào, và chào mừng đến với "Giản hợp gian lận với App Attest và DeviceCheck."

00:00:15.000 --> 00:00:19.000
Tên tôi là Xuerui Yan, và tôi làm việc trong nhóm An toàn và Tin cậy của App Store.

00:00:19.000 --> 00:00:26.000
Tôi rất hào hứng khi nói về việc bảo vệ các ứng dụng của bạn bằng App Attest và DeviceCheck.

00:00:26.000 --> 00:00:35.000
Tại Apple, chúng tôi liên tục làm việc để đảm bảo rằng App Store là một nơi an toàn và đáng tin cậy cho khách hàng và nhà phát triển.

00:00:35.000 --> 00:00:39.000
Trong video này, chúng tôi sẽ đề cập đến các chi tiết cụ thể về kỹ thuật.

00:00:39.000 --> 00:00:50.000
Để biết chi tiết về kinh doanh và khái niệm, hãy xem video "Bảo vệ tài khoản, chương trình khuyến mãi và nội dung của bạn" từ WWDC 2021.

00:00:50.000 --> 00:00:55.000
Trong iOS 11, chúng tôi đã giới thiệu khung DeviceCheck.

00:00:55.000 --> 00:01:00.000
DeviceCheck giúp giảm thiểu gian lận trên các dịch vụ khuyến mại.

00:01:00.000 --> 00:01:04.000
Giả sử bạn đang giới thiệu một tính năng mới trong ứng dụng của mình.

00:01:04.000 --> 00:01:09.000
Để quảng bá tính năng này, bạn cung cấp một mặt hàng miễn phí, sử dụng một lần.

00:01:09.000 --> 00:01:18.000
Ai đó có thể lạm dụng chương trình khuyến mãi bằng cách cài đặt lại ứng dụng nhiều lần chỉ để yêu cầu mặt hàng miễn phí.

00:01:18.000 --> 00:01:30.000
Có thể, bạn sẽ muốn giới hạn các mặt hàng khuyến mại một lần cho mỗi thiết bị, thay vì cho phép ứng dụng được cài đặt nhiều lần và sử dụng lại quảng cáo.

00:01:30.000 --> 00:01:43.000
Giờ đây, DeviceCheck có thể giúp bạn phát hiện xem một thiết bị đã nhận được ưu đãi khuyến mãi hay thiết bị có tham gia vào hoạt động gian lận hay không.

00:01:43.000 --> 00:01:53.000
Nó cho phép bạn liên tục lưu trữ hai bit thông tin và dấu thời gian được liên kết với một thiết bị trên máy chủ Apple.

00:01:53.000 --> 00:01:59.000
Tùy thuộc vào bạn để quyết định những phần này có ý nghĩa gì đối với các ứng dụng của bạn.

00:01:59.000 --> 00:02:05.000
Trạng thái sẽ được Apple duy trì để bạn cập nhật và truy vấn.

00:02:05.000 --> 00:02:09.000
Các bit được chia sẻ bởi tất cả các ứng dụng từ một nhà phát triển.

00:02:09.000 --> 00:02:18.000
Vui lòng ghi nhớ điều đó khi gán ý nghĩa cho các bit để chúng có thể áp dụng trên tất cả các ứng dụng của bạn.

00:02:18.000 --> 00:02:27.000
Trạng thái vẫn tồn tại trong quá trình cài đặt lại ứng dụng, chuyển thiết bị giữa những người dùng và thậm chí "Xóa tất cả nội dung và cài đặt".

00:02:27.000 --> 00:02:38.000
Cân nhắc sử dụng dấu thời gian để đặt lại các bit trong khoảng thời gian bạn chọn, dựa trên các chiến lược quảng cáo và kinh doanh của bạn.

00:02:38.000 --> 00:02:49.000
Để tìm hiểu thêm về DeviceCheck, hãy xem video "Quyền riêng tư và Ứng dụng của bạn" từ WWDC 2017 và tài liệu Khung DeviceCheck.

00:02:49.000 --> 00:02:52.000
Vậy đó là DeviceCheck.

00:02:52.000 --> 00:03:00.000
Tiếp theo, tôi sẽ nói về App Attest, cũng có sẵn trong DeviceCheck Framework.

00:03:00.000 --> 00:03:08.000
Khi dịch vụ của bạn nhận được yêu cầu, thật khó để biết liệu nó có thực sự là từ ứng dụng của bạn hay không.

00:03:08.000 --> 00:03:16.000
App Attest cho phép ứng dụng của bạn đính kèm xác nhận được hỗ trợ phần cứng như một phần của yêu cầu.

00:03:16.000 --> 00:03:23.000
Máy chủ của bạn có thể sử dụng xác nhận để xác minh yêu cầu đến từ ứng dụng chính hãng của bạn, trên thiết bị Apple chính hãng.

00:03:23.000 --> 00:03:38.000
Hãy tưởng tượng, bạn đã thiết kế một ứng dụng tuyệt đẹp khuyến khích du lịch khám phá các bộ sưu tập, chỉ để thấy rằng một ứng dụng được sửa đổi cho phép thu thập mọi thứ mà không bao giờ rời khỏi nhà.

00:03:38.000 --> 00:03:50.000
Hoặc tưởng tượng sự thất vọng của người chơi khi thấy những người khác chạy đua lên bảng xếp hạng, bằng cách sử dụng gian lận để tăng không giới hạn trong một trò chơi đua xe nhiều người chơi cạnh tranh.

00:03:50.000 --> 00:04:06.000
Hoặc tưởng tượng thức dậy vào thứ Bảy và, rất vui khi thấy khối lượng yêu cầu rất cao trên máy chủ của bạn, nhưng sau khi điều tra, bạn thấy các cuộc gọi hoàn toàn không đến từ ứng dụng của mình.

00:04:06.000 --> 00:04:17.000
App Attest có thể giúp bạn xác định các phiên bản chính hãng và đã sửa đổi của ứng dụng, cho phép bạn bảo vệ trải nghiệm ứng dụng và doanh nghiệp của mình.

00:04:17.000 --> 00:04:27.000
App Attest cung cấp ba thuộc tính chính mà bạn có thể tận dụng để bảo vệ bạn và khách hàng của mình.

00:04:27.000 --> 00:04:46.000
App Attest cho phép dịch vụ của bạn xác minh yêu cầu đến từ một phiên bản hợp pháp của ứng dụng của bạn bằng cách đáp ứng ba điều kiện: yêu cầu đến từ thiết bị Apple chính hãng, chạy ứng dụng chính hãng của bạn và tải trọng không bị giả mạo.

00:04:46.000 --> 00:04:52.000
Hãy xem qua cách App Attest cung cấp từng thuộc tính này.

00:04:52.000 --> 00:05:05.000
Trọng tâm của App Attest là một cặp khóa an toàn và một chứng thực, được ký bởi Apple, xác nhận rằng cặp khóa có nguồn gốc từ một thiết bị Apple chính hãng.

00:05:05.000 --> 00:05:14.000
Khóa riêng tư chỉ được lưu trữ và có thể truy cập thông qua Secure Enclave bằng cách sử dụng App Attest API.

00:05:14.000 --> 00:05:26.000
Ứng dụng của bạn có thể ký các yêu cầu đến dịch vụ của bạn bằng khóa và dịch vụ của bạn sau đó có thể kiểm tra chữ ký để xác minh yêu cầu được tạo trên thiết bị Apple chính hãng.

00:05:26.000 --> 00:05:32.000
Để một ứng dụng thực thi trên thiết bị Apple, nó phải được ký.

00:05:32.000 --> 00:05:39.000
Một người thực hiện các sửa đổi trái phép đối với ứng dụng của bạn phải ký lại nó với danh tính mà họ kiểm soát.

00:05:39.000 --> 00:05:45.000
Điều này không thể tránh khỏi việc sửa đổi danh tính ứng dụng.

00:05:45.000 --> 00:05:51.000
Chúng tôi bao gồm một hàm băm của danh tính ứng dụng trong chứng thực.

00:05:51.000 --> 00:06:01.000
Bằng cách so sánh danh tính ứng dụng của bạn với danh tính có trong chứng thực, bạn có thể xác định xem người gọi có đang sử dụng phiên bản sửa đổi hay không.

00:06:01.000 --> 00:06:12.000
Bây giờ bạn đã biết yêu cầu đến từ một thiết bị chính hãng và ứng dụng chính hãng của bạn, hãy nói về tải trọng yêu cầu.

00:06:12.000 --> 00:06:21.000
Trước khi gửi tải trọng đến máy chủ của bạn, bạn có thể hướng dẫn App Attest ký một bản tóm tắt về tải trọng bằng khóa được chứng thực.

00:06:21.000 --> 00:06:26.000
Điều này tạo ra một sự khẳng định về tải trọng.

00:06:26.000 --> 00:06:30.000
Ứng dụng của bạn nên truyền tải trọng và xác nhận đến dịch vụ của bạn.

00:06:30.000 --> 00:06:39.000
Bằng cách xác minh sự khẳng định chống lại tải trọng, bạn có thể tin tưởng rằng tải trọng không bị giả mạo trong quá trình vận chuyển.

00:06:39.000 --> 00:06:42.000
Đó là ba thuộc tính chính.

00:06:42.000 --> 00:06:46.000
Bây giờ hãy nói một chút về quyền riêng tư.

00:06:46.000 --> 00:06:51.000
Tại Apple, chúng tôi quan tâm sâu sắc đến quyền riêng tư.

00:06:51.000 --> 00:06:57.000
Chúng tôi tin rằng quyền riêng tư là nền tảng thiết yếu cho một hệ sinh thái ứng dụng lành mạnh.

00:06:57.000 --> 00:07:03.000
Mỗi yếu tố của App Attest đã được xây dựng với sự riêng tư trong tâm trí.

00:07:03.000 --> 00:07:11.000
Các chứng thực được thiết kế để cung cấp sự đảm bảo về một thiết bị chính hãng, đồng thời bảo vệ chống lại việc theo dõi.

00:07:11.000 --> 00:07:17.000
Các chứng thực là ẩn danh và không bao gồm số nhận dạng phần cứng.

00:07:17.000 --> 00:07:22.000
Các khóa App Attest là duy nhất cho mỗi lần cài đặt ứng dụng của bạn.

00:07:22.000 --> 00:07:33.000
Điều này có nghĩa là khóa App Attest sẽ không tồn tại sau khi cài đặt lại ứng dụng, không được sao lưu và không được đồng bộ hóa trên các thiết bị.

00:07:33.000 --> 00:07:38.000
Hãy ghi nhớ điều này khi thiết kế ứng dụng của bạn.

00:07:38.000 --> 00:07:48.000
Bây giờ bạn đã hiểu giá trị mà App Attest cung cấp, hãy đi sâu vào chi tiết về việc kết hợp nó vào ứng dụng của bạn.

00:07:48.000 --> 00:07:54.000
Có ba phần cơ bản để kết hợp App Attest vào ứng dụng của bạn.

00:07:54.000 --> 00:08:02.000
Tạo khóa App Attest, chứng thực và xác minh khóa, tạo và xác minh các xác nhận.

00:08:02.000 --> 00:08:06.000
Hãy bắt đầu với việc tạo một Khóa Chứng Thực Ứng Dụng.

00:08:06.000 --> 00:08:11.000
Tất cả các cuộc gọi App Attest phải được bảo vệ bởi thuộc tính isSupported.

00:08:11.000 --> 00:08:24.000
App Attest được hỗ trợ trên các thiết bị có Secure Enclave, nhưng có những trường hợp, chẳng hạn như Tiện ích mở rộng ứng dụng, trong đó isSupported vẫn sẽ trả về false.

00:08:24.000 --> 00:08:29.000
Ứng dụng của bạn phải xử lý những trường hợp này một cách duyên dáng.

00:08:29.000 --> 00:08:36.000
Thay vì chặn quyền truy cập ngay lập tức, hãy sử dụng lỗi như một tín hiệu rủi ro.

00:08:36.000 --> 00:08:40.000
Đầu tiên, phân loại người gọi là không đáng tin cậy.

00:08:40.000 --> 00:08:49.000
Sau đó, dựa trên logic đánh giá rủi ro của bạn, hãy đánh giá xem có cho phép khách hàng sử dụng các tính năng nhạy cảm hay không.

00:08:49.000 --> 00:08:58.000
Một cách tiếp cận khác là theo dõi sự gia tăng đột ngột của các thiết bị tuyên bố rằng chúng không hỗ trợ App Attest khi gọi dịch vụ của bạn.

00:08:58.000 --> 00:09:09.000
Nếu tỷ lệ các thiết bị hỗ trợ App Attest đột ngột giảm, đó có thể là dấu hiệu của các ứng dụng đã sửa đổi đang cố gắng bỏ qua kiểm tra của bạn.

00:09:09.000 --> 00:09:17.000
Với khóa App Attest được tạo thành công, hãy tiếp tục và chứng thực khóa.

00:09:17.000 --> 00:09:24.000
Để ngăn chặn các cuộc tấn công man-in-the-middle và phát lại, chúng ta cần thử thách máy chủ một lần.

00:09:24.000 --> 00:09:28.000
Hãy để máy chủ của bạn đưa ra thách thức cho ứng dụng.

00:09:28.000 --> 00:09:40.000
Để liên kết chứng thực với ID tài khoản người dùng hoặc các giá trị khác, hãy băm các giá trị đó cùng với thử thách tạo clientDataHash.

00:09:40.000 --> 00:09:49.000
Sử dụng clientDataHash, cùng với keyId từ bước trước, bây giờ chúng ta có thể gọi attestKey API.

00:09:49.000 --> 00:10:00.000
attestKey sẽ sử dụng khóa riêng để tạo yêu cầu chứng thực phần cứng cho thiết bị và gửi yêu cầu đến Apple để xác minh.

00:10:00.000 --> 00:10:07.000
Sau khi được xác minh, Apple sẽ trả lại một đối tượng chứng thực ẩn danh cho ứng dụng của bạn.

00:10:07.000 --> 00:10:15.000
Gửi chứng thực, cùng với bất kỳ tải trọng tùy chỉnh nào, trở lại máy chủ của bạn để xác minh.

00:10:15.000 --> 00:10:22.000
Được rồi, bây giờ ứng dụng của bạn đã gửi chứng thực đến máy chủ của bạn, hãy thử xác minh nó.

00:10:22.000 --> 00:10:36.000
Chứng thực tuân theo tiêu chuẩn Xác thực Web và bao gồm ba phần: danh sách các chứng chỉ do Apple ký, cấu trúc Dữ liệu Xác thực và biên lai số liệu rủi ro.

00:10:36.000 --> 00:10:42.000
Hãy xem xét những phần quan trọng mà bạn cần xác minh.

00:10:42.000 --> 00:10:48.000
Phần chứng chỉ chứa các chứng chỉ lá và trung gian.

00:10:48.000 --> 00:10:55.000
Chứng chỉ gốc App Attest có sẵn trong kho lưu trữ Apple Private PKI.

00:10:55.000 --> 00:11:02.000
Xác thực chuỗi chứng chỉ đầy đủ cho bạn biết thiết bị là thiết bị chính hãng của Apple.

00:11:02.000 --> 00:11:12.000
Khi bạn gọi attestKey, một hàm băm sử dụng một lần, được gọi là nonce, được tạo từ clientDataHash và các dữ liệu khác.

00:11:12.000 --> 00:11:16.000
Nonce đó được bao gồm trong giấy chứng nhận lá.

00:11:16.000 --> 00:11:24.000
Để ngăn chặn giả mạo, bạn sẽ tái tạo lại nonce trên máy chủ của mình và xác minh xem nó khớp.

00:11:24.000 --> 00:11:36.000
Khối dữ liệu xác thực chứa nhiều thuộc tính, bao gồm hàm băm của danh tính ứng dụng, mà bạn có thể sử dụng để xác minh đó là ứng dụng của bạn đang gọi cho bạn.

00:11:36.000 --> 00:11:44.000
Chứng thực chính cũng chứa biên lai mà bạn có thể lưu trữ và sử dụng sau này để yêu cầu số liệu rủi ro từ Apple.

00:11:44.000 --> 00:11:49.000
Tôi sẽ đề cập thêm thông tin về nó sau trong video.

00:11:49.000 --> 00:11:54.000
Nếu mọi thứ được kiểm tra, Khóa chứng thực ứng dụng là chính hãng.

00:11:54.000 --> 00:12:02.000
Lưu trữ khóa được liên kết với dữ liệu khách hàng để sử dụng để xác minh các yêu cầu tiếp theo.

00:12:02.000 --> 00:12:06.000
Không phải tất cả các thất bại đều là do chứng thực không hợp lệ.

00:12:06.000 --> 00:12:16.000
Xử lý một cách duyên dáng các tình huống, chẳng hạn như isSupported trả về sai, bị điều chỉnh trong quá trình tăng tốc hoặc lỗi mạng nói chung.

00:12:16.000 --> 00:12:22.000
Sau đó, bạn có thể kết hợp các lỗi làm tín hiệu trong đánh giá rủi ro tổng thể của mình.

00:12:22.000 --> 00:12:28.000
Để biết thêm chi tiết về việc thực hiện xác minh, vui lòng xem tài liệu.

00:12:28.000 --> 00:12:36.000
Gọi attest-Key API tạo ra một cuộc gọi mạng từ ứng dụng của bạn đến dịch vụ App Attest.

00:12:36.000 --> 00:12:39.000
Điều này chỉ xảy ra một lần cho mỗi phiên bản ứng dụng.

00:12:39.000 --> 00:12:47.000
Tuy nhiên, nếu bạn có một cơ sở cài đặt lớn, nói chung, ứng dụng của bạn có thể gửi nhiều yêu cầu đến App Attest.

00:12:47.000 --> 00:12:56.000
Để quản lý tài nguyên và tránh bị giới hạn tỷ lệ, hãy đảm bảo rằng bạn dần dần kích hoạt tính năng này trên cơ sở cài đặt của mình.

00:12:56.000 --> 00:13:05.000
Ví dụ, nếu bạn có một triệu người dùng hoạt động hàng ngày, bạn có thể tăng lên trong một ngày hoặc lâu hơn.

00:13:05.000 --> 00:13:09.000
Nếu bạn có một tỷ người dùng hoạt động hàng ngày, làm tốt lắm!

00:13:09.000 --> 00:13:14.000
Bạn nên tăng tốc hơn một tháng hoặc hơn.

00:13:14.000 --> 00:13:25.000
Bây giờ bạn đã có khóa được chứng thực, bạn có thể sử dụng lệnh gọi API generateAssertion để bảo vệ giao tiếp nhạy cảm giữa ứng dụng và máy chủ của bạn.

00:13:25.000 --> 00:13:33.000
Luồng xác nhận đơn giản hơn chứng thực, vì các máy chủ Apple không còn tham gia nữa.

00:13:33.000 --> 00:13:41.000
Tất cả các xác nhận sử dụng khóa được tạo trên thiết bị và được xác thực trên máy chủ của bạn.

00:13:41.000 --> 00:13:51.000
Bắt đầu bằng cách yêu cầu một thử thách duy nhất từ máy chủ, sau đó tạo một bản tóm tắt tải trọng và gọi generateAssertion.

00:13:51.000 --> 00:13:59.000
generateAssertion sẽ sử dụng bản tóm tắt để tính toán một nonce và ký nó bằng khóa App Attest.

00:13:59.000 --> 00:14:04.000
Ứng dụng của bạn sau đó có thể gửi tải trọng và xác nhận đến máy chủ của bạn.

00:14:04.000 --> 00:14:09.000
Cuối cùng, máy chủ của bạn nên xác minh tải trọng.

00:14:09.000 --> 00:14:13.000
Tải trọng khẳng định chứa cấu trúc cấp cao này.

00:14:13.000 --> 00:14:18.000
Dữ liệu Chữ ký và Xác thực.

00:14:18.000 --> 00:14:24.000
Để xác thực chữ ký, hãy đảo ngược quy trình tái tạo lại nonce trên máy chủ của bạn.

00:14:24.000 --> 00:14:29.000
Sau đó sử dụng khóa công khai để xác minh chữ ký.

00:14:29.000 --> 00:14:36.000
Nếu chữ ký hợp lệ, bạn có thể tin tưởng rằng tải trọng không bị sửa đổi.

00:14:36.000 --> 00:14:41.000
Phần dữ liệu xác thực chứa hàm băm nhận dạng ứng dụng.

00:14:41.000 --> 00:14:48.000
Xác thực hàm băm để đảm bảo xác nhận là từ ứng dụng chính hãng của bạn.

00:14:48.000 --> 00:14:53.000
Dữ liệu xác thực cũng bao gồm một bộ đếm ngày càng tăng.

00:14:53.000 --> 00:15:04.000
Để giúp bảo vệ chống lại các cuộc tấn công phát lại, hãy lưu trữ giá trị truy cập trên máy chủ của bạn và mong đợi nó sẽ tăng lên với mỗi yêu cầu tiếp theo.

00:15:04.000 --> 00:15:10.000
Với chìa khóa, bây giờ bạn có thể lặp lại quá trình này bao nhiêu tùy thích.

00:15:10.000 --> 00:15:17.000
Mặc dù việc tạo ra một xác nhận không gọi máy chủ Apple, nhưng đó là một hoạt động mật mã, làm tăng thêm độ trễ.

00:15:17.000 --> 00:15:25.000
Bạn nên tính đến điều này trong thiết kế của mình khi kết hợp App Attest vào ứng dụng của bạn.

00:15:25.000 --> 00:15:36.000
Các khẳng định rất phù hợp với các cuộc gọi quan trọng nhưng không thường xuyên và các cuộc gọi có thể xử lý độ trễ bổ sung và tính toán cần thiết.

00:15:36.000 --> 00:15:42.000
Đối với các lệnh mạng thời gian thực thường xuyên, các xác nhận có thể không phù hợp.

00:15:42.000 --> 00:15:44.000
Xin chúc mừng!

00:15:44.000 --> 00:15:49.000
Bây giờ bạn đã hoàn thành việc triển khai cơ bản của App Attest.

00:15:49.000 --> 00:16:02.000
Chỉ với việc triển khai này, bạn có thể bắt đầu phân loại các yêu cầu máy chủ đến của mình là chính hãng và đã được sửa đổi, đồng thời kết hợp tín hiệu gian lận quan trọng này vào logic kinh doanh của bạn.

00:16:02.000 --> 00:16:04.000
Nhưng còn nhiều hơn thế nữa.

00:16:04.000 --> 00:16:20.000
Kẻ tấn công có thể cố gắng làm việc xung quanh App Attest bằng cách sử dụng một thiết bị duy nhất để tạo nhiều khóa App Attest và sử dụng thiết bị đó để cung cấp thông tin liên lạc giữa nhiều ứng dụng đã sửa đổi và máy chủ của bạn.

00:16:20.000 --> 00:16:35.000
Để giúp phát hiện hành vi như vậy, chúng tôi cung cấp một dịch vụ được gọi là Dịch vụ Đo lường Rủi ro Chứng thực Ứng dụng cung cấp số lượng khóa gần đúng được tạo trên một thiết bị cho ứng dụng của bạn.

00:16:35.000 --> 00:16:41.000
Nhớ lại rằng attestKey trả về cả chứng thực và biên lai số liệu rủi ro.

00:16:41.000 --> 00:16:48.000
Máy chủ của bạn có thể gửi biên lai đó đến dịch vụ và đổi nó lấy biên lai mới.

00:16:48.000 --> 00:16:53.000
Biên lai mới sẽ bao gồm số liệu rủi ro.

00:16:53.000 --> 00:17:02.000
Định kỳ, bạn có thể đổi biên lai mới nhất của mình để lấy số liệu cập nhật cho cặp ứng dụng/thiết bị đó.

00:17:02.000 --> 00:17:06.000
Đây là một cái nhìn cấp cao về cấu trúc biên lai.

00:17:06.000 --> 00:17:10.000
Nó là một thùng chứa PKCS7.

00:17:10.000 --> 00:17:17.000
Để biết chi tiết đầy đủ, hãy xem "Đánh giá rủi ro gian lận" trong tài liệu Khung DeviceCheck.

00:17:17.000 --> 00:17:22.000
App Clips là một tính năng thú vị trong iOS.

00:17:22.000 --> 00:17:29.000
Chúng tôi đã thêm hỗ trợ App Attest vào App Clips trong iOS 15.

00:17:29.000 --> 00:17:40.000
Để hỗ trợ nâng cấp liền mạch từ App Clip lên ứng dụng đầy đủ, App Clip và ứng dụng đầy đủ chia sẻ cùng một danh tính ứng dụng trong ngữ cảnh App Attest.

00:17:40.000 --> 00:17:47.000
Đảm bảo ghi nhớ điều này khi bạn xác minh danh tính ứng dụng ở phía máy chủ của mình.

00:17:47.000 --> 00:17:58.000
Khi App Clips bị xóa thủ công hoặc hết hạn, các khóa của chúng sẽ bị vô hiệu, giống như khi toàn bộ ứng dụng của bạn được gỡ cài đặt.

00:17:58.000 --> 00:18:02.000
Được rồi, đó là nó cho App Clips.

00:18:02.000 --> 00:18:07.000
Bây giờ, hãy nhớ những điểm chính này để thành công với App Attest.

00:18:07.000 --> 00:18:10.000
Xác thực trên máy chủ, không phải trên thiết bị.

00:18:10.000 --> 00:18:15.000
Ứng dụng có thể được sửa đổi để vô hiệu hóa mã xác thực của bạn.

00:18:15.000 --> 00:18:22.000
Kết hợp thử thách máy chủ một lần trong luồng của bạn để ngăn chặn các cuộc tấn công phát lại mạng.

00:18:22.000 --> 00:18:32.000
Xử lý các tình huống lỗi, chẳng hạn như isSupported trả về sai, bị điều chỉnh trong quá trình tăng tốc hoặc lỗi mạng nói chung.

00:18:32.000 --> 00:18:37.000
Kết hợp thất bại làm tín hiệu trong đánh giá rủi ro của bạn.

00:18:37.000 --> 00:18:45.000
App Attest và DeviceCheck cung cấp thông tin mà bạn có thể tích hợp vào đánh giá gian lận tổng thể của mình.

00:18:45.000 --> 00:18:51.000
Sử dụng DeviceCheck để giảm thiểu gian lận đối với các dịch vụ khuyến mại.

00:18:51.000 --> 00:19:00.000
Tận dụng App Attest để giúp bạn phát hiện các phiên bản sửa đổi của ứng dụng, bảo vệ nội dung và trải nghiệm người dùng của bạn.

00:19:00.000 --> 00:19:01.000
Cảm ơn vì đã xem!

00:19:01.000 --> 00:19:08.000
Tôi rất mong được thấy các ứng dụng của bạn được bảo vệ bởi App Attest và DeviceCheck.

00:19:08.000 --> 23:59:59.000
Hòa bình!

