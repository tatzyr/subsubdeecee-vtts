WEBVTT

00:00:00.000 --> 00:00:05.000
♪ Nhạc bass đang phát ♪

00:00:05.000 --> 00:00:09.000
♪

00:00:09.000 --> 00:00:13.000
Willem Mattelaer: Xin chào, tên tôi là Willem và tôi là một kỹ sư làm việc trong Hoạt động Nhóm.

00:00:13.000 --> 00:00:19.000
Tôi sẽ được Angus và Adam tham gia để nói về cách bạn có thể tạo ra những trải nghiệm tùy chỉnh với Hoạt động Nhóm.

00:00:19.000 --> 00:00:27.000
Để bắt đầu, tôi sẽ giới thiệu ứng dụng mà chúng tôi sẽ làm việc trong phiên này và giải thích lý do tại sao nó là một ứng cử viên tuyệt vời để thêm hỗ trợ Hoạt động Nhóm vào.

00:00:27.000 --> 00:00:35.000
Tiếp theo, chúng ta sẽ xem xét các bước tạo hoạt động và quản lý phiên và giải thích sự khác biệt so với việc tạo ra trải nghiệm truyền thông.

00:00:35.000 --> 00:00:41.000
Cuối cùng, chúng tôi sẽ đề cập đến một số cách bạn có thể đánh bóng trải nghiệm mà người dùng của bạn có trong khi sử dụng ứng dụng của bạn.

00:00:41.000 --> 00:00:47.000
Hoạt động nhóm cho phép bạn xây dựng trải nghiệm được chia sẻ trên các thiết bị với SharePlay.

00:00:47.000 --> 00:00:56.000
Mặc dù trọng tâm là tạo ra trải nghiệm truyền thông, nhưng điều đó không ngăn cản bạn phát huy sự sáng tạo của mình và xem ứng dụng của bạn có thể được trải nghiệm như thế nào trên nhiều thiết bị.

00:00:56.000 --> 00:01:02.000
Chúng tôi sẽ xây dựng dựa trên một số khái niệm đã được giới thiệu trong phiên " Phối hợp trải nghiệm truyền thông với Hoạt động Nhóm".

00:01:02.000 --> 00:01:06.000
Tôi thực sự khuyên bạn nên kiểm tra cái đó.

00:01:06.000 --> 00:01:13.000
Trong phiên này, chúng tôi sẽ làm việc trên một ứng dụng có tên DrawTogether cho phép bạn - bạn đoán nó - vẽ cùng nhau trong FaceTime.

00:01:13.000 --> 00:01:19.000
Đó là một ứng dụng khá đơn giản, nơi gần như toàn bộ màn hình là khung vẽ và mọi người đều nhận được một màu ngẫu nhiên mà họ có thể sử dụng để vẽ.

00:01:19.000 --> 00:01:26.000
Nhưng mặc dù đơn giản, nhưng vẫn vô cùng thú vị khi vẽ với bạn bè của tôi và ngưỡng mộ kỹ năng tuyệt vời của một số người trong số họ hoặc cười vào những bức vẽ kém cỏi của họ.

00:01:26.000 --> 00:01:29.000
Bản thân tôi chắc chắn rơi vào loại thứ hai.

00:01:29.000 --> 00:01:38.000
Hãy để tôi chỉ cho bạn một bản demo nhanh về những gì chúng ta sẽ hướng tới.

00:01:38.000 --> 00:01:40.000
Này các bạn, có chuyện gì vậy?

00:01:40.000 --> 00:01:42.000
Adam, tôi thấy bạn có một câu hỏi cho tôi.

00:01:42.000 --> 00:01:48.000
Adam Syed: Vâng. Vì vậy, Angus và tôi đã nói chuyện, và anh ấy đã đề cập rằng bạn là một nghệ sĩ thực sự giỏi - giống như một Picasso hạng A.

00:01:48.000 --> 00:01:49.000
Vậy là bạn phải cho chúng tôi xem, anh bạn!

00:01:49.000 --> 00:01:53.000
Angus Burton: Tôi đã xem một số bức vẽ của Willem, và chúng rất ấn tượng.

00:01:53.000 --> 00:01:56.000
Willem: Tôi nghĩ, Angus, bạn đang phóng đại một chút.

00:01:56.000 --> 00:01:58.000
Nhưng tôi rất vui khi cho bạn thấy những gì tôi có thể làm.

00:01:58.000 --> 00:02:00.000
Hãy vào ứng dụng DrawTogether.

00:02:00.000 --> 00:02:01.000
Adam: Được rồi.

00:02:01.000 --> 00:02:06.000
Chúng ta có thể làm, như, một cảnh quan mục vụ không?

00:02:06.000 --> 00:02:09.000
Willem: Chắc chắn rồi, uh... hãy để tôi bắt đầu bằng cách vẽ một ngôi nhà, có thể.

00:02:09.000 --> 00:02:13.000
Adam: Được rồi.

00:02:13.000 --> 00:02:15.000
Angus: Willem, ngôi nhà này trông khá cơ bản, anh bạn.

00:02:15.000 --> 00:02:18.000
Có lẽ tôi sẽ giúp bạn với một mặt trời.

00:02:18.000 --> 00:02:20.000
Adam: Tôi sẽ thử một cái cây.

00:02:20.000 --> 00:02:23.000
Willem: Cái cây đó quá cao.

00:02:23.000 --> 00:02:27.000
Adam: Không, mặt trời quá thấp, anh bạn.

00:02:27.000 --> 00:02:29.000
Willem: Để tôi thêm một ít cỏ.

00:02:29.000 --> 00:02:32.000
Adam: Tôi sẽ vẽ thêm vài cái cây nữa.

00:02:32.000 --> 00:02:35.000
Willem: Được rồi. Ừm, tôi nghĩ tôi sẽ gọi nó.

00:02:35.000 --> 00:02:39.000
Chúng tôi không phải là nghệ sĩ và chúng tôi nên dừng những gì chúng tôi đang làm ngay bây giờ.

00:02:39.000 --> 00:02:43.000
Hãy - Tôi sẽ nói chuyện với các bạn sau, OK?

00:02:43.000 --> 00:02:45.000
Adam: OK Angus: Tạm biệt.

00:02:45.000 --> 00:02:52.000
Willem: Như bạn đã thấy, một trong những trải nghiệm cốt lõi của API Hoạt động Nhóm là cho phép bạn làm mọi thứ cùng nhau trong khi xa nhau về thể chất.

00:02:52.000 --> 00:03:01.000
Các tương tác thời gian thực mà bạn có thể mở khóa và phản ứng tức thì mà người dùng của bạn sẽ nhận được, vì họ có thể nhìn và nghe thấy mọi người khác, có thể dẫn đến một số khoảnh khắc thực sự kỳ diệu.

00:03:01.000 --> 00:03:07.000
Đây là điều bạn nên ghi nhớ khi xem xét cách tích hợp Hoạt động Nhóm trong ứng dụng của mình.

00:03:07.000 --> 00:03:12.000
Có hai bước để áp dụng Hoạt động Nhóm: tạo hoạt động và quản lý phiên.

00:03:12.000 --> 00:03:16.000
Chúng tôi đã đề cập chi tiết hơn về điều này trong phiên "Điều phối trải nghiệm truyền thông".

00:03:16.000 --> 00:03:24.000
Trong phiên này, chúng ta hãy xem các bước này thay đổi như thế nào khi xây dựng trải nghiệm tùy chỉnh, bắt đầu với việc tạo hoạt động.

00:03:24.000 --> 00:03:27.000
Có hai phần để tạo ra một Hoạt động Nhóm.

00:03:27.000 --> 00:03:32.000
Đầu tiên bạn định cấu hình hoạt động của mình, và sau đó là kích hoạt hoạt động.

00:03:32.000 --> 00:03:38.000
So với Hoạt động Nhóm phương tiện truyền thông, chỉ có phần cấu hình là khác nhau đối với hoạt động tùy chỉnh.

00:03:38.000 --> 00:03:44.000
Khi cấu hình hoạt động, bạn phải suy nghĩ về trải nghiệm cụ thể mà bạn muốn chia sẻ giữa tất cả những người tham gia.

00:03:44.000 --> 00:03:49.000
Hoạt động nên chứa tất cả thông tin không đổi trong suốt trải nghiệm đó.

00:03:49.000 --> 00:03:55.000
Nếu bạn đã xem phiên "Phối hợp trải nghiệm truyền thông với các hoạt động nhóm", điều này sẽ trông quen thuộc.

00:03:55.000 --> 00:04:04.000
Chúng tôi đã xác định một cấu trúc DrawTogether phù hợp với giao thức GroupActivity và chúng tôi đã triển khai thuộc tính siêu dữ liệu nơi chúng tôi xây dựng siêu dữ liệu được liên kết với một tiêu đề.

00:04:04.000 --> 00:04:10.000
Bây giờ để biến điều này thành một hoạt động tùy chỉnh, chúng ta sẽ chỉ cần đặt đúng loại trên siêu dữ liệu.

00:04:10.000 --> 00:04:15.000
Bằng cách đặt nó thành chung chung, chúng tôi định cấu hình hoạt động này thành một hoạt động tùy chỉnh.

00:04:15.000 --> 00:04:19.000
Và đó là tất cả những gì bạn cần làm khi định cấu hình một hoạt động tùy chỉnh so với một phương tiện truyền thông.

00:04:19.000 --> 00:04:25.000
Bây giờ hãy nhảy ngay vào Xcode và bắt đầu tạo Hoạt động Nhóm tùy chỉnh của chúng tôi trong ứng dụng DrawTogether.

00:04:25.000 --> 00:04:29.000
Đầu tiên, hãy để tôi nhanh chóng hướng dẫn bạn qua mã mà chúng ta bắt đầu.

00:04:29.000 --> 00:04:33.000
DrawTogether là một ứng dụng SwiftUI sử dụng vòng đời ứng dụng SwiftUI.

00:04:33.000 --> 00:04:36.000
ContentView là chế độ xem chính của ứng dụng.

00:04:36.000 --> 00:04:41.000
Ở trên cùng của chế độ xem, có một chỉ báo hiển thị màu sắc sẽ được sử dụng khi vẽ.

00:04:41.000 --> 00:04:44.000
Bên dưới đó là CanvasView.

00:04:44.000 --> 00:04:51.000
Điều này cần một khung vẽ và sẽ chịu trách nhiệm vẽ tất cả các nét vẽ trong khung vẽ và cập nhật khung vẽ dựa trên bất kỳ đầu vào nào của người dùng.

00:04:51.000 --> 00:04:57.000
Cuối cùng, ở phía dưới có một ControlBar, chứa một vài điều khiển có thể hữu ích trong khi vẽ.

00:04:57.000 --> 00:05:02.000
Hiện tại chúng tôi có một nút duy nhất ở đó để xóa khung vẽ và bắt đầu lại từ đầu.

00:05:02.000 --> 00:05:09.000
Bản thân khung vẽ bao gồm một mảng các nét vẽ trong đó mỗi nét vẽ có màu sắc, số nhận dạng và danh sách các điểm.

00:05:09.000 --> 00:05:19.000
Khung vẽ cũng có một activeStroke - đại diện cho một nét vẽ mà người dùng cục bộ hiện đang vẽ - và màu nét vẽ sẽ được người dùng sử dụng.

00:05:19.000 --> 00:05:22.000
Bây giờ chúng ta hãy bắt đầu với việc cấu hình hoạt động của chúng ta.

00:05:22.000 --> 00:05:25.000
Trước khi chúng ta làm điều đó, tôi sẽ phải thêm quyền Hoạt động Nhóm.

00:05:25.000 --> 00:05:32.000
Tôi làm điều đó bằng cách vào cài đặt dự án và trong tab Ký &amp; Khả năng, tôi sẽ thêm một khả năng mới.

00:05:32.000 --> 00:05:38.000
Tôi sẽ tìm kiếm các Hoạt động Nhóm và chọn nó.

00:05:38.000 --> 00:05:42.000
Bây giờ chúng ta đã có quyền lợi, cuối cùng chúng ta hãy định cấu hình hoạt động của chúng ta.

00:05:42.000 --> 00:05:48.000
Tôi sẽ thêm một tệp mới bằng cách vào Tệp &gt; Mới &gt; Tệp...

00:05:48.000 --> 00:05:51.000
Và chọn Swift File.

00:05:51.000 --> 00:05:52.000
Tôi sẽ gọi nó là "DrawTogether"...

00:05:52.000 --> 00:05:58.000
...Và nhấp vào Tạo.

00:05:58.000 --> 00:06:00.000
Đầu tiên, tôi sẽ nhập khuôn khổ của chúng tôi.

00:06:00.000 --> 00:06:11.000
Tiếp theo, tôi sẽ xác định một cấu trúc mới được gọi là "DrawTogether" phù hợp với giao thức GroupActivity.

00:06:11.000 --> 00:06:17.000
Giao thức GroupActivity có hai thuộc tính cần được triển khai: activityIdentifier và siêu dữ liệu.

00:06:17.000 --> 00:06:20.000
Đối với activityIdentifier, tôi sẽ dựa vào việc triển khai mặc định.

00:06:20.000 --> 00:06:23.000
Tuy nhiên, thuộc tính siêu dữ liệu vẫn cần thiết.

00:06:23.000 --> 00:06:29.000
Vậy hãy thêm nó vào.

00:06:29.000 --> 00:06:36.000
Trong thuộc tính được tính toán này, tôi tạo một đối tượng GroupActivityMetadata và tôi đặt tiêu đề.

00:06:36.000 --> 00:06:39.000
Tôi cũng đặt loại là chung chung.

00:06:39.000 --> 00:06:42.000
Điều này rất quan trọng đối với một hoạt động tùy chỉnh.

00:06:42.000 --> 00:06:48.000
Cuối cùng, tôi trả lại đối tượng siêu dữ liệu.

00:06:48.000 --> 00:06:53.000
Bây giờ chúng tôi đã định cấu hình hoạt động, chúng tôi vẫn cần kích hoạt nó vào thời điểm thích hợp.

00:06:53.000 --> 00:06:57.000
Tôi sẽ thêm một nút mới để kích hoạt nó - và còn nơi nào tốt hơn cho điều đó sau thanh điều khiển của chúng tôi?

00:06:57.000 --> 00:06:59.000
Tôi sẽ thêm nút ở đầu HStack của chúng tôi.

00:06:59.000 --> 00:07:07.000
Đối với nhãn của nút, chúng tôi đang sử dụng Biểu tượng SF.

00:07:07.000 --> 00:07:14.000
Và trong phần đóng hành động, chúng tôi sẽ tạo một phiên bản mới của Hoạt động Nhóm tùy chỉnh của mình và gọi kích hoạt nó.

00:07:14.000 --> 00:07:18.000
Và đó là tất cả những gì cần thiết để kích hoạt hoạt động của chúng tôi.

00:07:18.000 --> 00:07:22.000
Tôi vừa chỉ ra cách định cấu hình Hoạt động Nhóm tùy chỉnh và cách kích hoạt nó.

00:07:22.000 --> 00:07:26.000
Đây là hai phần cần thiết cho bước tạo hoạt động.

00:07:26.000 --> 00:07:31.000
Bây giờ, tôi sẽ giao nó cho Angus, người sẽ cho bạn biết về bước quản lý phiên.

00:07:31.000 --> 00:07:32.000
Angus: Cảm ơn, Willem.

00:07:32.000 --> 00:07:38.000
Tiếp theo, chúng ta sẽ nói về cách bạn có thể gửi và nhận dữ liệu tùy chỉnh trong ứng dụng của mình bằng cách sử dụng Hoạt động nhóm.

00:07:38.000 --> 00:07:44.000
Đây là trọng tâm của việc tạo ra trải nghiệm SharePlay độc đáo với các Hoạt động Nhóm.

00:07:44.000 --> 00:07:56.000
Từ phiên trước có tiêu đề, "Phối hợp trải nghiệm truyền thông với Hoạt động Nhóm", bạn nên làm quen với ba bước nhận phiên, chuẩn bị phát lại và tham gia phiên.

00:07:56.000 --> 00:08:01.000
Thay vì đồng bộ hóa phát lại, chúng ta cần định cấu hình một phiên cho trải nghiệm tùy chỉnh của mình.

00:08:01.000 --> 00:08:07.000
Nhưng trước khi chúng ta nhảy vào đó, hãy thêm mã để nhận Phiên Nhóm và tham gia.

00:08:07.000 --> 00:08:17.000
Hãy quay lại Xcode và điều đầu tiên chúng ta sẽ làm là điều hướng đến ContentView và nhập GroupActivities.

00:08:17.000 --> 00:08:26.000
Tiếp theo, chúng tôi sẽ tạo một nhiệm vụ không đồng bộ để nhận GroupSession của chúng tôi.

00:08:26.000 --> 00:08:33.000
Bây giờ chúng tôi có một GroupSession, chúng tôi cần một nơi để lưu trữ nó.

00:08:33.000 --> 00:08:40.000
Hãy lưu trữ nó trên đối tượng Canvas của chúng tôi bằng một phương thức mới mà chúng tôi sẽ gọi là "configureGroupSession".

00:08:40.000 --> 00:08:50.000
Bây giờ, hãy điều hướng đến Canvas và triển khai phương thức configureGroupSession.

00:08:50.000 --> 00:08:55.000
Chúng ta sẽ bắt đầu bằng cách lên đầu trang và đảm bảo nhập GroupActivities.

00:08:55.000 --> 00:09:03.000
Hãy đi đến cuối tệp của chúng tôi và thực hiện phương pháp mới của chúng tôi tiếp theo.

00:09:03.000 --> 00:09:13.000
Ở đây chúng tôi đã gán đối tượng groupSession mà chúng tôi nhận được cho một thuộc tính mới trong lớp của chúng tôi.

00:09:13.000 --> 00:09:19.000
Cũng lưu ý rằng chúng tôi đã đặt lại khung vẽ trước khi đặt thuộc tính groupSession.

00:09:19.000 --> 00:09:24.000
Cuối cùng nhưng không kém phần quan trọng, hãy thêm mã để tham gia groupSession.

00:09:24.000 --> 00:09:32.000
Tại thời điểm này, chúng ta sẽ có thể xây dựng và biên soạn dự án của mình.

00:09:32.000 --> 00:09:40.000
Hãy kiểm tra điều đó ngay bây giờ bằng cách vào Sản phẩm &gt; Xây dựng.

00:09:40.000 --> 00:09:41.000
Tuyệt vời.

00:09:41.000 --> 00:09:50.000
Bây giờ chúng tôi đã thiết lập mã để nhận và tham gia Phiên nhóm của mình, hãy xem cách định cấu hình phiên để gửi và nhận dữ liệu tùy chỉnh trong ứng dụng của chúng tôi.

00:09:50.000 --> 00:10:02.000
Để định cấu hình phiên, chúng tôi sẽ sử dụng GroupSessionMessenger, cung cấp một API đơn giản để gửi và nhận dữ liệu thô hoặc tin nhắn có cấu trúc đến và đi từ những người tham gia trong Phiên nhóm.

00:10:02.000 --> 00:10:07.000
Hãy xem cách sử dụng GroupSessionMessenger tiếp theo.

00:10:07.000 --> 00:10:12.000
Để bắt đầu, chúng tôi sẽ tạo một GroupSessionMessenger từ groupSession của chúng tôi.

00:10:12.000 --> 00:10:20.000
Bước đầu tiên trong việc sử dụng GroupSessionMessenger là xác định loại dữ liệu nào cần được trao đổi giữa những người tham gia trong ứng dụng của bạn.

00:10:20.000 --> 00:10:27.000
Trong DrawTogether, dữ liệu cụ thể mà chúng ta cần chia sẻ với các thiết bị khác là bản thân các nét vẽ.

00:10:27.000 --> 00:10:33.000
Chúng ta có thể biểu diễn một nét vẽ với ba thuộc tính: một định danh, một màu sắc và một điểm tọa độ.

00:10:33.000 --> 00:10:38.000
Lưu ý rằng chúng tôi làm cho UpsertStrokeMessage của chúng tôi phù hợp với giao thức Codable.

00:10:38.000 --> 00:10:50.000
Điều này là do GroupSessionMessenger cho phép chúng tôi gửi và nhận các tin nhắn có cấu trúc và sẽ tự động xử lý việc tuần tự hóa và hủy tuần tự hóa cho chúng tôi, miễn là các tin nhắn có thể mã hóa được.

00:10:50.000 --> 00:10:58.000
Bước thứ hai để định cấu hình phiên là nhận dữ liệu bằng API Tin nhắn trên GroupSessionMessenger.

00:10:58.000 --> 00:11:02.000
Đối với DrawTogether, chúng tôi sẽ cần xử lý việc nhận UpsertStrokeMessages.

00:11:02.000 --> 00:11:18.000
API tin nhắn được hiển thị ở đây có thể lấy loại có thể mã hóa và trả về một chuỗi không đồng bộ - cung cấp cho chúng tôi một bộ chứa các tin nhắn thuộc loại đó - và ngữ cảnh xung quanh tin nhắn - bao gồm thông tin như người tham gia đã gửi tin nhắn đó.

00:11:18.000 --> 00:11:24.000
Bước thứ ba để cấu hình phiên là gửi dữ liệu bằng cách sử dụng API gửi trên GroupSessionMessenger.

00:11:24.000 --> 00:11:30.000
Đối với DrawTogether, chúng tôi sẽ gửi UpsertStrokeMessage cho tất cả những người tham gia trong nhóm.

00:11:30.000 --> 00:11:33.000
Lưu ý rằng API gửi là một phương thức ném không đồng bộ.

00:11:33.000 --> 00:11:37.000
Các lỗi mà nó gây ra nên được xử lý một cách thích hợp bởi ứng dụng của bạn.

00:11:37.000 --> 00:11:41.000
Bây giờ, hãy vào Xcode và thêm mã GroupSessionMessenger của chúng tôi.

00:11:41.000 --> 00:11:52.000
Chúng tôi sẽ bắt đầu bằng cách điều hướng đến tệp nguồn Canvas và tạo một GroupSessionMessenger từ Phiên Nhóm của chúng tôi.

00:11:52.000 --> 00:11:57.000
Chúng tôi sẽ thêm thuộc tính messenger vào Canvas để giữ đối tượng messenger mà chúng tôi vừa tạo.

00:11:57.000 --> 00:12:10.000
Tiếp theo chúng ta cần xác định UpsertStrokeMessage, sẽ được gửi và nhận giữa những người tham gia.

00:12:10.000 --> 00:12:12.000
Hãy tạo một tệp mới cho việc này.

00:12:12.000 --> 00:12:17.000
Chúng tôi sẽ làm điều đó bằng cách vào File &gt; New &gt; File...

00:12:17.000 --> 00:12:19.000
Chọn Tệp Swift...

00:12:19.000 --> 00:12:22.000
...Và hãy dán nó vào thư mục Mô hình của chúng tôi.

00:12:22.000 --> 00:12:27.000
Và hãy gọi nó là "Tin nhắn".

00:12:27.000 --> 00:12:34.000
Bây giờ hãy thêm mã để xác định UpsertStrokeMessage.

00:12:34.000 --> 00:12:41.000
Bây giờ chúng tôi đã xác định tin nhắn để gửi và nhận với GroupSessionMessenger, hãy viết mã để gửi và nhận nó.

00:12:41.000 --> 00:12:47.000
Chúng tôi sẽ điều hướng trở lại Canvas để làm điều này.

00:12:47.000 --> 00:12:57.000
Hãy đi đến cuối tệp của chúng tôi và thêm mã để nhận tin nhắn.

00:12:57.000 --> 00:13:05.000
Ở đây, chúng tôi tạo một tác vụ tách rời để nhận UpsertStrokeMessages từ chuỗi không đồng bộ và gọi một phương thức mới, xử lý, để xử lý tin nhắn.

00:13:05.000 --> 00:13:09.000
Hãy thực hiện điều đó tiếp theo.

00:13:09.000 --> 00:13:20.000
Trong mã này, chúng tôi kiểm tra xem liệu chúng tôi đã có đột quỵ chưa bằng cách kiểm tra số nhận dạng của nó và nếu có, hãy thêm điểm vào đó.

00:13:20.000 --> 00:13:27.000
Nếu không, chúng tôi tạo một nét mới, thêm điểm vào đó và thêm nét vào mảng nét của chúng tôi.

00:13:27.000 --> 00:13:31.000
Tiếp theo, chúng tôi sẽ viết mã để gửi tin nhắn.

00:13:31.000 --> 00:13:37.000
Chúng ta sẽ đi đến phương pháp ở trên, addPointToActiveStroke.

00:13:37.000 --> 00:13:43.000
Tuyệt vời!

00:13:43.000 --> 00:13:49.000
Bây giờ hãy xây dựng và chạy ứng dụng của chúng tôi và xem trải nghiệm DrawTogether được chia sẻ đang hoạt động.

00:13:49.000 --> 00:13:54.000
Vì vậy, tôi sẽ chuyển sang hai thiết bị của mình và tôi sẽ bắt đầu cuộc gọi FaceTime với chính mình.

00:13:54.000 --> 00:13:56.000
Tôi sẽ vào ứng dụng Điện thoại và sau đó tự gọi cho mình.

00:13:56.000 --> 00:13:59.000
Và sau đó tôi sẽ trả lời trên thiết bị khác của mình.

00:13:59.000 --> 00:14:07.000
Tắt mic đi.

00:14:07.000 --> 00:14:13.000
Bây giờ trên thiết bị này, tôi sẽ bắt đầu trải nghiệm DrawTogether được chia sẻ.

00:14:13.000 --> 00:14:16.000
Tôi sẽ nhấn vào biểu tượng dưới cùng bên trái.

00:14:16.000 --> 00:14:20.000
Và trên thiết bị khác, tôi sẽ tham gia Phiên họp Nhóm.

00:14:20.000 --> 00:14:25.000
Và bây giờ tôi sẽ chơi tic-tac-toe với chính mình.

00:14:25.000 --> 00:14:37.000
Tôi sẽ di chuyển trước.

00:14:37.000 --> 00:14:39.000
Có vẻ như tôi đã thắng.

00:14:39.000 --> 00:14:42.000
Tuyệt. Có vẻ như mã của chúng tôi hoạt động.

00:14:42.000 --> 00:15:02.000
Bây giờ chúng ta đã nói về cách định cấu hình phiên bằng GroupSessionMessenger bằng cách xác định tin nhắn trước tiên, sau đó nhận tin nhắn và cuối cùng gửi tin nhắn, hãy nói về một vài điều khác cần xem xét khi sử dụng GroupSessionMessenger.

00:15:02.000 --> 00:15:11.000
Dưới mui xe, GroupSessionMessenger cung cấp dịch vụ gửi tin nhắn đáng tin cậy và được FIFO sắp xếp cho tất cả những người tham gia tích cực trong nhóm.

00:15:11.000 --> 00:15:17.000
Các tin nhắn bạn gửi có những ràng buộc; nếu chúng quá lớn, một lỗi sẽ được ném ra từ API gửi.

00:15:17.000 --> 00:15:26.000
GroupSessionMessenger dành cho các tải trọng nhỏ hơn và không nên được sử dụng để phát trực tuyến các nội dung lớn như tệp, hình ảnh hoặc video.

00:15:26.000 --> 00:15:30.000
Một điều khác cần xem xét khi gửi tin nhắn là kiểm soát luồng và giới hạn tốc độ.

00:15:30.000 --> 00:15:39.000
Gửi một loạt các tin nhắn liên tiếp, giống như một vòng lặp, có thể dẫn đến lỗi được ném từ API gửi.

00:15:39.000 --> 00:15:46.000
Cuối cùng, khi xác định các tin nhắn để sử dụng với GroupSessionMessenger, hãy cân nhắc thêm hỗ trợ lập phiên bản vào giao thức ứng dụng của bạn.

00:15:46.000 --> 00:15:52.000
Điều này sẽ cho phép các ứng dụng của bạn hỗ trợ tương tác với các thiết bị chạy phiên bản phần mềm cũ hơn của bạn.

00:15:52.000 --> 00:15:59.000
Bây giờ tôi sẽ trao nó cho Adam, người sẽ nói chuyện với bạn về cách bạn có thể trau dồi trải nghiệm GroupActivities của mình.

00:15:59.000 --> 00:16:00.000
Adam: Cảm ơn, Angus!

00:16:00.000 --> 00:16:07.000
Vì vậy, bây giờ hãy nói về một số bước hoàn thiện mà ứng dụng của bạn có thể cần cho trải nghiệm tùy chỉnh của nó.

00:16:07.000 --> 00:16:10.000
Đầu tiên, hãy nói về những người tham gia muộn.

00:16:10.000 --> 00:16:15.000
Những người tham gia muộn là những thiết bị tham gia vào một phiên hoạt động sau khi phiên được bắt đầu.

00:16:15.000 --> 00:16:23.000
Để đảm bảo trải nghiệm phù hợp, những người tham gia muộn cần được cung cấp thông tin mới nhất để tất cả các thiết bị hoạt động dựa trên cùng một dữ liệu.

00:16:23.000 --> 00:16:30.000
Tính toán cho kịch bản này là rất quan trọng để đảm bảo trải nghiệm người dùng mạch lạc, nhưng nó không phải là một kích thước phù hợp với tất cả.

00:16:30.000 --> 00:16:34.000
Dữ liệu cần thiết cho quá trình bắt kịp này sẽ phụ thuộc vào ứng dụng và trải nghiệm của bạn.

00:16:34.000 --> 00:16:38.000
Vì vậy, hãy xem nó áp dụng như thế nào cho ứng dụng DrawTogether.

00:16:38.000 --> 00:16:40.000
Giả sử rằng chúng ta có hai thiết bị trong một Phiên Nhóm.

00:16:40.000 --> 00:16:46.000
Hai thiết bị này có cùng thông tin: một khuôn mặt cười được vẽ trên khung vẽ của chúng.

00:16:46.000 --> 00:16:52.000
Bạn có thể thấy rằng bởi vì cả hai đều ở trong phiên khi bản vẽ xảy ra, họ có cùng dữ liệu trong suốt trải nghiệm.

00:16:52.000 --> 00:16:54.000
Bây giờ, hãy thêm một thiết bị khác.

00:16:54.000 --> 00:16:59.000
Tại thời điểm này, các cuộc gọi thiết bị mới tham gia vào GroupSession của họ, nhưng không có gì trên canvas.

00:16:59.000 --> 00:17:04.000
Vì vậy, chúng tôi vẽ một đám mây, và - Ồ, đó là - điều đó không tốt!

00:17:04.000 --> 00:17:09.000
Bởi vì thiết bị mới không có ngữ cảnh trước đó, khuôn mặt cười của chúng tôi bây giờ có một đám mây trên đó.

00:17:09.000 --> 00:17:11.000
Bây giờ hãy sao lưu và thử lại lần nữa.

00:17:11.000 --> 00:17:17.000
Làm thế nào để chúng ta khắc phục điều này để thiết bị mới có màn trình diễn khuôn mặt cười ngay khi nó tham gia?

00:17:17.000 --> 00:17:27.000
Khi các cuộc gọi thiết bị mới tham gia vào Phiên nhóm, mọi thiết bị khác được tham gia vào Phiên nhóm sẽ thấy thuộc tính Người tham gia đang hoạt động trên lửa Phiên nhóm.

00:17:27.000 --> 00:17:34.000
Các thiết bị quan sát tín hiệu đó sau đó sẽ gửi dữ liệu bắt kịp của nó - trong trường hợp này là khung vẽ hiện có - đến thiết bị mới được nối.

00:17:34.000 --> 00:17:40.000
Bây giờ khi thiết bị mới tham gia, nó thấy rằng đã có một khuôn mặt cười ở đó để chúng ta có thể vẽ xung quanh nó!

00:17:40.000 --> 00:17:43.000
Vậy bây giờ, làm thế nào chúng ta làm điều này trong mã?

00:17:43.000 --> 00:17:48.000
Điều đầu tiên chúng ta cần làm là hiểu dữ liệu mà ứng dụng của chúng ta cần truyền tải trong tin nhắn bắt kịp của chúng ta.

00:17:48.000 --> 00:18:01.000
Vì chúng tôi là một trải nghiệm DrawTogether và mục tiêu của chúng tôi là đảm bảo rằng khung vẽ giống nhau trên thiết bị của mọi người, hãy tiếp tục và tạo một tin nhắn mới trong tệp Message.swift của chúng tôi có tên là "CanvasMessage".

00:18:01.000 --> 00:18:11.000
Cấu trúc này sẽ chứa tất cả các nét vẽ mà chúng ta có và một biến mà chúng ta sẽ gọi là "pointCount", sẽ được sử dụng như một heuristic để tính toán tin nhắn nào cập nhật nhất.

00:18:11.000 --> 00:18:12.000
Tuyệt vời!

00:18:12.000 --> 00:18:15.000
Bây giờ, làm thế nào để chúng ta xử lý việc nhận được tin nhắn này?

00:18:15.000 --> 00:18:27.000
Nếu chúng ta chuyển sang mô hình Canvas của mình trong Canvas.swift, chúng ta có thể thiết lập trình xử lý tin nhắn trong configureGroupSession bằng cách sử dụng GroupSessionMessenger như Angus đã chỉ cho chúng ta trước đây.

00:18:27.000 --> 00:18:39.000
Từ đây, bạn có thể thấy rằng chúng tôi gọi vào chức năng xử lý của mình, vì vậy hãy tiếp tục và thực hiện điều đó.

00:18:39.000 --> 00:18:49.000
Trong mã này, bạn có thể thấy rằng chúng tôi bảo vệ chống lại quan điểm của mình Đếm heuristic để chỉ chấp nhận các tin nhắn bắt kịp mới hơn những gì chúng tôi hiện có.

00:18:49.000 --> 00:18:56.000
Nếu điều đó trôi qua, thì chúng ta hãy tiếp tục và ghi đè các nét vẽ của canvas bằng các nét của catchupMessage.

00:18:56.000 --> 00:19:05.000
Bây giờ, như chúng ta đã thảo luận trước đó, chúng ta cần lắng nghe những Người tham gia tích cực thay đổi để tìm hiểu xem có bất kỳ người tham gia mới nào mà chúng ta cần giao tiếp hay không.

00:19:05.000 --> 00:19:12.000
Vì vậy, hãy tiếp tục và thêm nó vào chức năng configureGroupSession của chúng tôi.

00:19:12.000 --> 00:19:21.000
Trong trình xử lý này, bạn có thể thấy rằng chúng tôi lấy delta giữa những Người tham gia đang hoạt động mới và những Người tham gia đang hoạt động cũ của chúng tôi.

00:19:21.000 --> 00:19:26.000
Điều này đảm bảo rằng chúng tôi chỉ gửi tin nhắn bắt kịp của mình cho những người tham gia mới tham gia.

00:19:26.000 --> 00:19:27.000
Tuyệt vời!

00:19:27.000 --> 00:19:31.000
Bây giờ chúng tôi chỉ cần hình thành và gửi tin nhắn của chúng tôi.

00:19:31.000 --> 00:19:40.000
Tin nhắn này sẽ chứa trạng thái canvas hiện tại của chúng tôi và sẽ chỉ gửi nó cho những Người tham gia mới.

00:19:40.000 --> 00:19:41.000
Và thế là xong!

00:19:41.000 --> 00:19:43.000
Đó là bắt kịp!

00:19:43.000 --> 00:19:51.000
Vì vậy, bây giờ chúng ta đã có tất cả các phần cho Phiên họp Nhóm để tiếp tục cho một hoạt động cụ thể, chúng ta phải làm gì nếu chúng ta thay đổi hoàn toàn các hoạt động?

00:19:51.000 --> 00:19:57.000
Đây có thể là một cái gì đó giống như thay đổi khung vẽ hoặc thay đổi phim.

00:19:57.000 --> 00:20:06.000
API của chúng tôi cung cấp hai cách thay đổi hoạt động: bạn có thể tạo Phiên nhóm mới hoặc cập nhật hoạt động cho mọi người trên Phiên nhóm hiện tại của mình.

00:20:06.000 --> 00:20:10.000
Vì vậy, hãy nói về cả hai.

00:20:10.000 --> 00:20:19.000
Cách đầu tiên và ưa thích để thay đổi nội dung là thông qua việc gọi cùng một API đã bắt đầu Phiên Nhóm: prepareForActivation trên GroupActivity.

00:20:19.000 --> 00:20:34.000
Cách tiếp cận này giúp dễ dàng suy luận về trạng thái nhất quán giữa những người tham gia, vì nó cung cấp một rào cản sạch sẽ cho lối vào và lối ra của GroupSession, vì vậy bạn không cần phải lo lắng về các trạng thái kéo dài hoặc tin nhắn mà bạn không cần từ GroupSession cũ.

00:20:34.000 --> 00:20:42.000
Điều này cực kỳ hữu ích khi người dùng quay lại hoạt động để tìm hoạt động tiếp theo, chẳng hạn như tìm kiếm một ghi chú hoặc bộ phim mới.

00:20:42.000 --> 00:20:48.000
Điều này cũng cung cấp cho hệ thống một dấu hiệu về một thay đổi lớn, sẽ được sử dụng để thông báo cho người dùng.

00:20:48.000 --> 00:20:58.000
Sau cuộc gọi này, giống như bắt đầu Phiên Nhóm, bạn sẽ nhận được Phiên Nhóm mới của mình thông qua chuỗi không đồng bộ phiên trên GroupActivity.

00:20:58.000 --> 00:21:05.000
Bây giờ, điều gì sẽ xảy ra nếu ứng dụng của bạn có một danh sách các hoạt động mà bạn sẽ chuyển đổi, chẳng hạn như nhiều bài hát phát sau nhau?

00:21:05.000 --> 00:21:14.000
API GroupSession của chúng tôi cung cấp một cách đơn giản để bạn kích hoạt cập nhật cho mọi người bằng cách chỉ cần đặt thuộc tính hoạt động trên GroupSession.

00:21:14.000 --> 00:21:17.000
Từ đó, sau đó bạn lắng nghe sự thay đổi thuộc tính hoạt động.

00:21:17.000 --> 00:21:24.000
API của chúng tôi sẽ đảm bảo rằng các thiết bị luôn hội tụ vào cùng một hoạt động nên bạn không cần phải lo lắng về điều đó.

00:21:24.000 --> 00:21:29.000
Bây giờ chúng ta đã hiểu về mặt khái niệm hai, chúng ta nên sử dụng cái nào cho ứng dụng DrawTogether của mình?

00:21:29.000 --> 00:21:35.000
Bởi vì ứng dụng của chúng tôi muốn có một bảng xếp hạng sạch trên mỗi khung vẽ mới, API Phiên mới sẽ cung cấp cho chúng tôi chính xác những gì chúng tôi muốn.

00:21:35.000 --> 00:21:40.000
Vì vậy, bây giờ hãy chuyển sang Xcode để xem cách triển khai nó.

00:21:40.000 --> 00:21:44.000
Bước đầu tiên ở đây là quyết định cách chúng tôi muốn kích hoạt một phiên mới.

00:21:44.000 --> 00:21:51.000
Trong trường hợp của chúng tôi, hãy làm cho nó như vậy khi một khách hàng sử dụng nút Đặt lại của chúng tôi, chúng tôi sẽ tiếp tục và tạo một GroupSession mới.

00:21:51.000 --> 00:22:00.000
Nếu chúng ta nhìn vào mã ControlBar của mình, chúng ta có thể thấy rằng chúng ta đã có một CapsuleButton gọi vào mô hình Canvas của chúng ta để đặt lại trạng thái cục bộ.

00:22:00.000 --> 00:22:06.000
Vì vậy, hãy tiếp tục và sửa đổi chức năng đó để phá bỏ GroupSession và tạo một cái mới.

00:22:06.000 --> 00:22:19.000
Trong mã này, chúng tôi sẽ tiếp tục và hủy bỏ bất kỳ nhiệm vụ và hủy bỏ nào mà chúng tôi có cho GroupSession của mình.

00:22:19.000 --> 00:22:27.000
Chúng tôi cũng sẽ kiểm tra xem chúng tôi có GroupSession hay không - và nếu có, hãy để nó và gọi vào thuộc tính kích hoạt trên loại DrawTogether của chúng tôi.

00:22:27.000 --> 00:22:32.000
Từ đó, dòng chảy bình thường của chúng tôi để nhận GroupSession sẽ diễn ra, và chúng tôi đã sẵn sàng!

00:22:32.000 --> 00:22:38.000
Bây giờ chúng ta có một cách rõ ràng để chuyển sang một bức tranh mới.

00:22:38.000 --> 00:22:44.000
Bây giờ, điều gì sẽ xảy ra nếu chúng tôi muốn thay đổi giao diện người dùng của mình để cho người dùng biết rằng họ có thể thử trải nghiệm SharePlay của chúng tôi với bạn bè của họ?

00:22:44.000 --> 00:22:55.000
Ví dụ: trong ứng dụng vẽ của chúng tôi, chúng tôi muốn khung vẽ của mình thay đổi từ cái này sang cái này khi chúng tôi đủ điều kiện cho GroupSession, bạn sẽ nhận thấy rằng bây giờ chúng tôi hiển thị một nút để chia sẻ khung vẽ.

00:22:55.000 --> 00:22:58.000
Vậy làm thế nào để chúng ta làm điều này?

00:22:58.000 --> 00:23:05.000
Với GroupStateObserver API, chúng tôi có thể lắng nghe nhà xuất bản cho chúng tôi biết khi nào thiết bị đủ điều kiện cho Phiên nhóm.

00:23:05.000 --> 00:23:09.000
Sau đó chúng ta có thể sử dụng cái này để tự động hiển thị và ẩn nút của chúng ta.

00:23:09.000 --> 00:23:14.000
Vậy chúng ta hãy đi và thực hiện nó!

00:23:14.000 --> 00:23:18.000
Như chúng ta đã thấy, chúng ta muốn một nút nhỏ ở phía dưới bên trái của ứng dụng của chúng ta.

00:23:18.000 --> 00:23:30.000
Vì ứng dụng của chúng tôi đã có nút chia sẻ trong chế độ xem ControlBar của chúng tôi, hãy thay đổi hành vi để hiển thị và ẩn nút dựa trên GroupStateObserver.

00:23:30.000 --> 00:23:34.000
Đầu tiên chúng ta tiếp tục và thêm groupStateObserver vào chế độ xem của chúng ta.

00:23:34.000 --> 00:23:51.000
Bây giờ hãy bao quanh CapsuleButton của chúng tôi để chỉ hiển thị nếu chúng tôi đủ điều kiện cho một groupSession và chúng tôi chưa ở trong groupSession này.

00:23:51.000 --> 00:23:52.000
Và thế là xong!

00:23:52.000 --> 00:23:57.000
Nút của chúng tôi bây giờ chỉ hiển thị động khi nó hữu ích cho người dùng.

00:23:57.000 --> 00:24:01.000
Bây giờ chúng ta hãy xem lại những gì chúng ta đã thấy trong phiên này.

00:24:01.000 --> 00:24:10.000
Chúng tôi đã trải qua toàn bộ quá trình tạo ra một ứng dụng vẽ đơn giản mà sau đó chúng tôi đã thay đổi để tận dụng Hoạt động nhóm để làm cho nó được đồng bộ hóa và kết nối hơn bao giờ hết.

00:24:10.000 --> 00:24:20.000
Nhưng quan trọng hơn, chúng tôi đã trải qua tất cả các bước cần thiết để bạn giải phóng hoàn toàn sự sáng tạo của mình và tạo ra bất kỳ trải nghiệm SharePlay tùy chỉnh nào với Hoạt động Nhóm.

00:24:20.000 --> 00:24:36.000
Chúng tôi đã nói về việc tạo một hoạt động tùy chỉnh với một loại chung, định cấu hình và tận dụng GroupSession và GroupSessionMessenger để giao tiếp đồng bộ, và các trường hợp cạnh và API mà ứng dụng của bạn nên áp dụng để tạo ra trải nghiệm người dùng thực sự phong phú.

00:24:36.000 --> 00:24:43.000
Tôi hy vọng bạn thích tạo ra trải nghiệm tùy chỉnh này với chúng tôi và chúng tôi mong muốn được thấy sự sáng tạo của bạn trở nên điên cuồng với khuôn khổ Hoạt động Nhóm!

00:24:43.000 --> 00:24:53.000
Bước tiếp theo của bạn trong khi tìm hiểu về Hoạt động nhóm nên là phiên "Thiết kế cho Hoạt động Nhóm" Và nếu bạn chưa xem nó, hãy xem phiên "Xây dựng trải nghiệm truyền thông với Hoạt động Nhóm".

00:24:53.000 --> 00:24:56.000
Nếu bạn có bất kỳ câu hỏi nào, vui lòng tìm chúng tôi tại phòng thí nghiệm Hoạt động Nhóm.

00:24:56.000 --> 00:25:00.000
Và cuối cùng, cảm ơn tất cả các bạn đã theo dõi và có một WWDC tuyệt vời.

00:25:00.000 --> 00:25:02.000
Chúng tôi nóng lòng muốn xem những gì bạn xây dựng!

00:25:02.000 --> 23:59:59.000
♪

