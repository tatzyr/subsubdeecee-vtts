WEBVTT

00:00:02.000 --> 00:00:10.000
Xin chào.

00:00:10.000 --> 00:00:14.000
Tên tôi là Annie, và tôi là một kỹ sư phần mềm trong nhóm Health Records.

00:00:14.000 --> 00:00:23.000
Hôm nay tôi tham gia cùng đồng nghiệp Cary của tôi để chỉ cho bạn cách bạn có thể trao quyền cho mọi người chia sẻ hồ sơ sức khỏe có thể kiểm chứng của họ bằng HealthKit.

00:00:23.000 --> 00:00:33.000
Trước khi chúng tôi đi sâu vào hồ sơ sức khỏe có thể kiểm chứng được, tôi muốn giới thiệu ngắn gọn về tính năng Hồ sơ sức khỏe mà chúng tôi đã ra mắt vào năm 2018 cho iOS 11.3.

00:00:33.000 --> 00:00:43.000
Hồ sơ Sức khỏe cho phép người dùng kết nối với các nhà cung cấp của họ và tải hồ sơ lâm sàng của họ xuống ứng dụng Sức khỏe một cách an toàn để dễ dàng lưu trữ và trực quan hóa.

00:00:43.000 --> 00:00:51.000
Tất cả đều được xây dựng dựa trên các tiêu chuẩn công nghiệp như Tài nguyên tương tác chăm sóc sức khỏe nhanh của HL7 hoặc FHIR.

00:00:51.000 --> 00:00:58.000
Với sự cho phép của người dùng, ứng dụng của bạn có thể truy cập các bản ghi sức khỏe này mà người dùng đã tải xuống bằng HealthKit.

00:00:58.000 --> 00:01:09.000
Để biết thêm chi tiết về API Hồ sơ Sức khỏe hiện có, tôi khuyến khích bạn xem video WWDC 2018 của chúng tôi, "Truy cập Hồ sơ Sức khỏe với HealthKit" để tìm hiểu thêm.

00:01:09.000 --> 00:01:23.000
Đối với iOS 15, chúng tôi đang tận dụng công việc Hồ sơ Sức khỏe của mình để cho phép tải xuống, lưu trữ và chia sẻ các hồ sơ có thể xác minh được trong ứng dụng Sức khỏe được triển khai dựa trên đặc tả Thẻ Sức khỏe SMART.

00:01:23.000 --> 00:01:33.000
Hãy cùng khám phá hồ sơ sức khỏe có thể kiểm chứng là gì và chúng khác với dữ liệu hồ sơ sức khỏe mà bạn hiện có thể truy vấn với HealthKit như thế nào.

00:01:33.000 --> 00:01:43.000
Đầu tiên, một hồ sơ sức khỏe có thể kiểm chứng chứa nhiều tài nguyên FHIR, bao gồm tài nguyên bệnh nhân và một hoặc nhiều tài nguyên lâm sàng.

00:01:43.000 --> 00:01:48.000
Những tài nguyên này được đóng gói trong cái mà chúng tôi gọi là Thẻ Sức khỏe THÔNG MINH.

00:01:48.000 --> 00:02:02.000
Các tổ chức phát hành hoặc các tổ chức tạo hồ sơ sức khỏe có thể xác minh được, chẳng hạn như phòng thí nghiệm hoặc nhà cung cấp dịch vụ chăm sóc sức khỏe, ký bằng mật mã Thẻ Y tế SMART này dưới dạng Chữ ký Web JSON hoặc JWS.

00:02:02.000 --> 00:02:12.000
Cuối cùng, các tổ chức phát hành tạo ra các hồ sơ sức khỏe có thể kiểm chứng sao cho chúng chỉ bao gồm thông tin cần thiết về bệnh nhân và dữ liệu lâm sàng của họ.

00:02:12.000 --> 00:02:16.000
Để có được bức tranh rõ ràng hơn về những điểm này, hãy xem một ví dụ.

00:02:16.000 --> 00:02:24.000
Đối với ví dụ này, hồ sơ chứa hai tài nguyên tiêm chủng FHIR, một cho mỗi liều vắc xin.

00:02:24.000 --> 00:02:30.000
Nó cũng bao gồm một nguồn lực bệnh nhân FHIR để xác định ai đã tiêm vắc xin.

00:02:30.000 --> 00:02:37.000
Những tài nguyên này sau đó được kết hợp thành Thẻ Y tế THÔNG MINH, ở dạng thô, trông như thế này.

00:02:37.000 --> 00:02:56.000
Tải trọng Thẻ Y tế SMART bao gồm thông tin như loại, chứa URL khai báo loại dữ liệu mong đợi trong thẻ y tế và chủ đề thông tin xác thực, bao gồm phiên bản FHIR và tài nguyên Gói chứa tài nguyên tiêm chủng và bệnh nhân.

00:02:56.000 --> 00:03:04.000
Thẻ Y tế SMART sau đó được ký dưới dạng JWS, có hai thành phần: Tiêu đề và tải trọng.

00:03:04.000 --> 00:03:21.000
Tiêu đề JWS chứa thuật toán được sử dụng để ký JWS; dấu vân tay khóa công khai, chỉ định khóa công khai nào của nhà phát hành được sử dụng để ký; và thuật toán được sử dụng để nén tải trọng.

00:03:21.000 --> 00:03:38.000
Tải trọng JWS nén, cùng với chủ đề thông tin xác thực, chứa dữ liệu khiếu nại khác, bao gồm URL của nhà phát hành, nơi đặt khóa công khai của nhà phát hành, ngày phát hành và ngày hết hạn tùy chọn.

00:03:38.000 --> 00:03:42.000
Ở dạng thô, đây là Hồ sơ sức khỏe có thể kiểm chứng trông như thế nào.

00:03:42.000 --> 00:03:51.000
Để biết thêm thông tin, chúng tôi khuyến khích bạn truy cập thông số kỹ thuật Thẻ Y tế SMART thông qua liên kết được liên kết với phiên này.

00:03:51.000 --> 00:03:59.000
Bây giờ chúng tôi đã xem xét hồ sơ sức khỏe có thể xác minh trông như thế nào, hãy để tôi chỉ cho bạn cách bạn có thể nhập những hồ sơ này vào ứng dụng Sức khỏe.

00:03:59.000 --> 00:04:03.000
Một lựa chọn là sử dụng tính năng Hồ sơ Sức khỏe hiện có.

00:04:03.000 --> 00:04:10.000
Người dùng có thể tải hồ sơ sức khỏe có thể xác minh xuống ứng dụng Sức khỏe bằng cách kết nối với nhà cung cấp hỗ trợ Hồ sơ Sức khỏe.

00:04:10.000 --> 00:04:20.000
Lưu ý rằng tùy chọn này chỉ khả dụng khi có tính năng Hồ sơ Sức khỏe, hiện có ở Hoa Kỳ, Vương quốc Anh và Canada.

00:04:20.000 --> 00:04:30.000
Người dùng cũng có các tùy chọn tải xuống tệp có phần mở rộng .smart-health-cards hoặc quét mã QR nhúng tệp smart-health-card.

00:04:30.000 --> 00:04:39.000
Điều này sẽ hiển thị trang tính sau trong ứng dụng Sức khỏe, nơi người dùng có thể xem chi tiết và chọn có tải xuống các bản ghi này hay không.

00:04:39.000 --> 00:04:42.000
Hai lựa chọn này có sẵn trên phạm vi quốc tế.

00:04:42.000 --> 00:04:47.000
Cuối cùng, làm thế nào bạn có thể yêu cầu quyền truy cập vào dữ liệu này với HealthKit?

00:04:47.000 --> 00:05:00.000
Chúng tôi đang giới thiệu một truy vấn HealthKit mới, HKVerifiableClinicalRecordQuery, và một lớp con HKSample mới, HKVerifiableClinicalRecord cho iOS 15.

00:05:00.000 --> 00:05:10.000
Không giống như các lớp con HKQuery khác, để sử dụng truy vấn này, bạn phải yêu cầu quyền truy cập HealthKit cho Hồ sơ sức khỏe có thể xác minh.

00:05:10.000 --> 00:05:19.000
Mặc dù bạn vẫn có quyền truy cập vào các tiêu đề công khai trong SDK, trình xử lý kết quả sẽ trả về lỗi bị từ chối ủy quyền mà không có quyền.

00:05:19.000 --> 00:05:25.000
Vui lòng tham khảo các liên kết được liên kết với phiên này để biết thông tin về cách bắt đầu.

00:05:25.000 --> 00:05:36.000
Trước khi chúng ta đi sâu hơn vào các lớp truy vấn và mẫu, hãy xem xét ủy quyền cho Hồ sơ sức khỏe có thể xác minh, hơi khác so với những gì bạn có thể quen thuộc với Hồ sơ sức khỏe.

00:05:36.000 --> 00:05:47.000
Đầu tiên, Hồ sơ sức khỏe có thể xác minh quan sát mẫu ủy quyền cho mỗi mẫu, trong đó người dùng chọn các mẫu riêng lẻ, không phải loại, để chia sẻ với ứng dụng của bạn.

00:05:47.000 --> 00:05:56.000
Loại ủy quyền này cung cấp cho người dùng quyền kiểm soát chi tiết hơn đối với dữ liệu của họ và rất quan trọng trong việc bảo vệ quyền riêng tư của họ.

00:05:56.000 --> 00:06:08.000
Mẫu ủy quyền HealthKit hiện tại bao gồm hai bước: Đầu tiên yêu cầu ủy quyền người dùng cho các loại để đọc và chia sẻ, sau đó truy vấn các mẫu sau khi ủy quyền được cấp.

00:06:08.000 --> 00:06:12.000
Với Hồ sơ Sức khỏe Có thể Xác minh, bước đầu tiên này là không cần thiết.

00:06:12.000 --> 00:06:26.000
Thay vào đó, một khi một phiên bản của HKVerifiableClinicalRecordQuery được tạo và thực thi, một bảng ủy quyền sẽ được trình bày, cho phép người dùng chọn các bản ghi riêng lẻ nào để chia sẻ với ứng dụng của bạn.

00:06:26.000 --> 00:06:32.000
Sau khi chia sẻ, các bản ghi đã chọn sau đó được trả về trình xử lý kết quả của truy vấn.

00:06:32.000 --> 00:06:37.000
Hơn nữa, ủy quyền cho Hồ sơ Sức khỏe Có thể Xác minh chỉ là một lần.

00:06:37.000 --> 00:06:44.000
Chia sẻ những hồ sơ này với ứng dụng của bên thứ ba không thiết lập ủy quyền truy cập dài hạn.

00:06:44.000 --> 00:06:56.000
Mỗi lần thực hiện HKVerifiableClinicalRecordQuery sẽ dẫn đến việc trình bày bảng ủy quyền sau và trả lại các bản ghi do người dùng chọn cho trình xử lý kết quả.

00:06:56.000 --> 00:07:03.000
Bây giờ chúng ta đã xem qua ủy quyền, hãy xem HKVerifiableClinicalRecordQuery chi tiết hơn.

00:07:03.000 --> 00:07:16.000
Để khởi tạo HKVerifiableClinicalRecordQuery, trước tiên bạn sẽ phải cung cấp một chuỗi các loại bản ghi, mà chúng tôi đã xác định trước đó là loại dữ liệu có trong bản ghi sức khỏe có thể xác minh được.

00:07:16.000 --> 00:07:24.000
Chỉ những bản ghi có tất cả các loại bản ghi được cung cấp hiện diện mới được hiển thị trong bảng ủy quyền.

00:07:24.000 --> 00:07:32.000
Giống như các truy vấn HealthKit khác, bạn cũng có tùy chọn thêm vị ngữ để lọc thêm bộ mẫu để ủy quyền.

00:07:32.000 --> 00:07:40.000
Chúng tôi đang cung cấp một hàm tạo tiện lợi để tạo vị ngữ cho các bản ghi với các ngày có liên quan trong khoảng thời gian ngày.

00:07:40.000 --> 00:07:50.000
Khi truy vấn được thực thi và người dùng nhấn vào "Chia sẻ một lần", HKVerifiableClinicalRecords được ủy quyền sau đó được trả về trong trình xử lý kết quả.

00:07:50.000 --> 00:08:02.000
Bản ghi bao gồm thông tin cơ bản về chủ đề và nhà phát hành, và, tất nhiên, thuộc tính JWS, sẽ chứa dữ liệu thô mà bạn sẽ xác minh và giải mã.

00:08:02.000 --> 00:08:18.000
Bây giờ chúng ta đã xem qua tính năng Hồ sơ sức khỏe có thể xác minh và API của nó trông như thế nào, tôi sẽ giao nó cho Cary, người sẽ hướng dẫn bạn cách nhập dữ liệu kiểm tra, sử dụng API để yêu cầu hồ sơ và xác minh JWS của bản ghi.

00:08:18.000 --> 00:08:19.000
Cảm ơn, Annie.

00:08:19.000 --> 00:08:20.000
Xin chào mọi người.

00:08:20.000 --> 00:08:23.000
Tên tôi là Cary, và tôi cũng là một kỹ sư trong nhóm Hồ sơ Y tế.

00:08:23.000 --> 00:08:27.000
Hôm nay, tôi sẽ hướng dẫn bạn cách làm việc với Hồ sơ sức khỏe có thể xác minh được.

00:08:27.000 --> 00:08:34.000
Vì vậy, cách tốt nhất để bắt đầu làm việc với tính năng mới này là tải một số dữ liệu thử nghiệm vào HealthKit.

00:08:34.000 --> 00:08:39.000
Như Annie đã đề cập, có ba phương pháp khác nhau mà bạn có thể sử dụng để bắt đầu.

00:08:39.000 --> 00:08:49.000
Nếu bạn ở Hoa Kỳ, Canada hoặc Vương quốc Anh, bạn chỉ cần kết nối với nhà cung cấp bằng cách sử dụng tính năng Hồ sơ Sức khỏe hiện có trong Ứng dụng Sức khỏe.

00:08:49.000 --> 00:09:00.000
Một cách mới khác mà chúng tôi đã thêm vào là tải xuống tệp .smart-health-card, một ví dụ mà bạn có thể tìm thấy trên trang web đặc tả smarthealth.cards.

00:09:00.000 --> 00:09:04.000
Phương pháp thứ ba là quét mã QR.

00:09:04.000 --> 00:09:06.000
Vậy chúng ta hãy đi lấy một ít dữ liệu.

00:09:06.000 --> 00:09:12.000
Đối với bản demo này, bạn có thể bắt đầu bằng cách thử nhập mã QR mới.

00:09:12.000 --> 00:09:17.000
Bạn sẽ bắt đầu với một thiết bị chạy iOS 15 và quét mã QR này.

00:09:17.000 --> 00:09:21.000
Ngay sau khi bạn quét nó, bạn sẽ nhận được lời nhắc mở trực tiếp vào ứng dụng sức khỏe.

00:09:21.000 --> 00:09:25.000
Khi bạn chuyển sang ứng dụng sức khỏe, nó sẽ ngay lập tức bắt đầu hướng dẫn bạn nhập thẻ sức khỏe này.

00:09:25.000 --> 00:09:30.000
Sau khi chọn tùy chọn "Thêm vào Sức khỏe", quá trình nhập sẽ hoàn tất.

00:09:30.000 --> 00:09:35.000
Bạn có thể cuộn qua tab duyệt và xem các bản ghi đã nhập trong phần tiêm chủng.

00:09:35.000 --> 00:09:44.000
Nếu bạn tiếp tục và nhấn vào danh mục này, bây giờ bạn có thể thấy rằng bạn đã có vắc xin và chữ ký của nó đã được xác minh bởi ứng dụng Sức khỏe.

00:09:44.000 --> 00:09:51.000
Bây giờ bạn đã có một số hồ sơ đã ký được nhập vào ứng dụng Sức khỏe, bạn đã sẵn sàng tiếp tục và yêu cầu những hồ sơ này từ ứng dụng của riêng bạn.

00:09:51.000 --> 00:09:56.000
Bây giờ, hãy xem xét một ví dụ về cách ứng dụng của bạn có thể truy cập API mới này.

00:09:56.000 --> 00:09:58.000
Đầu tiên, bạn sẽ bắt đầu bằng cách nhập HealthKit.

00:09:58.000 --> 00:10:06.000
Tiếp theo, bạn sẽ tạo một HealthStore, mà bạn có thể đã quen thuộc nếu bạn đã sử dụng API ủy quyền HealthKit tiêu chuẩn.

00:10:06.000 --> 00:10:12.000
Bạn cũng sẽ tạo một danh sách các loại bản ghi để chỉ định loại dữ liệu mà bạn muốn người dùng chia sẻ với bạn.

00:10:12.000 --> 00:10:18.000
Khi ủy quyền, bạn sẽ được cung cấp một danh sách dữ liệu để chia sẻ chỉ khớp với các loại bản ghi này.

00:10:18.000 --> 00:10:23.000
Tiếp theo, bạn sẽ tạo một vị ngữ chỉ định phạm vi ngày hợp lệ cho các mẫu để chia sẻ.

00:10:23.000 --> 00:10:30.000
Trong ví dụ này, bạn có thể thấy các phòng thí nghiệm được tiến hành trong bảy ngày qua đang được yêu cầu.

00:10:30.000 --> 00:10:39.000
Sau đó, bạn sẽ tạo một truy vấn bằng cách sử dụng recordTypes và vị ngữ được xây dựng, sử dụng hoàn thành để kiểm tra xem các mẫu được trình bày có được chia sẻ với ứng dụng của bạn hay không.

00:10:39.000 --> 00:10:47.000
Cuối cùng, việc thực hiện truy vấn sẽ khiến một bảng ủy quyền được trình bày trong đó kết quả có thể được chọn để chia sẻ với ứng dụng của bạn.

00:10:47.000 --> 00:10:51.000
Hộp thoại này sẽ được trình bày mỗi khi phương pháp này được thực thi.

00:10:51.000 --> 00:10:57.000
Bây giờ bạn đã truy xuất một phần dữ liệu lâm sàng đã ký, bạn có thể viết một số mã để xác minh chữ ký của nó trong ứng dụng của mình.

00:10:57.000 --> 00:11:03.000
Để xem xét, chữ ký số là một cách toán học để xác minh tính xác thực của thông tin kỹ thuật số.

00:11:03.000 --> 00:11:13.000
Quá trình này có thể được thực hiện bởi bất kỳ thiết bị nào, chẳng hạn như máy chủ hoặc thiết bị di động khác, nhưng chúng ta hãy tiếp tục và xem cách thực hiện từ bên trong ứng dụng của bạn.

00:11:13.000 --> 00:11:16.000
Bạn có thể thực hiện điều này bằng bốn bước chính.

00:11:16.000 --> 00:11:20.000
Đầu tiên, bạn sẽ phân tích dữ liệu lâm sàng bằng cách sử dụng Codable.

00:11:20.000 --> 00:11:24.000
Thứ hai, bạn sẽ giải nén tải trọng Mã thông báo web JSON đã ký.

00:11:24.000 --> 00:11:28.000
Thứ ba, bạn sẽ tải xuống khóa công khai của nhà phát hành từ trang web của họ.

00:11:28.000 --> 00:11:32.000
Và cuối cùng, bạn sẽ sử dụng CryptoKit để xác minh chữ ký.

00:11:32.000 --> 00:11:41.000
Hãy bắt đầu bằng cách xem cách xác định mô hình dữ liệu cho một bản ghi đã ký, được xác định chính thức trong đặc tả Chữ ký Web JSON.

00:11:41.000 --> 00:11:47.000
Cấu trúc này được định nghĩa trong ba phần chính: Tiêu đề, tải trọng và chữ ký.

00:11:47.000 --> 00:11:56.000
Bạn có thể sử dụng Swift Codable để phân tích cú pháp cho mình và bạn nên giữ một biểu diễn ban đầu của tiêu đề và tải trọng xung quanh để sử dụng trong quá trình xác minh chữ ký.

00:11:56.000 --> 00:12:03.000
Quan trọng nhất, bạn sẽ thêm một trình khởi tạo để phân tích cú pháp JWS từ dạng tuần tự hóa nhỏ gọn của nó.

00:12:03.000 --> 00:12:07.000
Tiếp theo, bạn sẽ tạo một cấu trúc được sử dụng để đại diện cho Tiêu đề JWS.

00:12:07.000 --> 00:12:14.000
Bạn sẽ cần điều này trong quá trình khởi tạo từ tuần tự hóa nhỏ gọn, cũng như trong quá trình xác minh chữ ký.

00:12:14.000 --> 00:12:25.000
Bạn có thể thấy ở đây trong tiêu đề mà bạn có thể mong đợi tìm thấy một thuật toán chữ ký được chỉ định, một trường key-ID được sử dụng để giữ dấu vân tay khóa công khai và một thuật toán nén.

00:12:25.000 --> 00:12:31.000
Dấu vân tay khóa công khai được sử dụng để xác định khóa nào của nhà phát hành được sử dụng để ký JWS.

00:12:31.000 --> 00:12:41.000
Quá trình này yêu cầu Thuật toán Chữ ký ES256 và thuật toán nén DEF, cả hai đều được hỗ trợ bởi các thư viện Swift của bên thứ nhất.

00:12:41.000 --> 00:12:46.000
Bây giờ chúng ta hãy xem mã cần thiết để phân tích cú pháp JWS từ tuần tự hóa nhỏ gọn của nó.

00:12:46.000 --> 00:12:55.000
Bạn sẽ bắt đầu bằng cách chia chuỗi được tuần tự hóa thành các phần cấu thành của nó, mỗi phần được mã hóa Base64URL.

00:12:55.000 --> 00:13:05.000
Sau khi tạo JSONDecoder và Base64URL giải mã tiêu đề và tải trọng, bạn có thể kiểm tra xem tiêu đề có chỉ ra rằng tải trọng được nén chính xác hay không.

00:13:05.000 --> 00:13:15.000
Sau khi kiểm tra việc nén, bạn sẽ sử dụng một phương pháp tiện ích mà bạn có thể tìm thấy trong dự án mẫu được cung cấp để giải nén tải trọng.

00:13:15.000 --> 00:13:20.000
Phần tiếp theo bạn sẽ cần là một cấu trúc để mô hình hóa tải trọng thẻ y tế.

00:13:20.000 --> 00:13:32.000
Hai phần quan trọng nhất ở đây là trường nhà phát hành, sẽ chứa mã định danh web của nhà phát hành mà bạn có thể sử dụng để tìm nạp khóa của họ và phần còn lại là trường VC, chứa tất cả dữ liệu bệnh nhân.

00:13:32.000 --> 00:13:41.000
Để biết thêm thông tin về cách phân tích trường VC và phân tích nội dung của nó, hãy xem bài nói chuyện "Xử lý FHIR mà không bị đốt cháy" từ WWDC 2020.

00:13:41.000 --> 00:13:47.000
Bây giờ bạn đã thấy cách phân tích cú pháp JWS, bạn đã sẵn sàng để xác minh tính xác thực của nó.

00:13:47.000 --> 00:13:52.000
Hãy xem xét việc tạo một tiện ích mở rộng sẽ thêm phương thức xác minh vào cấu trúc JWS của bạn.

00:13:52.000 --> 00:14:04.000
Vì bạn sẽ liên hệ trực tiếp với trang web của nhà phát hành để truy xuất khóa ký của họ, bạn có thể sử dụng Combine để trợ giúp các khía cạnh không đồng bộ của quy trình này và bạn có thể sử dụng CryptoKit để trợ giúp xác minh chữ ký.

00:14:04.000 --> 00:14:12.000
Bên trong phương pháp xác minh, bạn sẽ bắt đầu bằng cách lấy ra mã định danh của nhà phát hành, luôn là địa chỉ web của nhà phát hành.

00:14:12.000 --> 00:14:20.000
Tại đây, bạn có thể thêm phương pháp của riêng mình để kiểm tra xem URL có phải là URL mà cá nhân bạn tin tưởng hay không và hủy bỏ nếu đó là URL mà bạn không muốn chấp nhận kết quả.

00:14:20.000 --> 00:14:30.000
Tiếp theo, bạn sẽ tạo một URL để truy xuất các khóa của nhà phát hành bằng cách thêm đường dẫn URL tiêu chuẩn .wellknown/jwks.json.

00:14:30.000 --> 00:14:36.000
Hậu tố đường dẫn này được xác định trong thông số kỹ thuật và phải giống nhau cho tất cả các tổ chức phát hành.

00:14:36.000 --> 00:14:46.000
Bây giờ bạn đã xây dựng URL nổi tiếng, bạn có thể kết nối với nhà phát hành, tải xuống khóa của họ và hoàn tất việc xác minh chữ ký.

00:14:46.000 --> 00:14:54.000
Bạn sẽ hoàn thành việc viết phương pháp này bằng cách tạo một URLSession dataTaskPublisher sẽ kết nối với điểm cuối jwk nổi tiếng của nhà phát hành.

00:14:54.000 --> 00:15:05.000
Sau đó, bạn có thể ánh xạ nó đến dữ liệu, giải mã nó bằng cách sử dụng jsonDecoder đến một tập hợp các JWK và cuối cùng ánh xạ nó đến một boolean, cho biết liệu chữ ký có hợp lệ hay không.

00:15:05.000 --> 00:15:12.000
Bên trong khối bản đồ cuối cùng, bạn sẽ chọn khóa của nhà phát hành dựa trên những gì tiêu đề JWS chỉ ra.

00:15:12.000 --> 00:15:17.000
Phần cuối cùng liên quan đến việc sử dụng CryptoKit để xác minh chữ ký.

00:15:17.000 --> 00:15:27.000
Theo đặc tả của JWS, phần dữ liệu đã ký được hình thành bằng cách nối tiêu đề được mã hóa Base64URL và tải trọng được nối với nhau bằng một khoảng thời gian.

00:15:27.000 --> 00:15:39.000
Tiếp theo, bạn sẽ chuyển đổi các khóa JWK đã tải xuống thành các khóa ký CryptoKit P256, sử dụng phương pháp tiện ích mà bạn có thể tìm thấy trong dự án mẫu đi kèm với buổi nói chuyện này.

00:15:39.000 --> 00:15:45.000
Cuối cùng, bạn sẽ sử dụng phương pháp isValidSignature của CryptoKit để xác minh chữ ký.

00:15:45.000 --> 00:15:52.000
Bây giờ mô hình dữ liệu của bạn và tất cả logic cần thiết để xác minh tính xác thực của nó đã được xác định, bạn có thể kết hợp mọi thứ lại với nhau.

00:15:52.000 --> 00:16:01.000
Nhìn vào ví dụ trước đó về cách gọi API mới, bạn có thể thay thế nhận xét này bằng lệnh gọi đến phương thức xác minh mới của mình.

00:16:01.000 --> 00:16:07.000
Vì API trả về danh sách tất cả các mẫu đã chọn, bạn có thể chọn mẫu đầu tiên từ danh sách.

00:16:07.000 --> 00:16:10.000
Tiếp theo, phân tích cú pháp nó từ dữ liệu thành một Chuỗi.

00:16:10.000 --> 00:16:14.000
Sau đó phân tích cú pháp nó bằng cách sử dụng trình khởi tạo tuần tự hóa nhỏ gọn của bạn.

00:16:14.000 --> 00:16:19.000
Cuối cùng, hãy gọi phương thức xác minh mới của bạn và lắng nghe kết quả boolean phát ra.

00:16:19.000 --> 00:16:27.000
Và cứ như vậy, chúng tôi đã thấy cách lấy một phần dữ liệu lâm sàng đã ký tải xuống các khóa ký của tổ chức phát hành và xác thực chữ ký của các hồ sơ này.

00:16:27.000 --> 00:16:30.000
Bây giờ, tôi sẽ trả lại mọi thứ cho Annie để tóm tắt.

00:16:30.000 --> 00:16:31.000
Cảm ơn, Cary.

00:16:31.000 --> 00:16:38.000
Trước khi chúng ta kết thúc, tôi muốn nói về quyền riêng tư liên quan đến Hồ sơ sức khỏe có thể xác minh được.

00:16:38.000 --> 00:16:46.000
Hy vọng rằng, tôi đã nói rõ trong suốt phiên này rằng tính năng Hồ sơ sức khỏe có thể xác minh được xây dựng với sự riêng tư của người dùng.

00:16:46.000 --> 00:16:56.000
Trước hết, đặc tả Thẻ Y tế SMART sử dụng hồ sơ dữ liệu để giảm thiểu thông tin mà nhà phát hành nên đưa vào mỗi bản ghi.

00:16:56.000 --> 00:17:08.000
Ứng dụng Sức khỏe được thiết kế để bảo vệ dữ liệu sức khỏe nhạy cảm, vì vậy khi điện thoại bị khóa, tất cả dữ liệu sức khỏe và thể lực trong ứng dụng Sức khỏe sẽ được mã hóa, bao gồm các hồ sơ sức khỏe có thể kiểm chứng được.

00:17:08.000 --> 00:17:20.000
Quyền truy cập vào hồ sơ sức khỏe có thể kiểm chứng yêu cầu đơn xin quyền lợi đi kèm với các nghĩa vụ bổ sung để đảm bảo rằng dữ liệu sức khỏe nhạy cảm này không bị lạm dụng.

00:17:20.000 --> 00:17:28.000
Và cuối cùng, người dùng sẽ có quyền kiểm soát bổ sung đối với cách chia sẻ hồ sơ sức khỏe có thể xác minh của họ với ứng dụng của bạn.

00:17:28.000 --> 00:17:30.000
Hãy xem lại những gì chúng ta đã đề cập hôm nay.

00:17:30.000 --> 00:17:42.000
Trong iOS 15, dựa trên Hồ sơ Sức khỏe, chúng tôi đang mang đến khả năng nhập các bản ghi có thể xác minh vào ứng dụng Sức khỏe và để các nhà phát triển đọc dữ liệu này bằng API mới.

00:17:42.000 --> 00:17:47.000
Để kết thúc, đây là những gì bạn có thể làm tiếp theo.

00:17:47.000 --> 00:17:55.000
Đầu tiên, để tìm hiểu thêm về hệ sinh thái dữ liệu sức khỏe có thể kiểm chứng được, hãy xem thông số kỹ thuật Thẻ sức khỏe SMART.

00:17:55.000 --> 00:18:00.000
Nhập hồ sơ kiểm tra vào ứng dụng Sức khỏe để tự mình dùng thử.

00:18:00.000 --> 00:18:06.000
Tải xuống ứng dụng mẫu, cho thấy cách bạn có thể truy vấn và xác minh các hồ sơ kiểm tra đó.

00:18:06.000 --> 00:18:14.000
Và cuối cùng, khi bạn đã sẵn sàng gửi ứng dụng của mình, hãy yêu cầu quyền truy cập HealthKit cho các hồ sơ sức khỏe có thể xác minh được.

00:18:14.000 --> 00:18:18.000
Cảm ơn bạn đã xem, và có một WWDC tuyệt vời.

00:18:18.000 --> 23:59:59.000
[Âm nhạc].

