WEBVTT

00:00:01.000 --> 00:00:09.000
♪ ♪

00:00:09.000 --> 00:00:14.000
Chào mừng đến với phiên "Khám phá và quản lý các Gói Swift bằng cách sử dụng các bộ sưu tập."

00:00:14.000 --> 00:00:22.000
Trong Xcode 11, chúng tôi đã giới thiệu hỗ trợ cho các gói Swift, cung cấp một cách tiếp cận đơn giản để phân phối các thư viện dưới dạng mã nguồn.

00:00:22.000 --> 00:00:29.000
Khi ngày càng có nhiều gói được xuất bản, chúng tôi muốn làm cho việc khám phá các gói phù hợp với các trường hợp sử dụng cụ thể dễ tiếp cận hơn.

00:00:29.000 --> 00:00:35.000
Khi thêm các gói vào dự án của họ, các nhà phát triển cũng muốn xem thêm thông tin, chẳng hạn như giấy phép của họ.

00:00:35.000 --> 00:00:40.000
Để làm điều đó, chúng tôi muốn một cách tiêu chuẩn hóa để truy cập siêu dữ liệu.

00:00:40.000 --> 00:00:51.000
Đây là lý do tại sao, trong Xcode 13, chúng tôi đang giới thiệu các bộ sưu tập Gói, danh sách các gói được sắp xếp có thể được chia sẻ với những người khác và thúc đẩy trải nghiệm hoàn toàn mới và được cải thiện để thêm các gói vào các dự án của bạn.

00:00:51.000 --> 00:01:07.000
Các nhà giáo dục và những người có ảnh hưởng cộng đồng có thể xuất bản các bộ sưu tập gói đi cùng với tài liệu khóa học hoặc bài đăng trên blog, loại bỏ các rào cản khi sử dụng gói lần đầu tiên và gánh nặng quyết định gói nào hữu ích cho một nhiệm vụ cụ thể.

00:01:07.000 --> 00:01:16.000
Các doanh nghiệp có thể sử dụng các bộ sưu tập để thu hẹp không gian quyết định cho các nhóm kỹ thuật nội bộ của họ, tập trung họ vào một bộ các gói đã được kiểm tra đáng tin cậy.

00:01:16.000 --> 00:01:19.000
Đầu tiên, một cái nhìn tổng quan nhanh về cuộc nói chuyện.

00:01:19.000 --> 00:01:25.000
Chúng tôi bắt đầu với một bản demo, sau đó xem cách sử dụng các bộ sưu tập chi tiết hơn.

00:01:25.000 --> 00:01:31.000
Chúng tôi sẽ đi sâu vào việc tạo ra các bộ sưu tập của riêng mình và kết thúc với một bản demo khác.

00:01:31.000 --> 00:01:37.000
Tôi đã tìm thấy một bài đăng trên blog về Swift Numerics và tôi rất háo hức được dùng thử nó trong Xcode.

00:01:37.000 --> 00:01:47.000
Tôi sẽ sao chép ví dụ đầu tiên từ bài đăng và chuyển sang Xcode để dán mã vào.

00:01:47.000 --> 00:01:52.000
Chúng tôi đang gặp lỗi xây dựng vì mô-đun Numerics không có trong dự án của tôi.

00:01:52.000 --> 00:02:05.000
Trước đây, tôi sẽ cần quay lại bài đăng để tìm ra cách thêm gói Numerics vào dự án của mình, nhưng trong Xcode 13, vì chúng tôi đang cung cấp một bộ sưu tập mặc định các gói mã nguồn mở, hãy sửa nó ngay tại đây trong trình chỉnh sửa.

00:02:05.000 --> 00:02:15.000
Bây giờ, nếu tôi nhấp vào "Tìm kiếm", tôi sẽ được đưa đến quy trình làm việc "Thêm gói" mới, với các số được chọn trước.

00:02:15.000 --> 00:02:25.000
Chúng tôi có rất nhiều thông tin về gói ngay tại đây trong Xcode, chẳng hạn như phiên bản mới nhất, tác giả, giấy phép, cũng như README.

00:02:25.000 --> 00:02:33.000
Chúng tôi cũng có thể chuyển sang tab Lịch sử phát hành để xem ghi chú phát hành của tất cả các phiên bản có sẵn.

00:02:33.000 --> 00:02:39.000
Để thêm sự phụ thuộc, chúng ta có thể chọn các yêu cầu phiên bản và dự án để thêm vào.

00:02:39.000 --> 00:02:45.000
Tôi sẽ chấp nhận mặc định cho cả hai và nhấp vào "Thêm gói".

00:02:45.000 --> 00:02:52.000
Bây giờ, gói sẽ được kiểm tra và Xcode cung cấp tuyển chọn các sản phẩm từ phiên bản đã cho.

00:02:52.000 --> 00:02:57.000
Tôi sẽ chọn sản phẩm Numerics và thêm nó vào một mục tiêu của tôi.

00:02:57.000 --> 00:03:02.000
Để hoàn tất, tôi sẽ nhấp vào "Thêm gói" một lần nữa.

00:03:02.000 --> 00:03:07.000
Nếu chúng ta nhìn vào trình điều hướng dự án, chúng ta sẽ thấy sự phụ thuộc mới ở đó.

00:03:07.000 --> 00:03:12.000
Và nếu chúng tôi thực hiện một bản dựng, chúng tôi thấy rằng dự án được xây dựng thành công ngay bây giờ.

00:03:12.000 --> 00:03:17.000
Chúng ta hãy xem nhanh những thay đổi chính xác mà quy trình làm việc "Thêm gói" đã thực hiện cho dự án.

00:03:17.000 --> 00:03:26.000
Để làm được điều đó, chúng tôi sẽ mở trình chỉnh sửa dự án, chọn dự án và mở tab Swift Packages.

00:03:26.000 --> 00:03:31.000
Ở đây, chúng ta có thể thấy sự phụ thuộc của chúng ta và quy tắc phiên bản.

00:03:31.000 --> 00:03:41.000
Bây giờ, nếu chúng ta mở trình chỉnh sửa mục tiêu để xem xét giai đoạn Khung, Thư viện và Nội dung Nhúng, chúng ta có thể thấy sản phẩm Số đang được liên kết tại đây.

00:03:41.000 --> 00:03:45.000
Đây là quy trình làm việc "Thêm gói" mới trong Xcode.

00:03:45.000 --> 00:03:48.000
Bây giờ, làm thế nào Xcode biết về gói Numerics?

00:03:48.000 --> 00:03:59.000
Xcode đi kèm với một bộ sưu tập mặc định được cấu hình sẵn, chứa một tập hợp các gói mã nguồn mở do Apple xuất bản, chẳng hạn như Swift Argument Parser và Swift NIO.

00:03:59.000 --> 00:04:09.000
Điều này làm cho việc sử dụng các dự án này trong Xcode liền mạch hơn nhiều bằng cách cung cấp tự động hoàn thành tên mô-đun và sửa lỗi để thêm các gói bằng cách sử dụng thông tin từ bộ sưu tập.

00:04:09.000 --> 00:04:13.000
Bộ sưu tập mặc định này đang được cập nhật thường xuyên, vì vậy danh sách chính xác các gói có thể thay đổi.

00:04:13.000 --> 00:04:19.000
Bây giờ, tôi sẽ để đồng nghiệp của tôi, Francesco, cho bạn biết thêm về việc sử dụng các bộ sưu tập.

00:04:19.000 --> 00:04:20.000
Cảm ơn bạn, Boris.

00:04:20.000 --> 00:04:25.000
Việc nhập gói hàng đó trực tiếp thông qua báo cáo nhập khẩu thật dễ dàng.

00:04:25.000 --> 00:04:28.000
Chúng ta hãy xem xét kỹ hơn bộ sưu tập là gì.

00:04:28.000 --> 00:04:32.000
Bộ sưu tập là một tệp JSON, thường được tìm nạp qua HTTPS.

00:04:32.000 --> 00:04:41.000
Một bộ sưu tập chứa danh sách các URL gói và siêu dữ liệu của chúng, bao gồm tóm tắt, phiên bản và các sản phẩm đã bán.

00:04:41.000 --> 00:04:45.000
Điều này cho phép thông tin phong phú được hiển thị trong Xcode.

00:04:45.000 --> 00:04:48.000
Đây là một đoạn của JSON của một bộ sưu tập.

00:04:48.000 --> 00:04:54.000
Bạn thường sẽ không xem xét chi tiết điều này, nhưng chúng ta hãy xem xét một vài lĩnh vực quan trọng.

00:04:54.000 --> 00:05:06.000
Chúng ta có thể thấy URL của gói, URL của README, bản tóm tắt, cũng như thông tin chi tiết hơn về các phiên bản của gói.

00:05:06.000 --> 00:05:15.000
Trình quản lý gói Swift, mà ngày nay chúng ta thường viết tắt là "SwiftPM", quản lý cơ sở dữ liệu cho các bộ sưu tập bộ nhớ đệm trên máy Mac của bạn.

00:05:15.000 --> 00:05:24.000
Điều này có nghĩa là bạn có thể truy cập các bộ sưu tập đã định cấu hình của mình từ bất kỳ công cụ nào sử dụng libSwiftPM, không chỉ Xcode, bao gồm SwiftPM trên dòng lệnh.

00:05:24.000 --> 00:05:28.000
SwiftPM là một phần của dự án mã nguồn mở Swift lớn hơn.

00:05:28.000 --> 00:05:35.000
Trang web swift.org là một nơi tuyệt vời, nơi bạn có thể tìm hiểu về cộng đồng và quá trình đóng góp.

00:05:35.000 --> 00:05:41.000
SwiftPM cung cấp chức năng của nó như một thư viện, bao gồm hỗ trợ cho các bộ sưu tập.

00:05:41.000 --> 00:05:46.000
Chúng tôi gọi thư viện là libSwiftPM, và nó cũng cung cấp năng lượng cho các gói trong Xcode.

00:05:46.000 --> 00:05:49.000
Boris và tôi đang tập hợp một bài đăng trên blog cho trang web của chúng tôi.

00:05:49.000 --> 00:05:57.000
Chúng tôi sẽ tạo một bộ sưu tập với các gói chúng tôi đang sử dụng trong bài đăng, để độc giả của chúng tôi có thể theo dõi.

00:05:57.000 --> 00:06:00.000
Cảm ơn, Francesco.

00:06:00.000 --> 00:06:05.000
Chúng tôi muốn sử dụng Alamofire để thực hiện các yêu cầu mạng, vì vậy chúng tôi thêm nó vào bộ sưu tập.

00:06:05.000 --> 00:06:11.000
Ngoài ra, chúng tôi cũng muốn giữ cho định dạng dự án của mình nhất quán, vì vậy chúng tôi cũng sẽ sử dụng định dạng nhanh.

00:06:11.000 --> 00:06:17.000
Bây giờ chúng ta đã biết những gói nào chúng ta muốn có trong bộ sưu tập, hãy tiếp tục và tạo nó.

00:06:17.000 --> 00:06:21.000
Để tạo một bộ sưu tập, chúng tôi đã xuất bản một công cụ trên GitHub.

00:06:21.000 --> 00:06:25.000
Bạn có thể sao chép và xây dựng cái này cục bộ nếu bạn muốn xuất bản bộ sưu tập của riêng mình.

00:06:25.000 --> 00:06:35.000
Trình tạo đơn giản hóa quá trình tạo bộ sưu tập bằng cách thu thập thông tin tự động và luôn tạo ra đầu ra theo phiên bản định dạng mới nhất.

00:06:35.000 --> 00:06:47.000
Công cụ lấy một tệp JSON đầu vào, là danh sách các URL gói với siêu dữ liệu tùy chọn và tạo ra một tệp đầu ra sẽ được chia sẻ với những người khác.

00:06:47.000 --> 00:06:52.000
Ngoài ra còn có một công cụ riêng biệt để ký các bộ sưu tập là một phần của cùng một dự án GitHub.

00:06:52.000 --> 00:06:59.000
Ký vào bộ sưu tập của bạn là tùy chọn, nhưng cho phép xác minh tác giả và bảo vệ tính toàn vẹn của bộ sưu tập.

00:06:59.000 --> 00:07:03.000
Đây là định dạng JSON đầu vào trông như thế nào.

00:07:03.000 --> 00:07:09.000
Có một chút siêu dữ liệu cho toàn bộ bộ sưu tập, chẳng hạn như tổng quan, từ khóa và thông tin tác giả.

00:07:09.000 --> 00:07:13.000
Điều này sẽ được hiển thị khi thêm một bộ sưu tập trong Xcode.

00:07:13.000 --> 00:07:18.000
Và quan trọng nhất, một danh sách các URL gói.

00:07:18.000 --> 00:07:27.000
Công cụ sẽ tự động tìm nạp thông tin về từng gói, nhưng cũng có thể cung cấp siêu dữ liệu bổ sung cho mỗi gói khi tạo bộ sưu tập.

00:07:27.000 --> 00:07:45.000
Điều này bao gồm siêu dữ liệu có thể cải thiện kết quả tìm kiếm, chẳng hạn như tóm tắt tùy chỉnh hoặc từ khóa, hạn chế các phiên bản mà bộ sưu tập sẽ đại diện, các sản phẩm bị loại trừ, có thể hữu ích để hướng dẫn người dùng đến sản phẩm phù hợp nhất mà gói hàng và chỉ định URL README.

00:07:45.000 --> 00:07:50.000
Phân phối một bộ sưu tập dựa trên tệp JSON đầu vào là một quá trình gồm ba bước.

00:07:50.000 --> 00:07:55.000
Đầu tiên, chúng tôi sử dụng trình tạo để tạo tệp JSON đầu ra.

00:07:55.000 --> 00:08:01.000
Sau đó, chúng tôi lấy đầu ra và khóa ký cộng với chứng chỉ để tạo một bộ sưu tập đã ký bằng công cụ ký.

00:08:01.000 --> 00:08:08.000
Và cuối cùng, chúng tôi có thể phân phối bộ sưu tập đã ký, bằng cách chia sẻ trực tiếp hoặc bằng cách đưa nó lên máy chủ web.

00:08:08.000 --> 00:08:15.000
Bạn có thể ký các bộ sưu tập với bất kỳ chứng chỉ ký mã hợp lệ, không hết hạn, không bị thu hồi nào.

00:08:15.000 --> 00:08:20.000
Để biết thêm thông tin về các yêu cầu, hãy xem tài liệu SwiftPM.

00:08:20.000 --> 00:08:27.000
Nếu bạn không muốn ký vào bộ sưu tập của mình, hãy tiến hành phân phối sau khi sử dụng công cụ tạo.

00:08:27.000 --> 00:08:33.000
Nhưng đối với bộ sưu tập này mà Francesco và tôi đang làm việc, chúng tôi sẽ tiếp tục và ký nó.

00:08:33.000 --> 00:08:40.000
Tôi đã chuẩn bị các tệp để ký, cũng như JSON đầu vào mà chúng ta đã thấy trên các trang trình bày trước đó.

00:08:40.000 --> 00:08:44.000
Tôi cũng đã tải xuống và xây dựng trình tạo và công cụ ký tên.

00:08:44.000 --> 00:09:00.000
Chúng tôi bắt đầu bằng cách chạy `package-collection-generate` với JSON đầu vào, cũng như đường dẫn đầu ra.

00:09:00.000 --> 00:09:14.000
Chúng tôi đang chuyển `--verbose` để có thêm đầu ra thông tin và chúng tôi đang chuyển mã thông báo xác thực GitHub để truy vấn API GitHub để có thêm siêu dữ liệu.

00:09:14.000 --> 00:09:20.000
Chúng tôi thấy rằng lệnh kiểm tra các phiên bản khác nhau của các gói để thu thập thông tin.

00:09:20.000 --> 00:09:22.000
Việc này sẽ mất vài giây.

00:09:22.000 --> 00:09:26.000
Và sau đó, nó đã hoàn thành và đã tạo ra một tệp đầu ra.

00:09:26.000 --> 00:09:29.000
Tiếp theo, chúng tôi muốn ký vào bộ sưu tập.

00:09:29.000 --> 00:09:45.000
Chúng tôi chạy lệnh `package-collection-sign`, chuyển tệp JSON mà chúng tôi vừa tạo, chỉ định đường dẫn đầu ra.

00:09:45.000 --> 00:09:56.000
Chúng tôi cũng chuyển khóa và chứng chỉ mà chúng tôi đã xuất trước đó.

00:09:56.000 --> 00:10:00.000
Tôi đã tải bộ sưu tập đã tạo lên một máy chủ.

00:10:00.000 --> 00:10:03.000
Hãy xem cách tương tác với nó bằng cách sử dụng dòng lệnh.

00:10:03.000 --> 00:10:08.000
SwiftPM mang đến một lệnh con được gọi là `package-collection` để làm như vậy.

00:10:08.000 --> 00:10:22.000
Để bắt đầu, chúng tôi thêm bộ sưu tập vào danh sách các bộ sưu tập được cấu hình của mình, điều này cũng sẽ làm cho nó có sẵn trong Xcode.

00:10:22.000 --> 00:10:24.000
Cái này lấy bộ sưu tập và thêm nó.

00:10:24.000 --> 00:10:29.000
Tất nhiên, bạn cũng có thể làm điều này trong giao diện người dùng của Xcode, mà Francesco sẽ chỉ cho bạn sau.

00:10:29.000 --> 00:10:40.000
Tiếp theo, chúng ta hãy xem nội dung, sử dụng `mô tả bộ sưu tập gói nhanh chóng`.

00:10:40.000 --> 00:10:45.000
Đầu tiên, có siêu dữ liệu mà chúng tôi đã chỉ định trước đó.

00:10:45.000 --> 00:10:50.000
Chúng tôi nhận được danh sách các gói hàng trong bộ sưu tập, và cuối cùng, thông tin về chữ ký.

00:10:50.000 --> 00:10:56.000
Điều này cho thấy ai đã ký vào bộ sưu tập, cũng như chữ ký đã được SwiftPM xác minh.

00:10:56.000 --> 00:11:05.000
Điều này có thể được sử dụng để xác định xem bộ sưu tập đã cho có được tạo bởi người mà bạn mong đợi hay không và cũng bảo vệ tính toàn vẹn của bộ sưu tập khỏi bị sửa đổi.

00:11:05.000 --> 00:11:11.000
Tiếp theo, chúng ta hãy xem xét một gói riêng lẻ, như định dạng nhanh.

00:11:11.000 --> 00:11:16.000
Đối với điều này, chúng tôi sử dụng lại lệnh mô tả, lần này là với URL gói.

00:11:16.000 --> 00:11:35.000
Trong đầu ra của lệnh này, chúng tôi thấy thông tin về toàn bộ gói, chẳng hạn như các phiên bản có sẵn, tác giả, ngôi sao và URL README, cũng như chi tiết về phiên bản mới nhất, bao gồm phiên bản công cụ Swift đang được sử dụng, cũng như các mô-đun và sản phẩm.

00:11:35.000 --> 00:11:45.000
Bây giờ chúng tôi đã xác minh rằng bộ sưu tập mới của chúng tôi có vẻ tốt, tôi sẽ gửi nó cho đồng nghiệp của tôi, Francesco, người sẽ cho bạn thấy thêm một chút về trải nghiệm Xcode bằng cách kết hợp ứng dụng demo của chúng tôi.

00:11:45.000 --> 00:11:47.000
Cảm ơn bạn, Boris.

00:11:47.000 --> 00:11:51.000
Tôi vừa tạo một dự án mới cho ứng dụng demo của chúng tôi.

00:11:51.000 --> 00:12:01.000
Tôi có thể thêm bộ sưu tập mới của chúng tôi vào Xcode bằng cách điều hướng đến Tệp&gt; Thêm Gói và nhấp vào nút + để thêm bộ sưu tập.

00:12:01.000 --> 00:12:13.000
Bây giờ, tôi có thể dán URL của bộ sưu tập và sau khi nhấp vào "Tải", Xcode cho tôi biết nó chứa bao nhiêu gói và nó được cập nhật lần cuối khi nào.

00:12:13.000 --> 00:12:20.000
Sau khi thêm bộ sưu tập, chúng ta có thể thấy các gói của nó: Alamofire và định dạng nhanh.

00:12:20.000 --> 00:12:27.000
Tôi muốn sử dụng API mạng từ Alamofire, vì vậy tôi sẽ thêm gói vào dự án của mình.

00:12:27.000 --> 00:12:35.000
Tôi sẽ chọn sản phẩm Alamofire và thêm nó vào mục tiêu duy nhất của mình bằng cách nhấp vào "Thêm gói".

00:12:35.000 --> 00:12:53.000
Chúng tôi thấy rằng Xcode đã thêm sự phụ thuộc, vì vậy bây giờ chúng tôi có thể quay lại tệp nguồn của mình và bắt đầu viết một số mã.

00:12:53.000 --> 00:13:01.000
Bây giờ tôi đã tải xuống README bằng Alamofire, tôi muốn phân tích cú pháp Markdown bằng cách sử dụng gói swift-cmark.

00:13:01.000 --> 00:13:05.000
Hãy quay lại bảng điều khiển "Thêm gói".

00:13:05.000 --> 00:13:12.000
Mới trong Xcode 13, chúng tôi đã thêm quyền truy cập nhanh vào các tùy chọn gói thông qua menu ngữ cảnh trên trình điều hướng dự án.

00:13:12.000 --> 00:13:18.000
Từ đây, tôi có thể mở lại bảng điều khiển bằng cách chọn "Thêm gói".

00:13:18.000 --> 00:13:27.000
Tôi không có swift-cmark trong bất kỳ bộ sưu tập nào của mình và tôi vẫn có thể thêm nó bằng cách dán URL của nó trực tiếp vào thanh tìm kiếm.

00:13:27.000 --> 00:13:36.000
Tôi sẽ chọn nhánh chính của swift-cmark và thêm gói vào dự án của mình.

00:13:36.000 --> 00:13:41.000
Bây giờ tôi đã thêm swift-cmark, chúng ta có thể hoàn thành ứng dụng cho bài đăng trên blog của mình.

00:13:41.000 --> 00:13:51.000
Giờ đây, các gói dễ sử dụng từ khắp nơi trên internet và tập trung vào điều quan trọng nhất đối với chúng tôi: viết ứng dụng của chúng tôi.

00:13:51.000 --> 00:13:56.000
Bộ sưu tập Swift Package trong Xcode 13 giúp khám phá các gói mới.

00:13:56.000 --> 00:14:06.000
Tạo bộ sưu tập của riêng bạn cho phép chia sẻ danh sách các gói được sắp xếp, giúp hợp lý hóa việc thêm chúng vào các dự án của bạn.

00:14:06.000 --> 00:14:18.000
Để tìm hiểu thêm về các gói nói chung, tôi muốn giới thiệu các phiên WWDC19, "Áp dụng các gói Swift trong Xcode" và "Tạo các gói Swift".

00:14:18.000 --> 00:14:20.000
Cảm ơn bạn đã xem.

00:14:20.000 --> 23:59:59.000
[Nhạc lạc quan].

