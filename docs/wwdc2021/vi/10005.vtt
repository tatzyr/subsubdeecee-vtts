WEBVTT

00:00:01.000 --> 00:00:10.000
Xin chào.

00:00:10.000 --> 00:00:16.000
Tên tôi là Yann, và tôi muốn nói với bạn về một cách mới để kết nối các thiết bị Bluetooth của bạn với Apple Watch.

00:00:16.000 --> 00:00:20.000
Đầu tiên, tôi sẽ xem xét cách hoạt động của Core Bluetooth trên watchOS 7.

00:00:20.000 --> 00:00:25.000
Sau đó tôi sẽ nói về một tính năng mới thú vị trong watchOS 8.

00:00:25.000 --> 00:00:31.000
Và tôi sẽ thảo luận về những cách tốt nhất để thiết kế phụ kiện và ứng dụng của bạn để hoạt động với Apple Watch.

00:00:31.000 --> 00:00:34.000
Hãy bắt đầu với cách Core Bluetooth hoạt động ngay hôm nay.

00:00:34.000 --> 00:00:41.000
Bạn chỉ có thể kết nối với các thiết bị Bluetooth trong khi ứng dụng của bạn ở phía trước hoặc trong phiên nền.

00:00:41.000 --> 00:00:46.000
Điều này thật tuyệt vời khi một người muốn tập trung vào ứng dụng của bạn để lấy thông tin từ phụ kiện của họ.

00:00:46.000 --> 00:00:52.000
Nhưng nếu bạn muốn có một sự phức tạp với thông tin từ phụ kiện của mình thì sao?

00:00:52.000 --> 00:00:57.000
Hiện tại, sự phức tạp không thể được cập nhật trừ khi một người mở ứng dụng của bạn.

00:00:57.000 --> 00:01:03.000
Bây giờ trong watchOS 8, bạn có thể kết nối phụ kiện Bluetooth của mình trong khi Làm mới ứng dụng nền.

00:01:03.000 --> 00:01:11.000
Điều này cho phép bạn cập nhật các biến chứng của mình với thông tin từ phụ kiện của bạn hoặc gửi thông báo cục bộ nếu pin sắp hết.

00:01:11.000 --> 00:01:22.000
Với cảm biến nhiệt độ ví dụ của tôi, bây giờ tôi có thể cập nhật nhiệt độ trong một biến chứng, vì vậy tôi có thể nhìn thấy nó bất cứ khi nào tôi liếc nhìn đồng hồ của mình.

00:01:22.000 --> 00:01:32.000
Chúng tôi đang sử dụng cảm biến nhiệt độ trong ví dụ của mình, nhưng nó có thể là bất kỳ phụ kiện nào mà ai đó muốn xem nhanh thông tin.

00:01:32.000 --> 00:01:42.000
Để bắt đầu sử dụng Bluetooth trong quá trình Làm mới ứng dụng nền, chỉ cần thêm bluetooth-central vào UIBackgroundModes trong Info.plist của bạn.

00:01:42.000 --> 00:01:50.000
Điều này cũng có thể xuất hiện dưới dạng "Chế độ nền bắt buộc" và "Ứng dụng giao tiếp bằng CoreBluetooth."

00:01:50.000 --> 00:01:54.000
Đây là bảng hiển thị sự khác biệt giữa các nền tảng.

00:01:54.000 --> 00:01:59.000
Đây là những cấu hình được hỗ trợ hiện tại cho Bluetooth Low Energy.

00:01:59.000 --> 00:02:04.000
Hãy đi sâu vào cách phụ kiện của bạn giao tiếp với Apple Watch.

00:02:04.000 --> 00:02:11.000
Giả sử người dùng đã ghép nối với phụ kiện của bạn và họ mở ứng dụng Đồng hồ của bạn.

00:02:11.000 --> 00:02:19.000
Ứng dụng của bạn cố gắng kết nối với phụ kiện của bạn và ngay khi thấy quảng cáo, kết nối Bluetooth LE sẽ được thiết lập.

00:02:19.000 --> 00:02:24.000
Khi người dùng thoát khỏi ứng dụng watchOS của bạn, kết nối Bluetooth sẽ kết thúc.

00:02:24.000 --> 00:02:30.000
Kết nối Bluetooth sẽ không khả dụng cho đến lần tiếp theo ứng dụng watchOS của bạn có sẵn thời gian chạy.

00:02:30.000 --> 00:02:36.000
Hãy phân tích những gì xảy ra trong quá trình làm mới ứng dụng nền tiếp theo của bạn trên watchOS 8.

00:02:36.000 --> 00:02:45.000
Ứng dụng của bạn bắt đầu kết nối với một thiết bị ngoại vi đã biết và lần sau khi nhận được quảng cáo, Apple Watch sẽ kết nối với phụ kiện của bạn.

00:02:45.000 --> 00:02:52.000
Ngay sau khi bạn truy xuất xong dữ liệu, bạn có thể chấm dứt kết nối Bluetooth và xử lý dữ liệu.

00:02:52.000 --> 00:03:03.000
Làm mới ứng dụng nền có thể xảy ra bất cứ lúc nào, vì vậy phụ kiện của bạn nên quảng cáo thường xuyên nhất có thể khi nó có bản cập nhật quan trọng để hiển thị trên Apple Watch.

00:03:03.000 --> 00:03:08.000
Bây giờ, giả sử phụ kiện của bạn quảng cáo rất hiếm khi để tiết kiệm năng lượng.

00:03:08.000 --> 00:03:15.000
Có thể sẽ không nhận được quảng cáo nào trong quá trình Làm mới ứng dụng nền và sẽ không có kết nối nào xảy ra.

00:03:15.000 --> 00:03:25.000
Làm mới ứng dụng nền không được đảm bảo xảy ra vào một thời điểm cụ thể, vì vậy phụ kiện của bạn phải quảng cáo thường xuyên bất cứ khi nào nó có các bản cập nhật quan trọng.

00:03:25.000 --> 00:03:29.000
Một chiến lược khả thi là đệm dữ liệu cảm biến trên phụ kiện của bạn.

00:03:29.000 --> 00:03:37.000
Khi nó gần đến giới hạn bộ đệm, hãy tăng tỷ lệ quảng cáo của nó để tăng cơ hội kết nối lại với Apple Watch.

00:03:37.000 --> 00:03:43.000
Như một hướng dẫn, bạn nên quảng cáo ít nhất hai giây một lần trong điều kiện RF lý tưởng.

00:03:43.000 --> 00:03:52.000
Nếu bạn mong đợi thiết bị của mình hoạt động trong điều kiện RF khó khăn hơn, phụ kiện của bạn nên quảng cáo thường xuyên hơn để tăng cơ hội kết nối lại.

00:03:52.000 --> 00:04:02.000
Hãy xem ứng dụng của bạn sẽ tương tác với Core Bluetooth như thế nào và watchOS sẽ tương tác với phụ kiện Bluetooth của bạn như thế nào.

00:04:02.000 --> 00:04:04.000
Đây là một dòng chảy biểu đồ thời gian.

00:04:04.000 --> 00:04:08.000
Thời gian trôi qua từ trên xuống dưới.

00:04:08.000 --> 00:04:13.000
Hãy bắt đầu với những gì xảy ra khi ứng dụng của bạn ở phía trước.

00:04:13.000 --> 00:04:15.000
Phụ kiện của bạn là quảng cáo.

00:04:15.000 --> 00:04:19.000
Bạn có thể quét một thiết bị mới để phát hiện phụ kiện Bluetooth của mình.

00:04:19.000 --> 00:04:25.000
Khi thiết bị của bạn đã được phát hiện, bạn có thể bắt đầu kết nối với nó.

00:04:25.000 --> 00:04:30.000
Ngay khi Apple Watch nhận được quảng cáo, nó sẽ kết nối.

00:04:30.000 --> 00:04:39.000
Khi bạn đã hoàn tất kết nối Bluetooth, bạn có thể gọi cancelPeripheralConnection, điều này sẽ ngắt kết nối thiết bị Bluetooth của bạn.

00:04:39.000 --> 00:04:47.000
Sau đó, tại một thời điểm sau đó, khi màn hình Apple Watch tắt, ứng dụng watchOS của bạn sẽ bị tạm ngưng.

00:04:47.000 --> 00:04:52.000
Bây giờ, chúng ta hãy xem điều gì sẽ xảy ra trong lần Làm mới ứng dụng nền tiếp theo.

00:04:52.000 --> 00:04:56.000
Lưu ý rằng thời gian trôi qua không phải để mở rộng quy mô.

00:04:56.000 --> 00:05:02.000
Nếu ứng dụng của bạn cần kết nối lại với phụ kiện Bluetooth, nó có thể bắt đầu kết nối.

00:05:02.000 --> 00:05:04.000
Ở đây kết nối được thiết lập.

00:05:04.000 --> 00:05:12.000
Như đã đề cập trước đây, chúng tôi thực sự khuyên bạn chỉ nên kết nối với phụ kiện của mình trong khoảng thời gian bạn cần.

00:05:12.000 --> 00:05:18.000
Bạn nên truy xuất dữ liệu bạn cần và sau đó yêu cầu ngắt kết nối trong quá trình Làm mới ứng dụng nền.

00:05:18.000 --> 00:05:26.000
Trong trường hợp này, việc truyền dữ liệu hoàn tất và ứng dụng hủy kết nối ngoại vi.

00:05:26.000 --> 00:05:28.000
Hãy xem xét một luồng người dùng tiềm năng khác.

00:05:28.000 --> 00:05:37.000
Trong cái này, Phụ kiện Bluetooth không ở gần Apple Watch hoặc không quảng cáo trong quá trình Làm mới ứng dụng nền.

00:05:37.000 --> 00:05:42.000
Đây là cách bạn nên quản lý điều này trong giai đoạn Làm mới ứng dụng nền.

00:05:42.000 --> 00:05:48.000
Đầu tiên, bạn sẽ kết nối với một thiết bị ngoại vi, nhưng không có quảng cáo.

00:05:48.000 --> 00:05:53.000
Khi trình xử lý hết hạn được gọi, bạn nên yêu cầu hủy kết nối.

00:05:53.000 --> 00:06:01.000
Bằng cách này, bạn sẽ có một bảng xếp hạng sạch sẽ và có thể yêu cầu kết nối lại khi bắt đầu Làm mới ứng dụng nền tiếp theo.

00:06:01.000 --> 00:06:09.000
Bạn cũng nên hủy kết nối trước khi trình xử lý hết hạn được gọi để tiết kiệm pin.

00:06:09.000 --> 00:06:16.000
Nếu bạn cần kết nối lại ở lần Làm mới ứng dụng nền tiếp theo, bạn có thể phát hành lại connectPeripheral.

00:06:16.000 --> 00:06:22.000
Ngay khi Apple Watch nhìn thấy quảng cáo, nó sẽ kết nối với phụ kiện của bạn.

00:06:22.000 --> 00:06:27.000
Tại thời điểm này, bạn có thể tìm nạp và tải xuống tất cả dữ liệu bạn cần.

00:06:27.000 --> 00:06:32.000
Sau đó, bạn có thể ngắt kết nối ngay khi kết nối xong.

00:06:32.000 --> 00:06:39.000
Hãy xem xét quy trình cuối cùng, nơi chúng tôi thấy điều gì sẽ xảy ra nếu bạn không ngắt kết nối trong quá trình Làm mới ứng dụng nền.

00:06:39.000 --> 00:06:41.000
Bắt đầu một kết nối.

00:06:41.000 --> 00:06:46.000
Ngay khi Apple Watch nhìn thấy quảng cáo, nó sẽ thiết lập kết nối.

00:06:46.000 --> 00:06:53.000
Ở đây, giả sử ứng dụng của bạn không có thời gian để truy xuất tất cả dữ liệu trước khi Làm mới ứng dụng nền hết hạn.

00:06:53.000 --> 00:07:02.000
Trong trường hợp này, Core Bluetooth sẽ tự động chấm dứt kết nối vào cuối lần Làm mới ứng dụng nền tiếp theo.

00:07:02.000 --> 00:07:08.000
Tại lần Làm mới ứng dụng nền tiếp theo, ứng dụng của bạn sẽ nhận được sự kiện didDisconnectPeripheral.

00:07:08.000 --> 00:07:17.000
Tại thời điểm này, nếu ứng dụng của bạn cần, nó có thể bắt đầu kết nối Bluetooth hoặc có thể đợi cho đến lần Làm mới ứng dụng nền tiếp theo.

00:07:17.000 --> 00:07:23.000
Chúng tôi thực sự khuyên bạn chỉ nên kết nối với phụ kiện của mình trong khoảng thời gian cần thiết.

00:07:23.000 --> 00:07:30.000
Ứng dụng của bạn sẽ yêu cầu ngắt kết nối trong quá trình Làm mới ứng dụng nền.

00:07:30.000 --> 00:07:34.000
Chúng ta hãy xem xét kỹ hơn mã để thực hiện điều này.

00:07:34.000 --> 00:07:41.000
Khi ai đó khởi chạy ứng dụng của bạn ở phía trước, nó có thể khám phá thiết bị ngoại vi và kết nối với họ.

00:07:41.000 --> 00:07:48.000
Phương thức đại diện didDiscoverPeripheral được gọi khi phát hiện quảng cáo.

00:07:48.000 --> 00:07:53.000
Nếu bạn đã từng sử dụng CoreBluetooth trong quá khứ, điều này thật quen thuộc.

00:07:53.000 --> 00:07:58.000
Bây giờ hãy xem những gì xảy ra trong quá trình Làm mới ứng dụng nền.

00:07:58.000 --> 00:08:02.000
Phương thức đại diện handleBackgroundTasks được gọi.

00:08:02.000 --> 00:08:09.000
Bạn có thể bắt đầu bất kỳ công việc nền nào của mình và trong trường hợp của chúng tôi, chúng tôi muốn kết nối với thiết bị ngoại vi Bluetooth của mình.

00:08:09.000 --> 00:08:18.000
Trong quá trình Làm mới ứng dụng nền, ngay trước khi chấm dứt, bạn cũng nhận được thông báo rằng Làm mới ứng dụng nền sắp kết thúc.

00:08:18.000 --> 00:08:21.000
Đây là một API mới trong watchOS 8.

00:08:21.000 --> 00:08:28.000
Bạn có thể sử dụng điều này để hủy bỏ bất kỳ công việc hiện có nào và chuẩn bị ứng dụng của mình chuyển sang chế độ tạm ngưng.

00:08:28.000 --> 00:08:31.000
Sau đó đặt nhiệm vụ như đã hoàn thành.

00:08:31.000 --> 00:08:39.000
Ngoài ra, khi có thời gian chạy nền, bạn cần xác định hành vi sẽ như thế nào khi thiết bị Bluetooth của bạn ngắt kết nối.

00:08:39.000 --> 00:08:50.000
Hãy nhớ rằng cuộc gọi lại didDisconnectPeripheral có thể xảy ra khi ở phía trước hoặc trong Làm mới ứng dụng nền và xảy ra trên tất cả các nền tảng.

00:08:50.000 --> 00:09:02.000
Ở đây, khi chúng tôi có didDisconnectPeripheral, chúng tôi gọi một hàm được gọi là didCompleteDisconnection nằm trong đại diện WatchKit Extension của bạn.

00:09:02.000 --> 00:09:07.000
Bằng cách này, hành vi của hàm này dành riêng cho watchOS.

00:09:07.000 --> 00:09:18.000
Chức năng mà CompleteDisconnection thực hiện là xác minh rằng chúng tôi đang ở trong Chế độ Làm mới Ứng dụng Nền và nếu có, chỉ ra rằng nhiệm vụ đã hoàn tất.

00:09:18.000 --> 00:09:22.000
Điều này sẽ chấm dứt Làm mới Ứng dụng Nền.

00:09:22.000 --> 00:09:26.000
Hãy nói về các phương pháp hay nhất để sử dụng Core Bluetooth trên Apple Watch.

00:09:26.000 --> 00:09:35.000
Để thiết lập thiết bị lần đầu, ứng dụng của bạn phải chạy ở phía trước, có nghĩa là người dùng đang tích cực sử dụng ứng dụng Đồng hồ của bạn.

00:09:35.000 --> 00:09:38.000
Quét các thiết bị ngoại vi mới tại thời điểm này.

00:09:38.000 --> 00:09:44.000
Khi ứng dụng của bạn phát hiện ra thiết bị ngoại vi, nó có thể thiết lập kết nối Bluetooth ban đầu.

00:09:44.000 --> 00:09:46.000
Nó cũng có thể ghép nối với thiết bị của bạn nếu cần.

00:09:46.000 --> 00:09:51.000
Khi ứng dụng của bạn thoát khỏi tiền cảnh, nó không thể quét thiết bị ngoại vi mới.

00:09:51.000 --> 00:09:57.000
Thay vào đó, nó nên yêu cầu kết nối với một thiết bị ngoại vi đã được phát hiện trước đó.

00:09:57.000 --> 00:10:00.000
Sau khi kết nối, hãy truy xuất dữ liệu cần thiết.

00:10:00.000 --> 00:10:06.000
Sau khi truy xuất xong dữ liệu, ứng dụng của bạn nên ngắt kết nối khỏi thiết bị ngoại vi để bảo quản pin.

00:10:06.000 --> 00:10:14.000
Nếu ứng dụng của bạn không ngắt kết nối trước khi Làm mới ứng dụng nền kết thúc, Core Bluetooth sẽ tự động ngắt kết nối khỏi phụ kiện của bạn.

00:10:14.000 --> 00:10:18.000
Bạn chỉ có thể kết nối lại khi ứng dụng của bạn có thời gian chạy.

00:10:18.000 --> 00:10:22.000
Tôi khuyến khích bạn tham gia phòng thí nghiệm của chúng tôi trong tuần này nếu bạn có bất kỳ câu hỏi nào về Core Bluetooth.

00:10:22.000 --> 00:10:24.000
Cảm ơn.

00:10:24.000 --> 23:59:59.000
[Âm nhạc].

