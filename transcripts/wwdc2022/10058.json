[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=0"
  },
  {
    "text": "Raj Ramamurthy: Hello, and welcome to \"SwiftUI on iPad: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=9"
  },
  {
    "text": "Organize your interface.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=12"
  },
  {
    "text": "I'm Raj, and I work on SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=14"
  },
  {
    "text": "iPadOS 16 has a number of updates to allow building more productive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=17"
  },
  {
    "text": "professional-grade apps with rich features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=22"
  },
  {
    "text": "In this session, I'm going to discuss a few of them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=25"
  },
  {
    "text": "and talk about organizing the interface of your SwiftUI apps to shine on iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=28"
  },
  {
    "text": "To start, I'll take you on a tour of lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=34"
  },
  {
    "text": "Then, I'll talk about the SwiftUI selection model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=38"
  },
  {
    "text": "and how to integrate selection with menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=41"
  },
  {
    "text": "Finally, I'll discuss how to structure your app's navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=44"
  },
  {
    "text": "for iPad by using split views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=47"
  },
  {
    "text": "But wait, there's more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=50"
  },
  {
    "text": "This is actually the first session of a two-part series. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=52"
  },
  {
    "text": "In the second part, my colleague Harry takes a tour ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=55"
  },
  {
    "text": "through toolbars, titles, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=58"
  },
  {
    "text": "Harry covers some really important additions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=61"
  },
  {
    "text": "that take SwiftUI iPad apps to the next level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=63"
  },
  {
    "text": "so please make sure to watch both sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=66"
  },
  {
    "text": "Let's get started with lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=70"
  },
  {
    "text": "I recently joined a few book clubs, but I'm running pretty behind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=74"
  },
  {
    "text": "It's so hard to find a quiet place to read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=78"
  },
  {
    "text": "So to help me focus on my reading, I've started working on an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=80"
  },
  {
    "text": "to find these mythical quiet places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=84"
  },
  {
    "text": "A quiet place is like a reading oasis, where the pages just fly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=86"
  },
  {
    "text": "And this app helps me track all the quiet places that I've found. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=90"
  },
  {
    "text": "I've built the app for iPhone, but I think it'd be a fun exercise ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=95"
  },
  {
    "text": "to update it for iPad to really take advantage of the larger display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=98"
  },
  {
    "text": "By making the app better for iPad, I'll also be further along ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=102"
  },
  {
    "text": "when I eventually bring it to the Mac as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=105"
  },
  {
    "text": "I won't be covering the Mac explicitly in this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=108"
  },
  {
    "text": "but many of the APIs shown also apply on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=110"
  },
  {
    "text": "Here is a list of all the quiet places that I've found so far. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=114"
  },
  {
    "text": "This list is a great place to start with updating the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=118"
  },
  {
    "text": "I've started working on the iPad version. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=122"
  },
  {
    "text": "It's not terrible, but it doesn't take advantage of the bigger screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=124"
  },
  {
    "text": "There's quite a bit of wasted space, and the information density is low. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=128"
  },
  {
    "text": "Thankfully, in iPadOS 16, there's a great solution ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=132"
  },
  {
    "text": "for these sorts of information dense scenarios: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=136"
  },
  {
    "text": "multi-column tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=139"
  },
  {
    "text": "Let me show you what they look like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=141"
  },
  {
    "text": "Here's the “All Places\" view after adopting the SwiftUI API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=144"
  },
  {
    "text": "for multi-column tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=147"
  },
  {
    "text": "I'll work up towards this screenshot over the next few minutes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=149"
  },
  {
    "text": "Multi-column tables in SwiftUI were first introduced in macOS Monterey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=153"
  },
  {
    "text": "and starting in iPadOS 16, the same table API is now available for iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=157"
  },
  {
    "text": "Just like on the Mac, tables on iPad support multiple columns and sorting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=162"
  },
  {
    "text": "Along with the introduction of tables on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=168"
  },
  {
    "text": "SwiftUI now supports sections in tables on iPad and the Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=170"
  },
  {
    "text": "The general guidance around tables from the previous session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=175"
  },
  {
    "text": "\"SwiftUI on the Mac: Build the fundamentals\" still applies on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=178"
  },
  {
    "text": "so I invite you to watch that session if you haven't already.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=183"
  },
  {
    "text": "Let's build up the table shown earlier, starting from the iPhone list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=187"
  },
  {
    "text": "Here's the code for the places list from earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=190"
  },
  {
    "text": "First, I'll switch from a list to a table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=195"
  },
  {
    "text": "Tables have a different construction from lists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=198"
  },
  {
    "text": "Instead of a view builder, tables accept a column builder.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=201"
  },
  {
    "text": "The first column I'll add is for the place's name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=206"
  },
  {
    "text": "The column requires a name for its header and a view builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=209"
  },
  {
    "text": "to produce the view for each element in the collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=212"
  },
  {
    "text": "I've also specified a value key path, which will be important later ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=215"
  },
  {
    "text": "when I add sorting to the table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=219"
  },
  {
    "text": "Notice how similar the view builder is to the list-based construction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=221"
  },
  {
    "text": "In fact, I can even reuse the PlaceCell type from before.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=225"
  },
  {
    "text": "In compact size classes, tables only show their first column, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=230"
  },
  {
    "text": "which means my table still looks great on iPhone and in slide over on iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=235"
  },
  {
    "text": "You might notice that this is similar to a list in appearance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=240"
  },
  {
    "text": "But I didn't just replace the table with a list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=243"
  },
  {
    "text": "because reusing the table allows for scroll position and selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=246"
  },
  {
    "text": "to be preserved when transitioning between size classes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=249"
  },
  {
    "text": "In general, make sure to use the first column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=252"
  },
  {
    "text": "for compact-specific appearance, and always make sure you're testing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=255"
  },
  {
    "text": "your iPad apps in a variety of environments, like slide over.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=258"
  },
  {
    "text": "Okay, moving on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=263"
  },
  {
    "text": "I'll add columns for the comfort and noise levels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=265"
  },
  {
    "text": "For columns with just textual content, TableColumn offers a convenience API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=268"
  },
  {
    "text": "that lets me omit the view builder when my value points to a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=272"
  },
  {
    "text": "And in this case, I know the comfort level isn't ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=276"
  },
  {
    "text": "going to need much room, so I've applied a fixed width.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=278"
  },
  {
    "text": "I can also add sorting to the table by using comparators. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=282"
  },
  {
    "text": "I'll create some state to store the comparators in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=285"
  },
  {
    "text": "The state here is an array because it represents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=288"
  },
  {
    "text": "all of the comparators for the table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=291"
  },
  {
    "text": "And setting the initial value to the name comparator ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=293"
  },
  {
    "text": "allows the table to appear sorted when it's first displayed.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=296"
  },
  {
    "text": "Next, I'll pass a binding to my state into the table to wire everything up.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=300"
  },
  {
    "text": "Because the columns each specify their value as a key path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=306"
  },
  {
    "text": "to a comparable field, they are sortable by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=309"
  },
  {
    "text": "And now the table is fully sortable by name, comfort level, and noise. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=312"
  },
  {
    "text": "Note that table doesn't handle the sorting on its own. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=318"
  },
  {
    "text": "That's up to me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=320"
  },
  {
    "text": "I can use the onChange modifier to sort the data when the sort order changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=322"
  },
  {
    "text": "All right, let's take it for a spin.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=327"
  },
  {
    "text": "The table looks great, showing all the places data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=330"
  },
  {
    "text": "and really taking advantage of the larger screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=333"
  },
  {
    "text": "Unlike on the Mac, tables on iPad don't scroll horizontally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=337"
  },
  {
    "text": "so it's important to limit the number of columns. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=340"
  },
  {
    "text": "This ensures that all of the columns can be shown at once. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=343"
  },
  {
    "text": "Each column shows its label in the header. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=347"
  },
  {
    "text": "And tapping on the label sorts that column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=349"
  },
  {
    "text": "I can even sort by noise level.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=352"
  },
  {
    "text": "And in slide over, the table collapses into a single column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=357"
  },
  {
    "text": "that represents all of the information in a more condensed format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=360"
  },
  {
    "text": "Now that I've updated the list into a table, let's dive into selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=363"
  },
  {
    "text": "In this section, I'll review the SwiftUI selection model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=367"
  },
  {
    "text": "and discuss integrating selection with menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=371"
  },
  {
    "text": "Along the way, I'm going to supercharge the places table with rich functionality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=374"
  },
  {
    "text": "But first, I'll talk about how selection works in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=378"
  },
  {
    "text": "SwiftUI includes a robust API for managing list and table selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=382"
  },
  {
    "text": "Here's a diagram with a list containing a few rows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=387"
  },
  {
    "text": "Each row has a tag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=390"
  },
  {
    "text": "These tags are unique values for each row that help the list manage selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=392"
  },
  {
    "text": "In this diagram, the tags are shown in green circles.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=397"
  },
  {
    "text": "Along with the tag, there's also some state that holds the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=401"
  },
  {
    "text": "This is the type that holds the tag values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=405"
  },
  {
    "text": "For example, with multiple selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=408"
  },
  {
    "text": "this is a set that holds the tags for each selected row. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=410"
  },
  {
    "text": "The job of the list is to coordinate between the tag in each row ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=414"
  },
  {
    "text": "and the selection state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=417"
  },
  {
    "text": "And it does this via its selection binding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=418"
  },
  {
    "text": "So when a row is selected, such as row number two here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=422"
  },
  {
    "text": "the list adds it to the set via the selection binding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=425"
  },
  {
    "text": "And similarly, if some other part of the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=429"
  },
  {
    "text": "programmatically changes the set, say to add three like shown here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=432"
  },
  {
    "text": "the list selects it because the selection binding changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=437"
  },
  {
    "text": "This general model is the same across iOS and macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=440"
  },
  {
    "text": "So there are two parts to selection: a tag and some state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=444"
  },
  {
    "text": "Next, I'd like to talk about where tags come from. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=449"
  },
  {
    "text": "A tag is just a value for a view in a selectable container ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=452"
  },
  {
    "text": "that is used to track whether that view is selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=456"
  },
  {
    "text": "In many cases, SwiftUI can automatically synthesize tags on your behalf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=460"
  },
  {
    "text": "Tags are similar to identifiers, but not quite the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=465"
  },
  {
    "text": "When using ForEach, SwiftUI will automatically derive the tag ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=469"
  },
  {
    "text": "for a view from its explicit identity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=472"
  },
  {
    "text": "And tables will use their row value's identifier as the selection tag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=475"
  },
  {
    "text": "In the places app, that means the place struct's identifier type will be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=480"
  },
  {
    "text": "For more information about explicit identity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=484"
  },
  {
    "text": "check out \"Demystify SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=487"
  },
  {
    "text": "To manually tag views, use the tag modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=491"
  },
  {
    "text": "This is what ForEach does under the hood. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=494"
  },
  {
    "text": "The tag modifier takes a Hashable value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=496"
  },
  {
    "text": "However, when using the tag modifier, be careful– ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=499"
  },
  {
    "text": "it's important that all of the views in a selectable container ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=502"
  },
  {
    "text": "share the same tag type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=505"
  },
  {
    "text": "Otherwise, SwiftUI might not know how to select the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=507"
  },
  {
    "text": "Note that if you use the ID modifier, it doesn't set the tag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=511"
  },
  {
    "text": "So that's an overview of tags. Let's bring back the diagram from earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=515"
  },
  {
    "text": "Now that I've explained the tag part of this diagram, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=520"
  },
  {
    "text": "I'd like to focus on the other half of the selection equation: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=522"
  },
  {
    "text": "the selection state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=525"
  },
  {
    "text": "In the previous example, I used a set, but there are other options too.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=527"
  },
  {
    "text": "You can use these data structures to represent selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=532"
  },
  {
    "text": "SwiftUI supports single selection, new in macOS Ventura, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=536"
  },
  {
    "text": "required selection for macOS sidebars, and multiple selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=539"
  },
  {
    "text": "iPadOS 16 also introduces lightweight multiple selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=546"
  },
  {
    "text": "Now, with a keyboard attached, you don't need to enter edit mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=551"
  },
  {
    "text": "to select multiple rows, which helps avoid modality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=554"
  },
  {
    "text": "When using a keyboard, you can use common shortcuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=558"
  },
  {
    "text": "like shift and command to extend and modify the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=560"
  },
  {
    "text": "And this works great with the pointer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=564"
  },
  {
    "text": "Here's what the places table looks like after adopting selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=566"
  },
  {
    "text": "In this example, I have an attached keyboard and trackpad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=569"
  },
  {
    "text": "so the rows aren't indented, but they're still selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=572"
  },
  {
    "text": "However, when using touch, I'll still need to enter edit mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=576"
  },
  {
    "text": "which is accelerated by using a two-finger pan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=579"
  },
  {
    "text": "SwiftUI supports this gesture automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=582"
  },
  {
    "text": "Speaking of edit mode, there are some updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=585"
  },
  {
    "text": "with single selection and edit mode as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=587"
  },
  {
    "text": "In iOS 16, list selection on iPhone and iPad ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=590"
  },
  {
    "text": "no longer requires edit mode when selecting a single row. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=593"
  },
  {
    "text": "And this is super useful for coordinating with the updated navigation APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=596"
  },
  {
    "text": "With all of these updates, that brings us to this table, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=601"
  },
  {
    "text": "which builds upon the previous table by adding a new column for edit mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=604"
  },
  {
    "text": "Edit mode is only required when using multiple selection without a keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=608"
  },
  {
    "text": "So with that, I'll update the places table to support selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=612"
  },
  {
    "text": "I can easily add selection to the places table ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=616"
  },
  {
    "text": "by adding some state to store the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=619"
  },
  {
    "text": "After creating the state, I'll pass a binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=622"
  },
  {
    "text": "to the table's initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=625"
  },
  {
    "text": "Table enforces that its selection type matches its row identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=627"
  },
  {
    "text": "so I've used the place ID type as the selection type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=631"
  },
  {
    "text": "Since I want multiple selection, I've used a set for the selection state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=634"
  },
  {
    "text": "Table tags its rows automatically, so I don't need to tag anything myself.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=638"
  },
  {
    "text": "And now I can select rows in the table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=644"
  },
  {
    "text": "But I haven't really done anything with the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=646"
  },
  {
    "text": "I think it'd be great to add a button that allows me to add the selected places ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=649"
  },
  {
    "text": "to a guide that I can share with others in my book club. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=653"
  },
  {
    "text": "This is the code to add the toolbar button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=656"
  },
  {
    "text": "If there is a non-empty selection, the button will now show up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=659"
  },
  {
    "text": "I've also added an edit button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=663"
  },
  {
    "text": "which complements the existing lightweight selection support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=664"
  },
  {
    "text": "but it provides an affordance to enter and exit edit mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=667"
  },
  {
    "text": "when there is no keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=670"
  },
  {
    "text": "A good iPad app shines both with and without the keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=672"
  },
  {
    "text": "so it's important to offer controls to enter and exit edit mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=676"
  },
  {
    "text": "We're getting there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=681"
  },
  {
    "text": "Now we have a button that shows up when we select rows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=682"
  },
  {
    "text": "as well as a button to enter and exit edit mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=684"
  },
  {
    "text": "Please make sure to watch the second session in this series ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=688"
  },
  {
    "text": "for more information about toolbars. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=690"
  },
  {
    "text": "I'm pretty happy with the toolbar button here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=693"
  },
  {
    "text": "but we can do more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=695"
  },
  {
    "text": "For actions on selection, it's a great practice to keep them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=696"
  },
  {
    "text": "as easy to access as possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=699"
  },
  {
    "text": "That's why in iOS 16, iPadOS 16, and macOS Ventura, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=701"
  },
  {
    "text": "SwiftUI adds support for multi-select context menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=706"
  },
  {
    "text": "Multi-select context menus allow for a context menu to be presented ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=710"
  },
  {
    "text": "that operates on a set of selected identifiers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=714"
  },
  {
    "text": "Let's examine the anatomy of this table to understand more.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=717"
  },
  {
    "text": "Item-based context menus have three variations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=722"
  },
  {
    "text": "First, you can show a menu on multiple items, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=725"
  },
  {
    "text": "such as the selection at the top.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=727"
  },
  {
    "text": "You can also show a context menu on an individual item.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=730"
  },
  {
    "text": "And lastly, you can show a context menu on an empty area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=735"
  },
  {
    "text": "where there is no content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=738"
  },
  {
    "text": "Let's add support for this into our places table.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=741"
  },
  {
    "text": "I've omitted some details from the previous code examples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=745"
  },
  {
    "text": "so we can focus on the context menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=748"
  },
  {
    "text": "I've added the new contextMenu modifier that takes a selection type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=750"
  },
  {
    "text": "This needs to match the selection type of the list or table, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=754"
  },
  {
    "text": "so since I'm using a table, I'll use the PlaceID type.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=758"
  },
  {
    "text": "The closure is passed a set of the items to act on, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=763"
  },
  {
    "text": "so if it's empty, I know the menu is for the empty area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=765"
  },
  {
    "text": "I think a button to add a new place would work great for the empty area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=769"
  },
  {
    "text": "That way, when I'm on the go and find a new quiet place to read, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=772"
  },
  {
    "text": "I can add it quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=776"
  },
  {
    "text": "Note that if the view builder for the empty set of items ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=778"
  },
  {
    "text": "doesn't resolve to a view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=780"
  },
  {
    "text": "SwiftUI won't show a menu on the empty area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=782"
  },
  {
    "text": "Next, let's handle a single selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=785"
  },
  {
    "text": "If the set has only a single item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=788"
  },
  {
    "text": "I know the menu is being shown for a single place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=789"
  },
  {
    "text": "And for both single and multiple selections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=793"
  },
  {
    "text": "I want to be able to add these places to a guide, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=796"
  },
  {
    "text": "so I'll add another view to the menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=798"
  },
  {
    "text": "Let's check out our progress. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=801"
  },
  {
    "text": "Here's the new context menu support in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=803"
  },
  {
    "text": "Clicking on the empty area shows a menu item to add a new place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=805"
  },
  {
    "text": "Selecting a single row shows a context menu for just that row. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=809"
  },
  {
    "text": "And I can extend the selection with the keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=813"
  },
  {
    "text": "creating this blue highlight. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=816"
  },
  {
    "text": "I can then activate a context menu over multiple rows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=818"
  },
  {
    "text": "allowing me to easily add places to a guide.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=821"
  },
  {
    "text": "This table is looking pretty snazzy now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=825"
  },
  {
    "text": "so I think it's time to add some structure around it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=827"
  },
  {
    "text": "To do that, I'll need a split view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=830"
  },
  {
    "text": "Navigation is a fundamental part of the iPad experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=832"
  },
  {
    "text": "And split views are a great way to avoid modality on iPad's larger display ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=835"
  },
  {
    "text": "by showing more information at once without the need to drill in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=840"
  },
  {
    "text": "In this section, I'm going to cover some updates to SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=844"
  },
  {
    "text": "around navigation and split views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=846"
  },
  {
    "text": "In the previous sections, I created the places table ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=849"
  },
  {
    "text": "and added rich features like selection and edit mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=852"
  },
  {
    "text": "But I think the places app is lacking some structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=856"
  },
  {
    "text": "So in this section, I'll build the foundation of our app's structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=858"
  },
  {
    "text": "by leveraging a navigation split view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=862"
  },
  {
    "text": "New in iPadOS 16 and macOS Ventura, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=865"
  },
  {
    "text": "SwiftUI has improved support for split views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=867"
  },
  {
    "text": "with the NavigationSplitView type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=870"
  },
  {
    "text": "SwiftUI supports two or three column split views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=872"
  },
  {
    "text": "and has multiple styles for complex control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=875"
  },
  {
    "text": "over how the columns are displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=878"
  },
  {
    "text": "I'm not going to fully cover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=881"
  },
  {
    "text": "how to present navigation content in this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=882"
  },
  {
    "text": "so for that, I invite you to check out the SwiftUI cookbook for navigation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=885"
  },
  {
    "text": "Curt has quite a few recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=888"
  },
  {
    "text": "for cooking up some really tasty navigation experiences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=890"
  },
  {
    "text": "Instead, I'm going to focus more on split views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=893"
  },
  {
    "text": "Here's a diagram showing a two column split view on iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=896"
  },
  {
    "text": "In SwiftUI, the leading column is called the sidebar column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=900"
  },
  {
    "text": "and the trailing column is called the detail column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=903"
  },
  {
    "text": "Notice how the columns are balanced next to each other here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=907"
  },
  {
    "text": "In landscape, SwiftUI offers this by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=910"
  },
  {
    "text": "In portrait, however, the sidebar hides out of the way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=913"
  },
  {
    "text": "showing only the detail column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=916"
  },
  {
    "text": "Tapping on the sidebar button ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=919"
  },
  {
    "text": "shows the sidebar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=920"
  },
  {
    "text": "which appears over the detail column, dimming it underneath.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=922"
  },
  {
    "text": "Generally, a two column split view will prefer to show ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=927"
  },
  {
    "text": "only the detail column when space constrained, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=930"
  },
  {
    "text": "because the detail column often shows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=932"
  },
  {
    "text": "more important information than the sidebar column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=935"
  },
  {
    "text": "If you'd like to customize this behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=937"
  },
  {
    "text": "you can either always prefer the detail column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=939"
  },
  {
    "text": "with the prominentDetail navigation split view style ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=942"
  },
  {
    "text": "or balance the weighting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=944"
  },
  {
    "text": "with the balanced NavigationSplitView style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=946"
  },
  {
    "text": "NavigationSplitView also supports three column layouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=948"
  },
  {
    "text": "With three columns, there is an additional column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=953"
  },
  {
    "text": "between the sidebar and detail called the content column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=955"
  },
  {
    "text": "If you're coming from UIKit, you may know this as the supplementary column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=959"
  },
  {
    "text": "In landscape, the content and detail column are shown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=962"
  },
  {
    "text": "and the sidebar can be toggled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=966"
  },
  {
    "text": "After tapping on the toolbar button, the detail column slides out of the way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=969"
  },
  {
    "text": "making room for the sidebar and content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=973"
  },
  {
    "text": "In portrait, only the detail column is shown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=976"
  },
  {
    "text": "and tapping on the toolbar button shows the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=979"
  },
  {
    "text": "From there, tapping again shows the sidebar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=983"
  },
  {
    "text": "The sidebar and content both overlay the detail.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=986"
  },
  {
    "text": "In general, I recommend sticking with the automatic style ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=991"
  },
  {
    "text": "for three column split views because it makes the best use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=993"
  },
  {
    "text": "of the available space and is specialized for larger displays. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=996"
  },
  {
    "text": "Just like the two column split view, the three column split view collapses ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1000"
  },
  {
    "text": "to a stack in compact size classes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1003"
  },
  {
    "text": "Now that I've covered the basics of split views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1006"
  },
  {
    "text": "it's time to add one to the places app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1008"
  },
  {
    "text": "Here is the content view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1011"
  },
  {
    "text": "I've created a NavigationSplitView with two columns here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1013"
  },
  {
    "text": "The first column is the sidebar column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1016"
  },
  {
    "text": "and the second column is the detail column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1017"
  },
  {
    "text": "The detail column is populated by links from the sidebar column, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1020"
  },
  {
    "text": "but if nothing is presented, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1023"
  },
  {
    "text": "the placeholder with \"select a place\" will be shown instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1024"
  },
  {
    "text": "Here's a screenshot of the placeholder. It's pretty great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1030"
  },
  {
    "text": "This is using the automatic style, which shows the sidebar in landscape, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1033"
  },
  {
    "text": "hiding it out of the way in portrait. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1037"
  },
  {
    "text": "Tapping on a row in the sidebar presents that row in the detail column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1040"
  },
  {
    "text": "And when using slide over, the columns collapse automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1044"
  },
  {
    "text": "This is just the tip of the iceberg– ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1048"
  },
  {
    "text": "there are so many exciting navigation additions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1050"
  },
  {
    "text": "including better support for state restoration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1052"
  },
  {
    "text": "deep linking, and even richer programmatic control. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1055"
  },
  {
    "text": "Again, I encourage you to check out the navigation cookbook session for more.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1058"
  },
  {
    "text": "I've built some awesome iPad features into the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1064"
  },
  {
    "text": "and I'm excited to go find some peaceful places to read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1067"
  },
  {
    "text": "Hopefully I'll be caught up with my book club soon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1070"
  },
  {
    "text": "In this session, I've covered how to leverage tables ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1073"
  },
  {
    "text": "for rich display of data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1076"
  },
  {
    "text": "how to manage sophisticated selection interactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1078"
  },
  {
    "text": "and how to avoid modality with split views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1081"
  },
  {
    "text": "Make sure to check out the related sessions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1085"
  },
  {
    "text": "and refine your SwiftUI apps to leverage the power of iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1087"
  },
  {
    "text": "Thank you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1091"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10058/?time=1093"
  }
]