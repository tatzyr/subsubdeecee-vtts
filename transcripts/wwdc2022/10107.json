[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=0"
  },
  {
    "text": "Rich Gillam: Hi, I'm Rich, and I'm here to help you get it right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=9"
  },
  {
    "text": "to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=13"
  },
  {
    "text": "So you’ve already localized your application for a bunch of languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=14"
  },
  {
    "text": "including the most common European languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=18"
  },
  {
    "text": "the most common Asian languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=20"
  },
  {
    "text": "And now you want to localize it for Arabic and Hebrew. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=22"
  },
  {
    "text": "This is a good choice; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=25"
  },
  {
    "text": "Arabic is one of the ten most used languages on our platform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=26"
  },
  {
    "text": "but it brings with it some challenges you don’t face ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=30"
  },
  {
    "text": "when developing for other languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=33"
  },
  {
    "text": "That’s what this talk is about, how to develop your application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=35"
  },
  {
    "text": "so that it can be localized into languages such as Arabic and Hebrew. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=38"
  },
  {
    "text": "Arabic and Hebrew are the most commonly used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=44"
  },
  {
    "text": "of the so-called “right-to-left languages.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=47"
  },
  {
    "text": "Why are they called this? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=49"
  },
  {
    "text": "English, French, Chinese, Thai, and many other languages are written ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=51"
  },
  {
    "text": "so that their characters run from left to right like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=55"
  },
  {
    "text": "In Hebrew, the characters run from right to left like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=60"
  },
  {
    "text": "They do the same thing in Arabic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=64"
  },
  {
    "text": "and in Arabic, the characters are also cursively joined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=67"
  },
  {
    "text": "The four letters in “salaam” look like this when they're written separately.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=70"
  },
  {
    "text": "It’s not just Arabic and Hebrew, by the way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=75"
  },
  {
    "text": "Apple actually has font and keyboard support ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=78"
  },
  {
    "text": "for 15 right-to-left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=81"
  },
  {
    "text": "Here’s a paragraph of Hebrew text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=84"
  },
  {
    "text": "This one is from the Hebrew version ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=86"
  },
  {
    "text": "of the “Formulas & Functions Help” page for Numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=88"
  },
  {
    "text": "Notice that the text is aligned on the right and ragged on the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=92"
  },
  {
    "text": "and that many lines, including the last one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=95"
  },
  {
    "text": "have punctuation on the left-hand side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=98"
  },
  {
    "text": "There’s also a number in this paragraph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=101"
  },
  {
    "text": "The number still goes from left to right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=103"
  },
  {
    "text": "This one is telling us that Numbers supports over 250 functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=105"
  },
  {
    "text": "If we widen our view to include another paragraph, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=110"
  },
  {
    "text": "we see that this one has some English words, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=113"
  },
  {
    "text": "the names of iWork and its constituent applications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=116"
  },
  {
    "text": "Pages, Numbers, and Keynote. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=119"
  },
  {
    "text": "These are also written from left to right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=121"
  },
  {
    "text": "even in a Hebrew paragraph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=123"
  },
  {
    "text": "So for many paragraphs, the text is bidirectional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=125"
  },
  {
    "text": "This is an inherent property of Arabic and Hebrew, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=129"
  },
  {
    "text": "and it’s why they’re also often referred to as the “bidi” languages.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=132"
  },
  {
    "text": "If we widen our view even further, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=137"
  },
  {
    "text": "we see the entire page is laid out from right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=139"
  },
  {
    "text": "We have a table here, and the text is to the right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=142"
  },
  {
    "text": "of the images instead of to their left.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=145"
  },
  {
    "text": "And if we widen it even further to see Safari’s window frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=149"
  },
  {
    "text": "we see that it doesn’t stop with the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=152"
  },
  {
    "text": "Lines of Arabic and Hebrew text begin on the right and progress to the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=155"
  },
  {
    "text": "so it’s natural to expect other UI elements to do the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=159"
  },
  {
    "text": "Just as readers expect things to start on the left and progress to the right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=163"
  },
  {
    "text": "Arabic and Hebrew readers expect the opposite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=167"
  },
  {
    "text": "So here, Safari’s toolbar runs from right to left ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=170"
  },
  {
    "text": "with the traffic light buttons in the upper right corner ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=174"
  },
  {
    "text": "and the buttons progressing to the left.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=176"
  },
  {
    "text": "And if we widen our focus to include the entire screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=180"
  },
  {
    "text": "we see that it extends everywhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=183"
  },
  {
    "text": "This is Numbers’ help screen, and we see that all ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=185"
  },
  {
    "text": "of the elements in Numbers have also flipped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=188"
  },
  {
    "text": "The sidebar is on the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=190"
  },
  {
    "text": "The tab bar runs from right to left. Even the document itself is flipped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=192"
  },
  {
    "text": "And the Mac menu bar and dock run from right to left as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=196"
  },
  {
    "text": "Getting all of this right can be complicated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=201"
  },
  {
    "text": "but the great news is that we do most of the heavy lifting for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=204"
  },
  {
    "text": "Most support for right to left comes for free. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=207"
  },
  {
    "text": "But there are things to keep in mind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=210"
  },
  {
    "text": "So that’s what we’re gonna talk about, what the system does for you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=212"
  },
  {
    "text": "when you need to opt in or out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=216"
  },
  {
    "text": "and what to think about when implementing your own right to left support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=218"
  },
  {
    "text": "We’ll talk about text, images, control orientation, and UI layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=221"
  },
  {
    "text": "We'll also cover displaying numbers in Arabic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=227"
  },
  {
    "text": "And finally, we’ll talk a little about how to test ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=230"
  },
  {
    "text": "that your app is handling right to left correctly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=234"
  },
  {
    "text": "So let’s dive in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=237"
  },
  {
    "text": "First, we’ll talk a little bit more about how text works ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=239"
  },
  {
    "text": "and introduce some terminology. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=242"
  },
  {
    "text": "Let’s start with the concept of writing direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=244"
  },
  {
    "text": "As we’ve already seen, English is written from left to right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=247"
  },
  {
    "text": "and Hebrew is written from right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=253"
  },
  {
    "text": "But what happens if we mix them? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=256"
  },
  {
    "text": "If you’ve got a multilingual sentence like these, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=261"
  },
  {
    "text": "the individual components still keep their writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=264"
  },
  {
    "text": "but this means that each of these sentences now consists ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=267"
  },
  {
    "text": "of three components: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=270"
  },
  {
    "text": "Two separate snippets of text in the native language ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=272"
  },
  {
    "text": "sandwiching one snippet in a different language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=275"
  },
  {
    "text": "When we talk about the writing direction of a paragraph, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=278"
  },
  {
    "text": "we’re talking about the order of these individual snippets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=281"
  },
  {
    "text": "When we say the English sentence has left to right writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=284"
  },
  {
    "text": "it's because these three boxes run from left to right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=288"
  },
  {
    "text": "and when we say the Hebrew sentence has right to left writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=291"
  },
  {
    "text": "it’s because those three boxes run from right to left.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=295"
  },
  {
    "text": "A different but related concept is text alignment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=300"
  },
  {
    "text": "If you read a left to right language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=303"
  },
  {
    "text": "your eye goes to the left-hand side of the page and progresses to the right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=305"
  },
  {
    "text": "If you read a right to left language, it’s the opposite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=309"
  },
  {
    "text": "So text gets aligned on the right-hand side in right to left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=313"
  },
  {
    "text": "The good news is that most of the time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=318"
  },
  {
    "text": "you don’t have to worry about either of these things. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=320"
  },
  {
    "text": "Not only does CoreText take care of arranging all ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=323"
  },
  {
    "text": "of the characters properly on a line or paragraph of text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=325"
  },
  {
    "text": "including when text of different directions is mixed on one line, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=329"
  },
  {
    "text": "but all of our UI frameworks automatically set the writing direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=333"
  },
  {
    "text": "and alignment as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=337"
  },
  {
    "text": "All UI widgets default to something called “natural writing direction\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=338"
  },
  {
    "text": "and “natural alignment.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=342"
  },
  {
    "text": "The writing direction of a text widget defaults to match ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=344"
  },
  {
    "text": "the normal writing direction for the user’s UI language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=347"
  },
  {
    "text": "That is, if your UI is in Hebrew or Arabic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=350"
  },
  {
    "text": "the writing direction of your text widgets defaults to right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=353"
  },
  {
    "text": "Natural alignment follows the writing direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=357"
  },
  {
    "text": "That is, if the writing direction of a text widget is right to left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=360"
  },
  {
    "text": "it’ll also be right-aligned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=364"
  },
  {
    "text": "Most of the time, this is what you want, but you can override the defaults. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=367"
  },
  {
    "text": "We’ll talk more about this in the section on control orientation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=371"
  },
  {
    "text": "Now seems like a good time to start a little chart of terms you’ll run across. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=375"
  },
  {
    "text": "What we’re saying here is that natural alignment corresponds ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=379"
  },
  {
    "text": "to left alignment in left to right languages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=382"
  },
  {
    "text": "and to right alignment in right to left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=385"
  },
  {
    "text": "We’ll add to this chart as we go. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=388"
  },
  {
    "text": "But of course, it’s not just text you have to worry about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=390"
  },
  {
    "text": "Having text that’s read in the opposite direction has ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=393"
  },
  {
    "text": "a profound effect on elements of your application other than text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=396"
  },
  {
    "text": "Let’s talk about how it can affect icons and other pictorial elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=400"
  },
  {
    "text": "This is the Pages toolbar in English and in Arabic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=405"
  },
  {
    "text": "Let’s take a closer look at some of the icons in the toolbar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=409"
  },
  {
    "text": "Many, such as the “Add page” and “Media” buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=412"
  },
  {
    "text": "look the same in both languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=415"
  },
  {
    "text": "This is either because they’re symmetrical or because their directionality isn't tied ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=417"
  },
  {
    "text": "to the language, and they look fine in both languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=422"
  },
  {
    "text": "Other buttons, such as the “View” and “Document” buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=425"
  },
  {
    "text": "flip to their mirror images in Arabic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=428"
  },
  {
    "text": "The “View” button brings up the Pages sidebar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=431"
  },
  {
    "text": "which appears on the opposite side of the window in Arabic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=434"
  },
  {
    "text": "so the icon has to change to reflect that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=437"
  },
  {
    "text": "The “Document” button changes to show that if the user is writing in Arabic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=440"
  },
  {
    "text": "the pages turn in the opposite direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=444"
  },
  {
    "text": "And you can have situations where the icon changes completely. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=447"
  },
  {
    "text": "The letter on the “Insert text box” button changes to a different letter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=450"
  },
  {
    "text": "to reflect the user’s language.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=454"
  },
  {
    "text": "Once again, the great news is that a lot of this gets handled for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=458"
  },
  {
    "text": "You have to think about image orientation a little more than you generally have ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=462"
  },
  {
    "text": "to think about text writing direction, but getting things right is fairly simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=465"
  },
  {
    "text": "This is the “View” menu in Mac Pages in English and Arabic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=470"
  },
  {
    "text": "Notice that the “Show Ruler” icon reverses itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=474"
  },
  {
    "text": "In right to left languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=477"
  },
  {
    "text": "the vertical ruler is on the right-hand side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=479"
  },
  {
    "text": "For a custom image like the ruler icon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=482"
  },
  {
    "text": "right to left behavior is controlled in the Xcode imageset editor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=484"
  },
  {
    "text": "If your image is the same in left to right and right to left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=488"
  },
  {
    "text": "you don’t have to do anything special. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=491"
  },
  {
    "text": "The system can also algorithmically mirror your image for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=493"
  },
  {
    "text": "when your app is running in a language with the opposite writing direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=497"
  },
  {
    "text": "from your development language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=500"
  },
  {
    "text": "You can ask for this feature in Xcode’s imageset editor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=502"
  },
  {
    "text": "In the sidebar, you’ll find a control marked “Direction.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=505"
  },
  {
    "text": "If you click on this, you get a menu with four choices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=509"
  },
  {
    "text": "If your image is the same regardless of the UI language, you pick “Fixed.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=512"
  },
  {
    "text": "If you want algorithmic mirroring, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=516"
  },
  {
    "text": "you opt in by picking one of the “Mirrors” options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=518"
  },
  {
    "text": "Which one depends on the writing direction of your development language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=521"
  },
  {
    "text": "If you have an image you can’t mirror algorithmically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=525"
  },
  {
    "text": "either it has multiple elements that behave differently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=528"
  },
  {
    "text": "when the UI changes direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=531"
  },
  {
    "text": "or you’ve got shading you don’t want to move, you pick “Both,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=532"
  },
  {
    "text": "and three new wells get added to the image set editor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=536"
  },
  {
    "text": "allowing you to create separate images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=539"
  },
  {
    "text": "to use for left to right and right to left contexts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=542"
  },
  {
    "text": "But if you use images from SF Symbols, as the Pages toolbar did, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=546"
  },
  {
    "text": "things are even easier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=550"
  },
  {
    "text": "Almost all of the work has been done for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=552"
  },
  {
    "text": "The symbols that need to change ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=554"
  },
  {
    "text": "for right to left languages do so automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=556"
  },
  {
    "text": "Consider this bulleted list icon for example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=559"
  },
  {
    "text": "For many images, SF Symbols’ sidebar has ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=562"
  },
  {
    "text": "a \"localization\" section that shows localized versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=565"
  },
  {
    "text": "of the image you chose. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=568"
  },
  {
    "text": "In this case, the bulleted-list icon has ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=570"
  },
  {
    "text": "different left to right and right to left versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=572"
  },
  {
    "text": "It mirrors automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=575"
  },
  {
    "text": "The localization feature can go beyond just mirroring ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=578"
  },
  {
    "text": "for right to left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=581"
  },
  {
    "text": "Here’s the localization tab for the “insert text box” icon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=582"
  },
  {
    "text": "It has localized versions not just for the Latin and Arabic scripts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=586"
  },
  {
    "text": "but for a variety of others as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=590"
  },
  {
    "text": "One case that’s specifically important for Arabic support is the question mark, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=593"
  },
  {
    "text": "which is often used as a “help” icon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=598"
  },
  {
    "text": "In Arabic, the question mark is the reverse ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=600"
  },
  {
    "text": "of the Latin question mark. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=602"
  },
  {
    "text": "Using icons from SF Symbols for help icons ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=604"
  },
  {
    "text": "gets you this version without any extra work.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=607"
  },
  {
    "text": "One class of images you have to think about carefully ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=611"
  },
  {
    "text": "is arrows and other directional indicators. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=614"
  },
  {
    "text": "Here we have four arrow-in-a-circle icons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=617"
  },
  {
    "text": "You’ll notice they’re in two pairs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=620"
  },
  {
    "text": "You have two pointing to the left and two pointing to the right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=622"
  },
  {
    "text": "If we look at just the two that point to the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=625"
  },
  {
    "text": "you’ll see that one is called “arrow.backward.circle.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=628"
  },
  {
    "text": "This one flips to point to the right in right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=631"
  },
  {
    "text": "The other one is called “arrow.left..circle” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=635"
  },
  {
    "text": "and does NOT flip for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=638"
  },
  {
    "text": "SF Symbols follows this naming convention throughout ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=641"
  },
  {
    "text": "with icons that you may or may not want to have flip for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=644"
  },
  {
    "text": "The “forward” and “backward” ones flip, and the “left” and “right” ones don’t. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=648"
  },
  {
    "text": "If you’re using an arrow or other shape ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=652"
  },
  {
    "text": "to convey the idea of “forward” or \"backward,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=654"
  },
  {
    "text": "you want to use the flipping versions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=657"
  },
  {
    "text": "and if you’re using the arrow to convey an absolute direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=659"
  },
  {
    "text": "you want to use the non-flipping versions.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=662"
  },
  {
    "text": "And let’s add a row to our “Terminology” chart. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=666"
  },
  {
    "text": "When choosing images in SF Symbols, remember that “left” and “right” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=668"
  },
  {
    "text": "always point those directions and “forward” and \"backward\" point ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=672"
  },
  {
    "text": "in different directions depending on the UI language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=675"
  },
  {
    "text": "Now let’s talk about how controls and other UI widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=679"
  },
  {
    "text": "are handled in right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=683"
  },
  {
    "text": "This is the Mac Keynote sidebar in English and Arabic ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=685"
  },
  {
    "text": "showing the format inspector for a shape. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=688"
  },
  {
    "text": "Notice that everything has flipped its appearance for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=691"
  },
  {
    "text": "We have lots of pop-up menu buttons where the menu indicator moves ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=695"
  },
  {
    "text": "to the left-hand side for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=698"
  },
  {
    "text": "We have a couple of checkboxes, where in Arabic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=701"
  },
  {
    "text": "the checkbox is to the right of the label. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=703"
  },
  {
    "text": "The opacity slider has changed for Arabic ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=705"
  },
  {
    "text": "so that the minimum is on the right and the maximum on the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=708"
  },
  {
    "text": "And so on throughout all the other controls in this inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=712"
  },
  {
    "text": "The great news is that you get this behavior for free. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=716"
  },
  {
    "text": "All of the standard UI controls in all our UI frameworks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=719"
  },
  {
    "text": "automatically reverse their appearance for right to left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=722"
  },
  {
    "text": "There are, however, situations where you may not want this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=726"
  },
  {
    "text": "or where you need to have some control over how it happens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=729"
  },
  {
    "text": "Let’s take a look at a few of the interesting cases.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=732"
  },
  {
    "text": "Let’s talk about buttons with both a textual label and an icon on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=736"
  },
  {
    "text": "This is the Keynote animation inspector showing the controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=741"
  },
  {
    "text": "for the “Move In” animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=744"
  },
  {
    "text": "This inspector has two buttons with both a label and an icon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=746"
  },
  {
    "text": "Notice that the arrow on the Preview button flips ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=750"
  },
  {
    "text": "with the change in UI direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=752"
  },
  {
    "text": "but the arrow on the animation direction menu doesn’t. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=754"
  },
  {
    "text": "Both flip sides with the UI direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=758"
  },
  {
    "text": "but if the direction control was a group of buttons instead of a menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=760"
  },
  {
    "text": "you can image maybe not wanting it to change sides.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=764"
  },
  {
    "text": "To show how to control this, I've isolated those two examples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=768"
  },
  {
    "text": "out into a small toy application.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=772"
  },
  {
    "text": "Here’s the code to build that UI in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=775"
  },
  {
    "text": "There are a few interesting things to note here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=779"
  },
  {
    "text": "We’ll look at them one at a time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=781"
  },
  {
    "text": "Let’s start with the image names. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=782"
  },
  {
    "text": "As we saw before, for images from SF Symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=786"
  },
  {
    "text": "you choose either an icon that reverses or one that doesn’t. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=788"
  },
  {
    "text": "Here we’ve used “arrowtriangle.forward.fill” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=792"
  },
  {
    "text": "for the “Preview” button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=795"
  },
  {
    "text": "The “forward” in the name tells you that it flips for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=796"
  },
  {
    "text": "We’ve used “arrow.left” and “arrow.right” for the direction buttons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=800"
  },
  {
    "text": "The “left” and “right” in the name tell you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=804"
  },
  {
    "text": "that they don’t flip for right to left.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=806"
  },
  {
    "text": "If you’re working in AppKit or UIKit, this works the same way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=809"
  },
  {
    "text": "Here’s my app in Xcode’s storyboard editor with the “Preview” button selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=813"
  },
  {
    "text": "You control the button’s icon with the “Image” control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=817"
  },
  {
    "text": "in the Attributes inspector.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=820"
  },
  {
    "text": "And in code, you set this with the button’s “image” property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=823"
  },
  {
    "text": "and it works basically the same way in both AppKit and UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=826"
  },
  {
    "text": "Coming back to our SwiftUI example, the next question is how ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=832"
  },
  {
    "text": "you control which side of the label the icon goes on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=836"
  },
  {
    "text": "You do this by setting a label style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=839"
  },
  {
    "text": "The built-in TitleAndIconLabelStyle puts the icon before the label ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=842"
  },
  {
    "text": "in the user’s reading direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=847"
  },
  {
    "text": "We can use this for the “Left” button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=849"
  },
  {
    "text": "For the other two buttons, we want the icon to go after the label ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=851"
  },
  {
    "text": "in the user’s reading direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=855"
  },
  {
    "text": "To do this, you need a custom label style, but that’s pretty easy to do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=857"
  },
  {
    "text": "Your label style’s makeBody() method just has to make an HStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=862"
  },
  {
    "text": "and add the title and icon into it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=866"
  },
  {
    "text": "As with any HStack, the order you add them determines the order they display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=868"
  },
  {
    "text": "and the order automatically reverses when appropriate for the UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=873"
  },
  {
    "text": "This technique works on any view that can take a Label, not just buttons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=877"
  },
  {
    "text": "Of course, you don’t want the icon to change sides on the “Right” button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=882"
  },
  {
    "text": "You want it to always be on the right regardless of the UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=887"
  },
  {
    "text": "That brings us to the last interesting thing in this code snippet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=891"
  },
  {
    "text": "Views in SwiftUI pick up their directionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=895"
  },
  {
    "text": "from the SwiftUI environment, which you can modify. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=898"
  },
  {
    "text": "You do this by adding an “environment” modifier to a view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=901"
  },
  {
    "text": "and giving it the key and new value for the property you want to change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=905"
  },
  {
    "text": "Here we’re overriding the environment’s layoutDirection property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=909"
  },
  {
    "text": "to always be left to right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=913"
  },
  {
    "text": "regardless of what value we might be inheriting from our parent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=915"
  },
  {
    "text": "Changing the environment in this way works on all SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=919"
  },
  {
    "text": "that respond to the user’s UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=922"
  },
  {
    "text": "Notice we applied the modifier to the HStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=925"
  },
  {
    "text": "that contains the “Left” and “Right” buttons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=928"
  },
  {
    "text": "Any changes you make to a view’s environment are inherited ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=931"
  },
  {
    "text": "by its child views, so putting it here not only ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=934"
  },
  {
    "text": "keeps the HStack from reversing the order of the buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=937"
  },
  {
    "text": "but it keeps both buttons from reversing the layout of their labels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=941"
  },
  {
    "text": "And of course, we didn’t apply our environment modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=946"
  },
  {
    "text": "modifier to anything in the parent chain for the “Preview” button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=949"
  },
  {
    "text": "so it still reverses when appropriate, just as we want it to.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=951"
  },
  {
    "text": "So to recap, the “Left” button has its icon ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=957"
  },
  {
    "text": "on the left because we used the built-in TitleAndIconLabelStyle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=960"
  },
  {
    "text": "and the “Preview” and “Right” buttons have their icons on the right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=964"
  },
  {
    "text": "because we used a custom label style we called IconOnRightLabelStyle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=968"
  },
  {
    "text": "The “Left” and “Right” buttons don’t change their order ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=973"
  },
  {
    "text": "or the internal arrangement of their labels ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=976"
  },
  {
    "text": "because we added an environment modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=978"
  },
  {
    "text": "to the HStack that contains them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=980"
  },
  {
    "text": "setting the layout direction to left to right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=982"
  },
  {
    "text": "The “Preview” button reverses the internal arrangement of its label ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=985"
  },
  {
    "text": "because it doesn’t have that modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=989"
  },
  {
    "text": "This works differently in AppKit and UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=992"
  },
  {
    "text": "In both of those frameworks, the position of the icon relative ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=995"
  },
  {
    "text": "to the label is controlled with the “Position” control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=999"
  },
  {
    "text": "in Xcode’s Attributes inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1002"
  },
  {
    "text": "If you click on this control, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1004"
  },
  {
    "text": "you’ll see that the menu has, among other options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1006"
  },
  {
    "text": "two pairs of options that align the label and icon horizontally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1009"
  },
  {
    "text": "You have “Leading” and “Left,” and you have “Trailing” and “Right.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1013"
  },
  {
    "text": "“Leading” and “Trailing” change their meanings based on the UI direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1016"
  },
  {
    "text": "and “Left” and “Right” don’t. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1020"
  },
  {
    "text": "In AppKit, you control this with the button’s imagePosition property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1023"
  },
  {
    "text": "In UIKit, it’s the imagePlacement property on the button’s configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1027"
  },
  {
    "text": "which might mean you need to set your button’s configuration first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1031"
  },
  {
    "text": "The icon on the “Preview” button changes sides ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1036"
  },
  {
    "text": "because we set its position to “Trailing,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1039"
  },
  {
    "text": "and the icon on the “Right” button doesn't change sides ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1041"
  },
  {
    "text": "because we set its position to “Right.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1044"
  },
  {
    "text": "This also lets us fill in the last row in our “terminology” chart. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1047"
  },
  {
    "text": "The terms “leading” and “trailing” will come up a lot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1051"
  },
  {
    "text": "when discussing UI layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1054"
  },
  {
    "text": "Like “forward” and “backward,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1055"
  },
  {
    "text": "you’ll often see them used in contrast to “left” and “right.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1057"
  },
  {
    "text": "The “leading” edge of something is the edge closest to beginning of the line ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1060"
  },
  {
    "text": "or to the side of the screen or window where the reader would begin reading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1064"
  },
  {
    "text": "left for left to right and right for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1068"
  },
  {
    "text": "The trailing edge is the opposite side, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1071"
  },
  {
    "text": "closest to the end of the line, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1073"
  },
  {
    "text": "right for left to right and left for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1075"
  },
  {
    "text": "Most of the time, you want to use these instead of “left” and “right,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1079"
  },
  {
    "text": "saving “left” and “right” only for things that are tied to an absolute direction.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1082"
  },
  {
    "text": "Let’s look at another interesting case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1088"
  },
  {
    "text": "This is part of the text format inspector in Keynote on the iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1090"
  },
  {
    "text": "in English and in Arabic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1094"
  },
  {
    "text": "This particular screenshot has four segmented controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1096"
  },
  {
    "text": "The top two, the page selector for the inspector ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1100"
  },
  {
    "text": "and the standard “bold/italic/underline” style buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1103"
  },
  {
    "text": "reverse the order of their segments depending on the UI language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1106"
  },
  {
    "text": "If you don’t read Arabic, you’ll have to trust me on the page selector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1110"
  },
  {
    "text": "As with the other controls we’ve looked at, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1114"
  },
  {
    "text": "this is the default; you get this behavior for free. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1116"
  },
  {
    "text": "The other two segmented controls, the alignment controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1120"
  },
  {
    "text": "don’t reverse the order of their segments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1123"
  },
  {
    "text": "This is because they move things in absolute directions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1125"
  },
  {
    "text": "Left alignment is left alignment ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1128"
  },
  {
    "text": "regardless of whether that’s the beginning or the end of a line. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1130"
  },
  {
    "text": "Let’s look at how we keep these controls from reversing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1134"
  },
  {
    "text": "We already know how to do this in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1138"
  },
  {
    "text": "You just apply an “environment” modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1141"
  },
  {
    "text": "that changes the environment’s layoutDirection property to left to right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1142"
  },
  {
    "text": "Here, we’re using this technique to keep the alignment control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1146"
  },
  {
    "text": "from reversing itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1149"
  },
  {
    "text": "but letting the style control reverse itself as it normally does. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1151"
  },
  {
    "text": "In UIKit, this works differently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1156"
  },
  {
    "text": "Here’s a toy application in Xcode designed to simulate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1158"
  },
  {
    "text": "that segmented control behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1162"
  },
  {
    "text": "I have two segmented controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1164"
  },
  {
    "text": "one that mimics the bold/italic/underline behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1166"
  },
  {
    "text": "and a second one that mimics the alignment control. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1169"
  },
  {
    "text": "The alignment control is selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1172"
  },
  {
    "text": "In the attribute inspector, you’ll find a menu labeled “Semantic.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1174"
  },
  {
    "text": "If you click on that menu, you get five choices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1179"
  },
  {
    "text": "This menu controls something called the semantic content attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1182"
  },
  {
    "text": "You use this to say what kind of control this is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1186"
  },
  {
    "text": "and the system uses that to determine if it reverses its appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1189"
  },
  {
    "text": "based on the UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1193"
  },
  {
    "text": "The default is “Unspecified,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1195"
  },
  {
    "text": "which causes the control to reverse its appearance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1197"
  },
  {
    "text": "\"Playback\" says the control is a media playback control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1200"
  },
  {
    "text": "or part of a group of playback controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1204"
  },
  {
    "text": "\"Spatial\" says the control is a spatial control or a part of a group of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1206"
  },
  {
    "text": "Spatial controls move things around in space in absolute directions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1211"
  },
  {
    "text": "And finally, you can force the control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1216"
  },
  {
    "text": "to always lay itself out left to right or right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1218"
  },
  {
    "text": "So the bold/italic/underline control reverses its segments for right to left ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1223"
  },
  {
    "text": "because its semantic content attribute is set to “Unspecified,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1227"
  },
  {
    "text": "and the alignment control doesn’t reverse its segments ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1231"
  },
  {
    "text": "because its semantic content attribute is set to “Spatial.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1235"
  },
  {
    "text": "The great thing about this is that it doesn’t just work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1239"
  },
  {
    "text": "for UISegmentedControl. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1241"
  },
  {
    "text": "All UIViews have a semantic content attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1243"
  },
  {
    "text": "and it controls all of that control’s right to left behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1246"
  },
  {
    "text": "For any standard UIKit view that has subcomponents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1250"
  },
  {
    "text": "the semantic content attribute will determine whether the positioning ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1253"
  },
  {
    "text": "of that view’s subcomponents reverses based on the UI language.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1256"
  },
  {
    "text": "In AppKit, you do this kind of thing differently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1262"
  },
  {
    "text": "For all NSControls, the Xcode attributes inspector ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1265"
  },
  {
    "text": "contains two menus marked “Layout” and “Mirror.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1268"
  },
  {
    "text": "The “Layout” menu corresponds ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1271"
  },
  {
    "text": "to the control’s userInterfaceLayoutDirection property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1273"
  },
  {
    "text": "which says whether the control should use left to right or right to left layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1277"
  },
  {
    "text": "You don’t normally change this when working in Interface Builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1281"
  },
  {
    "text": "Instead, you use the “Mirror” menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1284"
  },
  {
    "text": "Setting it to “Always” causes the userInterfaceLayoutDirection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1287"
  },
  {
    "text": "and thus the control’s layout, to be flipped when the nib is loaded ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1291"
  },
  {
    "text": "when the user’s UI language is right to left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1295"
  },
  {
    "text": "and setting it to “Never” defeats this behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1297"
  },
  {
    "text": "keeping the layout the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1300"
  },
  {
    "text": "You keep the layout of the alignment control the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1302"
  },
  {
    "text": "by setting this value to “Never”. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1305"
  },
  {
    "text": "If you’re not working in Interface Builder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1308"
  },
  {
    "text": "you accomplish the same thing in code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1309"
  },
  {
    "text": "by setting the control’s userInterfaceLayoutDirection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1312"
  },
  {
    "text": "back to left to right directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1314"
  },
  {
    "text": "userInterfaceLayoutDirection, by the way, is a property on NSView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1317"
  },
  {
    "text": "but appears in Interface Builder only on instances of NSControl, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1321"
  },
  {
    "text": "so if you want to reverse something that’s not an NSControl, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1325"
  },
  {
    "text": "you need code like we’re showing here.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1328"
  },
  {
    "text": "Before we move on, I want to talk about text a little more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1332"
  },
  {
    "text": "This is the “Set document password” dialog in iWork for the Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1335"
  },
  {
    "text": "In the Arabic version, you’ll see everything has reversed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1340"
  },
  {
    "text": "But notice what’s happened to the labels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1343"
  },
  {
    "text": "In English, they were right-aligned so that they’d be close ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1345"
  },
  {
    "text": "to the edit-text fields. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1348"
  },
  {
    "text": "In Arabic, they’re left-aligned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1349"
  },
  {
    "text": "In other words, you have the opposite of natural alignment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1352"
  },
  {
    "text": "trailing-edge alignment, if you will. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1355"
  },
  {
    "text": "Getting this layout in SwiftUI on the Mac is trivially easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1358"
  },
  {
    "text": "Just use a Form to gather the text fields together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1362"
  },
  {
    "text": "But this can get interesting if, as in our example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1365"
  },
  {
    "text": "one of the labels is multiple lines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1368"
  },
  {
    "text": "If we expand that last label out to be two lines, we get this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1371"
  },
  {
    "text": "The two one-line labels are correctly right-aligned, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1376"
  },
  {
    "text": "but the two-line label isn’t. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1379"
  },
  {
    "text": "The thing is, the bottom label really is right-aligned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1381"
  },
  {
    "text": "It’s just that its bounding box is right-aligned, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1384"
  },
  {
    "text": "not the individual lines of text within that bounding box. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1387"
  },
  {
    "text": "You fix this by adding a multilineTextAlignment modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1391"
  },
  {
    "text": "to the last label. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1395"
  },
  {
    "text": "Text alignment in SwiftUI only comes into play on text objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1397"
  },
  {
    "text": "that are more than one line long. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1401"
  },
  {
    "text": "For single-line text objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1403"
  },
  {
    "text": "their bounding box tightly encloses the text itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1405"
  },
  {
    "text": "and you align it by aligning the entire text object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1408"
  },
  {
    "text": "Also notice that whether you’re aligning the text’s bounding box or multiple lines ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1412"
  },
  {
    "text": "of text inside the bounding box, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1417"
  },
  {
    "text": "you have a choice of leading and trailing alignment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1419"
  },
  {
    "text": "which change meaning based on the user’s UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1421"
  },
  {
    "text": "To keep the alignment the same regardless of UI direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1425"
  },
  {
    "text": "you use an environment modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1428"
  },
  {
    "text": "to change the environment’s layout direction as we saw earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1430"
  },
  {
    "text": "In UIKit, text is naturally aligned by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1435"
  },
  {
    "text": "but you can change it to one of the absolute directions when necessary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1438"
  },
  {
    "text": "In Interface Builder, the control looks like this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1442"
  },
  {
    "text": "and corresponds to the textAlignment property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1445"
  },
  {
    "text": "on UILabel and UITextView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1448"
  },
  {
    "text": "The button on the far right with the dotted line ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1450"
  },
  {
    "text": "gives you natural, or leading-edge, alignment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1453"
  },
  {
    "text": "The alignment of the label ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1456"
  },
  {
    "text": "will follow the label’s semantic content attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1457"
  },
  {
    "text": "The other buttons give you fixed left, right, or center alignment ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1460"
  },
  {
    "text": "regardless of the UI direction or the label’s semantic content attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1464"
  },
  {
    "text": "There’s no built-in setting for trailing-edge alignment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1468"
  },
  {
    "text": "You have to do that in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1471"
  },
  {
    "text": "In AppKit, it’s a little different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1474"
  },
  {
    "text": "You still have the alignment control, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1476"
  },
  {
    "text": "and it works basically the same as in UIKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1478"
  },
  {
    "text": "but the way it interacts with userInterfaceLayoutDirection is different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1481"
  },
  {
    "text": "If you have “Mirror” set to “Automatically,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1484"
  },
  {
    "text": "and the system sets userInterfaceLayoutDirection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1487"
  },
  {
    "text": "to right to left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1489"
  },
  {
    "text": "the meanings of all the alignment settings reverse. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1491"
  },
  {
    "text": "So if “Mirror” is set to “Automatically,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1494"
  },
  {
    "text": "left alignment is really leading-edge alignment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1496"
  },
  {
    "text": "and right alignment is really trailing-edge alignment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1499"
  },
  {
    "text": "So we’ve talked about how all of the standard UI widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1503"
  },
  {
    "text": "automatically reverse their layouts to match the user’s writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1506"
  },
  {
    "text": "but it’s fairly easy to prevent that when necessary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1510"
  },
  {
    "text": "This extends to arranging individual UI widgets on the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1513"
  },
  {
    "text": "If you’re using one of the standard views or view controllers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1518"
  },
  {
    "text": "that handles the positioning of their subviews, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1521"
  },
  {
    "text": "all of them automatically reverse their layouts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1523"
  },
  {
    "text": "when necessary without you having to do anything. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1526"
  },
  {
    "text": "Table views and collection views handle scrolling correctly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1529"
  },
  {
    "text": "in right to left languages too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1532"
  },
  {
    "text": "UINavigationController automatically changes the directions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1534"
  },
  {
    "text": "of its segue animations to reflect the user’s writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1538"
  },
  {
    "text": "and changes the “back” button to match it as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1542"
  },
  {
    "text": "And UIPageViewController automatically reverses the paging direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1545"
  },
  {
    "text": "and the meanings of the swipe gestures automatically as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1549"
  },
  {
    "text": "You generally won’t want to override these things, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1553"
  },
  {
    "text": "except for when you’re using a stack view to position child views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1555"
  },
  {
    "text": "but all of the views honor their semantic content attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1559"
  },
  {
    "text": "and use it to tell them how to lay out their subviews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1562"
  },
  {
    "text": "The same goes for the standard AppKit views, and again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1566"
  },
  {
    "text": "table and collection views handle right to left scrolling as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1569"
  },
  {
    "text": "The views all honor their userInterfaceLayoutDirection property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1573"
  },
  {
    "text": "in determining how to lay out their subviews, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1576"
  },
  {
    "text": "although Interface Builder doesn’t let you set it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1579"
  },
  {
    "text": "You have to do that in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1581"
  },
  {
    "text": "The standard SwiftUI views also reflect ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1584"
  },
  {
    "text": "the environment’s layoutDirection property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1586"
  },
  {
    "text": "If you’re using Auto Layout instead of stack and grid views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1592"
  },
  {
    "text": "to lay out your view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1596"
  },
  {
    "text": "Auto Layout also automatically reverses things ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1597"
  },
  {
    "text": "to account for the UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1599"
  },
  {
    "text": "If you have horizontal constraints, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1601"
  },
  {
    "text": "you’ll see that they automatically connect things ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1604"
  },
  {
    "text": "to the leading and trailing edges, and as we’ve seen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1606"
  },
  {
    "text": "\"leading\" and “trailing” have different meanings depending on the UI direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1609"
  },
  {
    "text": "You can set Auto Layout constraints to absolute left and right directions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1613"
  },
  {
    "text": "though, if you need to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1617"
  },
  {
    "text": "You do this by clicking on the direction for one side of the constraint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1618"
  },
  {
    "text": "and turning off “Respect language direction” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1622"
  },
  {
    "text": "in the menu that pops up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1625"
  },
  {
    "text": "That’ll change the direction of both ends of the constraint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1626"
  },
  {
    "text": "from “leading” and “trailing” to “left” and “right.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1629"
  },
  {
    "text": "There are a lot of different ways to set up Auto Layout constraints in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1633"
  },
  {
    "text": "Here is one of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1637"
  },
  {
    "text": "Pretty much however you do it, the thing to remember is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1639"
  },
  {
    "text": "is to use \"leading\" and “trailing” instead of “left” and “right,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1641"
  },
  {
    "text": "except in the comparatively rare situations where you really want ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1644"
  },
  {
    "text": "the same layout orientation regardless of the UI language’s writing direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1648"
  },
  {
    "text": "Okay, that was a lot to take in, so let's take a breath. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1654"
  },
  {
    "text": "The main takeaway is that we do most of the work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1657"
  },
  {
    "text": "of handling right to left languages for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1660"
  },
  {
    "text": "and that when you need to override it, there are ways to do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1662"
  },
  {
    "text": "Let's take one more look at our terminology slide. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1665"
  },
  {
    "text": "Remember that \"left\" and \"right\" are always left and right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1668"
  },
  {
    "text": "and that the other terms reverse their meanings ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1672"
  },
  {
    "text": "depending on the overall UI direction.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1674"
  },
  {
    "text": "Before we wrap up, let’s take a look at one more important issue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1678"
  },
  {
    "text": "and that’s how to display numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1682"
  },
  {
    "text": "It’s not strictly a right to left issue, but for many developers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1684"
  },
  {
    "text": "Arabic is the first language they’ll localize for ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1687"
  },
  {
    "text": "that uses different digit characters than the ones used in English. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1690"
  },
  {
    "text": "Here’s what those digits look like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1695"
  },
  {
    "text": "There are lots of different naming conventions for the digits, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1697"
  },
  {
    "text": "but I'll call the ones used with most European languages “Latin” digits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1700"
  },
  {
    "text": "and the ones used with Arabic “Arabic-Indic” digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1704"
  },
  {
    "text": "There are other languages that have their own digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1707"
  },
  {
    "text": "These are the Devanagari digits used with Hindi; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1710"
  },
  {
    "text": "Hindi is the other common language that uses different digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1713"
  },
  {
    "text": "One important thing to keep in mind is that neither Arabic ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1716"
  },
  {
    "text": "nor Hindi always uses their native digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1720"
  },
  {
    "text": "For Arabic, it depends on the country, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1723"
  },
  {
    "text": "with some, such as Saudi Arabia, using native digits and others, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1725"
  },
  {
    "text": "such as the United Arab Emirates, using Latin digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1730"
  },
  {
    "text": "Individual users can also choose their preferred digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1733"
  },
  {
    "text": "For Hindi, we use Latin digits by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1737"
  },
  {
    "text": "but users can elect to use native digits instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1740"
  },
  {
    "text": "You already know that constructing UI strings like this is a bad idea. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1745"
  },
  {
    "text": "The string is hard-coded and can’t be translated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1749"
  },
  {
    "text": "the message doesn’t change to handle plurals, and so forth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1752"
  },
  {
    "text": "But another reason this isn’t good is that the value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1755"
  },
  {
    "text": "of “peopleInChat” will always get rendered with Latin digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1758"
  },
  {
    "text": "You probably also already know that the solution to that is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1763"
  },
  {
    "text": "to use the “localized” init method on String, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1766"
  },
  {
    "text": "which will look up the actual string in your application’s bundle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1769"
  },
  {
    "text": "and handle plurals properly if you have a stringsdict file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1772"
  },
  {
    "text": "The great news is that it also handles numbers correctly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1776"
  },
  {
    "text": "The value of the “peopleInChat” interpolation here will be rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1779"
  },
  {
    "text": "with the correct localized digits for the user’s locale and preferences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1783"
  },
  {
    "text": "This also works right with text views in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1787"
  },
  {
    "text": "The text views initializer will also render any string interpolations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1790"
  },
  {
    "text": "with properly localized digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1794"
  },
  {
    "text": "Always use String(localized:) when constructing user-visible strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1797"
  },
  {
    "text": "Many of the other APIs on String that can format numbers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1801"
  },
  {
    "text": "including +stringWithFormat: and the String init function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1805"
  },
  {
    "text": "that takes a number, always use Latin digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1808"
  },
  {
    "text": "One wrinkle to be aware of is static strings that contain numerals, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1812"
  },
  {
    "text": "such as this one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1816"
  },
  {
    "text": "What’s the big deal? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1817"
  },
  {
    "text": "You send it off to the translators, they translate it, and you get this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1819"
  },
  {
    "text": "This is correct in a lot of places, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1823"
  },
  {
    "text": "but in Saudi Arabia and some other countries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1825"
  },
  {
    "text": "you want to see this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1827"
  },
  {
    "text": ". The text is the same except for the character used for the 3. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1829"
  },
  {
    "text": "You could, of course, have separate localizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1833"
  },
  {
    "text": "for the Arabic-speaking locales that use Arabic-Indic digits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1835"
  },
  {
    "text": "and the ones that use Latin digits, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1838"
  },
  {
    "text": "but nobody does that, and it’d be wasteful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1840"
  },
  {
    "text": "Worse, in both Arabic and Hindi, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1843"
  },
  {
    "text": "the user can choose the digits they want to use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1845"
  },
  {
    "text": "so you’d be having to choose a localization ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1848"
  },
  {
    "text": "based on the user’s preferences, not just on their locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1850"
  },
  {
    "text": "The solution is to still just have one Arabic or Hindi localization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1855"
  },
  {
    "text": "but to substitute the number in at run time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1859"
  },
  {
    "text": "even though you know the value at compile time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1862"
  },
  {
    "text": "In Swift, you can just use a string interpolation to do this.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1864"
  },
  {
    "text": "If you’ve got other elements that travel with a number, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1870"
  },
  {
    "text": "their placement relative to the number can also be challenging. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1872"
  },
  {
    "text": "It isn’t even the same for all right to left languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1876"
  },
  {
    "text": "Notice that the minus sign and the percent sign are ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1879"
  },
  {
    "text": "on different sides of the number in Arabic and Hebrew. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1882"
  },
  {
    "text": "In fact, it doesn’t have to be a right to left language at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1885"
  },
  {
    "text": "Notice that in Turkish, which is a left to right language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1888"
  },
  {
    "text": "the percent sign also goes on the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1891"
  },
  {
    "text": "And, of course, keep in mind that if you’re using native Arabic digits, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1894"
  },
  {
    "text": "they use a completely different percent symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1897"
  },
  {
    "text": "In other words, you really don’t want to do this kind of thing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1901"
  },
  {
    "text": "where you’re appending the percent sign, or currency sign, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1904"
  },
  {
    "text": "unit abbreviation, or whatever yourself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1907"
  },
  {
    "text": "Instead, use a number formatter to add the percent sign, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1911"
  },
  {
    "text": "or currency symbol, or whatever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1914"
  },
  {
    "text": "In Swift, this is easy to do with the formatted() method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1916"
  },
  {
    "text": "on all the numeric types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1919"
  },
  {
    "text": "If it’s part of a larger string, as in this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1921"
  },
  {
    "text": "String(localized:) will also make sure that the formatted number-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1924"
  },
  {
    "text": "or anything else substituted into the string at runtime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1928"
  },
  {
    "text": "including other strings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1931"
  },
  {
    "text": "is surrounded with markup that’ll keep the writing directions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1932"
  },
  {
    "text": "of the formatted number and the surrounding message ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1935"
  },
  {
    "text": "from messing each other up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1938"
  },
  {
    "text": "Finally, I want to leave you with one tip for testing your app to make sure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1941"
  },
  {
    "text": "that you’re doing the right thing for right to left.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1945"
  },
  {
    "text": "You don’t have to have Arabic or Hebrew localizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1948"
  },
  {
    "text": "in your executable to test your app in right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1951"
  },
  {
    "text": "You can actually test right to left behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1954"
  },
  {
    "text": "in your development language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1956"
  },
  {
    "text": "To do this, bring up the scheme editor in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1958"
  },
  {
    "text": "Now go to the Options tab and look for the “App Language” menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1962"
  },
  {
    "text": "At the bottom of this menu are a bunch of “pseudolanguage” options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1966"
  },
  {
    "text": "These are fake languages that transform your UI in various ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1970"
  },
  {
    "text": "to allow you to check for localization problems ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1974"
  },
  {
    "text": "without actual localizations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1976"
  },
  {
    "text": "Pick the “Right-to-Left Pseudolanguage” option and click Run, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1979"
  },
  {
    "text": "and your app will still be in English or whatever your development language is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1982"
  },
  {
    "text": "but the UI will all have been flipped for right to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1986"
  },
  {
    "text": "And that’s all I have. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1990"
  },
  {
    "text": "Localizing for right-to-left languages involves attention ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1991"
  },
  {
    "text": "to some issues relating to the change in writing direction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1994"
  },
  {
    "text": "but the system does most of the heavy lifting for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=1998"
  },
  {
    "text": "There are cases, usually around absolute directions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2001"
  },
  {
    "text": "where you may want to opt of this behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2004"
  },
  {
    "text": "and that’s always possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2006"
  },
  {
    "text": "And remember that not all languages use Latin digits to render numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2008"
  },
  {
    "text": "Keep these things in mind, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2013"
  },
  {
    "text": "and it shouldn’t be hard to get things right ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2015"
  },
  {
    "text": "to left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2017"
  },
  {
    "text": "",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10107/?time=2018"
  }
]