[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=3"
  },
  {
    "text": "Hello! My name is Konrad ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=9"
  },
  {
    "text": "and I'm an engineer on the Swift team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=11"
  },
  {
    "text": "Welcome to \"Meet distributed actors in Swift.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=13"
  },
  {
    "text": "In this session, we'll learn how you can take ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=15"
  },
  {
    "text": "your Swift concurrency-based apps beyond a single process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=17"
  },
  {
    "text": "Swift actors were designed to protect you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=21"
  },
  {
    "text": "from low-level data races in the same process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=23"
  },
  {
    "text": "They do this by compile time enforced actor isolation checks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=26"
  },
  {
    "text": "Distributed actors refine the same conceptual actor model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=30"
  },
  {
    "text": "and extend it to multiple processes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=33"
  },
  {
    "text": "such as multiple devices or servers in a cluster. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=36"
  },
  {
    "text": "So just in case you are not yet familiar with Swift actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=39"
  },
  {
    "text": "we recommend you first watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=42"
  },
  {
    "text": "the \"Protect mutable state with Swift actors\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=43"
  },
  {
    "text": "from WWDC 2021. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=46"
  },
  {
    "text": "The app we'll work on during this session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=49"
  },
  {
    "text": "is a tic-tac-toe-style game I've been developing recently: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=51"
  },
  {
    "text": "Tic Tac Fish! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=54"
  },
  {
    "text": "The fun idea here is that you can select ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=56"
  },
  {
    "text": "a team you're playing for, which then corresponds to emojis ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=59"
  },
  {
    "text": "that will be used to mark your moves as you play the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=61"
  },
  {
    "text": "Then, as you mark your moves on the field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=65"
  },
  {
    "text": "emojis from your team will be placed on the field ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=67"
  },
  {
    "text": "until one of the players wins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=70"
  },
  {
    "text": "Right now, I have only implemented an offline mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=72"
  },
  {
    "text": "where I can play against a bot opponent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=75"
  },
  {
    "text": "but I'd like to introduce a few multiplayer modes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=78"
  },
  {
    "text": "to take my app to the next level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=81"
  },
  {
    "text": "I'm already using actors in this app to manage concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=83"
  },
  {
    "text": "and model players involved in the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=86"
  },
  {
    "text": "Let's see what it takes to migrate those player actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=88"
  },
  {
    "text": "to different processes, and how distributed actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=91"
  },
  {
    "text": "can help me do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=94"
  },
  {
    "text": "Before we jump to the code, let us take a step back ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=97"
  },
  {
    "text": "and visualize why actors are so well-suited ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=100"
  },
  {
    "text": "for building concurrent and distributed applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=102"
  },
  {
    "text": "Throughout WWDC sessions, you may hear us use the term ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=106"
  },
  {
    "text": "\"sea of concurrency\" when talking about actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=109"
  },
  {
    "text": "This is because it's a great mental model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=112"
  },
  {
    "text": "to think about them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=114"
  },
  {
    "text": "Each actor is its own island in the sea of concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=116"
  },
  {
    "text": "and instead of accessing each other's islands directly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=120"
  },
  {
    "text": "they exchange messages between them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=122"
  },
  {
    "text": "In Swift, sending those messages across islands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=125"
  },
  {
    "text": "is implemented as asynchronous method calls and async/await. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=128"
  },
  {
    "text": "This, in combination with actor state isolation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=132"
  },
  {
    "text": "allows the compiler to guarantee ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=136"
  },
  {
    "text": "that once an actor-based program compiles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=138"
  },
  {
    "text": "it is free from low-level data races. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=140"
  },
  {
    "text": "Now let us now take this same conceptual model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=143"
  },
  {
    "text": "and apply it to our game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=146"
  },
  {
    "text": "reimagined as a distributed system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=148"
  },
  {
    "text": "We can think of each device, node in a cluster, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=150"
  },
  {
    "text": "or process of an operating system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=153"
  },
  {
    "text": "as if it were an independent sea of concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=154"
  },
  {
    "text": "here marked as the smaller dark rectangles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=157"
  },
  {
    "text": "Within those, we were able to synchronize information ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=159"
  },
  {
    "text": "rather easily since they were still ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=162"
  },
  {
    "text": "sharing the same memory space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=164"
  },
  {
    "text": "And while the same concept of message passing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=166"
  },
  {
    "text": "works perfectly well for concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=168"
  },
  {
    "text": "as well as distribution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=170"
  },
  {
    "text": "there are a few more restrictions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=172"
  },
  {
    "text": "distribution needs to put into place for it all to work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=173"
  },
  {
    "text": "This is where distributed actors come into the picture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=177"
  },
  {
    "text": "By using distributed actors, we're able to establish ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=180"
  },
  {
    "text": "a channel between two processes and send messages between them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=183"
  },
  {
    "text": "In other words, if Swift actors were islands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=187"
  },
  {
    "text": "in the sea of concurrency, distributed actors are the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=191"
  },
  {
    "text": "in the vast sea of distributed systems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=195"
  },
  {
    "text": "From a programming model, not much has really changed -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=197"
  },
  {
    "text": "actors still isolate their state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=201"
  },
  {
    "text": "and still can only communicate using asynchronous messages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=203"
  },
  {
    "text": "We could even have more distributed actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=207"
  },
  {
    "text": "in the same process, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=209"
  },
  {
    "text": "and for all intents and purposes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=211"
  },
  {
    "text": "they are as useful as local actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=213"
  },
  {
    "text": "with the difference that they're also ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=215"
  },
  {
    "text": "to participate in remote interactions whenever necessary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=217"
  },
  {
    "text": "This ability to be potentially remote without having to change ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=221"
  },
  {
    "text": "how we interact with such distributed actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=224"
  },
  {
    "text": "is called \"location transparency.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=227"
  },
  {
    "text": "This means that regardless ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=231"
  },
  {
    "text": "where a distributed actor is located, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=232"
  },
  {
    "text": "we can interact with it the same way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=235"
  },
  {
    "text": "This is not only fantastic for testing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=237"
  },
  {
    "text": "as we execute the same logic in local actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=239"
  },
  {
    "text": "but also enables us to transparently move our actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=242"
  },
  {
    "text": "to wherever they should be located, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=245"
  },
  {
    "text": "without having to change their implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=247"
  },
  {
    "text": "OK, I think we're ready to look at some code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=250"
  },
  {
    "text": "and convert our first actor to a distributed actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=252"
  },
  {
    "text": "First, let's have a quick look at the general game UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=255"
  },
  {
    "text": "and how it interacts with my player actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=259"
  },
  {
    "text": "The view is a pretty standard SwiftUI code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=261"
  },
  {
    "text": "and I have a few text and button elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=264"
  },
  {
    "text": "representing the game field. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=266"
  },
  {
    "text": "As a user clicks a GameCell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=268"
  },
  {
    "text": "we ask the player actor to generate a move ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=270"
  },
  {
    "text": "and update the view models that power the UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=272"
  },
  {
    "text": "Thanks to Swift concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=276"
  },
  {
    "text": "all those updates are thread-safe and well-behaved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=277"
  },
  {
    "text": "Currently, the actor representing user input ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=280"
  },
  {
    "text": "is implemented as an offline player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=283"
  },
  {
    "text": "Let's have a look at it next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=285"
  },
  {
    "text": "This actor encapsulates some state that allows it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=287"
  },
  {
    "text": "to generate game moves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=290"
  },
  {
    "text": "Specifically, it needs to track how many moves it already made ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=292"
  },
  {
    "text": "and what team it is playing for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=295"
  },
  {
    "text": "Because each team has a number of emojis ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=298"
  },
  {
    "text": "to chose from for each move, use the number of moves made ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=299"
  },
  {
    "text": "to select the emoji character ID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=302"
  },
  {
    "text": "I also need to update the model once a move has been created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=305"
  },
  {
    "text": "The model is a MainActor isolated class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=309"
  },
  {
    "text": "so mutations of it are thread-safe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=311"
  },
  {
    "text": "I do need to use \"await\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=313"
  },
  {
    "text": "as I make the userMadeMove call, though. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=315"
  },
  {
    "text": "Lastly, the offline player also declares a method that is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=317"
  },
  {
    "text": "going to be called whenever the opponent has made a move. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=320"
  },
  {
    "text": "The only thing we need to do here is update the view model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=324"
  },
  {
    "text": "which will make the game field active again ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=327"
  },
  {
    "text": "so the human player can select their move, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=329"
  },
  {
    "text": "and the cycle continues until the game ends. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=331"
  },
  {
    "text": "Our bot player is also represented using an actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=334"
  },
  {
    "text": "Its implementation is actually quite a bit simpler ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=337"
  },
  {
    "text": "than the offline player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=339"
  },
  {
    "text": "since it does not have to worry about updating the view model; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=341"
  },
  {
    "text": "it just keeps track of the GameState ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=344"
  },
  {
    "text": "and generates game moves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=346"
  },
  {
    "text": "Since the bot player is a bit simpler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=347"
  },
  {
    "text": "I think it's a good one to start our conversion ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=349"
  },
  {
    "text": "to distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=351"
  },
  {
    "text": "OK, I think we're ready to look at some code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=353"
  },
  {
    "text": "and convert our first actor to a distributed actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=355"
  },
  {
    "text": "The first step towards our distributed Tic Tac Fish game ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=359"
  },
  {
    "text": "will be to convert the BotPlayer type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=361"
  },
  {
    "text": "to a distributed actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=363"
  },
  {
    "text": "while still only using it locally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=364"
  },
  {
    "text": "Let's open Xcode and see how we can do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=367"
  },
  {
    "text": "In order to declare a distributed actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=370"
  },
  {
    "text": "I'll need to import the new distributed module, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=372"
  },
  {
    "text": "which we introduced in Swift 5.7. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=374"
  },
  {
    "text": "This module contains all the necessary types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=377"
  },
  {
    "text": "I'm going to need to declare and use distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=379"
  },
  {
    "text": "I can now add the distributed keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=383"
  },
  {
    "text": "in front of the BotPlayer actor declaration, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=385"
  },
  {
    "text": "This will cause the actor to automatically conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=388"
  },
  {
    "text": "to the DistributedActor protocol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=391"
  },
  {
    "text": "and enable a number of additional compile time checks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=393"
  },
  {
    "text": "Let's see what kind of errors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=396"
  },
  {
    "text": "the compiler will ask us to fix now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=397"
  },
  {
    "text": "The compiler helpfully tells us that the BotPlayer does not ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=399"
  },
  {
    "text": "declare an ActorSystem it can be used with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=402"
  },
  {
    "text": "As distributed actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=404"
  },
  {
    "text": "always belong to some distributed actor system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=405"
  },
  {
    "text": "which handles all the serialization and networking ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=408"
  },
  {
    "text": "necessary to perform remote calls; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=410"
  },
  {
    "text": "we need to declare what type of actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=412"
  },
  {
    "text": "this actor is intended to be used with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=415"
  },
  {
    "text": "Since, for now, my only goal is to have the bot player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=417"
  },
  {
    "text": "pass all the distributed isolation checks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=420"
  },
  {
    "text": "without actually running it on a remote host, I can use the ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=423"
  },
  {
    "text": "LocalTestingDistributedActor System ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=426"
  },
  {
    "text": "that comes with the Distributed module. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=428"
  },
  {
    "text": "I can tell the compiler ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=430"
  },
  {
    "text": "about the actor system we're going to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=431"
  },
  {
    "text": "by either declaring a module-wide ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=434"
  },
  {
    "text": "DefaultDistributedActorSystem typealias, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=435"
  },
  {
    "text": "or an ActorSystem typealias in the body of the specific actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=438"
  },
  {
    "text": "The latter bit is a bit more specific, so let's go with that.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=442"
  },
  {
    "text": "The next error is about the \"id\" property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=452"
  },
  {
    "text": "that I had previously implemented manually ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=454"
  },
  {
    "text": "in order to conform to the Identifiable protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=456"
  },
  {
    "text": "that both my player actors need to conform to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=459"
  },
  {
    "text": "The error now says that the ID property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=461"
  },
  {
    "text": "cannot be defined explicitly as it conflicts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=464"
  },
  {
    "text": "with a distributed actor synthesized property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=467"
  },
  {
    "text": "IDs are a crucial piece of distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=470"
  },
  {
    "text": "They are used to uniquely identify an actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=473"
  },
  {
    "text": "in the entire distributed actor system that it is part of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=476"
  },
  {
    "text": "They are assigned by the distributed actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=480"
  },
  {
    "text": "as the actor is initialized, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=482"
  },
  {
    "text": "and later managed by that system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=484"
  },
  {
    "text": "As such, we cannot declare or assign ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=486"
  },
  {
    "text": "the ID property manually -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=488"
  },
  {
    "text": "the actor system will be doing this for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=490"
  },
  {
    "text": "In other words, I can simply leave it to the actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=492"
  },
  {
    "text": "and remove my manually declared ID property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=495"
  },
  {
    "text": "The last error we need to deal with here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=498"
  },
  {
    "text": "is the distributed actor's initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=500"
  },
  {
    "text": "The compiler says that the actorSystem property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=503"
  },
  {
    "text": "has not been initialized before use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=506"
  },
  {
    "text": "This is another compiler synthesized property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=508"
  },
  {
    "text": "that is part of every distributed actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=511"
  },
  {
    "text": "Not only do we need to declare the type of actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=513"
  },
  {
    "text": "we want to use, but we also need to initialize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=516"
  },
  {
    "text": "the synthesized actorSystem property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=518"
  },
  {
    "text": "with some concrete actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=520"
  },
  {
    "text": "Generally, the right thing to do here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=523"
  },
  {
    "text": "is to accept an actor system in the initializer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=525"
  },
  {
    "text": "and pass it through to the property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=527"
  },
  {
    "text": "This way, I could pass in a different actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=529"
  },
  {
    "text": "implementation in my tests to facilitate easy unit testing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=532"
  },
  {
    "text": "We'll also have to pass an instance whenever we create ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=536"
  },
  {
    "text": "a new bot player, so let's do this now.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=539"
  },
  {
    "text": "Awesome! We're done with all the declaration side errors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=551"
  },
  {
    "text": "But there's still some call-site errors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=554"
  },
  {
    "text": "we need to address though. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=555"
  },
  {
    "text": "It seems that only distributed methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=558"
  },
  {
    "text": "can be called on potentially remote distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=560"
  },
  {
    "text": "This is similar to annotating only some actors in your system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=563"
  },
  {
    "text": "as distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=567"
  },
  {
    "text": "Not every method on a distributed actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=569"
  },
  {
    "text": "is necessarily designed to be called remotely. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=571"
  },
  {
    "text": "They can have small helper functions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=574"
  },
  {
    "text": "or functions which assume the caller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=576"
  },
  {
    "text": "has already been authenticated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=578"
  },
  {
    "text": "This is why Swift asks you to be explicit about ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=580"
  },
  {
    "text": "the distributed API surface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=583"
  },
  {
    "text": "you want to expose to remote callers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=585"
  },
  {
    "text": "Thankfully, this is also easily fixed by just adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=587"
  },
  {
    "text": "the distributed keyword to those functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=590"
  },
  {
    "text": "As both makeMove and opponentMoved methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=593"
  },
  {
    "text": "are intended to be called remotely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=595"
  },
  {
    "text": "let me add the distributed keyword to them to both of them.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=597"
  },
  {
    "text": "OK! With that, there's only one last thing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=606"
  },
  {
    "text": "we need to take care of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=609"
  },
  {
    "text": "As distributed method calls can cross network boundaries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=611"
  },
  {
    "text": "we need to ensure that all of their parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=614"
  },
  {
    "text": "and return values conform to the serialization requirement ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=616"
  },
  {
    "text": "of the actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=619"
  },
  {
    "text": "In our case, the actor system is using Codable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=621"
  },
  {
    "text": "Swift's native serialization mechanism. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=624"
  },
  {
    "text": "Specifically, the compiler tells us that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=626"
  },
  {
    "text": "\"Result type GameMove does not conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=628"
  },
  {
    "text": "to the serialization requirement Codable.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=631"
  },
  {
    "text": "Let me have a quick look at the GameMove type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=634"
  },
  {
    "text": "Luckily, it seems that it's a clean little data type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=637"
  },
  {
    "text": "that I can easily make Codable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=640"
  },
  {
    "text": "by just adding the necessary conformance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=642"
  },
  {
    "text": "The Swift compiler will synthesize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=644"
  },
  {
    "text": "the necessary Codable implementation for me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=646"
  },
  {
    "text": "And with that, we're done! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=649"
  },
  {
    "text": "I can check the game runs as expected.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=650"
  },
  {
    "text": "OK, a point for team fish! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=655"
  },
  {
    "text": "And although the bot player still executing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=657"
  },
  {
    "text": "on the same local device, we have already paved the way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=659"
  },
  {
    "text": "for the exciting next step. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=662"
  },
  {
    "text": "In this step, we'll actually reap the benefits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=664"
  },
  {
    "text": "of the bot player's newly gained location transparency powers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=666"
  },
  {
    "text": "I have already prepared a WebSocket-based ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=670"
  },
  {
    "text": "sample actor system that we can use for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=672"
  },
  {
    "text": "By making use of this actor system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=675"
  },
  {
    "text": "we'll be able to move our bot player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=677"
  },
  {
    "text": "to a server-side Swift application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=678"
  },
  {
    "text": "and resolve a remote reference to it from our mobile game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=680"
  },
  {
    "text": "As far as the actor is concerned, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=684"
  },
  {
    "text": "we only need to change the declared ActorSystem ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=686"
  },
  {
    "text": "from the LocalTesting DistributedActor System ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=688"
  },
  {
    "text": "to the SampleWebSocketActorSystem ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=691"
  },
  {
    "text": "that I prepared for the sample app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=694"
  },
  {
    "text": "The rest of the actor code remains the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=697"
  },
  {
    "text": "Next, let us resolve a remote bot player reference, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=700"
  },
  {
    "text": "rather than creating one locally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=703"
  },
  {
    "text": "It is worth keeping in mind that the terms \"local\" and \"remote\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=705"
  },
  {
    "text": "are a matter of perspective when it comes to distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=709"
  },
  {
    "text": "For every remote reference, there is some corresponding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=712"
  },
  {
    "text": "local instance on some other node ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=715"
  },
  {
    "text": "in the distributed actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=717"
  },
  {
    "text": "Creating a local instance of a distributed actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=719"
  },
  {
    "text": "is performed much the same way as any other Swift object: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=721"
  },
  {
    "text": "by calling its initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=725"
  },
  {
    "text": "Obtaining a remote reference to a distributed actor, however, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=726"
  },
  {
    "text": "follows a slightly different pattern. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=730"
  },
  {
    "text": "Instead of creating an actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=732"
  },
  {
    "text": "we will attempt to resolve an actor ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=734"
  },
  {
    "text": "using a concrete actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=737"
  },
  {
    "text": "The static resolve method allows us to ask an actor system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=739"
  },
  {
    "text": "to attempt to give us an existing actor instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=742"
  },
  {
    "text": "for an actor with that ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=745"
  },
  {
    "text": "or, return a remote reference to an actor identified by it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=747"
  },
  {
    "text": "Actor systems should not perform actual remote lookups ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=751"
  },
  {
    "text": "when resolving identifiers because as you can see, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=753"
  },
  {
    "text": "the resolve method is not asynchronous, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=756"
  },
  {
    "text": "and therefore should return quickly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=758"
  },
  {
    "text": "and not perform any networking ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=760"
  },
  {
    "text": "or otherwise blocking operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=762"
  },
  {
    "text": "If an identity looks valid, and seems to be pointing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=764"
  },
  {
    "text": "at a valid remote location, systems shall assume ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=767"
  },
  {
    "text": "that such actor exists and return a remote reference to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=770"
  },
  {
    "text": "Keep in mind that at the time of resolving an ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=773"
  },
  {
    "text": "the actual instance on the remote system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=777"
  },
  {
    "text": "may not even exist yet! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=780"
  },
  {
    "text": "For example, here we're making up a random identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=781"
  },
  {
    "text": "for an opponent bot player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=784"
  },
  {
    "text": "that should be dedicated to playing a game with us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=785"
  },
  {
    "text": "This bot does not exist yet, but it will be created ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=788"
  },
  {
    "text": "on the server-side system as the first message ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=791"
  },
  {
    "text": "designated to this ID is received. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=793"
  },
  {
    "text": "Now moving on to a server-side Swift application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=796"
  },
  {
    "text": "Thanks to the sample WebSocket actor system I prepared, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=799"
  },
  {
    "text": "implementing that will be a breeze. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=802"
  },
  {
    "text": "First, we create the WebSocket actor system in server mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=804"
  },
  {
    "text": "which makes it bind and listen to the port ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=808"
  },
  {
    "text": "rather than connect to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=810"
  },
  {
    "text": "And we have the app wait until the system is terminated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=812"
  },
  {
    "text": "Next, we'll somehow need to handle the pattern ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=816"
  },
  {
    "text": "of creating actors on demand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=818"
  },
  {
    "text": "as we receive messages addressed to IDs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=820"
  },
  {
    "text": "that are not yet assigned any actor instances. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=823"
  },
  {
    "text": "Generally, the actor system will receive incoming messages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=826"
  },
  {
    "text": "attempt to resolve their recipient IDs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=829"
  },
  {
    "text": "in order locate a local distributed actor instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=832"
  },
  {
    "text": "and then execute a remote call on the located actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=835"
  },
  {
    "text": "As we just discussed though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=839"
  },
  {
    "text": "our bot player IDs are literally made up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=841"
  },
  {
    "text": "so the system can't possibly know about them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=843"
  },
  {
    "text": "and even less so create the right type of actor by itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=847"
  },
  {
    "text": "Thankfully, our sample actor system implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=851"
  },
  {
    "text": "has just the right pattern prepared for us: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=854"
  },
  {
    "text": "on-demand actor creation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=856"
  },
  {
    "text": "Please note here that this is only a pattern, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=858"
  },
  {
    "text": "and not something built in or provided by ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=861"
  },
  {
    "text": "the distributed actor module. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=862"
  },
  {
    "text": "It is, however, a great example of how flexible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=865"
  },
  {
    "text": "and powerful actor system implementations can be. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=867"
  },
  {
    "text": "A system can offer various patterns ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=870"
  },
  {
    "text": "and make complex tasks simple to deal with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=872"
  },
  {
    "text": "Using this pattern, the actor system attempts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=876"
  },
  {
    "text": "to resolve a local actor for all incoming IDs as usual. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=878"
  },
  {
    "text": "However, when it fails to find an existing actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=882"
  },
  {
    "text": "it attempts to resolveCreateOnDemand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=885"
  },
  {
    "text": "Since we are in control of both our client code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=887"
  },
  {
    "text": "making up the IDs and the piece of server code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=890"
  },
  {
    "text": "we can help the actor system out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=893"
  },
  {
    "text": "by creating the necessary actors on demand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=895"
  },
  {
    "text": "Since the bot identifiers we have been making up ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=898"
  },
  {
    "text": "on the client are using some recognizable naming scheme -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=900"
  },
  {
    "text": "like adding tags to the ActorIdentity ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=904"
  },
  {
    "text": "or just using some recognizable names -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=906"
  },
  {
    "text": "we can detect those IDs and create a new bot opponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=909"
  },
  {
    "text": "for every message that does not have one active yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=912"
  },
  {
    "text": "We'll only create a new bot player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=915"
  },
  {
    "text": "for the first message designated to it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=917"
  },
  {
    "text": "as subsequent remote calls ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=919"
  },
  {
    "text": "will simply resolve the existing instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=921"
  },
  {
    "text": "And that's all there is to it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=924"
  },
  {
    "text": "Our server implementation is complete ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=925"
  },
  {
    "text": "and we can now play a game with our remote bot player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=927"
  },
  {
    "text": "We can run the server from the command line using Swift run, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=930"
  },
  {
    "text": "or using Xcode and selecting the server scheme ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=934"
  },
  {
    "text": "and clicking Run as usual. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=937"
  },
  {
    "text": "As we're done making our first move, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=939"
  },
  {
    "text": "we ask the bot player to do the same by calling makeMove ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=941"
  },
  {
    "text": "on the remote player reference we have created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=944"
  },
  {
    "text": "This triggers a resolve in the server-side system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=946"
  },
  {
    "text": "It can't find an existing bot for this ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=949"
  },
  {
    "text": "so it attempts and succeeds, creating a bot on demand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=952"
  },
  {
    "text": "The bot receives a makeMove call, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=955"
  },
  {
    "text": "and replies with the GameMove it generated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=958"
  },
  {
    "text": "That was pretty great already! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=961"
  },
  {
    "text": "While we did have to do some up-front work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=963"
  },
  {
    "text": "to convert our bot player to a distributed actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=965"
  },
  {
    "text": "actually moving it to the remote system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=967"
  },
  {
    "text": "was pretty straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=969"
  },
  {
    "text": "And we didn't have to deal with any networking ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=971"
  },
  {
    "text": "or serialization implementation details at all! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=973"
  },
  {
    "text": "All the heavy lifting was done for us ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=976"
  },
  {
    "text": "by the distributed actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=978"
  },
  {
    "text": "And while there aren't many hardened ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=979"
  },
  {
    "text": "feature-complete implementations available just yet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=981"
  },
  {
    "text": "this ease of going distributed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=984"
  },
  {
    "text": "is something we're striving for with this feature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=985"
  },
  {
    "text": "Next, let's see how we can build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=988"
  },
  {
    "text": "a true multiplayer experience for our game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=989"
  },
  {
    "text": "Our previous example used distributed actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=992"
  },
  {
    "text": "in a client/server scenario, which you may be ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=994"
  },
  {
    "text": "familiar with already from other apps you worked on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=997"
  },
  {
    "text": "However, distributed actors can also be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=999"
  },
  {
    "text": "in peer-to-peer systems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1002"
  },
  {
    "text": "where there isn't a dedicated server component at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1003"
  },
  {
    "text": "This matches another idea I had for our game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1006"
  },
  {
    "text": "Sometimes when traveling, you end up in these locations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1008"
  },
  {
    "text": "that don't really have great internet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1011"
  },
  {
    "text": "but the local Wi-Fi works great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1013"
  },
  {
    "text": "I'd like to still be able to challenge ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1015"
  },
  {
    "text": "and play with my friends -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1017"
  },
  {
    "text": "which are connected to the same network -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1018"
  },
  {
    "text": "as I end up in such a situation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1019"
  },
  {
    "text": "I went ahead and implemented ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1022"
  },
  {
    "text": "another actor system implementation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1023"
  },
  {
    "text": "this time using local networking features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1026"
  },
  {
    "text": "offered by Network framework. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1027"
  },
  {
    "text": "While we don't dive into the implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1030"
  },
  {
    "text": "of that actor system in this talk, you can watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1031"
  },
  {
    "text": "\"Advances in Networking, Part 2\" from WWDC 2019 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1034"
  },
  {
    "text": "to learn how you would implement such custom protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1038"
  },
  {
    "text": "It is also worth pointing out that access to local network ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1041"
  },
  {
    "text": "can expose very privacy-sensitive information, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1044"
  },
  {
    "text": "so please take care to use it respectfully. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1046"
  },
  {
    "text": "Since this time we'll be dealing with ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1049"
  },
  {
    "text": "already existing distributed actors on other devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1051"
  },
  {
    "text": "we can no longer just make up the IDs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1053"
  },
  {
    "text": "like we did in the previous example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1056"
  },
  {
    "text": "We have to discover the specific actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1058"
  },
  {
    "text": "on the other device we'd like to play a game with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1060"
  },
  {
    "text": "This problem isn't unique to distributed actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1062"
  },
  {
    "text": "and is generally solved using service discovery mechanisms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1065"
  },
  {
    "text": "However, in the domain of distributed actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1068"
  },
  {
    "text": "there is a common pattern and style of API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1070"
  },
  {
    "text": "actor systems are expected to offer that allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1073"
  },
  {
    "text": "to stick to strongly-typed APIs throughout all your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1075"
  },
  {
    "text": "We call it the receptionist pattern, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1079"
  },
  {
    "text": "because similar to a hotel, actors need to check in with it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1081"
  },
  {
    "text": "in order to become known and available for others to meet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1084"
  },
  {
    "text": "Every actor system has its own receptionist ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1088"
  },
  {
    "text": "and they can use whatever means most suitable for the underlying ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1090"
  },
  {
    "text": "transport mechanisms to implement actor discovery. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1093"
  },
  {
    "text": "Sometimes this may rely on existing service discovery APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1096"
  },
  {
    "text": "and only layer a type-safe API on top of them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1100"
  },
  {
    "text": "or it may implement a gossip-based mechanism, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1103"
  },
  {
    "text": "or something else entirely. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1106"
  },
  {
    "text": "This, however, is an implementation detail ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1108"
  },
  {
    "text": "from the perspective of the user of the actor system; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1110"
  },
  {
    "text": "all we need to care about is checking in our actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1113"
  },
  {
    "text": "to make it discoverable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1115"
  },
  {
    "text": "and look up actors by some tag or type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1117"
  },
  {
    "text": "when we need to discover them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1119"
  },
  {
    "text": "Let's have a look at a simple receptionist I have implemented ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1121"
  },
  {
    "text": "for our SampleLocalNetworkActorSystem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1124"
  },
  {
    "text": "It allows an actor to check in, which enables all receptionists ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1126"
  },
  {
    "text": "in the distributed actor system to discover it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1130"
  },
  {
    "text": "We can then get a listing of all actors of a specific type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1133"
  },
  {
    "text": "and tag as they become available in that system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1137"
  },
  {
    "text": "Let's use this receptionist to discover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1140"
  },
  {
    "text": "a concrete opponent actor we'd like to play a game with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1143"
  },
  {
    "text": "Previously, our GameView directly created -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1146"
  },
  {
    "text": "or resolved -- an opponent in its view initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1149"
  },
  {
    "text": "We can no longer do this, as we need to asynchronously ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1152"
  },
  {
    "text": "wait for an opponent to appear on the network. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1155"
  },
  {
    "text": "To do this, let me introduce a matchmaking view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1158"
  },
  {
    "text": "that will show a \"Looking for opponent...\" message ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1161"
  },
  {
    "text": "while we're trying to discover one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1163"
  },
  {
    "text": "As this view appears, we'll kick off the matchmaking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1165"
  },
  {
    "text": "The matchmaking will be done ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1168"
  },
  {
    "text": "in a new unstructured task in which we'll ask ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1169"
  },
  {
    "text": "the local actor system's receptionist ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1172"
  },
  {
    "text": "for a listing of all actors tagged ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1174"
  },
  {
    "text": "using the opposing team's tag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1176"
  },
  {
    "text": "So if we're playing for team fish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1179"
  },
  {
    "text": "we'll be looking for players from the team rodents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1181"
  },
  {
    "text": "and vice versa. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1184"
  },
  {
    "text": "Next, we'll use an async for loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1185"
  },
  {
    "text": "to await incoming opponent actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1187"
  },
  {
    "text": "As the system discovers a nearby device with an opponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1190"
  },
  {
    "text": "we could play with, this task loop will be resumed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1192"
  },
  {
    "text": "Let's assume the opponent is always ready to play a game ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1196"
  },
  {
    "text": "and immediately store it in our model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1198"
  },
  {
    "text": "and start a game with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1200"
  },
  {
    "text": "We use a helper function to decide ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1202"
  },
  {
    "text": "who should make the first move, and finally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1203"
  },
  {
    "text": "tell the opponent that we want to start a game with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1206"
  },
  {
    "text": "Be sure to return here, in order to break out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1209"
  },
  {
    "text": "of the async for loop, as we only need one opponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1211"
  },
  {
    "text": "to be done with our matchmaking task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1214"
  },
  {
    "text": "For this gameplay mode, we do have to change ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1216"
  },
  {
    "text": "our OfflinePlayer implementation a little. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1219"
  },
  {
    "text": "Let's call it LocalNetworkPlayer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1221"
  },
  {
    "text": "and it'll be using the SampleLocalNetworkActorSystem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1224"
  },
  {
    "text": "What's most interesting about it is that the makeMove method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1227"
  },
  {
    "text": "of the the actor representing a human player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1231"
  },
  {
    "text": "may now be invoked remotely! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1233"
  },
  {
    "text": "But making the move is actually ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1235"
  },
  {
    "text": "the responsibility of a human player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1237"
  },
  {
    "text": "In order to solve this challenge, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1239"
  },
  {
    "text": "we introduce a humanSelectedField ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1241"
  },
  {
    "text": "asynchronous function to our view model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1243"
  },
  {
    "text": "It is powered by a @Published value that is triggered ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1246"
  },
  {
    "text": "when the human user clicks on one of the fields. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1248"
  },
  {
    "text": "As the human player clicks a field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1251"
  },
  {
    "text": "our makeMove function resumes, and we complete the remote call ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1253"
  },
  {
    "text": "by returning the performed GameMove to the remote caller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1256"
  },
  {
    "text": "And again, that's all there is to it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1259"
  },
  {
    "text": "We had to change the actor implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1261"
  },
  {
    "text": "a little to handle our true multiplayer game mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1263"
  },
  {
    "text": "but nothing really changed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1266"
  },
  {
    "text": "in the overall design of the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1267"
  },
  {
    "text": "And most importantly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1269"
  },
  {
    "text": "nothing in our game logic changes was really specific ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1271"
  },
  {
    "text": "to the fact we'll be using local networking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1273"
  },
  {
    "text": "We discover an opponent and play a game with them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1276"
  },
  {
    "text": "by invoking distributed methods on player actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1278"
  },
  {
    "text": "To demo this game mode, I'll need an opponent to play with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1281"
  },
  {
    "text": "Let's ask my fluffy assistant Caplin the Capybara. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1284"
  },
  {
    "text": "I heard he's pretty good at it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1287"
  },
  {
    "text": "OK, he's pretty smart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1292"
  },
  {
    "text": "He is pretty good at it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1298"
  },
  {
    "text": "Let me try here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1301"
  },
  {
    "text": "Oh, he got me! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1304"
  },
  {
    "text": "This time you win, little critter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1306"
  },
  {
    "text": "but we'll play another session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1307"
  },
  {
    "text": "Thanks for your help, Caplin! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1309"
  },
  {
    "text": "Last but not least, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1312"
  },
  {
    "text": "let me give you an idea of what we can achieve ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1313"
  },
  {
    "text": "by combining different actor systems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1315"
  },
  {
    "text": "For example, we can use the WebSocket system to register ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1317"
  },
  {
    "text": "device-hosted actor player actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1320"
  },
  {
    "text": "in a server-side lobby system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1323"
  },
  {
    "text": "that will pair them up and act as a proxy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1324"
  },
  {
    "text": "for distributed calls between them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1327"
  },
  {
    "text": "We might implement a GameLobby actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1330"
  },
  {
    "text": "with which device-hosted player actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1332"
  },
  {
    "text": "are able to register themselves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1334"
  },
  {
    "text": "As devices enter the play online mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1336"
  },
  {
    "text": "they would discover the GameLobby using a receptionist, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1338"
  },
  {
    "text": "and call join on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1341"
  },
  {
    "text": "The GameLobby keeps track of available players ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1343"
  },
  {
    "text": "and starts a game session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1345"
  },
  {
    "text": "when a pair of players has been identified. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1347"
  },
  {
    "text": "A game session would act as the driver of the game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1350"
  },
  {
    "text": "polling moves and marking them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1352"
  },
  {
    "text": "in the server-stored representation of the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1354"
  },
  {
    "text": "As the game completes, we can collect results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1356"
  },
  {
    "text": "and report back to the lobby. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1359"
  },
  {
    "text": "More interestingly though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1360"
  },
  {
    "text": "we can scale this design horizontally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1362"
  },
  {
    "text": "We can of course create more game session actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1365"
  },
  {
    "text": "to serve more games concurrently on a single server, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1367"
  },
  {
    "text": "but thanks to distributed actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1370"
  },
  {
    "text": "we could even create a game session on other nodes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1371"
  },
  {
    "text": "in order to load balance the number of concurrent games ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1374"
  },
  {
    "text": "across a cluster. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1376"
  },
  {
    "text": "That is, if only we had a cluster actor system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1378"
  },
  {
    "text": "And, in fact, we do! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1381"
  },
  {
    "text": "We open-sourced a feature-rich Cluster Actor system library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1383"
  },
  {
    "text": "for you to use in such scenarios. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1386"
  },
  {
    "text": "It's implemented using SwiftNIO, and specialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1388"
  },
  {
    "text": "for server-side data-center clustering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1390"
  },
  {
    "text": "It applies advanced techniques for failure detection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1393"
  },
  {
    "text": "and comes with it's own implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1396"
  },
  {
    "text": "of a cluster-wide receptionist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1397"
  },
  {
    "text": "We encourage you to have a look at it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1400"
  },
  {
    "text": "as it is both an advanced reference implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1402"
  },
  {
    "text": "of an actor system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1404"
  },
  {
    "text": "and because of its powerful server-side applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1405"
  },
  {
    "text": "Let's recap what we learned during this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1408"
  },
  {
    "text": "First, we learned about distributed actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1411"
  },
  {
    "text": "and how we provide additional compiler-assisted ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1414"
  },
  {
    "text": "actor isolation and serialization checking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1416"
  },
  {
    "text": "We learned how they enable location transparency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1419"
  },
  {
    "text": "and how we can make use of it to free our actors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1422"
  },
  {
    "text": "from the necessity of being located in the same process ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1424"
  },
  {
    "text": "as their caller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1427"
  },
  {
    "text": "We also saw a few actor system implementations in action ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1428"
  },
  {
    "text": "to get you inspired about what you could build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1431"
  },
  {
    "text": "using distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1433"
  },
  {
    "text": "Distributed actors are only as powerful as the actor systems ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1435"
  },
  {
    "text": "they are used with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1438"
  },
  {
    "text": "So for your reference, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1440"
  },
  {
    "text": "here is a list of actor systems we saw during this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1441"
  },
  {
    "text": "The local testing system, which ships by default with Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1444"
  },
  {
    "text": "and two sample actor systems: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1447"
  },
  {
    "text": "a client/server style WebSocket-based one ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1449"
  },
  {
    "text": "and a local networking-based system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1452"
  },
  {
    "text": "These systems are rather incomplete, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1455"
  },
  {
    "text": "and served more as an inspiration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1456"
  },
  {
    "text": "for what you might build using distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1458"
  },
  {
    "text": "You can view them in the sample code app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1461"
  },
  {
    "text": "associated with this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1463"
  },
  {
    "text": "And last but not least, an open source ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1465"
  },
  {
    "text": "fully featured server-side clustering implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1467"
  },
  {
    "text": "Available as a beta package now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1470"
  },
  {
    "text": "and it will be matured alongside Swift 5.7. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1472"
  },
  {
    "text": "To learn more about distributed actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1475"
  },
  {
    "text": "you can refer to the following resources: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1477"
  },
  {
    "text": "the sample code associated with this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1480"
  },
  {
    "text": "which includes all the steps of our Tic Tac Fish game ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1482"
  },
  {
    "text": "so you can deep dive into the code yourself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1485"
  },
  {
    "text": "The Swift evolution proposals ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1487"
  },
  {
    "text": "associated with the distributed actors language feature, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1489"
  },
  {
    "text": "which explain the mechanisms powering them in great detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1492"
  },
  {
    "text": "You can also reach out on the Swift forums, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1495"
  },
  {
    "text": "where you can find a distributed actors category ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1497"
  },
  {
    "text": "dedicated to actor system developers and users alike. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1500"
  },
  {
    "text": "Thanks for listening, and I'm looking forward to seeing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1504"
  },
  {
    "text": "what you'll use distributed actors for in your apps! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1506"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110356/?time=1508"
  }
]