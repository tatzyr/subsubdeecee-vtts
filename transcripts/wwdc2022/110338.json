[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=0"
  },
  {
    "text": "Hi, my name is Nik, and I'm an engineer on the Video team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=9"
  },
  {
    "text": "Today I'm excited to talk to you about media metadata publishing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=12"
  },
  {
    "text": "and playback interactions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=16"
  },
  {
    "text": "So what exactly does that mean? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=17"
  },
  {
    "text": "There are a number of places on Apple devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=19"
  },
  {
    "text": "where playback information is displayed, and where playback can be controlled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=21"
  },
  {
    "text": "For example, the Now Playing section of Control Center displays the artwork, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=25"
  },
  {
    "text": "title, and progress for media that is currently playing on the device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=28"
  },
  {
    "text": "It also lets you play, pause, or even skip forward or backward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=32"
  },
  {
    "text": "Expanding the Now Playing tile shows more details, like the artwork and progress. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=36"
  },
  {
    "text": "it also allows you to scrub and increase or decrease the volume. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=40"
  },
  {
    "text": "Lock Screen also displays the same information and controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=45"
  },
  {
    "text": "giving users a convenient place to check in on progress, pause, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=48"
  },
  {
    "text": "or even AirPlay to another device without needing to unlock.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=51"
  },
  {
    "text": "No matter what device is playing, the Now Playing app on Apple Watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=57"
  },
  {
    "text": "provides the same experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=60"
  },
  {
    "text": "It even has an Apple TV remote built in.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=61"
  },
  {
    "text": "On tvOS when using AVKit, the info overlay ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=65"
  },
  {
    "text": "when controls are presented will show title and chapter information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=68"
  },
  {
    "text": "When you swipe down to the info pane, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=71"
  },
  {
    "text": "more details like the artwork and description are shown.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=73"
  },
  {
    "text": "Holding the TV button on your Apple TV remote shows Control Center, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=77"
  },
  {
    "text": "which like iOS has a Now Playing tile that also can be expanded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=81"
  },
  {
    "text": "When audio content starts playing from the background on tvOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=85"
  },
  {
    "text": "be it from pressing the play button on the remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=88"
  },
  {
    "text": "or from selecting a track in the Music app from another device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=90"
  },
  {
    "text": "a notification with the Now Playing information is presented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=93"
  },
  {
    "text": "Additionally, after a brief period of inactivity on tvOS when playing audio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=98"
  },
  {
    "text": "a full screen overlay showing what's currently playing is presented.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=102"
  },
  {
    "text": "Lastly, on iOS, the Control Other Speakers and TVs button ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=108"
  },
  {
    "text": "lets you view the Now Playing information on all of your devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=112"
  },
  {
    "text": "as well as control playback.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=114"
  },
  {
    "text": "With the growing number of devices and UIs where Now Playing information is presented ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=118"
  },
  {
    "text": "and where playback can be controlled from, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=122"
  },
  {
    "text": "properly publishing Now Playing information ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=123"
  },
  {
    "text": "and responding to remote commands is more important than ever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=125"
  },
  {
    "text": "Over the course of the rest of this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=128"
  },
  {
    "text": "we will cover responding to playback interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=130"
  },
  {
    "text": "in the form of remote commands, automatic metadata publishing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=132"
  },
  {
    "text": "publishing with AVKit, and manual publishing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=135"
  },
  {
    "text": "When using AVFoundation for media playback, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=138"
  },
  {
    "text": "the best way to publish Now Playing metadata ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=141"
  },
  {
    "text": "and respond to playback interactions is using the MPNowPlayingSession class.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=142"
  },
  {
    "text": "Historically, this class has only been available on tvOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=148"
  },
  {
    "text": "but is now available on iOS 16.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=151"
  },
  {
    "text": "It is used to represent a distinct playback session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=156"
  },
  {
    "text": "and offers control over Now Playing status ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=158"
  },
  {
    "text": "if your app contains multiple active sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=160"
  },
  {
    "text": "It supports both manual metadata publishing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=164"
  },
  {
    "text": "as well as the new automatic publishing available in iOS and tvOS 16.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=166"
  },
  {
    "text": "MPNowPlayingSession shouldn't be used on tvOS when using AVKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=172"
  },
  {
    "text": "which has its own automatic publishing mechanisms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=175"
  },
  {
    "text": "we'll cover later in the session.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=177"
  },
  {
    "text": "Being the \"Now Playing\" app means that your app is what will populate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=180"
  },
  {
    "text": "Control Center, Lock Screen, etcetera, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=183"
  },
  {
    "text": "and receive the playback controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=185"
  },
  {
    "text": "when the user, for example, presses pause from one of those interfaces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=186"
  },
  {
    "text": "With MPNowPlayingSession, you can represent multiple ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=190"
  },
  {
    "text": "concurrent playback sessions within a single app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=192"
  },
  {
    "text": "However, when using multiple sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=195"
  },
  {
    "text": "your app must promote one as the active session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=197"
  },
  {
    "text": "that will appear throughout the system when remote controlling your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=199"
  },
  {
    "text": "For example, with Picture in Picture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=202"
  },
  {
    "text": "you may have two concurrent playback sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=203"
  },
  {
    "text": "where the full screen playback should be considered ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=205"
  },
  {
    "text": "the active Now Playing session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=207"
  },
  {
    "text": "The system also has a few heuristics to qualify apps as Now Playing eligible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=210"
  },
  {
    "text": "First, you must register a handler for at least one remote command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=214"
  },
  {
    "text": "As you can imagine, an app that won't respond to any playback interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=218"
  },
  {
    "text": "is most likely not an ideal candidate to show up as the Now Playing app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=221"
  },
  {
    "text": "Second, your apps AVAudioSession must be configured ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=225"
  },
  {
    "text": "with a non-mixable category and category option. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=228"
  },
  {
    "text": "Mixable playback categories and options are generally used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=232"
  },
  {
    "text": "when playing back notifications, and therefore this is a good indication ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=234"
  },
  {
    "text": "to the system that whatever is playing is also not a good candidate for Now Playing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=237"
  },
  {
    "text": "Here's a few examples to help understand playback sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=241"
  },
  {
    "text": "In this example there is a single piece of content playing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=244"
  },
  {
    "text": "so this would be represented using a single MPNowPlayingSession. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=247"
  },
  {
    "text": "If your app supports PiP, you would have two MPNowPlayingSessions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=250"
  },
  {
    "text": "one for the main player, and one for the PiP playback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=254"
  },
  {
    "text": "A more complex scenario would be a single MPNowPlayingSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=257"
  },
  {
    "text": "that has several players. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=260"
  },
  {
    "text": "In this example, we have four players, one in each quadrant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=262"
  },
  {
    "text": "showing different points of view for the same race. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=265"
  },
  {
    "text": "Players added to the same MPNowPlayingSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=267"
  },
  {
    "text": "should always be part of the same content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=270"
  },
  {
    "text": "And here's how each of these example sessions would be instantiated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=273"
  },
  {
    "text": "The first, we're just playing a single piece of content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=276"
  },
  {
    "text": "so we have the single session with the single player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=278"
  },
  {
    "text": "The second example is using Picture-in-Picture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=281"
  },
  {
    "text": "so we have two sessions, each with a single player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=284"
  },
  {
    "text": "The first being the full screen content, and the second being the content in PiP. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=286"
  },
  {
    "text": "The last example, the multi-view race, is represented ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=290"
  },
  {
    "text": "with a single session with four players. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=293"
  },
  {
    "text": "When an app does have multiple sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=297"
  },
  {
    "text": "it's the apps responsibility for promoting a given session as active when applicable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=298"
  },
  {
    "text": "For example, if media is playing in Picture-in-Picture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=302"
  },
  {
    "text": "if the user expands it to be full screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=305"
  },
  {
    "text": "the previously full screen session should no longer be active, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=307"
  },
  {
    "text": "or Now Playing, and the PiP session that is now full screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=310"
  },
  {
    "text": "should become active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=312"
  },
  {
    "text": "This transition can be done by calling becomeActiveIfPossible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=313"
  },
  {
    "text": "on MPNowPlayingSession. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=317"
  },
  {
    "text": "Now that we've covered the basics of setting up instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=320"
  },
  {
    "text": "of MPNowPlayingSession and controlling the Now Playing session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=323"
  },
  {
    "text": "let's talk about receiving and responding to remote commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=326"
  },
  {
    "text": "be it from Lock Screen, or from a HomePod in another room. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=328"
  },
  {
    "text": "Let's start off with a basic example of registering ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=331"
  },
  {
    "text": "for the play and pause command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=333"
  },
  {
    "text": "Doing so will enable your app to receive callbacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=335"
  },
  {
    "text": "when the user presses play or pause from another device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=337"
  },
  {
    "text": "or issues that command using Siri. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=340"
  },
  {
    "text": "First, we instantiate our MPNowPlayingSession. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=343"
  },
  {
    "text": "Since we only have one session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=346"
  },
  {
    "text": "we don't need to invoke the 'becomeActiveIfPossible' method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=348"
  },
  {
    "text": "When you only have one session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=350"
  },
  {
    "text": "it will be the default session when your app is the Now Playing app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=352"
  },
  {
    "text": "Each MPNowPlayingSession instance has its own MPRemoteCommandCenter instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=356"
  },
  {
    "text": "which is used to declare which remote commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=360"
  },
  {
    "text": "your playback session can respond to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=362"
  },
  {
    "text": "Next we add a handler for the playCommand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=364"
  },
  {
    "text": "where we invoke the play method on our player, and return success. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=367"
  },
  {
    "text": "Then we do the same for the pauseCommand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=371"
  },
  {
    "text": "You should add handlers for every command that your app supports ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=374"
  },
  {
    "text": "and that is applicable for the currently playing content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=377"
  },
  {
    "text": "Another example is the skip forward and skip backward command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=380"
  },
  {
    "text": "This command should be used for most content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=383"
  },
  {
    "text": "and wouldn't be applicable, for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=385"
  },
  {
    "text": "live streams where jumping forward isn't possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=387"
  },
  {
    "text": "First we have to indicate what our preferred intervals are, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=390"
  },
  {
    "text": "or the number of seconds we prefer to jump in either direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=392"
  },
  {
    "text": "In this case, we use 15 seconds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=396"
  },
  {
    "text": "Then similar to what we did for the play and pause commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=398"
  },
  {
    "text": "we add a handler that will be invoked when the user presses ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=401"
  },
  {
    "text": "the skip forward button or asks Siri to skip forward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=403"
  },
  {
    "text": "In our handler, we will be receiving an MPSkipIntervalCommandEvent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=407"
  },
  {
    "text": "so first we will cast the event to that type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=411"
  },
  {
    "text": "We then calculate the new elapsed time by taking the current time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=414"
  },
  {
    "text": "and the interval provided to us in the MPSkipIntervalCommandEvent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=417"
  },
  {
    "text": "seek to it, and return success to indicate that we jumped to the new position. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=420"
  },
  {
    "text": "It's also possible that your app has situations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=425"
  },
  {
    "text": "where a command is temporarily not allowed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=427"
  },
  {
    "text": "for example skipping forward while in an advertisement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=429"
  },
  {
    "text": "In that case, the skipForwardCommand can be disabled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=431"
  },
  {
    "text": "Now that we're responding to remote commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=434"
  },
  {
    "text": "we will cover automatic metadata publishing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=436"
  },
  {
    "text": "Automatic publishing takes the hard work out of keeping metadata accurate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=439"
  },
  {
    "text": "by automatically maintaining metadata properties it can observe ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=442"
  },
  {
    "text": "directly from the player such as duration, the current elapsed time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=445"
  },
  {
    "text": "the playback state, and playback progress. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=448"
  },
  {
    "text": "If the content has ads baked into it that shouldn't contribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=451"
  },
  {
    "text": "to the total duration and elapsed time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=454"
  },
  {
    "text": "it can also take care of calculating the net time and report that instead. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=456"
  },
  {
    "text": "Other metadata such as the title, description, and artwork can be added ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=459"
  },
  {
    "text": "to the AVPlayerItems directly using the nowPlayingInfo property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=463"
  },
  {
    "text": "In this example, we will use automatic publishing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=467"
  },
  {
    "text": "to do the bulk of the work and set the title and artwork ourselves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=469"
  },
  {
    "text": "First, we create a new MPMediaItemArtwork instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=472"
  },
  {
    "text": "passing in the artwork image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=475"
  },
  {
    "text": "Most apps will perform a network request to fetch this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=477"
  },
  {
    "text": "Then we set the string title of the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=480"
  },
  {
    "text": "Then we take our artwork and title ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=483"
  },
  {
    "text": "and set them as the nowPlayingInfo dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=485"
  },
  {
    "text": "on the current player item using MPMediaItemPropertyTitle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=487"
  },
  {
    "text": "and MPMediaItemPropertyArtwork. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=490"
  },
  {
    "text": "Now Playing metadata can consist of both MPMediaItemProperty's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=492"
  },
  {
    "text": "and MPNowPlayingInfoProperty's. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=496"
  },
  {
    "text": "Lastly, we create our MPNowPlayingSession instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=499"
  },
  {
    "text": "passing in our player, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=502"
  },
  {
    "text": "and set automaticallyPublishNowPlayingInfo to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=503"
  },
  {
    "text": "Once automaticallyPublishNowPlayingInfo is set to true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=506"
  },
  {
    "text": "the MPNowPlayingSession instance will begin observing the player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=509"
  },
  {
    "text": "for state changes such as scrubbing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=512"
  },
  {
    "text": "play/pause events, or the current player item changing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=513"
  },
  {
    "text": "Here's another example where we will show how to use automatic publishing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=517"
  },
  {
    "text": "for instances where ads are baked into the asset ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=520"
  },
  {
    "text": "and you don't want the total duration or current elapsed time to include ad time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=522"
  },
  {
    "text": "To do this, we'll create instances of MPAdTimeRange ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=527"
  },
  {
    "text": "for every ad that we have baked in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=530"
  },
  {
    "text": "In this example, we have a single 30-second ad ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=532"
  },
  {
    "text": "that starts at the very beginning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=535"
  },
  {
    "text": "So we create it with a starting point of zero, and a duration of 30 seconds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=536"
  },
  {
    "text": "Similar to how we did the title and artwork earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=541"
  },
  {
    "text": "we simply add an array of MPAdTimeRange's to the nowPlayingInfo dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=544"
  },
  {
    "text": "on the player item using the MPNowPlayingInfoPropertyAdTimeRanges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=549"
  },
  {
    "text": "Then just as we did before, create the MPNowPlayingSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=554"
  },
  {
    "text": "and enable automatic publishing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=557"
  },
  {
    "text": "Next is metadata publishing with AVKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=560"
  },
  {
    "text": "Publishing Now Playing metadata with AVKit on tvOS works very similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=562"
  },
  {
    "text": "to MPNowPlayingSession: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=566"
  },
  {
    "text": "metadata is added directly to the AVPlayerItem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=568"
  },
  {
    "text": "and values like elapsed time, duration, and playback state are published ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=570"
  },
  {
    "text": "and kept up to date for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=573"
  },
  {
    "text": "The metadata gathered from the player and asset directly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=574"
  },
  {
    "text": "combined with the metadata provided by your app on the AVPlayerItem ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=577"
  },
  {
    "text": "are also used to populate the info pane in the player UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=580"
  },
  {
    "text": "AVKit also takes care of registering for and responding to remote commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=583"
  },
  {
    "text": "Using AVKit is the best and easiest way to integrate with the platform features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=587"
  },
  {
    "text": "we've discussed so far, as well as others such as AirPlay and Picture-in-Picture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=590"
  },
  {
    "text": "Setting the metadata when using AVKit is done using the externalMetadata array ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=595"
  },
  {
    "text": "on the AVPlayerItem, which consists of the AVMetadataItem instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=599"
  },
  {
    "text": "to describe your content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=603"
  },
  {
    "text": "You usually up setting three values on each AVMetadataItem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=605"
  },
  {
    "text": "First, the identifier, which is the key ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=608"
  },
  {
    "text": "to indicate what metadata the AVMetadataItem represents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=610"
  },
  {
    "text": "For example, AVMetadataCommonIdentifierTitle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=614"
  },
  {
    "text": "for the content title, or AVMetadataCommonIdentifierArtwork ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=618"
  },
  {
    "text": "for the artwork. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=621"
  },
  {
    "text": "Second is the value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=623"
  },
  {
    "text": "For title, this would be a string containing the title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=625"
  },
  {
    "text": "For artwork, this would be an NSData instance containing image data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=627"
  },
  {
    "text": "The dataType is used to indicate the format of the artwork provided. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=631"
  },
  {
    "text": "If it contained JPEG data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=634"
  },
  {
    "text": "kCMMetadatabaseDataType_JPEG would be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=636"
  },
  {
    "text": "Lastly, the extendedLanguageTag is used to indicate the language used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=640"
  },
  {
    "text": "for strings such as the title and description. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=644"
  },
  {
    "text": "Most of the time, the value \"und\" should be used here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=647"
  },
  {
    "text": "to ensure all audiences see the same values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=649"
  },
  {
    "text": "You may be tempted to use \"en-us\" if the values are in English, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=652"
  },
  {
    "text": "but doing so would cause devices with the language set to any other language ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=655"
  },
  {
    "text": "such as Spanish to not show the metadata.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=659"
  },
  {
    "text": "Here we have an example where we are setting the artwork and title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=662"
  },
  {
    "text": "First, we grab the artwork image data from our bundle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=665"
  },
  {
    "text": "Most apps will fetch this from a network resource. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=668"
  },
  {
    "text": "Then we instantiate a new mutable AVMetadataItem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=671"
  },
  {
    "text": "We set the identifier to .commonIdentifierArtwork. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=675"
  },
  {
    "text": "Then we set the value as the raw artwork image data as NSData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=678"
  },
  {
    "text": "Since the image data is JPEG, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=683"
  },
  {
    "text": "we set the dataType to kCMMetadataBaseDataType_JPEG. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=684"
  },
  {
    "text": "If your artwork was instead a PNG, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=688"
  },
  {
    "text": "you would use kCMMetadataBaseDataType_PNG. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=689"
  },
  {
    "text": "Because we want this metadata to be visible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=693"
  },
  {
    "text": "to users with devices set to any language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=695"
  },
  {
    "text": "we set the extendedLanguageTag to \"und,\" or \"undefined.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=697"
  },
  {
    "text": "We then repeat the same steps for the title, using .commonIdentifierTitle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=700"
  },
  {
    "text": "and the string title for the value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=704"
  },
  {
    "text": "and \"und\" once again for the extendedLanguageTag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=706"
  },
  {
    "text": "Once we've set up all of our metadata items, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=709"
  },
  {
    "text": "we add them to an array and set it to the AVPlayerItem's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=711"
  },
  {
    "text": "externalMetadata property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=714"
  },
  {
    "text": "Now that we have the artwork and title added to the player item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=717"
  },
  {
    "text": "you can see how this maps to what is shown in Control Center and Lock Screen on iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=720"
  },
  {
    "text": "Like artwork, there are other metadata types that can be set ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=725"
  },
  {
    "text": "such as the description, subtitle information, and content rating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=728"
  },
  {
    "text": "Your app should set as many of these as possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=731"
  },
  {
    "text": "to provide the user with as rich of an experience as possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=733"
  },
  {
    "text": "So far we've covered automatic publishing with MPNowPlayingSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=737"
  },
  {
    "text": "and publishing with AVKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=740"
  },
  {
    "text": "But MPNowPlayingSession and its automatic publishing feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=742"
  },
  {
    "text": "require passing an AVPlayer instance to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=744"
  },
  {
    "text": "That may not be an option for all apps, and manual publishing is still possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=747"
  },
  {
    "text": "Publishing manually requires that you provide values for all metadata. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=751"
  },
  {
    "text": "Unlike automatic publishing, information such as elapsed time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=755"
  },
  {
    "text": "and playback rate can't be determined by the system for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=757"
  },
  {
    "text": "This means that you have manual fine grain control over low level playback state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=760"
  },
  {
    "text": "and your app is responsible for keeping it accurate over time as playback changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=763"
  },
  {
    "text": "Note that registering for and responding to remote commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=768"
  },
  {
    "text": "is still required as well, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=771"
  },
  {
    "text": "and because we are not using MPNowPlayingSession, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=772"
  },
  {
    "text": "the shared instance of MPRemoteCommandCenter must be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=775"
  },
  {
    "text": "Here's a basic example showing how to update the Now Playing Info dictionary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=778"
  },
  {
    "text": "First, we create an MPMediaItemArtwork instance containing the image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=782"
  },
  {
    "text": "similar to what we did for automatic publishing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=786"
  },
  {
    "text": "Then, we create a dictionary containing the metadata that we have available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=788"
  },
  {
    "text": "In this case, we set the title, artwork, and the player values duration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=792"
  },
  {
    "text": "elapsed time, and playback rate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=797"
  },
  {
    "text": "We then set it on the MPNowPlayingInfoCenter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=799"
  },
  {
    "text": "default instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=801"
  },
  {
    "text": "Updates to this metadata should be made any time significant changes happen ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=803"
  },
  {
    "text": "during playback, such as a play or pause, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=807"
  },
  {
    "text": "the user scrubs forwards or backwards, or a new piece of content begins playing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=809"
  },
  {
    "text": "You do not need to update elapsed time periodically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=812"
  },
  {
    "text": "The system will always infer the correct elapsed time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=814"
  },
  {
    "text": "based on how much time has passed since the last update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=817"
  },
  {
    "text": "Now that you are familiar with all of the different ways to publish Now Playing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=821"
  },
  {
    "text": "metadata and respond to remote commands from other devices and interfaces, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=823"
  },
  {
    "text": "you should integrate to maximize the user experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=827"
  },
  {
    "text": "It's easier than ever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=830"
  },
  {
    "text": "Existing integrations can benefit too– ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=831"
  },
  {
    "text": "switching to automatic publishing is an easy way to prevent future regressions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=833"
  },
  {
    "text": "and minimize the amount of code you must maintain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=837"
  },
  {
    "text": "For more information, see MediaPlayer on developer.apple.com. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=839"
  },
  {
    "text": "Thanks for watching.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110338/?time=843"
  }
]