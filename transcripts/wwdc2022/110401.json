[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=0"
  },
  {
    "text": "Hi, my name is Boris, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=9"
  },
  {
    "text": "and welcome to the session \"Create Swift package plugins.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=11"
  },
  {
    "text": "We introduced support for Swift packages in Xcode 11 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=14"
  },
  {
    "text": "to offer a straightforward approach to distributing libraries as source code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=18"
  },
  {
    "text": "In Xcode 14, we want to bring that same great way to structure and share ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=22"
  },
  {
    "text": "components to development workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=26"
  },
  {
    "text": "such as generating source code or automating release tasks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=28"
  },
  {
    "text": "with Swift package plugins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=31"
  },
  {
    "text": "First, a quick overview of the talk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=34"
  },
  {
    "text": "After learning the basics of plugins, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=36"
  },
  {
    "text": "we'll build our first custom command plugin in a demo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=38"
  },
  {
    "text": "Next, we'll look at more details about creating plugins, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=42"
  },
  {
    "text": "followed by building both an in-build and a pre-build command plugin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=45"
  },
  {
    "text": "in further demos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=49"
  },
  {
    "text": "A package plugin is Swift code that uses the PackagePlugin API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=51"
  },
  {
    "text": "similar to a package manifest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=56"
  },
  {
    "text": "Plugins can extend the functionality of Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=58"
  },
  {
    "text": "or the Swift Package Manager through well-defined extension points. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=61"
  },
  {
    "text": "How do package plugins work? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=66"
  },
  {
    "text": "Xcode will compile and run your plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=69"
  },
  {
    "text": "which can use information about available executables ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=72"
  },
  {
    "text": "and input files to construct commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=75"
  },
  {
    "text": "which it communicates back to Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=78"
  },
  {
    "text": "in order to execute them as needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=79"
  },
  {
    "text": "Package plugins can contribute custom build tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=84"
  },
  {
    "text": "that run before or during the build, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=87"
  },
  {
    "text": "for example, to generate source code or resource files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=89"
  },
  {
    "text": "They can also add custom commands to SwiftPM's command line interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=93"
  },
  {
    "text": "or menu items to Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=97"
  },
  {
    "text": "For more information on the basics of plugins, I would recommend watching ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=99"
  },
  {
    "text": "\"Meet swift package plugins\" first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=103"
  },
  {
    "text": "and in case you are new to packages entirely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=104"
  },
  {
    "text": "you can watch the WWDC19 session Creating Swift Packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=107"
  },
  {
    "text": "Let's look at building our first custom command plugin. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=113"
  },
  {
    "text": "I'm working on the tools-support-core package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=118"
  },
  {
    "text": "from Swift open source, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=121"
  },
  {
    "text": "and I'd like to add a text file ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=122"
  },
  {
    "text": "that lists all the contributors to the project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=124"
  },
  {
    "text": "I also want to regenerate it as needed from the Git history of the package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=126"
  },
  {
    "text": "Previously, I might have written a shell script ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=132"
  },
  {
    "text": "or a makefile to do this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=134"
  },
  {
    "text": "but I'd like to create a custom command plugin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=135"
  },
  {
    "text": "so that I can re-generate the file without having to leave Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=137"
  },
  {
    "text": "First, we have to create the directory structure for our plugin. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=142"
  },
  {
    "text": "We open the context menu on the package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=146"
  },
  {
    "text": "and select New Folder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=151"
  },
  {
    "text": "to create a top-level folder called Plugins ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=153"
  },
  {
    "text": "similar to the existing Sources and Tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=158"
  },
  {
    "text": "Next, we will create another nested folder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=163"
  },
  {
    "text": "for the plugin target, called \"GenerateContributors.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=168"
  },
  {
    "text": "And inside there, we create a new file and call it \"plugin.swift.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=177"
  },
  {
    "text": "Next, we need to make some changes to the package manifest ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=192"
  },
  {
    "text": "to declare our new target there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=195"
  },
  {
    "text": "But first, we need to bump the tools version for our package to 5.6 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=198"
  },
  {
    "text": "since plugins are only available since that version.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=202"
  },
  {
    "text": "Next, we can insert our plugin target.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=213"
  },
  {
    "text": "Let's take a look at the new manifest API here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=224"
  },
  {
    "text": "We are creating a plugin target ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=229"
  },
  {
    "text": "which corresponds to a folder inside the Plugins folder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=230"
  },
  {
    "text": "similar to source module targets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=233"
  },
  {
    "text": "It gets a name that is both relevant for naming the folder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=236"
  },
  {
    "text": "as well as a menu item in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=239"
  },
  {
    "text": "We specify the capability, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=243"
  },
  {
    "text": "so what type of extension point we want to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=245"
  },
  {
    "text": "In this case, we are making a custom command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=247"
  },
  {
    "text": "The intent can define a verb for the SwiftPM command line ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=252"
  },
  {
    "text": "as well as a description of what the plugin does, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=255"
  },
  {
    "text": "and finally, we can declare permissions that the plugin requires. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=259"
  },
  {
    "text": "In this case, we want to write a new file to the root of the package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=264"
  },
  {
    "text": "so we need permissions to write to that directory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=267"
  },
  {
    "text": "The reason string will be shown to the user of the plugin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=270"
  },
  {
    "text": "so that they know whether or not to grant the permission, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=273"
  },
  {
    "text": "similar to how permissions work in the OS itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=275"
  },
  {
    "text": "Now that we have declared the plugin, let's go back to actually implement it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=279"
  },
  {
    "text": "The plugin will shell out to Git to get the commit history. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=285"
  },
  {
    "text": "It will read the history from standardout of the external Git command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=289"
  },
  {
    "text": "and parse the results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=292"
  },
  {
    "text": "and finally write them out to a text file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=295"
  },
  {
    "text": "We'll open our plugin source file we created earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=299"
  },
  {
    "text": "and import PackagePlugin.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=304"
  },
  {
    "text": "This is a built-in module, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=309"
  },
  {
    "text": "much like PackageDescription, that gives us access to the APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=310"
  },
  {
    "text": "we can use to implement plugins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=313"
  },
  {
    "text": "We define a struct GenerateContributors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=317"
  },
  {
    "text": "and conform it to CommandPlugin.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=324"
  },
  {
    "text": "We'll accept the fix-it here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=332"
  },
  {
    "text": "to get the missing stubs for implementing the protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=335"
  },
  {
    "text": "We also need to mark our struct as @main ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=339"
  },
  {
    "text": "since it will be the main function of the plugin executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=342"
  },
  {
    "text": "performCommand is the entry point for our command, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=346"
  },
  {
    "text": "and we receive two arguments: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=349"
  },
  {
    "text": "context, which gives us access to the resolved package graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=351"
  },
  {
    "text": "and other information about the context we are being executed in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=354"
  },
  {
    "text": "as well as arguments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=358"
  },
  {
    "text": "Since custom commands are invoked by the user, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=360"
  },
  {
    "text": "they can provide input in the form of arguments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=363"
  },
  {
    "text": "We are creating a simple command, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=366"
  },
  {
    "text": "so we won't actually provide any options ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=368"
  },
  {
    "text": "to the user at this time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=370"
  },
  {
    "text": "Since we want to shell out to Git ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=380"
  },
  {
    "text": "in order to get information about the commit history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=381"
  },
  {
    "text": "we are importing Foundation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=384"
  },
  {
    "text": "because we want to use the Process API to do so.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=385"
  },
  {
    "text": "Next, we'll define a process instance and set it to execute Git log ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=395"
  },
  {
    "text": "with some formatting arguments.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=399"
  },
  {
    "text": "We need to create a pipe to capture the process output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=405"
  },
  {
    "text": "Then we can run it and wait until it exits.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=408"
  },
  {
    "text": "After the process has finished, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=415"
  },
  {
    "text": "we read all the data from the pipe ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=416"
  },
  {
    "text": "and convert it to a string which will have all the git log output.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=418"
  },
  {
    "text": "We do some string manipulation to trim ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=425"
  },
  {
    "text": "the output down to a list without duplicates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=427"
  },
  {
    "text": "and finally, we can write it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=430"
  },
  {
    "text": "to a file called \"CONTRIBUTORS.txt,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=432"
  },
  {
    "text": "and since the custom command is executed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=434"
  },
  {
    "text": "in the package's root directory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=436"
  },
  {
    "text": "we'll store the file there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=438"
  },
  {
    "text": "Now, if we save and then right-click on the package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=442"
  },
  {
    "text": "in the project navigator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=444"
  },
  {
    "text": "there is a new entry for our command in the context menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=449"
  },
  {
    "text": "Let's execute it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=452"
  },
  {
    "text": "In the following dialog, we can select the packages or targets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=457"
  },
  {
    "text": "that should be the input for our plugin as well as any arguments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=460"
  },
  {
    "text": "but since our plugin doesn't react to these options, we can click Run.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=464"
  },
  {
    "text": "Next we'll be asked for permissions, as we defined in the manifest earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=471"
  },
  {
    "text": "Since we just wrote the plugin ourselves, we can go ahead and run it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=475"
  },
  {
    "text": "but you should make sure that you only give extra permissions to plugins you trust.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=479"
  },
  {
    "text": "After running, the CONTRIBUTORS.txt file shows up in the project navigator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=488"
  },
  {
    "text": "So now after we extended Xcode with our first plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=494"
  },
  {
    "text": "let's go a bit deeper into how plugins work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=498"
  },
  {
    "text": "and what to look out for when creating one.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=500"
  },
  {
    "text": "Package plugins run in a sandbox, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=506"
  },
  {
    "text": "similar to the evaluation of the package manifest itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=508"
  },
  {
    "text": "Network access and writing to non-temporary locations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=511"
  },
  {
    "text": "other than the plugin's own work directory is prohibited. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=514"
  },
  {
    "text": "Custom commands can optionally declare that they'd like to write ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=518"
  },
  {
    "text": "to the package's root directory, as shown earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=521"
  },
  {
    "text": "If you are wrapping an existing third-party tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=525"
  },
  {
    "text": "you may have to look into how to confine it to the sandbox model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=527"
  },
  {
    "text": "for example, by configuring where generated files get written to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=531"
  },
  {
    "text": "I talked about the different types of plugins in the introduction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=535"
  },
  {
    "text": "and it should be clear whether a problem is better solved ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=538"
  },
  {
    "text": "by a custom command or a build tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=540"
  },
  {
    "text": "but let's take a look at the structure of build tool plugins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=542"
  },
  {
    "text": "These plugins allow you to extend the build system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=547"
  },
  {
    "text": "by providing a description on which executables to run during a build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=549"
  },
  {
    "text": "and specifying their inputs and outputs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=553"
  },
  {
    "text": "which helps with scheduling your work at the appropriate time during a build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=555"
  },
  {
    "text": "You might be familiar with the basics here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=559"
  },
  {
    "text": "if you have been creating run script phases ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=561"
  },
  {
    "text": "in Xcode projects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=563"
  },
  {
    "text": "There are also two different types of build tool plugins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=566"
  },
  {
    "text": "The distinguishing factor here is whether your tool has a defined set of outputs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=569"
  },
  {
    "text": "If it does, you should create an in-build command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=574"
  },
  {
    "text": "which will automatically be re-run by the build system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=577"
  },
  {
    "text": "if your outputs are out-of-date compared to your inputs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=580"
  },
  {
    "text": "If you don't have a clear set of outputs, you can create a pre-build command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=583"
  },
  {
    "text": "which runs at the start of every build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=587"
  },
  {
    "text": "Because of this, you should be careful about doing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=589"
  },
  {
    "text": "expensive work in pre-build commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=591"
  },
  {
    "text": "or come up with a custom strategy for caching results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=593"
  },
  {
    "text": "that's appropriate to your use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=596"
  },
  {
    "text": "For our second demo, I want to create a new library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=602"
  },
  {
    "text": "that encapsulates icons I'd like to share between different tools I am working on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=605"
  },
  {
    "text": "Let's get started and create a new package from template ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=611"
  },
  {
    "text": "and call it \"IconLibrary.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=613"
  },
  {
    "text": "And I'm going to drag in some icon assets I already have into my library's target. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=615"
  },
  {
    "text": "Let's also add a basic SwiftUI view and a preview to my library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=620"
  },
  {
    "text": "First, we need to add the required minimum deployment targets to the manifest.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=624"
  },
  {
    "text": "Next, let's actually add that basic view and preview. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=633"
  },
  {
    "text": "Here we can use our assets we dragged in before.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=637"
  },
  {
    "text": "I think it would be nice if, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=644"
  },
  {
    "text": "instead of having to deal with strings here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=646"
  },
  {
    "text": "we would have a type-safe way to reference these images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=648"
  },
  {
    "text": "This seems like a great use case for an in-build command plugin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=652"
  },
  {
    "text": "which looks at asset catalogs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=655"
  },
  {
    "text": "and generates some Swift code based on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=656"
  },
  {
    "text": "Let's take a look at an asset catalog in Finder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=659"
  },
  {
    "text": "to find out how we can extract the information we need for the plugin. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=662"
  },
  {
    "text": "Each image gets its own imageset directory with the name of the asset...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=666"
  },
  {
    "text": "And there's a JSON file which describes the basic contents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=675"
  },
  {
    "text": "In-build commands work a little different from custom commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=681"
  },
  {
    "text": "in that they're providing a description of executables to run ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=684"
  },
  {
    "text": "as well as their inputs and outputs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=687"
  },
  {
    "text": "The executables can be provided by the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=690"
  },
  {
    "text": "third party packages, or you can create one tailor-made for your plugin. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=692"
  },
  {
    "text": "We want to take the third approach here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=696"
  },
  {
    "text": "Plugins get run at the start of the build process ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=700"
  },
  {
    "text": "in order to participate in computing the build graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=702"
  },
  {
    "text": "Based on that, executables get scheduled as part of build execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=706"
  },
  {
    "text": "Now back to the executable we're building. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=712"
  },
  {
    "text": "We'd like to have a compile-time constant for each image in an asset catalog ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=714"
  },
  {
    "text": "so that, instead of needing to remember the correct strings for each image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=719"
  },
  {
    "text": "we'll get them autocompleted as Swift symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=723"
  },
  {
    "text": "We want to loop over the directory contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=727"
  },
  {
    "text": "of the asset catalog to find all the image sets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=729"
  },
  {
    "text": "For each image set, we parse its metadata to determine ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=732"
  },
  {
    "text": "if it actually contains any images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=735"
  },
  {
    "text": "and should therefore get code generated for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=737"
  },
  {
    "text": "Then we can generate the code and write to a file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=741"
  },
  {
    "text": "Since we declared those files as outputs of our plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=744"
  },
  {
    "text": "they will automatically be incorporated into the build of the target ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=747"
  },
  {
    "text": "the plugin is being applied to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=750"
  },
  {
    "text": "We'll need a way to deal with arguments ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=753"
  },
  {
    "text": "since that is how we communicate between the plugin and the executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=755"
  },
  {
    "text": "The first argument will be the path to the asset catalog we are processing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=760"
  },
  {
    "text": "and the second one will be a path provided by the plugin for our generated code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=766"
  },
  {
    "text": "Next we need some model objects for decoding the contents.json files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=771"
  },
  {
    "text": "We use Decodable to take advantage of Swift's built-in JSON decoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=777"
  },
  {
    "text": "The only information we are interested in are the list of images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=782"
  },
  {
    "text": "and their filenames, which are optional because there might not be ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=786"
  },
  {
    "text": "an image for each pixel density. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=790"
  },
  {
    "text": "We'll generate code in a simplistic manner here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=793"
  },
  {
    "text": "by just building up a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=795"
  },
  {
    "text": "We start it with imports of the frameworks we need, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=797"
  },
  {
    "text": "Foundation and SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=800"
  },
  {
    "text": "We want to loop over the directory contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=803"
  },
  {
    "text": "of the asset catalog ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=805"
  },
  {
    "text": "to find all the image sets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=806"
  },
  {
    "text": "We need to parse the JSON next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=809"
  },
  {
    "text": "The filename uses the input parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=812"
  },
  {
    "text": "And we decode using Foundation's 'JSONDecoder' API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=815"
  },
  {
    "text": "The main piece of information we're interested in ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=821"
  },
  {
    "text": "is whether there is a defined image for a given image set, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=823"
  },
  {
    "text": "which we determine by checking whether there's at least one image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=827"
  },
  {
    "text": "with a non-empty filename. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=830"
  },
  {
    "text": "If the given image set has an image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=834"
  },
  {
    "text": "we'd like to generate a SwiftUI image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=835"
  },
  {
    "text": "which loads that image from the package's bundle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=837"
  },
  {
    "text": "We do that by building a string with the base name of each image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=842"
  },
  {
    "text": "that loads the given image from the module bundle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=845"
  },
  {
    "text": "which is the resource bundle that the build system creates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=847"
  },
  {
    "text": "for each package with resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=850"
  },
  {
    "text": "We can wrap up the work of the executable by writing the generated code to a file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=853"
  },
  {
    "text": "as given to us by arguments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=857"
  },
  {
    "text": "Let's go back to Xcode and create the executable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=861"
  },
  {
    "text": "We call it \"AssetConstantsExec\"...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=870"
  },
  {
    "text": "And add a main file.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=880"
  },
  {
    "text": "Now we have to declare it in the package manifest.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=891"
  },
  {
    "text": "And we can add the code we just discussed in its main file.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=900"
  },
  {
    "text": "Now that we have an executable that can generate code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=909"
  },
  {
    "text": "we can bring it into the build system using a plugin.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=911"
  },
  {
    "text": "Let's add the required target ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=941"
  },
  {
    "text": "and also add a usage of the plugin from our library target.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=943"
  },
  {
    "text": "As before, we're importing the PackagePlugin library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=969"
  },
  {
    "text": "and create a struct, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=973"
  },
  {
    "text": "this time conforming it to the BuildTool plugin protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=974"
  },
  {
    "text": "The entry point looks similar, but instead of user arguments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=997"
  },
  {
    "text": "we are giving a target here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1001"
  },
  {
    "text": "This is the target that the plugin is being applied to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1002"
  },
  {
    "text": "and the entry point will be called once per target that uses the given plugin.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1005"
  },
  {
    "text": "This plugin will care particularly about source module targets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1015"
  },
  {
    "text": "which are any targets which actually carry source files, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1019"
  },
  {
    "text": "in contrast to, for example, a binary target. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1022"
  },
  {
    "text": "To build up the array of build commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1025"
  },
  {
    "text": "we loop over all xcasset bundles in the target. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1027"
  },
  {
    "text": "We'll extract a string for the display name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1031"
  },
  {
    "text": "that will show up in the build log, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1033"
  },
  {
    "text": "as well as construct suitable input and output paths. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1035"
  },
  {
    "text": "We can also look up our executable here using the plugin API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1039"
  },
  {
    "text": "and then put our build command together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1043"
  },
  {
    "text": "With this, we're ready to build the project again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1047"
  },
  {
    "text": "We can take a look at the build log for the new build steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1049"
  },
  {
    "text": "that are happening.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1052"
  },
  {
    "text": "The plugin is being compiled and run at the start of the build, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1060"
  },
  {
    "text": "from where it adds any generated commands to the build graph.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1064"
  },
  {
    "text": "Looking at the target, our new build command ran.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1072"
  },
  {
    "text": "And finally, the generated source file shows up ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1079"
  },
  {
    "text": "as part of compiling Swift files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1082"
  },
  {
    "text": "Let's go back to our preview, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1085"
  },
  {
    "text": "where we can replace the stringly typed image construction with our new constants.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1092"
  },
  {
    "text": "We also get autocompletion for the other image names.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1100"
  },
  {
    "text": "This is nice. With relatively little code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1108"
  },
  {
    "text": "we have been able to improve our workflow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1110"
  },
  {
    "text": "all using familiar Swift APIs and without having to leave Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1112"
  },
  {
    "text": "So far, we have looked into making plugins for our own use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1119"
  },
  {
    "text": "as part of libraries we were already working on, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1122"
  },
  {
    "text": "but another powerful attribute of plugins ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1125"
  },
  {
    "text": "is that we can share them in a straightforward way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1127"
  },
  {
    "text": "similar to libraries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1129"
  },
  {
    "text": "For the next demo, I'd like to automate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1133"
  },
  {
    "text": "some pre-build processing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1135"
  },
  {
    "text": "using the genstrings tool that ships with Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1136"
  },
  {
    "text": "The tool extracts localized strings from your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1139"
  },
  {
    "text": "into a localization directory for further use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1142"
  },
  {
    "text": "Since that seems generally useful, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1145"
  },
  {
    "text": "I'd like to make the plugin a separate package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1147"
  },
  {
    "text": "so that it can be shared independently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1149"
  },
  {
    "text": "If you'd like to learn more ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1152"
  },
  {
    "text": "about resources and localization in packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1154"
  },
  {
    "text": "I would recommend the WWDC20 session on that topic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1156"
  },
  {
    "text": "For more information about localization in general, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1160"
  },
  {
    "text": "check out Localize your SwiftUI app from WWDC21. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1163"
  },
  {
    "text": "For this plugin, we'll start by computing the output directory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1168"
  },
  {
    "text": "for localizations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1172"
  },
  {
    "text": "We'll compute the input files, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1174"
  },
  {
    "text": "which are all the Swift or Objective-C source files in a given target, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1176"
  },
  {
    "text": "and then construct the pre-build command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1181"
  },
  {
    "text": "for executing the genstrings tool provided by Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1182"
  },
  {
    "text": "Note that the biggest difference between pre- and in-build commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1186"
  },
  {
    "text": "is that we don't declare a well-defined set of outputs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1189"
  },
  {
    "text": "which means these commands run on every build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1192"
  },
  {
    "text": "The tool will extract all the localized strings ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1196"
  },
  {
    "text": "from the user's source code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1198"
  },
  {
    "text": "and then write all those strings into a localization directory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1200"
  },
  {
    "text": "which can be used as the basis for the actual localization work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1204"
  },
  {
    "text": "for the user's project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1207"
  },
  {
    "text": "To start, I have created the scaffolding here already. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1211"
  },
  {
    "text": "Now in the package manifest, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1213"
  },
  {
    "text": "let’s add a target as before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1216"
  },
  {
    "text": "but we will also add a plugin product.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1221"
  },
  {
    "text": "Similar to library products, this is the way to make a plugin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1229"
  },
  {
    "text": "available to clients of a package instead of just privately.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1232"
  },
  {
    "text": "We can write the code That we discussed earlier...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1238"
  },
  {
    "text": "Now that we have built our plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1250"
  },
  {
    "text": "we'd like to test it out in a separate example package.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1251"
  },
  {
    "text": "For that, let's create a new package from template. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1260"
  },
  {
    "text": "We'll add an API that provides a localized string to the package...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1264"
  },
  {
    "text": "And add a use of that in the generated test.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1274"
  },
  {
    "text": "As expected, the test works, as our API returns the string \"World.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1295"
  },
  {
    "text": "Let's add a path-based dependency on the plugin package...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1300"
  },
  {
    "text": "and a use of the plugin to the library target.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1311"
  },
  {
    "text": "We can now run again...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1323"
  },
  {
    "text": "and if we look at the build log, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1330"
  },
  {
    "text": "our plugin gets executed at the start of the build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1337"
  },
  {
    "text": "and the generated files get added to our target, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1343"
  },
  {
    "text": "so we're getting a resource bundle built ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1346"
  },
  {
    "text": "and a resource accessor being generated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1350"
  },
  {
    "text": "just as if the resource was part of our target from the beginning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1354"
  },
  {
    "text": "Now let's change our code to actually use the resource bundle.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1358"
  },
  {
    "text": "Finally, if we change the code...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1373"
  },
  {
    "text": "and take a peek at the generated bundle...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1390"
  },
  {
    "text": "we can see the changes reflected here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1406"
  },
  {
    "text": "Now that we have a test bed for the plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1410"
  },
  {
    "text": "we could flesh out the test suite ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1412"
  },
  {
    "text": "and eventually share the plugin package with others. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1414"
  },
  {
    "text": "To recap, plugins can be used to automate and share developer tooling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1417"
  },
  {
    "text": "custom commands provide a way to automate common tasks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1422"
  },
  {
    "text": "and build tools can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1426"
  },
  {
    "text": "to generate files during the build process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1427"
  },
  {
    "text": "Thanks for listening! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1431"
  },
  {
    "text": "♪ instrumental hip hop music ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110401/?time=1433"
  }
]