[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=3"
  },
  {
    "text": "Hi, my name is Jaideep Joshi, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=10"
  },
  {
    "text": "and I'm a GPU software engineer at Apple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=11"
  },
  {
    "text": "In this session, I will introduce ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=14"
  },
  {
    "text": "a new feature in Metal 3 that will simplify ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=16"
  },
  {
    "text": "and optimize resource loading for your games and apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=19"
  },
  {
    "text": "I'll start by showing you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=23"
  },
  {
    "text": "how the fast resource loading feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=24"
  },
  {
    "text": "can fit into your app's asset-loading pipeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=26"
  },
  {
    "text": "It has several key features that harness new storage technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=30"
  },
  {
    "text": "on Apple products. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=33"
  },
  {
    "text": "Fast resource loading has some advanced features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=36"
  },
  {
    "text": "that solve interesting scenarios your applications may run into. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=39"
  },
  {
    "text": "There are a few best practice recommendations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=43"
  },
  {
    "text": "you should know about that will help you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=45"
  },
  {
    "text": "effectively use these features in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=47"
  },
  {
    "text": "As you add fast resource loading to your apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=52"
  },
  {
    "text": "tools like Metal System Trace and the GPU debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=55"
  },
  {
    "text": "can help profile and fix issues you may run into. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=58"
  },
  {
    "text": "At the end, I'll walk through an example ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=62"
  },
  {
    "text": "that shows fast resource loading in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=65"
  },
  {
    "text": "So here's what you can do with Metal 3's fast resource loading.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=69"
  },
  {
    "text": "With Metal 3's fast resource loading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=75"
  },
  {
    "text": "your games and apps can load assets with low latency ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=77"
  },
  {
    "text": "and high throughput by taking advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=80"
  },
  {
    "text": "of the Apple silicon unified memory architecture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=83"
  },
  {
    "text": "and fast SSD storage included with Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=85"
  },
  {
    "text": "You will learn the best ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=90"
  },
  {
    "text": "to stream data and reduce load times ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=91"
  },
  {
    "text": "to ensure that your game's assets are ready on time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=94"
  },
  {
    "text": "A key aspect of reducing load times ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=98"
  },
  {
    "text": "is to load only what you need ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=101"
  },
  {
    "text": "at the smallest possible granularity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=102"
  },
  {
    "text": "The high throughput and low latency in Metal 3 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=105"
  },
  {
    "text": "lets your apps stream higher-quality assets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=109"
  },
  {
    "text": "including textures, audio, and geometry data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=112"
  },
  {
    "text": "Now I'll walk you through an example of asset loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=116"
  },
  {
    "text": "in a game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=119"
  },
  {
    "text": "Games typically show a loading screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=121"
  },
  {
    "text": "when they first start up, or at the beginning of a new level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=123"
  },
  {
    "text": "so they can load the game's assets into memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=127"
  },
  {
    "text": "As the player moves through the level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=130"
  },
  {
    "text": "the game loads more assets for the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=132"
  },
  {
    "text": "The downside is the player has to wait a long time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=136"
  },
  {
    "text": "while the game makes multiple requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=139"
  },
  {
    "text": "to the storage system to load assets up front. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=141"
  },
  {
    "text": "Plus, those assets can have a large memory footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=145"
  },
  {
    "text": "There are a few ways to improve this experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=149"
  },
  {
    "text": "Games can improve this experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=154"
  },
  {
    "text": "by dynamically streaming objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=155"
  },
  {
    "text": "as the player gets closer to them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=157"
  },
  {
    "text": "This way, the game only loads what it needs at first ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=160"
  },
  {
    "text": "and gradually streams other resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=164"
  },
  {
    "text": "as the player moves through the level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=166"
  },
  {
    "text": "For example, the game initially loads this chalkboard ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=169"
  },
  {
    "text": "at a lower resolution, but as the player walks towards it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=173"
  },
  {
    "text": "the game loads a higher-resolution version. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=176"
  },
  {
    "text": "This approach reduces the time the player waits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=180"
  },
  {
    "text": "at the loading screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=183"
  },
  {
    "text": "However, the player might still see lower-resolution items ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=185"
  },
  {
    "text": "in the scene even when they are up close, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=188"
  },
  {
    "text": "because it takes too long to load ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=191"
  },
  {
    "text": "the higher-resolution versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=193"
  },
  {
    "text": "One way to deal with this is to stream smaller portions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=196"
  },
  {
    "text": "of each asset. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=199"
  },
  {
    "text": "For example, your game could load only the visible regions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=203"
  },
  {
    "text": "of the scene with sparse textures that stream tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=206"
  },
  {
    "text": "instead of whole mip levels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=209"
  },
  {
    "text": "This vastly reduces the amount of data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=212"
  },
  {
    "text": "your app needs to stream. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=214"
  },
  {
    "text": "With that approach, the load requests get smaller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=217"
  },
  {
    "text": "and there are more of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=220"
  },
  {
    "text": "But that's OK, because modern storage hardware ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=221"
  },
  {
    "text": "can run multiple load requests at once. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=224"
  },
  {
    "text": "This means that you can increase the resolution ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=228"
  },
  {
    "text": "and scale of your scene without compromising the gameplay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=230"
  },
  {
    "text": "Along with issuing a large number of small-load requests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=235"
  },
  {
    "text": "you also have the ability to prioritize your load requests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=238"
  },
  {
    "text": "to ensure that high-priority requests finish in time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=242"
  },
  {
    "text": "Now that I have covered the ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=246"
  },
  {
    "text": "to boost visual fidelity of games while reducing load times, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=247"
  },
  {
    "text": "I'll show you how Metal 3's fast resource loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=251"
  },
  {
    "text": "helps you do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=255"
  },
  {
    "text": "Fast resource loading is an asynchronous API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=256"
  },
  {
    "text": "that loads resources from storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=259"
  },
  {
    "text": "Unlike existing load APIs, the thread which issues the loads ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=262"
  },
  {
    "text": "does not need to wait for the loads to finish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=266"
  },
  {
    "text": "The load operations execute concurrently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=269"
  },
  {
    "text": "to better utilize the throughput of faster storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=272"
  },
  {
    "text": "You can batch load operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=276"
  },
  {
    "text": "to further minimize the overhead of resource loading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=278"
  },
  {
    "text": "And finally, with Metal 3, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=282"
  },
  {
    "text": "you can prioritize load operations for lower latency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=283"
  },
  {
    "text": "Now I'll show you the key features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=288"
  },
  {
    "text": "that will help you build your asset-loading pipeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=290"
  },
  {
    "text": "starting with the steps to load resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=293"
  },
  {
    "text": "There are three steps to load resources: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=296"
  },
  {
    "text": "open a file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=299"
  },
  {
    "text": "issue the necessary load commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=300"
  },
  {
    "text": "and then synchronize these load commands with rendering work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=302"
  },
  {
    "text": "Here's how you do that, starting with opening a file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=307"
  },
  {
    "text": "You open an existing file by creating a file handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=310"
  },
  {
    "text": "with a Metal device instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=314"
  },
  {
    "text": "For example, this code uses the Metal device instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=316"
  },
  {
    "text": "to create a file handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=320"
  },
  {
    "text": "by calling its new makeIOHandle method with a file path URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=321"
  },
  {
    "text": "Once you have a file handle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=328"
  },
  {
    "text": "you can use it to issue load commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=330"
  },
  {
    "text": "Here's a typical scenario in an application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=333"
  },
  {
    "text": "where it performs load operations and encodes GPU work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=336"
  },
  {
    "text": "With existing load APIs, the app has to wait for the loading work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=340"
  },
  {
    "text": "to finish before it can encode the rendering work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=343"
  },
  {
    "text": "Metal 3 lets your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=346"
  },
  {
    "text": "asynchronously execute load commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=348"
  },
  {
    "text": "Start by creating a Metal IO command queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=351"
  },
  {
    "text": "Then use that queue to create IO command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=355"
  },
  {
    "text": "and encode load commands to those buffers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=358"
  },
  {
    "text": "However, as command buffers execute asynchronously ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=362"
  },
  {
    "text": "on the command queue, your app does not need to wait ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=365"
  },
  {
    "text": "for the load operations to finish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=369"
  },
  {
    "text": "In fact, not only do all commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=372"
  },
  {
    "text": "within an IO command buffer execute concurrently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=374"
  },
  {
    "text": "IO command buffers themselves execute concurrently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=377"
  },
  {
    "text": "and complete out of order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=380"
  },
  {
    "text": "This concurrent execution model better utilizes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=382"
  },
  {
    "text": "faster-storage hardware by maximizing throughput. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=386"
  },
  {
    "text": "You can encode three types of IO commands to a command buffer: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=390"
  },
  {
    "text": "loadTexture, which loads to a Metal texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=395"
  },
  {
    "text": "for texture streaming; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=397"
  },
  {
    "text": "loadBuffer, which loads to a Metal buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=399"
  },
  {
    "text": "for streaming scene or geometry data; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=401"
  },
  {
    "text": "and loadBytes, which loads to CPU-accessible memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=404"
  },
  {
    "text": "You create IO command buffers from an IO command queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=409"
  },
  {
    "text": "To create a queue, first make and configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=413"
  },
  {
    "text": "an IO command queue descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=416"
  },
  {
    "text": "By default, the queues are concurrent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=419"
  },
  {
    "text": "but you can also set them to run command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=422"
  },
  {
    "text": "sequentially and completely in order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=424"
  },
  {
    "text": "Then pass the queue descriptor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=428"
  },
  {
    "text": "to the Metal device instance's makeIOCommandQueue method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=430"
  },
  {
    "text": "Create an IO command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=436"
  },
  {
    "text": "by calling the command queue's makeCommandBuffer method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=438"
  },
  {
    "text": "Then use that command buffer to encode load commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=442"
  },
  {
    "text": "that load textures and buffers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=446"
  },
  {
    "text": "Metal's validation layer will catch encoding errors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=449"
  },
  {
    "text": "at runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=452"
  },
  {
    "text": "The load commands are what use the fileHandle instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=453"
  },
  {
    "text": "created earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=456"
  },
  {
    "text": "When you are done adding load commands to a command buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=459"
  },
  {
    "text": "submit it to the queue for execution ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=462"
  },
  {
    "text": "by calling the command buffer's commit method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=464"
  },
  {
    "text": "Now that I've covered how to create IO command queues, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=469"
  },
  {
    "text": "command buffers, issue load commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=472"
  },
  {
    "text": "and submit them to the queue, I want to show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=474"
  },
  {
    "text": "how you can synchronize loading work with the other GPU work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=477"
  },
  {
    "text": "An app typically kicks off its rendering work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=481"
  },
  {
    "text": "after it finishes loading resources for that rendering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=484"
  },
  {
    "text": "But an app that uses fast resource loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=488"
  },
  {
    "text": "needs a way to synchronize the IO command queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=491"
  },
  {
    "text": "with the render command queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=494"
  },
  {
    "text": "You can synchronize these queues with a Metal shared event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=497"
  },
  {
    "text": "Metal hared events let you synchronize the command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=501"
  },
  {
    "text": "from your IO queue with the command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=504"
  },
  {
    "text": "from your rendering queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=507"
  },
  {
    "text": "You can tell a command buffer to wait for a shared event ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=510"
  },
  {
    "text": "by encoding a waitEvent command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=513"
  },
  {
    "text": "Similarly, you can tell that command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=515"
  },
  {
    "text": "to signal a shared event by encoding a signalEvent command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=518"
  },
  {
    "text": "Metal ensures that all IO commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=522"
  },
  {
    "text": "within the command buffer are complete ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=524"
  },
  {
    "text": "before it signals the shared event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=526"
  },
  {
    "text": "To synchronize between command buffers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=530"
  },
  {
    "text": "you first need a Metal shared event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=532"
  },
  {
    "text": "You can tell a command buffer to wait for a shared event ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=535"
  },
  {
    "text": "by calling its waitForEvent method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=537"
  },
  {
    "text": "Similarly, you can tell a command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=541"
  },
  {
    "text": "to signal a shared event ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=543"
  },
  {
    "text": "by calling its signalEvent method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=544"
  },
  {
    "text": "You can add similar logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=547"
  },
  {
    "text": "to a corresponding GPU command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=548"
  },
  {
    "text": "so that it waits for the IO command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=551"
  },
  {
    "text": "to signal the same shared event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=553"
  },
  {
    "text": "To recap, here are the key features and APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=555"
  },
  {
    "text": "that load resources in your Metal apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=558"
  },
  {
    "text": "Open a file by creating a Metal file handle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=561"
  },
  {
    "text": "Issue load commands by creating an IO command queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=565"
  },
  {
    "text": "and an IO command buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=568"
  },
  {
    "text": "Then, encode load commands to the command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=570"
  },
  {
    "text": "for execution on the queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=573"
  },
  {
    "text": "And finally, use wait and signalEvent commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=576"
  },
  {
    "text": "with Metal shared events to synchronize loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=578"
  },
  {
    "text": "and rendering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=581"
  },
  {
    "text": "Now, I'll go over a few advanced features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=583"
  },
  {
    "text": "that you might find helpful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=586"
  },
  {
    "text": "Here's a typical scenario ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=588"
  },
  {
    "text": "where a game can't fit its entire map in memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=590"
  },
  {
    "text": "which is why it subdivides the map into regions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=593"
  },
  {
    "text": "As the player progresses through the map, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=596"
  },
  {
    "text": "the game starts preloading regions of the map. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=598"
  },
  {
    "text": "Based on the player's direction, the game determines ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=602"
  },
  {
    "text": "that the best regions to preload are the northwest, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=605"
  },
  {
    "text": "west, and southwest regions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=607"
  },
  {
    "text": "However, once the player moves to the western region ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=610"
  },
  {
    "text": "and starts heading south, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=613"
  },
  {
    "text": "preloading the northwestern region is no longer beneficial. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=614"
  },
  {
    "text": "To reduce the latency of future loads, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=618"
  },
  {
    "text": "Metal 3 allows you to attempt to cancel load operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=621"
  },
  {
    "text": "Let's look at how to do that in practice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=625"
  },
  {
    "text": "When the player is in the center region, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=629"
  },
  {
    "text": "encode and commit IO command buffers for three regions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=631"
  },
  {
    "text": "Then when the player is in the western region ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=636"
  },
  {
    "text": "and heading south, use the tryCancel method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=638"
  },
  {
    "text": "to cancel the loads for the northwestern region. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=641"
  },
  {
    "text": "Cancelling is at the command buffer granularity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=644"
  },
  {
    "text": "so you can cancel the command buffer mid-execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=648"
  },
  {
    "text": "If at some later point, you want to know ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=651"
  },
  {
    "text": "whether the region was completely loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=653"
  },
  {
    "text": "you can check the status of the command buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=656"
  },
  {
    "text": "Metal 3 also lets you prioritize your IO work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=660"
  },
  {
    "text": "Consider a game scenario where the player teleports ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=665"
  },
  {
    "text": "to a new part of the scene and your game starts streaming in ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=668"
  },
  {
    "text": "large amounts of graphics assets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=672"
  },
  {
    "text": "At the same time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=674"
  },
  {
    "text": "the game needs to play the teleportation sound effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=676"
  },
  {
    "text": "Fast resource loading allows you to load all your app's assets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=679"
  },
  {
    "text": "including audio data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=683"
  },
  {
    "text": "To load audio, you can use the loadBytes command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=685"
  },
  {
    "text": "discussed earlier to load to application-allocated memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=688"
  },
  {
    "text": "In this example, texture and audio IO command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=692"
  },
  {
    "text": "are concurrently executing on a single IO command queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=696"
  },
  {
    "text": "This simplified diagram shows the requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=700"
  },
  {
    "text": "at the storage layer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=703"
  },
  {
    "text": "The storage system is able to execute ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=705"
  },
  {
    "text": "both audio and texture load requests in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=706"
  },
  {
    "text": "To avoid delayed audio, it is critical ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=710"
  },
  {
    "text": "that the streaming system be able to prioritize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=713"
  },
  {
    "text": "audio requests over texture requests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=715"
  },
  {
    "text": "To prioritize audio requests, you can create ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=718"
  },
  {
    "text": "a separate IO command queue, and set its priority to high. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=721"
  },
  {
    "text": "The storage system will ensure that high-priority IO requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=726"
  },
  {
    "text": "have a lower latency and are prioritized over other requests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=730"
  },
  {
    "text": "After creating a separate high-priority queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=735"
  },
  {
    "text": "for audio assets, the execution time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=737"
  },
  {
    "text": "of the audio load requests has gotten smaller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=740"
  },
  {
    "text": "while that of the parallel texture load requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=742"
  },
  {
    "text": "has gotten larger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=745"
  },
  {
    "text": "Here's how you create a high-priority queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=748"
  },
  {
    "text": "Simply set the command queue descriptor's priority property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=751"
  },
  {
    "text": "to high. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=754"
  },
  {
    "text": "You can also set the priority to normal or low, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=756"
  },
  {
    "text": "then create a new IO command queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=759"
  },
  {
    "text": "from the descriptor as usual. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=761"
  },
  {
    "text": "Just remember that you cannot change a queue's priority level ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=764"
  },
  {
    "text": "after you create it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=767"
  },
  {
    "text": "As you add fast resource loading to your apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=769"
  },
  {
    "text": "here's some best practices to keep in mind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=772"
  },
  {
    "text": "First, consider compressing your assets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=776"
  },
  {
    "text": "You can reduce your app's disk footprint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=779"
  },
  {
    "text": "by using built-in or custom compression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=781"
  },
  {
    "text": "Compression lets you trade runtime performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=785"
  },
  {
    "text": "for a smaller disk footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=787"
  },
  {
    "text": "Additionally, you can improve storage throughput ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=790"
  },
  {
    "text": "by tuning the sparse page size when using sparse textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=792"
  },
  {
    "text": "I'll go through each of these in more detail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=797"
  },
  {
    "text": "starting with compression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=800"
  },
  {
    "text": "You can use Metals 3's APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=802"
  },
  {
    "text": "to compress your asset files offline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=804"
  },
  {
    "text": "First, create a compression context and configure it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=808"
  },
  {
    "text": "with a chunk size and compression method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=811"
  },
  {
    "text": "Then pass parts of your asset files to the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=815"
  },
  {
    "text": "to produce a single compressed version of all your files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=818"
  },
  {
    "text": "The compression context works by chunking all the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=822"
  },
  {
    "text": "and compresses it with the codec of your choosing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=826"
  },
  {
    "text": "and stores it to a pack file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=828"
  },
  {
    "text": "In this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=831"
  },
  {
    "text": "the context compresses the data in 64K chunks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=833"
  },
  {
    "text": "but you can choose a suitable chunk size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=837"
  },
  {
    "text": "based on the size and type of data you want to compress. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=839"
  },
  {
    "text": "Here's how you use the compression APIs in Metal 3. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=843"
  },
  {
    "text": "First, create a compression context ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=848"
  },
  {
    "text": "by providing a path for creating the compressed file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=850"
  },
  {
    "text": "a compression method, and a chunk size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=853"
  },
  {
    "text": "Next, get file data and append it to the context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=856"
  },
  {
    "text": "Here, the file data is in an NSData object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=860"
  },
  {
    "text": "You can append data from different files ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=864"
  },
  {
    "text": "by making multiple calls to append data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=867"
  },
  {
    "text": "When you're done adding data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=871"
  },
  {
    "text": "finalize and save the compressed file ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=872"
  },
  {
    "text": "by calling the flush and destroy compression context function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=874"
  },
  {
    "text": "You can open and access a compressed file ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=880"
  },
  {
    "text": "by creating a file handle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=883"
  },
  {
    "text": "This file handle is used when issuing load commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=885"
  },
  {
    "text": "For compressed files, Metal 3 performs inline decompression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=889"
  },
  {
    "text": "by translating the offsets to a list of chunks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=893"
  },
  {
    "text": "it needs to decompress, and loads them to your resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=896"
  },
  {
    "text": "You create a file handle with a Metal device instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=900"
  },
  {
    "text": "For example, this code uses the Metal device instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=905"
  },
  {
    "text": "to create a file handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=908"
  },
  {
    "text": "by providing the compressed file path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=910"
  },
  {
    "text": "to the makeIOHandle method I covered earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=912"
  },
  {
    "text": "For compressed files, an additional parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=916"
  },
  {
    "text": "is the compression method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=918"
  },
  {
    "text": "This is the same compression method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=921"
  },
  {
    "text": "you used at the time of creating the compressed file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=922"
  },
  {
    "text": "Now, I'll go through ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=926"
  },
  {
    "text": "the different compression methods supported ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=928"
  },
  {
    "text": "and the characteristics of each of them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=930"
  },
  {
    "text": "so you can better understand how to choose between them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=932"
  },
  {
    "text": "Use LZ4 when decompression speed is critical ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=936"
  },
  {
    "text": "and your app can afford a large disk footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=939"
  },
  {
    "text": "If a balance between codec speed and compression ratio ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=942"
  },
  {
    "text": "is important to you, use ZLib, LZBitmap, or LZFSE. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=945"
  },
  {
    "text": "Amongst the balanced codecs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=951"
  },
  {
    "text": "ZLib works better with non-Apple devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=953"
  },
  {
    "text": "LZBitmap is fast at encoding and decoding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=956"
  },
  {
    "text": "and LZFSE has a high compression ratio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=960"
  },
  {
    "text": "If you need the best compression ratio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=964"
  },
  {
    "text": "consider using the LZMA codec, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=966"
  },
  {
    "text": "if your app can afford the extra time it takes to decode assets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=969"
  },
  {
    "text": "It is also possible to use your own compression scheme. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=974"
  },
  {
    "text": "You may have cases where your data benefits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=978"
  },
  {
    "text": "from a custom compression codec. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=980"
  },
  {
    "text": "In that case, you can replace the compression context ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=983"
  },
  {
    "text": "with your own compressor and translate offsets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=986"
  },
  {
    "text": "and perform decompression at runtime yourself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=989"
  },
  {
    "text": "Now that you have seen how to use compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=993"
  },
  {
    "text": "to reduce disk footprint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=995"
  },
  {
    "text": "let's look at tuning sparse page size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=997"
  },
  {
    "text": "Earlier versions of Metal support loading tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1000"
  },
  {
    "text": "to sparse textures at a 16K granularity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1003"
  },
  {
    "text": "With Metal 3, you can specify two new sparse tile sizes: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1007"
  },
  {
    "text": "64 and 256K. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1011"
  },
  {
    "text": "These new sizes let you to stream textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1014"
  },
  {
    "text": "at a larger granularity to better utilize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1017"
  },
  {
    "text": "and saturate the storage hardware. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1020"
  },
  {
    "text": "Note that there is a tradeoff ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1022"
  },
  {
    "text": "between streaming larger tiles sizes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1024"
  },
  {
    "text": "and the amount of data you stream, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1026"
  },
  {
    "text": "so you'll have to experiment to see which sizes work best ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1029"
  },
  {
    "text": "with your app and its sparse textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1032"
  },
  {
    "text": "Next, let's look at how you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1036"
  },
  {
    "text": "the set of Metal Developer Tools to profile and debug ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1038"
  },
  {
    "text": "fast resource loading in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1041"
  },
  {
    "text": "Xcode 14 includes full support for fast resource loading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1044"
  },
  {
    "text": "From runtime profiling with Metal System Trace ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1048"
  },
  {
    "text": "to API inspection and advanced dependency analysis ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1052"
  },
  {
    "text": "with Metal debugger.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1055"
  },
  {
    "text": "Let's start with runtime profiling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1059"
  },
  {
    "text": "In Xcode 14, Instruments can profile fast resource loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1062"
  },
  {
    "text": "with the Metal System Trace template. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1065"
  },
  {
    "text": "Instruments is a powerful analysis and profiling tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1068"
  },
  {
    "text": "that will help you achieve the best performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1071"
  },
  {
    "text": "in your Metal app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1073"
  },
  {
    "text": "The Metal System Trace template allows you to check ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1076"
  },
  {
    "text": "when load operations are encoded and executed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1078"
  },
  {
    "text": "You will be able to understand how they correlate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1082"
  },
  {
    "text": "with the activity that your app is performing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1084"
  },
  {
    "text": "on both the CPU and the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1086"
  },
  {
    "text": "To learn how to profile your Metal app with Instruments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1090"
  },
  {
    "text": "please check out these previous sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1093"
  },
  {
    "text": "\"Optimize Metal apps and games with GPU counters\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1096"
  },
  {
    "text": "and \"Optimize high-end games for Apple GPUs.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1099"
  },
  {
    "text": "Now, let's switch gears to debugging. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1103"
  },
  {
    "text": "With the Metal debugger in Xcode 14, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1106"
  },
  {
    "text": "you can now analyze your game's use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1108"
  },
  {
    "text": "of the new fast resource loading API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1110"
  },
  {
    "text": "Once you take a frame capture, you will be able to inspect ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1113"
  },
  {
    "text": "all fast resource loading API calls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1116"
  },
  {
    "text": "From the IO command buffers created ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1120"
  },
  {
    "text": "to the load operations that were issued. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1123"
  },
  {
    "text": "You can now visually inspect ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1126"
  },
  {
    "text": "fast resource loading dependencies ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1128"
  },
  {
    "text": "with the new Dependency viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1130"
  },
  {
    "text": "The Dependency viewer gives a detailed overview ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1133"
  },
  {
    "text": "of resource dependencies between IO command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1136"
  },
  {
    "text": "and Metal passes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1139"
  },
  {
    "text": "From here, you can use all the features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1141"
  },
  {
    "text": "in the new Dependency viewer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1144"
  },
  {
    "text": "such as the new synchronization edges and graph filtering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1145"
  },
  {
    "text": "to deep dive and optimize your resource loading dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1149"
  },
  {
    "text": "To learn more about the new Dependency viewer in Xcode 14, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1153"
  },
  {
    "text": "please check out this year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1157"
  },
  {
    "text": "\"Go bindless with Metal 3\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1158"
  },
  {
    "text": "Now, let's look at fast resource loading in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1162"
  },
  {
    "text": "This is a test scene that uses ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1166"
  },
  {
    "text": "the new fast resource loading APIs to stream texture data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1167"
  },
  {
    "text": "by using sparse textures with a tile size of 16 kilobytes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1171"
  },
  {
    "text": "This video is from a MacBook Pro with an M1 Pro chip. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1175"
  },
  {
    "text": "The streaming system queries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1178"
  },
  {
    "text": "the GPU's sparse texture access counters to identify two things: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1180"
  },
  {
    "text": "the tiles it has sampled but not loaded ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1184"
  },
  {
    "text": "and the loaded tiles the app isn't using. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1186"
  },
  {
    "text": "The app uses this information to encode a list of loads ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1189"
  },
  {
    "text": "for the tiles it needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1192"
  },
  {
    "text": "and a list of evictions for tiles it doesn't need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1194"
  },
  {
    "text": "That way, the working set contains only the tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1197"
  },
  {
    "text": "the app is mostly likely to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1200"
  },
  {
    "text": "If the player decides to travel to another part of the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1203"
  },
  {
    "text": "the app needs to stream in a completely new set ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1206"
  },
  {
    "text": "of high-resolution textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1208"
  },
  {
    "text": "If the streaming system is fast enough, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1211"
  },
  {
    "text": "the player will not notice this streaming occurring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1213"
  },
  {
    "text": "If I pause the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1217"
  },
  {
    "text": "you can observe the image differences more clearly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1218"
  },
  {
    "text": "The left side is loading sparse tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1221"
  },
  {
    "text": "on a single thread using the pread API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1223"
  },
  {
    "text": "The right side is loading sparse tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1226"
  },
  {
    "text": "using the fast resource loading APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1228"
  },
  {
    "text": "As the player enters the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1231"
  },
  {
    "text": "most of the textures haven't fully loaded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1233"
  },
  {
    "text": "Once the loads complete, the final high-resolution version ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1236"
  },
  {
    "text": "of the textures is visible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1239"
  },
  {
    "text": "If I go back to the beginning of this scene and slow it down, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1242"
  },
  {
    "text": "it is easier to notice the improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1246"
  },
  {
    "text": "that fast resource loading provides. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1248"
  },
  {
    "text": "To highlight the differences, this rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1251"
  },
  {
    "text": "marks tiles the app has not yet loaded with a red tint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1254"
  },
  {
    "text": "At first, the scene shows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1259"
  },
  {
    "text": "that the app hasn't loaded most of the tiles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1261"
  },
  {
    "text": "However, as the player enters the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1265"
  },
  {
    "text": "fast resource loading improves the loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1268"
  },
  {
    "text": "of high-resolution tiles and minimizes the delay ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1271"
  },
  {
    "text": "compared to the single-threaded pread version. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1274"
  },
  {
    "text": "Metal 3's fast resource loading helps you build a powerful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1278"
  },
  {
    "text": "and efficient asset-streaming system that lets your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1281"
  },
  {
    "text": "take advantage of the latest storage technologies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1284"
  },
  {
    "text": "Use it to reduce load times by streaming assets just in time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1288"
  },
  {
    "text": "including higher-quality images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1292"
  },
  {
    "text": "Use Metal's shared events to asynchronously load assets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1295"
  },
  {
    "text": "while the GPU renders a scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1300"
  },
  {
    "text": "For assets that your app needs in a hurry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1303"
  },
  {
    "text": "minimize latency by creating a command queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1306"
  },
  {
    "text": "with a higher priority. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1308"
  },
  {
    "text": "And remember, keep the storage system busy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1311"
  },
  {
    "text": "by sending load commands early. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1314"
  },
  {
    "text": "You can always cancel the ones you don't need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1316"
  },
  {
    "text": "Fast resource loading in Metal 3 introduces new ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1320"
  },
  {
    "text": "to harness the power of modern storage hardware ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1324"
  },
  {
    "text": "for high-throughput asset loading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1326"
  },
  {
    "text": "I can't wait to see how you use these features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1329"
  },
  {
    "text": "to improve your app's visual quality and responsiveness. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1332"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1335"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10104/?time=1337"
  }
]