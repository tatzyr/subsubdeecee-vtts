[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=0"
  },
  {
    "text": "Hi, my name's Philippe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=9"
  },
  {
    "text": "Swift has a growing catalog of open source packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=11"
  },
  {
    "text": "I am pleased to introduce you to one of the newest additions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=15"
  },
  {
    "text": "Swift Async Algorithms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=18"
  },
  {
    "text": "This package is alongside the other packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=20"
  },
  {
    "text": "like Swift Collections and Swift Algorithms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=23"
  },
  {
    "text": "The Swift Async Algorithms package is a set of algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=26"
  },
  {
    "text": "specifically focused on processing values over time using AsyncSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=30"
  },
  {
    "text": "But before we get into it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=35"
  },
  {
    "text": "let's take a brief moment to recap AsyncSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=37"
  },
  {
    "text": "AsyncSequence is a protocol that lets you describe values ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=40"
  },
  {
    "text": "produced asynchronously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=43"
  },
  {
    "text": "Basically, it's just like Sequence, but has two key differences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=45"
  },
  {
    "text": "The next function from its iterator is asynchronous, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=50"
  },
  {
    "text": "being that it can deliver values using Swift concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=54"
  },
  {
    "text": "It also lets you handle any potential failures using Swift's throw effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=58"
  },
  {
    "text": "And just like sequence, you can iterate it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=63"
  },
  {
    "text": "using the for-await-in syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=66"
  },
  {
    "text": "In short, if you know how to use Sequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=69"
  },
  {
    "text": "you already know how to use AsyncSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=71"
  },
  {
    "text": "Now, when AsyncSequence was introduced, we added in almost all the tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=75"
  },
  {
    "text": "you would expect to find with Sequence right there with the async versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=79"
  },
  {
    "text": "You have algorithms like map, filter, reduce, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=84"
  },
  {
    "text": "The Swift Async Algorithms package takes this a step further ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=90"
  },
  {
    "text": "by incorporating more advanced algorithms, as well as interoperating ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=93"
  },
  {
    "text": "with clocks to give you some really powerful stuff. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=97"
  },
  {
    "text": "This is an open source package of AsyncSequence algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=101"
  },
  {
    "text": "that augment Swift concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=105"
  },
  {
    "text": "Last year we introduced the Swift Algorithms package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=108"
  },
  {
    "text": "To demonstrate the uses of those algorithms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=111"
  },
  {
    "text": "we made a messaging app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=113"
  },
  {
    "text": "This was a great example of some of the rich and powerful things ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=115"
  },
  {
    "text": "you can do with that package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=118"
  },
  {
    "text": "We decided there were a number of really good opportunities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=120"
  },
  {
    "text": "to take advantage of migrating the app to use Swift concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=123"
  },
  {
    "text": "To highlight just a few of the asynchronous algorithms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=127"
  },
  {
    "text": "I'm gonna take you through some of the things that we used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=131"
  },
  {
    "text": "and how they work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=133"
  },
  {
    "text": "First off, we have a family of algorithms for working ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=136"
  },
  {
    "text": "with multiple input AsyncSequences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=139"
  },
  {
    "text": "These are algorithms focused on combining AsyncSequences together in different ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=141"
  },
  {
    "text": "But they all share one characteristic: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=147"
  },
  {
    "text": "They take multiple input AsyncSequences and produce one output AsyncSequence.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=150"
  },
  {
    "text": "One you might already be familiar with is Zip. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=156"
  },
  {
    "text": "The Zip algorithm takes multiple inputs and iterates them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=160"
  },
  {
    "text": "such that it produces a tuple of the results from each of the bases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=164"
  },
  {
    "text": "Each of the inputs to Zip are the bases that the Zip is constructed from. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=168"
  },
  {
    "text": "The asynchronous Zip algorithm works just like the Zip algorithm ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=172"
  },
  {
    "text": "in the standard library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=176"
  },
  {
    "text": "but it iterates each of the bases concurrently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=177"
  },
  {
    "text": "and rethrows errors if a failure occurs on iterating any of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=180"
  },
  {
    "text": "Now, accomplishing that concurrent iteration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=184"
  },
  {
    "text": "with rethrowing errors can be rather involved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=187"
  },
  {
    "text": "But the Swift Async Algorithms package took care of all of that ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=190"
  },
  {
    "text": "for us in our messaging app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=193"
  },
  {
    "text": "We previously had a lot of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=195"
  },
  {
    "text": "coordinating asynchronously generating previews ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=197"
  },
  {
    "text": "of video recordings and transcoding video ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=199"
  },
  {
    "text": "into multiple sizes for efficient storage and transmission. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=202"
  },
  {
    "text": "By using Zip we can ensure that the transcoded video gets a preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=206"
  },
  {
    "text": "when we send it off to the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=211"
  },
  {
    "text": "Since Zip is concurrent, neither the transcoding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=213"
  },
  {
    "text": "or the preview will delay each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=216"
  },
  {
    "text": "But this goes a bit further. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=219"
  },
  {
    "text": "Zip itself has no preference on which side ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=221"
  },
  {
    "text": "produced a value first or not, so a video could be produced first ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=223"
  },
  {
    "text": "or a preview, and no matter which side it is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=228"
  },
  {
    "text": "it will await for the other to send a complete tuple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=231"
  },
  {
    "text": "We can await the pairs such that they can be uploaded together ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=235"
  },
  {
    "text": "because Zip awaits each side concurrently to construct a tuple of the values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=238"
  },
  {
    "text": "We came to the conclusion that modeling our incoming messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=244"
  },
  {
    "text": "as an AsyncSequence made a lot of sense. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=247"
  },
  {
    "text": "So we decided to use AsyncStream to handle those messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=250"
  },
  {
    "text": "since it preserves order and turns our callbacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=254"
  },
  {
    "text": "into an AsyncSequence of messages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=257"
  },
  {
    "text": "One of the requested features we needed to tackle is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=260"
  },
  {
    "text": "that we wanted to support multiple accounts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=263"
  },
  {
    "text": "So each account creates an AsyncStream of incoming messages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=265"
  },
  {
    "text": "but when implementing this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=270"
  },
  {
    "text": "we need to handle them all together as one singular AsyncSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=271"
  },
  {
    "text": "This means we needed an algorithm for merging those AsyncSequences together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=276"
  },
  {
    "text": "Thankfully the Swift Async Algorithms package has an algorithm for exactly that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=281"
  },
  {
    "text": "aptly named \"Merge.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=287"
  },
  {
    "text": "It works similarly to Zip in the regards that it concurrently iterates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=289"
  },
  {
    "text": "multiple AsyncSequences. But instead of creating paired tuples, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=294"
  },
  {
    "text": "it requires the bases to share the same element type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=298"
  },
  {
    "text": "and merges the base AsyncSequences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=301"
  },
  {
    "text": "into one singular AsyncSequence of those elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=304"
  },
  {
    "text": "Merge works by taking the first element produced by any ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=308"
  },
  {
    "text": "of the sides when iterated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=312"
  },
  {
    "text": "It keeps iterating until there are no more values that could be produced, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=313"
  },
  {
    "text": "specifically when all base AsyncSequences return nil from their iterator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=318"
  },
  {
    "text": "If any of the bases produces an error, the other iterations are cancelled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=323"
  },
  {
    "text": "This lets us take the AsyncSequences of messages and merge them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=327"
  },
  {
    "text": "These combining algorithms work concurrently on when values are produced, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=333"
  },
  {
    "text": "but sometimes it is useful to actually interact with time itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=338"
  },
  {
    "text": "The Swift Async Algorithms package brings in a family of algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=343"
  },
  {
    "text": "to work with time by leveraging the new Clock API in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=347"
  },
  {
    "text": "Time itself can be a really complex subject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=351"
  },
  {
    "text": "and new in Swift (5.7) are a set of APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=355"
  },
  {
    "text": "to make that safe and consistent: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=358"
  },
  {
    "text": "Clock, Instant, and Duration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=361"
  },
  {
    "text": "The Clock protocol defines two primitives, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=366"
  },
  {
    "text": "a way to wake up after a given instant ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=369"
  },
  {
    "text": "and a way to produce a concept of now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=371"
  },
  {
    "text": "There are a few built in clocks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=373"
  },
  {
    "text": "Two of the more common ones are ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=375"
  },
  {
    "text": "the ContinuousClock and the SuspendingClock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=377"
  },
  {
    "text": "You can use the ContinuousClock to measure time just like a stopwatch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=380"
  },
  {
    "text": "where time progresses no matter the state of the thing being measured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=384"
  },
  {
    "text": "The SuspendingClock, on the other hand, does what its name implies; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=388"
  },
  {
    "text": "it suspends when the machine is put to sleep. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=392"
  },
  {
    "text": "We used the new clock API in our app to migrate from existing callback events ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=395"
  },
  {
    "text": "to clock sleep function to handle dismissing alerts after a deadline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=400"
  },
  {
    "text": "We were able to create the deadline by adding a duration value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=405"
  },
  {
    "text": "that indicated specifically the number of seconds we wanted to delay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=409"
  },
  {
    "text": "Clock also has some handy methods to measure the elapsed duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=415"
  },
  {
    "text": "of execution of work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=418"
  },
  {
    "text": "Here we have those two common clocks I mentioned earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=420"
  },
  {
    "text": "the SuspendingClock and ContinuousClock.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=423"
  },
  {
    "text": "Below are displays showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=427"
  },
  {
    "text": "the potential elapsed duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=429"
  },
  {
    "text": "of work being measured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=431"
  },
  {
    "text": "The key difference between these two clocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=432"
  },
  {
    "text": "comes from its behavior when the machine is asleep.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=436"
  },
  {
    "text": "For long running work like these, the work can be paused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=440"
  },
  {
    "text": "just as we did here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=444"
  },
  {
    "text": "but when we resume the execution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=445"
  },
  {
    "text": "the ContinuousClock has progressed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=450"
  },
  {
    "text": "while the machine was asleep, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=452"
  },
  {
    "text": "but the SuspendingClock did not. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=453"
  },
  {
    "text": "Commonly, this difference can be the key detail ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=456"
  },
  {
    "text": "to make sure things like animations work as expected ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=459"
  },
  {
    "text": "by suspending the timing of the execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=462"
  },
  {
    "text": "If you need to interact with time in relation to the machine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=466"
  },
  {
    "text": "like for animations, use the SuspendingClock.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=469"
  },
  {
    "text": "Measuring tasks in relation to the human in front of the device ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=473"
  },
  {
    "text": "is better suited for the ContinuousClock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=477"
  },
  {
    "text": "So if you need to delay by an absolute duration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=479"
  },
  {
    "text": "something relative to humans, use the ContinuousClock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=483"
  },
  {
    "text": "The Swift Async Algorithms package uses these new Clock, Instant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=487"
  },
  {
    "text": "and Duration types to build generic algorithms for dealing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=492"
  },
  {
    "text": "with many of the concepts of how events are processed with regards to time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=496"
  },
  {
    "text": "In our messaging app, we found these really helpful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=501"
  },
  {
    "text": "for providing precise control over events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=504"
  },
  {
    "text": "It let us rate limit interactions and efficiently buffer messages.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=507"
  },
  {
    "text": "Perhaps the most prominent area that we utilized time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=513"
  },
  {
    "text": "was searching messages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=516"
  },
  {
    "text": "We created a controller that manages a channel of results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=518"
  },
  {
    "text": "The channel marshals search results from the search task back to our UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=522"
  },
  {
    "text": "The search task itself needed to have some specific characteristics ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=527"
  },
  {
    "text": "with regards to time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=531"
  },
  {
    "text": "We wanted to make sure to rate limit searching sent messages on the server.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=533"
  },
  {
    "text": "The algorithm Debounce awaits a quiescence period ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=539"
  },
  {
    "text": "before it emits the next values when iterated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=543"
  },
  {
    "text": "It means that events can come in fast, but we want to make sure to wait ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=546"
  },
  {
    "text": "for a quiet period before dealing with values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=550"
  },
  {
    "text": "When user input from a search field is changed rapidly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=554"
  },
  {
    "text": "we don't want the search controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=558"
  },
  {
    "text": "to fire off a search request for each change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=559"
  },
  {
    "text": "Instead, we want to make sure to wait for a quiet period ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=562"
  },
  {
    "text": "when we're certain typing was likely to be done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=566"
  },
  {
    "text": "By default, the Debounce algorithm will use the ContinuousClock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=569"
  },
  {
    "text": "In this case, we can debounce the input such that it awaits ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=573"
  },
  {
    "text": "a specified duration while nothing has occurred. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=577"
  },
  {
    "text": "Clocks and durations are not just used for debouncing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=580"
  },
  {
    "text": "but they're used for other algorithms too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=583"
  },
  {
    "text": "One area that we found that was really useful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=586"
  },
  {
    "text": "was sending batches of messages to the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=589"
  },
  {
    "text": "In the Swift algorithms package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=592"
  },
  {
    "text": "there's a set of algorithms to chunk values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=594"
  },
  {
    "text": "The Swift Async Algorithms package offers those, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=598"
  },
  {
    "text": "but also adds a set of versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=601"
  },
  {
    "text": "that interoperate with clocks and durations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=603"
  },
  {
    "text": "The family of chunking algorithms allow for control over chunks by count, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=606"
  },
  {
    "text": "by time, or by content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=610"
  },
  {
    "text": "If an error occurs in any of these, that error is rethrown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=612"
  },
  {
    "text": "so our code is safe when it comes to failures.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=616"
  },
  {
    "text": "We used the \"chunked(by:)\" API to ensure that chunks of messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=620"
  },
  {
    "text": "are serialized and sent off by a certain elapsed duration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=624"
  },
  {
    "text": "That way, our server gets efficient packets sent from the clients. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=628"
  },
  {
    "text": "We were able to use this API to build batches of messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=633"
  },
  {
    "text": "every 500 milliseconds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=637"
  },
  {
    "text": "That way, if someone's really excited and typing really fast, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=639"
  },
  {
    "text": "the requests sent to the server are grouped up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=643"
  },
  {
    "text": "When working with collections and sequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=647"
  },
  {
    "text": "it's often useful and performant to lazily process elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=649"
  },
  {
    "text": "AsyncSequence works much like how the lazy algorithms work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=654"
  },
  {
    "text": "in the Swift standard library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=658"
  },
  {
    "text": "But just like those lazy algorithms, there are often times where you need ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=660"
  },
  {
    "text": "to move back into the world of collections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=664"
  },
  {
    "text": "The Swift Async Algorithms package offers a set of initializers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=668"
  },
  {
    "text": "for constructing collections using AsyncSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=672"
  },
  {
    "text": "These let you build up dictionaries, sets, or arrays ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=675"
  },
  {
    "text": "with input AsyncSequences that are known to be finite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=679"
  },
  {
    "text": "The collection initializers let us build in conversions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=683"
  },
  {
    "text": "right into our initialization of messages and keep our data types as Array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=686"
  },
  {
    "text": "This was really useful since we had numerous features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=691"
  },
  {
    "text": "that really could use some updating to use Swift concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=694"
  },
  {
    "text": "And by keeping our existing data structures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=698"
  },
  {
    "text": "we can migrate parts of our app incrementally ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=701"
  },
  {
    "text": "and where it makes sense. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=704"
  },
  {
    "text": "So far, we've just gone over just a handful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=707"
  },
  {
    "text": "of the highlights of Swift Async Algorithms package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=709"
  },
  {
    "text": "There are a whole lot more ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=712"
  },
  {
    "text": "than just what we've covered today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=714"
  },
  {
    "text": "We have algorithms ranging from combining multiple AsyncSequences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=715"
  },
  {
    "text": "rate limiting by time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=721"
  },
  {
    "text": "breaking things into chunks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=725"
  },
  {
    "text": "but those were just the highlights that we ended up ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=728"
  },
  {
    "text": "using extensively in our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=730"
  },
  {
    "text": "This package has a lot more than just those. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=733"
  },
  {
    "text": "It ranges from buffering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=736"
  },
  {
    "text": "reducing, joining, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=739"
  },
  {
    "text": "to injecting values intermittently, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=743"
  },
  {
    "text": "The Swift Async Algorithms package takes the set of algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=747"
  },
  {
    "text": "for dealing with things over time and expands it to a wide range ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=751"
  },
  {
    "text": "of advanced functionality that can help you in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=755"
  },
  {
    "text": "Try it out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=759"
  },
  {
    "text": "We're really excited to discover what you build with these, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=760"
  },
  {
    "text": "and that excitement is shared. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=764"
  },
  {
    "text": "This package is being developed in the open with you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=766"
  },
  {
    "text": "Thanks for watching, and enjoy the rest of the conference. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=770"
  },
  {
    "text": "♪ instrumental hip hop music ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110355/?time=773"
  }
]