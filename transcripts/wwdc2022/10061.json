[
  {
    "text": "♪ Mellow instrumental hip-hip music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=3"
  },
  {
    "text": "Hi, everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=9"
  },
  {
    "text": "I'm Jeff, an engineer on the SwiftUI team.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=10"
  },
  {
    "text": "Today, I'm excited to talk to you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=14"
  },
  {
    "text": "about bringing multiple windows to your SwiftUI app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=16"
  },
  {
    "text": "on iPadOS and macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=19"
  },
  {
    "text": "In this session, we'll open with an overview ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=22"
  },
  {
    "text": "of the various scene types in the SwiftUI lifecycle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=25"
  },
  {
    "text": "including a few new types we're introducing.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=29"
  },
  {
    "text": "Followed by showing how these scene types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=32"
  },
  {
    "text": "can be composed together, by adding auxiliary scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=35"
  },
  {
    "text": "Then we'll cover some new APIs for opening windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=39"
  },
  {
    "text": "for a particular scene in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=42"
  },
  {
    "text": "And we'll wrap things up with a few ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=45"
  },
  {
    "text": "for customizing an app's scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=47"
  },
  {
    "text": "Let's start with an overview of the existing scene types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=51"
  },
  {
    "text": "before digging in to some new ones.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=54"
  },
  {
    "text": "You'll recall from previous sessions that apps in SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=57"
  },
  {
    "text": "are composed of scenes and views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=60"
  },
  {
    "text": "Scenes commonly represent their contents with a window onscreen.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=63"
  },
  {
    "text": "For example, here is an app I've built ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=68"
  },
  {
    "text": "to keep track of the books I'm reading.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=70"
  },
  {
    "text": "It's defined as a single window group ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=72"
  },
  {
    "text": "which shows my reading list in a platform-appropriate way.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=74"
  },
  {
    "text": "On platforms which support multiple windows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=77"
  },
  {
    "text": "such as iPadOS and macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=80"
  },
  {
    "text": "a scene can represent itself with several such windows.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=82"
  },
  {
    "text": "The behaviors and representation of a scene vary ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=86"
  },
  {
    "text": "based on the type used.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=90"
  },
  {
    "text": "For example, a scene may only represent itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=92"
  },
  {
    "text": "with a single instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=95"
  },
  {
    "text": "regardless of platform capabilities.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=96"
  },
  {
    "text": "Let's take a look at the current list of scene types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=99"
  },
  {
    "text": "in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=101"
  },
  {
    "text": "WindowGroup provides a way to build data-driven applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=103"
  },
  {
    "text": "across all of Apple's platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=107"
  },
  {
    "text": "DocumentGroup lets you build document-based apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=109"
  },
  {
    "text": "on iOS and macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=112"
  },
  {
    "text": "And Settings defines an interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=114"
  },
  {
    "text": "for representing in-app settings values on macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=117"
  },
  {
    "text": "These scene types can be composed together ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=121"
  },
  {
    "text": "to extend your app's functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=123"
  },
  {
    "text": "We're extending the list of scenes with two new additions.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=125"
  },
  {
    "text": "The first of which is Window, a scene which represents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=128"
  },
  {
    "text": "a single, unique window on all platforms; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=132"
  },
  {
    "text": "as well as a new scene type for macOS: MenuBarExtra, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=136"
  },
  {
    "text": "which renders as a persistent control in the system menu bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=140"
  },
  {
    "text": "As with the other scene types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=144"
  },
  {
    "text": "you can use Window and MenuBarExtra ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=146"
  },
  {
    "text": "both as a standalone scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=147"
  },
  {
    "text": "or composed with other scenes in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=150"
  },
  {
    "text": "Unlike WindowGroup, the Window scene will only ever represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=153"
  },
  {
    "text": "its contents in a single, unique window instance.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=156"
  },
  {
    "text": "This characteristic can be useful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=161"
  },
  {
    "text": "when the contents of your scene represents some global app state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=163"
  },
  {
    "text": "that would not necessarily fit well ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=166"
  },
  {
    "text": "with WindowGroups' multi-window presentation style ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=168"
  },
  {
    "text": "on macOS and iPadOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=172"
  },
  {
    "text": "For example, a game may wish to only allow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=174"
  },
  {
    "text": "for a single main window to render its contents.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=178"
  },
  {
    "text": "MenuBarExtra is a new macOS-only scene type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=181"
  },
  {
    "text": "which behaves a little differently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=184"
  },
  {
    "text": "from our other scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=186"
  },
  {
    "text": "Rather than rendering its contents in a window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=188"
  },
  {
    "text": "it will place its label in the menu bar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=190"
  },
  {
    "text": "and show its contents in either a menu or window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=193"
  },
  {
    "text": "which is anchored to the label.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=197"
  },
  {
    "text": "Additionally, it will be useable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=199"
  },
  {
    "text": "as long as its associated app is running, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=201"
  },
  {
    "text": "regardless of whether that app is frontmost.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=204"
  },
  {
    "text": "MenuBarExtra is great for creating standalone utility apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=207"
  },
  {
    "text": "that provide easy access to their functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=211"
  },
  {
    "text": "Or it can be composed with other scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=214"
  },
  {
    "text": "to provide an alternate way to access your app's functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=216"
  },
  {
    "text": "It also supports two rendering styles: the default style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=221"
  },
  {
    "text": "which shows the contents in a menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=225"
  },
  {
    "text": "which pulls down from the menu bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=227"
  },
  {
    "text": "as well as a style that presents its contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=230"
  },
  {
    "text": "in a chromeless window anchored to the menu bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=233"
  },
  {
    "text": "With the addition of these two new scene types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=236"
  },
  {
    "text": "SwiftUI apps can represent an even richer set of functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=239"
  },
  {
    "text": "across all of our platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=244"
  },
  {
    "text": "Let's see how these new APIs can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=247"
  },
  {
    "text": "in conjunction with our existing scene types.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=249"
  },
  {
    "text": "Here's the definition of my BookClub app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=253"
  },
  {
    "text": "that I showed earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=255"
  },
  {
    "text": "It currently consists of a single window group.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=257"
  },
  {
    "text": "On macOS, my BookClub app could benefit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=259"
  },
  {
    "text": "from an additional window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=262"
  },
  {
    "text": "to display our reading activity over time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=264"
  },
  {
    "text": "This is a great example of how macOS apps can make use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=267"
  },
  {
    "text": "of the additional screen real estate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=271"
  },
  {
    "text": "and flexible windowing arrangements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=273"
  },
  {
    "text": "present on that platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=275"
  },
  {
    "text": "We'll add an auxiliary scene to our app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=277"
  },
  {
    "text": "for representing this interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=279"
  },
  {
    "text": "Our Activity window's data is derived ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=281"
  },
  {
    "text": "from our overall app state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=283"
  },
  {
    "text": "so a window scene is the ideal choice for it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=285"
  },
  {
    "text": "Opening multiple windows with the same state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=288"
  },
  {
    "text": "would not fit well with our design.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=290"
  },
  {
    "text": "The title provided to our scene will be used as the label ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=292"
  },
  {
    "text": "for a menu item which is added to a section of the Window menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=295"
  },
  {
    "text": "When selecting this item, the scene's window will be opened ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=300"
  },
  {
    "text": "if not already so.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=304"
  },
  {
    "text": "Otherwise, it will be brought to the front.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=305"
  },
  {
    "text": "Now that we've covered adding an auxiliary scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=308"
  },
  {
    "text": "to our BookClub app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=310"
  },
  {
    "text": "I'd like to discuss some of the new scene presentation APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=312"
  },
  {
    "text": "we're adding and how you can integrate them into your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=315"
  },
  {
    "text": "to provide richer experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=318"
  },
  {
    "text": "Our BookClub app has a context menu that can be invoked ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=321"
  },
  {
    "text": "for any book in our Content List pane.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=324"
  },
  {
    "text": "This context menu will include a button ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=326"
  },
  {
    "text": "for triggering our window presentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=328"
  },
  {
    "text": "We'll fill in the details shortly.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=331"
  },
  {
    "text": "SwiftUI provides several new callable types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=333"
  },
  {
    "text": "via the environment for presenting windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=336"
  },
  {
    "text": "tied to the scenes your app defines.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=339"
  },
  {
    "text": "The first of these is openWindow action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=341"
  },
  {
    "text": "which can present windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=344"
  },
  {
    "text": "for either a WindowGroup or window scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=345"
  },
  {
    "text": "The identifier passed to the action must match ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=349"
  },
  {
    "text": "an identifier for a scene defined in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=352"
  },
  {
    "text": "openWindow action can also take a presentation value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=356"
  },
  {
    "text": "which the presented scene will use to display its contents.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=360"
  },
  {
    "text": "This form of the action is only supported by WindowGroup, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=363"
  },
  {
    "text": "using a new initializer that we'll take a look at shortly.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=366"
  },
  {
    "text": "The type of the value must match ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=370"
  },
  {
    "text": "against the type provided to the scene's initializer.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=372"
  },
  {
    "text": "There are also two callable types in the environment ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=375"
  },
  {
    "text": "for presenting document windows: newDocument action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=377"
  },
  {
    "text": "which supports opening new document windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=382"
  },
  {
    "text": "for both FileDocuments and ReferenceFileDocuments.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=384"
  },
  {
    "text": "This action requires that the corresponding DocumentGroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=388"
  },
  {
    "text": "in your app is defined with an editor role.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=391"
  },
  {
    "text": "The document provided to this action will be created ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=394"
  },
  {
    "text": "each time the window is presented.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=397"
  },
  {
    "text": "For presenting document windows where the contents are provided ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=399"
  },
  {
    "text": "by an existing file on disk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=403"
  },
  {
    "text": "there is the openDocument action.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=405"
  },
  {
    "text": "This action takes a URL to the file you wish to open.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=408"
  },
  {
    "text": "Your app must define a DocumentGroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=411"
  },
  {
    "text": "for presenting the window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=413"
  },
  {
    "text": "and the document type for that group must allow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=415"
  },
  {
    "text": "for reading the type of the file at the provided URL.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=417"
  },
  {
    "text": "Revisiting our button, we'll add ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=421"
  },
  {
    "text": "the openWindow environment property to our view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=423"
  },
  {
    "text": "Since this type is a callable, we can just call it directly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=426"
  },
  {
    "text": "from our button's action.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=430"
  },
  {
    "text": "Our Book type conforms to identifiable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=431"
  },
  {
    "text": "so we'll pass its identifier as the value to present.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=435"
  },
  {
    "text": "Now, before we move on, I'd like to discuss the values passed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=438"
  },
  {
    "text": "to the openWindow action.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=442"
  },
  {
    "text": "I noted that I'm passing the book's identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=443"
  },
  {
    "text": "which is a value of the UUID type.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=446"
  },
  {
    "text": "In general, you'll want to prefer to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=450"
  },
  {
    "text": "your model's identifier like this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=452"
  },
  {
    "text": "rather than the value itself.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=455"
  },
  {
    "text": "Note that our Book type is a value type.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=457"
  },
  {
    "text": "As such, if we were to use it as the presented value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=459"
  },
  {
    "text": "our new window would get a copy of the one ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=463"
  },
  {
    "text": "which originated the presentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=465"
  },
  {
    "text": "Any edits to either one will not affect the other.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=467"
  },
  {
    "text": "Using the book's identifier lets our model store ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=470"
  },
  {
    "text": "be the source of truth for these values instead ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=473"
  },
  {
    "text": "by providing multiple bindings to a single value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=476"
  },
  {
    "text": "For more info on value type semantics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=479"
  },
  {
    "text": "please see the developer documentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=481"
  },
  {
    "text": "The type being presented must also conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=483"
  },
  {
    "text": "to both the Hashable and Codable protocols.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=486"
  },
  {
    "text": "Hashable conformance is needed to associate the presented value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=490"
  },
  {
    "text": "with an open window; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=493"
  },
  {
    "text": "while Codable conformance is required ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=495"
  },
  {
    "text": "in order to persist the presented value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=497"
  },
  {
    "text": "for state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=500"
  },
  {
    "text": "I'll discuss both of these behaviors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=501"
  },
  {
    "text": "in more detail shortly.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=503"
  },
  {
    "text": "Lastly, when possible, prefer passing lightweight values.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=504"
  },
  {
    "text": "Our book's identifier is another great example of this.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=509"
  },
  {
    "text": "Since the value will be persisted by SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=512"
  },
  {
    "text": "for state restoration, using smaller values ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=515"
  },
  {
    "text": "will result in greater responsiveness of your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=518"
  },
  {
    "text": "Now, our button now has the necessary pieces ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=521"
  },
  {
    "text": "to present our detail windows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=524"
  },
  {
    "text": "but nothing will show when it is selected.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=525"
  },
  {
    "text": "This is because we've told SwiftUI to present a window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=528"
  },
  {
    "text": "for a certain data type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=531"
  },
  {
    "text": "but haven't defined a scene in our app that reflects that.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=533"
  },
  {
    "text": "Let's head back to our app and make that change now.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=536"
  },
  {
    "text": "Alongside our primary WindowGroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=538"
  },
  {
    "text": "and auxiliary window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=540"
  },
  {
    "text": "we'll add an additional WindowGroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=542"
  },
  {
    "text": "for handling our book details.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=544"
  },
  {
    "text": "Our book details WindowGroup uses a new initializer.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=545"
  },
  {
    "text": "In addition to the title, we're noting that this group ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=549"
  },
  {
    "text": "presents data for the Book.ID type -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=552"
  },
  {
    "text": "in our case, UUIDs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=555"
  },
  {
    "text": "This type should match the value that we are passing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=556"
  },
  {
    "text": "to the openWindow action we added earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=559"
  },
  {
    "text": "When a given value is provided ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=562"
  },
  {
    "text": "to the WindowGroup for presentation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=564"
  },
  {
    "text": "SwiftUI will create a new child scene for that value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=566"
  },
  {
    "text": "and the root content of that scene's window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=570"
  },
  {
    "text": "will be defined by that value, using the group's view builder.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=572"
  },
  {
    "text": "Each unique presented value will create a new scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=576"
  },
  {
    "text": "The value's equality will be used to determine ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=580"
  },
  {
    "text": "if a new window should be created ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=583"
  },
  {
    "text": "or if an existing window can be reused.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=585"
  },
  {
    "text": "When openWindow presents a value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=588"
  },
  {
    "text": "for which a window already exists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=590"
  },
  {
    "text": "the group will use that window rather than creating a new one.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=593"
  },
  {
    "text": "Using our BookClub app as an example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=596"
  },
  {
    "text": "selecting the context menu action for a book ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=598"
  },
  {
    "text": "which has already been presented in a window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=601"
  },
  {
    "text": "will result in that window being ordered front, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=604"
  },
  {
    "text": "rather than a second window showing the same book.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=607"
  },
  {
    "text": "The presented value will also be automatically persisted ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=609"
  },
  {
    "text": "by SwiftUI for the purposes of state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=612"
  },
  {
    "text": "Your view will be given a binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=616"
  },
  {
    "text": "to the initial presented value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=618"
  },
  {
    "text": "This binding can be modified at any time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=620"
  },
  {
    "text": "while the window is open.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=622"
  },
  {
    "text": "When the scene is recreated for state restoration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=624"
  },
  {
    "text": "SwiftUI will pass the most recent value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=626"
  },
  {
    "text": "to the window's Content view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=629"
  },
  {
    "text": "Here, we're giving the Book.ID binding to our detail view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=631"
  },
  {
    "text": "which can look up the specified item ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=636"
  },
  {
    "text": "in our model store for display.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=638"
  },
  {
    "text": "With all our pieces in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=640"
  },
  {
    "text": "we can now select our context menu item ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=642"
  },
  {
    "text": "and view our book details in its own window.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=645"
  },
  {
    "text": "Lastly, I'd like to go over some of the ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=648"
  },
  {
    "text": "in which you can customize the scenes in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=650"
  },
  {
    "text": "Because we've defined our app with two WindowGroup scenes -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=654"
  },
  {
    "text": "one for the main viewer window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=657"
  },
  {
    "text": "and one for our detail windows -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=659"
  },
  {
    "text": "SwiftUI by default will add a menu item ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=661"
  },
  {
    "text": "for each group in the File menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=664"
  },
  {
    "text": "The menu item for our detail window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=666"
  },
  {
    "text": "doesn't quite fit our use case, however.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=668"
  },
  {
    "text": "I'd prefer that the windows can only be opened ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=670"
  },
  {
    "text": "via the context menu that was added earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=673"
  },
  {
    "text": "A new scene modifier, commandsRemoved, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=676"
  },
  {
    "text": "allows you to modify a scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=679"
  },
  {
    "text": "such that it will no longer provide its default commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=681"
  },
  {
    "text": "like the one in the File menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=685"
  },
  {
    "text": "After applying this modifier, our File menu now only contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=686"
  },
  {
    "text": "an item for opening windows for the primary WindowGroup.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=690"
  },
  {
    "text": "I'm not quite happy with the current presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=694"
  },
  {
    "text": "of the auxiliary window scene for showing my reading activity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=697"
  },
  {
    "text": "so let's focus on that next.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=700"
  },
  {
    "text": "Since I'm going to apply a few modifiers to it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=703"
  },
  {
    "text": "I'll extract it out into a custom scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=706"
  },
  {
    "text": "which will keep my app definition cleaner.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=708"
  },
  {
    "text": "Absent any previous state for a window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=710"
  },
  {
    "text": "SwiftUI will by default place it in the center of the screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=713"
  },
  {
    "text": "I'd prefer it if the Reading Activity ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=717"
  },
  {
    "text": "was placed in a different location by default, however.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=719"
  },
  {
    "text": "By adding the new defaultPosition modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=723"
  },
  {
    "text": "I can specify a position to be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=725"
  },
  {
    "text": "when no previous state is available.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=728"
  },
  {
    "text": "This position is relative to the screen size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=731"
  },
  {
    "text": "and will place the window in the appropriate location ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=734"
  },
  {
    "text": "taking into account the current locale.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=737"
  },
  {
    "text": "This new position helps differentiate my Activity window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=739"
  },
  {
    "text": "from the other viewing windows on the screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=742"
  },
  {
    "text": "I'd also like my Activity window ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=745"
  },
  {
    "text": "to show at a certain size by default, but still be resizable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=747"
  },
  {
    "text": "Alongside the defaultPosition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=751"
  },
  {
    "text": "I'll add the defaultSize modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=753"
  },
  {
    "text": "The value provided to it will be given to the layout system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=756"
  },
  {
    "text": "to derive an initial size for the window.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=759"
  },
  {
    "text": "Now that I've customized the presentation of my window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=763"
  },
  {
    "text": "let's add one more modifier to customize its behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=766"
  },
  {
    "text": "The keyboardShortcut modifier has been expanded ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=769"
  },
  {
    "text": "to work on scene types as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=772"
  },
  {
    "text": "When used at the scene level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=774"
  },
  {
    "text": "this modifier affects the command ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=776"
  },
  {
    "text": "which creates a new window.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=778"
  },
  {
    "text": "Here, I've modified my Activity window so that it can be opened ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=779"
  },
  {
    "text": "with the shortcut Option-Command-0.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=783"
  },
  {
    "text": "This can be a great way to customize your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=786"
  },
  {
    "text": "by providing shortcuts to commonly used scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=789"
  },
  {
    "text": "and can also be used to customize the default shortcut ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=793"
  },
  {
    "text": "of Command-N, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=796"
  },
  {
    "text": "which is added to the primary WindowGroup in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=798"
  },
  {
    "text": "This closes our tour of the new scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=801"
  },
  {
    "text": "and windowing functionality in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=803"
  },
  {
    "text": "We're really excited about the potential of these new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=805"
  },
  {
    "text": "and hope you are too! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=808"
  },
  {
    "text": "For more great info on how to add functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=809"
  },
  {
    "text": "to your iPadOS and macOS apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=812"
  },
  {
    "text": "please check out these other sessions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=815"
  },
  {
    "text": "\"SwiftUI on iPad: Organize your interface\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=817"
  },
  {
    "text": "and \"SwiftUI on iPad: Add toolbars, titles, and more.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=820"
  },
  {
    "text": "Thanks for watching.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=824"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10061/?time=826"
  }
]