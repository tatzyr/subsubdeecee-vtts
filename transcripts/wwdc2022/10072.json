[
  {
    "text": "♪ Mellow instrumental hip-hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=3"
  },
  {
    "text": "Hello, I'm Sara Frederixon, an engineer on the Health app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=9"
  },
  {
    "text": "and I'm here to talk to you about using SwiftUI with UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=14"
  },
  {
    "text": "Like many of you, I work on an existing UIKit app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=18"
  },
  {
    "text": "For me, this is the Health app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=22"
  },
  {
    "text": "The Health app has many visualizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=25"
  },
  {
    "text": "to help people understand their health data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=27"
  },
  {
    "text": "but building these views can be quite complex.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=30"
  },
  {
    "text": "I've been interested in taking advantage of SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=33"
  },
  {
    "text": "so I worked with the UIKit and SwiftUI teams ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=36"
  },
  {
    "text": "to learn how to integrate both into the same app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=39"
  },
  {
    "text": "In this video, I will teach you how easy it is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=43"
  },
  {
    "text": "to start using SwiftUI in your own UIKit apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=46"
  },
  {
    "text": "First I'll cover the existing UIHostingController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=50"
  },
  {
    "text": "which has some new updates that add even more flexibility.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=54"
  },
  {
    "text": "Next I'll dive into populating SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=58"
  },
  {
    "text": "with data that already exist in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=61"
  },
  {
    "text": "and how to ensure the SwiftUI views update ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=65"
  },
  {
    "text": "when that data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=67"
  },
  {
    "text": "Then, I'll talk about some exciting new functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=71"
  },
  {
    "text": "that lets you build UICollectionView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=74"
  },
  {
    "text": "and UITableView cells using SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=76"
  },
  {
    "text": "Finally, I'll walk through the unique aspects of data flow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=80"
  },
  {
    "text": "with collection and table views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=84"
  },
  {
    "text": "when you're using SwiftUI inside cells.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=85"
  },
  {
    "text": "Let's get started by talking about UIHostingController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=89"
  },
  {
    "text": "UIHostingController is a UIViewController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=93"
  },
  {
    "text": "that contains a SwiftUI view hierarchy.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=96"
  },
  {
    "text": "You can use a hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=99"
  },
  {
    "text": "anywhere you can use a view controller in UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=101"
  },
  {
    "text": "This makes UIHostingController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=105"
  },
  {
    "text": "an easy way to start using SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=106"
  },
  {
    "text": "Let's examine how a hosting controller works.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=110"
  },
  {
    "text": "A hosting controller is a view controller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=113"
  },
  {
    "text": "which means it has a UIView stored in its view property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=116"
  },
  {
    "text": "And inside that view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=121"
  },
  {
    "text": "is where your SwiftUI content is rendered.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=122"
  },
  {
    "text": "Let's go through an example of how to use a hosting controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=125"
  },
  {
    "text": "Here, we create a HeartRateView, a SwiftUI view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=129"
  },
  {
    "text": "We then create a hosting controller with HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=134"
  },
  {
    "text": "as its root view, and present it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=137"
  },
  {
    "text": "UIHostingController works with ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=141"
  },
  {
    "text": "all of the UIKit view controller APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=142"
  },
  {
    "text": "Let's go through another example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=146"
  },
  {
    "text": "We have the same HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=150"
  },
  {
    "text": "and hosting controller as before.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=152"
  },
  {
    "text": "Here we add the hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=154"
  },
  {
    "text": "as a child view controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=156"
  },
  {
    "text": "Then we can position and size the hosting controller's view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=159"
  },
  {
    "text": "When your SwiftUI content inside UIHostingController changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=163"
  },
  {
    "text": "it may cause the view to need to be resized.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=167"
  },
  {
    "text": "New in iOS 16, UIHostingController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=171"
  },
  {
    "text": "allows you to enable automatic updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=174"
  },
  {
    "text": "of the view controller's preferred content size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=177"
  },
  {
    "text": "and the view's intrinsic content size.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=180"
  },
  {
    "text": "You can enable this using the new sizingOptions property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=183"
  },
  {
    "text": "on UIHostingController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=187"
  },
  {
    "text": "Let's go through an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=189"
  },
  {
    "text": "To start, we make our HeartRateView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=192"
  },
  {
    "text": "and create the hostingController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=194"
  },
  {
    "text": "We use the new sizingOptions API to tell the hostingController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=198"
  },
  {
    "text": "to automatically update its preferredContentSize.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=202"
  },
  {
    "text": "Then, we set the modalPresentationStyle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=207"
  },
  {
    "text": "to popover.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=210"
  },
  {
    "text": "Using the new sizingOptions API ensures that the popover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=211"
  },
  {
    "text": "is always sized appropriately to fit the SwiftUI content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=215"
  },
  {
    "text": "Now that you're familiar with UIHostingController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=221"
  },
  {
    "text": "let's talk about how to get data into SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=223"
  },
  {
    "text": "from other parts of your UIKit app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=226"
  },
  {
    "text": "and ensure that your SwiftUI views update ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=229"
  },
  {
    "text": "when that data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=232"
  },
  {
    "text": "Here's a diagram of your UIKit app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=235"
  },
  {
    "text": "It contains an existing model layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=238"
  },
  {
    "text": "that owns and manages your app's data model objects.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=240"
  },
  {
    "text": "Your app also contains a number of view controllers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=244"
  },
  {
    "text": "If you want start using SwiftUI, you'll need a hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=247"
  },
  {
    "text": "with a SwiftUI view inside one of the view controllers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=251"
  },
  {
    "text": "You will want to populate this SwiftUI view with data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=255"
  },
  {
    "text": "that is still owned by your existing model layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=258"
  },
  {
    "text": "In this section, we're going to focus on how to bridge data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=262"
  },
  {
    "text": "across the boundary between UIKit and SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=265"
  },
  {
    "text": "SwiftUI offers a variety of data flow primitives ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=270"
  },
  {
    "text": "to help you manage the data in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=273"
  },
  {
    "text": "Let's go through the different options.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=276"
  },
  {
    "text": "To store data that is created and owned by a SwiftUI view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=279"
  },
  {
    "text": "SwiftUI provides the @State and @StateObject property wrappers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=284"
  },
  {
    "text": "Since we're focused on data owned outside of SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=289"
  },
  {
    "text": "these property wrappers aren't the right choice.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=292"
  },
  {
    "text": "So, I'm not going to cover these in this video.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=296"
  },
  {
    "text": "Watch \"Data Essentials in SwiftUI\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=298"
  },
  {
    "text": "to learn more about data owned by a SwiftUI view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=301"
  },
  {
    "text": "One way to handle data external to SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=306"
  },
  {
    "text": "is to pass values directly when you initialize your views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=308"
  },
  {
    "text": "Because you are just passing raw data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=312"
  },
  {
    "text": "that is not owned or managed by SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=315"
  },
  {
    "text": "you are responsible for manually updating the UIHostingController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=318"
  },
  {
    "text": "when the data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=322"
  },
  {
    "text": "Let's go through an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=325"
  },
  {
    "text": "Here is a SwiftUI view named HeartRateView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=327"
  },
  {
    "text": "This view has a single property -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=331"
  },
  {
    "text": "the heart rate beatsPerMinute stored as an integer -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=333"
  },
  {
    "text": "and it displays the value as text.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=337"
  },
  {
    "text": "We're displaying this HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=339"
  },
  {
    "text": "by embedding a UIHostingController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=341"
  },
  {
    "text": "inside an existing view controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=343"
  },
  {
    "text": "named HeartRateViewController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=345"
  },
  {
    "text": "We save a reference to the hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=348"
  },
  {
    "text": "so we can update its root view later.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=350"
  },
  {
    "text": "Remember, the SwiftUI HeartRateView is a value type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=353"
  },
  {
    "text": "so storing it by itself would create a separate copy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=357"
  },
  {
    "text": "and wouldn't allow us to update the UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=360"
  },
  {
    "text": "The HeartRateViewController owns the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=364"
  },
  {
    "text": "used to populate the HeartRateView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=366"
  },
  {
    "text": "This data is stored in the beatsPerMinute property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=369"
  },
  {
    "text": "and when the beatsPerMinute value changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=373"
  },
  {
    "text": "we call a method to update the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=375"
  },
  {
    "text": "Inside of the update method, we create a new HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=379"
  },
  {
    "text": "using the latest beatsPerMinute value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=383"
  },
  {
    "text": "and then assign that view as the rootView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=386"
  },
  {
    "text": "of our hosting controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=388"
  },
  {
    "text": "This is a simple way to get data from UIKit into SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=391"
  },
  {
    "text": "but it requires manually updating the rootView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=397"
  },
  {
    "text": "of the hosting controller any time the data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=399"
  },
  {
    "text": "Let's go through some other SwiftUI data primitives ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=403"
  },
  {
    "text": "to make these updates happen automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=406"
  },
  {
    "text": "The @ObservedObject and @EnvironmentObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=409"
  },
  {
    "text": "property wrappers allow you to reference ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=412"
  },
  {
    "text": "an external model object ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=414"
  },
  {
    "text": "that conforms to the ObservableObject protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=416"
  },
  {
    "text": "When you use these property wrappers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=419"
  },
  {
    "text": "SwiftUI automatically updates your view when the data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=421"
  },
  {
    "text": "We're going to focus on the @ObservedObject property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=427"
  },
  {
    "text": "in this video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=430"
  },
  {
    "text": "but you can learn more about EnvironmentObject in the ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=432"
  },
  {
    "text": "\"Data Essentials in SwiftUI\" video mentioned earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=434"
  },
  {
    "text": "Let's go through how to create an @ObservedObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=438"
  },
  {
    "text": "The first step is to take a model object ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=442"
  },
  {
    "text": "that is owned by an existing part of your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=445"
  },
  {
    "text": "and make it conform to the ObservableObject protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=447"
  },
  {
    "text": "Next, we store the model as an @ObservedObject property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=451"
  },
  {
    "text": "in our SwiftUI view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=455"
  },
  {
    "text": "Connecting the ObservableObject to SwiftUI allows it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=458"
  },
  {
    "text": "to update the view when one of its properties change.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=462"
  },
  {
    "text": "Let's go back to our HeartRateView example ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=466"
  },
  {
    "text": "and wire this up.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=468"
  },
  {
    "text": "Our app has a class named HeartData ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=471"
  },
  {
    "text": "that contains the property beatsPerMinute.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=473"
  },
  {
    "text": "We make it an ObservableObject by conforming to the protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=476"
  },
  {
    "text": "Then we add the @Published property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=481"
  },
  {
    "text": "to the beatsPerMinute property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=484"
  },
  {
    "text": "This property wrapper is what triggers SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=486"
  },
  {
    "text": "to update our views on changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=489"
  },
  {
    "text": "In the HeartRateView, we store the HeartData ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=492"
  },
  {
    "text": "in a property annotated with ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=495"
  },
  {
    "text": "the @ObservedObject property wrapper.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=497"
  },
  {
    "text": "In the body of the view, we display the beatsPerMinute ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=500"
  },
  {
    "text": "directly from the HeartData.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=503"
  },
  {
    "text": "Now, let's use these together in our view controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=506"
  },
  {
    "text": "Here is our HeartRateViewController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=510"
  },
  {
    "text": "It stores the HeartData ObservableObject in a property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=513"
  },
  {
    "text": "Because this property is not inside a SwiftUI view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=517"
  },
  {
    "text": "we don't need to use a property wrapper here.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=520"
  },
  {
    "text": "The HeartRateViewController is initialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=524"
  },
  {
    "text": "with a HeartData instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=526"
  },
  {
    "text": "which is used to create a HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=527"
  },
  {
    "text": "that becomes the rootView of the hosting controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=530"
  },
  {
    "text": "The diagram illustrates how this comes together.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=534"
  },
  {
    "text": "We fetch the current HeartData instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=537"
  },
  {
    "text": "which contains a heart rate of 78 beat per minute.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=540"
  },
  {
    "text": "Then we create a new HeartRateViewController ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=544"
  },
  {
    "text": "with that HeartData instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=547"
  },
  {
    "text": "which wires it up to the SwiftUI HeartRateView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=549"
  },
  {
    "text": "After a few seconds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=554"
  },
  {
    "text": "when the next heart rate data sample arrives, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=555"
  },
  {
    "text": "the heart data's beatsPerMinute property is updated to 94.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=558"
  },
  {
    "text": "Because this changes a published property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=564"
  },
  {
    "text": "on an ObservableObject, the HeartRateView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=566"
  },
  {
    "text": "is automatically updated to display the new value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=569"
  },
  {
    "text": "We no longer need to manually update the hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=573"
  },
  {
    "text": "when the data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=576"
  },
  {
    "text": "This is why ObservableObject is a great way to bridge data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=578"
  },
  {
    "text": "from UIKit to SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=581"
  },
  {
    "text": "Next, let's talk about using SwiftUI in collection view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=584"
  },
  {
    "text": "and table view cells.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=588"
  },
  {
    "text": "New in iOS 16 is UIHostingConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=592"
  },
  {
    "text": "which lets you harness the power of SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=596"
  },
  {
    "text": "inside your existing UIKit, collection, and table views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=598"
  },
  {
    "text": "UIHostingConfiguration makes it easy to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=603"
  },
  {
    "text": "custom cells using SwiftUI, without needing to worry ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=606"
  },
  {
    "text": "about embedding an extra view or view controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=609"
  },
  {
    "text": "Before we dive deeper on UIHostingConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=613"
  },
  {
    "text": "let's review cell configurations in UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=616"
  },
  {
    "text": "Cell configurations are a modern way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=620"
  },
  {
    "text": "to define the content, styling, and behavior of cells in UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=623"
  },
  {
    "text": "Unlike a UIView or UIViewController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=628"
  },
  {
    "text": "a configuration is just a lightweight struct.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=631"
  },
  {
    "text": "It's inexpensive to create.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=634"
  },
  {
    "text": "A configuration is only a description ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=636"
  },
  {
    "text": "of a cell's appearance, so it needs to be applied ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=638"
  },
  {
    "text": "to a cell to have an effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=641"
  },
  {
    "text": "Configurations are composable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=645"
  },
  {
    "text": "and work with both UICollectionView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=646"
  },
  {
    "text": "and UITableView cells.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=648"
  },
  {
    "text": "For more details, you can watch \"Modern cell configuration.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=651"
  },
  {
    "text": "With that in mind, let's dive in ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=656"
  },
  {
    "text": "and start using UIHostingConfiguration! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=658"
  },
  {
    "text": "UIHostingConfiguration is a content configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=662"
  },
  {
    "text": "that is initialized with a SwiftUI ViewBuilder.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=665"
  },
  {
    "text": "That means we can start writing SwiftUI code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=668"
  },
  {
    "text": "to create views directly inside it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=671"
  },
  {
    "text": "In order to render the hosting configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=675"
  },
  {
    "text": "we set it to the contentConfiguration property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=677"
  },
  {
    "text": "of the UICollectionView or UITableView cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=680"
  },
  {
    "text": "Let's start writing some SwiftUI code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=683"
  },
  {
    "text": "in this hosting configuration to build a custom heart rate cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=685"
  },
  {
    "text": "We'll start by creating a label with the text \"Heart Rate\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=690"
  },
  {
    "text": "and the image of a heart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=694"
  },
  {
    "text": "SwiftUI views receive default styling ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=696"
  },
  {
    "text": "based on the context they are used in.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=698"
  },
  {
    "text": "But we can start customizing the styling ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=701"
  },
  {
    "text": "using standard SwiftUI view modifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=703"
  },
  {
    "text": "Let's make the image and text pink with a bold font, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=707"
  },
  {
    "text": "by adding the foregroundStyle and font modifiers to our label.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=711"
  },
  {
    "text": "Since we're just writing regular SwiftUI code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=715"
  },
  {
    "text": "we can factor out our code into a standalone view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=718"
  },
  {
    "text": "anytime we want.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=721"
  },
  {
    "text": "Here, we create a new SwiftUI view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=723"
  },
  {
    "text": "named HeartRateTitleView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=726"
  },
  {
    "text": "moved the code we had into its body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=729"
  },
  {
    "text": "and then used that HeartRateTitleView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=732"
  },
  {
    "text": "in the hosting configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=734"
  },
  {
    "text": "As shown in the cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=736"
  },
  {
    "text": "it produces the exact same result.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=737"
  },
  {
    "text": "Now we can start adding more views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=742"
  },
  {
    "text": "inside the HeartRateTitleView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=744"
  },
  {
    "text": "I've put the label inside of an HStack with a spacer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=747"
  },
  {
    "text": "then added the current time in a Text view next to it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=752"
  },
  {
    "text": "That's looking pretty good so far.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=756"
  },
  {
    "text": "Let's add some more content to this custom cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=758"
  },
  {
    "text": "below the HeartRateTitleView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=761"
  },
  {
    "text": "To do this, we'll insert a VStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=764"
  },
  {
    "text": "inside the hosting configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=767"
  },
  {
    "text": "so we can add more content below the HeartRateTitleView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=769"
  },
  {
    "text": "Then we'll put two Text views together ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=773"
  },
  {
    "text": "in a HStack to display 90 BPM ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=776"
  },
  {
    "text": "and then apply a few modifiers to style them the way we want.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=780"
  },
  {
    "text": "Just like we did before with the HeartRateTitleView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=785"
  },
  {
    "text": "we can move this new code into its own SwiftUI view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=788"
  },
  {
    "text": "Now the same code is extracted into the body ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=794"
  },
  {
    "text": "of the HeartRateBPMView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=797"
  },
  {
    "text": "Our cell is looking great, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=800"
  },
  {
    "text": "but I have an idea for another thing we could add.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=801"
  },
  {
    "text": "New in iOS 16 is the Swift Charts framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=805"
  },
  {
    "text": "which lets you visualize data with beautiful graphs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=809"
  },
  {
    "text": "in only a few lines of code.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=813"
  },
  {
    "text": "Let's try using it to display a small line chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=815"
  },
  {
    "text": "right inside the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=818"
  },
  {
    "text": "Using the new Chart view, we create a small line chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=821"
  },
  {
    "text": "that visualizes recent heart rate samples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=825"
  },
  {
    "text": "and display that next to the BPM view in the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=827"
  },
  {
    "text": "To generate the chart, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=832"
  },
  {
    "text": "we pass in a collection of heart rate samples, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=833"
  },
  {
    "text": "and draw a LineMark that connects all of the samples.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=836"
  },
  {
    "text": "We can add a circle symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=841"
  },
  {
    "text": "to indicate each sample on the line ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=842"
  },
  {
    "text": "and apply a pink foreground style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=844"
  },
  {
    "text": "to tint the chart to match the HeartRateTitleView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=847"
  },
  {
    "text": "We're only scratching the surface of what you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=851"
  },
  {
    "text": "with the new Swift Charts framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=854"
  },
  {
    "text": "so be sure to check out the video \"Hello Swift Charts\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=856"
  },
  {
    "text": "to learn more about it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=860"
  },
  {
    "text": "Not only does our finished heart rate cell look awesome, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=862"
  },
  {
    "text": "but it was easy to make in just a couple of minutes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=865"
  },
  {
    "text": "That's how easy it is to start building custom cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=869"
  },
  {
    "text": "with UIHostingConfiguration and SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=872"
  },
  {
    "text": "Let's talk about four special features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=875"
  },
  {
    "text": "that UIHostingConfiguration supports.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=877"
  },
  {
    "text": "By default, the root-level SwiftUI content ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=880"
  },
  {
    "text": "is inset from the edges of the cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=884"
  },
  {
    "text": "based on the cell's layout margins in UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=886"
  },
  {
    "text": "This ensures that the cell content ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=890"
  },
  {
    "text": "is properly aligned with the content of adjacent cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=892"
  },
  {
    "text": "and other UI elements, such as the navigation bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=895"
  },
  {
    "text": "Sometimes, you may want to use different margins, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=899"
  },
  {
    "text": "or have the content extend to the edges of the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=902"
  },
  {
    "text": "For these cases, you can change the default margins ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=907"
  },
  {
    "text": "by using the margins modifier on UIHostingConfiguration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=910"
  },
  {
    "text": "If you want to customize a cell's background appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=915"
  },
  {
    "text": "using SwiftUI, you can use the background modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=918"
  },
  {
    "text": "on the UIHostingConfiguration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=921"
  },
  {
    "text": "There are a few key differences between ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=924"
  },
  {
    "text": "a UIHostingConfiguration's background and its content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=926"
  },
  {
    "text": "The background is hosted at the the back of the cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=931"
  },
  {
    "text": "underneath your SwiftUI content in the cell's content view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=934"
  },
  {
    "text": "Additionally, while content is typically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=939"
  },
  {
    "text": "inset from the cell's edges, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=941"
  },
  {
    "text": "backgrounds extend edge to edge in the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=943"
  },
  {
    "text": "Finally, when using self-sizing cells, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=948"
  },
  {
    "text": "only the cell content influences the size of the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=951"
  },
  {
    "text": "Next, let's examine two more special features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=956"
  },
  {
    "text": "of UIHostingConfiguration that you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=959"
  },
  {
    "text": "when you have a cell inside a collection view list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=962"
  },
  {
    "text": "or table view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=964"
  },
  {
    "text": "In a list, the separator below the cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=966"
  },
  {
    "text": "is automatically aligned to the SwiftUI text ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=968"
  },
  {
    "text": "in your hosting configuration by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=971"
  },
  {
    "text": "In this example, notice how the leading edge of the separator ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=974"
  },
  {
    "text": "is inset past the image so that it aligns with the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=978"
  },
  {
    "text": "in the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=981"
  },
  {
    "text": "If you need to align the separator ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=983"
  },
  {
    "text": "to a different SwiftUI view in your hosting configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=984"
  },
  {
    "text": "use the alignmentGuide modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=988"
  },
  {
    "text": "When inside a collection view list or table view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=992"
  },
  {
    "text": "you can configure swipe actions for a row directly with SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=994"
  },
  {
    "text": "By creating your buttons inside the swipeActions modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1000"
  },
  {
    "text": "you'll be able to swipe the cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1003"
  },
  {
    "text": "to reveal and perform your custom actions.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1005"
  },
  {
    "text": "Download the sample code for this video ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1009"
  },
  {
    "text": "to find a complete example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1010"
  },
  {
    "text": "When defining swipe actions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1013"
  },
  {
    "text": "make sure your buttons perform their actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1015"
  },
  {
    "text": "using a stable identifier for the item represented.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1017"
  },
  {
    "text": "Do not use the index path, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1021"
  },
  {
    "text": "as it may change while the cell is visible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1023"
  },
  {
    "text": "causing the swipe actions to act on the wrong item.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1026"
  },
  {
    "text": "When you're using UIHostingConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1030"
  },
  {
    "text": "in a cell, keep in mind that the cell interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1032"
  },
  {
    "text": "such as tap handling, highlighting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1036"
  },
  {
    "text": "and selection will still be handled ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1038"
  },
  {
    "text": "by the collection view or table view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1041"
  },
  {
    "text": "If you need to customize your SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1044"
  },
  {
    "text": "for any of these UIKit cell states, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1047"
  },
  {
    "text": "you can create your hosting configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1049"
  },
  {
    "text": "inside of the cell's configurationUpdateHandler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1052"
  },
  {
    "text": "and use the state provided in your SwiftUI code.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1055"
  },
  {
    "text": "The configurationUpdateHandler runs again ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1060"
  },
  {
    "text": "any time the cell's state changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1063"
  },
  {
    "text": "creating a new UIHostingConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1065"
  },
  {
    "text": "for the new state and applying it to the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1067"
  },
  {
    "text": "In this example, we use the state to add a checkmark image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1071"
  },
  {
    "text": "when the cell is selected.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1074"
  },
  {
    "text": "Now that you're familiar with UIHostingConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1077"
  },
  {
    "text": "let's discuss how to manage data flow from your model layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1080"
  },
  {
    "text": "to a UICollectionView or UITableView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1084"
  },
  {
    "text": "filled with cells using SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1087"
  },
  {
    "text": "Our goal is to build this list of medical conditions.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1090"
  },
  {
    "text": "In this example, we're using a UICollectionView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1094"
  },
  {
    "text": "but everything we discuss applies equally to UITableView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1097"
  },
  {
    "text": "Let's go through the components involved.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1102"
  },
  {
    "text": "Our app has a collection of MedicalCondition model objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1105"
  },
  {
    "text": "which we are going to display in the collection view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1110"
  },
  {
    "text": "For each item in this collection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1113"
  },
  {
    "text": "we want to create a cell in the collection view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1115"
  },
  {
    "text": "to display that medical condition.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1118"
  },
  {
    "text": "In order to do this, we'll create a diffable data source ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1121"
  },
  {
    "text": "connected to the collection view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1124"
  },
  {
    "text": "Then, we need to populate a diffable data source snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1127"
  },
  {
    "text": "with the identifiers of the MedicalCondition model objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1131"
  },
  {
    "text": "in the data collection.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1135"
  },
  {
    "text": "It's important that the diffable data source snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1138"
  },
  {
    "text": "contains the unique identifier of each MedicalCondition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1141"
  },
  {
    "text": "and not the MedicalCondition objects themselves.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1145"
  },
  {
    "text": "This ensures that the diffable data source can accurately track ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1148"
  },
  {
    "text": "the identity of each item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1153"
  },
  {
    "text": "and compute the correct changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1155"
  },
  {
    "text": "when new snapshots are applied later.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1157"
  },
  {
    "text": "By applying a snapshot with these item identifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1160"
  },
  {
    "text": "to the diffable data source, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1163"
  },
  {
    "text": "it will automatically update the collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1165"
  },
  {
    "text": "which will create a new cell for each item.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1168"
  },
  {
    "text": "Each cell is configured to display one MedicalCondition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1172"
  },
  {
    "text": "using a SwiftUI view in a UIHostingConfiguration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1176"
  },
  {
    "text": "Now that we're displaying cells built with SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1182"
  },
  {
    "text": "we need to handle updating the UI when the data changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1185"
  },
  {
    "text": "There are two different types of changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1189"
  },
  {
    "text": "that we need to handle separately.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1191"
  },
  {
    "text": "The first type is when the data collection itself changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1194"
  },
  {
    "text": "For example, when items are inserted, reordered, or deleted.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1198"
  },
  {
    "text": "These changes are handled by applying a new snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1204"
  },
  {
    "text": "to the diffable data source.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1207"
  },
  {
    "text": "Diffable data source will diff the old and new snapshots, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1210"
  },
  {
    "text": "and perform the necessary updates to the collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1214"
  },
  {
    "text": "causing cells to be inserted, moved, or deleted.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1218"
  },
  {
    "text": "Because changes to the collection of data itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1223"
  },
  {
    "text": "don't affect anything inside of cells, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1225"
  },
  {
    "text": "you handle these types of changes the same, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1228"
  },
  {
    "text": "whether you build your cells using UIKit or SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1231"
  },
  {
    "text": "The second type of change we need to handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1235"
  },
  {
    "text": "are when the properties of individual model objects change.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1237"
  },
  {
    "text": "These changes often require updating the views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1243"
  },
  {
    "text": "in existing cells.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1246"
  },
  {
    "text": "Because the diffable data source ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1248"
  },
  {
    "text": "only contains item identifiers in its snapshot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1249"
  },
  {
    "text": "it doesn't know when the properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1253"
  },
  {
    "text": "of existing items change.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1255"
  },
  {
    "text": "Traditionally, when using UIKit, you would need to manually ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1257"
  },
  {
    "text": "tell the diffable data source about these changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1261"
  },
  {
    "text": "by reconfiguring or reloading items in the snapshot.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1264"
  },
  {
    "text": "But when using SwiftUI in cells, this isn't necessary anymore.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1268"
  },
  {
    "text": "By storing the ObservableObject model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1273"
  },
  {
    "text": "in an ObservedObject property in our SwiftUI view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1276"
  },
  {
    "text": "changes to published properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1280"
  },
  {
    "text": "of the model will automatically trigger SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1282"
  },
  {
    "text": "to refresh the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1285"
  },
  {
    "text": "This establishes a direct connection between the model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1287"
  },
  {
    "text": "and the SwiftUI view inside of the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1290"
  },
  {
    "text": "When a change is made, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1294"
  },
  {
    "text": "the SwiftUI views in the cell are updated directly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1295"
  },
  {
    "text": "without going through the diffable data source ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1298"
  },
  {
    "text": "or the UICollectionView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1301"
  },
  {
    "text": "When a cell's data changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1304"
  },
  {
    "text": "it may cause the cell to need to grow or shrink ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1305"
  },
  {
    "text": "to fit the new content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1308"
  },
  {
    "text": "But if the SwiftUI cell content is being updated directly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1311"
  },
  {
    "text": "without going through UIKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1314"
  },
  {
    "text": "how does the collection view know to resize the cell? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1316"
  },
  {
    "text": "UIHostingConfiguration takes advantage of a brand-new feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1320"
  },
  {
    "text": "in UIKit to make this work.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1324"
  },
  {
    "text": "In iOS 16, self-sizing cells in UICollectionView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1327"
  },
  {
    "text": "and UITableView are now also self-resizing! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1331"
  },
  {
    "text": "This is enabled by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1336"
  },
  {
    "text": "so that when you're using UIHostingConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1338"
  },
  {
    "text": "and the SwiftUI content changes, the containing cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1341"
  },
  {
    "text": "is automatically resized if necessary.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1344"
  },
  {
    "text": "You can learn more about how this new feature works ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1348"
  },
  {
    "text": "in the \"What's New in UIKit\" video from WWDC 2022.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1351"
  },
  {
    "text": "There's one more aspect of data flow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1357"
  },
  {
    "text": "that you may need to handle, and that's sending data out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1359"
  },
  {
    "text": "from a SwiftUI view back to other parts of your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1363"
  },
  {
    "text": "Once again, ObservableObject has got you covered! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1368"
  },
  {
    "text": "You can create a two-way binding to a published property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1372"
  },
  {
    "text": "of an ObservableObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1375"
  },
  {
    "text": "Not only will data flow from the ObservableObject into SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1377"
  },
  {
    "text": "but SwiftUI can write back changes to the property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1382"
  },
  {
    "text": "on the model object.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1386"
  },
  {
    "text": "Let's go through a simple example ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1388"
  },
  {
    "text": "of creating a two-way binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1390"
  },
  {
    "text": "by making the text in our MedicalCondition cell editable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1392"
  },
  {
    "text": "Here is our ObservableObject, MedicalCondition.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1396"
  },
  {
    "text": "It stores a unique identifier in an ID property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1401"
  },
  {
    "text": "This is the identifier used to populate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1405"
  },
  {
    "text": "the diffable data source snapshot.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1407"
  },
  {
    "text": "And this published property stores the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1410"
  },
  {
    "text": "of the medical condition.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1413"
  },
  {
    "text": "Here's the MedicalConditionView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1415"
  },
  {
    "text": "that displays the medical condition text inside each cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1417"
  },
  {
    "text": "Right now this text is read-only, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1422"
  },
  {
    "text": "so let's make it editable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1424"
  },
  {
    "text": "All we need to do is to change the Text view to a TextField ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1427"
  },
  {
    "text": "and create a binding to the text property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1432"
  },
  {
    "text": "of our MedicalCondition by adding a dollar sign prefix.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1434"
  },
  {
    "text": "When you type into the text field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1439"
  },
  {
    "text": "this binding allows SwiftUI to write back changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1441"
  },
  {
    "text": "directly to the ObservableObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1444"
  },
  {
    "text": "That's really how simple it is ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1447"
  },
  {
    "text": "to set up two-way data flow with SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1449"
  },
  {
    "text": "UIHostingController is a powerful way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1454"
  },
  {
    "text": "to embed SwiftUI content into your UIKit app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1456"
  },
  {
    "text": "Your SwiftUI view is rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1461"
  },
  {
    "text": "inside the hosting controller's view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1463"
  },
  {
    "text": "and you can use the hosting controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1465"
  },
  {
    "text": "anywhere that you can use a view controller in UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1467"
  },
  {
    "text": "When using UIHostingController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1473"
  },
  {
    "text": "make sure to always add the view controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1475"
  },
  {
    "text": "together with the view to your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1477"
  },
  {
    "text": "Many SwiftUI features, such as toolbars, keyboard shortcuts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1481"
  },
  {
    "text": "and views that use UIViewControllerRepresentable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1485"
  },
  {
    "text": "require a connection to the view controller hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1489"
  },
  {
    "text": "in UIKit to integrate properly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1491"
  },
  {
    "text": "so never separate a hosting controller's view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1494"
  },
  {
    "text": "from the hosting controller itself.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1497"
  },
  {
    "text": "For comparison, when you apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1501"
  },
  {
    "text": "a UIHostingConfiguration to a cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1503"
  },
  {
    "text": "your SwiftUI view is hosted in the cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1505"
  },
  {
    "text": "without a UIViewController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1508"
  },
  {
    "text": "UIHostingConfiguration supports the vast majority ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1511"
  },
  {
    "text": "of SwiftUI features.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1514"
  },
  {
    "text": "But keep in mind that SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1516"
  },
  {
    "text": "that depend on UIViewControllerRepresentable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1518"
  },
  {
    "text": "can't be used inside of cells.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1520"
  },
  {
    "text": "With UIHostingController and UIHostingConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1523"
  },
  {
    "text": "you have two great ways to incorporate SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1526"
  },
  {
    "text": "into your UIKit app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1529"
  },
  {
    "text": "SwiftUI integrates seamlessly into existing UIKit apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1532"
  },
  {
    "text": "Use UIHostingController to add SwiftUI throughout your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1537"
  },
  {
    "text": "Create custom cells in your collection and table view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1542"
  },
  {
    "text": "using UIHostingConfiguration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1546"
  },
  {
    "text": "And take advantage of ObservableObject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1549"
  },
  {
    "text": "so your data and UI is always in sync.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1551"
  },
  {
    "text": "Add SwiftUI to your app today! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1555"
  },
  {
    "text": "Thank you for watching! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1559"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10072/?time=1560"
  }
]