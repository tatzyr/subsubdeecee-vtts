[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=0"
  },
  {
    "text": "Welcome to Profile and Optimize Your Game's Memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=9"
  },
  {
    "text": "I'm Jack Xu (许) from GPU Software team at Apple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=13"
  },
  {
    "text": "We're joined by my colleague Seth Lù (陆). ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=16"
  },
  {
    "text": "In the last few years, our teams have been working ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=18"
  },
  {
    "text": "with game developers like you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=21"
  },
  {
    "text": "to understand and improve game memory together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=23"
  },
  {
    "text": "Today, we want to share our learnings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=26"
  },
  {
    "text": "so you can also have a head start when you debug your game's memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=29"
  },
  {
    "text": "and create awesome games with the best player experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=32"
  },
  {
    "text": "We're going to break down memory usage in your game, from both CPU and GPU objects.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=37"
  },
  {
    "text": "Plus, analyze allocations in your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=43"
  },
  {
    "text": "actual use on physical memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=46"
  },
  {
    "text": "and references between objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=48"
  },
  {
    "text": "Because there are many facets of memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=51"
  },
  {
    "text": "our developer tools also reveal memory mysteries from different angles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=53"
  },
  {
    "text": "We'll take a guided tour, and experience how we use all of them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=58"
  },
  {
    "text": "including Xcode, Instruments, and command line tools in Terminal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=62"
  },
  {
    "text": "In today's guided tour, we will begin with a prelude to understand game memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=66"
  },
  {
    "text": "And start to profile memory and memory growth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=72"
  },
  {
    "text": "where Seth will tell us about Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=75"
  },
  {
    "text": "After taking the temporal approach with Instruments, we will further our journey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=78"
  },
  {
    "text": "and analyze the memory graph of your game using tools in Xcode and Terminal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=83"
  },
  {
    "text": "These workflows focus on the current state of memory use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=88"
  },
  {
    "text": "and the breakdown of the total game memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=91"
  },
  {
    "text": "Finally, Seth will share how you can use Metal Debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=95"
  },
  {
    "text": "to optimize Metal resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=98"
  },
  {
    "text": "which is a somewhat standalone, yet core area in game memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=100"
  },
  {
    "text": "Now, let's start rolling with understanding game memory.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=105"
  },
  {
    "text": "When you launch your game from Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=111"
  },
  {
    "text": "such as the Modern Rendering with Metal sample code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=113"
  },
  {
    "text": "you can open this Memory Report in Xcode's debug navigator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=116"
  },
  {
    "text": "It is your first view on the game's current and recent memory usage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=120"
  },
  {
    "text": "and its impact level on the system.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=124"
  },
  {
    "text": "The number on the gauge shows you the current memory use of the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=128"
  },
  {
    "text": "An important first step in memory debugging ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=132"
  },
  {
    "text": "is to understand what this number means.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=135"
  },
  {
    "text": "To put it in one line, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=139"
  },
  {
    "text": "actual memory use in your game is not the same as allocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=140"
  },
  {
    "text": "Actual memory use is on physical memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=146"
  },
  {
    "text": "While allocations is the memory requested by the game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=148"
  },
  {
    "text": "on the virtual memory address space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=151"
  },
  {
    "text": "And different kinds of allocations are naturally calculated separately.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=154"
  },
  {
    "text": "When your game allocates memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=161"
  },
  {
    "text": "those new allocations do not immediately nor directly take up space ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=162"
  },
  {
    "text": "on physical memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=167"
  },
  {
    "text": "On the contrary, they will reserve some space on virtual memory address space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=168"
  },
  {
    "text": "which the system provides for each process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=173"
  },
  {
    "text": "And when the program actually uses this allocation later, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=176"
  },
  {
    "text": "will the system prepare space on physical memory.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=179"
  },
  {
    "text": "Allocations of the same kind are grouped into categories, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=184"
  },
  {
    "text": "and sparsely occupy the virtual address space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=188"
  },
  {
    "text": "These categories may include: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=191"
  },
  {
    "text": "the program's executable binary; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=193"
  },
  {
    "text": "all the libraries and frameworks; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=196"
  },
  {
    "text": "the stack, providing storage for local and temporary variables ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=198"
  },
  {
    "text": "as well as some function arguments; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=202"
  },
  {
    "text": "dynamic memory regions also known as heap; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=204"
  },
  {
    "text": "including class instance storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=207"
  },
  {
    "text": "and memory the program manually allocates; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=209"
  },
  {
    "text": "regions mapped from read-only resources such as game asset files; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=212"
  },
  {
    "text": "and of course, Metal objects in your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=217"
  },
  {
    "text": "such as buffers, textures, and pipeline state objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=219"
  },
  {
    "text": "And these categories are made of regions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=224"
  },
  {
    "text": "Under the hood, memory operations work at the granularity of memory pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=228"
  },
  {
    "text": "which are 16 kibibytes each on modern Apple devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=233"
  },
  {
    "text": "This means each region takes up one or more pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=237"
  },
  {
    "text": "and is at least 16 kibibytes large.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=241"
  },
  {
    "text": "As the game continues, the state of its memory keeps evolving; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=245"
  },
  {
    "text": "new objects get allocated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=250"
  },
  {
    "text": "old items get destroyed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=251"
  },
  {
    "text": "the regions keep changing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=254"
  },
  {
    "text": "But only used pages on the regions are on physical memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=256"
  },
  {
    "text": "which the system diligently charges to your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=260"
  },
  {
    "text": "as to any other apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=263"
  },
  {
    "text": "Memory pages in your game can be one of three kinds: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=267"
  },
  {
    "text": "dirty, compressed, and clean. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=270"
  },
  {
    "text": "Let's check out what they are. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=273"
  },
  {
    "text": "Dirty memory pages includes memory that your game has written to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=275"
  },
  {
    "text": "This includes memory allocations in heap, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=280"
  },
  {
    "text": "and frameworks, once your game modifies those variables or symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=282"
  },
  {
    "text": "On devices with Apple silicon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=287"
  },
  {
    "text": "accessed Metal resources also fall into this category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=289"
  },
  {
    "text": "this is because CPU and GPU share the same pool of fast unified memory.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=293"
  },
  {
    "text": "However, if some dirty pages are not used for a long time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=300"
  },
  {
    "text": "the system might reduce their presence on physical memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=304"
  },
  {
    "text": "by compressing these pages or storing them on flash or disk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=307"
  },
  {
    "text": "which we call swapping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=310"
  },
  {
    "text": "This will allow the device to run more apps and services. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=312"
  },
  {
    "text": "Later, when your game asks for these pages again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=317"
  },
  {
    "text": "the system will decompress or page in them from disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=320"
  },
  {
    "text": "Note, your game will still get charged for their uncompressed size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=324"
  },
  {
    "text": "For clean memory pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=329"
  },
  {
    "text": "they include read-only files mapped from disk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=331"
  },
  {
    "text": "such as texture or audio assets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=334"
  },
  {
    "text": "and frameworks loaded into the process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=337"
  },
  {
    "text": "The system can empty or reload them from disk at any time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=340"
  },
  {
    "text": "so they don't count towards your game's memory footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=345"
  },
  {
    "text": "However, they may be resident on memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=348"
  },
  {
    "text": "and excessive use will slow down the system and your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=351"
  },
  {
    "text": "It's usually the most interesting to look at the first two parts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=357"
  },
  {
    "text": "which combined, we call memory footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=361"
  },
  {
    "text": "And the system uses this to enforce memory limit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=364"
  },
  {
    "text": "In some terminologies, people say \"dirty memory\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=369"
  },
  {
    "text": "when they mean memory footprint, as dirty is the opposite of clean. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=373"
  },
  {
    "text": "But don't worry, when things become fuzzy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=378"
  },
  {
    "text": "we will call out which one we mean. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=381"
  },
  {
    "text": "So now you know how memory works, and how system charges it to the game.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=384"
  },
  {
    "text": "Besides this Xcode memory gauge, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=389"
  },
  {
    "text": "you can find memory footprint in many places on the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=392"
  },
  {
    "text": "including the Activity Monitor app on Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=396"
  },
  {
    "text": "And some Apple platforms use it for app memory limits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=399"
  },
  {
    "text": "Your game can also use this metric to guide its memory use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=403"
  },
  {
    "text": "There are useful APIs to query current footprint and available memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=407"
  },
  {
    "text": "Here's a quick look. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=413"
  },
  {
    "text": "To get available system memory for your iOS, iPadOS or tvOS game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=414"
  },
  {
    "text": "call os_proc_available_memory, which is in os/proc.h header file.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=420"
  },
  {
    "text": "And for memory footprint on any Apple platform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=427"
  },
  {
    "text": "you can get it via proc_pid_rusage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=430"
  },
  {
    "text": "with process ID from \"get pid\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=433"
  },
  {
    "text": "\"rusage_info_current\", which is version 6 at the moment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=435"
  },
  {
    "text": "and the data store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=439"
  },
  {
    "text": "And retrieve its physical footprint or lifetime max physical footprint property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=442"
  },
  {
    "text": "To recap, in this first section, we reviewed some concepts about memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=448"
  },
  {
    "text": "Allocations in your game happen on virtual memory address space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=453"
  },
  {
    "text": "and they will take up physical memory space as 16 kibibyte pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=457"
  },
  {
    "text": "once they're accessed by your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=462"
  },
  {
    "text": "Memory footprint is the primary and universal metric on Apple platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=465"
  },
  {
    "text": "to determine your game's actual memory use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=470"
  },
  {
    "text": "Memory footprint contains dirty, compressed, and swapped pages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=473"
  },
  {
    "text": "It includes both CPU and GPU objects on Apple silicon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=478"
  },
  {
    "text": "And it's used for memory limit enforcement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=483"
  },
  {
    "text": "Your game can call system APIs to get its footprint, and available memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=486"
  },
  {
    "text": "Now that you know how memory works behind the scenes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=492"
  },
  {
    "text": "let's find out how it looks in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=496"
  },
  {
    "text": "Let me hand over to Seth, to tell you more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=498"
  },
  {
    "text": "Seth Lù: Thanks, Jack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=501"
  },
  {
    "text": "Now, let's get started with capturing the memory growth for a game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=503"
  },
  {
    "text": "And I'll continue to use the Modern Renderer sample project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=506"
  },
  {
    "text": "When you run a game from Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=510"
  },
  {
    "text": "the Memory Gauge shows you the memory footprint over time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=512"
  },
  {
    "text": "However, you can get a much more detailed look at the memory use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=516"
  },
  {
    "text": "by profiling the game in Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=519"
  },
  {
    "text": "Because oftentimes a game could allocate a lot of memory at launch time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=522"
  },
  {
    "text": "you may want to begin profiling from a new game launch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=526"
  },
  {
    "text": "instead of attaching to an existing run. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=528"
  },
  {
    "text": "From Xcode, to quickly begin profiling your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=531"
  },
  {
    "text": "press and hold the run button, then choose \"Profile\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=535"
  },
  {
    "text": "This will automatically bring you to Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=539"
  },
  {
    "text": "The Instruments app includes a collection of profiling tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=542"
  },
  {
    "text": "that record different aspects of the system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=545"
  },
  {
    "text": "and visualizes the recorded data on a timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=547"
  },
  {
    "text": "New this year is the Game Memory template ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=550"
  },
  {
    "text": "that can help you better understand the memory growth in your Metal game.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=552"
  },
  {
    "text": "This template comes with the Allocations and Metal Resource Events instruments ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=557"
  },
  {
    "text": "to record memory allocations with history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=561"
  },
  {
    "text": "VM Tracker to record memory footprint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=564"
  },
  {
    "text": "Virtual Memory Trace to record virtual memory activity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=567"
  },
  {
    "text": "and Metal Application and GPU to record Metal-related events.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=571"
  },
  {
    "text": "And in this demo, I'll highlight the first three instruments: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=577"
  },
  {
    "text": "Allocations, Metal Resource Events, and VM Tracker. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=580"
  },
  {
    "text": "But first, let's record a trace for the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=584"
  },
  {
    "text": "You can press the record button here to start recording. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=587"
  },
  {
    "text": "And later, to stop recording, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=591"
  },
  {
    "text": "you can press the same button or simply quit the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=593"
  },
  {
    "text": "While Instruments is recording the Modern Renderer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=597"
  },
  {
    "text": "let me show you an alternative way to record a trace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=599"
  },
  {
    "text": "The xctrace command allows you to programmatically perform recordings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=603"
  },
  {
    "text": "which may be useful in automation workflows.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=607"
  },
  {
    "text": "Additionally, you can specify the device name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=610"
  },
  {
    "text": "to choose an iPhone, iPad, or Apple TV as the target.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=613"
  },
  {
    "text": "Now that I have captured an Instruments trace, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=618"
  },
  {
    "text": "let's first take a look at Allocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=621"
  },
  {
    "text": "The Allocations instrument gives you a detailed view of memory allocations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=623"
  },
  {
    "text": "their sizes, and object reference counts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=627"
  },
  {
    "text": "However, it doesn't include private Metal resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=630"
  },
  {
    "text": "The Statistics view displays all heap allocations and anonymous VM.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=634"
  },
  {
    "text": "The All Heap Allocations include malloc'ed buffers which may contain objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=640"
  },
  {
    "text": "and All Anonymous VM includes interesting VM regions that may be dirty. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=645"
  },
  {
    "text": "And we'll see in a moment that some Metal resources belong to this category.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=650"
  },
  {
    "text": "Now, let's take a look inside All Heap Allocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=656"
  },
  {
    "text": "Usually, the larger allocations are more interesting for optimization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=659"
  },
  {
    "text": "To find the single largest allocation, you can click on the Size table column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=663"
  },
  {
    "text": "to sort the allocations by size.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=667"
  },
  {
    "text": "For an allocation, you can click on this arrow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=671"
  },
  {
    "text": "to see the reference count changes for Swift and Objective-C objects.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=673"
  },
  {
    "text": "And with this large allocation selected in the list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=680"
  },
  {
    "text": "there is the stack trace of the allocation history in the inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=682"
  },
  {
    "text": "Clicking on the button allows hiding the system libraries or frameworks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=686"
  },
  {
    "text": "And here, according to the stack trace, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=691"
  },
  {
    "text": "the allocation happened when Modern Renderer loaded the assets.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=694"
  },
  {
    "text": "Double clicking on the frame can also bring you to the source code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=698"
  },
  {
    "text": "Now, let's go back and take a look inside the \"All Anonymous VM\" category.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=703"
  },
  {
    "text": "In Metal games, you may find a lot of allocations in the IOAccelerator ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=708"
  },
  {
    "text": "and IOSurface categories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=712"
  },
  {
    "text": "Allocations in IOAccelerator correspond to Metal resources.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=715"
  },
  {
    "text": "From the stack trace, you can see this allocation happened while loading assets.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=720"
  },
  {
    "text": "Allocations in IOSurface correspond to drawables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=726"
  },
  {
    "text": "And here, the stack trace shows the MetalKit view requested the drawable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=730"
  },
  {
    "text": "The Allocations instrument, by default, visualizes the allocation size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=736"
  },
  {
    "text": "However, it also comes with alternative looks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=740"
  },
  {
    "text": "You can on the arrow button in the Allocations track ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=743"
  },
  {
    "text": "to customize the display mode to visualize Allocation Density. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=746"
  },
  {
    "text": "This will update the graph to show you the amount of allocations performed over time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=749"
  },
  {
    "text": "and reveal spikes for memory allocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=753"
  },
  {
    "text": "These spikes may be sources of memory growth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=756"
  },
  {
    "text": "So the data shown in Allocations is quite low-level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=759"
  },
  {
    "text": "To get a better understanding of the allocated Metal resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=763"
  },
  {
    "text": "let's move on to Metal Resource Events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=766"
  },
  {
    "text": "The Metal Resource Events instrument is designed around Metal resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=770"
  },
  {
    "text": "In the Resource Events view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=774"
  },
  {
    "text": "you can find a history of Metal resource allocations and deallocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=776"
  },
  {
    "text": "Here, you could also identify the Metal resources by their labels ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=780"
  },
  {
    "text": "which you can specify programmatically through the Metal API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=784"
  },
  {
    "text": "And similar to the Allocations instrument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=788"
  },
  {
    "text": "you can find a stack trace for the allocation history in the inspector.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=790"
  },
  {
    "text": "This instrument also adds the Allocation and the Deallocations track ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=795"
  },
  {
    "text": "under the Metal device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=799"
  },
  {
    "text": "They help visualize the density of events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=801"
  },
  {
    "text": "So far, Allocations and Metal Resource Events ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=803"
  },
  {
    "text": "can help understand memory allocations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=806"
  },
  {
    "text": "However, allocations don't always translate to memory footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=809"
  },
  {
    "text": "So let's move on to VM Tracker to investigate the actual memory use.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=813"
  },
  {
    "text": "The VM Tracker instrument shows the non-compressed dirty ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=818"
  },
  {
    "text": "and compressed or swapped memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=821"
  },
  {
    "text": "The Dirty Size represents the non-compressed dirty memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=824"
  },
  {
    "text": "And the Swapped Size represents the compressed or swapped memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=828"
  },
  {
    "text": "In this recording, there's no compressed or swapped memory use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=832"
  },
  {
    "text": "from the Modern Renderer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=834"
  },
  {
    "text": "The detailed Summary view shows the VM regions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=837"
  },
  {
    "text": "And in the \"mapped file\" region, you may find some memory-mapped resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=840"
  },
  {
    "text": "like your game assets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=844"
  },
  {
    "text": "Here, Modern Renderer maps the bistro asset file into memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=846"
  },
  {
    "text": "So that's a brief overview of the Allocations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=850"
  },
  {
    "text": "Metal Resource Events and VM Tracker in Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=853"
  },
  {
    "text": "To quickly recap how you can profile memory growth: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=857"
  },
  {
    "text": "First, choose the Game Memory template, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=860"
  },
  {
    "text": "and then, record and analyze the trace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=862"
  },
  {
    "text": "Sometimes, you may repeat this process a few times ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=865"
  },
  {
    "text": "when reproducing or verifying memory growth patterns. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=868"
  },
  {
    "text": "We hope the new Game Memory template can help you better understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=871"
  },
  {
    "text": "the memory allocation or footprint growth in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=874"
  },
  {
    "text": "And please check out these other videos to learn more about using Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=877"
  },
  {
    "text": "Now, back to Jack.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=882"
  },
  {
    "text": "The game Memory template looks really cool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=885"
  },
  {
    "text": "and it's going to be so useful to help with understanding changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=888"
  },
  {
    "text": "of memory use over time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=891"
  },
  {
    "text": "In addition, you might also want to capture the memory state of the game ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=893"
  },
  {
    "text": "at a given time, so you can dig deeper into that memory state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=897"
  },
  {
    "text": "and examine it through different lenses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=901"
  },
  {
    "text": "And for that, we have memory graphs and a suite of tools.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=904"
  },
  {
    "text": "Memory graph is a file to efficiently store a complete snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=909"
  },
  {
    "text": "of your game's memory state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=913"
  },
  {
    "text": "including object creation history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=915"
  },
  {
    "text": "references, and any compression or swapping.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=917"
  },
  {
    "text": "You can take a snapshot anytime you want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=921"
  },
  {
    "text": "such as when an issue occurs, or a pair of those, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=923"
  },
  {
    "text": "before and after an issue happened for comparison. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=927"
  },
  {
    "text": "To spice things up, let's use a cookbook analogy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=931"
  },
  {
    "text": "on how to analyze memory with memory graphs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=935"
  },
  {
    "text": "It includes an ingredient and a preparation part.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=938"
  },
  {
    "text": "For the Ingredients, well, you would need your game; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=943"
  },
  {
    "text": "something called Malloc Stack Logging; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=947"
  },
  {
    "text": "and, a captured memory graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=949"
  },
  {
    "text": "It's quick to configure Malloc Stack Logging ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=952"
  },
  {
    "text": "and to capture a memory graph.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=955"
  },
  {
    "text": "Malloc Stack Logging records allocation information in the game process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=958"
  },
  {
    "text": "You can find it in Scheme settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=963"
  },
  {
    "text": "Choose the Run action, go to Diagnostics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=965"
  },
  {
    "text": "and tick the Malloc Stack Logging checkbox.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=968"
  },
  {
    "text": "In case you wonder what the two options are; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=973"
  },
  {
    "text": "All Allocation and Free History keeps track of all objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=975"
  },
  {
    "text": "even after they are deallocated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=979"
  },
  {
    "text": "The logging data may take up more memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=982"
  },
  {
    "text": "but it's useful for debugging issues such as fragmentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=984"
  },
  {
    "text": "On the other hand, Live Allocation Only discards deallocated objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=988"
  },
  {
    "text": "from its history, so it's lighter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=993"
  },
  {
    "text": "In this case, I'm only investigating references, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=996"
  },
  {
    "text": "which are on live objects, so I can pick this option. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=999"
  },
  {
    "text": "In fact, most of the time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1003"
  },
  {
    "text": "Live Allocation Only will be your recommended option.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1005"
  },
  {
    "text": "Alternatively, you can set environment variable if not launching from Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1010"
  },
  {
    "text": "Check out the malloc manual page for some additional recording modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1016"
  },
  {
    "text": "After that, also prepare a memory graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1020"
  },
  {
    "text": "Just click on the debug memory graph button ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1023"
  },
  {
    "text": "in the debug area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1025"
  },
  {
    "text": "Xcode will take a memory snapshot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1027"
  },
  {
    "text": "process it, and enter the memory debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1029"
  },
  {
    "text": "Xcode Memory Debugger provides intuitive perspectives into the game's memory use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1033"
  },
  {
    "text": "Let's take a minute to explore the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1038"
  },
  {
    "text": "On the left side, Debug Navigator gives you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1042"
  },
  {
    "text": "a hierarchical list of object instances.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1045"
  },
  {
    "text": "On the right, File Inspector provides useful information ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1050"
  },
  {
    "text": "such as memory footprint, uptime, and capture date.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1054"
  },
  {
    "text": "In the middle area shines the memory graph view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1060"
  },
  {
    "text": "where you have the selected object from the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1064"
  },
  {
    "text": "and how references connect to this object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1067"
  },
  {
    "text": "I'll come back to this graph in a bit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1070"
  },
  {
    "text": "And the File menu gives you the option to save this memory graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1076"
  },
  {
    "text": "for future analysis, or to easily share with your team.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1079"
  },
  {
    "text": "For a Mac game, you can also capture a memory graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1085"
  },
  {
    "text": "with the leaks command line program, using process ID or name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1087"
  },
  {
    "text": "This means you could do it remotely in a secure shell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1092"
  },
  {
    "text": "so the cursor stays in the game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1096"
  },
  {
    "text": "in case your game is running fullscreen and needs to stay in focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1098"
  },
  {
    "text": "So that's what you'll need to start memory graph analysis.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1103"
  },
  {
    "text": "Now it's time to examine this memory graph using Xcode Memory Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1108"
  },
  {
    "text": "plus some versatile command line tools in Terminal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1112"
  },
  {
    "text": "to find out allocations, footprint, and even more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1116"
  },
  {
    "text": "A good first step is to break down memory use by categories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1121"
  },
  {
    "text": "The footprint program does just that.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1125"
  },
  {
    "text": "Footprint uses information in the memory graph to recreate this high level summary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1130"
  },
  {
    "text": "Typically, you will want to first focus on the larger categories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1136"
  },
  {
    "text": "For game memory graphs such as this one from the Modern Rendering sample code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1141"
  },
  {
    "text": "IOAccelerator is usually the largest one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1145"
  },
  {
    "text": "As Seth said, it includes Metal resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1149"
  },
  {
    "text": "Here, heap allocations go to several MALLOC_(prefixed) categories, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1155"
  },
  {
    "text": "since the system groups heap allocations to size pools to improve performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1160"
  },
  {
    "text": "These objects may come from many places, such as third-party plugins, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1165"
  },
  {
    "text": "or libraries, where your game does sound effects or physics simulation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1170"
  },
  {
    "text": "Here's a memory graph from an awesome Apple Arcade game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1176"
  },
  {
    "text": "Manifold Garden, created by William \"Cheer\" Studio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1179"
  },
  {
    "text": "I'm glad they allow me to show you the game's memory usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1183"
  },
  {
    "text": "If your game uses a game engine, like Manifold Garden using Unity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1186"
  },
  {
    "text": "or a custom allocator on top of memory map, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1191"
  },
  {
    "text": "that memory would be shown as untagged VM_ALLOCATE like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1194"
  },
  {
    "text": "Here's a pro tip: on Apple platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1198"
  },
  {
    "text": "your game can use up to 16 app-specific tags, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1201"
  },
  {
    "text": "so you can have more clarity when drilling down memory usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1204"
  },
  {
    "text": "It's as easy as a one line change.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1208"
  },
  {
    "text": "First, make the tag from one of 16 options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1212"
  },
  {
    "text": "Then replace the minus one with this new tag as the \"file descriptor\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1216"
  },
  {
    "text": "when calling \"em map\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1221"
  },
  {
    "text": "Check out \"em map's\" manual page to learn how tags and categories are defined.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1224"
  },
  {
    "text": "If you use \"mach VM allocate\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1230"
  },
  {
    "text": "include the same flag in the flag argument when allocating.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1232"
  },
  {
    "text": "In the world of footprint program, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1239"
  },
  {
    "text": "the dirty size also includes swap and compressed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1241"
  },
  {
    "text": "so think of it as total charged for each category.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1245"
  },
  {
    "text": "That's a brief idea of the composition of current memory use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1250"
  },
  {
    "text": "and how it makes up the footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1253"
  },
  {
    "text": "Some of this memory is less used and become compressed or swapped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1256"
  },
  {
    "text": "They might be sources of memory savings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1261"
  },
  {
    "text": "The next step is to find out how much compressed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1264"
  },
  {
    "text": "or swapped memory the game uses, and optimize.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1267"
  },
  {
    "text": "For this, you can run the memory graph with vmmap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1272"
  },
  {
    "text": "It gives you dirty and swapped sizes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1276"
  },
  {
    "text": "instead of two combined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1279"
  },
  {
    "text": "This dirty column includes currently not swapped ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1282"
  },
  {
    "text": "or compressed regular dirty memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1285"
  },
  {
    "text": "while the swapped column includes the original size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1287"
  },
  {
    "text": "of compressed or swapped memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1290"
  },
  {
    "text": "The system adds these two columns together to determine footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1293"
  },
  {
    "text": "But since content in the swapped size column isn't used as often, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1297"
  },
  {
    "text": "it is a good indicator for what to look for ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1302"
  },
  {
    "text": "to optimize your game's memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1305"
  },
  {
    "text": "Oh, by the way, here is the allocation size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1308"
  },
  {
    "text": "with the virtual size column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1311"
  },
  {
    "text": "And the resident size includes clean pages such as executables ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1314"
  },
  {
    "text": "and memory mapped files.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1318"
  },
  {
    "text": "Conveniently, vmmap shows heap allocations with a separate table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1322"
  },
  {
    "text": "At the bottom of its output, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1327"
  },
  {
    "text": "vmmap groups heap memory by zones. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1329"
  },
  {
    "text": "These zones reflect their usage or lifecycle in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1333"
  },
  {
    "text": "Because I turned on MallocStackLogging, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1338"
  },
  {
    "text": "allocations on the heap are in the tool's zone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1340"
  },
  {
    "text": "Otherwise, they would be in two default zones: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1344"
  },
  {
    "text": "MallocHelperZone and DefaultMallocZone, based on the allocation size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1347"
  },
  {
    "text": "And usually you could skip smaller system utility zones such as QuartzCore zone.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1353"
  },
  {
    "text": "Also, if you suspect fragmentation, indicated by high fragmentation size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1362"
  },
  {
    "text": "or percentage, like dozens or hundreds of megabytes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1367"
  },
  {
    "text": "the WWDC 2021 session covers more about fragmentation issues.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1372"
  },
  {
    "text": "And running vmmap without dash dash summary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1378"
  },
  {
    "text": "or to use vmmap in standard mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1382"
  },
  {
    "text": "shows each vm region within those categories line by line. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1384"
  },
  {
    "text": "Just like how the virtual address space looks like, as we discussed earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1389"
  },
  {
    "text": "So with vmmap, you can distill less used dirty memory from actively used ones. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1394"
  },
  {
    "text": "And typically, there are also a good amount ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1401"
  },
  {
    "text": "of dynamic allocations of various sizes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1403"
  },
  {
    "text": "or malloc'd heap memory usage in the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1407"
  },
  {
    "text": "They need a special look.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1410"
  },
  {
    "text": "Heap tool groups malloc'd resources by their classes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1412"
  },
  {
    "text": "and sorts them by instance count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1416"
  },
  {
    "text": "These classes are determined in C++ with a VTable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1419"
  },
  {
    "text": "Objective-C, or Swift.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1423"
  },
  {
    "text": "We are using the —quiet argument ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1427"
  },
  {
    "text": "to skip the header about some metadata. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1430"
  },
  {
    "text": "New this year, heap is more intelligent at identifying object types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1433"
  },
  {
    "text": "It uses information recorded by Malloc Stack Logging ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1439"
  },
  {
    "text": "to present the caller or responsible library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1442"
  },
  {
    "text": "so a huge non-object is a thing of the past.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1446"
  },
  {
    "text": "And here is the memory graph from Manifold Garden again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1450"
  },
  {
    "text": "In this example, it is revealed for the first time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1454"
  },
  {
    "text": "how much heap usage is taken up by plugins like FMOD Studio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1458"
  },
  {
    "text": "and game components such as GameAssembly.dylib. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1463"
  },
  {
    "text": "So now you can be more informed on how the memory is spread out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1467"
  },
  {
    "text": "And it also hints which direction to go for getting more info on these objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1472"
  },
  {
    "text": "In this example, the developer can open FMOD Studio ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1478"
  },
  {
    "text": "to fine tune the soundtrack and sound effects in the game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1482"
  },
  {
    "text": "or go to Unity to look for game code optimizations, and so on.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1485"
  },
  {
    "text": "Sometimes, sorting by class total size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1492"
  },
  {
    "text": "rather than class instance count is more helpful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1495"
  },
  {
    "text": "In the memory graph of the Modern Rendering sample project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1498"
  },
  {
    "text": "the top contributor is a class using over 258 million bytes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1501"
  },
  {
    "text": "To continue looking for larger objects in the Modern Rendering sample, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1507"
  },
  {
    "text": "use heap to sort objects by class total size with —sortBySize, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1511"
  },
  {
    "text": "and list all objects with —showSizes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1517"
  },
  {
    "text": "rather than a summary of each class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1521"
  },
  {
    "text": "And, there is one object of NSConcreteMutableData ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1524"
  },
  {
    "text": "in Bytes Storage with a size of 255 million bytes: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1528"
  },
  {
    "text": "that looks like one worth looking at. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1534"
  },
  {
    "text": "Next, I want to find out what it is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1538"
  },
  {
    "text": "And I want to know its address for a start. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1540"
  },
  {
    "text": "I add —address and enter the pattern NSConcreteMutableData ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1544"
  },
  {
    "text": "followed by wildcard– dot star, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1549"
  },
  {
    "text": "and a size filter in the bracket ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1553"
  },
  {
    "text": "to only list objects 10 megabytes large and upwards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1555"
  },
  {
    "text": "And here is the address of the object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1560"
  },
  {
    "text": "I'll use it in the following steps for more in-depth analysis. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1562"
  },
  {
    "text": "So that's heap tool, with improved object identification for instances. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1567"
  },
  {
    "text": "So far, you've seen three tools to understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1573"
  },
  {
    "text": "what objects are using memory in the game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1576"
  },
  {
    "text": "and they all provide different views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1579"
  },
  {
    "text": "What I showed was just one workflow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1581"
  },
  {
    "text": "Depending on the particular memory patterns, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1584"
  },
  {
    "text": "or technologies used in your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1586"
  },
  {
    "text": "you can use them in any way that suits your needs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1588"
  },
  {
    "text": "With discoveries for objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1593"
  },
  {
    "text": "that we are not quite sure of their existence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1596"
  },
  {
    "text": "the next step is to get its origin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1599"
  },
  {
    "text": "which is its allocation call stack.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1601"
  },
  {
    "text": "In the case of the 200 million bytes object in Modern Rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1605"
  },
  {
    "text": "I use the —callTree mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1608"
  },
  {
    "text": "and pass in its address to malloc_history. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1610"
  },
  {
    "text": "Together with additional invert argument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1614"
  },
  {
    "text": "I can focus on functions closest to the allocation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1617"
  },
  {
    "text": "And voila. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1621"
  },
  {
    "text": "Here is the back trace of the allocation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1623"
  },
  {
    "text": "Similarly, Xcode Memory Debugger shows the allocation history of an object too ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1626"
  },
  {
    "text": "in the inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1632"
  },
  {
    "text": "Just select an object, click on the Memory Inspector, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1633"
  },
  {
    "text": "and there it is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1637"
  },
  {
    "text": "As another example, pass in VM_ALLOCATE ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1640"
  },
  {
    "text": "as the class pattern instead of an address, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1644"
  },
  {
    "text": "to check for anonymous VM usage in your game or plugin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1647"
  },
  {
    "text": "such as debugging a custom allocator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1651"
  },
  {
    "text": "Whether using Xcode or malloc_history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1654"
  },
  {
    "text": "you can know the allocation back trace, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1657"
  },
  {
    "text": "and decide if you want to dig deeper, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1660"
  },
  {
    "text": "including setting a breakpoint at the line, for a start.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1663"
  },
  {
    "text": "And last but not least, it's also helpful to investigate object references. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1668"
  },
  {
    "text": "Memory graph always records object references, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1675"
  },
  {
    "text": "even when MallocStackLogging is not enabled for various reasons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1678"
  },
  {
    "text": "We've used leaks before to capture a memory graph outside of Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1684"
  },
  {
    "text": "Leaks does more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1688"
  },
  {
    "text": "It checks for all references in the memory graph, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1690"
  },
  {
    "text": "and that is why it knows about leaks and retain cycles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1693"
  },
  {
    "text": "Leaks gets this tree of references to the object ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1697"
  },
  {
    "text": "by using the trace tree argument and the object address from heap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1700"
  },
  {
    "text": "However, because this is a rather large tree in this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1704"
  },
  {
    "text": "there is a somewhat better way to view it than in Terminal.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1708"
  },
  {
    "text": "With Xcode 14, we redesigned the memory graph view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1714"
  },
  {
    "text": "to show both ingoing and outgoing edges of the selected object.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1717"
  },
  {
    "text": "It even has a new neighbor selection popover, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1723"
  },
  {
    "text": "to choose the edges you want Xcode to draw. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1726"
  },
  {
    "text": "This is going to greatly improve productivity ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1729"
  },
  {
    "text": "when trying to understand object references in complex game states.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1732"
  },
  {
    "text": "After exploring around for a little bit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1738"
  },
  {
    "text": "I'm pretty sure the texture manager is what is accessing this object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1740"
  },
  {
    "text": "For your game, consider using leaks tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1745"
  },
  {
    "text": "and the memory graph view to find important object reference relationships, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1747"
  },
  {
    "text": "to learn how these objects are accessed in the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1752"
  },
  {
    "text": "So that how to view and find out important references ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1756"
  },
  {
    "text": "of an object using leaks or Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1759"
  },
  {
    "text": "Please check out leaks' manual page, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1762"
  },
  {
    "text": "and Xcode help for more usage of these tools.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1764"
  },
  {
    "text": "In this memory graph analysis cookbook, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1769"
  },
  {
    "text": "each step uses some specific tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1772"
  },
  {
    "text": "All of them work together to complete the analysis on a memory graph.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1775"
  },
  {
    "text": "To summarize, the first thing is to enable MallocStackLogging ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1781"
  },
  {
    "text": "when you expect to capture and analyze memory with a memory graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1785"
  },
  {
    "text": "Then capture a memory graph with Xcode for your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1791"
  },
  {
    "text": "or alternatively use leaks tool for your Mac game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1794"
  },
  {
    "text": "Next, find large and troublesome objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1798"
  },
  {
    "text": "Footprint, vmmap, and heap tools provide breakdown of memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1802"
  },
  {
    "text": "both on a high level and in details. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1807"
  },
  {
    "text": "With malloc_history, you can find out where objects are allocated ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1811"
  },
  {
    "text": "and leaks can analyze object usage or references. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1815"
  },
  {
    "text": "These previous sessions include in-depth walkthroughs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1819"
  },
  {
    "text": "as well as demos of more usage of these tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1822"
  },
  {
    "text": "Until now, we have deferred probing into Metal resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1826"
  },
  {
    "text": "Well, now is the time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1830"
  },
  {
    "text": "To tell you more, here's Seth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1832"
  },
  {
    "text": "Hi again! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1835"
  },
  {
    "text": "In games, Metal resources can use a big chunk of memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1837"
  },
  {
    "text": "But there are ways to optimize their memory use.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1840"
  },
  {
    "text": "Here I've summarized a list of memory savings ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1844"
  },
  {
    "text": "that you can use when optimizing the Metal resources in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1846"
  },
  {
    "text": "We'll take a look at how Metal Debugger can help you with auditing the resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1850"
  },
  {
    "text": "and learn some advanced techniques for further reducing your game memory.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1854"
  },
  {
    "text": "Metal Debugger is the one stop shop for debugging your Metal games. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1859"
  },
  {
    "text": "After taking a GPU frame capture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1863"
  },
  {
    "text": "you can find a summary page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1865"
  },
  {
    "text": "This provides you with some general stats about the captured workload.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1867"
  },
  {
    "text": "In the lower half of the page, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1872"
  },
  {
    "text": "there is a list of insights divided in four categories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1873"
  },
  {
    "text": "Insights in the \"Memory\" category suggest memory savings for your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1877"
  },
  {
    "text": "There aren't many memory insights particular for this trace; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1882"
  },
  {
    "text": "we can save just a few megabytes of memory after addressing these insights.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1885"
  },
  {
    "text": "However, there may be more memory savings specific to your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1891"
  },
  {
    "text": "To get a more complete picture of the memory used by Metal resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1895"
  },
  {
    "text": "you can use the Memory Viewer from clicking on the Show Memory button.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1898"
  },
  {
    "text": "The Memory Viewer offers you a full list of resources captured from the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1902"
  },
  {
    "text": "The upper half shows different categories for filtering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1907"
  },
  {
    "text": "You can quickly use this to look up resources, say, textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1910"
  },
  {
    "text": "And in the lower half, the table displays just the textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1914"
  },
  {
    "text": "Let's take out the filter for now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1918"
  },
  {
    "text": "The resource table has a collection of columns to help you optimize your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1921"
  },
  {
    "text": "And I'd like to highlight a few columns that may help you quickly identify ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1926"
  },
  {
    "text": "some interesting resources.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1929"
  },
  {
    "text": "The Insights column is similar to what we just saw on the summary page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1933"
  },
  {
    "text": "You may quickly view all the resources with insights ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1937"
  },
  {
    "text": "when sorting the table by this column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1939"
  },
  {
    "text": "And clicking on an insight icon will reveal a popover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1943"
  },
  {
    "text": "explaining the finding and providing some possible actions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1946"
  },
  {
    "text": "Right next to this column is Allocated Size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1950"
  },
  {
    "text": "You can sort by this column to see the largest resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1954"
  },
  {
    "text": "It may be useful to audit if some resources actually make good use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1958"
  },
  {
    "text": "of their memory size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1961"
  },
  {
    "text": "For example, some textures may be resized to smaller resolutions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1963"
  },
  {
    "text": "and some models loaded in buffers may use a lower poly count, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1967"
  },
  {
    "text": "given that doing so won't affect the visual quality of the game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1971"
  },
  {
    "text": "There are some alternative ways to save texture memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1975"
  },
  {
    "text": "that I'll mention in a minute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1977"
  },
  {
    "text": "Another interesting column here is Time Since Last Bound. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1979"
  },
  {
    "text": "You can sort the resources by this column to find which haven't been used recently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1983"
  },
  {
    "text": "If a resource is never used, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1988"
  },
  {
    "text": "it may be a good idea to double check if it's worth loading the asset. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1989"
  },
  {
    "text": "For a resource that hasn't been bound for a while, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1994"
  },
  {
    "text": "you may consider releasing it if it won't be used again in the future. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=1996"
  },
  {
    "text": "Alternatively, you can set its purgeable state to volatile. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2000"
  },
  {
    "text": "A Metal resource may be in one of the three purgeable states: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2005"
  },
  {
    "text": "non-volatile, volatile, and empty. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2008"
  },
  {
    "text": "By default, resources are non-volatile. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2012"
  },
  {
    "text": "By setting the purgeable state to volatile, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2015"
  },
  {
    "text": "Metal may evict the resource from memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2017"
  },
  {
    "text": "in case of high memory pressure in the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2019"
  },
  {
    "text": "Once the resource is empty, the system will no longer charge it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2022"
  },
  {
    "text": "towards the game's footprint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2025"
  },
  {
    "text": "When your game needs the resource again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2028"
  },
  {
    "text": "check if the content's still there, and reload if needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2029"
  },
  {
    "text": "Consider only using volatile for infrequently used resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2033"
  },
  {
    "text": "so the purgeable state doesn't work against you.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2036"
  },
  {
    "text": "So those are some of the general notes for all resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2041"
  },
  {
    "text": "And now, let's take a closer look at textures.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2045"
  },
  {
    "text": "Not all columns are shown by default in Memory Viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2048"
  },
  {
    "text": "Right clicking on the table header will allow showing and hiding columns ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2052"
  },
  {
    "text": "like texture's Pixel Format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2055"
  },
  {
    "text": "You may get different amount of savings by optimizing the pixel format for a texture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2058"
  },
  {
    "text": "Many textures in a game could use a 16-bit half precision pixel format ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2063"
  },
  {
    "text": "to reduce memory use and bandwidth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2067"
  },
  {
    "text": "In cases when you need a texture with a single alpha component, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2069"
  },
  {
    "text": "you may avoid multiple color channels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2072"
  },
  {
    "text": "And lastly, some read-only textures may benefit from block compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2075"
  },
  {
    "text": "for lower memory use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2079"
  },
  {
    "text": "For block compressed pixel formats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2081"
  },
  {
    "text": "there are options such as ASTC and BC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2083"
  },
  {
    "text": "Additionally, since A15 Bionic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2086"
  },
  {
    "text": "you can use lossy compression for textures and render targets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2089"
  },
  {
    "text": "to save memory while preserving quality wherever possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2091"
  },
  {
    "text": "Please check out these previous videos for more details.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2095"
  },
  {
    "text": "And those are some of the memory savings you can quickly discover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2100"
  },
  {
    "text": "from using Memory Viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2103"
  },
  {
    "text": "But there are a few additional techniques you may take ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2105"
  },
  {
    "text": "to further optimize your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2107"
  },
  {
    "text": "If a texture is only used by single pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2110"
  },
  {
    "text": "you can set its storage mode to memoryless ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2112"
  },
  {
    "text": "to save memory and bandwidth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2114"
  },
  {
    "text": "Memoryless textures work well for temporary render targets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2116"
  },
  {
    "text": "like depth, stencil, or multi-sampled textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2119"
  },
  {
    "text": "Otherwise, if the texture is only used by the GPU, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2123"
  },
  {
    "text": "you can set its storage mode to private, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2126"
  },
  {
    "text": "or else shared or managed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2128"
  },
  {
    "text": "As a reminder, managed mode is not needed on Apple silicon Macs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2131"
  },
  {
    "text": "just like on iPhone and iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2134"
  },
  {
    "text": "Here's an example case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2137"
  },
  {
    "text": "The game has a Depth32Float_Stencil8 texture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2139"
  },
  {
    "text": "The depth texture is used across passes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2142"
  },
  {
    "text": "but the stencil texture's content is discarded ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2146"
  },
  {
    "text": "and won't be used later in the frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2148"
  },
  {
    "text": "So instead, the game could use two textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2151"
  },
  {
    "text": "and make the stencil texture memoryless, to save memory and bandwidth.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2154"
  },
  {
    "text": "Lastly, I'd like to mention another technique that might be interesting to you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2159"
  },
  {
    "text": "for making the most out of the memory in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2162"
  },
  {
    "text": "You may use aliased resources from a heap ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2165"
  },
  {
    "text": "if your game doesn't use them at the same time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2167"
  },
  {
    "text": "They can share the memory backed by the same allocation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2169"
  },
  {
    "text": "But be extra careful when synchronizing the accesses to those resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2173"
  },
  {
    "text": "You can check out the \"Go bindless with Metal 3\" talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2177"
  },
  {
    "text": "to learn more about using resources allocated from a heap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2179"
  },
  {
    "text": "So that wraps up our checklist of memory savings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2183"
  },
  {
    "text": "And I hope this checklist will help you audit the Metal resources in your game.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2186"
  },
  {
    "text": "To learn more about using Metal Debugger for optimizing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2191"
  },
  {
    "text": "your game memory, please check out these other WWDC talks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2193"
  },
  {
    "text": "And back to you, Jack.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2198"
  },
  {
    "text": "Thank you, Seth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2201"
  },
  {
    "text": "Today, we took a guided tour and explored many interesting things ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2202"
  },
  {
    "text": "you can do to understand and improve your game's memory usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2206"
  },
  {
    "text": "First, memory footprint is the primary metric ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2210"
  },
  {
    "text": "in understanding your game's memory usage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2214"
  },
  {
    "text": "and it includes dirty plus compressed and swapped memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2216"
  },
  {
    "text": "Then, we experienced powerful memory debugging tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2221"
  },
  {
    "text": "Seth showed us how Instruments empower memory profiling ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2225"
  },
  {
    "text": "with useful telemetry tracks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2229"
  },
  {
    "text": "The new Game Memory template is exactly tailored for this job. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2231"
  },
  {
    "text": "After that, I presented memory graph to store a snapshot of game memory state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2236"
  },
  {
    "text": "There are flexible and powerful command line programs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2242"
  },
  {
    "text": "to analyze memory graphs for objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2245"
  },
  {
    "text": "references, and allocation history. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2248"
  },
  {
    "text": "Improvements in the heap tool and redesigned Xcode Memory Debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2251"
  },
  {
    "text": "will supercharge game memory analysis. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2255"
  },
  {
    "text": "Lastly, Seth shared a memory savings checklist ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2258"
  },
  {
    "text": "for Metal resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2262"
  },
  {
    "text": "and how Metal Debugger can help answer questions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2264"
  },
  {
    "text": "about Metal resource usage in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2267"
  },
  {
    "text": "You could also learn more from other WWDC sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2271"
  },
  {
    "text": "documentation, and manual pages.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2274"
  },
  {
    "text": "We are constantly advancing our best and most flexible tools for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2278"
  },
  {
    "text": "So why not try them out? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2282"
  },
  {
    "text": "They may just be what you are looking for.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2284"
  },
  {
    "text": "And don't hesitate to share with us any feedback you may have, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2287"
  },
  {
    "text": "via any channels such as the Feedback Assistant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2291"
  },
  {
    "text": "Have fun in your memory journey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2295"
  },
  {
    "text": "and thanks for watching.  ♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10106/?time=2297"
  }
]