[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=0"
  },
  {
    "text": "- Welcome to \"What's New in UIKit\" in iOS 16. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=9"
  },
  {
    "text": "I'm Dima, and I'm an engineering manager on the UIKit team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=14"
  },
  {
    "text": "UIKit is the powerful framework at the core of your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=19"
  },
  {
    "text": "It has been updated to support new features in iOS 16.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=23"
  },
  {
    "text": "In this video, I will cover UI improvements for productivity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=29"
  },
  {
    "text": "Control enhancements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=35"
  },
  {
    "text": "API refinements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=37"
  },
  {
    "text": "and I will talk about exciting new ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=40"
  },
  {
    "text": "to use UIKit and SwiftUI together.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=43"
  },
  {
    "text": "We made it even easier in UIKit to develop streamlined, discoverable user interfaces ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=50"
  },
  {
    "text": "with improved navigation bars that feature a new title menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=57"
  },
  {
    "text": "find and replace, and reimagined editing interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=61"
  },
  {
    "text": "for cut, copy, and paste. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=65"
  },
  {
    "text": "You will be able to enhance your document-based applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=67"
  },
  {
    "text": "I'll start by taking a closer look at navigation bars, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=71"
  },
  {
    "text": "updated to support desktop class toolbar capabilities.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=75"
  },
  {
    "text": "In iOS 16, UIKit introduces two new navigation styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=82"
  },
  {
    "text": "to better support the needs of document based apps: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=88"
  },
  {
    "text": "browser and editor.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=91"
  },
  {
    "text": "The browser style is designed for apps that use history or folder structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=95"
  },
  {
    "text": "for navigation, like web and document browsers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=101"
  },
  {
    "text": "The editor is intended for interfaces centered around editing documents.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=107"
  },
  {
    "text": "in iOS 16, you can add a variety of bar button items to your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=115"
  },
  {
    "text": "a subset of which will be displayed in the center of the navigation bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=120"
  },
  {
    "text": "By tapping the \"customize toolbar\" entry in the menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=127"
  },
  {
    "text": "items can be rearranged by dragging to and from the items popup.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=131"
  },
  {
    "text": "The resulting new configuration persists across app launch.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=137"
  },
  {
    "text": "To accommodate a size change, for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=145"
  },
  {
    "text": "when entering side-by-side mode with another app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=148"
  },
  {
    "text": "the system automatically provides an overflow menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=152"
  },
  {
    "text": "to access any items that don't fit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=156"
  },
  {
    "text": "We have added a title menu that works with the new navigation styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=162"
  },
  {
    "text": "and supports a few standard functions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=167"
  },
  {
    "text": "duplicate, move, rename, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=170"
  },
  {
    "text": "export, and print. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=174"
  },
  {
    "text": "These are displayed in the menu automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=177"
  },
  {
    "text": "when the corresponding delegate methods are implemented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=181"
  },
  {
    "text": "It's also possible to add completely custom items to the title menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=185"
  },
  {
    "text": "Additionally, apps built with Mac Catalyst ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=195"
  },
  {
    "text": "take advantage of the improved navigation bars ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=198"
  },
  {
    "text": "by seamlessly integrating with NSToolbar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=201"
  },
  {
    "text": "with no additional code required.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=205"
  },
  {
    "text": "iOS 16 introduces new ways to manipulate text ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=209"
  },
  {
    "text": "consistently across various apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=214"
  },
  {
    "text": "The first one is the new find and replace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=217"
  },
  {
    "text": "Conceptually, it is different from the more high-level in-app search ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=221"
  },
  {
    "text": "that operates on data model objects such as photos or calendar events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=226"
  },
  {
    "text": "Instead, find and replace is purposefully built to work with text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=233"
  },
  {
    "text": "It only takes setting a flag to activate the feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=238"
  },
  {
    "text": "for built-in UIKit views such as UITextView and WKWebView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=242"
  },
  {
    "text": "Additionally, it seamlessly works across multiple views and documents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=249"
  },
  {
    "text": "that opted into this system.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=254"
  },
  {
    "text": "Next, the edit menu has received a major upgrade. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=257"
  },
  {
    "text": "It now looks different depending on the input method used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=262"
  },
  {
    "text": "On touch interaction, you get a redesigned menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=266"
  },
  {
    "text": "that is more interactive.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=270"
  },
  {
    "text": "When using a pointer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=275"
  },
  {
    "text": "you get a more full-featured context menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=277"
  },
  {
    "text": "To provide both of these experiences in a seamless way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=282"
  },
  {
    "text": "we've introduced UIEditMenuInteraction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=286"
  },
  {
    "text": "as a full replacement for the now-deprecated UIMenuController.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=290"
  },
  {
    "text": "There is also new API to insert actions into a text view's menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=296"
  },
  {
    "text": "Watch \"Adopt desktop class editing interactions\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=303"
  },
  {
    "text": "to learn all the details on the new edit menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=306"
  },
  {
    "text": "and learn how to adopt find interaction for custom views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=310"
  },
  {
    "text": "There is one visual UI update I'd like to cover. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=317"
  },
  {
    "text": "In iOS 16, the sidebar in slide over mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=322"
  },
  {
    "text": "automatically becomes vibrant ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=326"
  },
  {
    "text": "without any additional code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=328"
  },
  {
    "text": "To achieve this, UIKit manages a set of private views on your behalf.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=331"
  },
  {
    "text": "Those are the new productivity features in UIKit: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=338"
  },
  {
    "text": "the new customizable navigation bars, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=341"
  },
  {
    "text": "find and replace, editing interactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=344"
  },
  {
    "text": "as well as the powerful title menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=348"
  },
  {
    "text": "I am just scratching the surface here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=352"
  },
  {
    "text": "To learn a lot more, check the \"Meet desktop class iPad\" session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=354"
  },
  {
    "text": "as well as a more in depth \"Build a desktop class iPad app,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=359"
  },
  {
    "text": "where you'll be walked through improving a sample app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=363"
  },
  {
    "text": "with new advanced UIKit features in iOS 16.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=367"
  },
  {
    "text": "Now I'm going to introduce two new controls we've added ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=373"
  },
  {
    "text": "and discuss some enhancements to UIPageControl.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=377"
  },
  {
    "text": "The inline calendar style of UIDatePicker is now available ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=382"
  },
  {
    "text": "as a standalone fully-featured component, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=388"
  },
  {
    "text": "in the form of UICalendarView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=391"
  },
  {
    "text": "UICalendarView supports different types of selection behaviors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=394"
  },
  {
    "text": "like optional single dates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=399"
  },
  {
    "text": "as well as selecting multiple dates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=401"
  },
  {
    "text": "On top of the available date range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=405"
  },
  {
    "text": "it also supports disabling individual dates from selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=407"
  },
  {
    "text": "Moreover, you can annotate individual dates with decorations.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=413"
  },
  {
    "text": "One major difference between UICalendarView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=420"
  },
  {
    "text": "and UIDatePicker is that UICalendarView represents dates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=423"
  },
  {
    "text": "as NSDateComponents, rather than NSDate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=428"
  },
  {
    "text": "Unlike NSDate, date components are a better, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=433"
  },
  {
    "text": "and a more correct representation of a date ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=436"
  },
  {
    "text": "whereas NSDate is a representation of a point in time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=440"
  },
  {
    "text": "Because NSDateComponents offer many flexibilities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=447"
  },
  {
    "text": "you should be very explicit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=451"
  },
  {
    "text": "about which NSCalendar the components are represented by.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=453"
  },
  {
    "text": "Note that you should not make assumptions about the type of the current calendar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=458"
  },
  {
    "text": "If you need the calendar to be Gregorian, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=463"
  },
  {
    "text": "explicitly specify the Gregorian calendar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=465"
  },
  {
    "text": "To configure a Calendar view like the one shown earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=473"
  },
  {
    "text": "first, create the Calendar view and set its delegate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=477"
  },
  {
    "text": "To ensure that the Calendar is backed by the Gregorian NSCalendar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=482"
  },
  {
    "text": "set the calendar property on the calendarView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=488"
  },
  {
    "text": "to a Gregorian NSCalendar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=491"
  },
  {
    "text": "Next, to configure the multi-date selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=495"
  },
  {
    "text": "Create a UICalendarSelectionMultiDate object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=499"
  },
  {
    "text": "and set the selected dates property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=504"
  },
  {
    "text": "on the selection object to existing dates you have from your data model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=506"
  },
  {
    "text": "to show in the Calendar view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=512"
  },
  {
    "text": "Then, set the selection object to the calendar view's selection behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=515"
  },
  {
    "text": "To prevent the selection of individual dates in the Calendar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=524"
  },
  {
    "text": "implement the multiDateSelection:canSelectDate: method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=529"
  },
  {
    "text": "from the calendar's selection's delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=533"
  },
  {
    "text": "to control which dates can be selected.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=536"
  },
  {
    "text": "Dates that cannot be selected will appear greyed out in the calendar view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=540"
  },
  {
    "text": "To annotate individual dates with decorations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=547"
  },
  {
    "text": "implement the calendar delegate's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=551"
  },
  {
    "text": "calendarView:decorationForDateComponents: Method.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=554"
  },
  {
    "text": "For no decorations, simply return nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=559"
  },
  {
    "text": "For a default grey circle, return the default decoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=563"
  },
  {
    "text": "You can also create image decorations with options to customize its color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=569"
  },
  {
    "text": "And if you need more, use the customView decoration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=575"
  },
  {
    "text": "and return your view in the view provider.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=580"
  },
  {
    "text": "Please note that the custom view decorations do not allow interaction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=584"
  },
  {
    "text": "and are clipped to the available space.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=588"
  },
  {
    "text": "The page control is also improved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=593"
  },
  {
    "text": "We added the support for custom indicator images for the current page, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=596"
  },
  {
    "text": "so you can now choose different images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=601"
  },
  {
    "text": "depending on whether the page is selected or not.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=603"
  },
  {
    "text": "Now you can also fully customize both the orientation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=608"
  },
  {
    "text": "and the direction of the page control.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=612"
  },
  {
    "text": "Here is an example of configuring a vertical page control ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=616"
  },
  {
    "text": "whose indicators change between the current versus the non-current pages.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=620"
  },
  {
    "text": "I set the page control's direction to top-to-bottom ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=627"
  },
  {
    "text": "and set preferred indicator image and preferred current indicator image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=631"
  },
  {
    "text": "and that's it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=636"
  },
  {
    "text": "Apple is committed to protecting user privacy and security. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=641"
  },
  {
    "text": "In iOS 15, when an application programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=646"
  },
  {
    "text": "accessed the pasteboard without using system provided Paste interfaces, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=649"
  },
  {
    "text": "a banner would appear to indicate that the pasteboard was accessed.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=654"
  },
  {
    "text": "New to iOS 16, the system behavior has changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=660"
  },
  {
    "text": "Now, instead of a banner, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=664"
  },
  {
    "text": "we will display an alert that asks for permission to use the pasteboard.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=666"
  },
  {
    "text": "System paste interfaces that the users interact with ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=673"
  },
  {
    "text": "provide implicit access to the pasteboard ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=676"
  },
  {
    "text": "and will avoid the alert.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=679"
  },
  {
    "text": "If you have custom paste controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=683"
  },
  {
    "text": "you can replace them with the new UIPasteControl ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=686"
  },
  {
    "text": "that looks and behaves like a filled UIButton.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=690"
  },
  {
    "text": "It is enabled whenever the pasteboard gets content compatible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=694"
  },
  {
    "text": "with the control's paste target.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=699"
  },
  {
    "text": "So those are the new powerful UICalendarView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=703"
  },
  {
    "text": "the improved UIPageControl, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=707"
  },
  {
    "text": "as well as the security-oriented UIPasteControl. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=709"
  },
  {
    "text": "Go ahead and try them out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=713"
  },
  {
    "text": "Now I'll walk you through some API refinements we've made.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=717"
  },
  {
    "text": "In iOS 15, detents were added to sheets ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=723"
  },
  {
    "text": "which enabled building flexible and dynamic UIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=727"
  },
  {
    "text": "In iOS 16, we added support for custom detents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=731"
  },
  {
    "text": "so you can make sheets any size.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=736"
  },
  {
    "text": "To take advantage of this feature, use the new \".custom\" detent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=741"
  },
  {
    "text": "and specify the sheet's height in points in an associated block. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=746"
  },
  {
    "text": "You can return a constant value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=751"
  },
  {
    "text": "or a percentage of the maximum detent height.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=755"
  },
  {
    "text": "And you can also give your custom detent an identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=762"
  },
  {
    "text": "if you need to refer to it from other APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=767"
  },
  {
    "text": "for example, to disable dimming above your custom detent.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=770"
  },
  {
    "text": "Note that the value you return from the custom block ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=777"
  },
  {
    "text": "shouldn't account for the bottom safe area inset. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=781"
  },
  {
    "text": "This is so the same calculation works for both floating and edge-attached sheets.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=785"
  },
  {
    "text": "To learn more about customizing sheets with system detents and other options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=793"
  },
  {
    "text": "watch the Customize and resize sheets in UIKit video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=799"
  },
  {
    "text": "The sample code for that video has also been updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=804"
  },
  {
    "text": "to show these new custom detent APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=808"
  },
  {
    "text": "There are new features for SF Symbols in UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=813"
  },
  {
    "text": "Symbols support four rendering modes: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=818"
  },
  {
    "text": "monochrome, multicolor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=821"
  },
  {
    "text": "hierarchical, and palette. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=824"
  },
  {
    "text": "UIKit would use monochrome rendering by default ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=827"
  },
  {
    "text": "unless the symbol was configured with a different rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=831"
  },
  {
    "text": "In iOS 16, UIKit may render individual symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=835"
  },
  {
    "text": "with a mode other than monochrome ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=839"
  },
  {
    "text": "if no rendering mode is specified.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=842"
  },
  {
    "text": "Take these device symbols, for example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=847"
  },
  {
    "text": "In iOS 15 and earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=850"
  },
  {
    "text": "these symbols use monochrome rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=853"
  },
  {
    "text": "if no rendering mode is specified.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=856"
  },
  {
    "text": "In iOS 16, these symbols instead default to hierarchical rendering.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=860"
  },
  {
    "text": "Generally, a symbol's default rendering mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=866"
  },
  {
    "text": "is the preferred way to display the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=869"
  },
  {
    "text": "So in this case, you should allow the default hierarchical rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=873"
  },
  {
    "text": "to take effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=878"
  },
  {
    "text": "However, monochrome rendering can be explicitly requested ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=880"
  },
  {
    "text": "with the new UIImage.SymbolConfiguration. preferringMonochrome() API.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=885"
  },
  {
    "text": "UIKit added support for variable symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=895"
  },
  {
    "text": "which allows apps to display variations of a symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=898"
  },
  {
    "text": "based on a value from 0 to 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=902"
  },
  {
    "text": "Suppose an app wants to depict the current volume level with a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=906"
  },
  {
    "text": "The app can use the speaker.3.wave.fill symbol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=911"
  },
  {
    "text": "which has been updated to support variable rendering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=915"
  },
  {
    "text": "At a value of 0, the speaker waves are faded out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=920"
  },
  {
    "text": "indicating the lowest volume level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=924"
  },
  {
    "text": "As the value increases up to 1, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=927"
  },
  {
    "text": "the speaker waves progressively fill in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=930"
  },
  {
    "text": "indicating higher volume levels.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=933"
  },
  {
    "text": "If a symbol supports variable rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=937"
  },
  {
    "text": "then apps can request a version of the symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=940"
  },
  {
    "text": "reflecting a value between 0 and 1.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=943"
  },
  {
    "text": "Using variable symbols is straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=948"
  },
  {
    "text": "You can get the regular non-variable version of a symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=953"
  },
  {
    "text": "with the standard SF Symbols API on UIImage.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=957"
  },
  {
    "text": "To get a version of that symbol with a particular variable value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=963"
  },
  {
    "text": "simply add the variableValue parameter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=967"
  },
  {
    "text": "You can even mix variable rendering with other rendering modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=972"
  },
  {
    "text": "such as palette, to further style the symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=975"
  },
  {
    "text": "Many system symbols now support variable rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=980"
  },
  {
    "text": "and apps can update their custom symbols to support variability as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=985"
  },
  {
    "text": "To learn how to create custom variable symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=992"
  },
  {
    "text": "check out the sessions \"Adopt variable color in SF Symbols\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=995"
  },
  {
    "text": "and \"What's new in SF Symbols 4”.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1000"
  },
  {
    "text": "We've modernized UIKit to work with new Swift Concurrency features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1005"
  },
  {
    "text": "including making immutable types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1009"
  },
  {
    "text": "such as UIImage and UIColor conform to Sendable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1012"
  },
  {
    "text": "so you can send them between the MainActor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1016"
  },
  {
    "text": "and custom actors without compiler warning.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1019"
  },
  {
    "text": "For example, here we have a custom actor called Processor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1023"
  },
  {
    "text": "and a view controller called ImageViewer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1029"
  },
  {
    "text": "which is bound to the MainActor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1032"
  },
  {
    "text": "In the method sendImageForProcessing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1036"
  },
  {
    "text": "the ImageViewer sends an image to the Processor actor for processing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1038"
  },
  {
    "text": "to make it fancy like adding glitter and rainbows to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1044"
  },
  {
    "text": "This is safe because UIImage is immutable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1048"
  },
  {
    "text": "so Processor has to make new copy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1052"
  },
  {
    "text": "to add the rainbows and glitter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1054"
  },
  {
    "text": "Any code that has a reference to the original image ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1058"
  },
  {
    "text": "doesn't show these modifications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1061"
  },
  {
    "text": "and a shared state is not unsafely mutated.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1064"
  },
  {
    "text": "Contrast this with UIBezierPath, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1069"
  },
  {
    "text": "which is not Sendable because it is mutable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1073"
  },
  {
    "text": "How cool is it that something that could previously only be expressed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1077"
  },
  {
    "text": "in documentation can now be checked by the compiler? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1082"
  },
  {
    "text": "To learn more about Sendable and Swift Concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1089"
  },
  {
    "text": "check out \"Eliminate data races using Swift Concurrency\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1092"
  },
  {
    "text": "and \"Visualize and optimize Swift Concurrency\" videos.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1097"
  },
  {
    "text": "iOS 16 features new powerful support for external displays. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1105"
  },
  {
    "text": "The great news is that you don't have to update your app to take advantage of this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1111"
  },
  {
    "text": "unless you are using old UIScreen APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1116"
  },
  {
    "text": "You can no longer assume your app is on the main screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1121"
  },
  {
    "text": "Instead, defer to more specific APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1126"
  },
  {
    "text": "like trait collection and UIScene APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1129"
  },
  {
    "text": "to get the information you need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1133"
  },
  {
    "text": "If your app is still not using UIScene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1135"
  },
  {
    "text": "there's now even more reason to upgrade and to support multiple windows.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1138"
  },
  {
    "text": "Self-sizing cells in UICollectionView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1145"
  },
  {
    "text": "and UITableView got a major upgrade. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1148"
  },
  {
    "text": "Now cells are also self-resizing! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1152"
  },
  {
    "text": "In iOS 16, when the content inside a visible cell changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1156"
  },
  {
    "text": "the cell will automatically be resized to fit the new content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1161"
  },
  {
    "text": "This new behavior is enabled by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1168"
  },
  {
    "text": "and UICollectionView and UITableView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1171"
  },
  {
    "text": "each have a new selfSizingInvalidation property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1174"
  },
  {
    "text": "that gives you control over this new functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1178"
  },
  {
    "text": "Here is how it works: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1183"
  },
  {
    "text": "When selfSizingInvalidation is enabled, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1186"
  },
  {
    "text": "cells can request to be resized ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1189"
  },
  {
    "text": "by their containing collection or table view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1192"
  },
  {
    "text": "If you're using UIListContentConfiguration to configure cells, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1196"
  },
  {
    "text": "the invalidation happens automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1201"
  },
  {
    "text": "whenever the cell's configuration changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1204"
  },
  {
    "text": "For any other cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1208"
  },
  {
    "text": "you can call the invalidateIntrinsicContentSize method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1211"
  },
  {
    "text": "on the cell or its contentView to resize the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1214"
  },
  {
    "text": "By default, cells will be resized with animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1220"
  },
  {
    "text": "but you can wrap the call to invalidateIntrinsicContentSize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1224"
  },
  {
    "text": "inside performWithoutAnimation to resize without animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1228"
  },
  {
    "text": "UICollectionView and UITableView intelligently coalesce ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1233"
  },
  {
    "text": "size invalidation from cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1238"
  },
  {
    "text": "into a single update performed at the optimal time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1240"
  },
  {
    "text": "If you're using Auto Layout in your cells, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1247"
  },
  {
    "text": "you can opt-in to an even more comprehensive behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1249"
  },
  {
    "text": "by choosing enabledIncludingConstraints. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1253"
  },
  {
    "text": "This means when a cell detects any auto layout changes inside its contentView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1257"
  },
  {
    "text": "it will automatically call invalidateIntrinsicContentSize on itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1263"
  },
  {
    "text": "so that the containing collection or table view can resize it if necessary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1268"
  },
  {
    "text": "This makes it incredibly easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1275"
  },
  {
    "text": "to have cells that automatically adjust their size ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1277"
  },
  {
    "text": "in response to content or layout updates.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1280"
  },
  {
    "text": "UIKit is powerful and flexible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1285"
  },
  {
    "text": "You can also take advantage of the expressiveness ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1288"
  },
  {
    "text": "of implementing UIs using SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1292"
  },
  {
    "text": "We've made it much easier to incorporate both frameworks in the same app.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1296"
  },
  {
    "text": "In iOS 16, there is an entirely new way to build cells for your collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1303"
  },
  {
    "text": "and table views using SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1310"
  },
  {
    "text": "This is made possible by a new content configuration type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1315"
  },
  {
    "text": "named UIHostingConfiguration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1319"
  },
  {
    "text": "With just one line of code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1323"
  },
  {
    "text": "you can start writing SwiftUI right inside your cells-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1325"
  },
  {
    "text": "no extra views or view controllers needed at all.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1330"
  },
  {
    "text": "Here is a simple custom cell written in SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1335"
  },
  {
    "text": "using UIHostingConfiguration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1339"
  },
  {
    "text": "It is extremely easily to build this cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1342"
  },
  {
    "text": "Not only is this a great way to start integrating SwiftUI into your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1347"
  },
  {
    "text": "the expressive nature of SwiftUI means there's never been a more powerful way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1353"
  },
  {
    "text": "to build custom cells in UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1359"
  },
  {
    "text": "There is a lot more to this topic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1363"
  },
  {
    "text": "so be sure to check out the video ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1366"
  },
  {
    "text": "\"Use SwiftUI with UIKit\" to learn more.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1369"
  },
  {
    "text": "There are a couple of small but important changes that you should be aware of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1376"
  },
  {
    "text": "To prevent users from being fingerprinted, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1382"
  },
  {
    "text": "UIDevice.name now reports the model name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1386"
  },
  {
    "text": "rather than the user's custom device name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1390"
  },
  {
    "text": "Using the customized name now requires getting an entitlement.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1394"
  },
  {
    "text": "Setting UIDevice.orientation is no longer supported. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1400"
  },
  {
    "text": "Instead, use UIViewController APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1404"
  },
  {
    "text": "such as preferredInterfaceOrientation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1408"
  },
  {
    "text": "to express the intended orientation of your interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1411"
  },
  {
    "text": "What's next? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1416"
  },
  {
    "text": "Compile your app using iOS 16 SDK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1418"
  },
  {
    "text": "Test out the new features such as text edit menus ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1423"
  },
  {
    "text": "and find and replace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1427"
  },
  {
    "text": "Adopt the new UIKit APIs to use new enhanced controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1430"
  },
  {
    "text": "and productivity features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1435"
  },
  {
    "text": "And experiment with the new exciting ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1437"
  },
  {
    "text": "to incorporate SwiftUI in your UIKit app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1440"
  },
  {
    "text": "Thank you. ♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10068/?time=1445"
  }
]