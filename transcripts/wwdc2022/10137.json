[
  {
    "text": "♪ Mellow instrumental hip-hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=3"
  },
  {
    "text": "Hello, I'm Donghao.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=10"
  },
  {
    "text": "In this session, we are going to learn more about how to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=11"
  },
  {
    "text": "great data visualizations with Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=14"
  },
  {
    "text": "In other words, we will raise the bar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=16"
  },
  {
    "text": "of what you can do with charts in your apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=18"
  },
  {
    "text": "A great data visualization makes your app more informative ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=21"
  },
  {
    "text": "and more engaging.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=25"
  },
  {
    "text": "In order to build a great chart in our apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=26"
  },
  {
    "text": "there are many things to consider.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=29"
  },
  {
    "text": "Of course, we would want our charts to faithfully ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=31"
  },
  {
    "text": "communicate the underlying data and be accessible for everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=33"
  },
  {
    "text": "But charts in an app don't live in a vacuum.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=38"
  },
  {
    "text": "They are part of the app's user interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=41"
  },
  {
    "text": "We have to support localization and OS features like Dark Mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=43"
  },
  {
    "text": "A chart has to have a proper layout that fits seamlessly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=47"
  },
  {
    "text": "into the rest of the UI; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=50"
  },
  {
    "text": "it should support Dynamic Type and device screen sizes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=52"
  },
  {
    "text": "We'll also want charts to work in all platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=57"
  },
  {
    "text": "and have great animation for the best look and feel.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=60"
  },
  {
    "text": "Swift Charts takes care of a lot of these basic features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=64"
  },
  {
    "text": "for you automatically, so you can focus more ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=66"
  },
  {
    "text": "on building the best charts to communicate your unique data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=69"
  },
  {
    "text": "and make it accessible for everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=72"
  },
  {
    "text": "Swift Charts achieves this by providing you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=75"
  },
  {
    "text": "with a declarative syntax that feels just like SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=77"
  },
  {
    "text": "You specify what you want in a chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=81"
  },
  {
    "text": "with a small amount of code, and Swift Charts will ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=83"
  },
  {
    "text": "automatically produce a great chart out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=86"
  },
  {
    "text": "Swift Charts also provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=90"
  },
  {
    "text": "a rich set of customization options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=91"
  },
  {
    "text": "so you can style the chart to match your unique application.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=93"
  },
  {
    "text": "This session is about giving you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=97"
  },
  {
    "text": "a deeper understanding of Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=98"
  },
  {
    "text": "We will start by covering the basic building blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=101"
  },
  {
    "text": "of the declarative syntax: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=103"
  },
  {
    "text": "marks and the composition of marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=105"
  },
  {
    "text": "Here are some examples where we use charts in Apple products.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=108"
  },
  {
    "text": "As you can see, there is a wide variety of data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=111"
  },
  {
    "text": "chart types, and styles.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=114"
  },
  {
    "text": "Instead of providing a prebuilt component ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=116"
  },
  {
    "text": "for each type of chart, Swift Charts is built ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=118"
  },
  {
    "text": "on the idea of creating charts by composition.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=121"
  },
  {
    "text": "It provides a small number of basic building blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=125"
  },
  {
    "text": "by combining them in different ways, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=128"
  },
  {
    "text": "you can create a wide range of charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=130"
  },
  {
    "text": "Let me show you how it works.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=133"
  },
  {
    "text": "To do that, I'll need an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=134"
  },
  {
    "text": "All of my teammates love pancakes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=137"
  },
  {
    "text": "so we are having an app to track orders for a food truck ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=139"
  },
  {
    "text": "selling various kinds of pancakes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=142"
  },
  {
    "text": "Here is a chart showing the number of pancakes delivered ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=144"
  },
  {
    "text": "over the last 30 days, broken down by style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=147"
  },
  {
    "text": "This is widely known as a bar chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=150"
  },
  {
    "text": "In Swift Charts, we consider each of the six blue rectangles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=153"
  },
  {
    "text": "a mark.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=157"
  },
  {
    "text": "A mark is a graphical element that represents data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=158"
  },
  {
    "text": "This is a bar mark showing the number of cachapas ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=163"
  },
  {
    "text": "sold over the last 30 days.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=165"
  },
  {
    "text": "In this chart we have six bar marks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=168"
  },
  {
    "text": "each showing a pancake style ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=171"
  },
  {
    "text": "and the corresponding sales number.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=173"
  },
  {
    "text": "Let's see how this is written in code.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=176"
  },
  {
    "text": "Here we have a SwiftUI view that includes a descriptive title ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=179"
  },
  {
    "text": "like \"Most Sold Style, Cachapa,\" and an empty chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=182"
  },
  {
    "text": "The chart type here is the top-level view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=186"
  },
  {
    "text": "that defines a single chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=188"
  },
  {
    "text": "You can add a chart in your SwiftUI application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=191"
  },
  {
    "text": "just like adding any other view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=193"
  },
  {
    "text": "For the rest of the talk, we'll focus on the chart part.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=196"
  },
  {
    "text": "You can add marks to a chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=199"
  },
  {
    "text": "Here we have a single BarMark showing cachapa ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=202"
  },
  {
    "text": "and its sales number.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=204"
  },
  {
    "text": "This makes a chart with a single bar mark.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=206"
  },
  {
    "text": "As shown in the screenshot, the chart fits nicely ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=209"
  },
  {
    "text": "into the rest of the user interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=211"
  },
  {
    "text": "and has a great default style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=213"
  },
  {
    "text": "For example, nicely rounded numbers in the X-axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=216"
  },
  {
    "text": "If you add another bar mark with different name and sales, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=220"
  },
  {
    "text": "you'll get a second bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=223"
  },
  {
    "text": "You can repeat this to add more bars.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=225"
  },
  {
    "text": "In a real app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=228"
  },
  {
    "text": "we'll probably generate these marks programmatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=229"
  },
  {
    "text": "You can do so by providing an array of structs or tuples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=231"
  },
  {
    "text": "to the chart, and use a ForEach ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=234"
  },
  {
    "text": "to create the bar marks with the values from each element.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=237"
  },
  {
    "text": "If ForEach is the only content in the chart, like in this case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=240"
  },
  {
    "text": "you can also put data in the chart directly.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=244"
  },
  {
    "text": "Many SwiftUI modifiers are available for marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=247"
  },
  {
    "text": "For example, you could set the color of the bars ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=250"
  },
  {
    "text": "with the .foregroundStyle modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=253"
  },
  {
    "text": "Here we are setting it to a named color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=255"
  },
  {
    "text": "which can be created in Xcode as a named asset.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=257"
  },
  {
    "text": "It's very important that the chart is accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=261"
  },
  {
    "text": "for everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=263"
  },
  {
    "text": "By default, the chart will be exposed to VoiceOver users ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=265"
  },
  {
    "text": "with automatically generated accessibility elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=268"
  },
  {
    "text": "You can customize these with the .accessibilityLabel ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=272"
  },
  {
    "text": "and .accessibilityValue modifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=275"
  },
  {
    "text": "Here for example, we set the label to the name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=277"
  },
  {
    "text": "of the pancake, and the value to the sales ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=280"
  },
  {
    "text": "with the suffix \"sold.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=283"
  },
  {
    "text": "As a result, we get a custom experience for VoiceOver users.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=285"
  },
  {
    "text": "VoiceOver: Cachapa, 916 sold. Injera, 850 sold.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=290"
  },
  {
    "text": "Crêpe, 802 sold.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=295"
  },
  {
    "text": "Donghao: Our app also tracks pancake deliveries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=299"
  },
  {
    "text": "over the days.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=301"
  },
  {
    "text": "Here, we have a view showing the number of pancakes sold ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=303"
  },
  {
    "text": "in the last 30 days.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=306"
  },
  {
    "text": "The chart gives a detailed view of each individual day.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=308"
  },
  {
    "text": "Let's see how to make this chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=312"
  },
  {
    "text": "Here, we have a data array with day and sales.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=314"
  },
  {
    "text": "The day is represented by a Date value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=317"
  },
  {
    "text": "at the start of the day.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=319"
  },
  {
    "text": "We visualize the data with bar marks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=321"
  },
  {
    "text": "where x shows day, and the unit parameter here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=323"
  },
  {
    "text": "means that the Date values represent the duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=326"
  },
  {
    "text": "of a calendar day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=328"
  },
  {
    "text": "and y shows the sales of the day.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=330"
  },
  {
    "text": "As you see on the right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=333"
  },
  {
    "text": "we get a bar chart showing sales over the days.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=335"
  },
  {
    "text": "Bar chart is not the only way to visualize this data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=338"
  },
  {
    "text": "Let's try a line chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=341"
  },
  {
    "text": "The only change we have to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=343"
  },
  {
    "text": "is to replace BarMark with LineMark.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=345"
  },
  {
    "text": "With a declarative syntax, it is very easy to switch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=348"
  },
  {
    "text": "between chart types in Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=350"
  },
  {
    "text": "The previous chart shows total sales over time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=354"
  },
  {
    "text": "But the food truck service has been operating in two cities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=357"
  },
  {
    "text": "and we would love to compare the sales between the two cities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=360"
  },
  {
    "text": "on each weekday, to help us decide where to go.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=363"
  },
  {
    "text": "The lines in this chart show the sales from Monday to Sunday.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=367"
  },
  {
    "text": "Each line represents a city.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=371"
  },
  {
    "text": "Let's see how this is built.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=373"
  },
  {
    "text": "Now suppose we have two cities' data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=376"
  },
  {
    "text": "defined here with an array of tuples, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=378"
  },
  {
    "text": "each contains city name and the sales of the weekdays.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=381"
  },
  {
    "text": "Then, we can wrap the line chart we had before ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=385"
  },
  {
    "text": "with a ForEach that loops over the series data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=388"
  },
  {
    "text": "In order to differentiate the two cities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=392"
  },
  {
    "text": "we use the .foregroundStyle(by:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=394"
  },
  {
    "text": "to style the two lines by the city name.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=396"
  },
  {
    "text": "As you can see, Swift Charts automatically picks two colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=399"
  },
  {
    "text": "for the two cities, color the lines, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=402"
  },
  {
    "text": "and then add a legend to indicate what each color means.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=405"
  },
  {
    "text": "The default colors are chosen to be system colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=408"
  },
  {
    "text": "that are easy to differentiate.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=411"
  },
  {
    "text": "To make the chart easier to read ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=414"
  },
  {
    "text": "for people with color blindness, we can add symbols to the lines ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=415"
  },
  {
    "text": "to further differentiate them.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=419"
  },
  {
    "text": "This can be done by adding the .symbol(by:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=421"
  },
  {
    "text": "with city as the data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=423"
  },
  {
    "text": "Finally, to make the lines look smoother, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=426"
  },
  {
    "text": "we can use a curve as the interpolation method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=428"
  },
  {
    "text": "for the lines.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=431"
  },
  {
    "text": "Even with the two series line chart, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=433"
  },
  {
    "text": "we can still go back to bar mark and see how it looks like.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=435"
  },
  {
    "text": "Changing the mark type to BarMark, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=439"
  },
  {
    "text": "and remove the modifiers that aren't relevant to bars, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=441"
  },
  {
    "text": "we get a stacked bar chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=444"
  },
  {
    "text": "The bars are automatically stacked ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=447"
  },
  {
    "text": "because we now have two bars for each month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=448"
  },
  {
    "text": "While the stacked bar chart is great for showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=451"
  },
  {
    "text": "the total sales value for the two cities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=453"
  },
  {
    "text": "it's not very good for comparing between the two cities.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=455"
  },
  {
    "text": "To make it easier to compare, we can turn this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=459"
  },
  {
    "text": "into a grouped bar chart with the .position(by:) modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=462"
  },
  {
    "text": "So far, we've seen bar marks and line marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=466"
  },
  {
    "text": "Swift Charts supports a couple of other mark types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=469"
  },
  {
    "text": "including point mark, area mark, rule mark, and rectangle mark.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=472"
  },
  {
    "text": "You can combine these marks to build more complex charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=477"
  },
  {
    "text": "Let's see an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=480"
  },
  {
    "text": "Let's start with a line chart showing the average daily sales ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=483"
  },
  {
    "text": "for each month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=486"
  },
  {
    "text": "While the average is useful, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=487"
  },
  {
    "text": "we also want to see the minimum and maximum daily sales ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=489"
  },
  {
    "text": "to get an idea of the more extreme values.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=491"
  },
  {
    "text": "Let's start by adding these values to the data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=495"
  },
  {
    "text": "We introduce daily min and daily max to each element ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=498"
  },
  {
    "text": "in the data array.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=501"
  },
  {
    "text": "We can then visualize the min and the max with an area mark, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=503"
  },
  {
    "text": "where x is showing month, and y starts at the daily min, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=506"
  },
  {
    "text": "and ends at the daily max.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=510"
  },
  {
    "text": "This way, we have a chart showing daily average values ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=512"
  },
  {
    "text": "with a line, and daily min and max values ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=514"
  },
  {
    "text": "with the area around the line.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=516"
  },
  {
    "text": "A line plus area isn't the only way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=519"
  },
  {
    "text": "to visualize this kind of data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=521"
  },
  {
    "text": "You can easily switch to other mark types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=523"
  },
  {
    "text": "to explore more design options.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=524"
  },
  {
    "text": "For example, here we are using a BarMark.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=527"
  },
  {
    "text": "However, the line doesn't seem to fit very well with the bars.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=529"
  },
  {
    "text": "Let's change the line mark to a RectangleMark, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=534"
  },
  {
    "text": "with a height of two points.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=536"
  },
  {
    "text": "This way, the rectangle mark creates horizontal lines ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=538"
  },
  {
    "text": "inside the bars showing the average value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=542"
  },
  {
    "text": "You can also adjust the width of these marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=545"
  },
  {
    "text": "Here, for example, we are setting width ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=548"
  },
  {
    "text": "to be with a ratio of .6 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=549"
  },
  {
    "text": "This means the width of the bars and rectangles ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=552"
  },
  {
    "text": "will be 60 percent of the width of a whole month, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=554"
  },
  {
    "text": "as you can see in the screenshot.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=557"
  },
  {
    "text": "Finally, we'd like to have an option ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=560"
  },
  {
    "text": "to show the average daily sales among all the months.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=562"
  },
  {
    "text": "To do so, we first set the foreground style ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=565"
  },
  {
    "text": "to a fade gray color to deemphasize them.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=567"
  },
  {
    "text": "Then, we add a rule mark outside the ForEach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=571"
  },
  {
    "text": "with y showing the average value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=573"
  },
  {
    "text": "This adds a horizontal rule.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=575"
  },
  {
    "text": "To make it clear that the rule is showing the yearly average, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=578"
  },
  {
    "text": "we can add an annotation to the rule ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=581"
  },
  {
    "text": "using the .annotation modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=583"
  },
  {
    "text": "This adds a text label at the top of the rule mark, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=585"
  },
  {
    "text": "with leading alignment.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=588"
  },
  {
    "text": "We've discussed a couple of examples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=590"
  },
  {
    "text": "of building charts by composition.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=592"
  },
  {
    "text": "There are many different ways to use and combine ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=594"
  },
  {
    "text": "these basic marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=596"
  },
  {
    "text": "Like a box plot, multi-series line chart, population pyramid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=598"
  },
  {
    "text": "range plot, stream graph, multi-series scatter plot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=603"
  },
  {
    "text": "heat map, or even a plot of a vector field.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=608"
  },
  {
    "text": "These are just some examples of the wide variety of charts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=612"
  },
  {
    "text": "you can build with Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=614"
  },
  {
    "text": "Let's dive into the next topic.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=617"
  },
  {
    "text": "Plotting data with mark properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=618"
  },
  {
    "text": "Swift Charts support three major types or data: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=621"
  },
  {
    "text": "quantitative, nominal, and temporal.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=624"
  },
  {
    "text": "Quantitative data is a numerical value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=628"
  },
  {
    "text": "such as the number of products sold, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=630"
  },
  {
    "text": "the temperature of a room, or the price of a stock.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=633"
  },
  {
    "text": "Swift Charts treats Swift numerical types such as ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=636"
  },
  {
    "text": "Int, Float, and Double as quantitative data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=639"
  },
  {
    "text": "Nominal data, or categorical data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=644"
  },
  {
    "text": "represent discrete categories or groups.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=646"
  },
  {
    "text": "For example, the name of a person, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=649"
  },
  {
    "text": "a continent, or the type of a product.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=651"
  },
  {
    "text": "You can use a string or a custom string-valued enum ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=655"
  },
  {
    "text": "as nominal data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=658"
  },
  {
    "text": "Temporal data represents a point or interval in time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=659"
  },
  {
    "text": "For example, the duration of a particular day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=663"
  },
  {
    "text": "or the exact time of a transaction.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=666"
  },
  {
    "text": "Swift Charts treats \"Date\" as temporal data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=669"
  },
  {
    "text": "A chart works by transforming abstract data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=672"
  },
  {
    "text": "like sales value, into the properties of marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=675"
  },
  {
    "text": "Let's take a look at BarMark, which can plot data with X, Y, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=678"
  },
  {
    "text": "and Foreground Style properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=682"
  },
  {
    "text": "In this example, we plot sales value, which is quantitative, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=685"
  },
  {
    "text": "with the x property, and name, which is nominal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=689"
  },
  {
    "text": "with the y property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=693"
  },
  {
    "text": "The resulting chart consists of horizontal bars, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=695"
  },
  {
    "text": "each showing Sales on X, and Name on Y.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=697"
  },
  {
    "text": "If we swap Name and Sales, such that Name is on X ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=701"
  },
  {
    "text": "and Sales is on Y, we get a vertical bar chart instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=705"
  },
  {
    "text": "As you can see, the BarMark's behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=710"
  },
  {
    "text": "depends on the data type plotted with its X and Y properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=712"
  },
  {
    "text": "The orientation of the bar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=716"
  },
  {
    "text": "depends on where the quantitative property is.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=718"
  },
  {
    "text": "Now, let's look at another chart with all three properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=721"
  },
  {
    "text": "used to plot data.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=723"
  },
  {
    "text": "Here we plot Weekday, which is temporal, with X, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=725"
  },
  {
    "text": "Sales with Y, and City with Foreground Style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=729"
  },
  {
    "text": "The resulting chart is a stacked bar chart, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=732"
  },
  {
    "text": "where X-axis shows Weekday, Y-axis shows Sales, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=735"
  },
  {
    "text": "and the bars are colored by city.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=738"
  },
  {
    "text": "Swift Charts has six mark types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=741"
  },
  {
    "text": "and six mark properties that you can plot data with.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=743"
  },
  {
    "text": "Remember that data can be of the three kinds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=746"
  },
  {
    "text": "so there is a vast array of possible combinations.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=749"
  },
  {
    "text": "This is what allows Swift Charts to support a wide range ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=753"
  },
  {
    "text": "of chart designs with a small number of basic building blocks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=755"
  },
  {
    "text": "When you plot data with a mark property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=760"
  },
  {
    "text": "for example, sales with Y, Swift Charts creates a mapping ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=762"
  },
  {
    "text": "that transforms the abstract data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=765"
  },
  {
    "text": "into a proper value of the property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=767"
  },
  {
    "text": "In this case, it will transform Sales value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=770"
  },
  {
    "text": "to Y coordinates in screen space.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=772"
  },
  {
    "text": "We use the term \"scale\" to refer to the mapping ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=775"
  },
  {
    "text": "from abstract data, like sales, to mark property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=777"
  },
  {
    "text": "like Y position.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=780"
  },
  {
    "text": "You can think of Scale as a function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=782"
  },
  {
    "text": "that takes data value and returns a property value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=784"
  },
  {
    "text": "For example, here is a yScale function that takes sales ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=787"
  },
  {
    "text": "and returns the Y position of the bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=791"
  },
  {
    "text": "The name \"scale\" comes from the fact ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=794"
  },
  {
    "text": "that for position properties, we often scale the input value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=796"
  },
  {
    "text": "by some factor to convert it to a reasonable screen coordinate.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=800"
  },
  {
    "text": "When you plot data with mark properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=804"
  },
  {
    "text": "a scale is created to transform the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=806"
  },
  {
    "text": "into the corresponding mark property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=808"
  },
  {
    "text": "For example, in this chart we have three scales, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=811"
  },
  {
    "text": "each transforming Weekday to X, Sales to Y, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=814"
  },
  {
    "text": "and City to Foreground Style, respectively.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=817"
  },
  {
    "text": "By default, Swift Charts infers the scales automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=821"
  },
  {
    "text": "from the data, so you get a nice chart out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=824"
  },
  {
    "text": "You can use the scale modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=828"
  },
  {
    "text": "to configure the scales in a chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=829"
  },
  {
    "text": "Let's take a look at a few examples.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=832"
  },
  {
    "text": "In this example, the Y scale is automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=834"
  },
  {
    "text": "inferred to be zero to 150.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=837"
  },
  {
    "text": "However, we'd like to fix the Y scale ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=840"
  },
  {
    "text": "so that no matter what the current sales looks like, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=842"
  },
  {
    "text": "we always have a consistent Y scale.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=845"
  },
  {
    "text": "Let's change it such that the Y scale ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=848"
  },
  {
    "text": "always starts at zero and ends at 200.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=850"
  },
  {
    "text": "To do so, we can use the .chartYScale modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=853"
  },
  {
    "text": "and set the domain of the scale to be zero to 200.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=856"
  },
  {
    "text": "Now, as you can see, the axis goes from zero to 200.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=861"
  },
  {
    "text": "Similarly, we can change how the two cities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=866"
  },
  {
    "text": "map to foreground style using ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=868"
  },
  {
    "text": "the .chartForegroundStyleScale modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=870"
  },
  {
    "text": "Now we have new colors for the two cities.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=873"
  },
  {
    "text": "Now we know how to compose marks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=876"
  },
  {
    "text": "and plot data with mark properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=878"
  },
  {
    "text": "Let's dive into more customization options ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=880"
  },
  {
    "text": "that Swift Charts provides.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=882"
  },
  {
    "text": "A chart consists of axes, possibly a legend, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=884"
  },
  {
    "text": "and a plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=887"
  },
  {
    "text": "Axes and legends help us interpret the chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=890"
  },
  {
    "text": "The plot area is the area between the two axes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=893"
  },
  {
    "text": "This is where we plot data with marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=896"
  },
  {
    "text": "All of these elements are customizable in Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=899"
  },
  {
    "text": "Let's first see a few examples ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=902"
  },
  {
    "text": "on how to customize axes and legends.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=904"
  },
  {
    "text": "Here is a chart showing total monthly sales.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=907"
  },
  {
    "text": "Without customization, Swift Charts generates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=910"
  },
  {
    "text": "a default axis that features nicely rounded values.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=912"
  },
  {
    "text": "Right now, the X-axis shows a label for every quarter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=916"
  },
  {
    "text": "Let's change it to show a label every month, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=920"
  },
  {
    "text": "and use a single-letter month label.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=922"
  },
  {
    "text": "We'll start by adding a .chartXAxis modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=924"
  },
  {
    "text": "to customize the X-axis, with AxisMarks as the content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=927"
  },
  {
    "text": "AxisMarks with no parameter recreates the default axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=932"
  },
  {
    "text": "Let's start by changing the axis values.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=937"
  },
  {
    "text": "Since we want to have regular calendar intervals, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=940"
  },
  {
    "text": "we can use stride(by:), similar to the stride function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=942"
  },
  {
    "text": "from the standard library.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=945"
  },
  {
    "text": "Now we have a label for each month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=948"
  },
  {
    "text": "However, the default labels feel too crowded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=950"
  },
  {
    "text": "as you see in the screenshot.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=952"
  },
  {
    "text": "Some labels get truncated ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=954"
  },
  {
    "text": "because we don't have enough space for them.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=955"
  },
  {
    "text": "Let's change the labels to use a single-letter format.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=958"
  },
  {
    "text": "To do so, let's build up the axis marks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=962"
  },
  {
    "text": "from the individual components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=964"
  },
  {
    "text": "including AxisGridLine, AxisTick, and AxisValueLabel.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=966"
  },
  {
    "text": "Let's set the format of the label to use narrow month names.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=970"
  },
  {
    "text": "Now we have one letter for each month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=974"
  },
  {
    "text": "The value parameter passed into the result builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=977"
  },
  {
    "text": "provides information about the current axis value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=980"
  },
  {
    "text": "You can use this to conditionally determine ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=983"
  },
  {
    "text": "the existence and style of axis marks.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=985"
  },
  {
    "text": "For example, here we have a condition that tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=988"
  },
  {
    "text": "whether the value as a date is the first quarter of a month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=990"
  },
  {
    "text": "If yes, we can highlight the first month of each quarter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=995"
  },
  {
    "text": "with a different foreground style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=997"
  },
  {
    "text": "If not, we only display a grid line, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1000"
  },
  {
    "text": "without tick and label.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1002"
  },
  {
    "text": "Since we are now showing quarters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1004"
  },
  {
    "text": "we can change the format to quarter style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1006"
  },
  {
    "text": "With the customizations we just did, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1009"
  },
  {
    "text": "we get a more unique X-axis showing quarter data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1011"
  },
  {
    "text": "with subgrid lines showing every month.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1015"
  },
  {
    "text": "In addition to values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1019"
  },
  {
    "text": "axis marks have other properties that allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1020"
  },
  {
    "text": "to configure the general appearance and style.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1022"
  },
  {
    "text": "Suppose we'd like to have the Y-axis appear ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1025"
  },
  {
    "text": "at the leading edge of the chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1027"
  },
  {
    "text": "instead of the default trailing edge, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1029"
  },
  {
    "text": "we can set the position parameter to leading ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1032"
  },
  {
    "text": "to move them to the leading edge.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1034"
  },
  {
    "text": "Swift Charts provides a default preset for the axis marks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1037"
  },
  {
    "text": "based on the axis and the type of data being visualized.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1040"
  },
  {
    "text": "You can override the default using the preset parameter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1044"
  },
  {
    "text": "For example, here we are using the .extended preset ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1047"
  },
  {
    "text": "for the Y-axis to help with visual alignment ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1049"
  },
  {
    "text": "with the rest of the user interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1052"
  },
  {
    "text": "In some charts, you may not want the axis to be visible.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1055"
  },
  {
    "text": "For example, the purpose of the top sales chart here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1059"
  },
  {
    "text": "is to give people a brief overview, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1061"
  },
  {
    "text": "so the axes aren't really necessary.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1064"
  },
  {
    "text": "You can pass in .hidden to the chart axis modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1067"
  },
  {
    "text": "to hide an axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1069"
  },
  {
    "text": "Legend configuration is similar to axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1071"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1074"
  },
  {
    "text": "in this chart that highlights the best day and location, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1075"
  },
  {
    "text": "we already use opacity to highlight the best city, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1078"
  },
  {
    "text": "so we can hide the automatically generated legend.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1081"
  },
  {
    "text": "To do so, we can add the .chartLegend modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1084"
  },
  {
    "text": "with .hidden as parameter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1087"
  },
  {
    "text": "Now let's talk about the plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1089"
  },
  {
    "text": "You can use the .chartPlotStyle modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1092"
  },
  {
    "text": "to configure the plot area of a chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1095"
  },
  {
    "text": "In the trailing closure, we will write a function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1097"
  },
  {
    "text": "that takes original plot area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1100"
  },
  {
    "text": "and returns a modified plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1101"
  },
  {
    "text": "Let's see a few examples.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1104"
  },
  {
    "text": "In some cases, we might want the plot area ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1107"
  },
  {
    "text": "to have an exact size or aspect ratio.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1109"
  },
  {
    "text": "For example, in this case, we want the plot area's height ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1112"
  },
  {
    "text": "to be driven by the number of categories in the chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1115"
  },
  {
    "text": "To achieve this, we can apply a .frame modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1118"
  },
  {
    "text": "to the plot area, and return the modified plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1121"
  },
  {
    "text": "This will set the height of the plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1125"
  },
  {
    "text": "We can also use modifiers to achieve a special visual effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1128"
  },
  {
    "text": "For example, in this Dark Mode chart, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1132"
  },
  {
    "text": "we use the .background modifier to add a pink background ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1134"
  },
  {
    "text": "with opacity of .2 to make the chart stand out a little bit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1137"
  },
  {
    "text": "And then add a 1-pt border with the same pink color.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1142"
  },
  {
    "text": "This creates a unique visual effect for the chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1145"
  },
  {
    "text": "Earlier in the session we mentioned scales, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1149"
  },
  {
    "text": "which are functions that map data values ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1151"
  },
  {
    "text": "to mark properties such as X and Y.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1153"
  },
  {
    "text": "Swift Charts provides a ChartProxy that allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1157"
  },
  {
    "text": "to access the X and Y scales in a chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1159"
  },
  {
    "text": "You can use the ChartProxy's position(for:) method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1163"
  },
  {
    "text": "to get the position for a given data value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1166"
  },
  {
    "text": "or use the value(at:) method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1169"
  },
  {
    "text": "to get the data value at a given position.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1171"
  },
  {
    "text": "This allows you to coordinate other views with the chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1174"
  },
  {
    "text": "Let's look at an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1178"
  },
  {
    "text": "We are going to build this interactive brushing view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1181"
  },
  {
    "text": "Here you can select an interval from the chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1183"
  },
  {
    "text": "with a drag gesture, and that interval ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1185"
  },
  {
    "text": "will then be used to filter the rows in the details view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1188"
  },
  {
    "text": "We can get a chart proxy object from the .chartOverlay ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1192"
  },
  {
    "text": "or .chartBackground modifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1194"
  },
  {
    "text": "These two modifiers are similar to SwiftUI's overlay ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1196"
  },
  {
    "text": "and background modifiers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1199"
  },
  {
    "text": "but they provide you with a chart proxy.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1200"
  },
  {
    "text": "To build this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1204"
  },
  {
    "text": "we'll start by defining the base chart just like before.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1205"
  },
  {
    "text": "We then add a .chartOverlay modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1209"
  },
  {
    "text": "that provides us with the chart proxy.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1210"
  },
  {
    "text": "Inside, we have a geometry reader that gives us access ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1213"
  },
  {
    "text": "to the geometry of the overlay view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1216"
  },
  {
    "text": "Then, we have a Rectangle view that is configured to respond ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1219"
  },
  {
    "text": "to SwiftUI's DragGesture.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1222"
  },
  {
    "text": "When the drag gesture happens, we first find the x coordinates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1225"
  },
  {
    "text": "of the start and the current locations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1228"
  },
  {
    "text": "inside the chart's plot area.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1230"
  },
  {
    "text": "This is done by subtracting the plot area's origin ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1232"
  },
  {
    "text": "from the locations provided by the gestures.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1235"
  },
  {
    "text": "Once we have these coordinates, we can then use the chart proxy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1239"
  },
  {
    "text": "to find the corresponding Date values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1242"
  },
  {
    "text": "and finally set it to a SwiftUI state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1245"
  },
  {
    "text": "that keeps track of the current date interval.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1247"
  },
  {
    "text": "With the range state, we can then define a rectangle mark ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1251"
  },
  {
    "text": "in the chart to visualize the currently selected date range.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1254"
  },
  {
    "text": "This state can also be used to control other parts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1258"
  },
  {
    "text": "of your application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1260"
  },
  {
    "text": "for example, to filter the contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1261"
  },
  {
    "text": "of the details view below the chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1263"
  },
  {
    "text": "This is a simple example ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1265"
  },
  {
    "text": "to illustrate how chart proxy works.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1266"
  },
  {
    "text": "You can use it to build many interesting features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1269"
  },
  {
    "text": "for example, this interactive chart ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1271"
  },
  {
    "text": "that shows the selected day and sales value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1273"
  },
  {
    "text": "with an overlay that looks like a lollipop.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1276"
  },
  {
    "text": "In this session, we have discussed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1279"
  },
  {
    "text": "how to create charts by composing marks; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1280"
  },
  {
    "text": "how to plot data with mark properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1283"
  },
  {
    "text": "and how to customize a chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1285"
  },
  {
    "text": "You can go to the design sessions to learn more ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1287"
  },
  {
    "text": "about how to design great app experiences with charts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1290"
  },
  {
    "text": "and how to design an effective chart.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1292"
  },
  {
    "text": "We think you will love building data visualizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1295"
  },
  {
    "text": "with Swift Charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1297"
  },
  {
    "text": "Thanks for watching.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1298"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10137/?time=1299"
  }
]