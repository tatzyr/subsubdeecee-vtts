[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=1"
  },
  {
    "text": "Conrad: I'm Conrad Carlen, and today, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=9"
  },
  {
    "text": "I'll be talking about what's new in PDFKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=11"
  },
  {
    "text": "Here's our agenda. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=14"
  },
  {
    "text": "First a quick review of PDFKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=15"
  },
  {
    "text": "and then, look at what's new, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=19"
  },
  {
    "text": "including Live text and forms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=21"
  },
  {
    "text": "a new way to make PDF pages from images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=24"
  },
  {
    "text": "and, finally, overlay views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=27"
  },
  {
    "text": "Let's start with a quick refresher on how PDFKit works.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=30"
  },
  {
    "text": "PDFKit is a full-featured framework that helps your app view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=34"
  },
  {
    "text": "edit, and write PDF files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=38"
  },
  {
    "text": "It's available on iOS, macOS, and Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=41"
  },
  {
    "text": "and it can also be used in SwiftUI by way of UIViewRepresentable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=45"
  },
  {
    "text": "a wrapper that lets you integrate UI views into your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=49"
  },
  {
    "text": "PDFKit consists of 4 core classes that cover most of the functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=54"
  },
  {
    "text": "you'll need in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=58"
  },
  {
    "text": "PDFView is the widget that you include in your layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=60"
  },
  {
    "text": "using SwiftUI or Interface Builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=63"
  },
  {
    "text": "It displays the content of a PDF document and lets people navigate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=65"
  },
  {
    "text": "set zoom level, and copy text to the Pasteboard.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=69"
  },
  {
    "text": "PDFDocument represents a PDF file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=73"
  },
  {
    "text": "It's not common to subclass PDFDocument, but you will always use one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=76"
  },
  {
    "text": "It's the root of the PDF object graph, or the trunk of the tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=80"
  },
  {
    "text": "You can't have a tree without one of these.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=84"
  },
  {
    "text": "Each document contains one or more PDFPage objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=88"
  },
  {
    "text": "Pages render content and store resources like fonts and images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=92"
  },
  {
    "text": "that are unique to that page.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=96"
  },
  {
    "text": "At the leaves of our object graph are PDFAnnotations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=98"
  },
  {
    "text": "These are optional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=102"
  },
  {
    "text": "Whereas the content of a PDFPage is not intended to be edited, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=103"
  },
  {
    "text": "annotations are interactive by nature and often editable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=106"
  },
  {
    "text": "Each of these objects will play a role in what I'll cover today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=110"
  },
  {
    "text": "To learn more about the fundamentals of PDFKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=113"
  },
  {
    "text": "check out the great presentation \"Introducing PDFKit\" in the link below.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=115"
  },
  {
    "text": "Now, let's talk about new features introduced in iOS 16 and macOS Ventura.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=121"
  },
  {
    "text": "PDFKit now supports Live Text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=128"
  },
  {
    "text": "It's different than in Photos, where the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=131"
  },
  {
    "text": "is often a small amount that you can tap to copy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=133"
  },
  {
    "text": "Unlike with photos, with a PDF, if you see text, it generally is text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=136"
  },
  {
    "text": "and people expect it to behave as such without doing anything special. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=141"
  },
  {
    "text": "Now, with Live Text, you can select and search ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=145"
  },
  {
    "text": "text in a PDF document like this one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=147"
  },
  {
    "text": "It's just a scanned bitmap, with no text at all.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=150"
  },
  {
    "text": "Of course, PDFs can have many pages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=154"
  },
  {
    "text": "You wouldn't want to grind through OCR on all the pages of a PDF document ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=156"
  },
  {
    "text": "when you open it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=160"
  },
  {
    "text": "so PDFKit does it on demand, as you interact with each page, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=161"
  },
  {
    "text": "if you interact with it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=165"
  },
  {
    "text": "OCR is done in place, so there's no need to make a copy of the document.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=167"
  },
  {
    "text": "And, if you choose to save text for the whole document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=172"
  },
  {
    "text": "there's an option to do so when saving.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=175"
  },
  {
    "text": "In addition to live text, PDFKit has improved form handling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=178"
  },
  {
    "text": "Documents that contain form fields are automatically recognized, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=182"
  },
  {
    "text": "even if they don't contain built-in text fields. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=185"
  },
  {
    "text": "You can tab through these text fields and enter text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=188"
  },
  {
    "text": "just like you would expect.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=191"
  },
  {
    "text": "Next, let's talk about a new API for creating PDF pages from images.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=194"
  },
  {
    "text": "In iOS 16 and macOS Ventura, there's a new, flexible API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=200"
  },
  {
    "text": "that lets your app create PDF pages using images as inputs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=204"
  },
  {
    "text": "Your app supplies images using CGImageRef. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=208"
  },
  {
    "text": "PDFKit takes the CGImageRef that you provide and compresses it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=212"
  },
  {
    "text": "using high-quality JPEG encoding.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=215"
  },
  {
    "text": "Because CGImageRef is a native data type in CoreGraphics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=218"
  },
  {
    "text": "additional conversions are unnecessary.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=221"
  },
  {
    "text": "There are several options that help you handle the most common cases.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=224"
  },
  {
    "text": "MediaBox specifies the size of the page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=229"
  },
  {
    "text": "You can choose to fit the image exactly, or choose a paper size, like Letter.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=232"
  },
  {
    "text": "Rotation lets you specify portrait or landscape orientation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=238"
  },
  {
    "text": "UpscaleIfSmaller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=243"
  },
  {
    "text": "By default, if the image is larger than the MediaBox, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=244"
  },
  {
    "text": "the image is downscaled to fit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=247"
  },
  {
    "text": "If UpscaleIfSmaller is specified, that still applies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=249"
  },
  {
    "text": "but, if the image is small, it will be upscaled to fill the page.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=252"
  },
  {
    "text": "And now, to answer a question that many of you have asked-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=258"
  },
  {
    "text": "\"How can I draw on PDF pages using PencilKit?\"-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=261"
  },
  {
    "text": "the answer is to use an overlay view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=264"
  },
  {
    "text": "In the past, the only way to do additional drawing on PDFs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=268"
  },
  {
    "text": "was to subclass PDFPage and override the drawing method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=271"
  },
  {
    "text": "or by using custom PDF annotations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=274"
  },
  {
    "text": "But starting in iOS 16 and macOS Ventura, it's now possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=277"
  },
  {
    "text": "to overlay your own view on top of each PDF page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=281"
  },
  {
    "text": "This allows your app to create live, fully interactive views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=284"
  },
  {
    "text": "that appear on top of PDF pages.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=288"
  },
  {
    "text": "Here are the 3 things you need to know about overlaying views.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=290"
  },
  {
    "text": "First, you'll use a new protocol to install your overlay view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=294"
  },
  {
    "text": "on a PDF page.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=298"
  },
  {
    "text": "When it comes time to save, you'll need to incorporate your content into the PDF.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=300"
  },
  {
    "text": "And, speaking of saving, we'll cover some best practices ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=306"
  },
  {
    "text": "when saving a PDF document.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=309"
  },
  {
    "text": "Installing overlay views on PDF Pages is straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=313"
  },
  {
    "text": "Because PDFs can contain hundreds, if not thousands, of pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=317"
  },
  {
    "text": "there's no way you want to create views for all of those pages when opening a PDF. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=321"
  },
  {
    "text": "And what if the user scrolls back and forth rapidly? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=325"
  },
  {
    "text": "How do you know when to create your views? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=328"
  },
  {
    "text": "Fortunately, PDFKit is already designed to intelligently prepare content ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=331"
  },
  {
    "text": "before people scroll pages into view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=335"
  },
  {
    "text": "So it knows best when to ask for an overlay view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=338"
  },
  {
    "text": "Your app just needs to respond to its requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=341"
  },
  {
    "text": "that are made through the new protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=343"
  },
  {
    "text": "PDFPageOverlayViewProvider is the new protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=347"
  },
  {
    "text": "By the way, PDFKitPlatformView is just a define of UIView or NSView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=351"
  },
  {
    "text": "depending on the platform. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=356"
  },
  {
    "text": "The most important method you need to implement is overlayViewForPage.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=359"
  },
  {
    "text": "Simply provide an instance of your view, and PDFKit will size it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=364"
  },
  {
    "text": "by applying the appropriate constraints. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=367"
  },
  {
    "text": "It will also rotate it if the page has a non-zero rotation.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=370"
  },
  {
    "text": "The next 2 methods are optional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=374"
  },
  {
    "text": "willDisplayOverlayView can be used to install your own gesture handlers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=376"
  },
  {
    "text": "or to set up failure relationships with those of PDFKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=380"
  },
  {
    "text": "willEndDisplayingOverlayView is called when PDFKit is done with your view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=385"
  },
  {
    "text": "likely because the page scrolled out of view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=390"
  },
  {
    "text": "You can release your view here, but there is another important use for this method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=392"
  },
  {
    "text": "Assuming your view has some data to represent what it's drawing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=397"
  },
  {
    "text": "you can use this method to get that data and set it aside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=401"
  },
  {
    "text": "We'll do that in our example with PencilKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=404"
  },
  {
    "text": "but, if your view data lives somewhere else, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=407"
  },
  {
    "text": "you won't need to implement this.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=410"
  },
  {
    "text": "In the example, this is the class we're using as the provider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=413"
  },
  {
    "text": "It implements the PDFPageOverlayViewProvider protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=417"
  },
  {
    "text": "This is iOS, so the PDFKitPlatformView is a UIView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=421"
  },
  {
    "text": "It uses a map to go from a PDFPage to a UIView.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=425"
  },
  {
    "text": "Here are the placeholder protocol methods. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=429"
  },
  {
    "text": "Next, lets look at the implementations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=432"
  },
  {
    "text": "overlayViewForPage checks its pageToView map ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=435"
  },
  {
    "text": "to see if it's already made a view for the given page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=438"
  },
  {
    "text": "If not, it creates a new view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=440"
  },
  {
    "text": "In either case, we get the drawing from the page ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=443"
  },
  {
    "text": "and set that on the canvas view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=445"
  },
  {
    "text": "In these examples, I'm using a subclass of PDFPage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=448"
  },
  {
    "text": "All it does is to add a \"drawing\" property.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=452"
  },
  {
    "text": "And now, let's focus on the next method: WillEndDisplayingOverlay.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=457"
  },
  {
    "text": "willEndDisplayingOverlayView is simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=464"
  },
  {
    "text": "It gets the drawing from the view and stores it on our custom page class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=466"
  },
  {
    "text": "Now that we've done that, let's see it in action.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=471"
  },
  {
    "text": "Normally, around this time off the year, I would be in Maine, fishing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=476"
  },
  {
    "text": "but instead, I'm here at WWDC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=479"
  },
  {
    "text": "so another person is taking my place on the trip, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=482"
  },
  {
    "text": "and I'm going to show him some of my favorite spots. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=484"
  },
  {
    "text": "I'll be doing that with this app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=487"
  },
  {
    "text": "which uses PencilKit in an overlay view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=489"
  },
  {
    "text": "This app consists of the code we just saw and little else. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=492"
  },
  {
    "text": "The entirety of the code to get overlay views onscreen is about 30 lines! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=496"
  },
  {
    "text": "So, Grand Lake Stream. This is the dam pool. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=501"
  },
  {
    "text": "There are always lots of fish in there. It's where most of the action is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=505"
  },
  {
    "text": "You can get to the dam pool ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=508"
  },
  {
    "text": "by taking this trail down through the woods and then fishing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=510"
  },
  {
    "text": "You can fish all of that stuff, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=513"
  },
  {
    "text": "or you can take this road, go over the dam, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=515"
  },
  {
    "text": "and down around through here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=520"
  },
  {
    "text": "From there, you can fish up into here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=521"
  },
  {
    "text": "go around the island, down into here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=523"
  },
  {
    "text": "but whatever you do, don't go past here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=526"
  },
  {
    "text": "The water gets deep and fast. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=529"
  },
  {
    "text": "Avoid that and come down here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=532"
  },
  {
    "text": "to the hatchery. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=536"
  },
  {
    "text": "Walk down beside the hatchery ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=538"
  },
  {
    "text": "and enter this pool here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=542"
  },
  {
    "text": "You can cast all around through here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=544"
  },
  {
    "text": "This is a great spot. I always catch fish here.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=546"
  },
  {
    "text": "All right, now that we have some marks on the page, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=550"
  },
  {
    "text": "let's exercise zooming and scrolling.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=554"
  },
  {
    "text": "See how responsive it is? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=557"
  },
  {
    "text": "And there we have it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=565"
  },
  {
    "text": "Overlay views in PDFKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=566"
  },
  {
    "text": "So, now that you have these sketches, how do you save them? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=568"
  },
  {
    "text": "We'll use the PDFAnnotation class to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=571"
  },
  {
    "text": "There are 2 things we want to achieve when saving: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=574"
  },
  {
    "text": "We want to match the onscreen appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=577"
  },
  {
    "text": "with high fidelity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=579"
  },
  {
    "text": "and we want to do round-trip editing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=580"
  },
  {
    "text": "PDF annotations have some features that will facilitate this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=583"
  },
  {
    "text": "PDF annotations can have an \"appearance stream,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=587"
  },
  {
    "text": "which is a stream of PDF drawing commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=589"
  },
  {
    "text": "Nearly anything that you can draw using Quartz2D ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=592"
  },
  {
    "text": "can be recorded in an appearance stream. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=595"
  },
  {
    "text": "Anything else can be rendered into an image, and that can be recorded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=597"
  },
  {
    "text": "That's how we do it if we're using Metal.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=602"
  },
  {
    "text": "And, since it's recorded as PDF drawing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=604"
  },
  {
    "text": "it will look identical in Adobe Reader, Chrome, etc.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=607"
  },
  {
    "text": "PDF annotations are stored as dictionaries in a PDF document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=611"
  },
  {
    "text": "That means we can also store custom data in private key/value pairs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=614"
  },
  {
    "text": "So let's see what the code looks like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=619"
  },
  {
    "text": "Start by creating a subclass of PDFAnnotation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=622"
  },
  {
    "text": "We do this in order to override the draw() method.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=626"
  },
  {
    "text": "PDFKit will call this method when it saves the appearance stream ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=629"
  },
  {
    "text": "that I mentioned on the last slide.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=632"
  },
  {
    "text": "To save our document, we override UIDocument's contents(). ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=636"
  },
  {
    "text": "Here is an overview of the function, for context later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=639"
  },
  {
    "text": "We loop through all pages of the PDFDocument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=643"
  },
  {
    "text": "We'll flesh out the loop next.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=647"
  },
  {
    "text": "We do the following for each page: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=651"
  },
  {
    "text": "create an annotation of our custom class; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=653"
  },
  {
    "text": "encode our drawing into data; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=657"
  },
  {
    "text": "add the data to our annotation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=660"
  },
  {
    "text": "Next time, when we open this document, we can use value:forAnnotationKey ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=662"
  },
  {
    "text": "to read back the stored drawing data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=666"
  },
  {
    "text": "and put that into our overlay view.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=668"
  },
  {
    "text": "Finally, add the annotation to the page.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=671"
  },
  {
    "text": "Back to our contents() override. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=675"
  },
  {
    "text": "Now that we have added annotations to our pages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=676"
  },
  {
    "text": "We use PDFDocument's dataRepresentation() and return the result.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=680"
  },
  {
    "text": "When your content is saved as an annotation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=686"
  },
  {
    "text": "a recipient of the document can move it, resize it, or delete it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=688"
  },
  {
    "text": "Often, that's what you want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=691"
  },
  {
    "text": "But sometimes, you want your annotations to be \"burned in,\" as part of the page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=693"
  },
  {
    "text": "There is a new PDFDocumentWriteOption in iOS 16 and macOS Ventura ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=698"
  },
  {
    "text": "that makes this easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=703"
  },
  {
    "text": "Just add burnInAnnotationsOption = true ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=704"
  },
  {
    "text": "to the save options, and that does it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=707"
  },
  {
    "text": "Speaking of PDF writing options, there are a few ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=710"
  },
  {
    "text": "that have been made available in iOS 16 and macOS Ventura. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=712"
  },
  {
    "text": "Let's look at them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=716"
  },
  {
    "text": "CoreGraphics has always strived to save images in PDFs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=718"
  },
  {
    "text": "with maximum fidelity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=721"
  },
  {
    "text": "so images are saved at full resolution, with lossless compression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=723"
  },
  {
    "text": "That's great if the PDF will be printed on a large-format printer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=727"
  },
  {
    "text": "More likely, though, it will be displayed on screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=730"
  },
  {
    "text": "and all of that high-fidelity image data will result in a file that's very large. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=733"
  },
  {
    "text": "To address that, I introduce the next two options.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=738"
  },
  {
    "text": "saveAllImagesAsJPEG does just what it says. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=741"
  },
  {
    "text": "No matter how the image was created, it will be saved ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=745"
  },
  {
    "text": "with JPEG encoding in the PDF.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=748"
  },
  {
    "text": "optimizeImagesForScreen will downsample images ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=751"
  },
  {
    "text": "to a maximum of HiDPI screen resolution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=754"
  },
  {
    "text": "These two options may be used together.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=757"
  },
  {
    "text": "createLinearizedPDF will create a special kind of PDF ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=761"
  },
  {
    "text": "that's optimized for the internet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=764"
  },
  {
    "text": "The PDF format, as originally designed right before the Internet came along, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=766"
  },
  {
    "text": "is read from the end of the file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=771"
  },
  {
    "text": "That means the entirety of it needs to be downloaded first ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=773"
  },
  {
    "text": "before anything is displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=775"
  },
  {
    "text": "A linearized PDF has everything needed to display the first page ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=777"
  },
  {
    "text": "at the beginning of the file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=781"
  },
  {
    "text": "so a web browser can show that quickly ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=783"
  },
  {
    "text": "while the rest of it is loaded.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=785"
  },
  {
    "text": "You can pass these options to PDFDocument's dataRepresentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=788"
  },
  {
    "text": "or writeToURL methods. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=792"
  },
  {
    "text": "And there we have it. PDFKit is powerful, yet easy to use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=794"
  },
  {
    "text": "used by many of your apps today on iOS and macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=798"
  },
  {
    "text": "and now with new features for iOS 16 and macOS Ventura. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=801"
  },
  {
    "text": "I'm stoked to see what you do with them! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=805"
  },
  {
    "text": "To learn more, check out the sessions below ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=808"
  },
  {
    "text": "for additional information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=810"
  },
  {
    "text": "Thank you for watching! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=812"
  },
  {
    "text": "",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10089/?time=813"
  }
]