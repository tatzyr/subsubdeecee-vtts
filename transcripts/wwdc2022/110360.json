[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=0"
  },
  {
    "text": "Hello! My name is Tom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=9"
  },
  {
    "text": "and I'm part of the Swift team at Apple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=11"
  },
  {
    "text": "Today I'd like to share what it takes to extend an iOS application into the cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=13"
  },
  {
    "text": "Many of our applications start out focusing on a single device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=18"
  },
  {
    "text": "usually the iPhone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=22"
  },
  {
    "text": "As usage grows, we find ourselves wanting to bring it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=24"
  },
  {
    "text": "to additional devices like the Mac, the watch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=27"
  },
  {
    "text": "or other Apple platforms and devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=30"
  },
  {
    "text": "Xcode helps us organize and build our application for these platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=33"
  },
  {
    "text": "We can share code using packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=38"
  },
  {
    "text": "while embracing the unique aspects of each device ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=40"
  },
  {
    "text": "in the platform specific application code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=43"
  },
  {
    "text": "As systems continue to grow and evolve, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=47"
  },
  {
    "text": "applications often need to complement the client application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=49"
  },
  {
    "text": "with a server component. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=52"
  },
  {
    "text": "These server components enable the client application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=54"
  },
  {
    "text": "to extend their functionality into the cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=57"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=59"
  },
  {
    "text": "offload tasks that can be done in the background, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=61"
  },
  {
    "text": "offload tasks that are computational heavy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=64"
  },
  {
    "text": "or tasks that require access to data that is not available on the device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=66"
  },
  {
    "text": "Often, server components need to be built ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=71"
  },
  {
    "text": "using different tools and methodologies from their client counterparts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=74"
  },
  {
    "text": "creating duplication of effort and integration challenges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=78"
  },
  {
    "text": "Using Swift for building server components ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=81"
  },
  {
    "text": "help bridge this technology gap, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=84"
  },
  {
    "text": "providing a familiar environment across the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=86"
  },
  {
    "text": "Let's see what building a server application in Swift looks like.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=90"
  },
  {
    "text": "Server applications are modeled as Swift packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=94"
  },
  {
    "text": "The package defines an executable target ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=98"
  },
  {
    "text": "that maps the application entry point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=100"
  },
  {
    "text": "To make the application into a web application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=103"
  },
  {
    "text": "we can add a dependency on a web framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=107"
  },
  {
    "text": "that helps us structure our code and provides basic utilities like routing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=109"
  },
  {
    "text": "In this example, we use the Vapor web framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=114"
  },
  {
    "text": "an open source community project popular for building web services.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=117"
  },
  {
    "text": "As with other Swift based executables, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=123"
  },
  {
    "text": "the program's entry point is best modeled using the @main annotation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=125"
  },
  {
    "text": "To integrate the web framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=130"
  },
  {
    "text": "we add the relevant bootstrap code to the main function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=132"
  },
  {
    "text": "The Application type used in this example is provided by the Vapor web framework. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=135"
  },
  {
    "text": "With the basic bootstrapping in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=141"
  },
  {
    "text": "we can make our application do something useful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=143"
  },
  {
    "text": "For example, let's add code to greet users making a request to the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=146"
  },
  {
    "text": "We use the web framework to define an HTTP endpoint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=151"
  },
  {
    "text": "and point it to a method that provides the greeting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=155"
  },
  {
    "text": "Taking a step further, we add a second HTTP endpoint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=158"
  },
  {
    "text": "this one handling an HTTP post request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=162"
  },
  {
    "text": "and echoing the content of the request body back to the caller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=166"
  },
  {
    "text": "Let's see this in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=170"
  },
  {
    "text": "Here we have our server application in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=172"
  },
  {
    "text": "Since we're just getting started, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=175"
  },
  {
    "text": "we can run the server locally on our own machine to test things out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=177"
  },
  {
    "text": "To run it locally, we pick the \"MyServer\" scheme ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=181"
  },
  {
    "text": "that was generated for us by Xcode, use the “My Mac\" as the destination, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=183"
  },
  {
    "text": "and hit \"run\".",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=187"
  },
  {
    "text": "Once the application has launched, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=197"
  },
  {
    "text": "we can use Xcode console to examine log messages emitted by the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=198"
  },
  {
    "text": "In this case, we can see that the server started ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=203"
  },
  {
    "text": "and listening on the localhost address (127.0.0.1) port 8080. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=205"
  },
  {
    "text": "We can use this information to test our server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=211"
  },
  {
    "text": "Let's switch over to the terminal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=214"
  },
  {
    "text": "and make a request to the advertised server address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=215"
  },
  {
    "text": "We use a utility called \"curl\" to make the request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=219"
  },
  {
    "text": "Use our first endpoint.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=223"
  },
  {
    "text": "And our second one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=228"
  },
  {
    "text": "Pass in some data to echo.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=231"
  },
  {
    "text": "Nice! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=239"
  },
  {
    "text": "Using the terminal sure was fun, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=241"
  },
  {
    "text": "but what we really want to know is how to call our server from an iOS app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=243"
  },
  {
    "text": "Let's dig into that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=248"
  },
  {
    "text": "Here is an example of a Swift data structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=249"
  },
  {
    "text": "we can use to abstract the interaction with the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=252"
  },
  {
    "text": "We model the server APIs as async methods on our abstraction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=255"
  },
  {
    "text": "because networking is inherently asynchronous. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=260"
  },
  {
    "text": "We use URLSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=263"
  },
  {
    "text": "to make an asynchronous request ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=265"
  },
  {
    "text": "then parse the server response and finally return it to the caller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=267"
  },
  {
    "text": "In this case, the server response is a plain string, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=272"
  },
  {
    "text": "but in reality, it is likely to be more sophisticated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=275"
  },
  {
    "text": "For example, the response may be encoded in JSON, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=279"
  },
  {
    "text": "in which case we can decode it using Swift's Codable system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=283"
  },
  {
    "text": "Let's put this all together in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=287"
  },
  {
    "text": "We are using an Xcode workspace to build and test ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=290"
  },
  {
    "text": "the iOS and server applications side by side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=292"
  },
  {
    "text": "We already have the iOS application server abstraction ready to go. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=296"
  },
  {
    "text": "Let's change the default SwiftUI ContentView to fetch the server greeting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=300"
  },
  {
    "text": "using the code we put together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=304"
  },
  {
    "text": "First we create a state variable called serverGreeting.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=307"
  },
  {
    "text": "Next, we bind the serverGreeting to the Text display.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=313"
  },
  {
    "text": "Finally, we add a task to call the server API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=321"
  },
  {
    "text": "and set the state.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=324"
  },
  {
    "text": "With the code ready, we can run the application in the simulator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=327"
  },
  {
    "text": "We pick the \"MyApp\" scheme, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=331"
  },
  {
    "text": "a simulator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=334"
  },
  {
    "text": "and hit \"run\".",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=338"
  },
  {
    "text": "Oh, no! We got an error! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=342"
  },
  {
    "text": "Hmm, this seems to be some sort of a connection error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=344"
  },
  {
    "text": "The address seems right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=348"
  },
  {
    "text": "so we must have forgotten to start the local server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=349"
  },
  {
    "text": "Let's switch back to Xcode, pick the server scheme, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=352"
  },
  {
    "text": "and run the server.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=355"
  },
  {
    "text": "Now, let's restart our application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=367"
  },
  {
    "text": "cross our fingers...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=371"
  },
  {
    "text": "And whoo-hoo! It worked! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=374"
  },
  {
    "text": "To complete this part of the demo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=376"
  },
  {
    "text": "let's deploy our application to the cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=378"
  },
  {
    "text": "There are many cloud providers to choose from, including AWS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=381"
  },
  {
    "text": "Google Cloud, Azure, Heroku, and many others. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=384"
  },
  {
    "text": "In this example, we will use Heroku. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=388"
  },
  {
    "text": "Heroku has a convenient git push to deploy system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=391"
  },
  {
    "text": "for small projects like this demo application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=394"
  },
  {
    "text": "Let's switch over to the terminal to kick off a deployment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=396"
  },
  {
    "text": "After setting up our account, and configuring our application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=399"
  },
  {
    "text": "with the Heroku service, we can git push our code to the Heroku remote.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=402"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=408"
  },
  {
    "text": "And off it goes! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=421"
  },
  {
    "text": "Heroku uses a technology called buildpacks to compile the application remotely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=422"
  },
  {
    "text": "then deploys the binary artifacts to an ephemeral host. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=427"
  },
  {
    "text": "Heroku swift buildpack was built by members ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=431"
  },
  {
    "text": "of the Swift open source community, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=433"
  },
  {
    "text": "and it is available for all Swift on Server users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=435"
  },
  {
    "text": "With our application deployed, we can test it using curl, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=439"
  },
  {
    "text": "as we have done with our local server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=441"
  },
  {
    "text": "Let's test the first endpoint.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=444"
  },
  {
    "text": "Copy the address here.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=448"
  },
  {
    "text": "And our second one.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=457"
  },
  {
    "text": "This time, we'll send a different payload.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=462"
  },
  {
    "text": "Sweet, our application was successfully deployed! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=471"
  },
  {
    "text": "Before we continue, let's pause here and review the main takeaways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=475"
  },
  {
    "text": "from this part of the talk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=478"
  },
  {
    "text": "If you're already using Swift to build iOS or macOS Applications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=480"
  },
  {
    "text": "you could also be using it for developing the server side of the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=484"
  },
  {
    "text": "Xcode helps us develop and debug the different components of the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=488"
  },
  {
    "text": "both the client and the server, all in one Workspace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=492"
  },
  {
    "text": "And finally, you have a choice of cloud providers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=495"
  },
  {
    "text": "for deploying Swift based server applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=498"
  },
  {
    "text": "Additional information about deploying to these cloud platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=500"
  },
  {
    "text": "can be found on the Swift Server documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=503"
  },
  {
    "text": "at swift.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=506"
  },
  {
    "text": "Now that we have seen a basic setup, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=508"
  },
  {
    "text": "let's look at a more real example– Food Truck! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=510"
  },
  {
    "text": "You've probably seen this application used in many of our sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=513"
  },
  {
    "text": "Let's peek under the hood and see how data is managed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=516"
  },
  {
    "text": "Hmm, looks like the donut list is hard coded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=519"
  },
  {
    "text": "This means that users of the application may see a different menu of donuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=523"
  },
  {
    "text": "from what is actually available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=527"
  },
  {
    "text": "While this may be useful for a small Food Truck operation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=529"
  },
  {
    "text": "one that can make any kind of donut on the spot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=532"
  },
  {
    "text": "we want to build a donuts empire ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=535"
  },
  {
    "text": "where the menu is centralized and the trucks are all about customer service. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=537"
  },
  {
    "text": "Let's design how our centralized Food Truck system may look like.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=541"
  },
  {
    "text": "We are starting out with our iOS app, with its in-memory storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=546"
  },
  {
    "text": "To centralize the menu, we can extract the storage from the iOS app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=550"
  },
  {
    "text": "and move it to the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=554"
  },
  {
    "text": "This will allow all users of the app to share the same storage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=556"
  },
  {
    "text": "and thus, the same donuts menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=559"
  },
  {
    "text": "Similar to the example in the first part of the talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=562"
  },
  {
    "text": "our server will expose an HTTP based API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=565"
  },
  {
    "text": "The iOS app will use an abstraction for working with these APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=568"
  },
  {
    "text": "then tie them back together to the presentation tier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=572"
  },
  {
    "text": "in this example, SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=575"
  },
  {
    "text": "Our design is complete. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=578"
  },
  {
    "text": "Time to write some sweet code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=579"
  },
  {
    "text": "You can follow along by downloading the Food Truck sample app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=582"
  },
  {
    "text": "from the developer resource kit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=585"
  },
  {
    "text": "We start building our Server with an application skeleton, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=587"
  },
  {
    "text": "then define an HTTP endpoint for the \"donuts\" web API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=591"
  },
  {
    "text": "and point it to the \"listDonuts\" method on our server abstraction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=595"
  },
  {
    "text": "You may have noticed that the API returns a Response of type Donuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=599"
  },
  {
    "text": "and that Response.Donuts conforms to a protocol called Content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=603"
  },
  {
    "text": "The Content protocol is defined by the web framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=608"
  },
  {
    "text": "and helps us encode the response as JSON on the wire. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=611"
  },
  {
    "text": "You may have also noticed that the API includes an array ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=615"
  },
  {
    "text": "of a mysterious Model.Donut, which we have yet to define ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=618"
  },
  {
    "text": "So here it is, our data model in all of its glory: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=622"
  },
  {
    "text": "Donut, Dough, Glaze, and Topping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=625"
  },
  {
    "text": "One interesting point to make here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=629"
  },
  {
    "text": "is that we copied the definition of this model from our Food Truck iOS app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=630"
  },
  {
    "text": "as we need the data models of the server and the client to roughly align. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=635"
  },
  {
    "text": "Another interesting point is the conformance to the Encodable protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=639"
  },
  {
    "text": "This is required so that our server can encode the model objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=643"
  },
  {
    "text": "as JSON over the wire. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=646"
  },
  {
    "text": "With the data model and basic APIs in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=649"
  },
  {
    "text": "we can expand our logic to include a storage abstraction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=651"
  },
  {
    "text": "The storage will provide the Application with the list of available donuts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=654"
  },
  {
    "text": "At this point, we should have a fully functional server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=658"
  },
  {
    "text": "But wait! Our donuts menu is empty! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=661"
  },
  {
    "text": "Where should we get the our centralized menu from? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=664"
  },
  {
    "text": "Storage is always an interesting topic when designing server side applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=667"
  },
  {
    "text": "There are several strategies to choose from, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=672"
  },
  {
    "text": "depending on the use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=673"
  },
  {
    "text": "If the application data is static or changes very slowly and manually, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=676"
  },
  {
    "text": "files on disk may provide a good enough solution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=679"
  },
  {
    "text": "For user-centric data or global datasets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=683"
  },
  {
    "text": "iCloud provides a set of APIs that you can use directly from the iOS application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=685"
  },
  {
    "text": "without deploying a dedicated server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=689"
  },
  {
    "text": "When dealing with dynamic or transactional data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=692"
  },
  {
    "text": "databases provide an excellent solution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=694"
  },
  {
    "text": "There is a variety of database technologies available ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=697"
  },
  {
    "text": "for server-side applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=700"
  },
  {
    "text": "Each technology is designed for specific performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=702"
  },
  {
    "text": "data consistency, and data modeling needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=705"
  },
  {
    "text": "Over the years, the Swift open source community ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=708"
  },
  {
    "text": "developed database drivers that help interact natively ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=710"
  },
  {
    "text": "with most databases technologies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=713"
  },
  {
    "text": "Partial list includes Postgres, MySQL, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=715"
  },
  {
    "text": "MongoDB, Redis, DynamoDB, and many others. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=718"
  },
  {
    "text": "For the purposes of simplifying this demo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=723"
  },
  {
    "text": "we will only demonstrate a static file storage strategy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=725"
  },
  {
    "text": "but you can learn more about using databases ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=729"
  },
  {
    "text": "on the Swift Server documentation at swift.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=731"
  },
  {
    "text": "Since we are using a static file storage strategy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=734"
  },
  {
    "text": "we start off by creating a JSON file that captures the donut menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=737"
  },
  {
    "text": "After creating this file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=741"
  },
  {
    "text": "we can make it accessible to the application ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=743"
  },
  {
    "text": "using SwiftPM's resources support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=745"
  },
  {
    "text": "With that in place, it is time to make our storage abstraction more sophisticated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=748"
  },
  {
    "text": "Namely, we add a \"load\" method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=753"
  },
  {
    "text": "This method finds the resource file path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=756"
  },
  {
    "text": "using SwiftPM's generated resource accessor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=758"
  },
  {
    "text": "then uses FileManager APIs to load the content of the file into memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=761"
  },
  {
    "text": "Finally, we use JSONDecoder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=766"
  },
  {
    "text": "to decode the JSON content into the server application data model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=768"
  },
  {
    "text": "One interesting change is that Storage is now defined as an actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=773"
  },
  {
    "text": "We chose to use an actor because Storage now has a mutable \"donuts\" variable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=777"
  },
  {
    "text": "and which the \"load\" and \"listDonuts\" methods might access concurrently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=782"
  },
  {
    "text": "Actors, which were first introduced in Swift 5.5, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=787"
  },
  {
    "text": "help us avoid data races and deal with shared mutable state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=790"
  },
  {
    "text": "in a safe but easy way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=793"
  },
  {
    "text": "Prior to the introduction of actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=796"
  },
  {
    "text": "we would have needed to remember and add synchronization blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=798"
  },
  {
    "text": "when accessing mutable state using APIs such as Locks or Queues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=801"
  },
  {
    "text": "With the storage updates done, we can tie it all together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=805"
  },
  {
    "text": "We add a \"bootstrap\" method to our server abstraction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=808"
  },
  {
    "text": "and load the storage from there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=811"
  },
  {
    "text": "Then we wire up the bootstrap to the executables entry point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=813"
  },
  {
    "text": "Note that since storage is now an actor, we access it in an async context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=817"
  },
  {
    "text": "Our server is ready. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=822"
  },
  {
    "text": "Let's switch over to the client side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=823"
  },
  {
    "text": "We start by adding a Server abstraction ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=825"
  },
  {
    "text": "that will help us encapsulate the server APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=828"
  },
  {
    "text": "We use URLSession to make the HTTP request ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=832"
  },
  {
    "text": "and a JSONDecoder to decode the server response ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=835"
  },
  {
    "text": "and transform it from JSON into our iOS application model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=838"
  },
  {
    "text": "At this point, we can remove the hard coded menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=842"
  },
  {
    "text": "and replace it with an asynchronous fetch from the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=845"
  },
  {
    "text": "Finally, we make the call to the server from the ContentView load task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=848"
  },
  {
    "text": "Time to test! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=852"
  },
  {
    "text": "This time, let's not forget to start the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=854"
  },
  {
    "text": "We'll select the \"FoodTruckServer\" scheme here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=857"
  },
  {
    "text": "Hit run.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=859"
  },
  {
    "text": "And with the application running, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=864"
  },
  {
    "text": "let's jump on the terminal and see that we can access the APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=866"
  },
  {
    "text": "Copy the address again.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=873"
  },
  {
    "text": "This time, we're going to use a utility called jq ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=877"
  },
  {
    "text": "to print the JSON output more nicely. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=879"
  },
  {
    "text": "This looks pretty good.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=883"
  },
  {
    "text": "All right, time to test with our App.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=886"
  },
  {
    "text": "Switch to Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=889"
  },
  {
    "text": "Pick the Food Truck scheme here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=892"
  },
  {
    "text": "Simulator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=896"
  },
  {
    "text": "And run it.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=897"
  },
  {
    "text": "And there we have it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=901"
  },
  {
    "text": "the three donuts from our centralized menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=903"
  },
  {
    "text": "We can cross reference that with what we see from the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=905"
  },
  {
    "text": "Let's switch back to the terminal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=908"
  },
  {
    "text": "To make the comparison easy, we will use jq to query just the name of the donuts.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=909"
  },
  {
    "text": "Deep space, Chocolate 2, Coffee Caramel– ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=926"
  },
  {
    "text": "exactly what we expected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=929"
  },
  {
    "text": "That was amazing! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=932"
  },
  {
    "text": "But we can do even better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=934"
  },
  {
    "text": "As it stands, our server and client applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=936"
  },
  {
    "text": "both have identical copies of the data model code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=938"
  },
  {
    "text": "We can avoid repetition and make serialization safer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=941"
  },
  {
    "text": "by sharing the model across the iOS and server applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=944"
  },
  {
    "text": "Let's review how to set this up at a high level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=948"
  },
  {
    "text": "First, we create another package for a library named \"Shared\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=951"
  },
  {
    "text": "and add it to the Xcode workspace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=955"
  },
  {
    "text": "We can then move the data model code to the Shared package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=958"
  },
  {
    "text": "add Shared as a dependency of the server application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=961"
  },
  {
    "text": "and as a dependency of the iOS application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=965"
  },
  {
    "text": "using the Target Frameworks and Libraries settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=967"
  },
  {
    "text": "At which point, we can refactor our client code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=970"
  },
  {
    "text": "to use the shared model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=973"
  },
  {
    "text": "and do the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=975"
  },
  {
    "text": "to the server code.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=978"
  },
  {
    "text": "Things look much nicer now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=982"
  },
  {
    "text": "Before we conclude, here are some ideas of where we can take the application next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=984"
  },
  {
    "text": "To take full advantage of the fact that we have a centralized server, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=989"
  },
  {
    "text": "we are likely to want and define APIs for adding, editing, or deleting donuts from the menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=992"
  },
  {
    "text": "This will require that we move our storage from a static file to a database. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=997"
  },
  {
    "text": "With a database in place, we can also implement buying and ordering APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1002"
  },
  {
    "text": "Such APIs can help us monetize our donut business. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1006"
  },
  {
    "text": "They also provide a signal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1010"
  },
  {
    "text": "which we can use to implement dynamic pricing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1011"
  },
  {
    "text": "like sales and discounts for those donuts that are less popular. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1014"
  },
  {
    "text": "The opportunities are endless. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1018"
  },
  {
    "text": "To wrap up, in this session we have seen ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1020"
  },
  {
    "text": "that Swift is a general purpose language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1023"
  },
  {
    "text": "useful for both client and server applications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1025"
  },
  {
    "text": "sharing code between the server and client applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1028"
  },
  {
    "text": "can reduce boilerplate and make our system serialization safer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1030"
  },
  {
    "text": "URLSession is a key tool for interacting with the server asynchronously, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1034"
  },
  {
    "text": "and finally, Xcode is a powerful development environment ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1038"
  },
  {
    "text": "for the entire system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1041"
  },
  {
    "text": "Thank you so much for watching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1044"
  },
  {
    "text": "and enjoy the rest of the conference.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110360/?time=1045"
  }
]