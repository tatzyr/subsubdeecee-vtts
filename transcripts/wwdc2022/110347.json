[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=0"
  },
  {
    "text": "Hi, and welcome to WWDC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=10"
  },
  {
    "text": "My name is David, and I'd like to tell you about ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=13"
  },
  {
    "text": "how you can explore more content with MusicKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=15"
  },
  {
    "text": "The MusicKit framework was launched in 2021, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=18"
  },
  {
    "text": "providing a set of APIs to access and play music natively in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=21"
  },
  {
    "text": "This framework makes it easy for your app to integrate with Apple Music, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=25"
  },
  {
    "text": "providing access to the entire Apple Music catalog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=29"
  },
  {
    "text": "Today, I'd like to talk about some of the major enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=32"
  },
  {
    "text": "we've made to MusicKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=35"
  },
  {
    "text": "I'll start off with some additions to get even more out of the Apple Music catalog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=36"
  },
  {
    "text": "with new music item types, new requests, and new metadata.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=40"
  },
  {
    "text": "After that, I'll discuss how you can fetch personalized content ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=46"
  },
  {
    "text": "to provide a tailored experience for each of your users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=49"
  },
  {
    "text": "Next up, I'll go beyond the Apple Music catalog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=53"
  },
  {
    "text": "This year, you can take your app to a whole new level ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=56"
  },
  {
    "text": "by including music from your user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=59"
  },
  {
    "text": "Finally, I'll discuss how to actively interact with the library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=62"
  },
  {
    "text": "such as adding items to the library or a playlist, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=66"
  },
  {
    "text": "as well as creating and editing playlists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=69"
  },
  {
    "text": "Let's dive into the catalog content additions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=72"
  },
  {
    "text": "The initial release of MusicKit introduced a new model layer for music, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=74"
  },
  {
    "text": "including core types like Songs, Albums, and Playlists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=78"
  },
  {
    "text": "This year, we're making it easier to discover new music ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=82"
  },
  {
    "text": "with MusicKit with the addition of two new types: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=85"
  },
  {
    "text": "Curator and Radio Show.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=88"
  },
  {
    "text": "Beyond that, MusicKit now also allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=92"
  },
  {
    "text": "to build great UI for searching through the catalog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=94"
  },
  {
    "text": "access top charts to get the most popular songs, albums, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=97"
  },
  {
    "text": "and more, and fetch new attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=101"
  },
  {
    "text": "such as higher quality audio metadata like Spatial Audio with Dolby Atmos.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=104"
  },
  {
    "text": "Let's start with curators and radio shows, which are fantastic resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=109"
  },
  {
    "text": "for music discovery. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=113"
  },
  {
    "text": "Here, we're taking a look at an example Curator, Nike. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=114"
  },
  {
    "text": "Other examples of curators are Shazam and Beats by Dr. Dre. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=118"
  },
  {
    "text": "Here, we can easily find all of the playlists generated by this curator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=122"
  },
  {
    "text": "This functionality allows people to get quick access to playlists they may love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=127"
  },
  {
    "text": "finding new songs or revisiting old favorites. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=131"
  },
  {
    "text": "Now let's dive into the more technical details.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=134"
  },
  {
    "text": "Curators host a variety of attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=138"
  },
  {
    "text": "Some of the primary attributes of this new Curator type are name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=140"
  },
  {
    "text": "url, artwork, and kind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=144"
  },
  {
    "text": "The kind property is an enum that can either be \"editorial\" or \"external\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=148"
  },
  {
    "text": "indicating whether a given curator is an Apple curator or a third party curator.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=152"
  },
  {
    "text": "Curators also have a playlists relationship ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=158"
  },
  {
    "text": "showing playlists made by that curator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=160"
  },
  {
    "text": "truly servicing the music discovery notion we just saw.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=162"
  },
  {
    "text": "Next, we have the Radio Show type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=167"
  },
  {
    "text": "Radio Shows like \"New Music Daily by Zane Lowe\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=170"
  },
  {
    "text": "and \"Pop Hits Radio by Brooke Reese\" are another way to discover ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=172"
  },
  {
    "text": "new music through seasoned professionals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=176"
  },
  {
    "text": "Much like the Curator type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=179"
  },
  {
    "text": "radio shows also have a playlists relationship ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=180"
  },
  {
    "text": "to find the music a radio show features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=183"
  },
  {
    "text": "Just as these two new types hold relationships to playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=186"
  },
  {
    "text": "we are also exposing two new relationships on the Playlist type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=189"
  },
  {
    "text": "\"Curator\" and \"RadioShow\" for the reversed logic: that given a playlist, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=193"
  },
  {
    "text": "we can easily get the structure of which entity generated said playlist.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=197"
  },
  {
    "text": "MusicKit allows searching the catalog for content from a plethora of types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=203"
  },
  {
    "text": "and now we're adding support for our new item types, like curators and radio shows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=206"
  },
  {
    "text": "The list just continues to grow, and as a result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=211"
  },
  {
    "text": "building good UI becomes more and more challenging. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=214"
  },
  {
    "text": "That's why this year, we're making it much easier for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=217"
  },
  {
    "text": "through top results and suggestions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=220"
  },
  {
    "text": "Let's take a look at the utility these enhancements bring to a UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=223"
  },
  {
    "text": "When typing to search for content, you may want to provide strong, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=227"
  },
  {
    "text": "music-related auto-complete support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=231"
  },
  {
    "text": "That's where suggestions come into play, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=233"
  },
  {
    "text": "providing terms that people may be trying to reach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=236"
  },
  {
    "text": "You can even take it a step further and display top results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=239"
  },
  {
    "text": "for quick access to what people may be searching for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=242"
  },
  {
    "text": "For the best results, you may not care about the type of the item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=246"
  },
  {
    "text": "but instead want to focus on relevancy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=249"
  },
  {
    "text": "This is the power of top results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=252"
  },
  {
    "text": "Now, let's take a look at what implementing this would look like, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=255"
  },
  {
    "text": "starting with Top Results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=258"
  },
  {
    "text": "Here we have the existing way to create a catalog search request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=260"
  },
  {
    "text": "requiring a search term ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=263"
  },
  {
    "text": "and the types of items that you want represented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=265"
  },
  {
    "text": "The response includes collections categorized by the requested types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=268"
  },
  {
    "text": "meaning multiple lists of type specific results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=271"
  },
  {
    "text": "Although this is great, we want to expose a single list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=275"
  },
  {
    "text": "of the most relevant results that is type agnostic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=278"
  },
  {
    "text": "And requesting this information is as simple as adding one line. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=281"
  },
  {
    "text": "Here we're setting the includeTopResults property on the request to true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=285"
  },
  {
    "text": "and a new property is filled in the response. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=289"
  },
  {
    "text": "This new property is named topResults ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=293"
  },
  {
    "text": "which contains items of any of the requested types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=295"
  },
  {
    "text": "Here's what the output of the print statement looks like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=298"
  },
  {
    "text": "We can see that the top results returned are a mix of songs, artists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=302"
  },
  {
    "text": "and albums in a single collection and is ordered by relevancy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=306"
  },
  {
    "text": "Now I'll show you how to help people get to their search destination ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=311"
  },
  {
    "text": "faster with Suggestions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=314"
  },
  {
    "text": "Simply create a suggestions request with a string term. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=316"
  },
  {
    "text": "Upon calling response, you'll get back a suggestions response. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=320"
  },
  {
    "text": "The response contains an array of Suggestions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=325"
  },
  {
    "text": "And each suggestion includes a display term which is suitable for your UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=327"
  },
  {
    "text": "as well as a search term. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=332"
  },
  {
    "text": "When people select a suggestion, you can fetch the corresponding results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=334"
  },
  {
    "text": "by performing a search request with the search term.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=337"
  },
  {
    "text": "Catalog charts are a great way to stay up-to-date with the most popular songs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=341"
  },
  {
    "text": "MusicKit offers various types of charts to see what's trending. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=346"
  },
  {
    "text": "The types of charts being offered are top charts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=350"
  },
  {
    "text": "such as Top Songs or Top Albums, which correspond to the most played music, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=353"
  },
  {
    "text": "city charts, and daily top 100. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=357"
  },
  {
    "text": "You may also specify the requested charts to be filtered by a specific genre. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=361"
  },
  {
    "text": "Retrieving these charts through code is extremely simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=366"
  },
  {
    "text": "The catalog charts request follows established patterns ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=369"
  },
  {
    "text": "already used in the catalog search request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=372"
  },
  {
    "text": "First, initialize a charts request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=375"
  },
  {
    "text": "You can then specify the kinds of charts you'd like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=378"
  },
  {
    "text": "By default, this will fetch the most played content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=382"
  },
  {
    "text": "but you can also include daily global top charts and city top charts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=385"
  },
  {
    "text": "Lastly, just specify the types you want your charts to contain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=390"
  },
  {
    "text": "And that's it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=393"
  },
  {
    "text": "When we access the first playlist chart in the response, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=395"
  },
  {
    "text": "we get a MusicCatalogChart representing the daily global top charts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=398"
  },
  {
    "text": "Its items are playlists like \"Top 100: Global\" and \"Top 100: USA\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=403"
  },
  {
    "text": "If you've been fetching catalog charts using MusicDataRequest in the past, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=408"
  },
  {
    "text": "you no longer need to, as MusicKit will do the work for you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=412"
  },
  {
    "text": "with pagination support built into the collection of items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=415"
  },
  {
    "text": "In 2021, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=418"
  },
  {
    "text": "we introduced groundbreaking audio experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=420"
  },
  {
    "text": "with true multidimensional sound and clarity: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=422"
  },
  {
    "text": "Spatial Audio with support for Dolby Atmos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=425"
  },
  {
    "text": "This immersive experience is already available for thousands of songs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=429"
  },
  {
    "text": "and now you can access this data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=433"
  },
  {
    "text": "MusicKit exposes which audio resources are available for any song or album ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=435"
  },
  {
    "text": "through Audio Variants, so now, you can relay this information to others. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=440"
  },
  {
    "text": "Examples of audio variants are the previously mentioned ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=445"
  },
  {
    "text": "Spatial Audio with Dolby Atmos, Lossless Audio, and much more.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=448"
  },
  {
    "text": "We are also exposing a new boolean property alongside audio variants, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=454"
  },
  {
    "text": "is Apple Digital Master, which is the highest quality master supported. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=458"
  },
  {
    "text": "Since this metadata is exposed at the item level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=463"
  },
  {
    "text": "audio variants are perfect for a detail view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=466"
  },
  {
    "text": "allowing you to achieve UI like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=468"
  },
  {
    "text": "Here we have a detail view of an album. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=471"
  },
  {
    "text": "And here, we can see the appropriate badges ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=474"
  },
  {
    "text": "based on the audio variants property mentioned earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=476"
  },
  {
    "text": "letting users know what audio quality they can expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=479"
  },
  {
    "text": "In this case, spatial audio and lossless audio ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=482"
  },
  {
    "text": "are available for this specific album. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=485"
  },
  {
    "text": "Now let's see how we can write code to achieve this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=488"
  },
  {
    "text": "Loading audio variants are like loading any other extended attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=491"
  },
  {
    "text": "Take an existing album or song, in this case an album, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=494"
  },
  {
    "text": "and use the with method to load the audioVariants extended attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=498"
  },
  {
    "text": "Now your detailedAlbum has the audioVariants property populated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=502"
  },
  {
    "text": "Here we can see the audio variants property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=507"
  },
  {
    "text": "which is an array whose element is an AudioVariant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=509"
  },
  {
    "text": "With these values, you can indicate in your UI the available audio resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=512"
  },
  {
    "text": "for that particular element, just like we saw earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=516"
  },
  {
    "text": "Now, this is great, but you may want to show these ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=520"
  },
  {
    "text": "audio badges on more than just top level or detail views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=522"
  },
  {
    "text": "That's why we're also taking it one step further ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=525"
  },
  {
    "text": "and exposing the active audio variant for the music player. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=528"
  },
  {
    "text": "Accessing the active audio variant allows for a visual indication ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=532"
  },
  {
    "text": "of the quality of audio for the currently playing item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=535"
  },
  {
    "text": "such as Dolby Atmos in this view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=538"
  },
  {
    "text": "And the MusicKit player API automatically chooses ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=541"
  },
  {
    "text": "the correct audio quality based on user settings and network conditions.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=544"
  },
  {
    "text": "To access the active trait from the player, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=549"
  },
  {
    "text": "first, we access the ApplicationMusicPlayer's playback state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=551"
  },
  {
    "text": "in an observed object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=555"
  },
  {
    "text": "We can then access the active audioVariant directly from the playback state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=557"
  },
  {
    "text": "Now, we simply check the audioVariant property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=561"
  },
  {
    "text": "to see if it's dolbyAtmos, and add additional UI if it is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=564"
  },
  {
    "text": "Because the playback state is an observed object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=567"
  },
  {
    "text": "this view will automatically update ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=570"
  },
  {
    "text": "whenever the currently playing item changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=572"
  },
  {
    "text": "making sure your view is always up-to-date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=574"
  },
  {
    "text": "Now that we've gone over some catalog additions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=577"
  },
  {
    "text": "let's dive into fetching personalized content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=579"
  },
  {
    "text": "Personalized content is data specific to a subscriber, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=582"
  },
  {
    "text": "providing a unique and tailored experience for every user in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=585"
  },
  {
    "text": "Normally, personalized content requires special authentications ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=589"
  },
  {
    "text": "and user tokens, but in the MusicKit framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=592"
  },
  {
    "text": "we've made this all automatic so you don't have to deal with any of the hassle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=595"
  },
  {
    "text": "The personalized content we're bringing to developers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=599"
  },
  {
    "text": "is access to recently played items ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=601"
  },
  {
    "text": "and personal recommendations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=603"
  },
  {
    "text": "Recently played content is a valuable piece of data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=606"
  },
  {
    "text": "for a person's music consumption experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=609"
  },
  {
    "text": "It allows for quick and easy access to music items you know they enjoy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=612"
  },
  {
    "text": "And when listening to new music, it allows people to later go back ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=616"
  },
  {
    "text": "and refer to their history. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=620"
  },
  {
    "text": "To fetch recently played containers like albums, playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=622"
  },
  {
    "text": "and stations, you can create a recently played container request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=625"
  },
  {
    "text": "Note that if you play a song from a playlist or album, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=629"
  },
  {
    "text": "the container type will be retrieved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=632"
  },
  {
    "text": "In the response, you will find recently played music items, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=634"
  },
  {
    "text": "which offer convenience accessors for the title, subtitle, and artwork. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=638"
  },
  {
    "text": "You can also fetch recently played items of more specific types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=643"
  },
  {
    "text": "like songs or stations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=646"
  },
  {
    "text": "Here, we create a recently played request, specifying the Song type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=648"
  },
  {
    "text": "through the generic parameter, indicated by the angle brackets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=652"
  },
  {
    "text": "Our response now only contains the songs that we have played. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=656"
  },
  {
    "text": "Now, onto personal recommendations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=659"
  },
  {
    "text": "Personal recommendations let your app experience feel more intimate and engaging ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=662"
  },
  {
    "text": "as they are generated based off the user's library and listening history. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=667"
  },
  {
    "text": "Recommendations are nicely organized by themes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=671"
  },
  {
    "text": "resulting in groupings by genres, artists, collections like \"Made for You,\" and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=674"
  },
  {
    "text": "To fetch personal recommendations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=680"
  },
  {
    "text": "simply create a personal recommendations request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=682"
  },
  {
    "text": "The response is a collection of recommendations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=685"
  },
  {
    "text": "When we log the first recommendation, we can see that this particular element ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=688"
  },
  {
    "text": "represents the \"Made for You\" recommendation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=692"
  },
  {
    "text": "Recommendations have an ID, title, and nextRefreshDate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=694"
  },
  {
    "text": "The nextRefreshDate represents the date time for when this recommendation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=698"
  },
  {
    "text": "should be refreshed for the most up-to-date suggestions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=702"
  },
  {
    "text": "The playlists property contains all of the playlists that are made for me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=705"
  },
  {
    "text": "Let's take a look at another example of a recommendation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=709"
  },
  {
    "text": "Here we'll print out the second element of the recommendations response. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=712"
  },
  {
    "text": "I listen to a ton of alternative music, and this recommendation contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=716"
  },
  {
    "text": "a mix of different types, in this case, Albums and Playlists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=719"
  },
  {
    "text": "Those are grouped in a single collection of items, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=724"
  },
  {
    "text": "which are ordered by relevancy, much like top results for catalog search. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=727"
  },
  {
    "text": "Now, let's take it a step further and talk about how you can create ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=731"
  },
  {
    "text": "even more relevant experiences around music ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=734"
  },
  {
    "text": "by incorporating content from your user's library into your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=737"
  },
  {
    "text": "This year, MusicKit allows your app to fetch items from the library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=741"
  },
  {
    "text": "with two types of requests: the library request ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=745"
  },
  {
    "text": "and the library sectioned request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=748"
  },
  {
    "text": "search for content in the user's library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=751"
  },
  {
    "text": "and load extended attributes and relationships ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=754"
  },
  {
    "text": "specifically from the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=757"
  },
  {
    "text": "Before we see the technical details, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=759"
  },
  {
    "text": "let's see how we can use library content to enhance your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=762"
  },
  {
    "text": "I've been working on a fitness app called Music Marathon ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=765"
  },
  {
    "text": "that will track your outdoor runs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=768"
  },
  {
    "text": "By incorporating MusicKit in the project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=770"
  },
  {
    "text": "we allow people to play music directly through the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=772"
  },
  {
    "text": "instead of context switching between the Apple Music app and this one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=775"
  },
  {
    "text": "Let's start a new workout and look for music content.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=779"
  },
  {
    "text": "Here we see some recommended playlists retrieved ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=784"
  },
  {
    "text": "from the personal recommendations request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=787"
  },
  {
    "text": "to give people quick access to playlists we think they'll love. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=789"
  },
  {
    "text": "Going to the library tab, we can see it's an empty view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=792"
  },
  {
    "text": "It would be great to be able to see all of my personal playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=797"
  },
  {
    "text": "so let's write that feature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=800"
  },
  {
    "text": "I already have some UI set up to handle the basics of this view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=801"
  },
  {
    "text": "and now I want to load the playlists from my library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=805"
  },
  {
    "text": "First, I'll make library request...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=809"
  },
  {
    "text": "Specifying playlist in the generic parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=813"
  },
  {
    "text": "to indicate that we want the playlists from the user's library.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=815"
  },
  {
    "text": "And I'll store it in a local variable I'll name \"request.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=822"
  },
  {
    "text": "Next I'll take this request and call the response function.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=827"
  },
  {
    "text": "This method is an async throwing method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=833"
  },
  {
    "text": "so let's add the try and await keywords. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=836"
  },
  {
    "text": "and once again store it in a response variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=838"
  },
  {
    "text": "Then, I'll update the state object to receive this response.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=844"
  },
  {
    "text": "Now all that's left to do is update the list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=851"
  },
  {
    "text": "so we can see the playlists in my UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=854"
  },
  {
    "text": "I'll iterate through the items in the response using a ForEach...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=857"
  },
  {
    "text": "And retrieve each playlist in the MusicItemCollection.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=865"
  },
  {
    "text": "Now that we have the playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=870"
  },
  {
    "text": "I'll pass them into a PlaylistCell I've already made.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=871"
  },
  {
    "text": "Now if we re-run...",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=875"
  },
  {
    "text": "And navigate back to the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=884"
  },
  {
    "text": "we can see all of my personal playlists in the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=886"
  },
  {
    "text": "Now, I can choose to listen to personal recommendations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=890"
  },
  {
    "text": "anything from the Apple Music catalog, and my own personal library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=892"
  },
  {
    "text": "Now that we've seen how easy it is to access library content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=897"
  },
  {
    "text": "let's look at what else the library request can do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=900"
  },
  {
    "text": "The music library request is a powerful API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=902"
  },
  {
    "text": "to fetch items from the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=905"
  },
  {
    "text": "On iOS, unlike other requests to fetch content from the music catalog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=907"
  },
  {
    "text": "MusicLibraryRequest will not actually load data from the network. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=911"
  },
  {
    "text": "Instead, it will load items from the copy of the user's library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=915"
  },
  {
    "text": "that is stored on device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=919"
  },
  {
    "text": "The basics of this request only require you to specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=921"
  },
  {
    "text": "which music item type is desired. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=924"
  },
  {
    "text": "This item type is passed through the generic parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=927"
  },
  {
    "text": "of the MusicLibraryRequest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=929"
  },
  {
    "text": "You can apply a variety of filters and sort options on the request ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=932"
  },
  {
    "text": "in order to finely tune your call to match your requirements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=936"
  },
  {
    "text": "This request is also capable of fetching already downloaded content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=939"
  },
  {
    "text": "supporting a fully offline experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=943"
  },
  {
    "text": "Let's start with the simple, base request, the same request we wrote ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=946"
  },
  {
    "text": "in the Music Marathon app, but this time, ask for the Albums in the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=950"
  },
  {
    "text": "The album type is specified through the generic parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=955"
  },
  {
    "text": "To perform the request, call the response function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=958"
  },
  {
    "text": "Looking at the output, we have a MusicLibraryResponse, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=961"
  },
  {
    "text": "where its items are a MusicItemCollection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=964"
  },
  {
    "text": "of all the albums found within the user's music library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=967"
  },
  {
    "text": "Here we notice that these Albums are the same Album structure that you would ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=971"
  },
  {
    "text": "get from one of our various catalog requests and have the same capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=974"
  },
  {
    "text": "Whereas in this example we are fetching every album in the library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=979"
  },
  {
    "text": "we know there are scenarios where you only want a specific subset of albums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=982"
  },
  {
    "text": "That's why MusicLibraryRequest also enables you to be more specific ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=987"
  },
  {
    "text": "about what items you want to fetch from the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=991"
  },
  {
    "text": "Let's take the same request we wrote before and add a filter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=994"
  },
  {
    "text": "Here, we want to load all albums where the isCompilation property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=998"
  },
  {
    "text": "is equal to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1002"
  },
  {
    "text": "When you call filter method, Xcode's autocompletion will only offer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1004"
  },
  {
    "text": "specific key paths that are supported for the type of item you are requesting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1007"
  },
  {
    "text": "Now, the response only has albums which are compilations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1012"
  },
  {
    "text": "But that's not all the power the MusicLibraryRequest has to offer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1016"
  },
  {
    "text": "You can chain multiple filters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1019"
  },
  {
    "text": "giving you a more refined request with each addition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1021"
  },
  {
    "text": "What if we wanted all of the compilations of a particular genre? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1024"
  },
  {
    "text": "We can add another filter to the request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1028"
  },
  {
    "text": "For example, here we have an instance of Genre named \"Dance.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1031"
  },
  {
    "text": "You can filter by the genre's relationship to restrict the results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1035"
  },
  {
    "text": "to only include compilations that contain this specific genre. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1038"
  },
  {
    "text": "Now our response only contains dance compilations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1042"
  },
  {
    "text": "How about only including dance compilations that are already downloaded? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1045"
  },
  {
    "text": "To do that, just set the includeOnlyDownloadedContent ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1049"
  },
  {
    "text": "to true on the request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1052"
  },
  {
    "text": "And that's it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1053"
  },
  {
    "text": "The response is the same MusicLibraryResponse, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1054"
  },
  {
    "text": "but the items now only contain elements that are downloaded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1057"
  },
  {
    "text": "As you can see, the music library request is very powerful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1061"
  },
  {
    "text": "and unlocks new capabilities that weren't possible with a custom MusicDataRequest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1065"
  },
  {
    "text": "But MusicKit offers even more options to fetch data from the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1070"
  },
  {
    "text": "Meet the Library Sectioned Request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1074"
  },
  {
    "text": "The sectioned request is able to fetch items grouped by sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1077"
  },
  {
    "text": "As a result, the sectioned request takes in two distinct generic parameters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1082"
  },
  {
    "text": "The first representing the section type, and the second, the item type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1087"
  },
  {
    "text": "The library sectioned request supports the same capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1091"
  },
  {
    "text": "as the regular library request, such as a variety of filter ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1094"
  },
  {
    "text": "and sort methods which you can apply to either the sections or the items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1098"
  },
  {
    "text": "Here's how you can fetch all albums sectioned by their genres ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1103"
  },
  {
    "text": "using the library sectioned request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1106"
  },
  {
    "text": "The sectioned Response holds a property named \"sections\" where each element ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1109"
  },
  {
    "text": "corresponds to the first generic parameter of the request, Genre in this case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1113"
  },
  {
    "text": "Each genre not only exposes its own attributes, but it also contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1118"
  },
  {
    "text": "a collection of albums, accessible via the items property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1122"
  },
  {
    "text": "Those items correspond to the second generic argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1126"
  },
  {
    "text": "Here, the highlight shows albums whose genre is Alternative. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1130"
  },
  {
    "text": "And as mentioned before, the capabilities of filtering and sorting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1133"
  },
  {
    "text": "are also available for this sectioned request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1136"
  },
  {
    "text": "Let's say we want the same albums, sectioned by genres, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1139"
  },
  {
    "text": "but the albums sorted by their artist's name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1142"
  },
  {
    "text": "We add a sort filter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1146"
  },
  {
    "text": "By specifying the artistName keyPath on Albums and saying that we want ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1147"
  },
  {
    "text": "these to be ascending, we're sorting the response. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1151"
  },
  {
    "text": "Notice that the method is sortItems as we are specifying the sorting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1155"
  },
  {
    "text": "to be applied to the items and not the sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1158"
  },
  {
    "text": "Had we wanted to specify the sections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1161"
  },
  {
    "text": "a set of filterSections and sortSection methods are available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1163"
  },
  {
    "text": "Let's take a look at the new response.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1167"
  },
  {
    "text": "We can now see that our albums are ordered alphabetically by artist name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1172"
  },
  {
    "text": "instead of by their titles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1175"
  },
  {
    "text": "Both the library request and library sectioned request are extremely powerful, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1177"
  },
  {
    "text": "but you might also want to complement your music search UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1182"
  },
  {
    "text": "by adding search results from the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1185"
  },
  {
    "text": "So we've added a new structured request which operates almost identically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1188"
  },
  {
    "text": "to catalog search, but instead of loading results ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1192"
  },
  {
    "text": "from the catalog, it finds relevant items in the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1194"
  },
  {
    "text": "Just like its catalog counterpart, the library search request ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1199"
  },
  {
    "text": "only requires a search term and an array of types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1202"
  },
  {
    "text": "Now that we've seen the different ways to retrieve items from the user's library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1206"
  },
  {
    "text": "what about loading extended attributes and relationships? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1210"
  },
  {
    "text": "As you may know, the initial release of MusicKit introduced the with method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1213"
  },
  {
    "text": "loading these properties from Apple Music API in a straightforward way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1217"
  },
  {
    "text": "This year, we're augmenting the current with method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1222"
  },
  {
    "text": "to also take in a preferred source parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1224"
  },
  {
    "text": "This preferred source indicates where to load data from, for extended attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1228"
  },
  {
    "text": "and relationships that are available in both the Apple Music catalog ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1232"
  },
  {
    "text": "and the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1236"
  },
  {
    "text": "And for the properties that only live in either the catalog or the library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1238"
  },
  {
    "text": "they will still fetched regardless of the preferred source ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1241"
  },
  {
    "text": "to make sure nothing is ignored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1244"
  },
  {
    "text": "In addition, you can use this functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1247"
  },
  {
    "text": "no matter where the initial item came from, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1249"
  },
  {
    "text": "whether it be a catalog request, a library request, or elsewhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1252"
  },
  {
    "text": "It all just works.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1256"
  },
  {
    "text": "Here we have the known way of receiving a relationship of a music item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1258"
  },
  {
    "text": "We're loading the tracks of an album, and when we display the output, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1262"
  },
  {
    "text": "we can see all of the tracks for that album. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1266"
  },
  {
    "text": "However, with the new addition of the preferredSource property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1269"
  },
  {
    "text": "we can specify that we would like to fetch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1273"
  },
  {
    "text": "this relationship from the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1275"
  },
  {
    "text": "Now our output only contains the tracks of the album found in the library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1277"
  },
  {
    "text": "With the various ways you can now fetch items from the user's library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1282"
  },
  {
    "text": "it only makes sense to allow users to be able to interact ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1285"
  },
  {
    "text": "with their library directly through MusicKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1288"
  },
  {
    "text": "Let's jump back into my sample app, Music Marathon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1291"
  },
  {
    "text": "to see some of the capabilities the library offers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1294"
  },
  {
    "text": "As I'm working out, I want to browse through some ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1297"
  },
  {
    "text": "of my personal recommendations.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1299"
  },
  {
    "text": "As I look through the tracks, I realize that one of these songs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1303"
  },
  {
    "text": "would be perfect for my workout playlist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1305"
  },
  {
    "text": "If hold down one of these cells, a contextual menu pops up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1308"
  },
  {
    "text": "allowing me to add this song to a playlist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1311"
  },
  {
    "text": "When we press it, a pop-up of all of my playlists appear again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1313"
  },
  {
    "text": "Let's write code to add the selected track to whichever playlist I pick. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1317"
  },
  {
    "text": "I've already piped the selected item to our AddToPlaylistCell cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1321"
  },
  {
    "text": "so all we have to do is access the MusicLibrary through the shared instance.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1325"
  },
  {
    "text": "We'll call the \"add\" method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1333"
  },
  {
    "text": "specifying our selected track ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1336"
  },
  {
    "text": "and which playlist we want to add to.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1339"
  },
  {
    "text": "This method is also an async throwing function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1343"
  },
  {
    "text": "so we add once again the try and await keywords.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1345"
  },
  {
    "text": "Lastly, we'll dismiss the picker ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1351"
  },
  {
    "text": "by setting the isShowingPlaylistPicker binding variable to false.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1353"
  },
  {
    "text": "Now if we re-run ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1358"
  },
  {
    "text": "and add a track to a playlist and select one of our playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1360"
  },
  {
    "text": "we should expect to see this item added. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1364"
  },
  {
    "text": "Navigating back to the library tab within the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1367"
  },
  {
    "text": "we can see the song is now added to our workout playlist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1370"
  },
  {
    "text": "And that's how simple it is to add an item to a playlist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1373"
  },
  {
    "text": "Let's look at some of the other functionality the library offers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1376"
  },
  {
    "text": "The various other ways to interact with the library are adding content ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1379"
  },
  {
    "text": "to the library, creating playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1383"
  },
  {
    "text": "and editing playlists' metadata and track list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1386"
  },
  {
    "text": "Adding content to the user's music library allows people to find specific songs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1390"
  },
  {
    "text": "or albums in the library tab of the Apple Music app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1394"
  },
  {
    "text": "as well as synchronizes across all devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1398"
  },
  {
    "text": "when \"Sync Library\" is turned on in Settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1401"
  },
  {
    "text": "Providing this functionality directly in your app saves people ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1404"
  },
  {
    "text": "from context switching between the Apple Music app and yours, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1407"
  },
  {
    "text": "so they can stay engaged in the content you're providing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1410"
  },
  {
    "text": "Also, by integrating adding to the library ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1414"
  },
  {
    "text": "along with the newly introduced library requests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1416"
  },
  {
    "text": "your app can immediately benefit from these results, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1419"
  },
  {
    "text": "giving users easy access to content they love. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1422"
  },
  {
    "text": "Even with this powerful service, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1426"
  },
  {
    "text": "you may still want to craft specific musical experiences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1427"
  },
  {
    "text": "So this year, we're bringing playlist creation and editing to MusicKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1431"
  },
  {
    "text": "You can now create playlists on behalf of your users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1436"
  },
  {
    "text": "We're also allowing items, such as songs or even whole albums, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1439"
  },
  {
    "text": "to be added to any eligible playlist in the user's library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1443"
  },
  {
    "text": "Creating playlists are fantastic for grouping content that people love ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1447"
  },
  {
    "text": "or fitting any mood your app wants to set. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1451"
  },
  {
    "text": "And by adding content to existing playlists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1454"
  },
  {
    "text": "you allow for the various music discovery tools MusicKit offers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1456"
  },
  {
    "text": "to directly affect people. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1459"
  },
  {
    "text": "You can now also edit playlists that you've created, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1462"
  },
  {
    "text": "being able to edit the track list and metadata to make sure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1464"
  },
  {
    "text": "everything is just as you want it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1468"
  },
  {
    "text": "And those are the ways you can interact with users' libraries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1470"
  },
  {
    "text": "from within your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1473"
  },
  {
    "text": "To wrap up, MusicKit received some major upgrades this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1475"
  },
  {
    "text": "Easily incorporate our catalog enhancements for new types, properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1479"
  },
  {
    "text": "and search augmentations to your existing apps for an even better experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1483"
  },
  {
    "text": "Integrate library content and functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1489"
  },
  {
    "text": "to unlock brand-new capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1491"
  },
  {
    "text": "and let users be in control of their experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1493"
  },
  {
    "text": "And using MusicKit can enhance multiple different types of apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1497"
  },
  {
    "text": "Fitness apps, games, social media apps, mapping apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1500"
  },
  {
    "text": "and more can all benefit from playing or sharing music. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1503"
  },
  {
    "text": "To go even further, make sure to check out some related sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1508"
  },
  {
    "text": "Dive deeper into Swift and learn about the new additions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1512"
  },
  {
    "text": "to the language to get the most out of MusicKit and other Apple Frameworks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1514"
  },
  {
    "text": "Check out the MusicKit session from 2021 to learn how to set up your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1519"
  },
  {
    "text": "to use the framework, initiate playback, and present subscription offers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1523"
  },
  {
    "text": "And if you're interested in integrating with Apple Music on Android or the web, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1528"
  },
  {
    "text": "we have another session that goes over how to use Apple Music API directly.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1532"
  },
  {
    "text": "I hope you enjoyed our session, and make sure to stay updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1537"
  },
  {
    "text": "and engaged through our developer forums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1540"
  },
  {
    "text": "Thank you for watching, and enjoy WWDC 2022.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110347/?time=1542"
  }
]