[
  {
    "text": "♪ Mellow instrumental hip-hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=3"
  },
  {
    "text": "Hi, I'm Angela. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=9"
  },
  {
    "text": "And I'm Becca. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=11"
  },
  {
    "text": "Welcome to what's new in Swift! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=13"
  },
  {
    "text": "We're really excited to talk to you today ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=15"
  },
  {
    "text": "about all of the great new features in Swift 5.7. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=17"
  },
  {
    "text": "Many of the things we'll talk about today ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=21"
  },
  {
    "text": "demonstrate Swift's goal to make your life as a developer easier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=22"
  },
  {
    "text": "We'll look at new tooling ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=28"
  },
  {
    "text": "to help you customize your workflow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=29"
  },
  {
    "text": "and some amazing under-the-hood improvements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=31"
  },
  {
    "text": "Then we'll talk about the latest in Swift's concurrency model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=35"
  },
  {
    "text": "and the road to Swift 6, including full-thread safety. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=38"
  },
  {
    "text": "Then I'll finish up by taking you through ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=43"
  },
  {
    "text": "some language improvements that make Swift easier to read ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=44"
  },
  {
    "text": "and write, including cleaner, simpler generics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=47"
  },
  {
    "text": "and powerful new string processing facilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=50"
  },
  {
    "text": "But first, let's start by talking about ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=54"
  },
  {
    "text": "one of the things that makes Swift so special -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=57"
  },
  {
    "text": "all of you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=61"
  },
  {
    "text": "Your input and contributions are what have enabled Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=62"
  },
  {
    "text": "to expand so rapidly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=65"
  },
  {
    "text": "Community involvement is at Swift's core. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=68"
  },
  {
    "text": "This year, more of the Swift project became available ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=71"
  },
  {
    "text": "to the community when docC -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=74"
  },
  {
    "text": "the documentation generation tool announced last year -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=76"
  },
  {
    "text": "and the Swift.org website were open sourced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=79"
  },
  {
    "text": "Open source works best ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=83"
  },
  {
    "text": "when you have an active community shepherding it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=84"
  },
  {
    "text": "We've been using the workgroup model for Swift on Server ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=88"
  },
  {
    "text": "and Diversity in Swift to provide stewardship ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=91"
  },
  {
    "text": "and support for community members ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=94"
  },
  {
    "text": "interested in specific areas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=96"
  },
  {
    "text": "This has been working really well ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=98"
  },
  {
    "text": "so we've started two new workgroups. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=100"
  },
  {
    "text": "One for iterating on the Swift website ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=102"
  },
  {
    "text": "and making it more of a community resource, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=104"
  },
  {
    "text": "and another for C++ interoperability, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=106"
  },
  {
    "text": "to shape the design of the model between C++ and Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=109"
  },
  {
    "text": "As we venture into new areas, we all need support ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=114"
  },
  {
    "text": "from members within the community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=117"
  },
  {
    "text": "As a part of that, the Diversity in Swift workgroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=120"
  },
  {
    "text": "introduced the Swift Mentorship Program last year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=122"
  },
  {
    "text": "The program provides pathways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=125"
  },
  {
    "text": "to contribute to all of the workgroup areas ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=127"
  },
  {
    "text": "for folks who don't know how to start ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=129"
  },
  {
    "text": "or are looking to deepen their expertise in a particular area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=131"
  },
  {
    "text": "Last year's program was a huge success. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=135"
  },
  {
    "text": "There were a lot of interested mentees; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=138"
  },
  {
    "text": "and with that, we were able to create 41 mentorship pairs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=141"
  },
  {
    "text": "This success is why the program is being brought back ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=145"
  },
  {
    "text": "for year two. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=149"
  },
  {
    "text": "The program would love to include everyone ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=150"
  },
  {
    "text": "who's interested; but to do that, we need you -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=152"
  },
  {
    "text": "the excited and experienced developers listening now ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=155"
  },
  {
    "text": "who are ready to share their breadth of knowledge ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=158"
  },
  {
    "text": "and make new connections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=160"
  },
  {
    "text": "Because the mentorship program is not just about the code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=162"
  },
  {
    "text": "but about building relationships within the community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=165"
  },
  {
    "text": "And a little guidance can have a lasting effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=169"
  },
  {
    "text": "Don't just take my word for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=172"
  },
  {
    "text": "Last year, Amrit participated in the mentorship program ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=174"
  },
  {
    "text": "and focused on compiler and language design. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=178"
  },
  {
    "text": "What started off as intrigue for Amrit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=180"
  },
  {
    "text": "transformed into tangible contributions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=182"
  },
  {
    "text": "Diving into a new domain is not easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=186"
  },
  {
    "text": "Even so, she walked away finding success ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=189"
  },
  {
    "text": "and feeling inspired to contribute more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=192"
  },
  {
    "text": "Like many others, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=194"
  },
  {
    "text": "this experience opened a door for Amrit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=196"
  },
  {
    "text": "In addition to compiler and language design, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=199"
  },
  {
    "text": "last year there were a wide range of available focus areas, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=202"
  },
  {
    "text": "from technical writing and testing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=206"
  },
  {
    "text": "to contributing to Swift packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=208"
  },
  {
    "text": "This year, we're adding even more ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=210"
  },
  {
    "text": "and there's always opportunities for new topics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=213"
  },
  {
    "text": "If you don't see something in this list that interests you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=216"
  },
  {
    "text": "you can still mention it in your application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=219"
  },
  {
    "text": "Another addition is that this year's program will offer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=222"
  },
  {
    "text": "mentorship year-round for starter bug contributions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=225"
  },
  {
    "text": "to help accommodate anyone who may have a lower capacity ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=228"
  },
  {
    "text": "to participate but is still excited to get involved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=230"
  },
  {
    "text": "If you're interested in applying, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=234"
  },
  {
    "text": "or just eager to hear more, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=236"
  },
  {
    "text": "check out the most recent Swift blog post. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=238"
  },
  {
    "text": "There, you can find links to detailed reflections ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=240"
  },
  {
    "text": "from the highlighted mentees. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=242"
  },
  {
    "text": "The mentorship program is just one initiative ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=245"
  },
  {
    "text": "under Diversity in Swift umbrella. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=248"
  },
  {
    "text": "To learn more about the mentorship program ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=250"
  },
  {
    "text": "and other Diversity in Swift efforts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=252"
  },
  {
    "text": "you can visit Swift.org/diversity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=254"
  },
  {
    "text": "To open the door even further, we want to make it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=257"
  },
  {
    "text": "as easy as possible to use Swift with the resources you have! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=260"
  },
  {
    "text": "We have streamlined the Swift toolchain distribution process ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=264"
  },
  {
    "text": "for the Linux platform ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=267"
  },
  {
    "text": "by adding support for Linux package formats. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=269"
  },
  {
    "text": "With the new native toolchain installers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=272"
  },
  {
    "text": "you can now download RPMs for Amazon Linux 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=273"
  },
  {
    "text": "and CentOS 7 directly from Swift.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=277"
  },
  {
    "text": "These toolchains are experimental, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=280"
  },
  {
    "text": "so be sure to share feedback on the Swift.org forums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=282"
  },
  {
    "text": "Swift is primarily used for building apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=285"
  },
  {
    "text": "However, the vision has always been for Swift to be scalable -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=288"
  },
  {
    "text": "used from everything from high-level scripts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=292"
  },
  {
    "text": "down to bare-metal environments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=294"
  },
  {
    "text": "To encourage Swift to be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=297"
  },
  {
    "text": "where it's never been used before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=298"
  },
  {
    "text": "Swift underwent some major changes this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=301"
  },
  {
    "text": "To make the standard library smaller ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=304"
  },
  {
    "text": "for standalone, statically linked binaries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=305"
  },
  {
    "text": "we dropped the dependency ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=308"
  },
  {
    "text": "on an external Unicode support library, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=309"
  },
  {
    "text": "replacing it with a faster native implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=312"
  },
  {
    "text": "Smaller, faster binaries are a huge benefit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=317"
  },
  {
    "text": "when running on event-driven server solutions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=320"
  },
  {
    "text": "You get static linking on Linux by default ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=322"
  },
  {
    "text": "to better support containerized deployments for the server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=324"
  },
  {
    "text": "This size reduction makes Swift suitable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=328"
  },
  {
    "text": "for even restricted environments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=330"
  },
  {
    "text": "which allowed us to use it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=332"
  },
  {
    "text": "in Apple's Secure Enclave Processor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=333"
  },
  {
    "text": "Swift is useful from apps to servers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=336"
  },
  {
    "text": "all the way down to restricted processors; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=338"
  },
  {
    "text": "tying it all together is the package ecosystem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=341"
  },
  {
    "text": "This year's new features in Swift packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=346"
  },
  {
    "text": "will make your life better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=348"
  },
  {
    "text": "To start, Swift Package Manager has introduced TOFU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=350"
  },
  {
    "text": "No, not the delicious snack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=355"
  },
  {
    "text": "TOFU is an acronym that stands for Trust On First Use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=358"
  },
  {
    "text": "It's a new security protocol where the fingerprint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=361"
  },
  {
    "text": "of a package is now being recorded ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=364"
  },
  {
    "text": "when the package is first downloaded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=366"
  },
  {
    "text": "Subsequent downloads will validate this fingerprint ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=368"
  },
  {
    "text": "and report an error if the fingerprints are different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=371"
  },
  {
    "text": "This is just one example of how trust and security ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=374"
  },
  {
    "text": "are built into the core of the package ecosystem ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=377"
  },
  {
    "text": "to help you feel confident using it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=380"
  },
  {
    "text": "Command plug-ins are a great way to improve the workflow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=383"
  },
  {
    "text": "for Swift developers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=386"
  },
  {
    "text": "They are the first step in providing more extensible ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=388"
  },
  {
    "text": "and secure build tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=390"
  },
  {
    "text": "Command plug-ins can be used for documentation generation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=392"
  },
  {
    "text": "source code reformatting and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=395"
  },
  {
    "text": "Instead of writing your automation in a shell script ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=398"
  },
  {
    "text": "and having to maintain separate workflows, you can use Swift! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=401"
  },
  {
    "text": "Think open source formatters and linters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=404"
  },
  {
    "text": "Now, all of those open source tools are available within Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=406"
  },
  {
    "text": "and Swift Package Manager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=410"
  },
  {
    "text": "Command plug-ins are the glue between open source tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=413"
  },
  {
    "text": "and Swift Package Manager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=417"
  },
  {
    "text": "The Swift project is embracing developer tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=418"
  },
  {
    "text": "in the open source community to provide seamless integration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=421"
  },
  {
    "text": "with your automated workflows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=423"
  },
  {
    "text": "docC is great tool to integrate documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=426"
  },
  {
    "text": "into your source code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=429"
  },
  {
    "text": "This year, it got even better with Objective-C and C support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=430"
  },
  {
    "text": "Let's take a look at what it would take ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=434"
  },
  {
    "text": "to create a plug-in with docC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=436"
  },
  {
    "text": "Plug-ins are just simple Swift code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=439"
  },
  {
    "text": "You can define a plug-in by creating a struct ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=440"
  },
  {
    "text": "that conforms to the CommandPlugin protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=443"
  },
  {
    "text": "And then you just add a function that tells your plug-in ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=445"
  },
  {
    "text": "which tool you'd like to invoke. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=448"
  },
  {
    "text": "Within this function is where we want to call docC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=450"
  },
  {
    "text": "Once you've defined your plug-in, it becomes available ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=454"
  },
  {
    "text": "through the Swift PM command line interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=457"
  },
  {
    "text": "and Xcode as a menu entry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=459"
  },
  {
    "text": "Now, we can tell Swift PM to generate documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=460"
  },
  {
    "text": "and it knows to pass this action to the docC executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=464"
  },
  {
    "text": "It doesn't stop there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=468"
  },
  {
    "text": "There's a second plug-in known as build tool plug-ins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=470"
  },
  {
    "text": "These plug-ins are packages that allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=474"
  },
  {
    "text": "to inject additional steps during the build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=476"
  },
  {
    "text": "When you implement a build tool plug-in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=479"
  },
  {
    "text": "that will create a command for the build system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=481"
  },
  {
    "text": "to execute in a sandbox. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=482"
  },
  {
    "text": "They differ from command plug-ins ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=485"
  },
  {
    "text": "which you execute directly at any time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=486"
  },
  {
    "text": "and can be granted explicit permission ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=489"
  },
  {
    "text": "to change files in your package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=491"
  },
  {
    "text": "Build tool plug-ins can be used for source code generation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=493"
  },
  {
    "text": "or custom processing for special types of files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=496"
  },
  {
    "text": "With build tool plug-ins, this would be the package layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=500"
  },
  {
    "text": "In this example, the plugin.Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=503"
  },
  {
    "text": "is the Swift script that implements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=505"
  },
  {
    "text": "the package plug-in target. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=507"
  },
  {
    "text": "The plug-in is treated as a Swift executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=509"
  },
  {
    "text": "And you write the plug-in in the same way ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=513"
  },
  {
    "text": "you write any Swift executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=515"
  },
  {
    "text": "You can implement your plug-in by defining ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=518"
  },
  {
    "text": "a set of build commands that tells the build system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=520"
  },
  {
    "text": "what executable command to run and what outputs are expected ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=523"
  },
  {
    "text": "as a result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=526"
  },
  {
    "text": "Package plug-ins are secure solutions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=528"
  },
  {
    "text": "that provide extensibility in your packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=530"
  },
  {
    "text": "You can learn more about how plug-ins work ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=533"
  },
  {
    "text": "and how to implement your own plug-in, in two sessions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=535"
  },
  {
    "text": "\"Meet Swift Package plugins\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=538"
  },
  {
    "text": "and \"Create Swift Package plugins.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=540"
  },
  {
    "text": "As you expand your use of packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=543"
  },
  {
    "text": "you might have encountered module collisions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=545"
  },
  {
    "text": "That's when two separate packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=548"
  },
  {
    "text": "define a module with the same name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=550"
  },
  {
    "text": "To solve this situation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=552"
  },
  {
    "text": "Swift 5.7 introduces module disambiguation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=554"
  },
  {
    "text": "Module disambiguation is a feature that allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=559"
  },
  {
    "text": "to rename modules from outside the packages that define them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=562"
  },
  {
    "text": "Here in our Stunning application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=566"
  },
  {
    "text": "we're bringing in two packages that define a Logging module, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=568"
  },
  {
    "text": "so they clash. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=571"
  },
  {
    "text": "To fix this for our Stunning application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=573"
  },
  {
    "text": "you'll just need to add the moduleAliases keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=575"
  },
  {
    "text": "to the dependencies section of your package manifest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=578"
  },
  {
    "text": "That way you can use two different names ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=582"
  },
  {
    "text": "to distinguish between modules ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=584"
  },
  {
    "text": "that previously had the same name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=586"
  },
  {
    "text": "Swift 5.7 brings some fantastic performance improvements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=589"
  },
  {
    "text": "Let's start by looking at build times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=593"
  },
  {
    "text": "Last year, we told you about how we had rewritten ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=596"
  },
  {
    "text": "the Swift Driver -- the program that coordinates ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=598"
  },
  {
    "text": "the compilation of Swift source code in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=600"
  },
  {
    "text": "Last year's rearchitecture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=604"
  },
  {
    "text": "unlocked some really important changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=605"
  },
  {
    "text": "that speed up builds significantly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=607"
  },
  {
    "text": "The driver can now be used as a framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=609"
  },
  {
    "text": "directly inside the Xcode build system ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=611"
  },
  {
    "text": "instead of as a separate executable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=613"
  },
  {
    "text": "This allows it to coordinate builds more closely ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=616"
  },
  {
    "text": "with the build system to allow things like parallelization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=618"
  },
  {
    "text": "If you're someone who loves the sound of quick builds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=622"
  },
  {
    "text": "you can get more details in the ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=625"
  },
  {
    "text": "\"Demystify parallelization in Xcode builds\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=626"
  },
  {
    "text": "To show you how much faster builds are, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=631"
  },
  {
    "text": "let's look at some examples of how long it takes to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=633"
  },
  {
    "text": "some of the tools we use often that are written in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=636"
  },
  {
    "text": "On a 10-core iMac, the improvements have ranged ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=639"
  },
  {
    "text": "from 5 percent all the way up to 25 percent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=641"
  },
  {
    "text": "Next, there are improvements to the speed of type checking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=646"
  },
  {
    "text": "This year, we improved the type-checker performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=649"
  },
  {
    "text": "by reimplementing a key part of the generics system -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=652"
  },
  {
    "text": "the part that computes a function signature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=656"
  },
  {
    "text": "from things like protocols and \"where\" clauses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=658"
  },
  {
    "text": "In the old implementation, time and memory usage ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=660"
  },
  {
    "text": "could scale exponentially as more protocols were involved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=663"
  },
  {
    "text": "For example, here, we have a complicated set of protocols ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=667"
  },
  {
    "text": "that define a coordinate system, with a lot ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=670"
  },
  {
    "text": "of generic requirements on the many associated types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=673"
  },
  {
    "text": "Previously, this would take 17 seconds to type-check this code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=676"
  },
  {
    "text": "But now, in Swift 5.7, this example is able ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=680"
  },
  {
    "text": "to type-check significantly quicker, in under a second. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=684"
  },
  {
    "text": "We also have some equally impressive runtime improvements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=688"
  },
  {
    "text": "Before Swift 5.7, we've seen protocol checking on app startup ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=692"
  },
  {
    "text": "take as long as four seconds on iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=696"
  },
  {
    "text": "Protocols needed to be computed every time we launched apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=699"
  },
  {
    "text": "resulting in launch times that got longer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=702"
  },
  {
    "text": "the more protocols you added. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=704"
  },
  {
    "text": "Now, they're cached. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=706"
  },
  {
    "text": "Depending on how an app was written ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=708"
  },
  {
    "text": "and how many protocols it used, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=710"
  },
  {
    "text": "this can mean launch times being cut in half in some apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=712"
  },
  {
    "text": "when running on iOS 16. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=715"
  },
  {
    "text": "The session \"Improve app size and runtime performance\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=718"
  },
  {
    "text": "will dive deeper into how you can leverage ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=721"
  },
  {
    "text": "these improvements in your own application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=723"
  },
  {
    "text": "Now, it's time for something I'm sure a lot of you ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=727"
  },
  {
    "text": "have been eager to hear about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=729"
  },
  {
    "text": "Last year, we introduced the new concurrency model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=732"
  },
  {
    "text": "bringing together actors and async/await. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=735"
  },
  {
    "text": "This had a transformative effect on the concurrency architecture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=739"
  },
  {
    "text": "of your applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=743"
  },
  {
    "text": "Async/await and actors are safer and easier than callbacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=745"
  },
  {
    "text": "and manual queue management. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=749"
  },
  {
    "text": "This year, we further fleshed out the model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=751"
  },
  {
    "text": "with data race safety at the forefront. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=754"
  },
  {
    "text": "Because concurrency was such a fundamental ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=757"
  },
  {
    "text": "and important improvement to your app's codebase, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=759"
  },
  {
    "text": "we made it possible to back-deploy these changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=761"
  },
  {
    "text": "all the way back to iOS 13 and macOS Catalina. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=764"
  },
  {
    "text": "In order to deploy to older operating systems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=768"
  },
  {
    "text": "your app bundles a copy of the Swift 5.5 concurrency runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=770"
  },
  {
    "text": "for older OSes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=774"
  },
  {
    "text": "This is similar to back-deploying Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=775"
  },
  {
    "text": "to operating systems before ABI stability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=778"
  },
  {
    "text": "Next, we've taken this model in new directions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=781"
  },
  {
    "text": "We've introduced language features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=785"
  },
  {
    "text": "and supporting packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=786"
  },
  {
    "text": "First, let's talk about data race avoidance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=788"
  },
  {
    "text": "Before I jump into that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=792"
  },
  {
    "text": "I should probably take a step back ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=794"
  },
  {
    "text": "and say that one of the really important features of Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=795"
  },
  {
    "text": "is memory safety by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=798"
  },
  {
    "text": "Swift users can't do things with unpredictable behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=800"
  },
  {
    "text": "like reading a value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=803"
  },
  {
    "text": "while you're in the middle of modifying it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=805"
  },
  {
    "text": "In this example, we're removing all of the numbers in an array ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=807"
  },
  {
    "text": "that match the same array's count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=811"
  },
  {
    "text": "Initially, the array's count is 3, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=813"
  },
  {
    "text": "so we'll remove the 3 from the array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=816"
  },
  {
    "text": "But once we've done that, the count will be 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=818"
  },
  {
    "text": "Do we remove the 3 and the 2 from the array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=821"
  },
  {
    "text": "or just the 3? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=824"
  },
  {
    "text": "The answer is neither. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=826"
  },
  {
    "text": "Swift will prevent you from doing this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=828"
  },
  {
    "text": "because it's not safe to access the array's count ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=830"
  },
  {
    "text": "while you're in the middle of modifying it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=832"
  },
  {
    "text": "Our goal is to do something similar for thread safety. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=835"
  },
  {
    "text": "We envision a language ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=838"
  },
  {
    "text": "that eliminates low-level data races by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=840"
  },
  {
    "text": "In other words, we want to prevent concurrency bugs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=843"
  },
  {
    "text": "that can cause unpredictable behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=846"
  },
  {
    "text": "Here's another example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=849"
  },
  {
    "text": "Using the same number's array, we create a background task ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=850"
  },
  {
    "text": "that appends 0 to the array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=854"
  },
  {
    "text": "and then we remove the array's last element. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=857"
  },
  {
    "text": "But wait, does removing the last element ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=860"
  },
  {
    "text": "happen before or after we append 0? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=863"
  },
  {
    "text": "The answer, again, is neither. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=866"
  },
  {
    "text": "Swift will block you from doing this because it's not safe ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=869"
  },
  {
    "text": "to modify the array from a background task ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=872"
  },
  {
    "text": "without synchronizing access with something like an actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=874"
  },
  {
    "text": "Actors were the first major step towards eliminating data races. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=878"
  },
  {
    "text": "This year we've refined the concurrency model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=882"
  },
  {
    "text": "to push us even further towards the end goal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=885"
  },
  {
    "text": "You can think of each actor as its own island, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=889"
  },
  {
    "text": "isolated from everything else in the sea of concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=892"
  },
  {
    "text": "But what happens when different threads want to query ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=896"
  },
  {
    "text": "the information stored by each of the isolated actors? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=898"
  },
  {
    "text": "This metaphor will be explored in depth in the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=903"
  },
  {
    "text": "\"Eliminate data races using Swift Concurrency.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=906"
  },
  {
    "text": "From memory safety to thread safety by default; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=910"
  },
  {
    "text": "that is the goal for Swift 6. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=914"
  },
  {
    "text": "To get us there, we first improved last year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=916"
  },
  {
    "text": "concurrency model with the new language features ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=919"
  },
  {
    "text": "I just mentioned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=921"
  },
  {
    "text": "The second thing I haven't mentioned yet ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=923"
  },
  {
    "text": "is the new opt-in safety checks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=924"
  },
  {
    "text": "that identify potential data races. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=926"
  },
  {
    "text": "You can experiment with stricter concurrency checking ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=930"
  },
  {
    "text": "by enabling it in your build settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=932"
  },
  {
    "text": "Let's take a look at actors again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=936"
  },
  {
    "text": "We can take this notion of actor isolation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=938"
  },
  {
    "text": "and take it further with distributed actors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=941"
  },
  {
    "text": "Distributed actors put those islands on different machines ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=944"
  },
  {
    "text": "with a network between them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=947"
  },
  {
    "text": "This new language feature makes developing distributed systems ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=949"
  },
  {
    "text": "much simpler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=952"
  },
  {
    "text": "Let's say you want to create a game app; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=954"
  },
  {
    "text": "you can now easily write the back end in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=956"
  },
  {
    "text": "Here, the distributed actor is like an actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=959"
  },
  {
    "text": "but it might be on a different machine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=962"
  },
  {
    "text": "In this example, we're looking at computer player ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=964"
  },
  {
    "text": "that will maintain state during a game with a user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=967"
  },
  {
    "text": "The distributed keyword can also be added to a function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=971"
  },
  {
    "text": "that we expect will need to be called ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=974"
  },
  {
    "text": "on an actor that might be on a remote machine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=975"
  },
  {
    "text": "Let's add another function called endOfRound. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=979"
  },
  {
    "text": "It will loop over the players and call makeMove on each one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=982"
  },
  {
    "text": "Some of these players might be local or remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=986"
  },
  {
    "text": "but we have the benefit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=988"
  },
  {
    "text": "of not needing to care about which is which. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=990"
  },
  {
    "text": "The only difference from a regular actor call ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=993"
  },
  {
    "text": "is that a distributed actor call can potentially fail ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=995"
  },
  {
    "text": "because of network errors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=998"
  },
  {
    "text": "In the event of a network failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1000"
  },
  {
    "text": "the actor method would throw an error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1001"
  },
  {
    "text": "So, you need to add the try keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1004"
  },
  {
    "text": "as well as the usual await keyword that's needed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1006"
  },
  {
    "text": "when you call a function outside of the actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1009"
  },
  {
    "text": "Building on these core language primitives, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1012"
  },
  {
    "text": "we also built an open source Distributed Actors package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1014"
  },
  {
    "text": "that is focused on building server-side, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1017"
  },
  {
    "text": "clustered distributed systems in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1019"
  },
  {
    "text": "The package includes an integrated networking layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1022"
  },
  {
    "text": "using SwiftNIO and implements the SWIM consensus protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1025"
  },
  {
    "text": "to manage state across the cluster. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1029"
  },
  {
    "text": "The \"Meet distributed actors in Swift\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1031"
  },
  {
    "text": "will go into more details on how to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1033"
  },
  {
    "text": "distributed systems with these new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1035"
  },
  {
    "text": "We also launched a new set of open source algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1039"
  },
  {
    "text": "to provide easy out-of-the-box solutions to common operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1043"
  },
  {
    "text": "when dealing with AsyncSequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1047"
  },
  {
    "text": "which was released with Swift 5.5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1049"
  },
  {
    "text": "Releasing these APIs as a package ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1052"
  },
  {
    "text": "gives developers flexibility in deploying across platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1054"
  },
  {
    "text": "and operating system versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1057"
  },
  {
    "text": "There are several ways to combine multiple async sequences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1060"
  },
  {
    "text": "and to group values into collections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1064"
  },
  {
    "text": "These are just some of the algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1067"
  },
  {
    "text": "included in the package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1069"
  },
  {
    "text": "Check out the \"Meet Swift Async Algorithms\" talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1071"
  },
  {
    "text": "to see how you can use this new powerful API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1073"
  },
  {
    "text": "But there's another aspect of concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1078"
  },
  {
    "text": "which is performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1080"
  },
  {
    "text": "This year, with actor prioritization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1082"
  },
  {
    "text": "actors now execute the highest-priority work first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1084"
  },
  {
    "text": "And continuing our deep integration ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1088"
  },
  {
    "text": "with the operating system scheduler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1090"
  },
  {
    "text": "the model has priority-inversion prevention built in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1092"
  },
  {
    "text": "so less important work can't block higher-priority work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1095"
  },
  {
    "text": "Historically, it has been really hard to visualize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1100"
  },
  {
    "text": "the performance impact of concurrency in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1103"
  },
  {
    "text": "But now, we have a great new tool for doing exactly that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1106"
  },
  {
    "text": "The new Swift Concurrency view in Instruments ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1111"
  },
  {
    "text": "can help you investigate performance issues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1114"
  },
  {
    "text": "The Swift Tasks and Swift Actors instruments ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1116"
  },
  {
    "text": "provide a full suite of tools to help you visualize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1119"
  },
  {
    "text": "and optimize your concurrency code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1122"
  },
  {
    "text": "At the top level, the Swift Tasks Instrument ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1126"
  },
  {
    "text": "provides useful statistics, including the number of tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1129"
  },
  {
    "text": "running simultaneously and the total tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1132"
  },
  {
    "text": "that have been created up until that point in time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1134"
  },
  {
    "text": "In the bottom half of this window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1138"
  },
  {
    "text": "you can see what's referred to as a Task Forest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1139"
  },
  {
    "text": "It provides a graphical representation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1143"
  },
  {
    "text": "of the parent-child relationships ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1146"
  },
  {
    "text": "between tasks in structured concurrent code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1147"
  },
  {
    "text": "This is just one of the detailed views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1151"
  },
  {
    "text": "for the Swift Actor Instrument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1153"
  },
  {
    "text": "To learn how to use this exciting new tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1156"
  },
  {
    "text": "you'll want to hop over to the talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1159"
  },
  {
    "text": "\"Visualize and optimize Swift concurrency.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1160"
  },
  {
    "text": "And don't forget to give those new packages a try. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1164"
  },
  {
    "text": "Don't be shy to let us know how it's going on the forums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1166"
  },
  {
    "text": "Now, I'll hand it over to Becca to talk about ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1169"
  },
  {
    "text": "the many improvements to Swift language usability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1172"
  },
  {
    "text": "Languages are tools, and there's a funny thing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1176"
  },
  {
    "text": "about tools -- they can really affect ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1178"
  },
  {
    "text": "the things you build with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1180"
  },
  {
    "text": "When all you have is a hammer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1182"
  },
  {
    "text": "you're going to build things with nails instead of screws. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1184"
  },
  {
    "text": "And even if you have a full set of tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1188"
  },
  {
    "text": "if your hammer has a big, grippy handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1190"
  },
  {
    "text": "while your screwdriver is plasticky and hard to hold, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1192"
  },
  {
    "text": "you might still lean towards the nails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1195"
  },
  {
    "text": "A language is the same way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1198"
  },
  {
    "text": "If Swift has a good tool for expressing something, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1199"
  },
  {
    "text": "people will use it more often. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1202"
  },
  {
    "text": "And this year, Swift's tools for expressing what you want ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1205"
  },
  {
    "text": "your code to do have improved in many ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1207"
  },
  {
    "text": "Some of these changes are simple conveniences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1211"
  },
  {
    "text": "for things you do often. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1213"
  },
  {
    "text": "For example, it's really common in Swift to use if let ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1215"
  },
  {
    "text": "with the same name on both sides of the equal sign. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1218"
  },
  {
    "text": "After all, there probably isn't a better name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1222"
  },
  {
    "text": "for the unwrapped value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1224"
  },
  {
    "text": "than the name you gave the optional one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1225"
  },
  {
    "text": "But when the name is really long, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1228"
  },
  {
    "text": "that repetition starts to get cumbersome. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1230"
  },
  {
    "text": "You might be tempted to abbreviate the name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1233"
  },
  {
    "text": "but then your code becomes kind of cryptic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1235"
  },
  {
    "text": "And if you later rename the optional variable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1239"
  },
  {
    "text": "the abbreviation might get out of sync. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1241"
  },
  {
    "text": "Swift 5.7 introduces a new shorthand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1245"
  },
  {
    "text": "for this common pattern. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1247"
  },
  {
    "text": "If you're unwrapping an optional ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1249"
  },
  {
    "text": "and want the unwrapped value to have the same name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1251"
  },
  {
    "text": "just drop the right-hand side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1253"
  },
  {
    "text": "Swift will assume it's the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1255"
  },
  {
    "text": "And of course, this also works with guard, too, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1258"
  },
  {
    "text": "and even while, for that matter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1260"
  },
  {
    "text": "We also looked at places where a feature suddenly stops working ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1264"
  },
  {
    "text": "when you make a minor change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1266"
  },
  {
    "text": "For instance, Swift has always been able to figure out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1269"
  },
  {
    "text": "what type a call will return based on the code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1271"
  },
  {
    "text": "written inside a one-statement closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1273"
  },
  {
    "text": "In this compactMap call, the closure returns the value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1276"
  },
  {
    "text": "of parseLine, and the parseLine function ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1279"
  },
  {
    "text": "returns a MailmapEntry, so Swift can figure out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1282"
  },
  {
    "text": "that entries should be an array of MailmapEntry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1285"
  },
  {
    "text": "This now works for more complicated closures ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1290"
  },
  {
    "text": "that have multiple statements or control flow features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1292"
  },
  {
    "text": "So you can use do-catch, or if...else, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1295"
  },
  {
    "text": "or just add a print call, without having ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1297"
  },
  {
    "text": "to manually specify the closure's result type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1299"
  },
  {
    "text": "Another thing we looked at is danger flags ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1303"
  },
  {
    "text": "that aren't really flagging any actual danger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1305"
  },
  {
    "text": "Swift is very concerned with type and memory safety. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1309"
  },
  {
    "text": "To keep you from making mistakes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1312"
  },
  {
    "text": "it never automatically converts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1314"
  },
  {
    "text": "between pointers with different pointer types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1316"
  },
  {
    "text": "nor between raw pointers and typed pointers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1318"
  },
  {
    "text": "This is very different from C, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1321"
  },
  {
    "text": "which allows certain conversions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1322"
  },
  {
    "text": "For example, you can change the signed-ness of the pointee, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1325"
  },
  {
    "text": "or cast any pointer to char star to access it as bytes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1327"
  },
  {
    "text": "without violating any of C's pointer rules. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1331"
  },
  {
    "text": "But sometimes these differences in pointer behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1335"
  },
  {
    "text": "will cause problems when a C API is imported into Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1337"
  },
  {
    "text": "The original developer may have designed their APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1342"
  },
  {
    "text": "with slight mismatches that are handled ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1344"
  },
  {
    "text": "by automatic conversions in C but are errors in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1346"
  },
  {
    "text": "In Swift, accessing a pointer of one type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1350"
  },
  {
    "text": "as though it were a different type is very dangerous, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1353"
  },
  {
    "text": "so you have to describe what you're doing very explicitly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1355"
  },
  {
    "text": "But that's all pointless if we're passing the pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1359"
  },
  {
    "text": "directly to C, because in C, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1361"
  },
  {
    "text": "that pointer mismatch is perfectly legal! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1363"
  },
  {
    "text": "So in this case, we've treated something really straightforward ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1367"
  },
  {
    "text": "as though it were dangerous. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1370"
  },
  {
    "text": "This matters because, as much as Swift values type safety, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1372"
  },
  {
    "text": "it also values easy access to C-family code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1375"
  },
  {
    "text": "That's why C and Objective-C interop ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1380"
  },
  {
    "text": "are so rich and seamless, and it's why the Swift project ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1381"
  },
  {
    "text": "formed the C++ working group Angela mentioned earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1385"
  },
  {
    "text": "to start building equally capable C++ interop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1388"
  },
  {
    "text": "We don't want using C functions like these ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1391"
  },
  {
    "text": "to be unnecessarily painful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1393"
  },
  {
    "text": "So Swift now has a separate set of rules ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1396"
  },
  {
    "text": "for calls to imported functions and methods. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1398"
  },
  {
    "text": "It allows pointer conversions that would be legal in C ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1401"
  },
  {
    "text": "even though they normally aren't in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1404"
  },
  {
    "text": "That way, your Swift code can use these APIs seamlessly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1406"
  },
  {
    "text": "So far we've talked about small improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1411"
  },
  {
    "text": "to the tools you already had. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1413"
  },
  {
    "text": "But this year, Swift also has a brand-new tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1415"
  },
  {
    "text": "for extracting information from strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1418"
  },
  {
    "text": "Here's a function that parses some information ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1421"
  },
  {
    "text": "out of a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1423"
  },
  {
    "text": "This sort of task has always been ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1425"
  },
  {
    "text": "a bit of a challenge in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1426"
  },
  {
    "text": "You end up searching, splitting, and slicing over and over ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1428"
  },
  {
    "text": "until you get what you want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1431"
  },
  {
    "text": "When people notice this, they tend to focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1434"
  },
  {
    "text": "on the little things, like how wordy it can be ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1436"
  },
  {
    "text": "to manipulate string indices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1438"
  },
  {
    "text": "but I think that's kind of missing the bigger picture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1440"
  },
  {
    "text": "Because even if we changed this syntax, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1443"
  },
  {
    "text": "it doesn't help you answer the basic question you're asking ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1446"
  },
  {
    "text": "when you look at this code -- what does the line variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1449"
  },
  {
    "text": "that's passed into it actually look like? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1452"
  },
  {
    "text": "What sort of string is it trying to take apart? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1455"
  },
  {
    "text": "If you stare at it long enough, you might realize ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1458"
  },
  {
    "text": "that it's parsing a simplified version of a mailmap -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1460"
  },
  {
    "text": "a file you put in a git repository ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1463"
  },
  {
    "text": "to correct a developer's name in old commits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1465"
  },
  {
    "text": "But extracting that information by searching and slicing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1469"
  },
  {
    "text": "is so involved that it's hard to figure that out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1471"
  },
  {
    "text": "You get so lost in how to slice up the string ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1475"
  },
  {
    "text": "that you kind of lose track of what that string is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1478"
  },
  {
    "text": "The problem is not these two expressions; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1482"
  },
  {
    "text": "the problem is the whole thing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1485"
  },
  {
    "text": "We need to rip out all of this ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1488"
  },
  {
    "text": "and replace it with something better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1489"
  },
  {
    "text": "We need a different approach; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1492"
  },
  {
    "text": "one where your code sort of draws a picture ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1494"
  },
  {
    "text": "of the string you want to match, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1496"
  },
  {
    "text": "and the language figures out how to do it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1498"
  },
  {
    "text": "A declarative approach, not an imperative one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1501"
  },
  {
    "text": "In Swift 5.7, you can now do that by writing a regex. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1505"
  },
  {
    "text": "A regex is a way to describe a pattern in a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1510"
  },
  {
    "text": "For over 50 years, languages and tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1514"
  },
  {
    "text": "have allowed developers to write regexes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1516"
  },
  {
    "text": "in a dense, information-packed syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1518"
  },
  {
    "text": "Some of you already use them in the Xcode find bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1521"
  },
  {
    "text": "in command-line tools like grep, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1524"
  },
  {
    "text": "in Foundation's NSRegularExpression class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1526"
  },
  {
    "text": "or in other programming languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1529"
  },
  {
    "text": "That syntax is now supported by Swift's regex literals, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1531"
  },
  {
    "text": "and it works just like it does in any other developer tool. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1534"
  },
  {
    "text": "But some of you haven't used regexes before ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1537"
  },
  {
    "text": "and you're probably going, \"Is that real code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1540"
  },
  {
    "text": "or did a cat walk across her keyboard?\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1542"
  },
  {
    "text": "And I don't blame you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1546"
  },
  {
    "text": "Regex literals are written in symbols and mnemonics ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1547"
  },
  {
    "text": "that you have to memorize in order to read them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1550"
  },
  {
    "text": "To someone who knows the language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1553"
  },
  {
    "text": "even the gnarliest parts of this regex, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1555"
  },
  {
    "text": "like the part that matches the developer's name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1556"
  },
  {
    "text": "are just combinations of several simple matching rules. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1559"
  },
  {
    "text": "But that's a lot of behavior to cram into 11 characters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1562"
  },
  {
    "text": "Regex literals are so compact that even experienced developers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1566"
  },
  {
    "text": "sometimes need a minute to understand a complicated one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1570"
  },
  {
    "text": "But what if you could write the same kind of matching rules, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1573"
  },
  {
    "text": "just with words instead of symbols? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1575"
  },
  {
    "text": "That seems like it'd be easier to understand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1578"
  },
  {
    "text": "In fact, put it all together, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1581"
  },
  {
    "text": "and you get something that looks a lot like SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1583"
  },
  {
    "text": "That'd be a great alternative to a regex literal, wouldn't it? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1586"
  },
  {
    "text": "So it's a good thing Swift supports that! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1590"
  },
  {
    "text": "The RegexBuilder library provides a whole new ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1593"
  },
  {
    "text": "SwiftUI-style language for regexes that's easier to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1595"
  },
  {
    "text": "and more readable than the traditional syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1599"
  },
  {
    "text": "It can do the same things a regex literal can, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1602"
  },
  {
    "text": "but it describes its behavior in words you can understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1604"
  },
  {
    "text": "or look up, instead of symbols and abbreviations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1607"
  },
  {
    "text": "you have to memorize. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1610"
  },
  {
    "text": "Regex builders are great for beginners, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1612"
  },
  {
    "text": "but this is far from a beginner-only feature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1614"
  },
  {
    "text": "It has powerful capabilities that go way beyond ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1617"
  },
  {
    "text": "what a regex literal can do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1619"
  },
  {
    "text": "To start with, you can turn a regex ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1621"
  },
  {
    "text": "into a reusable regex component, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1623"
  },
  {
    "text": "just as you can turn a SwiftUI view hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1625"
  },
  {
    "text": "into a view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1628"
  },
  {
    "text": "You can use these components from other regexes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1630"
  },
  {
    "text": "created with the builder syntax, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1632"
  },
  {
    "text": "and you can even make them recursive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1634"
  },
  {
    "text": "Regex builders also support dropping some Swift types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1637"
  },
  {
    "text": "directly into a regex. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1639"
  },
  {
    "text": "For example, string literals just match ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1642"
  },
  {
    "text": "the exact text inside them -- no special escaping needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1644"
  },
  {
    "text": "You can also use regex literals ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1648"
  },
  {
    "text": "in the middle of a regex builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1650"
  },
  {
    "text": "So you can strike a balance between the clarity ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1652"
  },
  {
    "text": "of a regex builder and the conciseness of a regex literal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1654"
  },
  {
    "text": "And other types -- like this Foundation date-format style -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1658"
  },
  {
    "text": "can integrate custom parsing logic with regex builders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1661"
  },
  {
    "text": "and even convert the data to a richer type before capturing it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1664"
  },
  {
    "text": "Finally, no matter which syntax you use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1668"
  },
  {
    "text": "regexes support a bunch of useful matching methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1670"
  },
  {
    "text": "and strongly typed captures that are easy to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1674"
  },
  {
    "text": "Now, for the regex nerds who have been squirming ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1678"
  },
  {
    "text": "in their seats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1680"
  },
  {
    "text": "Swift Regex uses a brand-new open source matching engine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1682"
  },
  {
    "text": "with a feature set comparable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1685"
  },
  {
    "text": "to the most advanced regex implementations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1686"
  },
  {
    "text": "The literal syntax is compatible with the Unicode regex standard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1689"
  },
  {
    "text": "and it has an uncommon level of Unicode correctness. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1693"
  },
  {
    "text": "For instance, dot matches a whole character by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1696"
  },
  {
    "text": "not a Unicode.Scalar or a UTF-8 byte. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1699"
  },
  {
    "text": "To use Swift Regex, your app will need to be running ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1702"
  },
  {
    "text": "on an OS with the Swift Regex engine built into it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1705"
  },
  {
    "text": "like macOS 13 or iOS 16. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1708"
  },
  {
    "text": "Swift Regex is an entire language -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1712"
  },
  {
    "text": "well, two languages, really -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1714"
  },
  {
    "text": "so there's much more to say about it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1716"
  },
  {
    "text": "These two sessions -- \"Meet Swift Regex\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1718"
  },
  {
    "text": "and \"Swift Regex: Beyond The Basics\" -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1720"
  },
  {
    "text": "will give you lots more details about using it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1723"
  },
  {
    "text": "Finally, there's one place ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1726"
  },
  {
    "text": "where we took a comprehensive look at the tools we have ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1728"
  },
  {
    "text": "and made a bunch of changes to improve them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1730"
  },
  {
    "text": "That's in generics and protocols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1733"
  },
  {
    "text": "To show you how these tools have improved, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1736"
  },
  {
    "text": "I'll need an example protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1738"
  },
  {
    "text": "Let's say you're writing a git client ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1740"
  },
  {
    "text": "and you have to represent mailmaps in two different ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1742"
  },
  {
    "text": "When you're displaying commits, you use a type with a dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1745"
  },
  {
    "text": "to quickly look up names. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1748"
  },
  {
    "text": "But when you're letting users edit the mailmap, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1751"
  },
  {
    "text": "you use a type with an array to keep the entries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1753"
  },
  {
    "text": "in their original order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1756"
  },
  {
    "text": "And you have a protocol called Mailmap ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1758"
  },
  {
    "text": "that both of them conform to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1760"
  },
  {
    "text": "so your mailmap parser can add entries to either type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1762"
  },
  {
    "text": "But there are two ways the parser could use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1766"
  },
  {
    "text": "the Mailmap protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1768"
  },
  {
    "text": "I've written two different versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1770"
  },
  {
    "text": "of this addEntries function to illustrate them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1771"
  },
  {
    "text": "but it's actually kind of hard to explain ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1774"
  },
  {
    "text": "how they're different, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1776"
  },
  {
    "text": "because Swift is using the same syntax for two different things. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1777"
  },
  {
    "text": "It turns out that the word \"Mailmap\" means one thing here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1781"
  },
  {
    "text": "but it means something subtly different here.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1785"
  },
  {
    "text": "When you name a protocol in an inheritance list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1790"
  },
  {
    "text": "generic parameter list, generic conformance constraint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1793"
  },
  {
    "text": "or an opaque result type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1796"
  },
  {
    "text": "it means \"an instance that conforms to this protocol.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1798"
  },
  {
    "text": "But in a variable type, a generic argument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1801"
  },
  {
    "text": "a generic same-type constraint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1804"
  },
  {
    "text": "or a function parameter or result type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1806"
  },
  {
    "text": "it actually means \"a box which contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1808"
  },
  {
    "text": "an instance that conforms to this protocol.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1810"
  },
  {
    "text": "This distinction is important because the box ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1814"
  },
  {
    "text": "typically uses more space, takes more time to operate on, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1816"
  },
  {
    "text": "and doesn't have all of the capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1820"
  },
  {
    "text": "of the instance inside it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1822"
  },
  {
    "text": "But the places where you're using a box ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1824"
  },
  {
    "text": "look just like the places where you aren't, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1825"
  },
  {
    "text": "so it's hard to figure out if you're using one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1828"
  },
  {
    "text": "Swift 5.7 fixes this oversight. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1831"
  },
  {
    "text": "When you're using one of these boxes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1834"
  },
  {
    "text": "containing a conforming type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1836"
  },
  {
    "text": "Swift will now expect you to write the any keyword. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1838"
  },
  {
    "text": "This is not mandatory in code that was valid before Swift 5.7, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1841"
  },
  {
    "text": "but it is encouraged and you will see it ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1845"
  },
  {
    "text": "in generated interfaces and error messages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1847"
  },
  {
    "text": "even if you don't write it out explicitly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1850"
  },
  {
    "text": "So the preferred way to write all of those things ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1853"
  },
  {
    "text": "in the right-hand column is with the any keyword. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1855"
  },
  {
    "text": "If you do that, you'll be able to tell ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1858"
  },
  {
    "text": "when you're using one of these boxes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1860"
  },
  {
    "text": "Now that the any keyword marks one of the parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1863"
  },
  {
    "text": "in this example, it's a lot easier to explain ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1865"
  },
  {
    "text": "the difference between these two functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1867"
  },
  {
    "text": "addEntries1 takes the Mailmap as a generic type; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1870"
  },
  {
    "text": "addEntries2 takes it as an any type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1874"
  },
  {
    "text": "And it's also easier for error messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1877"
  },
  {
    "text": "to explain what's happening ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1878"
  },
  {
    "text": "when you hit one of the limitations of any types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1880"
  },
  {
    "text": "For instance, this mergeMailmaps function tries to pass ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1883"
  },
  {
    "text": "an any Mailmap to a generic Mailmap parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1886"
  },
  {
    "text": "This used to produce an error ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1890"
  },
  {
    "text": "saying that Mailmap cannot conform to itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1891"
  },
  {
    "text": "which always seemed kind of paradoxical. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1894"
  },
  {
    "text": "But now that we have the concept of any types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1897"
  },
  {
    "text": "we can explain what's happening more clearly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1899"
  },
  {
    "text": "The problem is that any Mailmap -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1902"
  },
  {
    "text": "the box containing a mailmap -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1904"
  },
  {
    "text": "doesn't conform to the Mailmap protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1907"
  },
  {
    "text": "But the box is what you're trying to pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1909"
  },
  {
    "text": "and it doesn't fit into the generic parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1911"
  },
  {
    "text": "If you want to pass the instance inside the box here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1915"
  },
  {
    "text": "you'd have to somehow open up the box, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1917"
  },
  {
    "text": "take out the mailmap inside it, and pass that instead. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1920"
  },
  {
    "text": "But actually, in simple cases like this one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1924"
  },
  {
    "text": "Swift will now just do that for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1928"
  },
  {
    "text": "Open up the box, take out the instance inside it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1930"
  },
  {
    "text": "and pass it to the generic parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1933"
  },
  {
    "text": "So you won't be seeing this error message ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1936"
  },
  {
    "text": "nearly as much anymore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1937"
  },
  {
    "text": "But there's an even more exciting improvement ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1939"
  },
  {
    "text": "to any types than that one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1941"
  },
  {
    "text": "Previously, a protocol could not be used as an any type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1943"
  },
  {
    "text": "if it either used the self type or had associated types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1946"
  },
  {
    "text": "or even just conformed to a protocol that did, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1950"
  },
  {
    "text": "like Equatable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1952"
  },
  {
    "text": "But in Swift 5.7, this error is just -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1954"
  },
  {
    "text": "poof -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1958"
  },
  {
    "text": "gone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1959"
  },
  {
    "text": "A lot of developers have struggled with this one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1962"
  },
  {
    "text": "so we're thrilled to have fixed it at the source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1964"
  },
  {
    "text": "Now, that's exciting enough just for protocols like Mailmap, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1967"
  },
  {
    "text": "but this goes even further. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1970"
  },
  {
    "text": "Because even very sophisticated protocols, like Collection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1972"
  },
  {
    "text": "can be used as any types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1975"
  },
  {
    "text": "You can even specify the element type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1978"
  },
  {
    "text": "thanks to a new feature called \"primary associated types.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1980"
  },
  {
    "text": "A lot of associated types ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1984"
  },
  {
    "text": "are basically just implementation details. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1985"
  },
  {
    "text": "You usually don't care which type a collection uses ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1988"
  },
  {
    "text": "for its index, iterator, or subsequence; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1991"
  },
  {
    "text": "you just need to use the type it supports. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1993"
  },
  {
    "text": "But its Element is a different story. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=1996"
  },
  {
    "text": "You might not always care exactly which Element type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2000"
  },
  {
    "text": "a collection uses, but you're probably ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2001"
  },
  {
    "text": "going to do something with the elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2003"
  },
  {
    "text": "so you'll need to constrain them or return them or something. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2005"
  },
  {
    "text": "When you have an associated type like Element ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2009"
  },
  {
    "text": "that nearly every user of a protocol will care about, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2012"
  },
  {
    "text": "you can put its name after the protocol's name ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2015"
  },
  {
    "text": "in angle brackets to make it a primary associated type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2017"
  },
  {
    "text": "Once you do that, you can constrain the protocol's ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2021"
  },
  {
    "text": "primary associated types with the angle bracket syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2023"
  },
  {
    "text": "pretty much anywhere you can write the protocol's name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2026"
  },
  {
    "text": "including in any Collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2029"
  },
  {
    "text": "Now, some of you might be looking at this type and going, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2032"
  },
  {
    "text": "\"Wait a minute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2034"
  },
  {
    "text": "Isn't there already something called AnyCollection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2037"
  },
  {
    "text": "just run together and with the 'any' capitalized?\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2039"
  },
  {
    "text": "And you're right, there is! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2043"
  },
  {
    "text": "The old AnyCollection is a type-erasing wrapper -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2046"
  },
  {
    "text": "a handwritten struct which serves the same purpose ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2049"
  },
  {
    "text": "as an any type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2052"
  },
  {
    "text": "The difference is that the AnyCollection struct ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2053"
  },
  {
    "text": "is just line after line of the most boring boilerplate code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2055"
  },
  {
    "text": "you've ever seen in your life; whereas the any type ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2058"
  },
  {
    "text": "is a built-in language feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2062"
  },
  {
    "text": "that does basically the same thing -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2064"
  },
  {
    "text": "for free! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2066"
  },
  {
    "text": "Now, the AnyCollection struct will stick around ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2067"
  },
  {
    "text": "for backwards compatibility and because it has ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2069"
  },
  {
    "text": "a couple of features that any types can't quite match yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2071"
  },
  {
    "text": "But if you have your own type-erasing wrappers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2074"
  },
  {
    "text": "in your code, you might want to see if you can reimplement them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2076"
  },
  {
    "text": "using built-in any types instead of box classes or closures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2080"
  },
  {
    "text": "Or maybe even just replace them with type aliases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2084"
  },
  {
    "text": "So Swift has dramatically improved any types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2087"
  },
  {
    "text": "It's introduced the any keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2091"
  },
  {
    "text": "so you can see where you're using them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2092"
  },
  {
    "text": "It allows you to pass them to generic arguments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2095"
  },
  {
    "text": "It's abolished the restriction that kept many protocols ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2098"
  },
  {
    "text": "from being used with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2101"
  },
  {
    "text": "And it even lets you constrain ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2103"
  },
  {
    "text": "an any type's primary associated types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2104"
  },
  {
    "text": "But even with all of those improvements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2108"
  },
  {
    "text": "any types still have limitations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2110"
  },
  {
    "text": "For example, even though you can now use any Mailmaps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2113"
  },
  {
    "text": "when Mailmap conforms to Equatable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2116"
  },
  {
    "text": "you still can't use the equals operator with them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2118"
  },
  {
    "text": "because the equals operator requires both mailmaps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2121"
  },
  {
    "text": "to have the same concrete type, but that's not guaranteed ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2124"
  },
  {
    "text": "when you're using two any Mailmaps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2127"
  },
  {
    "text": "So even though Swift has improved any types a lot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2130"
  },
  {
    "text": "they still have important limitations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2132"
  },
  {
    "text": "in both capabilities and performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2134"
  },
  {
    "text": "And that's why a lot of the time, you shouldn't use them -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2137"
  },
  {
    "text": "you should use generics instead. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2141"
  },
  {
    "text": "So let's go back to the two versions of addEntries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2143"
  },
  {
    "text": "and apply that wisdom. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2146"
  },
  {
    "text": "Both versions do exactly the same thing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2148"
  },
  {
    "text": "but the one on the top uses generic types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2150"
  },
  {
    "text": "and the one on the bottom uses any types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2153"
  },
  {
    "text": "The generic version will likely be more efficient ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2156"
  },
  {
    "text": "and more capable, so you ought to use that one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2159"
  },
  {
    "text": "And yet, you're probably tempted to use any types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2162"
  },
  {
    "text": "because they're just so much easier to read and write. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2165"
  },
  {
    "text": "To write the generic version, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2168"
  },
  {
    "text": "you need to declare two generic type names, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2170"
  },
  {
    "text": "constrain them both, and finally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2172"
  },
  {
    "text": "use those generic type names as the types of the parameters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2174"
  },
  {
    "text": "That's just exhausting compared to writing \"any Collection\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2178"
  },
  {
    "text": "and \"any Mailmap.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2181"
  },
  {
    "text": "So you'd be tempted to use any types despite their drawbacks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2183"
  },
  {
    "text": "But that's the same thing I was talking about earlier -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2187"
  },
  {
    "text": "using your hammer instead of your screwdriver ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2190"
  },
  {
    "text": "because the hammer has a big, grippy handle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2192"
  },
  {
    "text": "You shouldn't have to make that choice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2194"
  },
  {
    "text": "So Swift is making generics just as easy to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2197"
  },
  {
    "text": "as any types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2200"
  },
  {
    "text": "If a generic parameter is only used in one place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2202"
  },
  {
    "text": "you can now write it with the some keyword as a shorthand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2204"
  },
  {
    "text": "And it even supports primary associated types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2208"
  },
  {
    "text": "so you can accept all collections of mailmap entries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2210"
  },
  {
    "text": "with code that's a lot easier to understand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2213"
  },
  {
    "text": "With that in your toolbox, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2215"
  },
  {
    "text": "there's no reason to avoid generics anymore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2217"
  },
  {
    "text": "If you have a choice between generics and any types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2220"
  },
  {
    "text": "generics will be just as easy to use -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2222"
  },
  {
    "text": "just write \"some\" instead of \"any\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2225"
  },
  {
    "text": "So you might as well use the best tool for the job. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2227"
  },
  {
    "text": "I've only scratched the surface of these changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2231"
  },
  {
    "text": "to protocols and generics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2233"
  },
  {
    "text": "For an in-depth look, as well as a great review ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2235"
  },
  {
    "text": "of all of Swift's generics features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2237"
  },
  {
    "text": "we have two more talks for you this year: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2239"
  },
  {
    "text": "\"Embrace Swift generics,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2241"
  },
  {
    "text": "and \"Design protocol interfaces in Swift.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2243"
  },
  {
    "text": "Now, Angela and I have talked about ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2248"
  },
  {
    "text": "nearly two dozen changes to Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2249"
  },
  {
    "text": "but there are lots more that we couldn't fit into this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2251"
  },
  {
    "text": "Every one of these changes was pitched, proposed, reviewed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2255"
  },
  {
    "text": "and accepted publicly in the Evolution board ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2258"
  },
  {
    "text": "on the Swift Forums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2261"
  },
  {
    "text": "And all of them were shaped and realized with the help ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2263"
  },
  {
    "text": "of community members from outside Apple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2265"
  },
  {
    "text": "If you're one of those people, thank you for making Swift 5.7 ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2268"
  },
  {
    "text": "the great release it is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2272"
  },
  {
    "text": "And if you want to help decide what comes next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2275"
  },
  {
    "text": "visit Swift.org/contributing to find out how to participate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2277"
  },
  {
    "text": "Thanks for your time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2282"
  },
  {
    "text": "And happy coding.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2283"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2286"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110354/?time=2288"
  }
]