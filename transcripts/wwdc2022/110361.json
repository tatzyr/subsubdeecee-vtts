[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=0"
  },
  {
    "text": "Suzy: Hello and welcome to \"Author fast and reliable tests for Xcode Cloud.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=10"
  },
  {
    "text": "I'm Suzy, and I work on XCTest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=15"
  },
  {
    "text": "In this session, I'm going to share the most effective ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=18"
  },
  {
    "text": "to start testing for Xcode Cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=21"
  },
  {
    "text": "Our teams designed Xcode Cloud to be a powerful tool for all developers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=24"
  },
  {
    "text": "In fact, we use it to test Xcode itself, and I love it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=30"
  },
  {
    "text": "One of my favorite features of Xcode Cloud ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=34"
  },
  {
    "text": "is its ability to substantially broaden a given test suite.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=36"
  },
  {
    "text": "By configuring most tests to run in the cloud, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=41"
  },
  {
    "text": "you now have a practical way to run tests on multiple destinations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=44"
  },
  {
    "text": "including those running differing operating system versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=48"
  },
  {
    "text": "to leverage diverse platforms such as an iPhone, iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=52"
  },
  {
    "text": "Apple Watch, Apple TV, and Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=56"
  },
  {
    "text": "and to run various test plan configurations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=60"
  },
  {
    "text": "allowing for runtime analysis tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=63"
  },
  {
    "text": "such as address and thread sanitizers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=65"
  },
  {
    "text": "Once we have passed such a thorough test suite, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=70"
  },
  {
    "text": "we can be confident the code is ready to ship. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=73"
  },
  {
    "text": "Offloading tests to Xcode Cloud allows for running a broader set of tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=76"
  },
  {
    "text": "without impacting the developers’ desktop cycle of code, compile, and test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=81"
  },
  {
    "text": "With this now expanded test suite, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=87"
  },
  {
    "text": "there is a potential for an increased number of unreliable tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=90"
  },
  {
    "text": "This situation can become unmanageable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=94"
  },
  {
    "text": "As such, ensuring reliability is essential. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=97"
  },
  {
    "text": "In addition to reliability, such a large number of tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=102"
  },
  {
    "text": "also needs to run efficiently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=106"
  },
  {
    "text": "so as to limit their impact on the continuous integration process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=108"
  },
  {
    "text": "Let’s address reliability first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=113"
  },
  {
    "text": "I will demonstrate how to author more reliable tests for Xcode Cloud ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=115"
  },
  {
    "text": "using Food Truck. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=119"
  },
  {
    "text": "Food Truck is an app that converts taps and swipes into delicious donuts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=120"
  },
  {
    "text": "By running the test suite in Xcode Cloud, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=126"
  },
  {
    "text": "we are able to validate that all Apple platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=128"
  },
  {
    "text": "support ordering my favorite donut, chocolate with sprinkles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=132"
  },
  {
    "text": "Each improvement to the Xcode Cloud Workflow ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=135"
  },
  {
    "text": "will be identified and demonstrated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=138"
  },
  {
    "text": "For more information about getting started with Xcode Cloud Workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=141"
  },
  {
    "text": "watch \"Meet Xcode Cloud.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=145"
  },
  {
    "text": "The first step to author more reliable tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=149"
  },
  {
    "text": "is to ensure each test’s setup and tear down is thorough. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=151"
  },
  {
    "text": "Tests run in Xcode Cloud make use of a fresh simulator ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=156"
  },
  {
    "text": "which may not meet developers’ original assumptions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=159"
  },
  {
    "text": "Let’s identify a number of device configuration assumptions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=163"
  },
  {
    "text": "sometimes seen in test code.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=167"
  },
  {
    "text": "Certain tests may rely on specific dates and times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=170"
  },
  {
    "text": "For example, a server may be running in a different time zone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=174"
  },
  {
    "text": "Tests should avoid being time zone specific. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=178"
  },
  {
    "text": "Locale-based values, such as number formatting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=182"
  },
  {
    "text": "and language directionality, can lead to unexpected results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=185"
  },
  {
    "text": "Avoid this problem by explicitly setting your simulator’s locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=189"
  },
  {
    "text": "Another problematic assumption is reliance on certain device permissions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=194"
  },
  {
    "text": "such as internet access. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=199"
  },
  {
    "text": "It’s best to mock device permissions in a unit test ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=201"
  },
  {
    "text": "and use an alert handler in a UI Test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=204"
  },
  {
    "text": "Finally, some tests depend on preloaded data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=208"
  },
  {
    "text": "For example, a test may expect to have an empty documents directory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=212"
  },
  {
    "text": "While explicitly configuring the simulator is sometimes the easiest choice, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=217"
  },
  {
    "text": "enhancing the test’s setup method is generally more robust. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=221"
  },
  {
    "text": "For example, the Food Truck depends on a menu file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=226"
  },
  {
    "text": "As part of instantiating the truck object in the setup function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=230"
  },
  {
    "text": "we generate a mock data file containing the donut menu items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=233"
  },
  {
    "text": "Note that rather than relying on teardown methods to prepare for subsequent tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=238"
  },
  {
    "text": "we recommend establishing all state preparation in the setup method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=243"
  },
  {
    "text": "In many cases, read-only files can be checked into the repository ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=248"
  },
  {
    "text": "and later accessed by tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=253"
  },
  {
    "text": "However, when these files need to be constructed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=255"
  },
  {
    "text": "Xcode Cloud supports running a custom build script ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=258"
  },
  {
    "text": "where you can generate the file once for multiple tests to access. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=261"
  },
  {
    "text": "For more details on how to configure your script, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=266"
  },
  {
    "text": "watch \"Customize your advanced Xcode Cloud workflow.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=269"
  },
  {
    "text": "That wraps up proper simulator setup. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=274"
  },
  {
    "text": "Now, let’s cover how to handle tests that fail to meet preconditions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=278"
  },
  {
    "text": "XCTSkip is an error that instructs the XCTest Runner ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=283"
  },
  {
    "text": "to cease executing the current test and mark it as skipped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=287"
  },
  {
    "text": "This may be used to bypass a yet-to-be supported OS version or device type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=292"
  },
  {
    "text": "You could also leverage XCTSkip by setting an environment variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=298"
  },
  {
    "text": "to skip tests specific to staging or production environments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=302"
  },
  {
    "text": "Let’s go over how we can control test flow using an environment variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=306"
  },
  {
    "text": "Environment variables can provide parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=312"
  },
  {
    "text": "to both the XCTest test runner app on your device ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=315"
  },
  {
    "text": "and the test host running xcodebuild. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=318"
  },
  {
    "text": "In Xcode Cloud, environment variables prefixed with TEST_RUNNER_ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=322"
  },
  {
    "text": "get passed into the XCTest test runner. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=326"
  },
  {
    "text": "This prefix will be stripped prior to ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=329"
  },
  {
    "text": "the variable being made available to your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=331"
  },
  {
    "text": "So, for example, a variable in your test code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=335"
  },
  {
    "text": "named BASE_URL would be passed in as the environment variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=339"
  },
  {
    "text": "named TEST_RUNNER_BASE_URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=343"
  },
  {
    "text": "Test plans require the same format as test code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=348"
  },
  {
    "text": "Namely, we do not add the TEST_RUNNER_ prefix. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=351"
  },
  {
    "text": "Environment variables may be referenced anywhere in test code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=356"
  },
  {
    "text": "For example, they could be used with XCTSkip ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=360"
  },
  {
    "text": "to skip the test for actually ordering donuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=363"
  },
  {
    "text": "when we are in a production environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=365"
  },
  {
    "text": "Unless you are hungry, of course. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=368"
  },
  {
    "text": "It’s important to keep in mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=371"
  },
  {
    "text": "that redefining an environment variable in multiple places, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=372"
  },
  {
    "text": "such as both a test plan and the Xcode Cloud User Interface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=376"
  },
  {
    "text": "can lead to unexpected results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=380"
  },
  {
    "text": "In this particular case, Xcode Cloud’s Environment variables ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=382"
  },
  {
    "text": "will take precedence over what’s specified in your project’s test plans. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=386"
  },
  {
    "text": "Now that we are referencing our environment variable within our test code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=391"
  },
  {
    "text": "we can set its value in the Xcode Cloud User Interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=395"
  },
  {
    "text": "To do this, navigate to your Cloud Reports, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=401"
  },
  {
    "text": "and control-click on Food Truck.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=403"
  },
  {
    "text": "To edit our environment variables within our Workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=408"
  },
  {
    "text": "we will select \"Manage Workflows\" in the context menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=411"
  },
  {
    "text": "We are editing the integration workflow specifically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=417"
  },
  {
    "text": "so we will double click on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=420"
  },
  {
    "text": "Now, in the sidebar, we can select \"Environment,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=423"
  },
  {
    "text": "and in the middle of the sheet, under “Environment Variables,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=428"
  },
  {
    "text": "we can add the variable’s name and value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=431"
  },
  {
    "text": "As an alternative to setting the environment variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=439"
  },
  {
    "text": "in the Xcode Cloud Workflow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=442"
  },
  {
    "text": "we could instead set it within the test plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=444"
  },
  {
    "text": "In this example, we don’t yet have a test plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=448"
  },
  {
    "text": "To enable test plans, open the scheme editor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=451"
  },
  {
    "text": "select \"Test\" in the sidebar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=454"
  },
  {
    "text": "and then click on “Convert to Use Test Plans.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=456"
  },
  {
    "text": "Okay, now we have a test plan I called \"Food Truck.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=463"
  },
  {
    "text": "To add the environment variable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=467"
  },
  {
    "text": "we need to click on the test plan to open its editor.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=469"
  },
  {
    "text": "Near the top, we can select between \"Tests\" and \"Configurations.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=474"
  },
  {
    "text": "Let’s select \"Configurations.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=478"
  },
  {
    "text": "Now, within the \"Arguments\" section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=482"
  },
  {
    "text": "we will add the variable by clicking on \"Environment Variables.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=484"
  },
  {
    "text": "A popup will appear where we can enter the variable’s name and value.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=490"
  },
  {
    "text": "Now our test will be skipped when in the production environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=498"
  },
  {
    "text": "To learn more about skipping tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=501"
  },
  {
    "text": "watch \"XCTSkip your tests.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=504"
  },
  {
    "text": "Now that we covered utilizing environment variables to control XCTSkip, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=508"
  },
  {
    "text": "let’s talk about expectation timeouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=513"
  },
  {
    "text": "It is possible for a test to fail due to an unexpected timeout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=516"
  },
  {
    "text": "For example, this could be the result of a slow server ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=521"
  },
  {
    "text": "or an overly anxious user interface test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=524"
  },
  {
    "text": "One approach to resolve either issue ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=528"
  },
  {
    "text": "would be to increase the XCTestExpectation timeout ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=531"
  },
  {
    "text": "so the interaction would have enough time to finish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=534"
  },
  {
    "text": "In this example, we increase the OrderDonut timeout ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=539"
  },
  {
    "text": "from 5 to 10 seconds to allow the server more time to respond. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=542"
  },
  {
    "text": "It is usually preferable to instead replace both the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=547"
  },
  {
    "text": "and test code timeout handling with async/await. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=550"
  },
  {
    "text": "This approach allows the test to pause ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=556"
  },
  {
    "text": "until the await call finishes without any timeout.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=558"
  },
  {
    "text": "We have resolved time dependent tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=564"
  },
  {
    "text": "so let’s handle any test failures within the test suite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=566"
  },
  {
    "text": "For example, we have a test that relies on a service ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=569"
  },
  {
    "text": "within the staging environment that is down for maintenance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=573"
  },
  {
    "text": "We can use XCTExpectFailure instead of disabling or skipping this test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=577"
  },
  {
    "text": "With XCTExpectFailure, your test executes normally ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=582"
  },
  {
    "text": "and the results are transformed as follows: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=586"
  },
  {
    "text": "a failure in a test will now be reported as an expected failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=589"
  },
  {
    "text": "while that failed test within its suite will be reported as a pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=592"
  },
  {
    "text": "This approach eliminates the noise generated by expected failures.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=596"
  },
  {
    "text": "For example, testOrderDonut is failing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=602"
  },
  {
    "text": "I know that the service that provides ordering donuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=606"
  },
  {
    "text": "is under maintenance right now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=609"
  },
  {
    "text": "so I added a call here to XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=610"
  },
  {
    "text": "To learn more about XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=615"
  },
  {
    "text": "watch \"Embrace Expected Failures in XCTest.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=618"
  },
  {
    "text": "Now that we've declared expected failures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=623"
  },
  {
    "text": "let’s leverage test repetitions to substantiate code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=625"
  },
  {
    "text": "and diagnose unreliable code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=629"
  },
  {
    "text": "Test repetitions is a tool that runs the same test multiple times ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=631"
  },
  {
    "text": "waiting for the following: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=635"
  },
  {
    "text": "the first failure, the first success, or a statistical result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=637"
  },
  {
    "text": "For example, at our desk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=642"
  },
  {
    "text": "we run our new code and test cases multiple times ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=644"
  },
  {
    "text": "with repetitions to confirm initial app and test code reliability ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=648"
  },
  {
    "text": "before checking in the code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=652"
  },
  {
    "text": "We were able to detect that testOrderDonut had only an 80% success rate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=655"
  },
  {
    "text": "Uh-oh! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=660"
  },
  {
    "text": "Knowing the failure exists, we now use the repeat-until-failure mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=662"
  },
  {
    "text": "to locally diagnose the bug. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=666"
  },
  {
    "text": "This is another way of utilizing test repetitions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=668"
  },
  {
    "text": "For tests that rely on an unreliable external service, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=673"
  },
  {
    "text": "you may want to leverage the retry-on-failure repetition policy ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=677"
  },
  {
    "text": "to confirm a test can succeed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=680"
  },
  {
    "text": "While retrying tests is a powerful approach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=684"
  },
  {
    "text": "it’s preferable to instead mock external services when possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=686"
  },
  {
    "text": "Advantages of a mocked service include deterministic reliability and speed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=690"
  },
  {
    "text": "To learn how to mock your dependencies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=696"
  },
  {
    "text": "watch “Testing Tips & Tricks.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=698"
  },
  {
    "text": "Let’s explore how test repetitions can be enabled.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=701"
  },
  {
    "text": "To enable test repetitions in your test plan, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=706"
  },
  {
    "text": "go back to the test plan editor and select \"Configurations.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=708"
  },
  {
    "text": "Then, under the \"Test Execution\" section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=716"
  },
  {
    "text": "there is a popup to select your test repetition mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=719"
  },
  {
    "text": "In this case, we will select \"Retry on Failure,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=724"
  },
  {
    "text": "which is used primarily to work around unreliable external services. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=727"
  },
  {
    "text": "Now we have our test repetition mode enabled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=733"
  },
  {
    "text": "For more information on leveraging test repetitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=736"
  },
  {
    "text": "watch \"Diagnose unreliable code with test repetition.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=739"
  },
  {
    "text": "So we have gone over a variety of tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=744"
  },
  {
    "text": "that can be used to improve test reliability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=747"
  },
  {
    "text": "For more information about writing quality tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=750"
  },
  {
    "text": "watch \"Write tests to fail.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=753"
  },
  {
    "text": "Now that our tests are reliable, let’s make them run fast! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=756"
  },
  {
    "text": "A number of configuration options exist for achieving faster results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=760"
  },
  {
    "text": "Let’s do what we can to reduce the time it takes to run the test suite.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=764"
  },
  {
    "text": "One technique we use to improve performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=771"
  },
  {
    "text": "is to split our tests into multiple test plans. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=773"
  },
  {
    "text": "Sometimes, two is enough. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=776"
  },
  {
    "text": "You can identify a reduced set of tests to verify ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=780"
  },
  {
    "text": "as part of each open or update to a pull request.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=784"
  },
  {
    "text": "For example, we could run the unit tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=790"
  },
  {
    "text": "along with just a key subset of user interface tests for a single platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=793"
  },
  {
    "text": "The full set of tests on all supported platforms can still be run, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=803"
  },
  {
    "text": "but now in the background, and not blocking pull requests.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=807"
  },
  {
    "text": "This approach allows us to add tests and new platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=812"
  },
  {
    "text": "while keeping our continuous integration process timely.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=815"
  },
  {
    "text": "Let’s set up a workflow to run a select set of tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=820"
  },
  {
    "text": "In this example, we have already created a new test plan ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=823"
  },
  {
    "text": "called “Pull Requests,\" and have it open in the test plan editor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=827"
  },
  {
    "text": "Near the top we can selectw between \"Tests\" and \"Configurations.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=831"
  },
  {
    "text": "Let’s select \"Tests.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=835"
  },
  {
    "text": "Here we have chosen a subset of tests to be verified for a pull request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=841"
  },
  {
    "text": "Now to setup a Workflow to run our “Pull Requests” test plan, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=847"
  },
  {
    "text": "we will go back to Xcode Cloud Manage Workflows ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=851"
  },
  {
    "text": "just like we did when we added an environment variable for skipping tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=854"
  },
  {
    "text": "To create a new workflow, we will click the \"Add\" button ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=861"
  },
  {
    "text": "at the bottom left of the “Manage Workflow” sheet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=864"
  },
  {
    "text": "For simplicity, let’s also name our workflow “Pull Requests” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=868"
  },
  {
    "text": "and choose a start condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=872"
  },
  {
    "text": "We want this workflow to prevent any check-ins with failing tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=874"
  },
  {
    "text": "In the sidebar, to the right of \"Start Conditions,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=879"
  },
  {
    "text": "we will click the \"Add\" button.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=882"
  },
  {
    "text": "A menu will appear showing the start condition options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=888"
  },
  {
    "text": "In our case, we will select “Pull Request Changes.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=891"
  },
  {
    "text": "Now, we now have a pull request start condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=896"
  },
  {
    "text": "Running tests require that the Food Truck app first be built. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=900"
  },
  {
    "text": "To do this, we need to add a build action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=905"
  },
  {
    "text": "Again in the sidebar, below the “Start Conditions,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=908"
  },
  {
    "text": "let’s add an action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=912"
  },
  {
    "text": "We will click the \"Add\" button next to “Actions,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=914"
  },
  {
    "text": "and then select “Build” from the context menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=917"
  },
  {
    "text": "Now that we have an action that builds our app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=924"
  },
  {
    "text": "we will add another to run our tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=926"
  },
  {
    "text": "Again we will click add action, but this time we will select \"Test.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=929"
  },
  {
    "text": "Great, we have a test action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=936"
  },
  {
    "text": "Let’s select the test plan to run. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=939"
  },
  {
    "text": "In the middle of the sheet, there is a drop down for test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=942"
  },
  {
    "text": "Here we can select our “Pull Requests” test plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=946"
  },
  {
    "text": "Awesome! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=953"
  },
  {
    "text": "Now our Workflow is configured to run our test plan on pull request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=954"
  },
  {
    "text": "To create a second workflow that will run your complete test suite on a schedule, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=958"
  },
  {
    "text": "you can follow a similar set of steps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=963"
  },
  {
    "text": "However, this time, select the start condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=965"
  },
  {
    "text": "to be “On a Schedule for a Branch” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=968"
  },
  {
    "text": "and then set the workflow to run your full suite test plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=971"
  },
  {
    "text": "We have both Workflows configured in Xcode Cloud ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=975"
  },
  {
    "text": "and running their associated test plans. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=978"
  },
  {
    "text": "To learn more about test plans, check out \"Testing in Xcode.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=982"
  },
  {
    "text": "Now we have created pull request and scheduled workflow test sets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=988"
  },
  {
    "text": "Another improvement we can make for speed is to run tests concurrently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=992"
  },
  {
    "text": "By default, Xcode Cloud tests your platforms in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=997"
  },
  {
    "text": "In addition, you can enable Xcode to run tests in parallel ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1003"
  },
  {
    "text": "on a target and test object class level.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1006"
  },
  {
    "text": "To enable parallel test execution in Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1012"
  },
  {
    "text": "we will again go to our test plan editor and select \"Tests.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1015"
  },
  {
    "text": "Then, to the right of our “Food Truck Tests\" test bundle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1024"
  },
  {
    "text": "we click the “Options” button.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1027"
  },
  {
    "text": "One of the options allows us to “Execute in parallel” when possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1031"
  },
  {
    "text": "If the server has enough cores available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1036"
  },
  {
    "text": "multiple targets and test object classes can be executed concurrently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1038"
  },
  {
    "text": "So let’s enable this option to improve our test suite turnaround time.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1043"
  },
  {
    "text": "Now our tests are configured to run in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1049"
  },
  {
    "text": "Note that tests must be designed to run independently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1053"
  },
  {
    "text": "to take advantage of parallel execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1056"
  },
  {
    "text": "Proper setup and teardown are essential to reliable test case behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1059"
  },
  {
    "text": "With our tests running in parallel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1067"
  },
  {
    "text": "it’s time to turn our attention to runaway tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1068"
  },
  {
    "text": "Runaway tests are those tests that don’t end in a timely manner. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1072"
  },
  {
    "text": "Some examples include an infinite loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1076"
  },
  {
    "text": "or waiting indefinitely for a failed server.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1078"
  },
  {
    "text": "We can halt these tests by setting an execution time allowance in our test plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1083"
  },
  {
    "text": "The execution time allowance specifies the number of seconds for a test to run ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1087"
  },
  {
    "text": "before it fails with a timeout error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1092"
  },
  {
    "text": "This prevents a test suite from getting stuck on an individual test.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1095"
  },
  {
    "text": "In this case, the fifth test got stuck for some reason. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1103"
  },
  {
    "text": "By setting the execution time allowance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1106"
  },
  {
    "text": "this runaway test was eventually halted and marked as a failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1108"
  },
  {
    "text": "The XCTest Test Runner then continued running the next test in the suite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1113"
  },
  {
    "text": "Let’s configure an execution time allowance for our test plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1118"
  },
  {
    "text": "To set an execution time allowance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1124"
  },
  {
    "text": "we will go to our test plan editor and select “Configurations.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1126"
  },
  {
    "text": "Under the “Test Execution” category, we can enable “Test Timeouts” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1133"
  },
  {
    "text": "and specify the number of seconds to wait. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1138"
  },
  {
    "text": "Note that the default is 600 seconds.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1140"
  },
  {
    "text": "Having configured the maximum execution time allowance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1145"
  },
  {
    "text": "a single runaway test will no longer disrupt our testing workflow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1148"
  },
  {
    "text": "For example, an overnight test suite can now complete on time ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1152"
  },
  {
    "text": "and provide a full set of useful results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1156"
  },
  {
    "text": "Yay! We finally stopped those runaway tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1159"
  },
  {
    "text": "so we are able to move on to the next improvement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1163"
  },
  {
    "text": "As you may recall, we were able to leverage test repetitions ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1166"
  },
  {
    "text": "to increase reliability of tests that rely on external services. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1170"
  },
  {
    "text": "We configured our test plan to retry on failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1174"
  },
  {
    "text": "and selected a sufficient repetition value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1177"
  },
  {
    "text": "However, these repetitions can add to the time it takes to run the test suite.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1181"
  },
  {
    "text": "Unnecessary repetitions are wasteful ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1187"
  },
  {
    "text": "and you may want to optimize test repetition value to a lower number. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1189"
  },
  {
    "text": "Furthermore, you may consider removing the problematic test altogether ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1194"
  },
  {
    "text": "from the pull request workflow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1198"
  },
  {
    "text": "Let’s go over how we might do this.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1201"
  },
  {
    "text": "Let’s return to the test repetitions configuration in the test plan editor.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1205"
  },
  {
    "text": "Earlier we set the test repetition mode to “Retry on Failure.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1211"
  },
  {
    "text": "Now we can adjust the \"Maximum Test Repetitions” value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1216"
  },
  {
    "text": "For example, we may have chosen to allow up to 10 attempts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1220"
  },
  {
    "text": "for a test that relies on an external server ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1224"
  },
  {
    "text": "that fails 5% of the time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1226"
  },
  {
    "text": "Most of the time, we will succeed on the first attempt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1229"
  },
  {
    "text": "However, if that same test has an unrelated bug, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1232"
  },
  {
    "text": "it will fail every time and use all 10 attempts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1236"
  },
  {
    "text": "Maybe 3 attempts would be sufficient and a better choice.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1239"
  },
  {
    "text": "While we want to reduce retries to improve performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1245"
  },
  {
    "text": "note that earlier we recommended increasing retries ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1248"
  },
  {
    "text": "to improve reliability in some cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1252"
  },
  {
    "text": "As such, this minimally chosen value must continue be sufficient ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1255"
  },
  {
    "text": "to run those tests reliably. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1259"
  },
  {
    "text": "That wraps up configuring for faster results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1262"
  },
  {
    "text": "To go into more detail on getting faster test results, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1267"
  },
  {
    "text": "check out \"Get your test results faster.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1270"
  },
  {
    "text": "To recap, we covered the most effective ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1274"
  },
  {
    "text": "to begin testing for Xcode Cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1276"
  },
  {
    "text": "We focused on configuring tests to be both reliable and fast ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1279"
  },
  {
    "text": "so that you can avoid irrelevant failures and verify your code changes quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1283"
  },
  {
    "text": "Thank you, and I hope you enjoy the rest of your WWDC! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1288"
  },
  {
    "text": "",
    "link": "https://developer.apple.com/videos/play/wwdc2022-110361/?time=1292"
  }
]