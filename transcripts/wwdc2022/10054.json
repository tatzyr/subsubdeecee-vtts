[
  {
    "text": "♪ instrumental hip hop music ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=2"
  },
  {
    "text": "Hi. I'm Curt, an engineer on the SwiftUI team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=9"
  },
  {
    "text": "There are some exciting new APIs for navigation in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=13"
  },
  {
    "text": "I've been enjoying building apps with these new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=16"
  },
  {
    "text": "and I'm thrilled to be able to share them with you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=19"
  },
  {
    "text": "These APIs scale from basic stacks -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=23"
  },
  {
    "text": "like on Apple TV, iPhone, and Apple Watch -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=25"
  },
  {
    "text": "to powerful multicolumn presentations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=28"
  },
  {
    "text": "The new APIs bring robust support ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=31"
  },
  {
    "text": "for programmatic navigation and deep linking, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=33"
  },
  {
    "text": "letting you compose pieces to build the perfect structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=36"
  },
  {
    "text": "for your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=40"
  },
  {
    "text": "In this talk, I'll give you some straightforward recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=42"
  },
  {
    "text": "for cooking up an app with navigation in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=45"
  },
  {
    "text": "And if you're already using SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=48"
  },
  {
    "text": "we hope these new APIs will help you kick it up a notch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=51"
  },
  {
    "text": "I'll start with the ingredients ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=54"
  },
  {
    "text": "that go into the new data-driven navigation APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=55"
  },
  {
    "text": "Then, we'll move to our tasting menu: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=59"
  },
  {
    "text": "several quick and easy recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=61"
  },
  {
    "text": "for full programmatic control of navigation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=63"
  },
  {
    "text": "For the dessert course, I'll share some tips ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=66"
  },
  {
    "text": "on using the new APIs to persist navigation state in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=69"
  },
  {
    "text": "If you've used navigation in SwiftUI before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=74"
  },
  {
    "text": "you might be wondering how the new APIs are different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=77"
  },
  {
    "text": "So before digging in, let's review some of the existing API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=80"
  },
  {
    "text": "The existing APIs are based on links that send views ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=85"
  },
  {
    "text": "that are shown in other columns or on a stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=88"
  },
  {
    "text": "For example, I might have a list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=91"
  },
  {
    "text": "of navigation links in a root view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=93"
  },
  {
    "text": "When I tap one of these links, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=95"
  },
  {
    "text": "the link pushes its view on the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=97"
  },
  {
    "text": "This works great for basic navigation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=100"
  },
  {
    "text": "and you can continue using this pattern. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=102"
  },
  {
    "text": "But let's pop back to the root view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=105"
  },
  {
    "text": "With the existing navigation API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=108"
  },
  {
    "text": "to present a link programmatically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=111"
  },
  {
    "text": "I add a binding to the link. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=113"
  },
  {
    "text": "For example, I can present this link's view ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=115"
  },
  {
    "text": "by setting item.showDetail to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=117"
  },
  {
    "text": "But this means I need a separate binding for each link. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=121"
  },
  {
    "text": "With the new API, we lift the binding up ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=126"
  },
  {
    "text": "to the entire container, called a NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=129"
  },
  {
    "text": "The path here is a collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=133"
  },
  {
    "text": "that represents all the values pushed on the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=134"
  },
  {
    "text": "NavigationLinks append values to the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=138"
  },
  {
    "text": "You can deep link by mutating the path; ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=141"
  },
  {
    "text": "or pop to the root view by removing all the items ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=143"
  },
  {
    "text": "from the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=146"
  },
  {
    "text": "In this talk, I'll show you how the new navigation API ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=148"
  },
  {
    "text": "enables data-driven programmatic navigation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=151"
  },
  {
    "text": "I hope you find it powerful and easy to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=154"
  },
  {
    "text": "Before jumping into recipes for using the new navigation APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=158"
  },
  {
    "text": "I thought it would be helpful to share what's on the menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=162"
  },
  {
    "text": "I've really gotten into cooking lately ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=166"
  },
  {
    "text": "and I've been working on an app to keep track of my recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=168"
  },
  {
    "text": "I have a lot of ideas ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=171"
  },
  {
    "text": "about different ways to present this info. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=172"
  },
  {
    "text": "For example, here's a three-column approach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=175"
  },
  {
    "text": "The first column lets me select a recipe category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=178"
  },
  {
    "text": "When I select a category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=181"
  },
  {
    "text": "the second column lists the recipes I've collected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=182"
  },
  {
    "text": "And when I select a recipe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=186"
  },
  {
    "text": "the detail area shows the ingredients for that recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=187"
  },
  {
    "text": "The detail area also has links ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=191"
  },
  {
    "text": "to a selection of related recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=193"
  },
  {
    "text": "My grandma always said, \"The crust makes the pie.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=195"
  },
  {
    "text": "So that's what we're cooking up today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=199"
  },
  {
    "text": "Our ingredients are the new navigation APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=201"
  },
  {
    "text": "Let's dig into those, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=204"
  },
  {
    "text": "then we'll look at some specific navigation recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=205"
  },
  {
    "text": "that mix them together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=208"
  },
  {
    "text": "The new navigation APIs introduce a couple ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=211"
  },
  {
    "text": "of new container types that you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=214"
  },
  {
    "text": "to describe the structure of your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=216"
  },
  {
    "text": "along with a fresh new varietal of NavigationLink ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=218"
  },
  {
    "text": "for helping your guests move around that structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=221"
  },
  {
    "text": "The first new container is NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=225"
  },
  {
    "text": "NavigationStack represents a push-pop interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=228"
  },
  {
    "text": "like you see in Find My on Apple Watch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=231"
  },
  {
    "text": "Settings on iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=233"
  },
  {
    "text": "and the new System Settings app on macOS Ventura. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=235"
  },
  {
    "text": "The second new container type is NavigationSplitView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=240"
  },
  {
    "text": "NavigationSplitView is perfect for multicolumn apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=244"
  },
  {
    "text": "like Mail or Notes on Mac and iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=247"
  },
  {
    "text": "And NavigationSplitView automatically adapts ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=251"
  },
  {
    "text": "to a single-column stack on iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=253"
  },
  {
    "text": "in Slide Over on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=256"
  },
  {
    "text": "and even on Apple Watch and Apple TV. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=257"
  },
  {
    "text": "NavigationSplitView has two sets of initializers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=260"
  },
  {
    "text": "One set, like shown here, creates a two-column experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=264"
  },
  {
    "text": "The other set of initializers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=269"
  },
  {
    "text": "creates a three-column experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=271"
  },
  {
    "text": "NavigationSplitView comes with a cartload ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=273"
  },
  {
    "text": "of configuration options that let you customize column widths, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=276"
  },
  {
    "text": "sidebar presentation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=279"
  },
  {
    "text": "and even programmatically show and hide columns. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=281"
  },
  {
    "text": "I won't dive into the configuration options ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=285"
  },
  {
    "text": "in this talk, but please check out my colleague Raj's talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=286"
  },
  {
    "text": "\"SwiftUI on iPad: Organize your interface\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=290"
  },
  {
    "text": "and the great documentation on how to tune ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=293"
  },
  {
    "text": "NavigationSplitView to be just right for your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=295"
  },
  {
    "text": "Previously, NavigationLinks always included ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=300"
  },
  {
    "text": "a title and view to present. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=303"
  },
  {
    "text": "The new varieties still include a title, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=306"
  },
  {
    "text": "but instead of a view to present, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=308"
  },
  {
    "text": "they present a value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=310"
  },
  {
    "text": "For example, this link is presenting ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=312"
  },
  {
    "text": "the recipe for apple pie. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=314"
  },
  {
    "text": "As we'll see, NavigationLink is smart. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=316"
  },
  {
    "text": "A link's behavior depends on the NavigationStack or list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=318"
  },
  {
    "text": "that it appears in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=321"
  },
  {
    "text": "To see how these tasty new APIs work together, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=324"
  },
  {
    "text": "let's look at some specific recipes for using them ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=328"
  },
  {
    "text": "in my cookbook app, and in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=331"
  },
  {
    "text": "Our first recipe is a basic stack of views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=334"
  },
  {
    "text": "like you'd find in Find My on Apple Watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=337"
  },
  {
    "text": "or Settings on iPhone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=339"
  },
  {
    "text": "I have a section for each category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=341"
  },
  {
    "text": "Within a section, I can tap on a recipe to see the details. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=343"
  },
  {
    "text": "Within any recipe, I can tap one of the related recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=347"
  },
  {
    "text": "to push it onto the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=351"
  },
  {
    "text": "I can use the back button to return to the original recipe ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=353"
  },
  {
    "text": "and then to the categories list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=356"
  },
  {
    "text": "This recipe combines a NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=361"
  },
  {
    "text": "with the new variety of NavigationLink, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=364"
  },
  {
    "text": "and a navigation destination modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=366"
  },
  {
    "text": "Let's see how. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=369"
  },
  {
    "text": "I'll start with a basic NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=371"
  },
  {
    "text": "Inside, I have a List that iterates over all my categories ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=375"
  },
  {
    "text": "and a navigationTitle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=379"
  },
  {
    "text": "Inside the List, I have a section for each category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=382"
  },
  {
    "text": "Next, inside each section, I'll add a NavigationLink ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=386"
  },
  {
    "text": "for each recipe in the category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=390"
  },
  {
    "text": "For now, I'll make the link present my RecipeDetail view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=393"
  },
  {
    "text": "This is using the existing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=396"
  },
  {
    "text": "view destination NavigationLink. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=398"
  },
  {
    "text": "And that's enough to get this navigation experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=401"
  },
  {
    "text": "cooking along. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=403"
  },
  {
    "text": "But what about programmatic navigation? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=405"
  },
  {
    "text": "To add programmatic navigation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=408"
  },
  {
    "text": "I need to tease apart two pieces of this navigation link: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=410"
  },
  {
    "text": "the value it presents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=413"
  },
  {
    "text": "and the view that goes with that value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=415"
  },
  {
    "text": "Let's see how. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=417"
  },
  {
    "text": "First, I'll pull the destination view out of the link ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=419"
  },
  {
    "text": "and into the new navigationDestination modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=423"
  },
  {
    "text": "This modifier declares the type of the presented data ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=428"
  },
  {
    "text": "that it's responsible for; here, that's a Recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=430"
  },
  {
    "text": "The modifier takes a view builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=435"
  },
  {
    "text": "that describes what view to push onto the stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=437"
  },
  {
    "text": "when a recipe value is presented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=440"
  },
  {
    "text": "Then, I'll switch to one of the new NavigationLinks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=443"
  },
  {
    "text": "and just present the recipe value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=446"
  },
  {
    "text": "Let's peek under the hood ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=450"
  },
  {
    "text": "and see how NavigationStack makes this work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=451"
  },
  {
    "text": "Every navigation stack keeps track of a path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=455"
  },
  {
    "text": "that represents all the data that the stack is showing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=458"
  },
  {
    "text": "When the stack is just showing its root view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=461"
  },
  {
    "text": "like shown here, the path is empty. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=463"
  },
  {
    "text": "Next, the stack also keeps track ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=467"
  },
  {
    "text": "of all the navigation destinations declared inside it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=469"
  },
  {
    "text": "or inside any view pushed onto the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=473"
  },
  {
    "text": "In general, this is a set, though for this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=475"
  },
  {
    "text": "we only have one destination. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=478"
  },
  {
    "text": "Let's add the pushed views to the diagram, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=481"
  },
  {
    "text": "Now, because the path is empty, so is the list of pushed views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=484"
  },
  {
    "text": "Now, like milk and cookies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=489"
  },
  {
    "text": "the magic happens when we put these together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=490"
  },
  {
    "text": "When I tap a value-presenting link, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=493"
  },
  {
    "text": "it appends that value to the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=496"
  },
  {
    "text": "Then, the navigation stack maps its destinations over ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=499"
  },
  {
    "text": "the path values to decide which views to push on the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=503"
  },
  {
    "text": "Now, from my apple pie recipe, if I tap Pie Crust, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=509"
  },
  {
    "text": "the link appends that to the path, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=514"
  },
  {
    "text": "NavigationStack does its magic ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=517"
  },
  {
    "text": "and pushes another RecipeDetail view onto the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=522"
  },
  {
    "text": "For every value I add to the path, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=526"
  },
  {
    "text": "NavigationStack pushes another view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=528"
  },
  {
    "text": "When I tap the back button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=531"
  },
  {
    "text": "NavigationStack removes the last item from the path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=534"
  },
  {
    "text": "and from the pushed views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=537"
  },
  {
    "text": "And NavigationStack has one more trick to offer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=539"
  },
  {
    "text": "It lets us connect to this path using a binding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=542"
  },
  {
    "text": "Let's go back to our code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=546"
  },
  {
    "text": "Here's where we were. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=548"
  },
  {
    "text": "To bind the path, first I'll add some State. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=550"
  },
  {
    "text": "Because every value pushed on this stack is a recipe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=553"
  },
  {
    "text": "I can use an array of recipes as my path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=557"
  },
  {
    "text": "If you need to present a variety of data on a stack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=560"
  },
  {
    "text": "be sure to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=562"
  },
  {
    "text": "the new type-erasing NavigationPath collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=563"
  },
  {
    "text": "Once I have my path state, I add an argument ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=569"
  },
  {
    "text": "to my NavigationStack and pass a binding to the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=572"
  },
  {
    "text": "With that in place, I can make my stack sizzle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=576"
  },
  {
    "text": "For example, I could add a method ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=580"
  },
  {
    "text": "to jump to a particular recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=582"
  },
  {
    "text": "Or from anywhere on my stack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=584"
  },
  {
    "text": "I can pop back to the root just by resetting the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=586"
  },
  {
    "text": "That's how to prepare a pushable stack using ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=591"
  },
  {
    "text": "the new NavigationStack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=593"
  },
  {
    "text": "value-presenting NavigationLinks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=595"
  },
  {
    "text": "and navigationDestinations in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=597"
  },
  {
    "text": "This recipe works on all platforms, including the Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=602"
  },
  {
    "text": "but really shines on iPhone, Apple TV, and Apple Watch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=605"
  },
  {
    "text": "To see NavigationStack in action, be sure to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=610"
  },
  {
    "text": "\"Build a productivity app for Apple Watch.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=612"
  },
  {
    "text": "Our next recipe is for multicolumn presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=618"
  },
  {
    "text": "without any stacks, like you'd find in Mail on Mac and iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=621"
  },
  {
    "text": "On iPad, the sidebar is initially hidden. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=625"
  },
  {
    "text": "I can reveal it and choose a category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=628"
  },
  {
    "text": "Then, in the second column, I can choose a recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=631"
  },
  {
    "text": "The third column shows the recipe details. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=634"
  },
  {
    "text": "This recipe combines a NavigationSplitView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=638"
  },
  {
    "text": "with the new variety of NavigationLink, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=641"
  },
  {
    "text": "and a List selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=643"
  },
  {
    "text": "This recipe is great on larger devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=645"
  },
  {
    "text": "because it helps avoid modality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=647"
  },
  {
    "text": "I can see all my information without having to drill in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=650"
  },
  {
    "text": "Let's see how. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=653"
  },
  {
    "text": "I'll start with a three-column NavigationSplitView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=655"
  },
  {
    "text": "with placeholder views for the content and detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=659"
  },
  {
    "text": "Then, I'll add a List in the sidebar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=662"
  },
  {
    "text": "that iterates over all my categories, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=664"
  },
  {
    "text": "and a navigationTitle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=667"
  },
  {
    "text": "Inside the List, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=669"
  },
  {
    "text": "I have a NavigationLink for each category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=670"
  },
  {
    "text": "Next, I'll introduce some State ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=674"
  },
  {
    "text": "to keep track of which category is selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=676"
  },
  {
    "text": "I'll tweak our list in the sidebar ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=679"
  },
  {
    "text": "to use the selectedCategory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=681"
  },
  {
    "text": "Note that we're passing a binding to the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=683"
  },
  {
    "text": "This lets the list and its contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=686"
  },
  {
    "text": "manipulate the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=687"
  },
  {
    "text": "When you put a value-presenting link inside a list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=690"
  },
  {
    "text": "with a matching selection type -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=692"
  },
  {
    "text": "category here -- the link will automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=695"
  },
  {
    "text": "update the selection when tapped or clicked. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=697"
  },
  {
    "text": "So now when I select a category in the sidebar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=701"
  },
  {
    "text": "SwiftUI updates the selectedCategory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=703"
  },
  {
    "text": "Check out Raj's \"Organize your interface\" talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=707"
  },
  {
    "text": "that I mentioned earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=709"
  },
  {
    "text": "for some great information on selection and lists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=710"
  },
  {
    "text": "Next, I'll replace my placeholder ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=716"
  },
  {
    "text": "in the content column with a list of the recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=718"
  },
  {
    "text": "for the selected category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=720"
  },
  {
    "text": "and add a navigationTitle for this column too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=723"
  },
  {
    "text": "Just like for the selected category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=726"
  },
  {
    "text": "I can use the same technique ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=729"
  },
  {
    "text": "to keep track of the selected recipe in the content list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=730"
  },
  {
    "text": "I'll use State for the selectedRecipe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=734"
  },
  {
    "text": "have my content list use that state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=737"
  },
  {
    "text": "and use a value-presenting link for each recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=740"
  },
  {
    "text": "Finally, I'll update the detail column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=744"
  },
  {
    "text": "to show, well, the details for the selectedRecipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=746"
  },
  {
    "text": "With this in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=750"
  },
  {
    "text": "I again have full programmatic control over navigation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=752"
  },
  {
    "text": "For example, to navigate to my recipe of the day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=757"
  },
  {
    "text": "I just need to update my selection state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=760"
  },
  {
    "text": "That's how to prepare a multi-column ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=765"
  },
  {
    "text": "navigation experience using the new NavigationSplitView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=767"
  },
  {
    "text": "value-presenting NavigationLinks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=771"
  },
  {
    "text": "and Lists with selection in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=774"
  },
  {
    "text": "One super cool thing about combining List selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=780"
  },
  {
    "text": "and NavigationSplitView like this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=783"
  },
  {
    "text": "is that SwiftUI can automatically adapt ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=785"
  },
  {
    "text": "the split view to a single stack on iPhone ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=787"
  },
  {
    "text": "or in Slide Over on iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=790"
  },
  {
    "text": "Changes to selection automatically translate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=794"
  },
  {
    "text": "into the appropriate pushes and pops on iPhone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=796"
  },
  {
    "text": "Of course, this multicolumn presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=800"
  },
  {
    "text": "also works great on the Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=802"
  },
  {
    "text": "And although Apple TV and Apple Watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=804"
  },
  {
    "text": "don't show multiple columns, those platforms also get ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=806"
  },
  {
    "text": "the automatic translation to a single stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=809"
  },
  {
    "text": "NavigationSplitView in SwiftUI works on all platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=813"
  },
  {
    "text": "Next, let's look at how we can put all these ingredients ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=819"
  },
  {
    "text": "together by building a two-column navigation experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=822"
  },
  {
    "text": "like that in Photos on iPad and Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=825"
  },
  {
    "text": "When I select a category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=828"
  },
  {
    "text": "the detail area shows a grid of all my recipes in that category. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=830"
  },
  {
    "text": "When I tap a recipe, it's pushed onto a stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=835"
  },
  {
    "text": "in the detail area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=838"
  },
  {
    "text": "When I tap a related recipe, it's also pushed onto the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=839"
  },
  {
    "text": "And I can navigate back to the grid of recipes.",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=843"
  },
  {
    "text": "This recipe is our pièce de résistance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=850"
  },
  {
    "text": "combining navigation split view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=852"
  },
  {
    "text": "stack, link, destination, and list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=854"
  },
  {
    "text": "Let's see how all these ingredients go together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=857"
  },
  {
    "text": "I'll start with a two-column NavigationSplitView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=861"
  },
  {
    "text": "The first column is exactly like the previous recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=864"
  },
  {
    "text": "I have some State to track the selectedCategory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=867"
  },
  {
    "text": "and a List that uses a binding to that state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=870"
  },
  {
    "text": "and a value-presenting NavigationLink, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=873"
  },
  {
    "text": "and the requisite navigationTitle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=876"
  },
  {
    "text": "The differences in this recipe are in the detail area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=879"
  },
  {
    "text": "The new navigation APIs really take advantage of composition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=882"
  },
  {
    "text": "Just like I can put a list ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=886"
  },
  {
    "text": "inside a column of a NavigationSplitView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=888"
  },
  {
    "text": "I can also put a NavigationStack inside a column. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=891"
  },
  {
    "text": "The root view of this Navigation Stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=896"
  },
  {
    "text": "is my RecipeGrid. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=898"
  },
  {
    "text": "Notice that the RecipeGrid is inside the NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=900"
  },
  {
    "text": "That means I can put stack-related modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=904"
  },
  {
    "text": "inside RecipeGrid. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=906"
  },
  {
    "text": "Let's zoom in to the body of RecipeGrid ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=909"
  },
  {
    "text": "to see what that means. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=911"
  },
  {
    "text": "RecipeGrid is a view and takes a category as a parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=914"
  },
  {
    "text": "Because category is optional here, I'll start with an if-let. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=918"
  },
  {
    "text": "The else case handles an empty selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=922"
  },
  {
    "text": "Inside my if, I'll add a scroll view and a lazy grid. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=925"
  },
  {
    "text": "Lazy grid layout takes a sequence of views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=930"
  },
  {
    "text": "Here, I'm using ForEach to iterate over my recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=933"
  },
  {
    "text": "For each recipe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=936"
  },
  {
    "text": "I have a value-presenting NavigationLink. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=937"
  },
  {
    "text": "The link presents a recipe value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=941"
  },
  {
    "text": "The link's label, in this trailing closure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=943"
  },
  {
    "text": "is my RecipeTile with the thumbnail and title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=945"
  },
  {
    "text": "So what's left to finish this grid? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=950"
  },
  {
    "text": "Well, I haven't told the NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=952"
  },
  {
    "text": "how to map from recipes to detail views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=954"
  },
  {
    "text": "Like I mentioned with the first recipe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=957"
  },
  {
    "text": "the new NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=959"
  },
  {
    "text": "uses the navigationDestination modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=961"
  },
  {
    "text": "to map from values on its path to views shown on the stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=964"
  },
  {
    "text": "So let's add a navigationDestination modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=968"
  },
  {
    "text": "But where should I attach it? ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=971"
  },
  {
    "text": "I'm tempted to attach it directly to the link, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=974"
  },
  {
    "text": "but this is wrong for two reasons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=977"
  },
  {
    "text": "Lazy containers, like List, Table, or, here, LazyVGrid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=979"
  },
  {
    "text": "don't load all of their views immediately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=983"
  },
  {
    "text": "If I put the modifier here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=986"
  },
  {
    "text": "the destination might not be loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=988"
  },
  {
    "text": "so the surrounding NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=990"
  },
  {
    "text": "might not see it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=991"
  },
  {
    "text": "Second, if I put the modifier here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=993"
  },
  {
    "text": "it will be repeated for every item in my grid. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=996"
  },
  {
    "text": "Instead, I'll attach the modifier to my ScrollView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=999"
  },
  {
    "text": "By attaching the modifier outside the ScrollView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1003"
  },
  {
    "text": "I ensure that the NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1007"
  },
  {
    "text": "can see this navigationDestination ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1009"
  },
  {
    "text": "regardless of the scroll position. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1011"
  },
  {
    "text": "Another thing I like about putting the modifier here ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1014"
  },
  {
    "text": "is that it's still close to the links that target it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1017"
  },
  {
    "text": "Navigation destination gives me flexibility to organize my code ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1020"
  },
  {
    "text": "the way that makes sense to me or my team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1024"
  },
  {
    "text": "Popping back to my NavigationSplitView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1027"
  },
  {
    "text": "there's just one more thing ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1030"
  },
  {
    "text": "to enable full programmatic navigation here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1031"
  },
  {
    "text": "I need to add a navigation path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1034"
  },
  {
    "text": "I'll add State to hold the path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1037"
  },
  {
    "text": "and bind the state to my NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1040"
  },
  {
    "text": "With full programmatic navigation in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1044"
  },
  {
    "text": "I can write a method to show my recipe of the day ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1047"
  },
  {
    "text": "in this navigation experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1049"
  },
  {
    "text": "That's how to prepare a multicolumn navigation experience with stacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1053"
  },
  {
    "text": "using the new NavigationSplitView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1057"
  },
  {
    "text": "NavigationStack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1060"
  },
  {
    "text": "value-presenting NavigationLinks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1062"
  },
  {
    "text": "and Lists with selection in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1064"
  },
  {
    "text": "As with the previous recipe, this one also automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1068"
  },
  {
    "text": "adapts to narrow presentations and works on all platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1071"
  },
  {
    "text": "It was fun exploring these recipes for structuring ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1077"
  },
  {
    "text": "the navigation in my app, but our navigation feast ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1079"
  },
  {
    "text": "wouldn't be complete without dessert. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1084"
  },
  {
    "text": "For that, let's look at how to persist the navigation state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1086"
  },
  {
    "text": "To persist navigation state in my app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1091"
  },
  {
    "text": "I just need two more ingredients: ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1093"
  },
  {
    "text": "Codable and SceneStorage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1095"
  },
  {
    "text": "This recipe has three basic steps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1098"
  },
  {
    "text": "First, I'll encapsulate my navigation state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1101"
  },
  {
    "text": "in a NavigationModel type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1103"
  },
  {
    "text": "That lets me save and restore it as a unit ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1106"
  },
  {
    "text": "so it's always consistent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1108"
  },
  {
    "text": "Then, I'll make my navigation model Codable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1110"
  },
  {
    "text": "Finally, I'll use SceneStorage to save and restore my model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1114"
  },
  {
    "text": "I'll have to take care along the way -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1118"
  },
  {
    "text": "I don't want my app to crash like a fallen soufflé -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1120"
  },
  {
    "text": "but the steps are straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1123"
  },
  {
    "text": "Let's look at step one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1125"
  },
  {
    "text": "Here's the code from the end of our last recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1128"
  },
  {
    "text": "My navigation state is stored in the selectedCategory ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1131"
  },
  {
    "text": "and path properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1134"
  },
  {
    "text": "The selectedCategory tracks the selection in the sidebar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1135"
  },
  {
    "text": "The path tracks the views pushed onto the stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1139"
  },
  {
    "text": "in the detail area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1142"
  },
  {
    "text": "I'll introduce a new NavigationModel class ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1144"
  },
  {
    "text": "and make it conform to ObservableObject. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1146"
  },
  {
    "text": "Next, I'll move my navigation state into my model object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1152"
  },
  {
    "text": "changing the property wrappers from State to Published. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1157"
  },
  {
    "text": "Then, I'll introduce a StateObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1162"
  },
  {
    "text": "to hold an instance of my NavigationModel ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1164"
  },
  {
    "text": "and change the parameters to use the new model object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1167"
  },
  {
    "text": "Next, I'll make my navigation model Codable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1173"
  },
  {
    "text": "I'll start by adding the Codable conformance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1177"
  },
  {
    "text": "to the class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1178"
  },
  {
    "text": "In many cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1179"
  },
  {
    "text": "Swift can automatically generate Codable conformance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1181"
  },
  {
    "text": "but I want to implement my own conformance here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1183"
  },
  {
    "text": "The main reason is that Recipe is a model value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1186"
  },
  {
    "text": "I don't want to store the entire model value ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1190"
  },
  {
    "text": "for state restoration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1192"
  },
  {
    "text": "There are two reasons for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1194"
  },
  {
    "text": "First, my recipe database ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1195"
  },
  {
    "text": "already contains all the details for the recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1197"
  },
  {
    "text": "It's not a good use of storage to repeat that information ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1200"
  },
  {
    "text": "in my saved navigation state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1203"
  },
  {
    "text": "Second, if my recipe database can change independently ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1206"
  },
  {
    "text": "of my local navigation state -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1209"
  },
  {
    "text": "say, because I finally get around to adding syncing -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1211"
  },
  {
    "text": "I don't want my local navigation state to contain stale data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1214"
  },
  {
    "text": "For custom codability, next I'll add CodingKeys. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1219"
  },
  {
    "text": "One of the keys is just selectedCategory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1223"
  },
  {
    "text": "But notice that I named the other \"recipePathIds” ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1225"
  },
  {
    "text": "I'm planning to just store ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1229"
  },
  {
    "text": "the identifiers of the recipes on the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1230"
  },
  {
    "text": "In my encode method, I'll create a keyed container ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1234"
  },
  {
    "text": "using my coding keys and add the selected category ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1237"
  },
  {
    "text": "to the container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1240"
  },
  {
    "text": "I'm using encodeIfPresent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1242"
  },
  {
    "text": "so I only write the value if it's non-nil. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1244"
  },
  {
    "text": "Then, I'll add the recipe path identifiers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1248"
  },
  {
    "text": "Note that I'm mapping over the path ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1252"
  },
  {
    "text": "to get the identifiers to encode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1254"
  },
  {
    "text": "For example, suppose my navigation state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1257"
  },
  {
    "text": "included Dessert as a selected category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1259"
  },
  {
    "text": "with Apple Pie and Pie Crust on the path, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1262"
  },
  {
    "text": "like shown in the green box on top. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1265"
  },
  {
    "text": "This might be encoded to JSON, like shown in this other box. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1267"
  },
  {
    "text": "To finish up Codability, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1274"
  },
  {
    "text": "I'll add the required initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1275"
  },
  {
    "text": "The interesting bit is here where I decode the recipe IDs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1278"
  },
  {
    "text": "then use my shared data model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1282"
  },
  {
    "text": "to convert the IDs back into recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1283"
  },
  {
    "text": "I'm using compactMap to discard any recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1288"
  },
  {
    "text": "that couldn't be found. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1290"
  },
  {
    "text": "For example, this might happen if I delete a recipe ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1292"
  },
  {
    "text": "on another device after I have sync working -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1294"
  },
  {
    "text": "something I'm definitely going to do someday. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1297"
  },
  {
    "text": "This is a place you'll need to use discretion ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1300"
  },
  {
    "text": "in your own apps to make sure any restored navigation state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1302"
  },
  {
    "text": "still makes sense. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1306"
  },
  {
    "text": "Finally, I'll add a computed property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1310"
  },
  {
    "text": "for reading and writing my model as JSON data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1312"
  },
  {
    "text": "Now that I have a navigation model ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1316"
  },
  {
    "text": "and it knows how to encode and decode itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1318"
  },
  {
    "text": "all that's left is to actually save and restore it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1320"
  },
  {
    "text": "For that I'll use SceneStorage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1323"
  },
  {
    "text": "Here's where we left our main view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1327"
  },
  {
    "text": "I was using a StateObject to hold my NavigationModel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1329"
  },
  {
    "text": "Now, I'll introduce some SceneStorage ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1332"
  },
  {
    "text": "to persist my NavigationModel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1334"
  },
  {
    "text": "SceneStorage properties automatically save and restore ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1338"
  },
  {
    "text": "their associated values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1341"
  },
  {
    "text": "When the type of the storage is optional, like my data here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1342"
  },
  {
    "text": "the value is nil when a new scene is created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1346"
  },
  {
    "text": "When the system restores a scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1350"
  },
  {
    "text": "SwiftUI ensures that the value of the SceneStorage property ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1351"
  },
  {
    "text": "is also restored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1355"
  },
  {
    "text": "I'll take advantage of this to persist my NavigationModel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1356"
  },
  {
    "text": "To do that, I'll add a task modifier to my view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1360"
  },
  {
    "text": "The task modifier runs its closure asynchronously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1365"
  },
  {
    "text": "It starts when the view appears ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1368"
  },
  {
    "text": "and is cancelled when the view goes away. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1370"
  },
  {
    "text": "Whenever my view appears, I'll first check whether I have ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1373"
  },
  {
    "text": "any existing data from a previous run of the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1376"
  },
  {
    "text": "If so, I'll update my navigation model with that data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1380"
  },
  {
    "text": "Then, I'll start an asynchronous for loop that will iterate ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1385"
  },
  {
    "text": "whenever my navigation model changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1389"
  },
  {
    "text": "The body of this loop will run on each change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1391"
  },
  {
    "text": "so I can use that to save my navigation state ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1395"
  },
  {
    "text": "back to my scene storage data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1397"
  },
  {
    "text": "And that's it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1401"
  },
  {
    "text": "When I leave my app to go check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1403"
  },
  {
    "text": "some vintage Julia Child cooking shows on the web, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1404"
  },
  {
    "text": "it remembers where I was. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1407"
  },
  {
    "text": "When I return to the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1409"
  },
  {
    "text": "it takes me back to where I left off. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1410"
  },
  {
    "text": "Now, no cookbook would be complete ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1414"
  },
  {
    "text": "without a weird section at the end with handy kitchen tips. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1415"
  },
  {
    "text": "I don't have three great substitutes for cilantro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1419"
  },
  {
    "text": "but I do have some navigation tips to share. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1421"
  },
  {
    "text": "Switch to the new NavigationStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1425"
  },
  {
    "text": "and NavigationSplitView as soon as you can. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1427"
  },
  {
    "text": "If you're using NavigationView with the stack style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1430"
  },
  {
    "text": "switch to NavigationStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1433"
  },
  {
    "text": "NavigationStack is also a good first choice on Apple TV, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1435"
  },
  {
    "text": "Apple Watch, or in sheets on iPad and iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1439"
  },
  {
    "text": "where the stack style has always been the default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1443"
  },
  {
    "text": "If you're using a multicolumn NavigationView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1446"
  },
  {
    "text": "switch to NavigationSplitView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1448"
  },
  {
    "text": "And if you've already adopted programmatic navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1451"
  },
  {
    "text": "using the links that take bindings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1454"
  },
  {
    "text": "I strongly encourage you to move ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1456"
  },
  {
    "text": "to the new value-presenting NavigationLink ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1458"
  },
  {
    "text": "along with navigation paths and list selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1460"
  },
  {
    "text": "The old-style programmatic links are deprecated ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1464"
  },
  {
    "text": "beginning in iOS 16 and aligned releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1467"
  },
  {
    "text": "For details and examples on migrating to the new APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1471"
  },
  {
    "text": "check out the article, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1475"
  },
  {
    "text": "\"Migrating to new navigation types\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1476"
  },
  {
    "text": "in the developer documentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1478"
  },
  {
    "text": "Next, keep in mind that List and the new NavigationSplitView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1481"
  },
  {
    "text": "and NavigationStack were made to mix together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1485"
  },
  {
    "text": "Compose them to create navigation experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1488"
  },
  {
    "text": "your guests will love. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1491"
  },
  {
    "text": "When using navigation stacks, navigation destinations ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1494"
  },
  {
    "text": "can be anywhere inside the stack or its subviews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1496"
  },
  {
    "text": "Consider putting destinations near the corresponding links ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1500"
  },
  {
    "text": "to make maintenance easier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1503"
  },
  {
    "text": "but remember not to put them inside of lazy containers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1505"
  },
  {
    "text": "Finally, I'd encourage you to start building ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1508"
  },
  {
    "text": "your navigation experiences with NavigationSplitView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1511"
  },
  {
    "text": "when it makes sense. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1514"
  },
  {
    "text": "Even if you're initially developing for iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1515"
  },
  {
    "text": "NavigationSplitView will automatically adapt ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1517"
  },
  {
    "text": "to the narrower device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1520"
  },
  {
    "text": "And when you're ready to support iPhone Pro Max in landscape, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1522"
  },
  {
    "text": "or to bring your app to iPad or Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1525"
  },
  {
    "text": "NavigationSplitView ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1527"
  },
  {
    "text": "will take advantage of all that additional space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1529"
  },
  {
    "text": "Thanks for the chance ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1532"
  },
  {
    "text": "to share the new SwiftUI Navigation APIs with you! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1533"
  },
  {
    "text": "Besides the talks I mentioned earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1536"
  },
  {
    "text": "I invite you to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1539"
  },
  {
    "text": "\"Bring multiple windows to your SwiftUI app\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1540"
  },
  {
    "text": "for some great info on opening new windows and scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1542"
  },
  {
    "text": "in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1545"
  },
  {
    "text": "I hope that these recipes for navigation in our cookbook app ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1547"
  },
  {
    "text": "were palate-pleasing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1550"
  },
  {
    "text": "I'm looking forward to seeing the great experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1551"
  },
  {
    "text": "you cook up in your own apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1554"
  },
  {
    "text": "Bon appétit! ",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1555"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2022-10054/?time=1558"
  }
]