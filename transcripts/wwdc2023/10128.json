[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=0"
  },
  {
    "text": "Pawel Szczerbuk: Hello, my name is Pawel Szczerbuk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=10"
  },
  {
    "text": "and I'm a GPU Software Engineer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=12"
  },
  {
    "text": "Metal can help you scale your ray tracing applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=15"
  },
  {
    "text": "to complex and detailed scenes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=18"
  },
  {
    "text": "Ray tracing is fundamental to image fidelity in production rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=21"
  },
  {
    "text": "while ray tracing in games focuses on high frame rates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=24"
  },
  {
    "text": "while improving visual quality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=28"
  },
  {
    "text": "This image of Disney's Moana Island Scene was rendered with Metal ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=30"
  },
  {
    "text": "Today I am going to talk about how to use Metal ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=36"
  },
  {
    "text": "I will highlight some exciting new features you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=40"
  },
  {
    "text": "to accelerate ray tracing in games and production renderers.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=43"
  },
  {
    "text": "Ray tracing applications simulate individual rays of light ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=49"
  },
  {
    "text": "bouncing around a scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=52"
  },
  {
    "text": "To render with Metal ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=55"
  },
  {
    "text": "the first step is to define your scene geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=57"
  },
  {
    "text": "Then Metal builds an Acceleration Structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=60"
  },
  {
    "text": "that contains your geometry and can be efficiently queried ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=63"
  },
  {
    "text": "for intersections using GPU acceleration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=67"
  },
  {
    "text": "In a GPU function, create a ray to intersect with your scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=70"
  },
  {
    "text": "Make an intersector object in your shader and provide it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=75"
  },
  {
    "text": "with both your ray and the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=78"
  },
  {
    "text": "This returns an intersection result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=82"
  },
  {
    "text": "with all the information you may need ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=84"
  },
  {
    "text": "to either shade the pixel, or process it further. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=86"
  },
  {
    "text": "Each of these pieces work together to enable you to build your scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=90"
  },
  {
    "text": "use instancing to add visual complexity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=94"
  },
  {
    "text": "and perform ray intersection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=98"
  },
  {
    "text": "And there are some amazing tools at your disposal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=101"
  },
  {
    "text": "to help you work with ray tracing applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=104"
  },
  {
    "text": "It all starts with building your scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=108"
  },
  {
    "text": "The Metal ray tracing API supports a few different types of geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=112"
  },
  {
    "text": "All of this geometry is stored in an acceleration structure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=116"
  },
  {
    "text": "An acceleration structure speeds up the ray tracing process ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=122"
  },
  {
    "text": "by recursively partitioning the geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=125"
  },
  {
    "text": "This allows for quick elimination of any geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=129"
  },
  {
    "text": "that does not intersect with the ray. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=132"
  },
  {
    "text": "You can set up an acceleration structure in three steps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=135"
  },
  {
    "text": "Create an acceleration structure descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=140"
  },
  {
    "text": "where you will provide your actual geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=142"
  },
  {
    "text": "Once you have the descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=145"
  },
  {
    "text": "you can allocate the acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=147"
  },
  {
    "text": "and then build it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=149"
  },
  {
    "text": "An acceleration structure descriptor contains one or more geometry descriptors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=152"
  },
  {
    "text": "There are three types of geometry descriptors available in Metal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=158"
  },
  {
    "text": "Triangles are the primitives we all know and love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=162"
  },
  {
    "text": "used to model almost everything in computer graphics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=165"
  },
  {
    "text": "Bounding box primitives are entirely defined ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=168"
  },
  {
    "text": "by your custom intersection function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=171"
  },
  {
    "text": "that Metal will call when a ray hits an enclosing bounding box. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=173"
  },
  {
    "text": "And new this year, curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=178"
  },
  {
    "text": "These are great for rendering hair and fur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=180"
  },
  {
    "text": "To create an acceleration structure using triangles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=185"
  },
  {
    "text": "create a triangle geometry descriptor for an individual piece of geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=188"
  },
  {
    "text": "You'll provide a vertex buffer, index buffer, and triangle count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=193"
  },
  {
    "text": "Bounding box geometry works in a similar way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=198"
  },
  {
    "text": "except instead of vertices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=201"
  },
  {
    "text": "you provide the bounding boxes that enclose your geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=203"
  },
  {
    "text": "Additionally, you provide an intersection function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=207"
  },
  {
    "text": "which Metal will invoke when a ray hits your bounding box primitive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=210"
  },
  {
    "text": "For more details about how to set up the intersection function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=215"
  },
  {
    "text": "see the 2020 \"Discover ray tracing with Metal\" talk.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=219"
  },
  {
    "text": "Geometry such as hair, fur, and vegetation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=224"
  },
  {
    "text": "can have thousands or even millions of primitives. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=227"
  },
  {
    "text": "These are typically modeled as fine, smooth curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=231"
  },
  {
    "text": "Instead of using triangles to approximate these curves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=234"
  },
  {
    "text": "you can use Metal's new curve primitives. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=237"
  },
  {
    "text": "These curves will remain smooth even as the camera zooms in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=240"
  },
  {
    "text": "And compared to triangles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=244"
  },
  {
    "text": "curves have a more compact memory footprint ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=246"
  },
  {
    "text": "and allow faster acceleration structure builds.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=249"
  },
  {
    "text": "A full curve is made of a series of connected curve segments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=254"
  },
  {
    "text": "Every segment on a curve is its own primitive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=259"
  },
  {
    "text": "and Metal assigns each segment a unique primitive ID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=262"
  },
  {
    "text": "Each of these segments is defined by a series of control points, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=266"
  },
  {
    "text": "which control the shape of the curve. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=270"
  },
  {
    "text": "These control points are interpolated using a set of basis functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=273"
  },
  {
    "text": "Depending on the basis function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=278"
  },
  {
    "text": "each curve segment can have 2, 3, or 4 control points. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=280"
  },
  {
    "text": "Metal offers four different curve basis functions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=284"
  },
  {
    "text": "Bezier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=289"
  },
  {
    "text": "Catmull-Rom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=290"
  },
  {
    "text": "B-Spline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=291"
  },
  {
    "text": "and Linear. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=293"
  },
  {
    "text": "Each of these basis functions has their own benefits, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=295"
  },
  {
    "text": "so choose the best one for your use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=298"
  },
  {
    "text": "Metal also requires a control point index buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=301"
  },
  {
    "text": "Each curve segment has one index in this buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=305"
  },
  {
    "text": "representing the first control point for the segment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=308"
  },
  {
    "text": "For example, say you have four control points. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=312"
  },
  {
    "text": "You define a curve segment using the index of its first control point, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=315"
  },
  {
    "text": "so add a zero to the index buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=320"
  },
  {
    "text": "This example is using Catmull-Rom basis function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=323"
  },
  {
    "text": "so the actual curve segment is only defined between control points 1 and 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=326"
  },
  {
    "text": "All you need to do to connect another curve segment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=332"
  },
  {
    "text": "is add one more control point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=335"
  },
  {
    "text": "This additional curve segment uses control points 1 through 4, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=337"
  },
  {
    "text": "so add a 1 to the index buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=341"
  },
  {
    "text": "These two curve segments share 3 control points because of the index buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=344"
  },
  {
    "text": "which is one reason curves are able to save memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=349"
  },
  {
    "text": "Repeat this as many times as needed to finish the curve. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=352"
  },
  {
    "text": "To start a new curve, simply add additional control points ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=356"
  },
  {
    "text": "which don't overlap the previous control points ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=360"
  },
  {
    "text": "and add the corresponding index to the index buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=363"
  },
  {
    "text": "So far the curves I've described have been abstract mathematical objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=366"
  },
  {
    "text": "In order to render them, they need to have some kind of 3D shape. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=371"
  },
  {
    "text": "Each control point also has a radius ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=376"
  },
  {
    "text": "which is interpolated along the length of the curve. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=378"
  },
  {
    "text": "By default, curves are rendered with a 3D cylindrical cross section. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=381"
  },
  {
    "text": "This is great for curves that will be seen from close-up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=386"
  },
  {
    "text": "For curves that will only be seen from far away, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=390"
  },
  {
    "text": "Metal also supports flat curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=392"
  },
  {
    "text": "This can improve performance whenever you don't need full 3D geometry.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=395"
  },
  {
    "text": "Similar to triangles and bounding boxes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=401"
  },
  {
    "text": "curve geometry is represented with a curve geometry descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=403"
  },
  {
    "text": "Attach the buffers containing your control points, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=408"
  },
  {
    "text": "the corresponding radii, and control point indices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=410"
  },
  {
    "text": "Set the number of control points in the control point buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=414"
  },
  {
    "text": "as well as the number of actual curve segments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=417"
  },
  {
    "text": "This should be the same as the number of indices in the index buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=420"
  },
  {
    "text": "Specify what kind of curves you are using. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=426"
  },
  {
    "text": "This example uses round Bezier curves with 4 control points per curve segment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=428"
  },
  {
    "text": "That's all you need to do to set up a curve geometry descriptor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=434"
  },
  {
    "text": "Now that you've created your geometry descriptors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=439"
  },
  {
    "text": "you can set up the acceleration structure descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=442"
  },
  {
    "text": "Use the primitive acceleration structure descriptor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=447"
  },
  {
    "text": "for primitive geometry like triangles, bounding boxes, and curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=449"
  },
  {
    "text": "Add the geometry descriptor to the acceleration structure descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=454"
  },
  {
    "text": "Multiple geometry descriptors can be added to a single acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=459"
  },
  {
    "text": "to combine the geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=463"
  },
  {
    "text": "When you have your acceleration structure descriptor ready, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=466"
  },
  {
    "text": "you can allocate memory for the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=469"
  },
  {
    "text": "Metal gives you full control over when and where this memory is allocated.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=473"
  },
  {
    "text": "This is a two-part operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=479"
  },
  {
    "text": "First calculate the size of the objects needed for the build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=482"
  },
  {
    "text": "The Metal device provides a method to calculate the required allocation size ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=487"
  },
  {
    "text": "for an acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=491"
  },
  {
    "text": "Although it's possible to allocate storage for acceleration structures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=493"
  },
  {
    "text": "directly from the Metal device, allocating them from a heap ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=496"
  },
  {
    "text": "will allow you to reduce resource management overhead later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=500"
  },
  {
    "text": "The heap may have additional size and alignment requirements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=504"
  },
  {
    "text": "which you can query using another method on the Metal device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=507"
  },
  {
    "text": "With these sizes you can now allocate memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=512"
  },
  {
    "text": "to store the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=515"
  },
  {
    "text": "This storage is represented by an MTL Acceleration Structure object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=518"
  },
  {
    "text": "To allocate one of these objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=522"
  },
  {
    "text": "call the make Acceleration Structure method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=524"
  },
  {
    "text": "on a heap or Metal device, passing the size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=527"
  },
  {
    "text": "You will also allocate some scratch memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=531"
  },
  {
    "text": "which Metal will use while building the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=534"
  },
  {
    "text": "Since this memory only needs to be accessed by the GPU, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=538"
  },
  {
    "text": "you can do this by allocating a private storage mode buffer from the Metal device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=542"
  },
  {
    "text": "Now you're ready to actually build the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=548"
  },
  {
    "text": "Schedule the build operation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=552"
  },
  {
    "text": "and then Metal will build the acceleration for you on the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=553"
  },
  {
    "text": "You do this using an acceleration structure command encoder.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=558"
  },
  {
    "text": "This encoder has several methods that you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=564"
  },
  {
    "text": "to build and modify acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=567"
  },
  {
    "text": "In this case, call the build method with the destination acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=570"
  },
  {
    "text": "the descriptor, and the scratch buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=574"
  },
  {
    "text": "Metal will build the primitive acceleration structure for your geometry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=577"
  },
  {
    "text": "and it will be available for use in subsequent GPU commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=581"
  },
  {
    "text": "That's how you can represent the geometry in your scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=585"
  },
  {
    "text": "with a primitive acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=588"
  },
  {
    "text": "To help you scale to larger scenes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=591"
  },
  {
    "text": "Metal also supports instance acceleration structures.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=593"
  },
  {
    "text": "It would take an enormous amount of memory to store a complex, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=597"
  },
  {
    "text": "detailed environment like the Moana island scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=601"
  },
  {
    "text": "in a single primitive acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=604"
  },
  {
    "text": "But this intricate scene has a repetitive structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=607"
  },
  {
    "text": "in the thousands of trees, millions of leaves, and other objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=611"
  },
  {
    "text": "which can be exploited to render the scene efficiently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=615"
  },
  {
    "text": "All unique objects in the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=619"
  },
  {
    "text": "including the mountains, corals, and trees, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=621"
  },
  {
    "text": "can be represented as primitive acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=624"
  },
  {
    "text": "These can be combined into an instance acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=628"
  },
  {
    "text": "representing the whole scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=632"
  },
  {
    "text": "So while a primitive acceleration structure contains geometry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=634"
  },
  {
    "text": "an instance acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=639"
  },
  {
    "text": "contains references to other acceleration structures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=641"
  },
  {
    "text": "transformed to different positions, sizes, and orientations to compose a full scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=644"
  },
  {
    "text": "Each instance has a transformation matrix ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=650"
  },
  {
    "text": "to place the acceleration structure that it references in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=652"
  },
  {
    "text": "Building an instance acceleration structure is similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=656"
  },
  {
    "text": "to building a primitive acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=659"
  },
  {
    "text": "You will start by creating a descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=663"
  },
  {
    "text": "This time, instead of geometry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=666"
  },
  {
    "text": "you provide a buffer containing information about each instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=668"
  },
  {
    "text": "like the acceleration structure it references, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=672"
  },
  {
    "text": "and the transformation matrix that places it in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=674"
  },
  {
    "text": "Then build the acceleration structure on the GPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=678"
  },
  {
    "text": "in the same way that you build a primitive acceleration structure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=681"
  },
  {
    "text": "To create the descriptor, construct an MTL Instance Acceleration Structure Descriptor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=687"
  },
  {
    "text": "and set the number of instances it will contain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=692"
  },
  {
    "text": "Then provide an array of the primitive acceleration structures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=696"
  },
  {
    "text": "which can be referenced by instances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=700"
  },
  {
    "text": "and specify which type of instance descriptor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=702"
  },
  {
    "text": "will be contained in the instance buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=705"
  },
  {
    "text": "Metal offers several instance descriptor types which you can choose from, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=708"
  },
  {
    "text": "depending on your use-case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=712"
  },
  {
    "text": "You will configure the instances in the acceleration structure in two steps.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=715"
  },
  {
    "text": "First, allocate a buffer to store the per-instance data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=721"
  },
  {
    "text": "The size of this buffer depends on the number of instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=726"
  },
  {
    "text": "and the size of each instance descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=730"
  },
  {
    "text": "but it's allocated just like any other Metal buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=733"
  },
  {
    "text": "Once you've allocated the buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=737"
  },
  {
    "text": "assign it to the instance acceleration structure descriptor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=739"
  },
  {
    "text": "Next you will fill the instance buffer with information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=743"
  },
  {
    "text": "about all of the instances in the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=747"
  },
  {
    "text": "For each instance, create a descriptor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=751"
  },
  {
    "text": "and specify the acceleration structure that this instance refers to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=754"
  },
  {
    "text": "You will identify the acceleration structure with an index into the array ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=759"
  },
  {
    "text": "that you set on the instance acceleration structure descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=763"
  },
  {
    "text": "Each instance also has a transformation matrix, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=768"
  },
  {
    "text": "visibility mask, and other properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=771"
  },
  {
    "text": "depending on which type of instance descriptor you are using.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=774"
  },
  {
    "text": "The last step is to build the actual acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=779"
  },
  {
    "text": "which is the same process as for a primitive acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=782"
  },
  {
    "text": "All of the steps before the build can run on the CPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=787"
  },
  {
    "text": "But if the number of instances is large, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=790"
  },
  {
    "text": "the process of filling out the instance buffer can become compute intensive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=793"
  },
  {
    "text": "Since instance descriptors are stored in a normal Metal buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=797"
  },
  {
    "text": "you can accelerate this step by filling out these descriptors from the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=801"
  },
  {
    "text": "This is a great opportunity for GPU acceleration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=807"
  },
  {
    "text": "as long as you know how many instances your acceleration structure will contain ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=810"
  },
  {
    "text": "before you hand off the work to the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=815"
  },
  {
    "text": "But if you want to do something like instance culling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=818"
  },
  {
    "text": "you would have to cull instances on the CPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=821"
  },
  {
    "text": "so you can set the final instance count on the descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=824"
  },
  {
    "text": "New this year, you can drive this process on the GPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=828"
  },
  {
    "text": "with the new indirect instance acceleration structure descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=831"
  },
  {
    "text": "With this indirect descriptor, you can cull instances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=835"
  },
  {
    "text": "fill the instance buffer, and set the final instance count ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=839"
  },
  {
    "text": "entirely on the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=842"
  },
  {
    "text": "To perform a GPU-driven acceleration structure build, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=844"
  },
  {
    "text": "create an indirect instance acceleration structure descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=848"
  },
  {
    "text": "Set the maximum instance count on the descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=852"
  },
  {
    "text": "and the buffer where you will write the final instance count from the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=855"
  },
  {
    "text": "Then simply set the instance descriptor buffer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=860"
  },
  {
    "text": "and you're ready to start configuring instances on the GPU.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=863"
  },
  {
    "text": "You will use a different type of descriptor in the instance buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=868"
  },
  {
    "text": "The indirect instance descriptor is similar to the direct instance descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=872"
  },
  {
    "text": "except that you can identify the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=876"
  },
  {
    "text": "being instanced by simply assigning it to the descriptor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=880"
  },
  {
    "text": "That's how you build an instance acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=884"
  },
  {
    "text": "So far, I've talked about two-level model of instancing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=888"
  },
  {
    "text": "In this model, a forest in the Moana island scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=892"
  },
  {
    "text": "is composed of thousands of instances of different trees. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=895"
  },
  {
    "text": "But if we dig deeper, a tree itself is a trunk with many copies of the same leaf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=899"
  },
  {
    "text": "You can take advantage of this structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=905"
  },
  {
    "text": "using the new multi-level instancing feature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=907"
  },
  {
    "text": "With multi-level instancing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=911"
  },
  {
    "text": "an instance acceleration structure can contain ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=913"
  },
  {
    "text": "not just primitive acceleration structures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=916"
  },
  {
    "text": "but also other instance acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=919"
  },
  {
    "text": "For example, in this scene a palm tree can be expressed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=922"
  },
  {
    "text": "as an instance acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=926"
  },
  {
    "text": "containing a trunk and instances of a leaf, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=928"
  },
  {
    "text": "while the scene as a whole can contain instances of the palm tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=932"
  },
  {
    "text": "The Moana island scene is a great example of the power of multi-level instancing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=937"
  },
  {
    "text": "When using two levels of instancing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=943"
  },
  {
    "text": "adding one type of tree to a scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=945"
  },
  {
    "text": "could mean adding hundreds or even thousands of copies of parts of the tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=947"
  },
  {
    "text": "But with multi-level instancing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=953"
  },
  {
    "text": "you can add instances of a complex tree, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=955"
  },
  {
    "text": "defined with repeated instances of its parts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=958"
  },
  {
    "text": "This saves millions of instances across the Moana island scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=961"
  },
  {
    "text": "But multi-level instancing isn't just for production renderers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=966"
  },
  {
    "text": "It is also valuable for real time apps like games.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=970"
  },
  {
    "text": "Games also use the two-level acceleration structure pattern, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=976"
  },
  {
    "text": "building worlds from instances of game objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=979"
  },
  {
    "text": "However, games are different from production renderers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=982"
  },
  {
    "text": "Production renderers use deep hierarchies to reuse objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=986"
  },
  {
    "text": "but games use long lists of instances for game objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=990"
  },
  {
    "text": "Games also rebuild their instance acceleration structure each frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=994"
  },
  {
    "text": "for their dynamic content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=998"
  },
  {
    "text": "and high instance count mean a lot of GPU time for the rebuild.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1000"
  },
  {
    "text": "However in a game, a lot of the content is static ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1006"
  },
  {
    "text": "and doesn't need to be updated every frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1010"
  },
  {
    "text": "You can split the world into static and dynamic acceleration structures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1012"
  },
  {
    "text": "to limit acceleration structure updates to only the content that changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1017"
  },
  {
    "text": "This means only rebuilding the dynamic content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1022"
  },
  {
    "text": "which is typically much less than the static content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1025"
  },
  {
    "text": "When applying this split of static and dynamic content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1028"
  },
  {
    "text": "it is important to balance the depth of the hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1032"
  },
  {
    "text": "with the additional cost of ray traversal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1035"
  },
  {
    "text": "In a frame with acceleration structure building and ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1038"
  },
  {
    "text": "using 3 levels of instancing allows you to reduce build time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1042"
  },
  {
    "text": "with only minor impact on trace time, overall reducing the frame time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1047"
  },
  {
    "text": "Multi-level instancing is a great tool to reduce memory usage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1052"
  },
  {
    "text": "and speed up rebuilds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1056"
  },
  {
    "text": "You also have other ways you can optimize your Metal ray tracing apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1058"
  },
  {
    "text": "One of them is Build parallelization.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1062"
  },
  {
    "text": "A typical application will need to build or update ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1066"
  },
  {
    "text": "many acceleration structures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1070"
  },
  {
    "text": "representing different scenes and different parts of a scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1071"
  },
  {
    "text": "You can greatly reduce your start-up time by running these builds in parallel.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1075"
  },
  {
    "text": "Whenever you can, be sure to batch your builds ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1081"
  },
  {
    "text": "by encoding multiple builds to the same command encoder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1084"
  },
  {
    "text": "so they can run in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1087"
  },
  {
    "text": "You will want to parallelize as many builds as you can ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1090"
  },
  {
    "text": "while ensuring that the working set fits in memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1093"
  },
  {
    "text": "Also remember that after an acceleration structure build completes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1097"
  },
  {
    "text": "the scratch buffer is no longer needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1101"
  },
  {
    "text": "This means that you can re-use the scratch buffers from one batch ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1104"
  },
  {
    "text": "of acceleration structure builds to the next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1107"
  },
  {
    "text": "Sometimes the best way to reduce the time spent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1112"
  },
  {
    "text": "rebuilding acceleration structures is to avoid rebuilding altogether. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1114"
  },
  {
    "text": "This is where acceleration structure refitting comes in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1119"
  },
  {
    "text": "When Metal builds an acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1123"
  },
  {
    "text": "it groups nearby primitives into a hierarchy of boxes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1126"
  },
  {
    "text": "If your primitives move, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1129"
  },
  {
    "text": "those boxes no longer accurately represent the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1131"
  },
  {
    "text": "and the acceleration structure needs to be updated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1135"
  },
  {
    "text": "But if the geometry only changes slightly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1138"
  },
  {
    "text": "then the hierarchy may still be reasonable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1141"
  },
  {
    "text": "Instead of building a new acceleration structure from scratch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1144"
  },
  {
    "text": "Metal can refit the existing acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1147"
  },
  {
    "text": "to reflect the new positions of primitives in your geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1151"
  },
  {
    "text": "This is cheaper than rebuilding the acceleration structure from scratch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1156"
  },
  {
    "text": "Refit requires a scratch buffer like a build operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1161"
  },
  {
    "text": "The size of the refit scratch buffer is in the same struct you used earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1165"
  },
  {
    "text": "to allocate the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1169"
  },
  {
    "text": "The refit operation runs on the GPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1172"
  },
  {
    "text": "and is encoded with an acceleration structure command encoder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1175"
  },
  {
    "text": "The refit can operate in-place or into a different acceleration structure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1179"
  },
  {
    "text": "Finally, compaction is a great way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1184"
  },
  {
    "text": "to reduce the size of your acceleration structures in memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1187"
  },
  {
    "text": "When you first build an acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1191"
  },
  {
    "text": "Metal can't know exactly how much memory it needs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1194"
  },
  {
    "text": "so it has to make a conservative estimate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1197"
  },
  {
    "text": "Once you've built the acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1201"
  },
  {
    "text": "Metal can calculate the minimum size needed to represent it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1203"
  },
  {
    "text": "With compaction, you can allocate a new acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1208"
  },
  {
    "text": "with the minimal size, and then use the GPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1212"
  },
  {
    "text": "to copy from the current acceleration structure to the new one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1215"
  },
  {
    "text": "This is especially valuable for primitive acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1219"
  },
  {
    "text": "To use compaction, encode a command ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1224"
  },
  {
    "text": "to calculate the compacted size of your acceleration structure on the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1226"
  },
  {
    "text": "When you execute the command, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1231"
  },
  {
    "text": "Metal will write the compacted size to a buffer that you provide. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1233"
  },
  {
    "text": "Once you've read the compacted size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1238"
  },
  {
    "text": "you can allocate a new acceleration structure with that size ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1240"
  },
  {
    "text": "and then encode a \"copy and compact\" operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1243"
  },
  {
    "text": "from the old to the new acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1246"
  },
  {
    "text": "After this command buffer has completed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1250"
  },
  {
    "text": "you can release the original acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1252"
  },
  {
    "text": "To learn more about optimizing your Metal ray tracing apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1255"
  },
  {
    "text": "check out the 2022 \"Maximizing your Metal ray tracing performance\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1259"
  },
  {
    "text": "In this section, I have discussed how to set up instancing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1264"
  },
  {
    "text": "leverage the new multi-level instancing feature, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1268"
  },
  {
    "text": "and handle instancing at scale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1271"
  },
  {
    "text": "Now it's time to intersect rays with the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1274"
  },
  {
    "text": "In Metal, you intersect rays in a GPU function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1279"
  },
  {
    "text": "that executes as part of a command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1282"
  },
  {
    "text": "On Apple Silicon you can intersect rays in both compute and render commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1284"
  },
  {
    "text": "and on AMD and Intel you can intersect rays in compute commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1289"
  },
  {
    "text": "To get ready to intersect rays, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1295"
  },
  {
    "text": "bind your acceleration structure on the command encoder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1297"
  },
  {
    "text": "Now you can intersect rays with this acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1301"
  },
  {
    "text": "in your GPU function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1305"
  },
  {
    "text": "Declare the function with an acceleration structure parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1307"
  },
  {
    "text": "and create an intersector object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1311"
  },
  {
    "text": "You can set properties on this intersector ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1314"
  },
  {
    "text": "to configure ray intersection for the best performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1317"
  },
  {
    "text": "To intersect a ray with your scene, simply create a ray ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1320"
  },
  {
    "text": "and call the intersect method on the intersector object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1324"
  },
  {
    "text": "passing the ray and the acceleration structure as parameters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1327"
  },
  {
    "text": "This returns everything you need to know about the intersection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1332"
  },
  {
    "text": "like the kind of primitive the ray intersected, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1335"
  },
  {
    "text": "the distance to the intersection, the ID of the primitive, and more.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1338"
  },
  {
    "text": "To get more information about the triangle intersection point, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1344"
  },
  {
    "text": "add the \"triangle data\" tag to the intersector ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1347"
  },
  {
    "text": "and \"intersection result\" types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1350"
  },
  {
    "text": "This makes the triangle barycentric coordinates available ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1352"
  },
  {
    "text": "in the intersection result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1356"
  },
  {
    "text": "That covers intersecting rays with a primitive acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1359"
  },
  {
    "text": "Intersecting rays with an instance acceleration structure is very similar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1364"
  },
  {
    "text": "Bind your instance acceleration structure the same way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1370"
  },
  {
    "text": "you bind a primitive acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1373"
  },
  {
    "text": "and be sure to call useResource or useHeap ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1377"
  },
  {
    "text": "to make the acceleration structures referenced ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1380"
  },
  {
    "text": "in your instance acceleration structure available on the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1382"
  },
  {
    "text": "You only need to make a couple of changes to your GPU function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1387"
  },
  {
    "text": "to intersect rays with an instance acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1391"
  },
  {
    "text": "First add the instancing tag to the acceleration structure type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1396"
  },
  {
    "text": "Then add the instancing and \"max levels\" tags ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1401"
  },
  {
    "text": "to your intersector and \"intersection result\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1404"
  },
  {
    "text": "The \"max levels\" tag specifies the number of levels of instancing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1407"
  },
  {
    "text": "in your acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1411"
  },
  {
    "text": "For example, the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1414"
  },
  {
    "text": "representing the Moana island scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1416"
  },
  {
    "text": "is a three-level acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1419"
  },
  {
    "text": "The first level is the instance acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1422"
  },
  {
    "text": "containing the whole scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1425"
  },
  {
    "text": "The second level has instances of corals, trees, and the terrain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1427"
  },
  {
    "text": "The third level has instances of the parts of the trees, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1432"
  },
  {
    "text": "like leaves, flowers, and trunks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1435"
  },
  {
    "text": "When a ray intersects this scene, it doesn't just intersect a primitive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1438"
  },
  {
    "text": "but also the instances that contain the primitive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1442"
  },
  {
    "text": "If a ray intersects a leaf of this tree, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1446"
  },
  {
    "text": "it also intersects an instance of the tree, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1449"
  },
  {
    "text": "and an instance of the leaf in the tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1452"
  },
  {
    "text": "Metal keeps track of this for you by recording the ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1455"
  },
  {
    "text": "of each intersected instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1459"
  },
  {
    "text": "In this case, the first intersected instance is the tree with an ID of 6, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1461"
  },
  {
    "text": "and the second intersected instance is the leaf with an ID of 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1467"
  },
  {
    "text": "The ray could also intersect just one instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1472"
  },
  {
    "text": "For example, if the ray intersects the terrain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1475"
  },
  {
    "text": "then Metal will only record the ID of the terrain instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1478"
  },
  {
    "text": "You can find the number of instances that were intersected ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1482"
  },
  {
    "text": "and IDs of the intersected instances in the intersection result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1486"
  },
  {
    "text": "That's how you can intersect rays with primitive acceleration structures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1490"
  },
  {
    "text": "and instance acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1494"
  },
  {
    "text": "There are a few things to keep in mind when using curve primitives. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1497"
  },
  {
    "text": "By default, Metal assumes you are not using curve primitives ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1501"
  },
  {
    "text": "when you perform ray intersection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1505"
  },
  {
    "text": "You can tell Metal that you are using curves ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1508"
  },
  {
    "text": "by setting the geometry type on the intersector object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1510"
  },
  {
    "text": "Once you've set the geometry type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1515"
  },
  {
    "text": "you're ready to intersect curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1517"
  },
  {
    "text": "As before, find information about the intersection ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1519"
  },
  {
    "text": "on the intersection result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1522"
  },
  {
    "text": "If you use the \"curve data\" tag, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1524"
  },
  {
    "text": "then the intersection result also contains the curve parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1526"
  },
  {
    "text": "This is the value you can plug into the curve's basis function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1531"
  },
  {
    "text": "to compute the point along the curve where it intersected the ray. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1534"
  },
  {
    "text": "These functions are implemented for you in the Metal Shading Language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1538"
  },
  {
    "text": "You can learn more in the Metal Shading Language specification. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1543"
  },
  {
    "text": "In many applications, curve geometry is represented with just one kind of curve. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1547"
  },
  {
    "text": "For example, all the curves in your scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1552"
  },
  {
    "text": "might be expressed as cubic bezier curves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1555"
  },
  {
    "text": "with circular cross sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1557"
  },
  {
    "text": "In this case, you can tell Metal what kind of curves your scene uses ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1559"
  },
  {
    "text": "by setting the properties of your curves on the intersector object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1563"
  },
  {
    "text": "This allows you to get the best performance when using curve primitives. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1568"
  },
  {
    "text": "That is how you can intersect rays with your scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1572"
  },
  {
    "text": "And you can use Xcode to debug and profile your raytracing workloads.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1576"
  },
  {
    "text": "One of the tools at your disposal when dealing with difficult to debug problems ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1582"
  },
  {
    "text": "is Shader Validation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1586"
  },
  {
    "text": "It performs runtime checks in your shaders ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1587"
  },
  {
    "text": "and catches issues which may lead to crashes or corruptions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1590"
  },
  {
    "text": "Shader Validation now covers all of the Metal API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1595"
  },
  {
    "text": "including the latest ray tracing features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1598"
  },
  {
    "text": "In addition, Shader Validation has greatly reduced impact on shader compilation time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1601"
  },
  {
    "text": "This is extremely helpful when you are working with long and complex shaders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1607"
  },
  {
    "text": "like those commonly found in ray tracing applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1611"
  },
  {
    "text": "Another tool that can help you is the state of the art ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1615"
  },
  {
    "text": "Acceleration Structure viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1618"
  },
  {
    "text": "It enables you to inspect the scene which you use for intersection testing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1620"
  },
  {
    "text": "When I open the Acceleration Structure viewer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1624"
  },
  {
    "text": "I get an outline on the left for navigating the individual building blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1627"
  },
  {
    "text": "in the acceleration structure down to the geometry primitives. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1631"
  },
  {
    "text": "Here, it lists the individual triangles that make up the triangle geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1636"
  },
  {
    "text": "On the right, I have a viewport, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1641"
  },
  {
    "text": "where I can inspect the acceleration structure in various highlighting modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1643"
  },
  {
    "text": "For example, the \"Axis-Aligned Bounding Box Traversals\" highlighting mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1649"
  },
  {
    "text": "can visualize areas with deeper levels of traversals, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1653"
  },
  {
    "text": "which correspond to more expensive intersection testing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1657"
  },
  {
    "text": "As I move the pointer over the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1661"
  },
  {
    "text": "the inspector updates with the number of intersections ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1663"
  },
  {
    "text": "which a ray would hit in the pointed direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1666"
  },
  {
    "text": "Another example is the Acceleration Structure highlight mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1670"
  },
  {
    "text": "This visualizes the acceleration structures in different colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1673"
  },
  {
    "text": "The Acceleration Structure viewer supports the new multi-level instancing feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1678"
  },
  {
    "text": "and curve geometries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1683"
  },
  {
    "text": "When I move the camera in the viewport, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1684"
  },
  {
    "text": "I can find instance acceleration structures for some trees ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1687"
  },
  {
    "text": "and curves for some foliage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1690"
  },
  {
    "text": "To identify an acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1693"
  },
  {
    "text": "I can click in the viewport to reveal it in the outline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1696"
  },
  {
    "text": "Now, take a closer look at the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1700"
  },
  {
    "text": "for these palm leaves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1703"
  },
  {
    "text": "In this acceleration structure, the palm leaves consist of curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1705"
  },
  {
    "text": "I can change the viewport to the Primitive highlight mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1710"
  },
  {
    "text": "to visualize the curve segments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1713"
  },
  {
    "text": "To better inspect the curve segments, I'll zoom in a little bit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1716"
  },
  {
    "text": "Similar to selecting acceleration structures in the scene earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1721"
  },
  {
    "text": "here, I can click to select each segment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1724"
  },
  {
    "text": "Another useful tool at your disposal when examining a ray tracing workload ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1728"
  },
  {
    "text": "is Shader Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1732"
  },
  {
    "text": "This can help you with troubleshooting issues in your shader code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1734"
  },
  {
    "text": "Here, I'm at a compute dispatch which performs intersection testing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1738"
  },
  {
    "text": "in the shader. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1742"
  },
  {
    "text": "To begin debugging my shader, I can the Shader Debugging button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1743"
  },
  {
    "text": "choose a thread in the popover, and then click the Debug button.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1747"
  },
  {
    "text": "After it finishes gathering data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1753"
  },
  {
    "text": "I can examine the value for each variable at any point during shader execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1756"
  },
  {
    "text": "Take a closer look at the value for primitive ID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1761"
  },
  {
    "text": "To provide more debugging context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1765"
  },
  {
    "text": "Shader Debugger also gives me data from the neighboring threads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1767"
  },
  {
    "text": "Here, I can hover the pointer over the value view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1771"
  },
  {
    "text": "to inspect the primitive IDs from the same thread group.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1774"
  },
  {
    "text": "Performance is another important aspect of any app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1779"
  },
  {
    "text": "The Profiling timeline gives an overview of the ray tracing workload performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1783"
  },
  {
    "text": "allowing you to inspect and correlate various performance metrics side by side. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1788"
  },
  {
    "text": "In addition, I can change the Debug navigator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1794"
  },
  {
    "text": "to view all the pipeline states in the workload. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1797"
  },
  {
    "text": "And with the shader profiling data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1800"
  },
  {
    "text": "the navigator lists the most expensive pipeline states at the top. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1802"
  },
  {
    "text": "Further expanding a pipeline state reveals the shader code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1808"
  },
  {
    "text": "After opening a shader, I can get the per-line shader profiling insights ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1812"
  },
  {
    "text": "about where and how each individual shader spends its execution time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1816"
  },
  {
    "text": "When I move the pointer over the pie-chart in the sidebar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1822"
  },
  {
    "text": "it shows a popover with more detailed breakdown ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1825"
  },
  {
    "text": "of the cost at that line of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1828"
  },
  {
    "text": "These tools support all of Metal's new ray tracing features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1831"
  },
  {
    "text": "and can offer great debugging and profiling aids ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1835"
  },
  {
    "text": "when you're working on your Metal apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1838"
  },
  {
    "text": "Metal ray tracing also supports many more features such as: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1842"
  },
  {
    "text": "Primitive and instance motion for animating scenes in production renderers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1845"
  },
  {
    "text": "custom intersection functions, for customizing ray intersection ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1850"
  },
  {
    "text": "with enhancements like alpha testing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1854"
  },
  {
    "text": "and intersection query, for portability from query-based APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1857"
  },
  {
    "text": "The Metal Ray Tracing API, Language and Tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1862"
  },
  {
    "text": "support real time rendering apps like games, and production renderers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1866"
  },
  {
    "text": "You can use the latest Metal Ray Tracing API to build your scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1870"
  },
  {
    "text": "using primitive acceleration structures, including geometry like curves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1874"
  },
  {
    "text": "Instancing and especially the new multi-level instancing feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1879"
  },
  {
    "text": "enables you to scale to larger, more complex scenes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1884"
  },
  {
    "text": "Your GPU functions can call the Metal Ray Tracing APIs directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1888"
  },
  {
    "text": "And finally, Xcode can help you in debugging and profiling your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1893"
  },
  {
    "text": "Be sure to check out the previous ray tracing talks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1898"
  },
  {
    "text": "where we have covered many of these topics in more detail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1901"
  },
  {
    "text": "as well as our sample code and documentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1904"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1908"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10128/?time=1910"
  }
]