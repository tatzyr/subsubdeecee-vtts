[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=0"
  },
  {
    "text": "Ben: Hi, I'm Ben Trumbull, and I'm excited to introduce SwiftData to you.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=10"
  },
  {
    "text": "SwiftData is a powerful framework for data modeling and management ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=15"
  },
  {
    "text": "and enhances your modern Swift app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=19"
  },
  {
    "text": "Like SwiftUI, it focuses entirely on code with no external file formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=21"
  },
  {
    "text": "and uses Swift's new macro system to create a seamless API experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=26"
  },
  {
    "text": "SwiftData relies on the expressivity provided by the new Swift language macros ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=31"
  },
  {
    "text": "in order to create a seamless API experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=36"
  },
  {
    "text": "And it is naturally integrated with SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=38"
  },
  {
    "text": "and works with other platform features, like CloudKit and Widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=41"
  },
  {
    "text": "In this session, we'll look at the new @Model macro and its power ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=45"
  },
  {
    "text": "to model your data directly from Swift code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=49"
  },
  {
    "text": "I'll introduce you to fetching and modifying your data with SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=52"
  },
  {
    "text": "then I'll finish up by providing you with an overview of some ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=57"
  },
  {
    "text": "of the other platform frameworks that work seamlessly with SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=60"
  },
  {
    "text": "Now we'll look more into @Model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=65"
  },
  {
    "text": "@Model is a new Swift macro that helps to define your model's schema ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=69"
  },
  {
    "text": "from your Swift code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=73"
  },
  {
    "text": "SwiftData schemas are normal Swift code, but when needed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=75"
  },
  {
    "text": "you can annotate your properties with additional metadata. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=78"
  },
  {
    "text": "Using this schema, SwiftData adds powerful functionality to your model objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=81"
  },
  {
    "text": "It’s as simple as decorating your class with @Model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=87"
  },
  {
    "text": "and the schema is generated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=90"
  },
  {
    "text": "Models in SwiftData are the source of truth ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=92"
  },
  {
    "text": "for your application's schema and drive the persistence experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=95"
  },
  {
    "text": "Part of this experience will transform the class' stored properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=99"
  },
  {
    "text": "and turns them into persisted properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=102"
  },
  {
    "text": "Adding @Model to your model opens up a world of possibilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=105"
  },
  {
    "text": "SwiftData natively adapts your value type properties to be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=109"
  },
  {
    "text": "as attributes right away. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=113"
  },
  {
    "text": "These properties include basic value types, like string, int, and float. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=115"
  },
  {
    "text": "They can also include more complex value types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=120"
  },
  {
    "text": "such as structs, enums, and codable types too, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=122"
  },
  {
    "text": "including collections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=125"
  },
  {
    "text": "SwiftData models reference types as relationships. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=128"
  },
  {
    "text": "You can create links between your model types ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=131"
  },
  {
    "text": "with relationships and collections of model types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=133"
  },
  {
    "text": "@Model will modify all the stored properties on your type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=137"
  },
  {
    "text": "You can influence how SwiftData builds your schema using metadata ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=142"
  },
  {
    "text": "on your properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=145"
  },
  {
    "text": "With @Attribute, you can add uniqueness constraints. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=147"
  },
  {
    "text": "You can use @Relationship to control the choice of inverses ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=151"
  },
  {
    "text": "and specify delete propagation rules. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=154"
  },
  {
    "text": "These change the behaviors of links between models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=156"
  },
  {
    "text": "You can tell SwiftData not to include specific properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=160"
  },
  {
    "text": "with the Transient macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=164"
  },
  {
    "text": "Here is our previous Trip example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=166"
  },
  {
    "text": "I'll adjust SwiftData's schema generation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=168"
  },
  {
    "text": "by adding metadata to our stored properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=170"
  },
  {
    "text": "I can add @Attribute to name and specify that it should be unique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=174"
  },
  {
    "text": "I can also decorate our bucket list relationship ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=179"
  },
  {
    "text": "with @Relationship and instruct Swift Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=181"
  },
  {
    "text": "to delete all the related bucket list items whenever this trip is deleted. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=184"
  },
  {
    "text": "To learn more about SwiftData modeling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=190"
  },
  {
    "text": "check out the \"Model your schema with SwiftData\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=192"
  },
  {
    "text": "Now I'll cover how you can work with your model types ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=196"
  },
  {
    "text": "and the two key objects you'll use to drive your operations: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=199"
  },
  {
    "text": "SwiftData's ModelContainer and ModelContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=203"
  },
  {
    "text": "The model container provides the persistent backend for your model types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=207"
  },
  {
    "text": "You can use the default settings just by specifying your schema, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=211"
  },
  {
    "text": "or you can customize it with configurations and migration options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=214"
  },
  {
    "text": "You can create a model container just by specifying the list ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=218"
  },
  {
    "text": "of model types you want stored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=221"
  },
  {
    "text": "If you want to customize your container further, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=224"
  },
  {
    "text": "you can use a configuration to change your URL, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=226"
  },
  {
    "text": "CloudKit and group container identifiers, and migration options ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=229"
  },
  {
    "text": "With your container set up, you're ready to fetch and save data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=233"
  },
  {
    "text": "with model contexts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=236"
  },
  {
    "text": "You can also use SwiftUI's view and scene modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=238"
  },
  {
    "text": "to set up container and have it automatically established ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=242"
  },
  {
    "text": "in the view's environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=244"
  },
  {
    "text": "Model contexts observe all the changes to your models and provide many ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=247"
  },
  {
    "text": "of the actions to operate on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=250"
  },
  {
    "text": "They are your interface to tracking updates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=253"
  },
  {
    "text": "fetching data, saving changes, and even undoing those changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=255"
  },
  {
    "text": "In SwiftUI, you'll generally get the modelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=260"
  },
  {
    "text": "from your view's environment after you create your model container.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=263"
  },
  {
    "text": "Outside the view hierarchy, you can ask the model container ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=267"
  },
  {
    "text": "to give you a shared main actor bound context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=270"
  },
  {
    "text": "or you can simply instantiate new contexts for a given model container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=274"
  },
  {
    "text": "Once you have a context, you're ready to fetch data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=278"
  },
  {
    "text": "SwiftData benefits from new Swift native types like predicate and fetch descriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=283"
  },
  {
    "text": "as well as significant improvements to Swift's native sort descriptor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=288"
  },
  {
    "text": "New in iOS 17, predicate works with native Swift types ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=293"
  },
  {
    "text": "and uses Swift macros for strongly typed construction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=297"
  },
  {
    "text": "It's a fully type checked modern replacement for NSPredicate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=300"
  },
  {
    "text": "Implementing your predicates is easy, too, with Xcode support, like autocomplete. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=303"
  },
  {
    "text": "Here are a few examples of building predicates for our Sample Trip app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=308"
  },
  {
    "text": "First, I can specify all the trips whose destination is New York. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=312"
  },
  {
    "text": "I can narrow our query down to just trips about birthdays, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=317"
  },
  {
    "text": "and I can specify we're only interested in trips planned ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=321"
  },
  {
    "text": "for the future, as opposed to any of our past adventures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=325"
  },
  {
    "text": "Once we've decided which trips we're interested in fetching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=329"
  },
  {
    "text": "we can use the new FetchDescriptor type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=331"
  },
  {
    "text": "and instruct our ModelContext to fetch those trips. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=334"
  },
  {
    "text": "Working together with FetchDescriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=338"
  },
  {
    "text": "Swift SortDescriptor is getting some updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=340"
  },
  {
    "text": "to support native Swift types and keypaths, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=342"
  },
  {
    "text": "and we can use SortDescriptor to specify the order in which ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=345"
  },
  {
    "text": "we'd like our fetched Trips to be organized. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=348"
  },
  {
    "text": "FetchDescriptor offers many other ways to tailor your SwiftData queries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=352"
  },
  {
    "text": "In addition to predicates and sorting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=356"
  },
  {
    "text": "you can specify related objects to prefetch, limiting the result count, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=358"
  },
  {
    "text": "excluding unsaved changes from the results, and much more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=363"
  },
  {
    "text": "SwiftData also makes it easy to create, delete, and change your data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=367"
  },
  {
    "text": "by using the ModelContext to drive these operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=371"
  },
  {
    "text": "After creating your model objects like any other Swift classes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=375"
  },
  {
    "text": "you can insert them into the context and begin using SwiftData features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=378"
  },
  {
    "text": "like change tracking and persistence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=382"
  },
  {
    "text": "Deleting persistent objects is as easy as telling the ModelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=385"
  },
  {
    "text": "to mark them for deletion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=388"
  },
  {
    "text": "and you can save these and other pending changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=390"
  },
  {
    "text": "by asking the ModelContext to save them and commit them ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=392"
  },
  {
    "text": "to the persistent container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=395"
  },
  {
    "text": "Changing property values on your model objects is as simple ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=397"
  },
  {
    "text": "as using the property setters as you normally would. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=400"
  },
  {
    "text": "The Model macro modifies your stored properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=403"
  },
  {
    "text": "to help the ModelContext track your changes automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=406"
  },
  {
    "text": "and include them in your next save operation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=409"
  },
  {
    "text": "To learn more about SwiftData containers and contexts and driving its operations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=412"
  },
  {
    "text": "check out the \"Dive Deeper into SwiftData\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=417"
  },
  {
    "text": "SwiftData was built with SwiftUI in mind, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=421"
  },
  {
    "text": "and using them together couldn't be easier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=423"
  },
  {
    "text": "SwiftUI is the easiest way to get started using SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=427"
  },
  {
    "text": "Whether its setting up your SwiftData container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=431"
  },
  {
    "text": "fetching data, or driving your view updates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=434"
  },
  {
    "text": "we've built APIs directly integrating these frameworks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=437"
  },
  {
    "text": "The new SwiftUI scene and view modifiers are the easiest way to get started ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=441"
  },
  {
    "text": "building a SwiftData application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=445"
  },
  {
    "text": "With SwiftUI, you can configure your data store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=447"
  },
  {
    "text": "change your options, enable undo, and toggle autosaving. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=449"
  },
  {
    "text": "SwiftUI will propagate your model context in its environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=454"
  },
  {
    "text": "Once you've set up, the easiest way to start ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=458"
  },
  {
    "text": "using your data is the new @Query property wrapper. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=460"
  },
  {
    "text": "You can easily load and filter anything stored in your database ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=463"
  },
  {
    "text": "with a single line of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=466"
  },
  {
    "text": "SwiftData supports the all-new observable feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=468"
  },
  {
    "text": "for your modeled properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=472"
  },
  {
    "text": "SwiftUI will automatically refresh changes on any of the observed properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=473"
  },
  {
    "text": "SwiftUI and SwiftData work hand in hand ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=478"
  },
  {
    "text": "to help you build engaging and powerful apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=481"
  },
  {
    "text": "Learn more about using these frameworks together ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=484"
  },
  {
    "text": "in our \"Build an app with SwiftData\" session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=486"
  },
  {
    "text": "SwiftData is a powerful new solution to data management, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=490"
  },
  {
    "text": "designed with first-class support for Swift's features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=494"
  },
  {
    "text": "It uses Swift's new macro system to focus entirely on your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=497"
  },
  {
    "text": "Set up your schema using @model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=501"
  },
  {
    "text": "and configure your persistence experience with the model container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=503"
  },
  {
    "text": "You can easily enable persistence, undo and redo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=507"
  },
  {
    "text": "iCloud synchronization, widget development, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=511"
  },
  {
    "text": "Start building SwiftData into your apps right away ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=514"
  },
  {
    "text": "by leveraging SwiftUI's seamless integration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=517"
  },
  {
    "text": "We're excited to see what you build with SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=520"
  },
  {
    "text": "and thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=523"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10187/?time=524"
  }
]