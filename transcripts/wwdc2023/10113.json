[
  {
    "text": "♪ Mellow instrumental hip-hop ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=4"
  },
  {
    "text": "Hi, my name is Mark, and I'm a SwiftUI engineer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=10"
  },
  {
    "text": "I'm pleased to invite you on a journey out of the plane ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=13"
  },
  {
    "text": "and into space using SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=17"
  },
  {
    "text": "To demonstrate how SwiftUI works in a new dimension, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=20"
  },
  {
    "text": "and to show how SwiftUI and RealityKit work together ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=23"
  },
  {
    "text": "in the system to enable incredible experiences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=26"
  },
  {
    "text": "we'll talk about a handful of the APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=29"
  },
  {
    "text": "powering a sample app we've built called World. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=32"
  },
  {
    "text": "World demonstrates several different forms ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=35"
  },
  {
    "text": "applications can take on the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=37"
  },
  {
    "text": "from the familiar window to the new volume, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=40"
  },
  {
    "text": "allowing for bounded 3D experiences to full space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=44"
  },
  {
    "text": "which allows for the display of unbounded virtual content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=48"
  },
  {
    "text": "While most of the APIs we'll discuss in this talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=53"
  },
  {
    "text": "work whether you're adding just a dash of 3D ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=55"
  },
  {
    "text": "in your primarily 2D window app, or creating ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=57"
  },
  {
    "text": "an immersive 3D experience leveraging full space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=61"
  },
  {
    "text": "we'll focus on using Volumes as a container ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=65"
  },
  {
    "text": "since they provide a great way to explore the realm of 3D ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=68"
  },
  {
    "text": "using SwiftUI in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=72"
  },
  {
    "text": "To learn more about the other containers for SwiftUI content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=75"
  },
  {
    "text": "please refer to the ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=78"
  },
  {
    "text": "\"Elevate your windowed app for spatial computing\" talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=79"
  },
  {
    "text": "and the \"Go beyond the window with SwiftUI\" talk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=83"
  },
  {
    "text": "Once we cover the basics of volumes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=86"
  },
  {
    "text": "we'll discuss how you can create and position 3D content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=89"
  },
  {
    "text": "with volumetric views and layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=93"
  },
  {
    "text": "how to integrate SwiftUI views into the new RealityView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=96"
  },
  {
    "text": "and finally how to bring everything together ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=100"
  },
  {
    "text": "with 3D gestures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=102"
  },
  {
    "text": "But before we get too ahead of ourselves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=105"
  },
  {
    "text": "let's talk about what volumes are and how they can help us ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=108"
  },
  {
    "text": "take our first step into the realm of 3D. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=111"
  },
  {
    "text": "World uses volumes to emphasize its 3D content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=116"
  },
  {
    "text": "This scene has no main glass window. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=120"
  },
  {
    "text": "Instead it places its 3D content directly into the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=123"
  },
  {
    "text": "with a panel of controls in front. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=127"
  },
  {
    "text": "But the 3D content is the star of the show here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=129"
  },
  {
    "text": "Volumes provide you with a fixed scale container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=134"
  },
  {
    "text": "Unlike windows that dynamically scale based on the distance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=137"
  },
  {
    "text": "they're placed from you, volumes maintain the same size ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=140"
  },
  {
    "text": "at any distance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=143"
  },
  {
    "text": "Volumes are horizontally aligned and support viewing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=146"
  },
  {
    "text": "from any angle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=149"
  },
  {
    "text": "Volumes are a great way to display 3D content in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=153"
  },
  {
    "text": "without taking over the entire space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=156"
  },
  {
    "text": "and creating one is incredibly simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=159"
  },
  {
    "text": "All you have to do is use the new volumetric window style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=163"
  },
  {
    "text": "when creating a new scene, such as a window group, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=166"
  },
  {
    "text": "and you'll get all these features automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=169"
  },
  {
    "text": "Now that we have our volume set up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=172"
  },
  {
    "text": "let's get some content inside it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=174"
  },
  {
    "text": "To help us do that, RealityKit offers a new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=177"
  },
  {
    "text": "called Model3D, a SwiftUI view that makes it simple ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=181"
  },
  {
    "text": "to load rich 3D assets, such as USDZs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=184"
  },
  {
    "text": "while providing phases to handle different parts ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=188"
  },
  {
    "text": "of the asset loading lifecycle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=190"
  },
  {
    "text": "Think of Model3D as a counterpart to AsyncImage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=194"
  },
  {
    "text": "It handles all the work of loading complex geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=198"
  },
  {
    "text": "while keeping your app running smoothly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=201"
  },
  {
    "text": "Let's use Model3D to show one of the other models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=204"
  },
  {
    "text": "from the World app, the moon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=206"
  },
  {
    "text": "Now, I've already added a moon USDZ file to my project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=210"
  },
  {
    "text": "and I can just pass that name to the Model3D initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=214"
  },
  {
    "text": "Now we can handle the phase of the model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=218"
  },
  {
    "text": "Now, this isn't a phase of the moon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=222"
  },
  {
    "text": "It actually indicates the loading status of the asset, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=224"
  },
  {
    "text": "and it has a couple different states we can switch over. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=227"
  },
  {
    "text": "Before the model has loaded, I can show some text ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=232"
  },
  {
    "text": "or another piece of UI indicating to the user ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=235"
  },
  {
    "text": "the content isn't ready yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=238"
  },
  {
    "text": "I'll use a progress view here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=240"
  },
  {
    "text": "If the model failed to load, I can show an error message ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=245"
  },
  {
    "text": "using the localized description from the error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=249"
  },
  {
    "text": "And if the model succeeds, I can use it in my UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=254"
  },
  {
    "text": "Similar to images, I need to use the resizable modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=262"
  },
  {
    "text": "to tell the layout system that the model can be resized ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=266"
  },
  {
    "text": "according to its available space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=269"
  },
  {
    "text": "And I want the model to fit within its available space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=272"
  },
  {
    "text": "so I'll use the scaledToFit modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=275"
  },
  {
    "text": "Now I have a moon that loads asynchronously in my app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=281"
  },
  {
    "text": "Let's keep building on this example ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=285"
  },
  {
    "text": "to explore more 3D functionality in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=286"
  },
  {
    "text": "Let's inspect some of the other models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=289"
  },
  {
    "text": "that make an appearance in the World app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=291"
  },
  {
    "text": "I want to show all of them at once in a sort of display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=294"
  },
  {
    "text": "We can repurpose the MoonView we just wrote ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=297"
  },
  {
    "text": "to handle displaying any USDZ file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=300"
  },
  {
    "text": "Let's just rename it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=303"
  },
  {
    "text": "And pass in the name of a USDZ file to load. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=307"
  },
  {
    "text": "Now I can replace the hardcoded Moon string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=311"
  },
  {
    "text": "Now let's make a data structure to represent a celestial object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=314"
  },
  {
    "text": "I'll give each one a name and a size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=319"
  },
  {
    "text": "I'll list out a few different objects that I have ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=323"
  },
  {
    "text": "in my project: the Earth, Moon, and sun. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=326"
  },
  {
    "text": "Now I can display each object in an HStack with a ForEach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=330"
  },
  {
    "text": "For each object, I can use the new CelestialObjectView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=335"
  },
  {
    "text": "we just created using the object's name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=339"
  },
  {
    "text": "Let's vary the sizing of each model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=343"
  },
  {
    "text": "using a frame modifier using the object size.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=345"
  },
  {
    "text": "Our models look great from the front, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=353"
  },
  {
    "text": "but remember we're in 3D. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=355"
  },
  {
    "text": "A change of perspective reveals that our objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=358"
  },
  {
    "text": "are back face aligned, as if their bounding boxes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=360"
  },
  {
    "text": "were flush against a plane behind all three of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=363"
  },
  {
    "text": "This is the default alignment for 3D content in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=367"
  },
  {
    "text": "If we want to change that, we can specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=371"
  },
  {
    "text": "the depth alignment to use in a frame depth modifier like so. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=373"
  },
  {
    "text": "I can pass the object's size to use for the depth ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=378"
  },
  {
    "text": "and specify that I want the models front faces aligned ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=381"
  },
  {
    "text": "instead of the back. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=385"
  },
  {
    "text": "Now the views all have their front faces aligned instead. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=387"
  },
  {
    "text": "Now I want to give each object a label. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=394"
  },
  {
    "text": "I can do that by giving each Model3D an overlay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=396"
  },
  {
    "text": "Inside I'll make a text label with a glass background effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=401"
  },
  {
    "text": "to make sure it's always readable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=407"
  },
  {
    "text": "I'll also make these labels are aligned to the bottom ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=410"
  },
  {
    "text": "of the model, so I don't block the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=413"
  },
  {
    "text": "The display looks great so far, but it feels a bit static. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=420"
  },
  {
    "text": "Finally, let's explore some of SwiftUI's new additions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=424"
  },
  {
    "text": "to geometry effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=427"
  },
  {
    "text": "I can use a TimelineView to animate a change in time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=429"
  },
  {
    "text": "Now I'll give our views some spin ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=437"
  },
  {
    "text": "using the new Rotation3DEffect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=439"
  },
  {
    "text": "I'll make one and give it an angle ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=442"
  },
  {
    "text": "based on the current date with a scale factor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=444"
  },
  {
    "text": "And I'll have the objects spin around the y-axis. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=451"
  },
  {
    "text": "And just like that, we've got our objects spinning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=456"
  },
  {
    "text": "Model3D is great for loading and displaying simple assets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=460"
  },
  {
    "text": "in your view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=463"
  },
  {
    "text": "But for more involved 3D models, scenes, or experiences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=465"
  },
  {
    "text": "RealityView is SwiftUI's entry point ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=469"
  },
  {
    "text": "to unleash the power of RealityKit in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=471"
  },
  {
    "text": "And indeed, the World app uses RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=476"
  },
  {
    "text": "to break down its more complex visualizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=479"
  },
  {
    "text": "using the RealityKit Entity-Component system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=481"
  },
  {
    "text": "This allows for rendering the individual models, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=485"
  },
  {
    "text": "as well as advanced rendering effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=488"
  },
  {
    "text": "like lighting and orbit paths. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=490"
  },
  {
    "text": "Thanks to the new RealityView, SwiftUI and RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=494"
  },
  {
    "text": "go hand in hand on the platform. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=497"
  },
  {
    "text": "For more information about RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=500"
  },
  {
    "text": "and more new RealityKit features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=502"
  },
  {
    "text": "please see \"Build spatial experiences with RealityKit\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=504"
  },
  {
    "text": "and \"Enhance your spatial computing app with RealityKit.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=508"
  },
  {
    "text": "For now, let's talk about how you can make the most ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=511"
  },
  {
    "text": "of SwiftUI within your RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=513"
  },
  {
    "text": "using the new attachments API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=516"
  },
  {
    "text": "Attachments allow you to pair a tagged SwiftUI view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=519"
  },
  {
    "text": "with an entity that you can use inside your RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=522"
  },
  {
    "text": "Attachments are great for adding annotations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=526"
  },
  {
    "text": "or editing affordances relative to specific entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=529"
  },
  {
    "text": "If you've used the Canvas API in SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=536"
  },
  {
    "text": "attachments will probably feel familiar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=539"
  },
  {
    "text": "The key difference with attachments ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=542"
  },
  {
    "text": "is that they are live views, not just snapshots. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=543"
  },
  {
    "text": "This means they can respond to state changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=547"
  },
  {
    "text": "run animations, and handle gestures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=550"
  },
  {
    "text": "Let's explore attachments inside the World app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=553"
  },
  {
    "text": "by adding on some extra functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=555"
  },
  {
    "text": "that will let me place some markers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=557"
  },
  {
    "text": "tracking my favorite places around the world. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=559"
  },
  {
    "text": "In the Earth view, I've created some state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=562"
  },
  {
    "text": "tracking an array of some of my favorite places, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=565"
  },
  {
    "text": "each with a name and location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=568"
  },
  {
    "text": "For each place, I can create some text with its name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=571"
  },
  {
    "text": "And I can give it a glass background effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=576"
  },
  {
    "text": "so that it's always legible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=579"
  },
  {
    "text": "And now I'll give it a tag so that I can reference it later ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=581"
  },
  {
    "text": "in my RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=584"
  },
  {
    "text": "This tag can be any hashable value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=587"
  },
  {
    "text": "but I'll use a unique identifier I've added for each place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=590"
  },
  {
    "text": "Now I can look up an entity hosting each attachment view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=595"
  },
  {
    "text": "using the tag I specified. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=599"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=601"
  },
  {
    "text": "I can add this entity to my RealityView content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=613"
  },
  {
    "text": "And then I can use the lookAt function to position and orient ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=620"
  },
  {
    "text": "the label along the surface of the globe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=623"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=626"
  },
  {
    "text": "We have a couple interesting places pinpointed now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=636"
  },
  {
    "text": "But let's not get too attached to this app quite yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=639"
  },
  {
    "text": "I have some more ideas for how we can take it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=643"
  },
  {
    "text": "to the next level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=645"
  },
  {
    "text": "So, now we know how to position 3D content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=647"
  },
  {
    "text": "and make the most of SwiftUI inside of RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=650"
  },
  {
    "text": "using attachments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=653"
  },
  {
    "text": "Now let's talk about how to interact with all this content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=655"
  },
  {
    "text": "The platform brings the gestures you're already familiar with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=659"
  },
  {
    "text": "into the third dimension with support for hands and eyes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=662"
  },
  {
    "text": "as well as new trackpad mechanics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=665"
  },
  {
    "text": "Let's use these new capabilities to extend our progress ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=667"
  },
  {
    "text": "on the World app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=671"
  },
  {
    "text": "We have a pretty good thing going ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=672"
  },
  {
    "text": "with our \"Favorite Places\" extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=674"
  },
  {
    "text": "However I don't think I'm satisfied ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=676"
  },
  {
    "text": "with the number of places we have mapped out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=678"
  },
  {
    "text": "Let's make a way to add some more ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=681"
  },
  {
    "text": "using a tap gesture on the globe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=683"
  },
  {
    "text": "Before we jump into that though, let's talk about ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=686"
  },
  {
    "text": "how to configure an entity for input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=688"
  },
  {
    "text": "Let's say we're configuring our RealityView with our content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=692"
  },
  {
    "text": "Here I've already added a model of the Earth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=696"
  },
  {
    "text": "An entity hierarchy needs an InputTargetComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=701"
  },
  {
    "text": "to receive input inside RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=704"
  },
  {
    "text": "If the component is added to an entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=707"
  },
  {
    "text": "all that entity's descendants can also receive input ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=709"
  },
  {
    "text": "unless otherwise specified. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=713"
  },
  {
    "text": "In RealityKit, CollisionComponent is used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=716"
  },
  {
    "text": "for defining the shape of an entity's interactive region. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=719"
  },
  {
    "text": "Let's use a sphere for the Earth model so that we can get ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=723"
  },
  {
    "text": "an accurate interaction point on its surface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=726"
  },
  {
    "text": "This is all we need to allow for our entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=729"
  },
  {
    "text": "to handle SwiftUI gestures inside RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=732"
  },
  {
    "text": "At this point, I can add a SpatialTapGesture ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=735"
  },
  {
    "text": "to my RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=738"
  },
  {
    "text": "But to make it even easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=743"
  },
  {
    "text": "to use SwiftUI gestures with your RealityKit content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=745"
  },
  {
    "text": "we've added a new gesture modifier called targetedToEntity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=748"
  },
  {
    "text": "that I can use to target my earthEntity specifically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=752"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=755"
  },
  {
    "text": "If the tap doesn't occur on this entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=761"
  },
  {
    "text": "or one of its descendants, the gesture will fail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=763"
  },
  {
    "text": "Now let's handle the gesture value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=766"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=768"
  },
  {
    "text": "SpatialTapGesture has a new location3D property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=772"
  },
  {
    "text": "allowing us to get an accurate tap point ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=775"
  },
  {
    "text": "on the surface of the globe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=778"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=779"
  },
  {
    "text": "The 3D location is in the RealityView's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=785"
  },
  {
    "text": "local SwiftUI coordinate space in points, not meters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=787"
  },
  {
    "text": "To figure out where we want to place our new label, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=791"
  },
  {
    "text": "we'll need to convert the location ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=794"
  },
  {
    "text": "into the RealityView's scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=796"
  },
  {
    "text": "The targetedToEntity modifier makes this super easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=799"
  },
  {
    "text": "by adding on some coordinate space conversion helpers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=802"
  },
  {
    "text": "to the gesture's value itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=805"
  },
  {
    "text": "We can use that to convert from SwiftUI local space ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=807"
  },
  {
    "text": "to the scene's coordinate space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=810"
  },
  {
    "text": "Finally, I can add the data for the new place ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=813"
  },
  {
    "text": "using the location we just calculated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=816"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=818"
  },
  {
    "text": "I'll also scale up the location just a tad so that the labels ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=829"
  },
  {
    "text": "float slightly above the Earth's surface.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=832"
  },
  {
    "text": "We now have a way to add more favorite places to the globe ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=839"
  },
  {
    "text": "with just a tap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=842"
  },
  {
    "text": "But now we have a problem: we need to discover more places! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=844"
  },
  {
    "text": "To do that, let's launch a satellite that can help us ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=849"
  },
  {
    "text": "pick out more exciting spots around the world. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=851"
  },
  {
    "text": "One way to add a satellite model to our globe would be ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=854"
  },
  {
    "text": "to load a model using RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=857"
  },
  {
    "text": "but let's use some of the other techniques we've learned about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=860"
  },
  {
    "text": "I can add a Model3D as an attachment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=863"
  },
  {
    "text": "Specifying a frame makes resizing the satellite model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=869"
  },
  {
    "text": "to a reasonable size super easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=872"
  },
  {
    "text": "I'll also give my model a tag so I can reference it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=877"
  },
  {
    "text": "in my RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=880"
  },
  {
    "text": "Just like with the labels, I need to add my model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=885"
  },
  {
    "text": "to my RealityView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=887"
  },
  {
    "text": "Now, let's define a gesture that returns a 3D transform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=893"
  },
  {
    "text": "that will let us define scale, rotation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=896"
  },
  {
    "text": "and positioning of our satellite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=899"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=901"
  },
  {
    "text": "I'll start with dragging using a DragGesture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=908"
  },
  {
    "text": "To convert from a drag gesture to a transform, I'll use a map. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=913"
  },
  {
    "text": "DragGesture has several new properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=919"
  },
  {
    "text": "to handle manipulation in 3D. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=921"
  },
  {
    "text": "We can use the DragGesture's new translation3D property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=924"
  },
  {
    "text": "to get how much the drag has moved since it started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=927"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=930"
  },
  {
    "text": "Now I'll create the transform. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=935"
  },
  {
    "text": "I can pass in the translation to the initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=938"
  },
  {
    "text": "and return it from the map. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=941"
  },
  {
    "text": "Now I can use our manipulation gesture ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=944"
  },
  {
    "text": "that we just wrote to transform my satellite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=946"
  },
  {
    "text": "I'm going to use the updating modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=952"
  },
  {
    "text": "to track when the gesture is active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=954"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=957"
  },
  {
    "text": "I can use this state to shrink down all our labels ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=969"
  },
  {
    "text": "during the interaction so that they don't ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=972"
  },
  {
    "text": "block our view of the Earth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=973"
  },
  {
    "text": "It's important to use updating to track ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=975"
  },
  {
    "text": "any transient gesture state I have ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=977"
  },
  {
    "text": "because it guarantees that my gesture state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=979"
  },
  {
    "text": "will automatically be reset if the gesture fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=982"
  },
  {
    "text": "When my gesture value changes, I can set the state's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=985"
  },
  {
    "text": "new transform and then use offset modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=987"
  },
  {
    "text": "to position the satellite model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=991"
  },
  {
    "text": "I'll also animate changes to the transform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=993"
  },
  {
    "text": "using a spring animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=995"
  },
  {
    "text": "so that when we let go of the satellite, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=997"
  },
  {
    "text": "it animates back to its original place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=999"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1001"
  },
  {
    "text": "Now we can drag the satellite around. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1007"
  },
  {
    "text": "This is a great start, but we need to see this thing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1009"
  },
  {
    "text": "in more detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1012"
  },
  {
    "text": "Now that we have everything hooked up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1013"
  },
  {
    "text": "let's add on some scaling action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1015"
  },
  {
    "text": "For this I add a MagnifyGesture that recognizes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1017"
  },
  {
    "text": "simultaneously with the drag. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1020"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1025"
  },
  {
    "text": "I'll also add the new RotateGesture3D, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1029"
  },
  {
    "text": "which can measure unconstrained 3D rotation of the user's hands.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1031"
  },
  {
    "text": "I'll plug in these new values to our transform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1039"
  },
  {
    "text": "and finally I need to update the rotation and scale ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1042"
  },
  {
    "text": "of the entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1045"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1046"
  },
  {
    "text": "I'll use the rotation3DEffect and scaleEffect for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1062"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1067"
  },
  {
    "text": "And there we have it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1073"
  },
  {
    "text": "We can now freely drag, scale, and rotate our satellite entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1074"
  },
  {
    "text": "Our satellite looks like it's ready for voyage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1079"
  },
  {
    "text": "The gestures we've added work with all the input devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1082"
  },
  {
    "text": "and modes you'd expect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1085"
  },
  {
    "text": "including direct interaction with hands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1086"
  },
  {
    "text": "indirect pinch, trackpad, and accessibility features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1089"
  },
  {
    "text": "Using familiar SwiftUI gestures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1094"
  },
  {
    "text": "along with the new targetedToEntity modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1096"
  },
  {
    "text": "you can quickly build interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1099"
  },
  {
    "text": "within intricate entity hierarchies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1101"
  },
  {
    "text": "We're now ready to explore the planet with our satellite, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1104"
  },
  {
    "text": "but now it's time for you to explore ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1107"
  },
  {
    "text": "SwiftUI's new 3D capabilities in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1109"
  },
  {
    "text": "New scene types like volumes and full spaces allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1113"
  },
  {
    "text": "to consider what an application can be in all new ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1117"
  },
  {
    "text": "The powerful layout and rendering systems in SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1121"
  },
  {
    "text": "have been extended to make SwiftUI not only a powerful way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1124"
  },
  {
    "text": "to build apps on iOS, macOS, tvOS, and watchOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1128"
  },
  {
    "text": "but on this all-new platform as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1132"
  },
  {
    "text": "The new attachments API opens up incredible new opportunities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1135"
  },
  {
    "text": "to integrate SwiftUI views into 3D scenes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1139"
  },
  {
    "text": "And finally we've explored how to put the stories ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1143"
  },
  {
    "text": "you tell people right into the palms of their hands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1146"
  },
  {
    "text": "using familiar and powerful gestures in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1149"
  },
  {
    "text": "Thanks to SwiftUI and RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1153"
  },
  {
    "text": "you have an exciting journey ahead ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1155"
  },
  {
    "text": "beyond the bounds of the 2D plane. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1157"
  },
  {
    "text": "And we're only getting started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1159"
  },
  {
    "text": "Welcome to the platform! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1161"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10113/?time=1163"
  }
]