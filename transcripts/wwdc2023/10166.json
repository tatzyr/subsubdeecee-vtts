[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=0"
  },
  {
    "text": "Alex Hoppen: Who likes writing repetitive boilerplate code? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=10"
  },
  {
    "text": "Nobody does! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=13"
  },
  {
    "text": "And that's why in Swift 5.9 we are introducing Swift macros. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=15"
  },
  {
    "text": "Swift macros allow you to generate that repetitive code at compile time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=20"
  },
  {
    "text": "making your app's codebases more expressive and easier to read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=24"
  },
  {
    "text": "My name is Alex Hoppen, and today I am going to show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=29"
  },
  {
    "text": "how you can write your own macros. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=33"
  },
  {
    "text": "I will start off by giving you a short overview of how macros work.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=36"
  },
  {
    "text": "Afterwards, we will jump straight into Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=42"
  },
  {
    "text": "and see how you can create your first macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=45"
  },
  {
    "text": "Having seen our first macro in Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=50"
  },
  {
    "text": "we will explore more roles in which you can use macros ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=53"
  },
  {
    "text": "and I will show you how I used macros ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=56"
  },
  {
    "text": "to simplify the codebase of an app I am currently working on.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=59"
  },
  {
    "text": "Finally, I will show you how macros can communicate errors or warnings ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=65"
  },
  {
    "text": "back to the compiler if they are not applicable in a certain context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=69"
  },
  {
    "text": "So let's get started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=75"
  },
  {
    "text": "Here we have a list of calculations that first-year students can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=77"
  },
  {
    "text": "to practice their arithmetic skills. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=81"
  },
  {
    "text": "We have the result as an integer on the left ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=83"
  },
  {
    "text": "and the calculation as a string literal on the right side of the tuple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=87"
  },
  {
    "text": "Notice how this is repetitive, redundant, and even error prone ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=91"
  },
  {
    "text": "because nobody can guarantee that the result actually matches the calculation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=96"
  },
  {
    "text": "Luckily, with Swift 5.9 we can define a stringify macro to simplify this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=101"
  },
  {
    "text": "This macro also happens to be the one ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=108"
  },
  {
    "text": "that is included in Xcode's template. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=110"
  },
  {
    "text": "The stringify macro only takes the calculation as a single parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=113"
  },
  {
    "text": "At compile time it expands to the tuple that we saw before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=118"
  },
  {
    "text": "guaranteeing that the calculation and the result match. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=122"
  },
  {
    "text": "So how does this work? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=127"
  },
  {
    "text": "Let's take a look at the definition of the macro itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=129"
  },
  {
    "text": "Notice that it looks a lot like a function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=133"
  },
  {
    "text": "The stringify macro takes an integer as the input parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=136"
  },
  {
    "text": "and outputs a tuple containing an the result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=141"
  },
  {
    "text": "an integer, and the calculation-- a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=144"
  },
  {
    "text": "If the arguments of the macro expression don't match the macro's parameters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=148"
  },
  {
    "text": "or don't type check by themselves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=153"
  },
  {
    "text": "the compiler will emit an error without applying the macro expansion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=155"
  },
  {
    "text": "For example, if I pass a string literal to this macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=160"
  },
  {
    "text": "the compiler complains that 'String' is not convertible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=163"
  },
  {
    "text": "to expected argument type 'Int'. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=167"
  },
  {
    "text": "This is different to, for example, C macros, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=171"
  },
  {
    "text": "which are evaluated at the pre-processor stage before type-checking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=174"
  },
  {
    "text": "But it allows us to use all the powers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=179"
  },
  {
    "text": "that you know and love from Swift functions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=181"
  },
  {
    "text": "like being able to make your macro generic.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=184"
  },
  {
    "text": "Also note that this macro is declared with the freestanding expression macro role. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=188"
  },
  {
    "text": "This means that you can use the macro wherever you can use an expression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=194"
  },
  {
    "text": "and that it will be indicated by the hash character, like we see with #stringify. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=198"
  },
  {
    "text": "Other kinds of macros are attached macros that can augment declarations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=204"
  },
  {
    "text": "I will cover those later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=210"
  },
  {
    "text": "After checking that all the arguments match the macro's parameters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=212"
  },
  {
    "text": "the compiler performs the macro expansion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=216"
  },
  {
    "text": "To see how that works, let's focus on a single macro expression.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=220"
  },
  {
    "text": "To perform the expansion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=227"
  },
  {
    "text": "each macro defines its implementation in a compiler plug-in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=229"
  },
  {
    "text": "The compiler will send the source code of the entire macro expression ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=233"
  },
  {
    "text": "to that plug-in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=237"
  },
  {
    "text": "The first thing that the macro plug-in does, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=239"
  },
  {
    "text": "is to parse the source code of the macro into a SwiftSyntax tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=242"
  },
  {
    "text": "This tree is a source-accurate, structural representation of the macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=248"
  },
  {
    "text": "and it will be the basis on which the macro operates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=253"
  },
  {
    "text": "For example, our 'stringify' macro is represented in the tree ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=257"
  },
  {
    "text": "as a macro expansion expression node. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=262"
  },
  {
    "text": "That expression has the macro name 'stringify'. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=266"
  },
  {
    "text": "And it takes a single argument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=271"
  },
  {
    "text": "which is the infix operator plus applied to 2 and 3. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=273"
  },
  {
    "text": "What's really powerful about Swift macros ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=278"
  },
  {
    "text": "is that that the macro's implementation is itself a program written in Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=281"
  },
  {
    "text": "and can perform any transformation to the syntax tree it wants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=286"
  },
  {
    "text": "In our case, it generates a tuple like we saw before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=291"
  },
  {
    "text": "It will then serialize the generated syntax tree into source code again ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=296"
  },
  {
    "text": "and send it to the compiler, which will replace the macro expression ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=301"
  },
  {
    "text": "by the expanded code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=304"
  },
  {
    "text": "That's really cool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=309"
  },
  {
    "text": "but now I want to understand how all of this actually looks like in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=310"
  },
  {
    "text": "The new macro template in Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=316"
  },
  {
    "text": "defines the stringify macro that we have just seen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=318"
  },
  {
    "text": "Let us walk through that template and explore the macro's definition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=322"
  },
  {
    "text": "how the expansion works, and how the macro can be tested. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=326"
  },
  {
    "text": "To create the template, I click File, New, Package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=331"
  },
  {
    "text": "and now I select the Swift Macro template.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=337"
  },
  {
    "text": "Let's call our first macro \"WWDC\".",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=343"
  },
  {
    "text": "So what do we get with the template? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=355"
  },
  {
    "text": "Here we have an invocation of the #stringify macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=358"
  },
  {
    "text": "similar to what we have seen before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=362"
  },
  {
    "text": "It takes a parameter \"a + b\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=365"
  },
  {
    "text": "and returns the result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=368"
  },
  {
    "text": "as well as the code that produced it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=370"
  },
  {
    "text": "If I want to know what the macro expands to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=372"
  },
  {
    "text": "I can right-click on it and select Expand Macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=375"
  },
  {
    "text": "That's exactly what we saw before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=380"
  },
  {
    "text": "But how is the macro defined? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=383"
  },
  {
    "text": "Let's jump to its definition.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=386"
  },
  {
    "text": "Here we have a slightly generalized version ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=392"
  },
  {
    "text": "of our previous 'stringify' macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=394"
  },
  {
    "text": "Instead of taking an integer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=398"
  },
  {
    "text": "this macro is generic and can receive any type T.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=399"
  },
  {
    "text": "The macro is declared as an external macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=407"
  },
  {
    "text": "This tells the compiler that to perform the expansion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=412"
  },
  {
    "text": "it needs to look at the StringifyMacro type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=415"
  },
  {
    "text": "in the WWDCMacros module.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=420"
  },
  {
    "text": "How is that type defined? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=424"
  },
  {
    "text": "Let's take a closer look at it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=427"
  },
  {
    "text": "Because stringify is declared as a freestanding expression macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=430"
  },
  {
    "text": "the StringifyMacro type needs to conform to the ExpressionMacro protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=434"
  },
  {
    "text": "This protocol has a single requirement: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=440"
  },
  {
    "text": "The expansion function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=444"
  },
  {
    "text": "It takes the syntax tree of the macro expression itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=446"
  },
  {
    "text": "as well as a context that can be used to communicate with the compiler.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=450"
  },
  {
    "text": "The expansion function then returns the rewritten expression syntax.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=456"
  },
  {
    "text": "What does it do in the implementation? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=462"
  },
  {
    "text": "At first, it retrieves the single argument to the macro expression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=465"
  },
  {
    "text": "It knows that this argument exists because stringify is declared ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=472"
  },
  {
    "text": "as taking a single parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=476"
  },
  {
    "text": "and all arguments need to type-check ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=479"
  },
  {
    "text": "before the macro expansion can be applied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=481"
  },
  {
    "text": "It then uses string interpolation to create the syntax tree of a tuple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=485"
  },
  {
    "text": "The first element is the argument itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=490"
  },
  {
    "text": "and the second is a string literal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=494"
  },
  {
    "text": "containing the source code of the argument.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=496"
  },
  {
    "text": "Notice that the function is not returning a string here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=500"
  },
  {
    "text": "It is returning an expression syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=504"
  },
  {
    "text": "The macro will automatically invoke the Swift parser ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=507"
  },
  {
    "text": "to transform this literal into a syntax tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=510"
  },
  {
    "text": "And because it is using the literal interpolation style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=514"
  },
  {
    "text": "for the second argument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=517"
  },
  {
    "text": "it will make sure that the literal's contents are properly escaped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=519"
  },
  {
    "text": "Nobody likes bugs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=524"
  },
  {
    "text": "But what I like even less are bugs in code that I don't see ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=526"
  },
  {
    "text": "unless I explicitly ask for it by expanding the macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=530"
  },
  {
    "text": "That is why you want to make sure that your macro is well-tested. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=534"
  },
  {
    "text": "Because macros don't have side effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=538"
  },
  {
    "text": "and the source code of syntax trees is easy to compare, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=541"
  },
  {
    "text": "a great way to test them is to write unit tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=544"
  },
  {
    "text": "The macro template already comes with one.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=548"
  },
  {
    "text": "This test case uses the 'assertMacroExpansion' function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=552"
  },
  {
    "text": "from the SwiftSyntax package ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=556"
  },
  {
    "text": "to verify that the 'stringify' macro expands correctly.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=558"
  },
  {
    "text": "It takes the '#stringify(a + b)' expression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=563"
  },
  {
    "text": "that we saw before, as input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=566"
  },
  {
    "text": "and asserts that after the macro is expanded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=569"
  },
  {
    "text": "it produces a tuple containing 'a + b' ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=573"
  },
  {
    "text": "and the string literal 'a + b'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=577"
  },
  {
    "text": "To tell the test case how to expand the macros, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=582"
  },
  {
    "text": "it passes the 'testMacros' parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=585"
  },
  {
    "text": "which specifies that the macro ‘#stringify' ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=588"
  },
  {
    "text": "should be expanded using the 'StringifyMacro' type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=591"
  },
  {
    "text": "Let's run the tests in the same way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=595"
  },
  {
    "text": "that you might already run the tests of your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=598"
  },
  {
    "text": "to see if they indeed pass.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=600"
  },
  {
    "text": "The tests pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=609"
  },
  {
    "text": "and with that, we already have our first macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=611"
  },
  {
    "text": "In it, we saw its basic building blocks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=616"
  },
  {
    "text": "The macro declaration defines the macro's signature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=620"
  },
  {
    "text": "It also declares the macros roles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=624"
  },
  {
    "text": "The compiler plug-in performs the expansion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=628"
  },
  {
    "text": "It is a program that is itself written in Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=631"
  },
  {
    "text": "and operates on SwiftSyntax trees.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=635"
  },
  {
    "text": "We also saw that macros are very testable ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=639"
  },
  {
    "text": "because they are deterministic transformations of syntax trees ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=642"
  },
  {
    "text": "and the source code of syntax trees is easy to compare. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=646"
  },
  {
    "text": "So you might wonder, \"In which other situations can we use macros?\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=651"
  },
  {
    "text": "We have already seen a freestanding expression macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=656"
  },
  {
    "text": "Just to recap, this macro is spelled with a hash ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=660"
  },
  {
    "text": "and allows you to rewrite the entire macro expression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=663"
  },
  {
    "text": "There's also a freestanding declaration role ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=667"
  },
  {
    "text": "that expands to a declaration instead of an expression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=670"
  },
  {
    "text": "The other kinds of macros are attached macros. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=674"
  },
  {
    "text": "These are spelled with an @, just like attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=678"
  },
  {
    "text": "and allow the macro to augment the declaration they are attached to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=681"
  },
  {
    "text": "For example, an attached member macro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=685"
  },
  {
    "text": "adds new members of the type it is attached to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=688"
  },
  {
    "text": "To learn more about these other roles, I highly recommend watching ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=692"
  },
  {
    "text": "\"Expand on Swift macros\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=695"
  },
  {
    "text": "where Becca goes over them in great detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=697"
  },
  {
    "text": "But I want to focus on the attached member role ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=700"
  },
  {
    "text": "because it helped me improve the codebase of an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=703"
  },
  {
    "text": "I am currently working on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=706"
  },
  {
    "text": "I am also a ski instructor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=708"
  },
  {
    "text": "and recently I have been working on an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=710"
  },
  {
    "text": "that allows me to plan the tours I want to take my students on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=713"
  },
  {
    "text": "One thing you absolutely want to avoid as a ski instructor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=717"
  },
  {
    "text": "is to take beginners on slopes that are too hard for them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=721"
  },
  {
    "text": "I want to use the Swift type system to enforce that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=724"
  },
  {
    "text": "That's why, in addition to the Slope enum ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=728"
  },
  {
    "text": "that contains all the slopes in my favorite ski resort, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=731"
  },
  {
    "text": "I also have an EasySlope type that only contains slopes suitable for beginners. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=734"
  },
  {
    "text": "It has an initializer to convert a slope to an easy slope, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=740"
  },
  {
    "text": "if the slope is indeed easy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=744"
  },
  {
    "text": "and a computed property to convert an easy slope back to a general slope.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=748"
  },
  {
    "text": "While this provides great type safety, it is really repetitive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=754"
  },
  {
    "text": "If I want to add an easy slope, I need to add it to Slope...",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=758"
  },
  {
    "text": "EasySlope, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=765"
  },
  {
    "text": "the initializer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=768"
  },
  {
    "text": "and the computed property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=770"
  },
  {
    "text": "Let's see if we can improve things using a macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=773"
  },
  {
    "text": "What we want to do is to automatically generate the initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=776"
  },
  {
    "text": "and the computed property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=780"
  },
  {
    "text": "How can we do this? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=783"
  },
  {
    "text": "Both the initializer and the computed property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=786"
  },
  {
    "text": "are members of the EasySlope type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=789"
  },
  {
    "text": "so we need to declare an attached member macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=792"
  },
  {
    "text": "Next, we will create the compiler plug-in that contains the macro's implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=796"
  },
  {
    "text": "To make sure that our macro behaves as expected, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=803"
  },
  {
    "text": "we want to develop it in a test-driven way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=806"
  },
  {
    "text": "Thus, we will leave its implementation empty ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=809"
  },
  {
    "text": "until we write a test case for it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=812"
  },
  {
    "text": "After we defined the macro's behavior in a test case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=816"
  },
  {
    "text": "we will write the implementation to match that test case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=819"
  },
  {
    "text": "And finally, we will integrate the new macro into my app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=825"
  },
  {
    "text": "If all goes well, we will be able to remove the initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=830"
  },
  {
    "text": "and have the macro generate it for us.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=834"
  },
  {
    "text": "To develop the macro, we work with the template that we created earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=838"
  },
  {
    "text": "And since I don't really need the ‘#stringify' macro in my app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=844"
  },
  {
    "text": "I have already removed it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=847"
  },
  {
    "text": "I start by declaring a new attached member macro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=849"
  },
  {
    "text": "by using the '@attached(member)' attribute.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=853"
  },
  {
    "text": "I call it SlopeSubset because EasySlope is a subset of Slope.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=858"
  },
  {
    "text": "The macro also defines the names of the members it introduces.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=864"
  },
  {
    "text": "In this demo, I will just be showing you how to generate the initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=870"
  },
  {
    "text": "Generating the computed property is very similar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=874"
  },
  {
    "text": "because it's also just a switch statement ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=877"
  },
  {
    "text": "that switches over all the cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=879"
  },
  {
    "text": "With this declaration, we have defined the macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=882"
  },
  {
    "text": "but we have not implemented the expansion that it actually performs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=886"
  },
  {
    "text": "For this, our macro references the SlopeSubsetMacro type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=890"
  },
  {
    "text": "in the WWDCMacros module . ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=894"
  },
  {
    "text": "Let us go and create that type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=898"
  },
  {
    "text": "so we can continue to the really exciting part: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=899"
  },
  {
    "text": "The actual macro implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=902"
  },
  {
    "text": "Since we declared SlopeSubset as an attached member macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=906"
  },
  {
    "text": "the corresponding implementation needs to conform to the MemberMacro protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=910"
  },
  {
    "text": "This protocol has a single requirement: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=915"
  },
  {
    "text": "The 'expansion' function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=918"
  },
  {
    "text": "similar to ExpressionMacro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=920"
  },
  {
    "text": "The 'expansion' function takes the attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=924"
  },
  {
    "text": "with which we apply the macro to a declaration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=927"
  },
  {
    "text": "as well as the declaration that the macro is being applied to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=932"
  },
  {
    "text": "In our case, this will be the EasySlope enum declaration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=936"
  },
  {
    "text": "The macro then returns the list of all the new members ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=942"
  },
  {
    "text": "it wants to add to that declaration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=945"
  },
  {
    "text": "I know that it's very tempting ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=950"
  },
  {
    "text": "to start implementing this transformation straight away, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=952"
  },
  {
    "text": "but we agreed that we wanted to start by writing a test case for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=955"
  },
  {
    "text": "So for now, let us just return an empty array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=960"
  },
  {
    "text": "indicating that no new members should be added.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=964"
  },
  {
    "text": "Finally, we need to make SlopeSubset visible to the compiler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=972"
  },
  {
    "text": "For this, I add it to the 'providingMacros' property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=977"
  },
  {
    "text": "down here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=981"
  },
  {
    "text": "Before diving any deeper, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=986"
  },
  {
    "text": "I want to make sure that what we have so far works. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=987"
  },
  {
    "text": "While I could try applying the macro in Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=992"
  },
  {
    "text": "and looking at the expanded code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=994"
  },
  {
    "text": "I much prefer to write a test case for it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=996"
  },
  {
    "text": "that I can rerun whenever I'm making changes to the macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=999"
  },
  {
    "text": "to make sure I'm not introducing regressions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1003"
  },
  {
    "text": "Just like in the test case in the template, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1011"
  },
  {
    "text": "we use the 'assertMacroExpansion' function to verify our macro's behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1013"
  },
  {
    "text": "What we want to test is what the macro generates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1023"
  },
  {
    "text": "when applied to the EasySlope type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1026"
  },
  {
    "text": "so we use that as our test case's input.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1029"
  },
  {
    "text": "And since the macro's not doing anything yet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1036"
  },
  {
    "text": "we just expect it to remove the attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1039"
  },
  {
    "text": "and not add any new members, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1041"
  },
  {
    "text": "so the expected expanded code is the same as the input, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1044"
  },
  {
    "text": "just without '@SlopeSubset'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1048"
  },
  {
    "text": "Finally, we need to let the test case know ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1056"
  },
  {
    "text": "that it should expand the macro SlopeSubset ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1059"
  },
  {
    "text": "using the SlopeSubsetMacro implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1062"
  },
  {
    "text": "For that, we need to map the macro name to its implementing type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1066"
  },
  {
    "text": "in the 'testMacros' dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1070"
  },
  {
    "text": "and pass that dictionary to the assertion function.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1073"
  },
  {
    "text": "Let's run our tests now ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1084"
  },
  {
    "text": "to check that what we have written so far actually works.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1085"
  },
  {
    "text": "It does. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1098"
  },
  {
    "text": "Great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1099"
  },
  {
    "text": "But we want really wanted is to check that our macro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1100"
  },
  {
    "text": "actually generates the initializer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1104"
  },
  {
    "text": "not just remove the attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1106"
  },
  {
    "text": "So I'll copy the code that I previously wrote by hand into the test case ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1109"
  },
  {
    "text": "because really, that's what we want the plug-in to generate.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1113"
  },
  {
    "text": "If we run the test again… ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1122"
  },
  {
    "text": "...it fails ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1127"
  },
  {
    "text": "because our macro doesn't actually generate the initializer yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1129"
  },
  {
    "text": "Let's change that now.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1133"
  },
  {
    "text": "The initializer switches over all the enum elements declared in the EasySlopes enum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1141"
  },
  {
    "text": "So the first thing that we need to do ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1147"
  },
  {
    "text": "is to retrieve these enum elements from the declaration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1149"
  },
  {
    "text": "Since enum elements can only be declared inside enum declarations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1155"
  },
  {
    "text": "we start by casting 'declaration' to an enum declaration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1159"
  },
  {
    "text": "If the macro is attached to a type that is not an enum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1167"
  },
  {
    "text": "we should be emitting an error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1170"
  },
  {
    "text": "I added a TODO so that we don’t forget to do it later, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1173"
  },
  {
    "text": "and return an empty array for now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1176"
  },
  {
    "text": "Next, we need to get all the elements that the enum declares. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1179"
  },
  {
    "text": "To figure out how to do that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1184"
  },
  {
    "text": "I want to inspect the syntactic structure of our enum in the SwiftSyntax tree.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1186"
  },
  {
    "text": "Since the macro's implementation is just an ordinary Swift program, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1192"
  },
  {
    "text": "I can use all the tools that you know from Xcode to debug your programs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1196"
  },
  {
    "text": "For example, I can set a breakpoint inside the expansion function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1202"
  },
  {
    "text": "and run the test cases to hit that breakpoint.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1206"
  },
  {
    "text": "We now have the debugger paused inside the macro’s implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1217"
  },
  {
    "text": "and 'enumDecl' is the EasySlopes enum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1222"
  },
  {
    "text": "We can print it in the debugger by typing 'po enumDecl'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1225"
  },
  {
    "text": "Let's inspect the output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1234"
  },
  {
    "text": "The innermost nodes of the syntax tree represent the enum elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1238"
  },
  {
    "text": "the 'beginnersParadise', and 'practiceRun' slopes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1242"
  },
  {
    "text": "To retrieve them, we need to follow the structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1246"
  },
  {
    "text": "that is outlined to us in the syntax tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1249"
  },
  {
    "text": "Let us walk through that structure step-by-step ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1252"
  },
  {
    "text": "and write the access code as we go. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1256"
  },
  {
    "text": "The enum declaration has a child called 'memberBlock'. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1259"
  },
  {
    "text": "This member block contains both the braces ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1264"
  },
  {
    "text": "and the actual members. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1268"
  },
  {
    "text": "So to access the members, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1269"
  },
  {
    "text": "we start with 'enumDecl.memberBlock.members'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1272"
  },
  {
    "text": "These members contain the actual declaration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1278"
  },
  {
    "text": "as well as an optional semicolon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1281"
  },
  {
    "text": "We are interested in the declarations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1283"
  },
  {
    "text": "in particular those declarations that actually declare enum cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1287"
  },
  {
    "text": "I'm using compact map to get a list of all the member declarations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1291"
  },
  {
    "text": "that are enum cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1296"
  },
  {
    "text": "Each case declaration can declare multiple elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1298"
  },
  {
    "text": "This is because instead of declaring each slope on a new line ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1302"
  },
  {
    "text": "after a separate case keyword, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1306"
  },
  {
    "text": "I could have written them on the same line ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1309"
  },
  {
    "text": "as 'case beginnersParadise, practiceRun'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1311"
  },
  {
    "text": "To retrieve all of them, we can use 'flatMap'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1317"
  },
  {
    "text": "And now that we have retrieved all the elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1323"
  },
  {
    "text": "we can start constructing the initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1326"
  },
  {
    "text": "that we actually want to add to EasySlope.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1328"
  },
  {
    "text": "The initializer declaration has a single item: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1334"
  },
  {
    "text": "A switch expression.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1338"
  },
  {
    "text": "This switch expression contains a case for each element in the enum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1342"
  },
  {
    "text": "as well as a default case that returns nil. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1347"
  },
  {
    "text": "We need to create syntax nodes for all of these.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1351"
  },
  {
    "text": "Two great ways of finding the syntax nodes to create, are ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1356"
  },
  {
    "text": "either by printing the syntax tree like we did before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1359"
  },
  {
    "text": "or by reading SwiftSyntax's documentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1363"
  },
  {
    "text": "We start by constructing an InitializerDeclSyntax.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1368"
  },
  {
    "text": "This type can be constructed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1376"
  },
  {
    "text": "by building the body using a result builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1378"
  },
  {
    "text": "and specifying the header-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1381"
  },
  {
    "text": "that is the 'init' keyword and all the parameters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1382"
  },
  {
    "text": "This will allow us to use a for loop inside the result builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1387"
  },
  {
    "text": "to iterate over all the elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1390"
  },
  {
    "text": "exactly what we need.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1393"
  },
  {
    "text": "I just copy the init header from our test case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1397"
  },
  {
    "text": "Inside the body, we need a switch expression.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1404"
  },
  {
    "text": "This type also has an initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1413"
  },
  {
    "text": "that takes a header and a result builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1415"
  },
  {
    "text": "Let's use it again.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1419"
  },
  {
    "text": "Now we can use the power of result builders ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1424"
  },
  {
    "text": "by iterating over all elements that we gathered earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1428"
  },
  {
    "text": "For each element, we want to create a new case item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1434"
  },
  {
    "text": "which we can construct using string interpolation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1438"
  },
  {
    "text": "just like we saw for ‘#stringify'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1441"
  },
  {
    "text": "We also need to add a default case that returns nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1446"
  },
  {
    "text": "And finally, we can return the initializer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1454"
  },
  {
    "text": "Let's run the tests to see if we are indeed generating the correct initializer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1462"
  },
  {
    "text": "We are. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1472"
  },
  {
    "text": "So we know that our macro works ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1473"
  },
  {
    "text": "and we can start using it in my app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1476"
  },
  {
    "text": "To add our macro package to my Xcode project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1482"
  },
  {
    "text": "I can right-click on it and select \"Add Package Dependencies\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1485"
  },
  {
    "text": "I can now select the local package that we just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1490"
  },
  {
    "text": "To be able to use the macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1500"
  },
  {
    "text": "I add the WWDC target as a dependency of my app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1503"
  },
  {
    "text": "We can now import the WWDC module from the package ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1512"
  },
  {
    "text": "and apply the SlopeSubset macro to the EasySlope type.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1516"
  },
  {
    "text": "… ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1523"
  },
  {
    "text": "If we build... ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1531"
  },
  {
    "text": "...the compiler complains that the hand-written initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1535"
  },
  {
    "text": "is an invalid redeclaration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1539"
  },
  {
    "text": "And that's because the macro now generates it for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1541"
  },
  {
    "text": "So we can just delete it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1546"
  },
  {
    "text": "It's always fun to delete code. Right? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1553"
  },
  {
    "text": "So if we want to see what the macro actually generated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1556"
  },
  {
    "text": "we can right-click on SlopeSubset and click Expand Macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1559"
  },
  {
    "text": "And if I forgot what the macro does, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1566"
  },
  {
    "text": "I can also Option-click on it to read its documentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1568"
  },
  {
    "text": "The next step would be to also generate the computed property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1576"
  },
  {
    "text": "but I'll do that later today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1580"
  },
  {
    "text": "By using macros, we were able to get the type safety of EasySlopes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1583"
  },
  {
    "text": "without the need to write repetitive code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1588"
  },
  {
    "text": "How did we do that? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1592"
  },
  {
    "text": "We started with the Swift macro package template. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1595"
  },
  {
    "text": "To explore the syntax tree's structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1599"
  },
  {
    "text": "we stopped the macro's execution ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1602"
  },
  {
    "text": "and printed the syntax node inside the debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1604"
  },
  {
    "text": "This allowed us to see which properties we needed to access ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1608"
  },
  {
    "text": "to get all the enum elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1611"
  },
  {
    "text": "And it was really easy to develop the macro on its own using a test case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1616"
  },
  {
    "text": "After we added it to my app, it worked straight away. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1620"
  },
  {
    "text": "But what happens if your macro is used in situations that it doesn't support? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1625"
  },
  {
    "text": "Just like you never want to take a beginner skier onto a difficult slope, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1631"
  },
  {
    "text": "you never want to let you macro perform unexpected expansions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1635"
  },
  {
    "text": "or generate code that does not compile. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1639"
  },
  {
    "text": "If your macro is used in ways that it doesn't support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1643"
  },
  {
    "text": "always emit error messages that inform your adopters about what's going wrong, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1646"
  },
  {
    "text": "instead of having them read the generated code to debug your macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1651"
  },
  {
    "text": "In that spirit, let's go and fix the TODO we left in our codebase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1657"
  },
  {
    "text": "When SlopeSubset is applied to a type that is not an enum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1662"
  },
  {
    "text": "the macro should emit an error, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1665"
  },
  {
    "text": "saying that it is only applicable to enums. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1668"
  },
  {
    "text": "Just like before, let's start by adding a test case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1671"
  },
  {
    "text": "This time, we are applying the SlopeSubset macro to a struct.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1681"
  },
  {
    "text": "Since there are no enum elements in the struct, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1688"
  },
  {
    "text": "we don't expect the macro to generate an initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1691"
  },
  {
    "text": "Instead, it should emit a diagnostic, that is an error, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1695"
  },
  {
    "text": "informing us that SlopeSubset can only be applied to an enum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1700"
  },
  {
    "text": "If we run this test... ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1704"
  },
  {
    "text": "...it fails ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1710"
  },
  {
    "text": "because we are not outputting the error message yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1711"
  },
  {
    "text": "Let's go to the compiler plug-in to do so now.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1714"
  },
  {
    "text": "Macro errors can be represented by any type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1721"
  },
  {
    "text": "that conforms to the Swift Error protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1724"
  },
  {
    "text": "I use an enum with a single case to describe the error message ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1728"
  },
  {
    "text": "if SlopeSubset is applied to a type that's not an enum.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1732"
  },
  {
    "text": "If we throw the error from the expansion function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1741"
  },
  {
    "text": "it will be shown at the attribute that calls the macro expansion.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1744"
  },
  {
    "text": "If you want to show the error message at a different location than the attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1752"
  },
  {
    "text": "generate warnings, or even show Fix-Its in Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1756"
  },
  {
    "text": "there's an 'addDiagnostic' method on the context parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1761"
  },
  {
    "text": "that allows you to generate rich diagnostics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1764"
  },
  {
    "text": "But I think in this case, it's efficient to just show a simple error message ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1767"
  },
  {
    "text": "at the attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1771"
  },
  {
    "text": "Now, let's see if we did everything right and if our tests pass.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1773"
  },
  {
    "text": "Great, they do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1783"
  },
  {
    "text": "So how does it look like in Xcode if I apply SlopeSubset to a struct? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1785"
  },
  {
    "text": "For this, let me copy the test case into a file.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1791"
  },
  {
    "text": "Xcode shows the custom error message ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1802"
  },
  {
    "text": "inline with all other compilation errors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1805"
  },
  {
    "text": "That makes it easy for adopters of my macro to see what they are doing wrong.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1807"
  },
  {
    "text": "And you know what? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1813"
  },
  {
    "text": "Now that we have good error handling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1815"
  },
  {
    "text": "I think this macro might also be useful for other developers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1817"
  },
  {
    "text": "specifying enum subsets, not just for slopes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1820"
  },
  {
    "text": "Let's go and generalize it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1824"
  },
  {
    "text": "To specify the superset of the enum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1829"
  },
  {
    "text": "that we have so far hard-coded as Slope, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1832"
  },
  {
    "text": "we add a generic parameter to the macro declaration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1834"
  },
  {
    "text": "And since the macro is now no longer specific to slopes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1844"
  },
  {
    "text": "let's rename it to EnumSubset ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1847"
  },
  {
    "text": "by right clicking on SlopeSubset and selecting Refactor, Rename.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1850"
  },
  {
    "text": "I can also choose to rename all occurences inside string literals and comments ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1863"
  },
  {
    "text": "by Command-clicking them.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1868"
  },
  {
    "text": "We now need to adjust our macro implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1874"
  },
  {
    "text": "to use the generic parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1877"
  },
  {
    "text": "instead of the hard-coded Slopes type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1879"
  },
  {
    "text": "If we print the attribute inside the debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1882"
  },
  {
    "text": "and inspect its layout, just like we did for 'enumDecl', ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1885"
  },
  {
    "text": "we can see that we can retrieve the generic parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1889"
  },
  {
    "text": "by accessing the 'argumentType' ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1892"
  },
  {
    "text": "of the first argument ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1896"
  },
  {
    "text": "in the 'genericArgumentClause' of the attribute's name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1898"
  },
  {
    "text": "So now that we've retrieved the generic parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1903"
  },
  {
    "text": "we can replace the so-far hardcoded Slope type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1907"
  },
  {
    "text": "by the variable 'supersetType'.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1910"
  },
  {
    "text": "I still need to make a couple more changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1920"
  },
  {
    "text": "like renaming the initializer's parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1923"
  },
  {
    "text": "changing the macro implementation's type name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1926"
  },
  {
    "text": "and updating the documentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1929"
  },
  {
    "text": "I'll do that later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1931"
  },
  {
    "text": "Instead, for now, let's make sure that our tests are still passing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1933"
  },
  {
    "text": "Since we made EnumSubset generic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1942"
  },
  {
    "text": "we need to explicitly specify that EasySlope is a subset of Slope ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1945"
  },
  {
    "text": "by passing slope as a generic parameter to the EnumSubset macro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1949"
  },
  {
    "text": "Let's see if the tests are now passing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1963"
  },
  {
    "text": "They are. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1970"
  },
  {
    "text": "I should really consider publishing this macro to others as a Swift package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1972"
  },
  {
    "text": "So that's a lot of ground we covered today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1977"
  },
  {
    "text": "Let's recap what we went through. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1980"
  },
  {
    "text": "To create a macro, you can start with the macro package template, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1983"
  },
  {
    "text": "which includes the stringify macro as a great starting point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1987"
  },
  {
    "text": "While developing your macro, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1991"
  },
  {
    "text": "we highly encourage you to write test cases ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1993"
  },
  {
    "text": "to make sure that the code your macro generates is indeed valid. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=1997"
  },
  {
    "text": "And if you're doing this, you can inspect the layout of the syntax tree ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2001"
  },
  {
    "text": "by setting a breakpoint in the expansion function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2005"
  },
  {
    "text": "running a test, and printing the syntax tree in the debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2008"
  },
  {
    "text": "And finally, if your macro is not applicable in certain circumstances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2013"
  },
  {
    "text": "you should always emit custom error messages ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2018"
  },
  {
    "text": "so that even if things go wrong, your macro will shine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2021"
  },
  {
    "text": "Thanks for watching, and I'm thrilled to see what kind of macros you will create. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2025"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10166/?time=2030"
  }
]