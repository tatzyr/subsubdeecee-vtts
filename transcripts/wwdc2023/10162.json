[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=0"
  },
  {
    "text": "Cody: Hi, and welcome to \"The SwiftUI cookbook for focus.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=10"
  },
  {
    "text": "I'm Cody, and today I'll be discussing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=14"
  },
  {
    "text": "some of the things that you can do with focus APIs in SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=17"
  },
  {
    "text": "to cook up a really great user experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=21"
  },
  {
    "text": "In this video, I'll serve up a three-course meal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=25"
  },
  {
    "text": "from a fixed menu of tasty API details ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=27"
  },
  {
    "text": "paired with a series of fine code examples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=31"
  },
  {
    "text": "As an appetizer, I'll spend some time reviewing the very basics of focus: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=34"
  },
  {
    "text": "what is it, and what job does it do? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=39"
  },
  {
    "text": "For the first course, whet your palate with a look at the ingredients ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=42"
  },
  {
    "text": "that make the focus experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=46"
  },
  {
    "text": "With those ingredients laid out, I can really start cooking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=50"
  },
  {
    "text": "For the main course, I'll dig in to some recipes for controlling focus appearance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=54"
  },
  {
    "text": "observing focus movement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=58"
  },
  {
    "text": "and responding to keyboard input with custom controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=60"
  },
  {
    "text": "So, what is focus? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=65"
  },
  {
    "text": "Focus is a tool for deciding how to respond when someone ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=68"
  },
  {
    "text": "presses a key on a keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=71"
  },
  {
    "text": "swipes on an Apple TV Remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=74"
  },
  {
    "text": "or turns the Digital Crown on their watch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=77"
  },
  {
    "text": "These input methods have one important detail in common. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=80"
  },
  {
    "text": "On their own, they don't provide enough information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=85"
  },
  {
    "text": "to identify which on-screen control their input is intended for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=88"
  },
  {
    "text": "Compare this with things like mice, and trackpads, and touch screens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=93"
  },
  {
    "text": "When you use a mouse or trackpad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=99"
  },
  {
    "text": "the on-screen cursor associates your clicks with screen coordinates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=101"
  },
  {
    "text": "that the system uses to find the target of the interaction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=105"
  },
  {
    "text": "Focus provides the extra information that the system needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=109"
  },
  {
    "text": "to direct input without a pointer cursor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=113"
  },
  {
    "text": "When a view has focus, the system will use it as a starting point for responding to ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=116"
  },
  {
    "text": "input from keyboards, Apple TV remotes, and Apple Watch Digital Crowns.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=121"
  },
  {
    "text": "Focus isn't just an implementation detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=127"
  },
  {
    "text": "It's equally important to the people using your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=130"
  },
  {
    "text": "which is why the focused view is presented with special emphasis.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=133"
  },
  {
    "text": "macOS automatically adds a border around the focused view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=137"
  },
  {
    "text": "to show that it will receive keyboard input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=140"
  },
  {
    "text": "watchOS draws a green border around controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=144"
  },
  {
    "text": "to signal that the control's value can be changed by rotating the Digital Crown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=147"
  },
  {
    "text": "And on tvOS, the focused view receives a hover effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=152"
  },
  {
    "text": "that lifts it above the plane of other controls.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=155"
  },
  {
    "text": "Emphasizing the focus view helps people in a couple of ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=159"
  },
  {
    "text": "They can anticipate where their input will go ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=164"
  },
  {
    "text": "when they type on a keyboard or swipe on the remote. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=166"
  },
  {
    "text": "And in a complex or detailed layout, it reminds people at a glance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=170"
  },
  {
    "text": "which part of the app they're interacting with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=175"
  },
  {
    "text": "Focus behaves a lot like a special kind of cursor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=179"
  },
  {
    "text": "Instead of tracking a point on screen like a mouse cursor does, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=183"
  },
  {
    "text": "it tracks which part of your UI is the target for focus input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=187"
  },
  {
    "text": "For this reason, I like to think of focus as a cursor for the user's attention. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=193"
  },
  {
    "text": "Now that you know a little about what focus is and how it appears in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=198"
  },
  {
    "text": "I can lay out the first course, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=203"
  },
  {
    "text": "a look at the basic ingredients that go into every app's focus experience: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=205"
  },
  {
    "text": "focusable views,  focus state, focused values, and focus sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=210"
  },
  {
    "text": "The main ingredient to consider when cooking with focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=217"
  },
  {
    "text": "is the focused view itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=219"
  },
  {
    "text": "This is the view the system uses as its starting point ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=222"
  },
  {
    "text": "when responding to focus input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=225"
  },
  {
    "text": "Different controls are focusable under different circumstances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=228"
  },
  {
    "text": "and for different reasons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=231"
  },
  {
    "text": "Compare text fields and buttons on macOS and iPadOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=234"
  },
  {
    "text": "Text fields are always focusable, whether you tap on them ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=238"
  },
  {
    "text": "or you press the Tab key to move focus from a previous control. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=242"
  },
  {
    "text": "This kind of control supports focus for editing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=246"
  },
  {
    "text": "because its role is to capture continuous focus input.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=249"
  },
  {
    "text": "Buttons are different. Their job is to handle clicks and taps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=253"
  },
  {
    "text": "macOS and iPadOS don't give focus to buttons when you tap them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=259"
  },
  {
    "text": "and the only way to reach them with the Tab key is to turn on ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=264"
  },
  {
    "text": "keyboard navigation system-wide. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=267"
  },
  {
    "text": "If you aren't familiar with this setting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=270"
  },
  {
    "text": "you can find it in the Keyboard settings pane of macOS System Settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=271"
  },
  {
    "text": "It's the switch labeled \"Keyboard navigation\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=276"
  },
  {
    "text": "After flipping that switch, I can press the Tab key to focus on buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=280"
  },
  {
    "text": "and press the Space bar to activate them.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=284"
  },
  {
    "text": "Buttons support focus for activation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=289"
  },
  {
    "text": "These controls don't require focus to do their job, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=293"
  },
  {
    "text": "but they'll take focus if the system allows it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=297"
  },
  {
    "text": "in order to support focus-driven alternatives to clicking and tapping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=300"
  },
  {
    "text": "In iOS 17 and macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=304"
  },
  {
    "text": "there are new APIs for custom controls to participate in the focus system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=307"
  },
  {
    "text": "When you apply the \"focusable\" view modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=312"
  },
  {
    "text": "you can now fine-tune the resulting behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=315"
  },
  {
    "text": "by specifying the kinds of focus interactions your control supports. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=318"
  },
  {
    "text": "For controls that use focus to update state over time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=323"
  },
  {
    "text": "specify edit interactions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=327"
  },
  {
    "text": "For controls that use focus as an alternative to direct pointer activation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=330"
  },
  {
    "text": "specify activate interactions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=335"
  },
  {
    "text": "If you don't provide any arguments at all, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=339"
  },
  {
    "text": "the system gives the control focus for all interactions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=342"
  },
  {
    "text": "Prior to macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=346"
  },
  {
    "text": "the focusable modifier only supported activation semantics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=348"
  },
  {
    "text": "If you're already using the focusable modifier in your macOS code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=353"
  },
  {
    "text": "verify that the new behavior suits your use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=356"
  },
  {
    "text": "You may need to update your code by adding an \"interactions\" argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=360"
  },
  {
    "text": "The next ingredient relates to the state of the focus system from moment to moment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=364"
  },
  {
    "text": "This ingredient is aptly named \"FocusState\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=369"
  },
  {
    "text": "The system keeps track of which view has focus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=373"
  },
  {
    "text": "and the app can use that information in its logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=377"
  },
  {
    "text": "to determine how to handle input and how to style views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=379"
  },
  {
    "text": "To observe the state of the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=385"
  },
  {
    "text": "you create bindings that associate values that you provide ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=387"
  },
  {
    "text": "with focus being on a particular view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=391"
  },
  {
    "text": "Views can read these bindings to get notified when focus changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=395"
  },
  {
    "text": "such as a view becoming focused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=399"
  },
  {
    "text": "or when focus is dismissed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=402"
  },
  {
    "text": "Focus state properties with Boolean values will tell you if a single view is focused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=405"
  },
  {
    "text": "as shown here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=410"
  },
  {
    "text": "For more complex cases, you can also use custom data types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=412"
  },
  {
    "text": "Later, I'll discuss an example of this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=417"
  },
  {
    "text": "and show how focus state can be changed programmatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=420"
  },
  {
    "text": "Next up, the Focused Values API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=424"
  },
  {
    "text": "The Focused Values API solves the problem of how to build data dependencies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=427"
  },
  {
    "text": "that link remote parts of your user interface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=432"
  },
  {
    "text": "Use this API to update your app's commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=435"
  },
  {
    "text": "based on what's happening in the active scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=438"
  },
  {
    "text": "Focused values enable data flow between these different elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=442"
  },
  {
    "text": "I'll define a custom one and use it to build my main menu content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=446"
  },
  {
    "text": "Creating and using focused values is similar to creating and using ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=450"
  },
  {
    "text": "custom environment keys and objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=454"
  },
  {
    "text": "You define a new key using the \"FocusedValueKey\" protocol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=457"
  },
  {
    "text": "and then extend \"FocusedValues\" with a computed property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=461"
  },
  {
    "text": "that uses the new key to get and set values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=464"
  },
  {
    "text": "The data you use comes from your scene's views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=469"
  },
  {
    "text": "and can be a value, a binding, or an observable object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=472"
  },
  {
    "text": "In any case, you use a family of view modifiers to associate the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=477"
  },
  {
    "text": "with focus being in that part of the view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=482"
  },
  {
    "text": "As with environment values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=487"
  },
  {
    "text": "you access your focused values by declaring a dynamic property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=489"
  },
  {
    "text": "In this example, my focused value is a binding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=493"
  },
  {
    "text": "so I use the \"@FocusedBinding\" property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=497"
  },
  {
    "text": "and provide it with my custom key path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=500"
  },
  {
    "text": "\"@FocusedBinding\" looks at the focused view and its ancestors ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=502"
  },
  {
    "text": "to see if there's currently a binding associated with the key. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=506"
  },
  {
    "text": "The property wrapper automatically unwraps the binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=510"
  },
  {
    "text": "so I can work with the bound value directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=513"
  },
  {
    "text": "The only other thing I need to do is use my new property in the view's body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=516"
  },
  {
    "text": "Over time, as focus moves between different controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=522"
  },
  {
    "text": "and different windows become active, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=526"
  },
  {
    "text": "the system will update the view to reflect the values it finds in the new context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=529"
  },
  {
    "text": "The last ingredient is the Focus sections API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=535"
  },
  {
    "text": "Focus sections give you a way to influence how focus moves when someone ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=539"
  },
  {
    "text": "swipes on an Apple TV Remote or presses the Tab key on a keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=543"
  },
  {
    "text": "By default, focus starts on the top-most control ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=547"
  },
  {
    "text": "that's closest to the leading edge of the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=551"
  },
  {
    "text": "From there, pressing Tab moves focus from one control to the next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=554"
  },
  {
    "text": "following the layout order of the current locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=559"
  },
  {
    "text": "When you reach the last control on the screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=563"
  },
  {
    "text": "pressing Tab again will restart the sequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=565"
  },
  {
    "text": "Focus movement with an Apple TV remote is directional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=569"
  },
  {
    "text": "You can swipe up, down, left, and right to move focus between controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=574"
  },
  {
    "text": "Directional movement only works between adjacent targets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=580"
  },
  {
    "text": "In this example, I can swipe right from the Creme Brûlée button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=585"
  },
  {
    "text": "to one of the other desserts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=589"
  },
  {
    "text": "But if I want to add creme brûlée fixings to my grocery list, I can't swipe down. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=591"
  },
  {
    "text": "That button isn't directly beneath the creme brûlée button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=597"
  },
  {
    "text": "so my gesture fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=600"
  },
  {
    "text": "To make these focus targets line up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=603"
  },
  {
    "text": "I'll mark the bottom button's container as a focus section. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=605"
  },
  {
    "text": "Focus sections become targets for movement gestures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=609"
  },
  {
    "text": "but they don't become focusable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=613"
  },
  {
    "text": "Instead, they guide focus towards the nearest focusable content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=615"
  },
  {
    "text": "To be effective, the focus sections have to take up more space than their contents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=620"
  },
  {
    "text": "In this case, I'll add spacers before and after the button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=625"
  },
  {
    "text": "to make the stack grow to fit the width of the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=629"
  },
  {
    "text": "With the larger focus target in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=634"
  },
  {
    "text": "I can now swipe down from anywhere ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=637"
  },
  {
    "text": "to reach the bottom button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=639"
  },
  {
    "text": "I can taste that creme brûlée already! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=642"
  },
  {
    "text": "I'll take you through some recipes that combine ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=646"
  },
  {
    "text": "the staple ingredients I just described ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=648"
  },
  {
    "text": "to polish the look and feel of custom controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=650"
  },
  {
    "text": "and remove friction from common tasks.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=653"
  },
  {
    "text": "Recently, I've been using a cookbook app made by my fellow chef Curt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=657"
  },
  {
    "text": "You may recognize it from his WWDC22 video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=661"
  },
  {
    "text": "The recipes in this section are based on some new features I've been working on ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=665"
  },
  {
    "text": "that will benefit from some attention to focus behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=669"
  },
  {
    "text": "For instance, I've added an in-app grocery list ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=673"
  },
  {
    "text": "to help me remember what to get on my next trip to the grocery store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=676"
  },
  {
    "text": "This first recipe shows how a dash of programmatic focus movement ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=681"
  },
  {
    "text": "can make editing my grocery list a delightful experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=684"
  },
  {
    "text": "When the grocery list sheet appears, it always has an empty item at its end. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=689"
  },
  {
    "text": "Tapping on the empty item brings up the keyboard ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=694"
  },
  {
    "text": "so I can describe what I need to buy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=696"
  },
  {
    "text": "Adding groceries is a frequent task, so I'd like to save myself a tap ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=699"
  },
  {
    "text": "by putting focus on the empty item automatically whenever the list appears. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=703"
  },
  {
    "text": "Earlier, I showed how to use the Focus State API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=708"
  },
  {
    "text": "to observe and update which view has focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=711"
  },
  {
    "text": "I'll use the same API here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=714"
  },
  {
    "text": "The previous example used a flag to signal whether a single view had focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=717"
  },
  {
    "text": "In the case of my grocery list, there are any number of text fields to observe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=722"
  },
  {
    "text": "FocusState's value can be any Hashable type for cases like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=727"
  },
  {
    "text": "Each ingredient I add on this screen has a unique ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=732"
  },
  {
    "text": "and I can keep track of focus by storing the ID associated ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=736"
  },
  {
    "text": "with the focused text field. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=740"
  },
  {
    "text": "I'll use the \"focused(_:equals:)\" modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=743"
  },
  {
    "text": "to make the link between each text field and its ingredient. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=744"
  },
  {
    "text": "I need to provide this modifier with two arguments: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=748"
  },
  {
    "text": "a binding to my \"focusedItem\" property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=752"
  },
  {
    "text": "and the ingredient ID that the binding should be updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=755"
  },
  {
    "text": "with, when focus is in that text field. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=759"
  },
  {
    "text": "I can now run the app and verify that ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=762"
  },
  {
    "text": "the \"focusedItem\" property is updated with different ID values ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=764"
  },
  {
    "text": "when I tap around the grocery list.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=768"
  },
  {
    "text": "With my focus state binding in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=773"
  },
  {
    "text": "I have what I need to programmatically move focus to the text field ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=775"
  },
  {
    "text": "when the grocery list first appears on screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=779"
  },
  {
    "text": "I do this by adding the \"defaultFocus(_:_:)\" view modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=782"
  },
  {
    "text": "to my list, which is now also available in iOS 17. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=785"
  },
  {
    "text": "When the system is evaluating focus for the first time on this screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=790"
  },
  {
    "text": "it will try to update my binding with the ID of the last grocery list item.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=794"
  },
  {
    "text": "With these changes, adding to my grocery list is now a two-step process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=800"
  },
  {
    "text": "Tap the toolbar button to present the sheet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=805"
  },
  {
    "text": "and then start typing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=808"
  },
  {
    "text": "There is no step three. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=810"
  },
  {
    "text": "As my shopping list grows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=812"
  },
  {
    "text": "I notice that tapping the Add button in the toolbar creates a new empty list item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=814"
  },
  {
    "text": "but focus remains where it was. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=819"
  },
  {
    "text": "I have to tap the empty item to give it focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=822"
  },
  {
    "text": "This is another case where I want the app to move focus programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=825"
  },
  {
    "text": "so that I can start typing as soon as the new item appears. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=829"
  },
  {
    "text": "The difference is that now I want to be in control of the timing of the change.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=833"
  },
  {
    "text": "Happily, I can use the same focus state binding that I created ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=838"
  },
  {
    "text": "for setting default focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=841"
  },
  {
    "text": "In my GroceryListView, I have an \"addEmptyItem\" method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=844"
  },
  {
    "text": "that adds a new item in my model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=848"
  },
  {
    "text": "And since I've already associated the new item's TextField ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=852"
  },
  {
    "text": "with the \"currentItemID\" property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=854"
  },
  {
    "text": "I just need to update the property with the new ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=857"
  },
  {
    "text": "as part of my toolbar button action.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=861"
  },
  {
    "text": "Voilà! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=864"
  },
  {
    "text": "Now when I want to start or update my grocery list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=866"
  },
  {
    "text": "I don't have to tap anything to put focus where it needs to be, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=869"
  },
  {
    "text": "I can just start typing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=873"
  },
  {
    "text": "Next up, let's use some more of the ingredients ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=877"
  },
  {
    "text": "to improve the focus interactions for a custom control that I've created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=880"
  },
  {
    "text": "At this point, I've cataloged a lot of recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=885"
  },
  {
    "text": "As I try each one out, I want to remember which ones come out well ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=888"
  },
  {
    "text": "and which might need some re-thinking, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=892"
  },
  {
    "text": "or at least a little more salt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=895"
  },
  {
    "text": "To help with this, I've built a custom picker control with emoji ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=898"
  },
  {
    "text": "to capture the highs and lows of my culinary journey. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=902"
  },
  {
    "text": "I can rate each recipe by tapping on an emoji, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=906"
  },
  {
    "text": "but as someone who lives the keyboard navigation lifestyle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=909"
  },
  {
    "text": "I'd really like to be able to focus on the control with the Tab key ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=913"
  },
  {
    "text": "and use the arrow keys to change the selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=916"
  },
  {
    "text": "Let's make that happen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=919"
  },
  {
    "text": "Here's the basic structure of my emoji picker: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=922"
  },
  {
    "text": "The first thing I need to do is make the control focusable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=926"
  },
  {
    "text": "I start out by adding the \"focusable\" modifier with no arguments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=930"
  },
  {
    "text": "This makes my control focusable when I press the Tab key, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=934"
  },
  {
    "text": "but I notice some additional behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=937"
  },
  {
    "text": "that I don't see with other buttons and similar controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=939"
  },
  {
    "text": "My control, for example, gets focus on click, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=943"
  },
  {
    "text": "whereas buttons and segmented controls don't. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=947"
  },
  {
    "text": "Those controls require \"Keyboard navigation\" in order to be focused. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=951"
  },
  {
    "text": "Mine should, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=955"
  },
  {
    "text": "To get that behavior, I'll specify my control ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=957"
  },
  {
    "text": "as being focusable for activation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=961"
  },
  {
    "text": "Controls that are focusable for activation don't get focus on click, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=963"
  },
  {
    "text": "and they need \"Keyboard navigation\" turned on ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=968"
  },
  {
    "text": "to receive focus with the keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=970"
  },
  {
    "text": "The next thing I notice is that ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=973"
  },
  {
    "text": "the focus ring that macOS draws around my control is rectangular. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=975"
  },
  {
    "text": "For a more polished look, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=979"
  },
  {
    "text": "I want the focus ring to follow the path of the capsule-shaped background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=981"
  },
  {
    "text": "Focus rings always follow the content shape of a view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=985"
  },
  {
    "text": "which is a rectangle by default in my case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=989"
  },
  {
    "text": "I'll use the \"contentShape\" modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=992"
  },
  {
    "text": "and pass in the same Capsule shape that I'm using to visually clip the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=994"
  },
  {
    "text": "Now that my control is focusable, the next step is to have it handle key presses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=999"
  },
  {
    "text": "I want to be able to use the left and right arrow key ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1005"
  },
  {
    "text": "to change the chosen rating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1008"
  },
  {
    "text": "Using the \"onMoveCommand\" modifier, I can provide an action to perform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1010"
  },
  {
    "text": "in response to a platform-appropriate move command, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1015"
  },
  {
    "text": "like when arrow keys are pressed on a Mac keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1019"
  },
  {
    "text": "or the directional edges are tapped on an Apple TV remote. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1022"
  },
  {
    "text": "The system calls the action with the direction of movement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1026"
  },
  {
    "text": "so I'll move the rating selection left or right based on that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1030"
  },
  {
    "text": "Control content should flip horizontally for folks using ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1035"
  },
  {
    "text": "a right-to-left language like Arabic and Hebrew. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1038"
  },
  {
    "text": "Make sure your move command action uses the Environment's \"layoutDirection\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1042"
  },
  {
    "text": "to account for this.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1046"
  },
  {
    "text": "One of the neat things about implementing focus behavior is that ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1050"
  },
  {
    "text": "I can take the same control and get a great result in my Apple Watch app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1053"
  },
  {
    "text": "To handle focus input on watchOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1058"
  },
  {
    "text": "I use the \"digitalCrownRotation\" modifier instead of the \"onMoveCommand\" modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1061"
  },
  {
    "text": "And I'll use the isFocused environment value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1067"
  },
  {
    "text": "to draw the familiar green border around the control when it has focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1070"
  },
  {
    "text": "With just these few modifiers, I was able to take a simple control ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1076"
  },
  {
    "text": "and add support for keyboards and the Digital Crown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1080"
  },
  {
    "text": "The last recipe is for a focusable grid view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1084"
  },
  {
    "text": "that I've been building to showcase the pictures I've been taking ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1087"
  },
  {
    "text": "of my finished results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1090"
  },
  {
    "text": "I'm building this as a lazy grid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1092"
  },
  {
    "text": "and I've already implemented some selection behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1094"
  },
  {
    "text": "So clicking on an image selects it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1098"
  },
  {
    "text": "and double-clicking goes to the recipe's detail view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1100"
  },
  {
    "text": "Now I need to consider how it should handle focus interactions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1104"
  },
  {
    "text": "Specifically, I want the grid to be focusable when I press the Tab key. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1108"
  },
  {
    "text": "When focused, I want the arrow keys to update the selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1113"
  },
  {
    "text": "and I want the Return key to take me to the selected recipe's details. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1117"
  },
  {
    "text": "I'll use several of the ingredients I talked about before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1121"
  },
  {
    "text": "plus a few extra ones to help me handle key presses ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1123"
  },
  {
    "text": "and customize how the grid appears when it has focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1126"
  },
  {
    "text": "As in previous examples, the first step is to make the grid focusable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1130"
  },
  {
    "text": "In this case, I don't need to specify any interactions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1135"
  },
  {
    "text": "By default, the grid will take focus when I click on it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1138"
  },
  {
    "text": "and when I use the keyboard to tab to it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1141"
  },
  {
    "text": "whether or not \"Keyboard navigation\" is enabled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1144"
  },
  {
    "text": "This is exactly what I want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1147"
  },
  {
    "text": "Now that I've made the grid focusable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1149"
  },
  {
    "text": "the system automatically draws a focus ring around it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1151"
  },
  {
    "text": "For containers of selectable content, the effect is redundant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1156"
  },
  {
    "text": "The colored border I add around the selected recipe already communicates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1161"
  },
  {
    "text": "whether the grid has focus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1165"
  },
  {
    "text": "I can use the \"focusEffectDisabled\" modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1167"
  },
  {
    "text": "to turn off the automatic focus ring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1169"
  },
  {
    "text": "Use \"SelectionShapeStyle\" for borders and other indicators that a view is selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1173"
  },
  {
    "text": "It automatically adapts to my chosen accent color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1179"
  },
  {
    "text": "and it turns gray when none of its ancestor views have focus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1182"
  },
  {
    "text": "like when focus moves from the grid to the sidebar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1186"
  },
  {
    "text": "The next thing I want to do is hook up a main menu command ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1192"
  },
  {
    "text": "for marking the selected recipe as a favorite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1195"
  },
  {
    "text": "I'll use the Focused Values API for this ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1199"
  },
  {
    "text": "and I'll pass in a binding to my selection for my menu commands to update as needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1202"
  },
  {
    "text": "To support arrow key selection, I'll use the onMoveCommand modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1208"
  },
  {
    "text": "And when the system calls, I'll use the movement direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1212"
  },
  {
    "text": "to update my grid's selected recipe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1215"
  },
  {
    "text": "Lastly, I want a way to act on the selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1219"
  },
  {
    "text": "and navigate to it when the Return key is pressed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1222"
  },
  {
    "text": "I can do this with the \"onKeyPress\" modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1224"
  },
  {
    "text": "which is new in macOS Sonoma and iOS 17. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1227"
  },
  {
    "text": "This modifier takes a set of keys or characters and an action to perform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1231"
  },
  {
    "text": "when any of those keys are pressed on a connected hardware keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1236"
  },
  {
    "text": "Return \"ignored\" if the action didn't handle the press ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1241"
  },
  {
    "text": "and dispatch should continue up the view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1244"
  },
  {
    "text": "And for a bonus feature, I'll also use \"onKeyPress\" to implement Type Selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1247"
  },
  {
    "text": "so I can quickly scroll to and select a recipe ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1252"
  },
  {
    "text": "by typing the first letter of its name.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1256"
  },
  {
    "text": "Now that I've built a great keyboard experience for my grid on macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1260"
  },
  {
    "text": "let's turn to the grid on tvOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1265"
  },
  {
    "text": "On tvOS, each cell in the grid is focusable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1268"
  },
  {
    "text": "so that as focus is moved in different directions with the remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1272"
  },
  {
    "text": "the cell in that direction becomes focus and visually lifts above the others. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1276"
  },
  {
    "text": "The system uses the \"lift\" hover effect by default with Buttons and NavigationLinks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1282"
  },
  {
    "text": "And this effect is appropriate for views with text ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1287"
  },
  {
    "text": "or those combining text and images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1290"
  },
  {
    "text": "However, these recipe photos would benefit from a different effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1293"
  },
  {
    "text": "New in tvOS 17, I can apply the highlight hover effect to my focusable views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1298"
  },
  {
    "text": "This effect adds a perspective shift ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1305"
  },
  {
    "text": "and specular shine to the focused item as I swipe the remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1307"
  },
  {
    "text": "and it looks great with artwork and photos, like my recipe thumbnails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1311"
  },
  {
    "text": "And as a cherry on top for my tvOS app, I'll add focus sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1316"
  },
  {
    "text": "The grid is next to a list of buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1321"
  },
  {
    "text": "and I'll often need to navigate between these two groupings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1324"
  },
  {
    "text": "When using the app, I notice a familiar problem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1328"
  },
  {
    "text": "When focus is on one of the lower rows in the grid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1331"
  },
  {
    "text": "I can't swipe left to move the category buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1335"
  },
  {
    "text": "because the focus targets aren't adjacent to one another. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1338"
  },
  {
    "text": "I'll place the category list in a focus section that spans ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1342"
  },
  {
    "text": "the full height of the layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1345"
  },
  {
    "text": "Now as I swipe left from the Creme Brûlée, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1348"
  },
  {
    "text": "focus moves to the categories, just as I would expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1351"
  },
  {
    "text": "And the grid is complete.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1357"
  },
  {
    "text": "Bellisimo! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1362"
  },
  {
    "text": "I covered a lot of ground in this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1364"
  },
  {
    "text": "It's time to gather up your focus ingredients ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1367"
  },
  {
    "text": "and see what you can make. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1368"
  },
  {
    "text": "Test your macOS and iPadOS apps with keyboard navigation enabled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1370"
  },
  {
    "text": "Place default focus where it will be most useful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1376"
  },
  {
    "text": "Organize your controls in focus sections ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1380"
  },
  {
    "text": "to help guide movement through irregular layouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1382"
  },
  {
    "text": "Thank you, and bon appétit!",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10162/?time=1387"
  }
]