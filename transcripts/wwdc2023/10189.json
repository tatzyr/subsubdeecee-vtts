[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=0"
  },
  {
    "text": "Luvena: Hi everyone! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=10"
  },
  {
    "text": "My name is Luvena, and I am excited to share ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=11"
  },
  {
    "text": "with you how you may migrate your Core Data application to SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=14"
  },
  {
    "text": "the Swift-native persistence framework that can coexist with Core Data.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=18"
  },
  {
    "text": "I will cover common use cases for how you may adopt SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=23"
  },
  {
    "text": "for your Core Data app, whether you are ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=26"
  },
  {
    "text": "for a complete transition from Core Data to SwiftData or if you would like ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=29"
  },
  {
    "text": "to adopt SwiftData incrementally and coexist with Core Data.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=34"
  },
  {
    "text": "I will first walk through how you can generate SwiftData Model Classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=38"
  },
  {
    "text": "using the Managed Object Model Editor assistant.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=42"
  },
  {
    "text": "Then, I will demonstrate the flow ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=46"
  },
  {
    "text": "of a complete SwiftData adoption for an existing Core Data application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=47"
  },
  {
    "text": "And finally, I will introduce you to coexistence ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=52"
  },
  {
    "text": "between Core Data and SwiftData, for cases where a complete transition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=55"
  },
  {
    "text": "into SwiftData may not be a feasible solution for your use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=59"
  },
  {
    "text": "Let me first walk through the flow of how you can generate model classes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=65"
  },
  {
    "text": "In SwiftData, you are transitioning to using ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=69"
  },
  {
    "text": "models in code to set up your schema.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=72"
  },
  {
    "text": "One easy way to do this is to use your Core Data managed object model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=74"
  },
  {
    "text": "to help generate your SwiftData models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=78"
  },
  {
    "text": "Let me demonstrate to you how to make this transition.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=81"
  },
  {
    "text": "I created a Core Data application here called SampleTrips, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=85"
  },
  {
    "text": "which helps users plan their itineraries for upcoming trips. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=88"
  },
  {
    "text": "Here is the model file, which contains information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=92"
  },
  {
    "text": "about my data and its organization.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=95"
  },
  {
    "text": "I have the entities Trip, LivingAccommodation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=98"
  },
  {
    "text": "and BucketListItem, organized such that each trip ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=101"
  },
  {
    "text": "has one corresponding living accommodation and bucket list items ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=104"
  },
  {
    "text": "representing desired trip activities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=108"
  },
  {
    "text": "From here, I will generate SwiftData classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=112"
  },
  {
    "text": "that capture this same information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=115"
  },
  {
    "text": "While the Core Data managed object model is not necessary to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=117"
  },
  {
    "text": "these SwiftData classes, if I have a preexisting Core Data model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=120"
  },
  {
    "text": "I am able to use that to help generate SwiftData classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=124"
  },
  {
    "text": "based on the organization that I already have in my preexisting model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=127"
  },
  {
    "text": "which I will be demonstrating for this use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=132"
  },
  {
    "text": "To do this, I go through our Managed Object Model Editor assistant.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=135"
  },
  {
    "text": "After selecting my model file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=139"
  },
  {
    "text": "I navigate to the menu bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=142"
  },
  {
    "text": "select Editor, and click on Create SwiftData Code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=144"
  },
  {
    "text": "Now I can generate files for my three preexisting entities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=150"
  },
  {
    "text": "Creating SwiftData models from scratch is also an option in the case ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=155"
  },
  {
    "text": "of creating a new Swift app, and would not require this assistant.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=159"
  },
  {
    "text": "Here are the files I have just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=163"
  },
  {
    "text": "Your Swift types should conform to Model, and each one captures information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=166"
  },
  {
    "text": "for the entity as variables, including its attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=171"
  },
  {
    "text": "which for Trip is its name, destination, and start and end dates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=175"
  },
  {
    "text": "and its relationships to other entities, LivingAccommodation and BucketListItem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=179"
  },
  {
    "text": "Now, let me take you through the complete adoption process for SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=184"
  },
  {
    "text": "When fully migrating your application to SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=189"
  },
  {
    "text": "you are replacing your Core Data stack with your SwiftData stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=192"
  },
  {
    "text": "to harness the Swift-native language features with SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=196"
  },
  {
    "text": "This allows for more legible code for persisting your data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=200"
  },
  {
    "text": "as well as implicitly managing some features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=203"
  },
  {
    "text": "Before making this transition though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=207"
  },
  {
    "text": "you should consider how your preexisting core data model designs are structured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=209"
  },
  {
    "text": "Your Core Data model designs refer to your schema, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=214"
  },
  {
    "text": "including the entities and their properties and relationships.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=217"
  },
  {
    "text": "You need to make sure that your Core Data model designs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=221"
  },
  {
    "text": "are supported in SwiftData as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=224"
  },
  {
    "text": "This means that for each entity that was defined in Core Data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=227"
  },
  {
    "text": "there needs to be a corresponding model type with exact matches ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=231"
  },
  {
    "text": "for entity name and properties in SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=234"
  },
  {
    "text": "Make sure you thoroughly test your models to verify ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=238"
  },
  {
    "text": "that all features are supported in SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=241"
  },
  {
    "text": "Let me cover some highlights of the complete SwiftData adoption process ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=244"
  },
  {
    "text": "from a Core Data app in more detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=248"
  },
  {
    "text": "I already generated Swift types to capture my model earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=251"
  },
  {
    "text": "Once I have those files ready to go, I can delete the Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=255"
  },
  {
    "text": "managed object model file that had been used previously, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=258"
  },
  {
    "text": "and manage the model through these Swift files instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=262"
  },
  {
    "text": "Additionally, I can delete the Persistence file ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=265"
  },
  {
    "text": "that previously helped to set up the Core Data stack.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=268"
  },
  {
    "text": "Now I can set up the modelContainer for my SwiftData stack.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=272"
  },
  {
    "text": "modelContainer is a modifier that ensures that all windows in the group ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=277"
  },
  {
    "text": "are configured to access the same persistent container.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=281"
  },
  {
    "text": "By adding this container here in TripsApp, I am setting up both my container ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=284"
  },
  {
    "text": "and the context, as modelContainer also creates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=288"
  },
  {
    "text": "and sets a default ModelContext in the environment.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=291"
  },
  {
    "text": "ModelContext is used to track changes to instances of my app’s types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=296"
  },
  {
    "text": "It can be read from within any scene or view using this environment property.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=301"
  },
  {
    "text": "My SwiftData persistent stack for SampleTrips is now set up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=306"
  },
  {
    "text": "but there are a couple more changes that need to happen.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=310"
  },
  {
    "text": "I am first going to demonstrate how object creation works.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=313"
  },
  {
    "text": "Previously, in Core Data, creating a new Trip would resemble something like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=317"
  },
  {
    "text": "I would create an instance of Trip, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=322"
  },
  {
    "text": "passing in a managed object context, before setting its attributes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=324"
  },
  {
    "text": "In SwiftData, I can create a new instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=330"
  },
  {
    "text": "of Trip with this line of code, which is already comparatively more legible.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=332"
  },
  {
    "text": "Once I have this new trip, I insert it into the model context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=338"
  },
  {
    "text": "to ensure that it is persisted.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=342"
  },
  {
    "text": "Now that my trip is being persisted, I want to look at how I can save it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=345"
  },
  {
    "text": "and any future changes that I make to it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=348"
  },
  {
    "text": "SwiftData has an implicit save feature that triggers saves on UI lifecycle events ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=351"
  },
  {
    "text": "and on a timer after the context is changed if possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=356"
  },
  {
    "text": "I can therefore remove Core Data’s explicit save that is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=360"
  },
  {
    "text": "on the context, and rely on implicit saves to persist ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=363"
  },
  {
    "text": "my data when the context changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=366"
  },
  {
    "text": "Now, let me take you through how I fetch my data.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=369"
  },
  {
    "text": "Instead of using a fetch request like I had in Core Data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=372"
  },
  {
    "text": "I can use Query to fetch the full list of upcoming trips ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=376"
  },
  {
    "text": "by wrapping an array of trips in Query.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=379"
  },
  {
    "text": "This allows me to fetch those Trip objects from the SwiftData container.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=382"
  },
  {
    "text": "I am also defining a sort order for the query. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=386"
  },
  {
    "text": "I want to sort it according to my trip start dates in forward order, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=390"
  },
  {
    "text": "such that the closest upcoming trip is at the top.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=393"
  },
  {
    "text": "Query can also be used for use cases that would need to include a predicate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=397"
  },
  {
    "text": "Now that you know how to migrate your Core Data app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=402"
  },
  {
    "text": "to SwiftData completely, let me take you through the case ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=404"
  },
  {
    "text": "where you want coexistence between Core Data and SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=407"
  },
  {
    "text": "A full migration may not always be feasible or practical, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=411"
  },
  {
    "text": "in which case you may consider a partial conversion to SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=414"
  },
  {
    "text": "Coexistence is when there are two completely separate persistent stacks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=419"
  },
  {
    "text": "one Core Data stack and one SwiftData stack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=423"
  },
  {
    "text": "talking to the same persistent store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=426"
  },
  {
    "text": "This means that there is no need to completely rewrite existing Core Data code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=428"
  },
  {
    "text": "in order to be able to start adding SwiftData code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=433"
  },
  {
    "text": "This option provides you more flexibility when adopting SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=436"
  },
  {
    "text": "into your application, whether you may already have ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=440"
  },
  {
    "text": "some data in Core Data, or if you are simply faced ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=443"
  },
  {
    "text": "with other constraints that don’t allow you to transition completely to SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=446"
  },
  {
    "text": "This is how you can set up both stacks to be talking to the same store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=451"
  },
  {
    "text": "Before loading the persistent store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=456"
  },
  {
    "text": "you need to set the persistent store URL for the container description ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=457"
  },
  {
    "text": "to ensure that both stacks are writing to the same URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=462"
  },
  {
    "text": "Additionally, you need to turn on persistent history tracking.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=466"
  },
  {
    "text": "While SwiftData automatically turns on persistent history tracking, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=470"
  },
  {
    "text": "Core Data does not.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=474"
  },
  {
    "text": "If you try to open a persistent store when you have ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=475"
  },
  {
    "text": "both Core Data and SwiftData coexisting in the same application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=478"
  },
  {
    "text": "without setting the persistent history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=481"
  },
  {
    "text": "your store will be put into read-only mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=483"
  },
  {
    "text": "There are a couple different scenarios where you would find coexistence ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=487"
  },
  {
    "text": "to be the best option for your use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=490"
  },
  {
    "text": "One scenario is to allow backwards compatibility with existing clients.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=493"
  },
  {
    "text": "Because SwiftData is only available in iOS 17 and macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=497"
  },
  {
    "text": "your current Core Data applications could be impacted by a full switch to SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=502"
  },
  {
    "text": "Alternatively, you might be facing resource constraints ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=507"
  },
  {
    "text": "that make a full conversion to SwiftData difficult.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=510"
  },
  {
    "text": "In these cases, it would make sense to incorporate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=513"
  },
  {
    "text": "SwiftData partially by doing new development using SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=515"
  },
  {
    "text": "or converting only portions of your application to SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=519"
  },
  {
    "text": "There are a couple requirements for coexisting between Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=524"
  },
  {
    "text": "and SwiftData that you should consider before making this transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=527"
  },
  {
    "text": "First, you must either namespace preexisting NSManagedObject-based entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=531"
  },
  {
    "text": "subclasses or the SwiftData classes such that they do not collide.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=536"
  },
  {
    "text": "This means that no two classes can be called the same thing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=540"
  },
  {
    "text": "and that at least one of them needs to change.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=543"
  },
  {
    "text": "Keep in mind that even though you are changing the class name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=546"
  },
  {
    "text": "the entity name stays the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=548"
  },
  {
    "text": "For example, here I have the same SampleTrips project from earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=552"
  },
  {
    "text": "except this time I want to coexist with Core Data and SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=556"
  },
  {
    "text": "The two class names clash.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=560"
  },
  {
    "text": "To differentiate between both the SwiftData and Core Data names Trip, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=562"
  },
  {
    "text": "I changed the Core Data trip class name to CDTrip instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=566"
  },
  {
    "text": "You can also do this in the managed object model editor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=570"
  },
  {
    "text": "Additionally, you would need to keep the Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=575"
  },
  {
    "text": "and SwiftData schemas in sync. New parts of the SwiftData schema must be materialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=577"
  },
  {
    "text": "as an NSManagedObjectModel, and the two schemas cannot diverge. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=582"
  },
  {
    "text": "This means that properties and relationships must be added ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=587"
  },
  {
    "text": "to the models in the exact same way.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=589"
  },
  {
    "text": "This is so that the entity version hashes are matching every step of the way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=592"
  },
  {
    "text": "as mismatched hashes would potentially trigger a migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=596"
  },
  {
    "text": "and delete information that you did not want to remove.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=599"
  },
  {
    "text": "Finally, you need to keep track of the schema versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=602"
  },
  {
    "text": "when incorporating coexistence.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=605"
  },
  {
    "text": "When working with multiple versions of the SwiftData model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=607"
  },
  {
    "text": "you must make sure that the changes are represented correctly ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=610"
  },
  {
    "text": "such that SwiftData may evaluate the differences.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=613"
  },
  {
    "text": "There are a couple ways you could go about doing this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=616"
  },
  {
    "text": "Check out the “Model your schema with SwiftData” talk to understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=619"
  },
  {
    "text": "how to use versioned schemas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=622"
  },
  {
    "text": "For your Swift apps that rely on UIKit or AppKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=625"
  },
  {
    "text": "there are still viable options for you to use SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=629"
  },
  {
    "text": "The first approach is the coexistence solution.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=632"
  },
  {
    "text": "You can bind your UIKit code to Core Data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=635"
  },
  {
    "text": "and it could work in parallel with SwiftData.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=637"
  },
  {
    "text": "Alternatively, you could treat your SwiftData classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=640"
  },
  {
    "text": "as Swift classes, and wrap your Swift code with UIKit code instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=643"
  },
  {
    "text": "That’s all from me! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=648"
  },
  {
    "text": "Now go and discover how you may flexibly migrate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=649"
  },
  {
    "text": "your Core Data application to SwiftData, either fully or incrementally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=652"
  },
  {
    "text": "In the meantime, check out these other cool talks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=656"
  },
  {
    "text": "about SwiftData for a deeper dive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=659"
  },
  {
    "text": "Thanks for joining me! I’m excited to see what you will build! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=662"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10189/?time=666"
  }
]