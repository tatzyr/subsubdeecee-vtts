[
  {
    "text": "Julia: Hello! My name is Julia. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=10"
  },
  {
    "text": "I'm a SwiftUI Engineer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=12"
  },
  {
    "text": "Recently, we've introduced SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=14"
  },
  {
    "text": "a new way to persist your model layer in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=17"
  },
  {
    "text": "In today's session, let's see how to seamlessly ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=20"
  },
  {
    "text": "integrate SwiftData in a SwiftUI app. We ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=23"
  },
  {
    "text": "will discuss the new SwiftUI features that allow for smooth integration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=27"
  },
  {
    "text": "with SwiftData models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=31"
  },
  {
    "text": "To cover your basics, watch the \"Meet SwiftData\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=33"
  },
  {
    "text": "session first if you haven’t already. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=35"
  },
  {
    "text": "To see how SwiftData and SwiftUI play together, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=38"
  },
  {
    "text": "let’s build a flashcards app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=42"
  },
  {
    "text": "For some time, I’ve wanted to make a tool that can ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=44"
  },
  {
    "text": "help me remember dates and authors of great inventions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=46"
  },
  {
    "text": "and SwiftData is perfect for this task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=50"
  },
  {
    "text": "It will help to persist the flashcard decks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=53"
  },
  {
    "text": "so I can open and click through them whenever I got a minute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=56"
  },
  {
    "text": "I want this app to work everywhere: on Mac, iPhone, Watch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=60"
  },
  {
    "text": "and TV, and SwiftData has my back. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=65"
  },
  {
    "text": "It is available across all the platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=68"
  },
  {
    "text": "This is a code-along. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=72"
  },
  {
    "text": "During this session, I will be building an app with you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=74"
  },
  {
    "text": "Hit pause now, and download the companion Xcode projects: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=77"
  },
  {
    "text": "an archive with the prepared starting point, and the finished one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=81"
  },
  {
    "text": "Open the starter project, and go to the ContentView file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=86"
  },
  {
    "text": "Throughout this session, we will leverage a new Xcode feature, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=91"
  },
  {
    "text": "embedded interactive live Previews for Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=95"
  },
  {
    "text": "In the Previews section, there's a grid with some flash cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=98"
  },
  {
    "text": "A click on any card transitions into a view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=103"
  },
  {
    "text": "where we can scroll the cards one by one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=107"
  },
  {
    "text": "Do you remember who invented the compiler? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=110"
  },
  {
    "text": "Click the card. It flips and gives an answer! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=113"
  },
  {
    "text": "The app is populated with sample cards stored in memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=117"
  },
  {
    "text": "and if we run the app and add new ones, they will disappear when we close the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=121"
  },
  {
    "text": "This is where SwiftData comes in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=126"
  },
  {
    "text": "We will use it to persist the flashcards we create. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=129"
  },
  {
    "text": "Today, we will talk about everything you need to know ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=133"
  },
  {
    "text": "to start using SwiftData, checking off one item after another ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=136"
  },
  {
    "text": "in this to-do list that I put together for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=140"
  },
  {
    "text": "You have just met the app we will build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=144"
  },
  {
    "text": "Next, we’ll take a look at the starter project and its model class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=147"
  },
  {
    "text": "Then, step by step, we will convert and amend it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=152"
  },
  {
    "text": "to use SwiftData as its storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=156"
  },
  {
    "text": "We’ll learn how to expand the model class to become SwiftData model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=160"
  },
  {
    "text": "how to query the data and update the view on every change in the model layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=165"
  },
  {
    "text": "create and save models, and conveniently bind UI elements to them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=170"
  },
  {
    "text": "And at the end, as a bonus, we’ll see how easy it is ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=176"
  },
  {
    "text": "to create a document-based app when SwiftData takes care of the storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=180"
  },
  {
    "text": "In the starter project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=185"
  },
  {
    "text": "I defined a Card model that represents a single flash card, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=187"
  },
  {
    "text": "some views, and supporting files to save us time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=193"
  },
  {
    "text": "Every card stores the text for the front and back sides and the creation date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=199"
  },
  {
    "text": "It is a pretty typical model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=205"
  },
  {
    "text": "Let’s update it so that SwiftData can store it for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=208"
  },
  {
    "text": "First, import SwiftData into this file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=213"
  },
  {
    "text": "And next, the main change that we need to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=216"
  },
  {
    "text": "is adding the @Model macro to the definition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=220"
  },
  {
    "text": "And now, the class is fully persistable with SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=226"
  },
  {
    "text": "No more typing. That’s it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=230"
  },
  {
    "text": "And even more: with @Model, the Card gets conformance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=233"
  },
  {
    "text": "to the Observable protocol, and we will use it instead of ObservableObject. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=237"
  },
  {
    "text": "Remove the conformance to the Observable object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=242"
  },
  {
    "text": "as well as @Published property wrappers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=246"
  },
  {
    "text": "We previously used the ObservedObject conformance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=251"
  },
  {
    "text": "to edit the card directly from the UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=254"
  },
  {
    "text": "in the CardEditorView file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=256"
  },
  {
    "text": "To adopt Observable here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=261"
  },
  {
    "text": "we replace the \"ObservedObject\" property wrapper with \"Bindable.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=264"
  },
  {
    "text": "It allows the text fields to bind directly to the card's front... ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=268"
  },
  {
    "text": "and back text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=275"
  },
  {
    "text": "Done! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=277"
  },
  {
    "text": "New Observable macro and Bindable property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=279"
  },
  {
    "text": "allow to effortlessly set up the data flow in an application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=282"
  },
  {
    "text": "with even less code than before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=285"
  },
  {
    "text": "When a View uses a property of an Observable type in its body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=289"
  },
  {
    "text": "it will be updated automatically when the given property changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=293"
  },
  {
    "text": "And it has never been that easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=298"
  },
  {
    "text": "to bind a model's mutable state to UI elements! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=301"
  },
  {
    "text": "I encourage you to watch the WWDC23 session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=305"
  },
  {
    "text": "\"Discover Observation with SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=310"
  },
  {
    "text": "You'll be surprised how Observable simplifies the data flow code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=313"
  },
  {
    "text": "with or without SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=318"
  },
  {
    "text": "And that’s all you need to know about the models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=320"
  },
  {
    "text": "Nothing more. How cool is that? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=325"
  },
  {
    "text": "Next, to query models from SwiftData and display them in the UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=328"
  },
  {
    "text": "let’s switch to ContentView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=333"
  },
  {
    "text": "Instead of the SampleDeck.contents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=337"
  },
  {
    "text": "we will display the cards that SwiftData has.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=339"
  },
  {
    "text": "And there’s a single change that I need to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=348"
  },
  {
    "text": "to bind the cards array to SwiftData storage: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=351"
  },
  {
    "text": "replace @State property wrapper with @Query. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=355"
  },
  {
    "text": "That’s it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=360"
  },
  {
    "text": "As we can see in the preview, there are no more cards to display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=362"
  },
  {
    "text": "probably because we haven’t saved any. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=366"
  },
  {
    "text": "Use @Query whenever you want to display models, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=369"
  },
  {
    "text": "managed by SwiftData, in the UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=373"
  },
  {
    "text": "@Query is a new property wrapper that queries the models from SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=377"
  },
  {
    "text": "It also triggers the view updated on every change of the models, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=382"
  },
  {
    "text": "similarly to how @State would do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=387"
  },
  {
    "text": "Every view can have as many queried properties as it needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=390"
  },
  {
    "text": "Query offers lightweight syntax to configure sorting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=395"
  },
  {
    "text": "ordering, filtering, and even animating changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=399"
  },
  {
    "text": "Under the hood, it uses a model context of the view as the data source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=404"
  },
  {
    "text": "How do we provide @Query with a model context? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=410"
  },
  {
    "text": "We'll get one from a model container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=413"
  },
  {
    "text": "SwiftUI vends a new view and scene modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=417"
  },
  {
    "text": "for a convenient setup of the view’s ModelContainer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=420"
  },
  {
    "text": "To use SwiftData, any application has to set up at least one ModelContainer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=424"
  },
  {
    "text": "It creates the whole storage stack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=430"
  },
  {
    "text": "including the context that @Query will use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=432"
  },
  {
    "text": "A View has a single model container, but an application can create and use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=437"
  },
  {
    "text": "as many containers as it needs for different view hierarchies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=442"
  },
  {
    "text": "If the application does not set up its modelContainer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=447"
  },
  {
    "text": "its windows and the views it creates can not save or query models via SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=451"
  },
  {
    "text": "Many applications need a single model container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=457"
  },
  {
    "text": "In this case, you can set it up for the whole window group scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=461"
  },
  {
    "text": "The window and its views will inherit the container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=465"
  },
  {
    "text": "as well as any other windows created from the same group. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=469"
  },
  {
    "text": "All of these views will write and read from a single container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=473"
  },
  {
    "text": "Some apps need a few storage stacks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=479"
  },
  {
    "text": "and they can set up several model containers for different windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=482"
  },
  {
    "text": "SwiftUI also allows for a granular setup on a view level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=486"
  },
  {
    "text": "Different views in the same window can have separate containers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=491"
  },
  {
    "text": "and saving in one container won’t affect another. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=495"
  },
  {
    "text": "Now, let's set up the modelContainer to provide the Query with a source of data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=499"
  },
  {
    "text": "I open the app definition...",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=504"
  },
  {
    "text": "And set a model container for app's windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=513"
  },
  {
    "text": "Note that the subviews can create, read, update, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=517"
  },
  {
    "text": "and delete only the model types listed in the view modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=522"
  },
  {
    "text": "And we are done with the setup! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=527"
  },
  {
    "text": "Although, I want to take one extra step: provide my previews with sample data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=530"
  },
  {
    "text": "In the app, I have defined an in-memory container with sample cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=536"
  },
  {
    "text": "Let's open the \"PreviewSampleData\" file and include it in the target. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=541"
  },
  {
    "text": "This file contains the definition of a container with the sample data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=548"
  },
  {
    "text": "I will use it in the ContentView to fill my preview with sample cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=552"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=558"
  },
  {
    "text": "Now that @Query has a source of data, the preview displays the cards! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=568"
  },
  {
    "text": "And this is all the setup that’s required to have SwiftData stack ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=573"
  },
  {
    "text": "and generate a preview. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=578"
  },
  {
    "text": "Next, I want to make sure that SwiftData tracks and saves ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=581"
  },
  {
    "text": "the new cards that I create, as well as the changes made to the existing ones. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=584"
  },
  {
    "text": "To do that, I will use the model context of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=590"
  },
  {
    "text": "To access the model context, SwiftUI offers a new environment variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=595"
  },
  {
    "text": "Similarly to model container, each view has a single context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=601"
  },
  {
    "text": "but an application, in general, can have as many as it needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=606"
  },
  {
    "text": "In our app, the context is already configured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=611"
  },
  {
    "text": "This environment variable was populated automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=614"
  },
  {
    "text": "when we set the model container earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=618"
  },
  {
    "text": "Let’s switch back to Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=621"
  },
  {
    "text": "We will need to access the modelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=624"
  },
  {
    "text": "to save and update the cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=627"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=633"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=641"
  },
  {
    "text": "We insert the newly created card in the model context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=652"
  },
  {
    "text": "to make SwiftData aware of the model we want to store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=655"
  },
  {
    "text": "You might think that after inserting the model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=663"
  },
  {
    "text": "you need to save the context, calling \"modelContext.save(),\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=666"
  },
  {
    "text": "but you don't need to do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=669"
  },
  {
    "text": "A nice detail about SwiftData is that it autosaves the model context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=673"
  },
  {
    "text": "The autosaves are triggered by UI-related events and user input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=679"
  },
  {
    "text": "We don’t need to worry about saving because SwiftData does it for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=684"
  },
  {
    "text": "There are only a few cases when you want to make sure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=689"
  },
  {
    "text": "that all the changes are persisted immediately, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=692"
  },
  {
    "text": "for example, before sharing the SwiftData storage or sending it over. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=696"
  },
  {
    "text": "In these cases, call \"save()\" explicitly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=700"
  },
  {
    "text": "Now that our app can save and query the cards, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=704"
  },
  {
    "text": "let’s create one! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=707"
  },
  {
    "text": "I run the app... ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=710"
  },
  {
    "text": "and press plus button to create a card. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=713"
  },
  {
    "text": "Let's add that Compiler card that we saw before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=718"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=724"
  },
  {
    "text": "Now, let’s quit the app, launch it again, and see if our new card is there.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=730"
  },
  {
    "text": "And here it is! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=739"
  },
  {
    "text": "Now you know how to access the model context of the view and add cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=741"
  },
  {
    "text": "Done! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=746"
  },
  {
    "text": "Let’s open a new window. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=748"
  },
  {
    "text": "It displays the same deck as the first one, which makes sense, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=751"
  },
  {
    "text": "since both windows use the same model container and access the same data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=755"
  },
  {
    "text": "It would be nice, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=761"
  },
  {
    "text": "if the app could open different flash card decks in different windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=763"
  },
  {
    "text": "Essentially, it means that I want to treat every deck as a separate document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=768"
  },
  {
    "text": "Then, I can share these documents with friends. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=773"
  },
  {
    "text": "Document-based apps is a concept used on macOS, iOS, and iPadOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=776"
  },
  {
    "text": "It describes the certain types of applications that allow users to create, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=783"
  },
  {
    "text": "open, view, or edit different types of documents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=787"
  },
  {
    "text": "Every document is a file, and users can store, copy, and share them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=792"
  },
  {
    "text": "And I am excited to let you know that SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=798"
  },
  {
    "text": "supports SwiftData-backed document apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=802"
  },
  {
    "text": "Let’s try this approach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=806"
  },
  {
    "text": "I open the FlashCardApp file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=808"
  },
  {
    "text": "Document-based apps exist on iOS and macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=812"
  },
  {
    "text": "and on these platforms, we'll switch to using the DocumentGroup initializer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=816"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=825"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=834"
  },
  {
    "text": "I will be passing in the model type Card.self, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=847"
  },
  {
    "text": "content type, and a view builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=851"
  },
  {
    "text": "Let's take a short detour and talk about the second parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=853"
  },
  {
    "text": "content type, in more detail! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=857"
  },
  {
    "text": "SwiftData Document-based apps need to declare custom content types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=860"
  },
  {
    "text": "Each SwiftData document is built from a unique set of models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=865"
  },
  {
    "text": "and so has a unique representation on disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=868"
  },
  {
    "text": "In the context of documents, you can think of a content type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=872"
  },
  {
    "text": "as of a binary file format, like JPEG. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=876"
  },
  {
    "text": "Another type of documents, a package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=880"
  },
  {
    "text": "is a directory with a fixed structure on disk, like an Xcode project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=883"
  },
  {
    "text": "For example, all the JPEG images have the same binary structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=888"
  },
  {
    "text": "Otherwise, photo editors wouldn’t know how to read them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=893"
  },
  {
    "text": "Similarly, all the Xcode projects contain certain directories and files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=897"
  },
  {
    "text": "When the user opens the deck, we need the operating system ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=903"
  },
  {
    "text": "to associate the deck format and file extension with our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=907"
  },
  {
    "text": "That’s why we need to declare the content type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=912"
  },
  {
    "text": "SwiftData documents are packages: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=916"
  },
  {
    "text": "if you mark some properties of a SwiftData model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=919"
  },
  {
    "text": "with the “externalStorage” attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=921"
  },
  {
    "text": "all the externally stored items will be a part of the document package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=924"
  },
  {
    "text": "In the UTType+FlashCards file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=929"
  },
  {
    "text": "I have a definition of the new content type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=933"
  },
  {
    "text": "so we can conveniently use it in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=936"
  },
  {
    "text": "We'll put the same definition in the Info.plist.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=939"
  },
  {
    "text": "We are about to declare a new content type in the operating system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=952"
  },
  {
    "text": "We need to specify the file extension to help to distinguish ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=957"
  },
  {
    "text": "the card decks created by our app from any other documents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=960"
  },
  {
    "text": "For this sample app, we’ll use “sampledeck” as an extension.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=965"
  },
  {
    "text": "I will also add a short description, like Flash Cards Deck.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=973"
  },
  {
    "text": "The identifier should be exactly the same as the one in the code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=984"
  },
  {
    "text": "Because SwiftData documents are packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=993"
  },
  {
    "text": "we have to make sure our type conforms to ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=995"
  },
  {
    "text": "com.apple.package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1000"
  },
  {
    "text": "And now, let’s use the content type that we declared. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1006"
  },
  {
    "text": "I am returning to the app definition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1011"
  },
  {
    "text": "and passing the content type to the DocumentGroup. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1013"
  },
  {
    "text": "The view builder looks identical.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1019"
  },
  {
    "text": "Notably, we don’t set up the model container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1026"
  },
  {
    "text": "The document infrastructure will set up one for each document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1030"
  },
  {
    "text": "Let's run the application and see how it looks now! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1036"
  },
  {
    "text": "The app launches with the open panel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1043"
  },
  {
    "text": "Standard behavior for Document-based applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1047"
  },
  {
    "text": "I'll create a new document ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1051"
  },
  {
    "text": "and add a card there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1054"
  },
  {
    "text": "The document now has a toolbar subtitle indicating that it has unsaved changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1058"
  },
  {
    "text": "I press Command+S, and the save dialog appears. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1064"
  },
  {
    "text": "Note that the deck will be saved with the same file extension ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1070"
  },
  {
    "text": "that we put in the Info.plist earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1073"
  },
  {
    "text": "I'll save the new deck, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1077"
  },
  {
    "text": "and here it is, my first flashcards deck, on the Desktop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1081"
  },
  {
    "text": "I can also press Command+N to create a new deck, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1086"
  },
  {
    "text": "or Command+O to open one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1091"
  },
  {
    "text": "These shortcuts, as well as many other features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1094"
  },
  {
    "text": "Document-based applications get automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1098"
  },
  {
    "text": "Just to recap, today, we’ve learned how to use SwiftData storage in SwiftUI apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1102"
  },
  {
    "text": "We talked about the new @Model macro, @Query property wrapper, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1108"
  },
  {
    "text": "and the new Environment variable for model context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1112"
  },
  {
    "text": "and saw how easy it is to use SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1115"
  },
  {
    "text": "as a storage for your documents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1119"
  },
  {
    "text": "Thanks for joining me today, and have fun building apps! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1122"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10154/?time=1126"
  }
]