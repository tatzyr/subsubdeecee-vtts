[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=0"
  },
  {
    "text": "David: Hi, and welcome to “What's New in Core Data.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=11"
  },
  {
    "text": "My name is David Stites, and I'm an engineer on the Core Data team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=14"
  },
  {
    "text": "In this session, you'll learn about new technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=19"
  },
  {
    "text": "in Core Data that will help you more quickly and easily design, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=22"
  },
  {
    "text": "query, update, and migrate the Core Data data model in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=26"
  },
  {
    "text": "I'll start by talking about composite attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=33"
  },
  {
    "text": "a great new way to organize structured data in your app's model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=36"
  },
  {
    "text": "before talking about how to “stage” your most complex model migrations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=41"
  },
  {
    "text": "so that you can use lightweight migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=46"
  },
  {
    "text": "and I'll finish up with how to defer your model migrations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=50"
  },
  {
    "text": "to keep your app responsive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=53"
  },
  {
    "text": "Composite attributes are a new type of attribute.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=56"
  },
  {
    "text": "Composite attributes allow for the encapsulation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=61"
  },
  {
    "text": "of complex and custom data types within a single attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=64"
  },
  {
    "text": "Each composite attribute is composed of attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=70"
  },
  {
    "text": "of the built-in Core Data types that you're already familiar with, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=73"
  },
  {
    "text": "such as String, Float, Int, and Data.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=78"
  },
  {
    "text": "Composite attributes may be nested within each other ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=83"
  },
  {
    "text": "so that a top-level composite attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=87"
  },
  {
    "text": "may contain additional composite attributes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=89"
  },
  {
    "text": "The Xcode Core Data model editor has been updated to make it easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=94"
  },
  {
    "text": "to define and manage your model's composite attributes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=99"
  },
  {
    "text": "Composite attributes are a compelling alternative ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=106"
  },
  {
    "text": "to using transformable type attributes to create durable custom data types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=109"
  },
  {
    "text": "There is no need to write code that transforms the attribute's value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=115"
  },
  {
    "text": "Unlike transformable attributes, composite attributes allow NSFetchRequests ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=120"
  },
  {
    "text": "with NSPredicates configured with the composite attribute's namespaced keypaths.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=125"
  },
  {
    "text": "Composite attributes can be used to encapsulate a proliferation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=133"
  },
  {
    "text": "of flattened attributes, leading to more maintainable and readable code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=137"
  },
  {
    "text": "Composite attributes can be used to improve the performance of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=145"
  },
  {
    "text": "If your data model is composed in such a way that fetching one entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=149"
  },
  {
    "text": "almost always results in accessing a relationship to another entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=154"
  },
  {
    "text": "you can refactor that relationship into using composite attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=158"
  },
  {
    "text": "The effect of embedding a composite attribute in the first entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=163"
  },
  {
    "text": "is that it prevents faulting in objects across the relationship.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=167"
  },
  {
    "text": "The composite attribute class is NSCompositeAttributeDescription. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=173"
  },
  {
    "text": "The attribute type for an NSCompositeAttributeDescription ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=179"
  },
  {
    "text": "is NSCompositeAttributeType.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=183"
  },
  {
    "text": "The NSCompositeAttributeDescription class contains an array, elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=187"
  },
  {
    "text": "that consists of NSAttributeDescription's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=193"
  },
  {
    "text": "or other nested NSCompositeAttributeDescription's.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=195"
  },
  {
    "text": "The elements array cannot contain other types of property descriptions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=200"
  },
  {
    "text": "such as NSRelationshipDescription. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=205"
  },
  {
    "text": "Attempting to set invalid elements will result in an NSInvalidArgumentException.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=208"
  },
  {
    "text": "I'm gonna describe to you how to adopt composite attributes with a demo.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=216"
  },
  {
    "text": "Consider this basic data model with an Aircraft entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=223"
  },
  {
    "text": "It has a number of attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=226"
  },
  {
    "text": "including a colors attribute, which is a transformable type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=228"
  },
  {
    "text": "The transformer for that type stores and parses a formatted string ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=233"
  },
  {
    "text": "that describes the primary, secondary, and tertiary colors of the aircraft.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=237"
  },
  {
    "text": "I'll improve this entity by replacing the colors attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=244"
  },
  {
    "text": "with a composite attribute colorScheme to store the paint colors of the aircraft.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=248"
  },
  {
    "text": "colorScheme is a composite attribute with the elements: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=254"
  },
  {
    "text": "Primary, secondary, and tertiary, each of which are a String attribute.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=257"
  },
  {
    "text": "In Xcode, I'll open a project ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=265"
  },
  {
    "text": "which is an app I use to track my flight time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=267"
  },
  {
    "text": "The data model for that app is configured with the Aircraft entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=273"
  },
  {
    "text": "that I just talked about, as well as a couple other entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=276"
  },
  {
    "text": "To begin the conversion, in the Core Data model editor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=282"
  },
  {
    "text": "I am adding a new composite attribute named colorScheme.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=285"
  },
  {
    "text": "Within that composite, I am adding three string attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=291"
  },
  {
    "text": "primary, secondary, and tertiary.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=295"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=312"
  },
  {
    "text": "In the Aircraft entity, I'll add the composite attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=318"
  },
  {
    "text": "and set the type of that attribute to colorScheme.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=322"
  },
  {
    "text": "The work in the model is now complete, and it's time to update the code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=334"
  },
  {
    "text": "In my Aircraft implementation, I am adding a new property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=340"
  },
  {
    "text": "@NSManaged var colorScheme, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=344"
  },
  {
    "text": "whose type is a Dictionary with a String key and Any object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=346"
  },
  {
    "text": "As I use this composite attribute throughout the code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=352"
  },
  {
    "text": "I am accessing the values using dictionary notation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=355"
  },
  {
    "text": "with the attribute's name as the key. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=359"
  },
  {
    "text": "Here, I am setting the colorScheme attribute of the aircraft ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=362"
  },
  {
    "text": "by using the String keys primary, secondary, and tertiary.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=365"
  },
  {
    "text": "Similarly, when I configure a NSFetchRequest with a NSPredicate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=373"
  },
  {
    "text": "the elements of a composite attribute are accessed via a namespaced keypath. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=378"
  },
  {
    "text": "Here, colorScheme.primary is used to filter on that attribute.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=384"
  },
  {
    "text": "As an application evolves, it may become necessary to change the data model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=391"
  },
  {
    "text": "Updating the data model requires ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=397"
  },
  {
    "text": "that those changes are materialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=399"
  },
  {
    "text": "in the underlying storage schema.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=401"
  },
  {
    "text": "If a numPassengers attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=406"
  },
  {
    "text": "is added to the model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=408"
  },
  {
    "text": "the corresponding storage must be updated.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=410"
  },
  {
    "text": "The process of performing schema changes is called migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=415"
  },
  {
    "text": "After migration, the changes are fully reflected in the underlying storage.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=421"
  },
  {
    "text": "Core Data has a built-in migration toolset to help keep an app's data storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=428"
  },
  {
    "text": "up to date with the current data model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=433"
  },
  {
    "text": "Collectively, these tools are referred to as “lightweight migration.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=435"
  },
  {
    "text": "To learn more about lightweight migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=440"
  },
  {
    "text": "watch \"Evolve your app's schema\" from WWDC 2022.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=443"
  },
  {
    "text": "Sometimes, the combined changes to a data model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=449"
  },
  {
    "text": "exceed the capabilities of lightweight migration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=453"
  },
  {
    "text": "The solution to this problem is a staged migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=456"
  },
  {
    "text": "The staged migrations API was designed with a couple goals in mind: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=460"
  },
  {
    "text": "Help you migrate complex data models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=465"
  },
  {
    "text": "that have non-conforming lightweight schema changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=468"
  },
  {
    "text": "simplify your app by potentially removing thousands of lines of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=472"
  },
  {
    "text": "related to migrations and the migration infrastructure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=476"
  },
  {
    "text": "and provide opportunities for your app to gain execution control ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=480"
  },
  {
    "text": "during the migration process to perform various tasks.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=485"
  },
  {
    "text": "To use this API, there are several steps you'll need to take: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=492"
  },
  {
    "text": "Determine when changes to your model do not conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=497"
  },
  {
    "text": "to operations supported by lightweight migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=501"
  },
  {
    "text": "decompose non-conforming model changes into a series of conforming model changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=506"
  },
  {
    "text": "that are supported by lightweight migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=512"
  },
  {
    "text": "describe a total ordering of NSManagedObjectModel's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=517"
  },
  {
    "text": "to Core Data using the new staged migrations APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=521"
  },
  {
    "text": "and have Core Data execute an event loop that iteratively steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=526"
  },
  {
    "text": "through each unprocessed model in a serial order and migrate the store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=530"
  },
  {
    "text": "At certain points during the migration, execution control will be given ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=536"
  },
  {
    "text": "to your app to perform any necessary tasks related to that migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=541"
  },
  {
    "text": "To determine when your model has non-conforming lightweight changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=547"
  },
  {
    "text": "you have several options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=552"
  },
  {
    "text": "The first option is to review the schema changes manually ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=554"
  },
  {
    "text": "and ensure each change is eligible for lightweight migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=557"
  },
  {
    "text": "The second option is to try to open the persistent store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=563"
  },
  {
    "text": "with the new model and the lightweight migration options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=566"
  },
  {
    "text": "NSMigratePersistentStores AutomaticallyOption ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=569"
  },
  {
    "text": "and NSInferMappingModelAutomaticallyOption ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=573"
  },
  {
    "text": "set to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=577"
  },
  {
    "text": "If the changes are not lightweight-eligible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=579"
  },
  {
    "text": "you'll receive an NSPersistentStore IncompatibleVersionHashError.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=582"
  },
  {
    "text": "The final option is to use NSMappingModel.inferredMappingModel ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=588"
  },
  {
    "text": "(forSourceModel:destinationModel:). ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=593"
  },
  {
    "text": "This method returns the inferred model if Core Data was able to create it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=597"
  },
  {
    "text": "Otherwise, it returns nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=601"
  },
  {
    "text": "Considering the Aircraft model again, it has a new attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=605"
  },
  {
    "text": "flightData, that stores data in a binary format.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=608"
  },
  {
    "text": "Suppose there's a need to denormalize this model and separate all flight data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=614"
  },
  {
    "text": "into its own entity type, all while preserving any existing data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=618"
  },
  {
    "text": "and the relationship to the aircraft from which it was generated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=622"
  },
  {
    "text": "This is a very complex model change and is not eligible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=626"
  },
  {
    "text": "for lightweight migration by itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=630"
  },
  {
    "text": "These changes need to be decomposed to use staged migration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=633"
  },
  {
    "text": "When decomposing non-lightweight changes, the goal is to transform migration tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=638"
  },
  {
    "text": "that aren't eligible for lightweight migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=644"
  },
  {
    "text": "into a minimum series of migrations that are eligible for lightweight migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=647"
  },
  {
    "text": "Each of the models introduced will have one or more operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=654"
  },
  {
    "text": "that is within the capabilities of lightweight migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=659"
  },
  {
    "text": "that compose the non-conforming changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=663"
  },
  {
    "text": "The result is a series of migrations where each model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=666"
  },
  {
    "text": "is lightweight migratable but equivalent to the non-conforming migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=670"
  },
  {
    "text": "Returning to the example, I've labeled the original model ModelV1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=678"
  },
  {
    "text": "This model migration will be decomposed by introducing two new model versions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=684"
  },
  {
    "text": "ModelV2 and ModelV3. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=689"
  },
  {
    "text": "In ModelV2, the Aircraft entity gains a relationship called flightParameters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=694"
  },
  {
    "text": "which is a collection of newly created FlightData entities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=699"
  },
  {
    "text": "The FlightData entity has a binary type attribute data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=704"
  },
  {
    "text": "and a relationship to an Aircraft. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=709"
  },
  {
    "text": "To preserve the existing data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=712"
  },
  {
    "text": "the migration stage will copy the data from the Aircraft entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=714"
  },
  {
    "text": "over into the new FlightData entities and relate them to the Aircraft.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=718"
  },
  {
    "text": "Our final model is ModelV3, created from ModelV2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=726"
  },
  {
    "text": "In ModelV3, the old flightData attribute is deleted from Aircraft entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=732"
  },
  {
    "text": "and the model is successfully denormalized, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=738"
  },
  {
    "text": "and all existing data is preserved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=741"
  },
  {
    "text": "Each of the steps described is within the capabilities of lightweight migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=744"
  },
  {
    "text": "To describe a total ordering of models, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=750"
  },
  {
    "text": "the Core Data framework level support consists of the following classes: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=753"
  },
  {
    "text": "NSStagedMigrationManager, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=758"
  },
  {
    "text": "NSCustomMigrationStage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=762"
  },
  {
    "text": "NSLightweightMigrationStage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=765"
  },
  {
    "text": "and NSManagedObjectModelReference.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=768"
  },
  {
    "text": "The NSStagedMigrationManager class encapsulates a total ordering ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=773"
  },
  {
    "text": "of NSCustomMigrationStage's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=778"
  },
  {
    "text": "and the supplementary NSLightweightMigrationStage's ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=781"
  },
  {
    "text": "that is described by you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=785"
  },
  {
    "text": "The staged migration manager also manages the migration event loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=789"
  },
  {
    "text": "and provides access to the migrating store via an NSPersistentContainer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=793"
  },
  {
    "text": "The manager is added to the store options using the key ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=799"
  },
  {
    "text": "NSPersistentStoreStagedMigrationManager OptionKey.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=803"
  },
  {
    "text": "Migration stages form the basis for migrating between versions of a model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=812"
  },
  {
    "text": "As you adopt staged migration, you'll describe each model version ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=820"
  },
  {
    "text": "to Core Data using either an NSCustomMigrationStage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=824"
  },
  {
    "text": "or an NSLightweightMigrationStage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=829"
  },
  {
    "text": "The NSLightweightMigrationStage class describes a series of models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=833"
  },
  {
    "text": "that did not require decomposition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=838"
  },
  {
    "text": "and that were lightweight migration eligible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=840"
  },
  {
    "text": "This will likely be the majority of your models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=844"
  },
  {
    "text": "These lightweight migration stages are used to supplement the total ordering ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=848"
  },
  {
    "text": "of models described to Core Data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=853"
  },
  {
    "text": "All lightweight model versions must be represented ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=856"
  },
  {
    "text": "in one or more NSLightweightMigrationStage's.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=859"
  },
  {
    "text": "Each decomposed version of your model you create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=865"
  },
  {
    "text": "will be represented using an NSCustomMigrationStage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=868"
  },
  {
    "text": "and contain a source model reference and a destination model reference.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=872"
  },
  {
    "text": "NSCustomMigrationStage provides optional handlers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=879"
  },
  {
    "text": "that run immediately prior to and after the migration stage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=882"
  },
  {
    "text": "These handlers give you the ability to run custom code during the migration process.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=887"
  },
  {
    "text": "Staged migrations make use of the NSManagedObjectModelReference class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=894"
  },
  {
    "text": "This class represents a promise of an NSManagedObjectModel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=900"
  },
  {
    "text": "During migration, Core Data will fulfill this promise. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=906"
  },
  {
    "text": "An NSManagedObjectModelReference is flexible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=910"
  },
  {
    "text": "and can be created in a number of different ways.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=914"
  },
  {
    "text": "Every NSManagedObjectModelReference needs to be initialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=920"
  },
  {
    "text": "with a version checksum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=924"
  },
  {
    "text": "This is to validate the model hasn't inadvertently changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=926"
  },
  {
    "text": "The checksum can be obtained ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=931"
  },
  {
    "text": "using the NSManagedObjectModel .versionChecksum method.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=933"
  },
  {
    "text": "Alternatively, you can retrieve the version checksum ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=939"
  },
  {
    "text": "from the Xcode build log under “Compile data model.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=943"
  },
  {
    "text": "Search for the string “version checksum.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=947"
  },
  {
    "text": "For versioned models, the checksum is also available ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=951"
  },
  {
    "text": "in the VersionInfo.plist of the NSManagedObjectModel bundle.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=954"
  },
  {
    "text": "Returning to the example, to start using staged migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=961"
  },
  {
    "text": "I'll begin by creating model references for each of the three models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=965"
  },
  {
    "text": "I am using the initializer that accepts a model name and bundle reference, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=970"
  },
  {
    "text": "but there are other options as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=975"
  },
  {
    "text": "The next step is to describe the required migration stages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=979"
  },
  {
    "text": "Since the first stage only added the flightData attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=984"
  },
  {
    "text": "that can be represented in a lightweight stage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=987"
  },
  {
    "text": "as adding attributes is a lightweight change.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=990"
  },
  {
    "text": "The next stage, however, will be a custom stage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=995"
  },
  {
    "text": "because the model changes were decomposed into two model versions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=998"
  },
  {
    "text": "and we need to run custom code to preserve existing data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1003"
  },
  {
    "text": "The custom migration stage is initialized with ModelV2 and ModelV3.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1007"
  },
  {
    "text": "In the willMigrateHandler, the code fetches entity rows ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1016"
  },
  {
    "text": "where flightData is not nil. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1019"
  },
  {
    "text": "The generic NSManagedObject and NSFetchRequestResult types ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1022"
  },
  {
    "text": "are being used instead of the Aircraft managed object subclass ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1027"
  },
  {
    "text": "due to the fact that it is possible that the Aircraft class may not exist ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1032"
  },
  {
    "text": "as expected during the migration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1037"
  },
  {
    "text": "For each fetched Aircraft entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1041"
  },
  {
    "text": "the data is copied into a new instance of FlightData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1043"
  },
  {
    "text": "and the two entities are related and persisted. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1047"
  },
  {
    "text": "At the end of the execution of this migration stage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1051"
  },
  {
    "text": "the store schema is updated to the latest model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1054"
  },
  {
    "text": "and the existing data has been preserved.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1057"
  },
  {
    "text": "To finish the staged migration, I create an NSStagedMigrationManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1061"
  },
  {
    "text": "with the lightweight migration stage and the custom migration stage.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1066"
  },
  {
    "text": "The NSStagedMigrationManager is added ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1073"
  },
  {
    "text": "to the NSPersistentStoreDescription options ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1076"
  },
  {
    "text": "with the key NSPersistentStore StagedMigrationManagerOptionKey.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1079"
  },
  {
    "text": "The persistent stores are then loaded to start the migration process ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1086"
  },
  {
    "text": "and affect the store schema. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1091"
  },
  {
    "text": "And that's it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1092"
  },
  {
    "text": "Core Data will automatically apply the required stages ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1094"
  },
  {
    "text": "and migrate the store schema.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1097"
  },
  {
    "text": "Some lightweight migrations require additional runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1101"
  },
  {
    "text": "that your app may not be able to provide in the foreground.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1105"
  },
  {
    "text": "The process of transforming user data during lightweight migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1111"
  },
  {
    "text": "is not instantaneous. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1115"
  },
  {
    "text": "For example, if the migration involves copying data from one column to another, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1118"
  },
  {
    "text": "or one table to another, it may take some time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1123"
  },
  {
    "text": "This can result in a frustrating user experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1127"
  },
  {
    "text": "especially if the migration is done at launch time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1131"
  },
  {
    "text": "Deferred migration can help you solve this problem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1136"
  },
  {
    "text": "This API will allow you to defer some of the work done ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1139"
  },
  {
    "text": "during lightweight migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1143"
  },
  {
    "text": "with the ability to finish the deferred work at a later date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1145"
  },
  {
    "text": "During a lightweight migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1150"
  },
  {
    "text": "if an entity has a migration transformation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1151"
  },
  {
    "text": "that requires clean up, such as updating indices ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1154"
  },
  {
    "text": "or dropping a column after performing a table copy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1158"
  },
  {
    "text": "this table transformation can be delayed until you deem ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1161"
  },
  {
    "text": "that the resources are available to perform the table transformation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1166"
  },
  {
    "text": "The lightweight migration is still synchronous and occurs normally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1171"
  },
  {
    "text": "Only the clean up of the schema is deferred. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1176"
  },
  {
    "text": "Your app will use the latest schema as normal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1179"
  },
  {
    "text": "To opt into deferred migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1184"
  },
  {
    "text": "set the NSPersistentStore DeferredLightweightMigrationOptionKey ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1186"
  },
  {
    "text": "in the store options to true.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1191"
  },
  {
    "text": "The deferred migration API has runtime compatibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1195"
  },
  {
    "text": "all the way back to macOS Big Sur and iOS 14.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1200"
  },
  {
    "text": "Deferred migration is only available for SQLite store types.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1206"
  },
  {
    "text": "Some examples of where deferred migration might be useful include: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1213"
  },
  {
    "text": "Removing attributes or relationships from an entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1217"
  },
  {
    "text": "changing relationships where an entity hierarchy no longer exists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1221"
  },
  {
    "text": "and changing relationships from being ordered to non-ordered.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1227"
  },
  {
    "text": "To finish deferred migration tasks, check the persistent store metadata. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1234"
  },
  {
    "text": "If it contains the key NSPersistentStore DeferredLightweightMigrationOptionKey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1239"
  },
  {
    "text": "that is a signal to you that there is deferred migration work ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1245"
  },
  {
    "text": "that needs to be finished. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1249"
  },
  {
    "text": "The delayed migrations can be processed by invoking ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1252"
  },
  {
    "text": "NSPersistentStoreCoordinator .finishDeferredLightweightMigration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1255"
  },
  {
    "text": "To defer any lightweight migration in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1262"
  },
  {
    "text": "set the NSPersistentStoreDeferred LightweightMigrationOptionKey ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1265"
  },
  {
    "text": "to true in your store options when adding the persistent store to the coordinator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1270"
  },
  {
    "text": "When it's a good time to finish a deferred migration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1276"
  },
  {
    "text": "you can check to see if there is pending deferred work ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1279"
  },
  {
    "text": "by checking the metadata for the store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1282"
  },
  {
    "text": "If NSPersistentStoreDeferredLightweight MigrationOptionKey is set to true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1285"
  },
  {
    "text": "then call finishDeferredLightweightMigration().",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1291"
  },
  {
    "text": "To schedule your deferred migration tasks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1297"
  },
  {
    "text": "consider using the Background Tasks API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1299"
  },
  {
    "text": "BGProcessingTask is meant for time-consuming operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1303"
  },
  {
    "text": "such as long data updates and app maintenance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1308"
  },
  {
    "text": "The system will determine the best time to run your task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1311"
  },
  {
    "text": "However, generally processing tasks only run on the device when it's idle ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1315"
  },
  {
    "text": "and will terminate any background processing tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1321"
  },
  {
    "text": "when the user starts using the device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1324"
  },
  {
    "text": "Deferred and staged migration can be combined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1328"
  },
  {
    "text": "If you have a set of complex migrations that may take a while, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1332"
  },
  {
    "text": "consider designing stages that take advantage of both APIs capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1336"
  },
  {
    "text": "Returning to the example model, in ModelV3, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1342"
  },
  {
    "text": "where we remove the attribute flightData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1345"
  },
  {
    "text": "this might make for a good deferred migration candidate.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1348"
  },
  {
    "text": "There are three great new technologies in Core Data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1354"
  },
  {
    "text": "Encapsulate your custom data types in a nestable, structured way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1359"
  },
  {
    "text": "using composite attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1363"
  },
  {
    "text": "perform complex model migrations using staged migration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1366"
  },
  {
    "text": "by decomposing your model changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1371"
  },
  {
    "text": "and turbocharge your app's performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1374"
  },
  {
    "text": "by delaying some migration work using deferred migration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1376"
  },
  {
    "text": "All three technologies work in harmony to improve your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1381"
  },
  {
    "text": "Our team is excited to hear how you use these new technologies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1386"
  },
  {
    "text": "Thanks for watching, and have a great WWDC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1391"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10186/?time=1395"
  }
]