[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=0"
  },
  {
    "text": "Anant: Hello. Welcome to \"Animate symbols in your app.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=10"
  },
  {
    "text": "My name is Anant, and I'm an engineer on UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=14"
  },
  {
    "text": "SF Symbols are an iconic part of Apple interfaces.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=19"
  },
  {
    "text": "They look gorgeous in menus, toolbars, sidebars, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=24"
  },
  {
    "text": "And because people are familiar with symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=29"
  },
  {
    "text": "they make your app more intuitive to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=32"
  },
  {
    "text": "In iOS 17 and macOS Sonoma, we're enhancing symbols with animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=36"
  },
  {
    "text": "bringing  more life into your apps than ever before.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=41"
  },
  {
    "text": "I'll start with a tour of the new symbol animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=46"
  },
  {
    "text": "also called \"symbol effects.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=50"
  },
  {
    "text": "Then, I'll guide you through the new APIs in SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=53"
  },
  {
    "text": "UIKit, and AppKit to add symbol effects to your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=57"
  },
  {
    "text": "And finally, I'll give you some tips to make symbol effects really shine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=63"
  },
  {
    "text": "So let's jump in.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=70"
  },
  {
    "text": "iOS 17 and macOS Sonoma introduce a collection of universal animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=74"
  },
  {
    "text": "that can be applied to any symbol image, even custom symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=79"
  },
  {
    "text": "These animations are called Bounce, Pulse, Variable Color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=84"
  },
  {
    "text": "Scale, Appear, Disappear, and Replace.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=89"
  },
  {
    "text": "I recommend checking out the \"What's new in SF Symbols 5\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=96"
  },
  {
    "text": "to dive deeper into the animations themselves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=100"
  },
  {
    "text": "including best practices for designing interfaces with them.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=103"
  },
  {
    "text": "In the API, these animations are called \"symbol effects,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=108"
  },
  {
    "text": "and the new Symbols framework is home to all of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=113"
  },
  {
    "text": "It's included for free when you use SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=117"
  },
  {
    "text": "AppKit, or UIKit to build your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=119"
  },
  {
    "text": "A really cool feature of the Symbols framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=123"
  },
  {
    "text": "is that each effect has a simple dot-separated name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=126"
  },
  {
    "text": "So to create a bounce effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=130"
  },
  {
    "text": "you can simply write \".bounce\" in your code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=132"
  },
  {
    "text": "These dot-separated names also extend to the way you configure effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=137"
  },
  {
    "text": "For example, you can specify that the symbol should bounce ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=143"
  },
  {
    "text": "upwards or downwards, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=146"
  },
  {
    "text": "but most of the time, you won't need to specify anything. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=148"
  },
  {
    "text": "The frameworks will automatically use the most appropriate direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=153"
  },
  {
    "text": "Some effects feature many configuration options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=157"
  },
  {
    "text": "For example, Variable Color has three different settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=161"
  },
  {
    "text": "By chaining options together, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=166"
  },
  {
    "text": "you can configure very specific effects with ease.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=168"
  },
  {
    "text": "The effect names are real Swift code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=173"
  },
  {
    "text": "There's no strings attached. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=176"
  },
  {
    "text": "Xcode will autocomplete each part of the name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=179"
  },
  {
    "text": "and if an effect is configured incorrectly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=182"
  },
  {
    "text": "you'll get an error at compile time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=185"
  },
  {
    "text": "The best way to explore all the new animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=188"
  },
  {
    "text": "is the SF Symbols app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=191"
  },
  {
    "text": "In the new animation tab, you can learn about ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=194"
  },
  {
    "text": "all the available configuration options for each effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=197"
  },
  {
    "text": "You can even copy a dot-separated effect name ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=202"
  },
  {
    "text": "to be used directly in your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=205"
  },
  {
    "text": "With all of the effect types and configuration options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=208"
  },
  {
    "text": "there's a massive variety of animations available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=211"
  },
  {
    "text": "But all of these effects actually encompass a small set of behaviors.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=215"
  },
  {
    "text": "Bounce, for example, plays a one-off animation on the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=220"
  },
  {
    "text": "This is considered discrete behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=226"
  },
  {
    "text": "Adding a Scale effect, on the other hand, changes the symbol's scale level ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=230"
  },
  {
    "text": "and keeps it there indefinitely. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=234"
  },
  {
    "text": "Scale is said to support indefinite behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=237"
  },
  {
    "text": "Unlike discrete effects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=241"
  },
  {
    "text": "indefinite effects only end when explicitly removed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=243"
  },
  {
    "text": "Appear and Disappear support transition behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=248"
  },
  {
    "text": "They can transition the symbol in and out of view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=252"
  },
  {
    "text": "And finally, Replace is a content transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=257"
  },
  {
    "text": "It animates from one symbol to another.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=261"
  },
  {
    "text": "So that's the four different behaviors: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=265"
  },
  {
    "text": "discrete, indefinite, transition, and content transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=268"
  },
  {
    "text": "In the Symbols framework, each behavior corresponds to a protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=273"
  },
  {
    "text": "Effects declare their supported behaviors by conforming to these protocols.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=278"
  },
  {
    "text": "Here is a breakdown of all available effects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=284"
  },
  {
    "text": "as well as their supported behaviors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=287"
  },
  {
    "text": "I'll cover this in more detail in this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=290"
  },
  {
    "text": "Just know that an effect's behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=294"
  },
  {
    "text": "determines which UI framework APIs can work with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=296"
  },
  {
    "text": "And speaking of UI framework APIs, let's talk about how to add ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=300"
  },
  {
    "text": "all of these cool effects in your SwiftUI, UIKit, and AppKit apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=305"
  },
  {
    "text": "In SwiftUI, there is a new view modifier, symbolEffect.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=311"
  },
  {
    "text": "Simply add the modifier and pass in the desired effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=317"
  },
  {
    "text": "Here, I pass in variableColor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=321"
  },
  {
    "text": "and now the symbol is playing the default variable color animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=324"
  },
  {
    "text": "It's easy to do this in AppKit and UIKit too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=330"
  },
  {
    "text": "Just use the new addSymbolEffect method on an image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=334"
  },
  {
    "text": "to add a variable color effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=337"
  },
  {
    "text": "I can configure the variable color effect using the dot syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=340"
  },
  {
    "text": "Here, I change the effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=346"
  },
  {
    "text": "to variableColor.iterative.reversing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=348"
  },
  {
    "text": "resulting in a different variable color animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=352"
  },
  {
    "text": "It's a great way to show that my app is connecting to the network. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=356"
  },
  {
    "text": "It's even possible to combine different effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=360"
  },
  {
    "text": "Here, I add a scale.up effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=364"
  },
  {
    "text": "Now the symbol is animating variable color ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=367"
  },
  {
    "text": "while also scaled up.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=370"
  },
  {
    "text": "These APIs provide a simple way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=374"
  },
  {
    "text": "to add indefinite effects to symbol images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=376"
  },
  {
    "text": "Recall that indefinite effects change some aspect of a symbol indefinitely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=380"
  },
  {
    "text": "until the effect is removed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=385"
  },
  {
    "text": "So using the symbolEffect modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=389"
  },
  {
    "text": "I can apply a variable color effect, which continuously plays an animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=391"
  },
  {
    "text": "But I also need a way to control when the effect is active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=397"
  },
  {
    "text": "I wouldn't want this animation to keep playing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=401"
  },
  {
    "text": "after my app successfully connects to the network.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=404"
  },
  {
    "text": "This can be done by adding the boolean isActive parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=410"
  },
  {
    "text": "Here, I apply the effect only when connecting to the internet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=415"
  },
  {
    "text": "Once the app finishes connecting, the symbol animation seamlessly ends.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=420"
  },
  {
    "text": "In AppKit and UIKit, use the removeSymbolEffect method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=427"
  },
  {
    "text": "to end indefinite effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=432"
  },
  {
    "text": "What about discrete effects, which perform one-off animations? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=434"
  },
  {
    "text": "I mentioned Bounce as an example of this earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=439"
  },
  {
    "text": "Your app may trigger Bounce effects in response to certain events.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=443"
  },
  {
    "text": "In SwiftUI, I can use the same symbolEffect modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=449"
  },
  {
    "text": "to add discrete effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=452"
  },
  {
    "text": "However, I must also provide SwiftUI a value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=454"
  },
  {
    "text": "Whenever the value changes, SwiftUI triggers the discrete effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=459"
  },
  {
    "text": "Let's add a button that, when pressed, bounces the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=466"
  },
  {
    "text": "The button's handler simply needs to increment bounceValue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=470"
  },
  {
    "text": "SwiftUI will see the change in bounceValue ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=475"
  },
  {
    "text": "and trigger the bounce. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=478"
  },
  {
    "text": "I can do this in AppKit and UIKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=480"
  },
  {
    "text": "by adding a Bounce effect to the image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=483"
  },
  {
    "text": "Because Bounce only supports discrete behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=486"
  },
  {
    "text": "then adding the effect performs a single bounce. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=489"
  },
  {
    "text": "There's no need to remove the effect afterwards.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=492"
  },
  {
    "text": "Now, let's say I don't want the symbol to bounce just once. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=498"
  },
  {
    "text": "How about bouncing twice? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=502"
  },
  {
    "text": "SwiftUI, AppKit, and UIKit support an options parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=505"
  },
  {
    "text": "where I can specify a preferred repeat count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=510"
  },
  {
    "text": "Now, the symbol bounces twice when the effect is triggered. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=514"
  },
  {
    "text": "Bounce isn't the only effect which can have discrete behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=519"
  },
  {
    "text": "Two of the effects I covered earlier, Pulse and Variable Color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=524"
  },
  {
    "text": "support not only indefinite behavior, but also discrete behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=529"
  },
  {
    "text": "In other words, they can play one-off animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=534"
  },
  {
    "text": "just like Bounce. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=537"
  },
  {
    "text": "That means I can take the earlier Bounce example ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=541"
  },
  {
    "text": "and change it to variableColor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=543"
  },
  {
    "text": "Variable Color switches to use its discrete behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=547"
  },
  {
    "text": "since it's applied in a non-repeating fashion.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=551"
  },
  {
    "text": "Now, pressing the button performs two Variable Color cycles.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=555"
  },
  {
    "text": "Next, let's talk about content transition effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=561"
  },
  {
    "text": "The Replace effect, which animates between two different symbol images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=565"
  },
  {
    "text": "is the main example of this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=569"
  },
  {
    "text": "Here, I have an image that switches between a pause symbol and a play symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=571"
  },
  {
    "text": "SwiftUI has a new contentTransition type called symbolEffect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=579"
  },
  {
    "text": "which can be used with Replace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=583"
  },
  {
    "text": "So if I put the Image in a Button that toggles which symbol is displayed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=587"
  },
  {
    "text": "the change is now animated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=592"
  },
  {
    "text": "In AppKit and UIKit, you can use the new setSymbolImage method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=596"
  },
  {
    "text": "to change the image using a symbol content transition.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=601"
  },
  {
    "text": "Finally, we have Appear and Disappear, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=607"
  },
  {
    "text": "which can show and hide symbols with unique animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=611"
  },
  {
    "text": "These effects are uniquely classified as transition effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=615"
  },
  {
    "text": "But before we get into that, we need to talk about parallel universes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=620"
  },
  {
    "text": "Don't worry, though. It's not as complicated as it seems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=626"
  },
  {
    "text": "In one universe, the image disappears, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=629"
  },
  {
    "text": "but the image view is still in the hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=633"
  },
  {
    "text": "In other words, there's no change to the layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=637"
  },
  {
    "text": "The square and circle remain the same distance to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=640"
  },
  {
    "text": "In the parallel universe, the image view is truly added ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=645"
  },
  {
    "text": "and removed from the hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=649"
  },
  {
    "text": "As a result, the layout of surrounding views may change.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=652"
  },
  {
    "text": "The great news is that Appear and Disappear support both behaviors.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=658"
  },
  {
    "text": "The first behavior is possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=665"
  },
  {
    "text": "because Appear and Disappear are indefinite effects.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=667"
  },
  {
    "text": "You know how to use indefinite effects already. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=672"
  },
  {
    "text": "In SwiftUI, use the .symbolEffect modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=676"
  },
  {
    "text": "and pass in .disappear. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=680"
  },
  {
    "text": "As the value of isMoonHidden updates, the Disappear effect is applied.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=682"
  },
  {
    "text": "In AppKit and UIKit, use addSymbolEffect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=690"
  },
  {
    "text": "and pass in .disappear or .appear.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=693"
  },
  {
    "text": "The takeaway here is that indefinite effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=698"
  },
  {
    "text": "don't change the layout at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=701"
  },
  {
    "text": "They only alter the rendering of the symbol within the image view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=703"
  },
  {
    "text": "So that covers the first behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=710"
  },
  {
    "text": "How do I jump to the parallel universe, where the surrounding layout changes? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=713"
  },
  {
    "text": "This is where the transition behavior comes in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=719"
  },
  {
    "text": "Transition effects can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=722"
  },
  {
    "text": "with SwiftUI's built-in transition modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=725"
  },
  {
    "text": "which animates a view's insertion or removal from the view hierarchy.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=728"
  },
  {
    "text": "Let's convert the previous code to use the transition behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=734"
  },
  {
    "text": "Instead of conditionally applying a Disappear effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=739"
  },
  {
    "text": "I'll instead conditionally add the symbol to the view hierarchy.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=742"
  },
  {
    "text": "Then, I'll add a transition modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=748"
  },
  {
    "text": "SwiftUI has a new transition type called– ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=751"
  },
  {
    "text": "you guessed it–symbolEffect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=755"
  },
  {
    "text": "By passing in .disappear, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=758"
  },
  {
    "text": "the symbol is now added and removed with animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=760"
  },
  {
    "text": "You can also use a unique transition effect called Automatic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=766"
  },
  {
    "text": "This effect will automatically perform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=771"
  },
  {
    "text": "the most appropriate transition animation for this symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=774"
  },
  {
    "text": "If you're not using SwiftUI, then you'll need to manually add ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=779"
  },
  {
    "text": "and remove the image view from the hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=783"
  },
  {
    "text": "UIKit features a completion handler for effects which can help. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=786"
  },
  {
    "text": "Simply add a Disappear effect, and when the effect finishes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=791"
  },
  {
    "text": "remove the image view from the hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=795"
  },
  {
    "text": "So there you have it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=798"
  },
  {
    "text": "That's symbol effects in SwiftUI, AppKit, and UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=800"
  },
  {
    "text": "Now that you know the basics, here are some tips ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=805"
  },
  {
    "text": "to take symbol effects to the next level in your apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=808"
  },
  {
    "text": "First of all, the new UIKit methods on UIImageView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=813"
  },
  {
    "text": "are also available on UIBarButtonItem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=817"
  },
  {
    "text": "This makes it easy to bring your toolbars to life ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=821"
  },
  {
    "text": "using symbol animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=823"
  },
  {
    "text": "Some UIKit controls also have built-in symbol animations on iOS 17.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=827"
  },
  {
    "text": "UISlider, for example, now bounces its images ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=834"
  },
  {
    "text": "as the thumb reaches the ends of the track. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=837"
  },
  {
    "text": "You can control whether these animations play ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=840"
  },
  {
    "text": "with the new isSymbolAnimationEnabled property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=843"
  },
  {
    "text": "on UIControl and UIBarButtonItem.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=846"
  },
  {
    "text": "In SwiftUI, there are also some special considerations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=850"
  },
  {
    "text": "for disabling symbol effects.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=854"
  },
  {
    "text": "Like other modifiers in SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=857"
  },
  {
    "text": "the symbolEffect modifier propagates through the view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=859"
  },
  {
    "text": "This means effects can be applied to multiple images ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=864"
  },
  {
    "text": "by adding the modifier on a parent view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=867"
  },
  {
    "text": "Use the symbolEffectsRemoved modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=871"
  },
  {
    "text": "to prevent a view from inheriting symbol effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=873"
  },
  {
    "text": "Now, some symbol effects, like Appear, Disappear, and Scale, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=877"
  },
  {
    "text": "change the symbol's appearance with animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=882"
  },
  {
    "text": "You may be interested in having a symbol be initially scaled up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=886"
  },
  {
    "text": "or initially disappeared, without animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=890"
  },
  {
    "text": "In SwiftUI, you can do this using a transaction ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=894"
  },
  {
    "text": "with animations disabled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=898"
  },
  {
    "text": "Here, I use it to apply a scale.up effect without animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=901"
  },
  {
    "text": "In AppKit and UIKit, use the animated parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=907"
  },
  {
    "text": "on addSymbolEffect to apply the effect without animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=911"
  },
  {
    "text": "Finally, let's talk about variable value.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=916"
  },
  {
    "text": "iOS 16 and macOS Ventura introduced variable value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=920"
  },
  {
    "text": "as another dimension for symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=925"
  },
  {
    "text": "representing concepts like volume levels and signal strengths.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=927"
  },
  {
    "text": "In iOS 17 and macOS Sonoma, we are making it super easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=933"
  },
  {
    "text": "to crossfade between arbitrary variable values.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=938"
  },
  {
    "text": "In SwiftUI, you don't need to do anything at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=942"
  },
  {
    "text": "Here, I have a Wi-Fi symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=947"
  },
  {
    "text": "whose variable value is based on some state– ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=949"
  },
  {
    "text": "in this case, the current signal strength. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=953"
  },
  {
    "text": "As the signal strength changes, the Wi-Fi symbol automatically updates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=957"
  },
  {
    "text": "while also animating across variable values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=962"
  },
  {
    "text": "In AppKit and UIKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=966"
  },
  {
    "text": "use the automatic symbol content transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=968"
  },
  {
    "text": "It detects if the new symbol image just has a different variable value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=972"
  },
  {
    "text": "and, if so, crossfades to the new value.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=976"
  },
  {
    "text": "Thanks so much for joining me today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=981"
  },
  {
    "text": "There's a lot of ways to animate symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=984"
  },
  {
    "text": "so use the SF Symbols app to discover what's possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=986"
  },
  {
    "text": "Explore the Symbols framework, and try the new symbol effect APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=991"
  },
  {
    "text": "in SwiftUI, AppKit, and UIKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=996"
  },
  {
    "text": "And finally, adopt the animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=999"
  },
  {
    "text": "to make your app's interface more delightful than ever.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=1002"
  },
  {
    "text": "Check out the other symbols sessions, too, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=1007"
  },
  {
    "text": "for Human Interface guidelines on symbol animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=1010"
  },
  {
    "text": "as well as updating custom symbols to support all the effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=1013"
  },
  {
    "text": "Thanks, and happy coding.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10258/?time=1017"
  }
]