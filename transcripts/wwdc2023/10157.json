[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1"
  },
  {
    "text": "Person: Hello, and welcome to ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=10"
  },
  {
    "text": "Wind your way through advanced animations in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=11"
  },
  {
    "text": "I’m Tim, a member of the SwiftUI team.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=14"
  },
  {
    "text": "SwiftUI comes with a powerful set of animation tools that make your app shine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=18"
  },
  {
    "text": "with animations that are interruptible, physics-based for believable motion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=22"
  },
  {
    "text": "and deeply integrated throughout the framework.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=26"
  },
  {
    "text": "Today we’re going to talk about some exciting new tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=29"
  },
  {
    "text": "that let you take animation in your app to the next level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=32"
  },
  {
    "text": "Before we begin, let’s do a quick review ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=35"
  },
  {
    "text": "of the animation tools that you already know in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=38"
  },
  {
    "text": "You might have seen this app that allows you to vote ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=42"
  },
  {
    "text": "for your favorite kind of pet in other sessions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=44"
  },
  {
    "text": "To simplify this demo, I went ahead and removed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=47"
  },
  {
    "text": "all of the other options, because cats are clearly the best choice.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=49"
  },
  {
    "text": "Adding animation to your app is as easy as using \"withAnimation\" or adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=53"
  },
  {
    "text": "an \"animation\" modifier, which gives you great behavior out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=58"
  },
  {
    "text": "After the state of your application changes, SwiftUI applies animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=62"
  },
  {
    "text": "that interpolate from the previous state to the new state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=66"
  },
  {
    "text": "But with animation, as with life, sometimes the most rewarding experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=70"
  },
  {
    "text": "are found when you aren’t so focused on where you came from or where you’re going.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=75"
  },
  {
    "text": "Sometimes you have to get off of the beaten path ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=80"
  },
  {
    "text": "and focus on the journey itself to make something special. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=82"
  },
  {
    "text": "And some animations don’t simply animate from a previous state into a new state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=85"
  },
  {
    "text": "Today, I’ll talk about some powerful new tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=89"
  },
  {
    "text": "for building complex, multistep animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=92"
  },
  {
    "text": "Rather than animating between two states, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=96"
  },
  {
    "text": "these animations can define multiple steps that happen in sequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=98"
  },
  {
    "text": "And they are especially great in two situations: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=102"
  },
  {
    "text": "repeating animations, that loop continuously while a view is visible... ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=106"
  },
  {
    "text": "and event-driven animations, such as a view that pulses when an event occurs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=111"
  },
  {
    "text": "In this talk, I’m going to introduce a new family of APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=116"
  },
  {
    "text": "that makes animations like these even easier to build.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=119"
  },
  {
    "text": "I’ll start by introducing you to animation phases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=122"
  },
  {
    "text": "which let SwiftUI automatically advance through a set of pre-planned states ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=125"
  },
  {
    "text": "that make up your animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=129"
  },
  {
    "text": "Next, I’ll demonstrate how to take animations even further with keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=131"
  },
  {
    "text": "And finally, I’ll show some advanced tips and tricks ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=136"
  },
  {
    "text": "to get the most out of this API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=138"
  },
  {
    "text": "I think we’re ready to go. Let’s jump right in.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=141"
  },
  {
    "text": "When I’m not writing Swift, I like to get out trail running.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=145"
  },
  {
    "text": "Trail races can be very long. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=149"
  },
  {
    "text": "Ultramarathons can take a whole day, or even multiple days to finish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=151"
  },
  {
    "text": "so I’ve been building an app to plan for upcoming events, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=154"
  },
  {
    "text": "and to help me remember important details during a run.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=157"
  },
  {
    "text": "Nutrition is super important when you’re on the trail.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=161"
  },
  {
    "text": "Unfortunately, it can be easy to forget to eat late in a race as exhaustion sets in.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=164"
  },
  {
    "text": "I’ve added a feature to my app that reminds me to eat at the right times.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=169"
  },
  {
    "text": "Here, the reminder at the bottom of the screen is letting me know ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=173"
  },
  {
    "text": "that I’m overdue for a meal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=176"
  },
  {
    "text": "But there’s a problem.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=178"
  },
  {
    "text": "Later in a race, I can get so tired ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=180"
  },
  {
    "text": "that I could miss a subtle indicator like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=182"
  },
  {
    "text": "I really don’t want to accidentally skip a meal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=185"
  },
  {
    "text": "so I’ll add some motion to make this reminder stand out.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=187"
  },
  {
    "text": "Let’s focus on this one view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=191"
  },
  {
    "text": "We want to give it an animated highlight effect to make it extra visible.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=193"
  },
  {
    "text": "To make this view animate, we will apply the \".phaseAnimator\" modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=198"
  },
  {
    "text": "When you use the phase animator modifier, you provide a sequence of states ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=203"
  },
  {
    "text": "that define the individual steps in a multipart animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=207"
  },
  {
    "text": "SwiftUI then animates between these states automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=211"
  },
  {
    "text": "In this case, we’ll just be animating between two states: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=215"
  },
  {
    "text": "highlighted, and not highlighted, so we can simply use boolean values.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=217"
  },
  {
    "text": "Next, we’ll apply some modifiers to change the appearance of the view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=222"
  },
  {
    "text": "depending on the current phase.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=225"
  },
  {
    "text": "We’ll start with an opacity modifier: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=227"
  },
  {
    "text": "we’ll make the view fully opaque when highlighted, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=229"
  },
  {
    "text": "and 50% transparent otherwise.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=231"
  },
  {
    "text": "And right away, the view starts animating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=234"
  },
  {
    "text": "Let’s talk about what SwiftUI is doing on your behalf.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=237"
  },
  {
    "text": "In our view, we provided two phases to the phase animator modifier: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=241"
  },
  {
    "text": "false, and true.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=245"
  },
  {
    "text": "When the view first appears, the first phase is active, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=248"
  },
  {
    "text": "causing the view to be 50% transparent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=251"
  },
  {
    "text": "SwiftUI then immediately begins an animated transition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=254"
  },
  {
    "text": "to the next phase, where the view is fully opaque.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=257"
  },
  {
    "text": "Then when that animation is finished, SwiftUI advances again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=261"
  },
  {
    "text": "We only have two phases, so we loop around to the beginning.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=265"
  },
  {
    "text": "This causes our animation to cycle between the two states. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=269"
  },
  {
    "text": "Of course, you can also define animations that include more than two phases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=273"
  },
  {
    "text": "and any number of additional view modifiers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=277"
  },
  {
    "text": "which I'll demonstrate later on.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=279"
  },
  {
    "text": "Now while the view is animating, the effect is really subtle.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=283"
  },
  {
    "text": "Instead of changing the opacity, let’s try changing the foreground style.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=286"
  },
  {
    "text": "We’ll use red when highlighted, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=291"
  },
  {
    "text": "and otherwise fall back to the primary foreground style.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=292"
  },
  {
    "text": "And that’s much more visible. The animations are a bit abrupt, though.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=296"
  },
  {
    "text": "By default, SwiftUI uses a spring animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=301"
  },
  {
    "text": "And while springs are great for handling dynamic state changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=304"
  },
  {
    "text": "in this case we want a smoother, more consistent animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=307"
  },
  {
    "text": "We can change the animation by adding a trailing \"animation\" closure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=311"
  },
  {
    "text": "The phase that is being animated to is passed in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=315"
  },
  {
    "text": "in case we want to use a different animation for each phase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=318"
  },
  {
    "text": "But in this case, I always want to use the same ease in out animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=321"
  },
  {
    "text": "with a custom duration, to slow things down.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=325"
  },
  {
    "text": "Now, you wouldn’t typically use an animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=328"
  },
  {
    "text": "with a duration of a full second for an interactive state change ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=330"
  },
  {
    "text": "because you wouldn’t want to make people wait for an animation to finish.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=334"
  },
  {
    "text": "But in this case, we are building an ambient effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=337"
  },
  {
    "text": "so it’s ok for things to move a bit slower, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=340"
  },
  {
    "text": "just like my pace if I miss that meal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=342"
  },
  {
    "text": "Now that we’ve solved the urgent problem of mid-race nutrition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=345"
  },
  {
    "text": "let’s look at one more way to use animation phases: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=348"
  },
  {
    "text": "animations that are triggered by events.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=351"
  },
  {
    "text": "I’ve been working on my app for a while, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=354"
  },
  {
    "text": "and I’ve added the ability to see which races my friends have run.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=356"
  },
  {
    "text": "The emoji show reactions left by others.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=359"
  },
  {
    "text": "Every runner sometimes asks themselves: why do I do this? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=361"
  },
  {
    "text": "Why did I sign up to run so many miles? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=365"
  },
  {
    "text": "And the least that our app can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=368"
  },
  {
    "text": "is to feed the need for external validation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=370"
  },
  {
    "text": "by adding some excitement when someone else likes a race.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=372"
  },
  {
    "text": "We’ll add an animation that plays every time someone adds a reaction.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=375"
  },
  {
    "text": "The first thing that we will do is define the phases of our animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=380"
  },
  {
    "text": "Unlike in the previous example that simply alternated ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=384"
  },
  {
    "text": "between two states, we want a more complex animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=386"
  },
  {
    "text": "An enum is a great way to define a list of steps for the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=390"
  },
  {
    "text": "We’ve added three cases: a case for the initial appearance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=395"
  },
  {
    "text": "then cases to move the view up, and scale up the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=398"
  },
  {
    "text": "To simplify our view body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=402"
  },
  {
    "text": "we will add computed properties to this enum ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=404"
  },
  {
    "text": "that define the different effects that we will apply. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=406"
  },
  {
    "text": "I want the view to jump up during the animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=409"
  },
  {
    "text": "so I’ve added a computed vertical offset property.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=412"
  },
  {
    "text": "I switch over the enum to return the right offset for each case.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=416"
  },
  {
    "text": "Likewise, I’ve added two additional computed properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=420"
  },
  {
    "text": "to determine the view’s scale and foreground style.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=424"
  },
  {
    "text": "I won’t show the implementations here, but they also use a switch statement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=427"
  },
  {
    "text": "just like the vertical offset property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=430"
  },
  {
    "text": "Now, let’s get back to our view and add the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=433"
  },
  {
    "text": "We add the phaseAnimator modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=437"
  },
  {
    "text": "but this time, we give it a \"trigger\" value.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=440"
  },
  {
    "text": "When we give the phase animator modifier a trigger value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=442"
  },
  {
    "text": "it observes the value that you specify for changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=445"
  },
  {
    "text": "And when a change occurs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=448"
  },
  {
    "text": "it begins animating through the phases that you specify.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=449"
  },
  {
    "text": "Using the computed properties that we defined on the phase type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=453"
  },
  {
    "text": "we apply modifiers to the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=455"
  },
  {
    "text": "And this animation technically does the right thing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=458"
  },
  {
    "text": "but it doesn’t feel great.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=460"
  },
  {
    "text": "It’s a bit sluggish.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=461"
  },
  {
    "text": "We’ll customize the animation for each transition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=463"
  },
  {
    "text": "to get the effect that we want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=466"
  },
  {
    "text": "including a couple of different spring animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=467"
  },
  {
    "text": "And this looks much better! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=470"
  },
  {
    "text": "But what if we want to take this animation even further? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=472"
  },
  {
    "text": "When someone has finished 50 or 100 miles on the trail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=476"
  },
  {
    "text": "we want to give them an animation that leaves no doubt in their mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=479"
  },
  {
    "text": "that all of those miles were worth it when they receive some well-deserved kudos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=482"
  },
  {
    "text": "When you need even more control, there’s another powerful tool: keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=488"
  },
  {
    "text": "Next, I’ll show you how to use keyframes to define complex, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=493"
  },
  {
    "text": "coordinated animations with complete control over timing and movement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=496"
  },
  {
    "text": "First, let’s talk about how keyframes are different ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=501"
  },
  {
    "text": "from the phases that we have used so far.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=503"
  },
  {
    "text": "Phases define discrete states that are provided to your view one at a time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=506"
  },
  {
    "text": "And SwiftUI animates between those states, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=510"
  },
  {
    "text": "using the same animation types that you already know, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=513"
  },
  {
    "text": "and this works really well for animations that can be modeled as discrete states.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=516"
  },
  {
    "text": "When a state transition occurs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=521"
  },
  {
    "text": "all of the properties are animated at the same time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=523"
  },
  {
    "text": "And then, when that animation is finished, SwiftUI animates to the next state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=526"
  },
  {
    "text": "And this continues across all of the phases of the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=530"
  },
  {
    "text": "But what if we want to animate each property independently? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=534"
  },
  {
    "text": "That’s where keyframes come in.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=537"
  },
  {
    "text": "Keyframes let you define values at specific times within an animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=540"
  },
  {
    "text": "To demonstrate, I’ll animate this view, starting with a rotation effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=544"
  },
  {
    "text": "The dots here indicate keyframes: angles to use at each point during the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=548"
  },
  {
    "text": "When the animation plays back, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=554"
  },
  {
    "text": "SwiftUI interpolates values in between these keyframes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=556"
  },
  {
    "text": "which we can then use to apply modifiers to the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=559"
  },
  {
    "text": "And keyframes allow you to independently animate multiple effects at the same time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=563"
  },
  {
    "text": "by defining separate tracks, each with their own unique timing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=567"
  },
  {
    "text": "This is really powerful, because you can use keyframes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=571"
  },
  {
    "text": "to drive any modifier in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=574"
  },
  {
    "text": "In this example, we are using keyframes to drive several other tracks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=576"
  },
  {
    "text": "including vertical stretch, scale, and translation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=579"
  },
  {
    "text": "Let’s get back to our view and see what this looks like in code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=583"
  },
  {
    "text": "I already have an idea of the animation that I want to build, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=587"
  },
  {
    "text": "so my first step is to define the properties that will drive the animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=591"
  },
  {
    "text": "To do this, I’ll create a new struct ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=595"
  },
  {
    "text": "containing all of the different properties that will be independently animated.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=597"
  },
  {
    "text": "Keyframes can animate any value conforming to the \"Animatable\" protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=602"
  },
  {
    "text": "Notice that several properties use \"Double\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=606"
  },
  {
    "text": "which now conforms to \"Animatable.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=608"
  },
  {
    "text": "Unlike phases, in which you model separate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=611"
  },
  {
    "text": "discrete states, keyframes generate interpolated values ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=613"
  },
  {
    "text": "of the type that you specify.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=616"
  },
  {
    "text": "While an animation is in progress, SwiftUI will provide you with a value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=619"
  },
  {
    "text": "of this type on every frame so that you can update the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=622"
  },
  {
    "text": "Next, we add the keyframeAnimator modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=627"
  },
  {
    "text": "This modifier is similar to the phase animator that we used earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=630"
  },
  {
    "text": "but accepts keyframes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=634"
  },
  {
    "text": "Notice that we provide an instance of our struct to use as the initial value.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=637"
  },
  {
    "text": "The keyframes that we define will apply animations onto this value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=642"
  },
  {
    "text": "Next, we’ll apply modifiers to our view for each of the properties on the struct.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=647"
  },
  {
    "text": "And finally, we’ll start defining keyframes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=652"
  },
  {
    "text": "As I mentioned, keyframes let you build sophisticated animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=655"
  },
  {
    "text": "with different keyframes for different properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=658"
  },
  {
    "text": "To make this possible, keyframes are organized into tracks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=661"
  },
  {
    "text": "Each track controls a different property of the type that you are animating, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=665"
  },
  {
    "text": "which is specified by the key path that you provide when creating the track. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=668"
  },
  {
    "text": "Here, we are adding keyframes for the scale property.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=672"
  },
  {
    "text": "We first add a linear keyframe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=677"
  },
  {
    "text": "repeating the initial scale value and holding it for 0.36 seconds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=678"
  },
  {
    "text": "And if you’re wondering how I settled on 0.36, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=683"
  },
  {
    "text": "I found that duration by trying out different values ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=686"
  },
  {
    "text": "to change the feel of the animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=688"
  },
  {
    "text": "and that’s an important point about keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=690"
  },
  {
    "text": "Making an animation that suits your app can take some experimentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=693"
  },
  {
    "text": "Previews in Xcode can be a great way to fine-tune your animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=697"
  },
  {
    "text": "Next, we add a \"SpringKeyframe.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=701"
  },
  {
    "text": "This uses a spring function to pull the value toward the target.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=704"
  },
  {
    "text": "And we’ve specified a duration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=708"
  },
  {
    "text": "For a spring keyframe with a set duration, this means that the spring function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=710"
  },
  {
    "text": "will only animate the value for that duration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=713"
  },
  {
    "text": "After that, interpolation will begin to the next keyframe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=716"
  },
  {
    "text": "Finally, I’ll add another spring keyframe that animates the scale back to 1.0. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=720"
  },
  {
    "text": "The different kinds of keyframes control how values are interpolated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=726"
  },
  {
    "text": "Alrighty, we’ve seen LinearKeyframe and SpringKeyframe.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=730"
  },
  {
    "text": "There are actually four different types of keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=734"
  },
  {
    "text": "I’ll explain how they are different: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=737"
  },
  {
    "text": "LinearKeyframe interpolates linearly in vector space from the previous keyframe.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=740"
  },
  {
    "text": "SpringKeyframe, as its name suggests, uses a spring function to interpolate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=745"
  },
  {
    "text": "to the target value from the previous keyframe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=750"
  },
  {
    "text": "CubicKeyframe uses a cubic Bézier curve to interpolate between keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=753"
  },
  {
    "text": "If you combine multiple cubic keyframes in sequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=759"
  },
  {
    "text": "the resulting curve is equivalent to a Catmull-Rom spline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=761"
  },
  {
    "text": "And finally, MoveKeyframe immediately jumps to a value without interpolation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=766"
  },
  {
    "text": "Each kind of keyframe supports customization to give you full control, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=772"
  },
  {
    "text": "and you can mix and match different kinds of keyframes within an animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=776"
  },
  {
    "text": "SwiftUI maintains velocity between keyframes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=779"
  },
  {
    "text": "to make sure your animation remains continuous.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=782"
  },
  {
    "text": "Coming back to our view, we’re ready to add the next track.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=786"
  },
  {
    "text": "Here, we’ve used linear and spring keyframes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=792"
  },
  {
    "text": "to animate the vertical translation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=794"
  },
  {
    "text": "Right before the view jumps up, it pulls back in anticipation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=797"
  },
  {
    "text": "We have modeled that with a spring keyframe ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=801"
  },
  {
    "text": "that pulls the view down briefly before it moves up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=802"
  },
  {
    "text": "This is looking good, but we still have two more properties to animate: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=806"
  },
  {
    "text": "vertical stretch, and rotation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=809"
  },
  {
    "text": "We’ll start with vertical stretch, and for this, we will use cubic keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=812"
  },
  {
    "text": "Again, this can take some trial and error to get right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=817"
  },
  {
    "text": "but don’t hesitate to experiment with different ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=820"
  },
  {
    "text": "to model animations using keyframes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=822"
  },
  {
    "text": "The squash and stretch really gives this animation a lot more energy.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=825"
  },
  {
    "text": "Finally, we’ll animate the rotation as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=830"
  },
  {
    "text": "And this is looking great.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=833"
  },
  {
    "text": "And those curves that we saw earlier? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=835"
  },
  {
    "text": "Those are a visualization of the animation that we just built. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=838"
  },
  {
    "text": "You can add additional tracks to apply any SwiftUI modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=841"
  },
  {
    "text": "I’ve had a lot of fun exploring different combinations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=844"
  },
  {
    "text": "let’s take a moment to review the model of keyframes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=847"
  },
  {
    "text": "Keyframes are predefined animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=851"
  },
  {
    "text": "That means that they are not a replacement for normal SwiftUI animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=853"
  },
  {
    "text": "in situations where the UI should be fluid and interactive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=856"
  },
  {
    "text": "Instead, think of keyframes like video clips that can be played. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=859"
  },
  {
    "text": "They give you a ton of control, but there’s a tradeoff.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=864"
  },
  {
    "text": "Because you specify exactly how an animation should progress, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=867"
  },
  {
    "text": "keyframe animations can’t gracefully retarget the way that springs can, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=870"
  },
  {
    "text": "so it’s generally best to avoid changing keyframes mid-animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=874"
  },
  {
    "text": "Keyframes animate a value of the type that you define, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=878"
  },
  {
    "text": "which you then use to apply modifiers to the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=881"
  },
  {
    "text": "You can use a single keyframe track to drive a single modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=884"
  },
  {
    "text": "or a combination of different modifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=887"
  },
  {
    "text": "It’s up to you.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=889"
  },
  {
    "text": "And because the animation happens in terms of the value that you define, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=891"
  },
  {
    "text": "updates happen on every frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=895"
  },
  {
    "text": "so you should avoid performing any expensive operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=897"
  },
  {
    "text": "while applying a keyframe animation to the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=899"
  },
  {
    "text": "Finally, I’ll demonstrate how how you can do even more with keyframes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=903"
  },
  {
    "text": "My app includes a race map, showing the route that each leg takes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=907"
  },
  {
    "text": "I want to add an animation that automatically zooms in ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=912"
  },
  {
    "text": "and follows the course.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=914"
  },
  {
    "text": "Thankfully, MapKit now allows me to use keyframes to move the camera. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=916"
  },
  {
    "text": "Here, I’m using a \"Map\" view to show the course.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=922"
  },
  {
    "text": "My view already has a route, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=925"
  },
  {
    "text": "which is a model that contains all of the coordinates along one leg of the race.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=926"
  },
  {
    "text": "To build our tour, we’ll add a state property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=931"
  },
  {
    "text": "and a button to change it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=933"
  },
  {
    "text": "Finally, we use the new \"mapCameraKeyframeAnimator\" modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=936"
  },
  {
    "text": "We give it the trigger value, then add keyframes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=940"
  },
  {
    "text": "just like we used for the heart icon in the previous example.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=943"
  },
  {
    "text": "Every time the trigger value changes, maps will use these keyframes to animate.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=947"
  },
  {
    "text": "The final value of the keyframes determines the camera value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=952"
  },
  {
    "text": "that is used at the end of the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=954"
  },
  {
    "text": "Finally, we hit the button, and the tour starts.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=957"
  },
  {
    "text": "If the user performs a gesture while animating, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=962"
  },
  {
    "text": "the animation will be removed and the user will have full control over the camera.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=964"
  },
  {
    "text": "By independently animating the center coordinate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=969"
  },
  {
    "text": "heading, and distance, we’re able to smoothly animate along this course ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=971"
  },
  {
    "text": "then zoom back out for a bird’s-eye view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=975"
  },
  {
    "text": "Finally, I’d like to demonstrate how keyframes can be manually evaluated ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=979"
  },
  {
    "text": "to drive any kind of effect that you can think of.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=983"
  },
  {
    "text": "We’ve seen the \"keyframeAnimator\" modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=986"
  },
  {
    "text": "Outside of the modifier, you can use the \"KeyframeTimeline\" type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=989"
  },
  {
    "text": "to capture a set of keyframes and tracks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=993"
  },
  {
    "text": "You initialize this type with an initial value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=995"
  },
  {
    "text": "and the keyframe tracks that define your animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=998"
  },
  {
    "text": "just like with the view modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1000"
  },
  {
    "text": "KeyframeTimeline provides API that gives you the duration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1003"
  },
  {
    "text": "which is equal to the duration of the longest track.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1007"
  },
  {
    "text": "And you can calculate values for any time within the range of the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1010"
  },
  {
    "text": "This makes it easy to visualize keyframes with Swift Charts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1015"
  },
  {
    "text": "which I used for the curve visualizations that I showed earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1018"
  },
  {
    "text": "This also means that you can use keyframe-defined curves however you want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1022"
  },
  {
    "text": "or to creatively combine keyframes with other APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1026"
  },
  {
    "text": "for example, with a geometry proxy to scrub keyframe-driven effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1029"
  },
  {
    "text": "using scroll position, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1033"
  },
  {
    "text": "or with a \"TimelineView\" to update based on time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1035"
  },
  {
    "text": "And if you’re not sure when you would use this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1039"
  },
  {
    "text": "that’s ok, it’s an advanced tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1040"
  },
  {
    "text": "and most developers will want to stick to the view modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1043"
  },
  {
    "text": "But it’s here as a building block, and I’m excited to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1046"
  },
  {
    "text": "what creative ways you find to integrate it into your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1048"
  },
  {
    "text": "That completes our journey.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1053"
  },
  {
    "text": "I hope you’re excited to use this new family of API.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1055"
  },
  {
    "text": "Remember: use phases for chained animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1058"
  },
  {
    "text": "They use all of the existing animation types that you already know, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1062"
  },
  {
    "text": "so you can get up and running quickly.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1065"
  },
  {
    "text": "Use keyframes for more complex animations where you need complete control.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1068"
  },
  {
    "text": "And finally: have fun exploring.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1073"
  },
  {
    "text": "The world of animation is exciting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1076"
  },
  {
    "text": "and I hope these new tools lead you, and your app, somewhere new.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1078"
  },
  {
    "text": "Thanks! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1082"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10157/?time=1084"
  }
]