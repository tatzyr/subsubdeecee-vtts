[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=0"
  },
  {
    "text": "Welcome to Meet StoreKit for SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=10"
  },
  {
    "text": "I'm Greg, an engineer on the StoreKit team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=12"
  },
  {
    "text": "Let's talk about merchandising in-app purchases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=15"
  },
  {
    "text": "Merchandising in-app purchase ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=19"
  },
  {
    "text": "is all about presenting your product offerings ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=20"
  },
  {
    "text": "and providing a way for customers to complete the purchase.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=23"
  },
  {
    "text": "Merchandising starts with getting data about the product you're selling ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=27"
  },
  {
    "text": "and getting the status of your customer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=31"
  },
  {
    "text": "For example, does the customer already own my non-consumable product? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=34"
  },
  {
    "text": "Are they subscribed to my subscription? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=38"
  },
  {
    "text": "You combine this data to build an interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=41"
  },
  {
    "text": "to market the product to customers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=43"
  },
  {
    "text": "and provide interactions to purchase the product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=45"
  },
  {
    "text": "This little red rectangle ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=48"
  },
  {
    "text": "underrepresents all the hard work that goes into building your interface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=50"
  },
  {
    "text": "There are actually many aspects to building your interface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=54"
  },
  {
    "text": "requiring skills from a variety of disciplines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=57"
  },
  {
    "text": "Then, your customer chooses to purchase your product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=60"
  },
  {
    "text": "Your app needs to respond by using the purchase API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=63"
  },
  {
    "text": "and then updating its interface as a result of the purchase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=67"
  },
  {
    "text": "If you've ever added in-app purchase to an app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=70"
  },
  {
    "text": "you know getting merchandising right is critical. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=73"
  },
  {
    "text": "Wouldn't it be nice if we could abstract all these steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=76"
  },
  {
    "text": "into a simple, yet powerful, view? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=79"
  },
  {
    "text": "This view could handle all common functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=82"
  },
  {
    "text": "and take parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=84"
  },
  {
    "text": "which allow you to configure the bits that make your app, your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=86"
  },
  {
    "text": "Well, I'm excited to introduce a powerful new set of APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=90"
  },
  {
    "text": "from StoreKit for building merchandising UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=93"
  },
  {
    "text": "In Xcode 15, StoreKit now provides a collection of SwiftUI views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=97"
  },
  {
    "text": "which help you build declarative in-app purchase UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=101"
  },
  {
    "text": "You just declare what you want the merchandising experience to be, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=104"
  },
  {
    "text": "and the system puts your declarations into action behind the scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=108"
  },
  {
    "text": "The StoreView, ProductView, and SubscriptionStoreView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=112"
  },
  {
    "text": "are new views to get you up and running merchandising faster than ever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=116"
  },
  {
    "text": "These views abstract over the data flow from the App Store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=121"
  },
  {
    "text": "and display system-provided UI to represent your in-app purchases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=124"
  },
  {
    "text": "You can even use SwiftUI APIs you're already familiar with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=128"
  },
  {
    "text": "to customize how these views integrate with your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=132"
  },
  {
    "text": "Just like SwiftUI, these new views are supported on all platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=136"
  },
  {
    "text": "so merchandising in-app purchase will be easier than ever ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=139"
  },
  {
    "text": "on iPhone, iPad, Mac, Apple Watch, and Apple TV.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=143"
  },
  {
    "text": "A flock of feathered friends approached me ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=149"
  },
  {
    "text": "and asked if I can help them add in-app purchases ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=151"
  },
  {
    "text": "to their new game called Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=153"
  },
  {
    "text": "With these new views from StoreKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=156"
  },
  {
    "text": "of course I said, \"No problem at all.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=158"
  },
  {
    "text": "Join me as we deliver ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=161"
  },
  {
    "text": "an excellent in-app purchase experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=162"
  },
  {
    "text": "in Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=164"
  },
  {
    "text": "Feel free to download the sample project ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=165"
  },
  {
    "text": "to work through this with me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=167"
  },
  {
    "text": "We'll use Xcode Previews to rapidly iterate on our SwiftUI views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=169"
  },
  {
    "text": "Because we have so much to cover, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=174"
  },
  {
    "text": "I've already set up a StoreKit configuration file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=175"
  },
  {
    "text": "This contains metadata about our in-app purchases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=179"
  },
  {
    "text": "which is necessary to use Xcode Previews with StoreKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=181"
  },
  {
    "text": "We have some great sessions to help you get started in your own app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=185"
  },
  {
    "text": "such as, \"What's new in StoreKit Testing\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=188"
  },
  {
    "text": "and \"Introducing StoreKit Testing in Xcode.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=191"
  },
  {
    "text": "Let's get right into Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=195"
  },
  {
    "text": "In Backyard Birds, we want to sell premium bird food ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=197"
  },
  {
    "text": "like this nutrition pellet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=199"
  },
  {
    "text": "After purchasing the food, we can leave it in our backyard ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=201"
  },
  {
    "text": "to attract more hungry bird visitors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=204"
  },
  {
    "text": "Let's jump into the code to see how we can leverage StoreKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=206"
  },
  {
    "text": "to merchandise these products.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=209"
  },
  {
    "text": "To get started, we'll create a view called BirdFoodShop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=213"
  },
  {
    "text": "to merchandise our bird food. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=216"
  },
  {
    "text": "I already created a file to implement this view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=219"
  },
  {
    "text": "To use StoreKit to build our view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=222"
  },
  {
    "text": "we need to import both StoreKit and SwiftUI at the top of the file.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=224"
  },
  {
    "text": "Next, I'll declare a query here to get our bird food data model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=230"
  },
  {
    "text": "which will help us build out our store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=234"
  },
  {
    "text": "I'm adding a StoreView to the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=239"
  },
  {
    "text": "because it's the quickest way to get the merchandising view up and running. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=241"
  },
  {
    "text": "We need to provide it a collection of product identifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=245"
  },
  {
    "text": "from our StoreKit configuration file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=247"
  },
  {
    "text": "which we can get from the birdFood model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=250"
  },
  {
    "text": "After this declaration, now we have a functioning merchandising view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=258"
  },
  {
    "text": "StoreKit loads all the product identifiers from the App Store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=262"
  },
  {
    "text": "and presents them in UI for us to view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=265"
  },
  {
    "text": "The display names, descriptions, and prices ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=268"
  },
  {
    "text": "all come directly from the App Store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=271"
  },
  {
    "text": "which uses what you've set up in App Store Connect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=273"
  },
  {
    "text": "or your StoreKit configuration file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=275"
  },
  {
    "text": "StoreKit even handles more subtle, but important, considerations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=277"
  },
  {
    "text": "like caching the data until it expires or the system is under memory pressure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=281"
  },
  {
    "text": "and checking whether in-app purchase is disabled in Screen Time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=285"
  },
  {
    "text": "Earlier, the bird designers sent decorative icons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=289"
  },
  {
    "text": "for each bird food product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=293"
  },
  {
    "text": "We can add these icons to the Store View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=294"
  },
  {
    "text": "just by adding a trailing view builder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=296"
  },
  {
    "text": "and passing in a SwiftUI view representing our icons.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=298"
  },
  {
    "text": "The view builder takes a Product value as a parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=304"
  },
  {
    "text": "which we can use to determine an icon to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=307"
  },
  {
    "text": "I created a helper view that takes a product ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=310"
  },
  {
    "text": "and looks up the right icon from our asset catalog.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=313"
  },
  {
    "text": "Once I place this in here, you can see the preview updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=320"
  },
  {
    "text": "to show the icons for each of our products. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=323"
  },
  {
    "text": "The Store View helps us get up and running with ease ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=326"
  },
  {
    "text": "by turning our product identifiers and icons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=329"
  },
  {
    "text": "into a functional and well designed store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=331"
  },
  {
    "text": "A powerful feature of the Store View is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=335"
  },
  {
    "text": "our products automatically adjust to different platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=337"
  },
  {
    "text": "so we already have a shop that looks great on iPad, Mac, and Apple Watch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=340"
  },
  {
    "text": "Let's change our target in Xcode to Apple Watch to preview our shop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=343"
  },
  {
    "text": "Looks great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=357"
  },
  {
    "text": "I think we're ready to sell some bird food on Apple Watch as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=358"
  },
  {
    "text": "It's common to want to organize your products ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=363"
  },
  {
    "text": "in a way that's unique to your offering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=365"
  },
  {
    "text": "Our team of bird designers have been hard at work ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=367"
  },
  {
    "text": "creating a composition to showcase the bird food. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=370"
  },
  {
    "text": "This composition displays the best value prominently ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=373"
  },
  {
    "text": "and organizes the other products into shelves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=377"
  },
  {
    "text": "This is different from the list style layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=380"
  },
  {
    "text": "we can achieve with StoreView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=382"
  },
  {
    "text": "but StoreKit has us covered here as well.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=384"
  },
  {
    "text": "For more detailed layouts, we can utilize the new ProductView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=388"
  },
  {
    "text": "In fact, the StoreView we were just looking at ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=391"
  },
  {
    "text": "uses the same ProductView to create its rows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=394"
  },
  {
    "text": "Let's start by declaring a container for our new store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=398"
  },
  {
    "text": "I want to showcase this box of nutrition pellets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=406"
  },
  {
    "text": "prominently above the other products, because it's our best value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=408"
  },
  {
    "text": "To do this, I'll declare a ProductView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=413"
  },
  {
    "text": "by providing the ID for the nutrition pellet box.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=415"
  },
  {
    "text": "Just like with the StoreView, we can add a decorative icon ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=424"
  },
  {
    "text": "by adding a trailing closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=427"
  },
  {
    "text": "I'll reuse our helper view from before.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=429"
  },
  {
    "text": "Next, let's add a section below for the other food items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=436"
  },
  {
    "text": "I'll start by placing a background behind the best value...",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=440"
  },
  {
    "text": "Then a header along with another helper view I made ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=446"
  },
  {
    "text": "to lay out our bird food in shelves.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=449"
  },
  {
    "text": "Inside this shelf helper view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=457"
  },
  {
    "text": "we can declare a ProductView for each bird food product, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=459"
  },
  {
    "text": "along with our decorative icon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=462"
  },
  {
    "text": "There's one last thing we need to tie this whole shop together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=470"
  },
  {
    "text": "We really want to display this box of nutrition pellets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=472"
  },
  {
    "text": "prominently to customers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=475"
  },
  {
    "text": "but the bird designers think what we have now could look better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=477"
  },
  {
    "text": "To appease the birds, we can use the new productViewStyle API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=480"
  },
  {
    "text": "to set the style for our hero product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=484"
  },
  {
    "text": "I'll choose the large style to really make this stand out.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=486"
  },
  {
    "text": "In just a few minutes, we built a specialized shop just for our bird food ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=496"
  },
  {
    "text": "using the new ProductView in StoreKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=501"
  },
  {
    "text": "The large ProductView style helps us display our best value prominently ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=504"
  },
  {
    "text": "by just adding one view modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=508"
  },
  {
    "text": "There are three standard styles to choose from to fit your needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=511"
  },
  {
    "text": "Compact helps display more products in a smaller space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=515"
  },
  {
    "text": "our bird food shelves automatically use the Regular style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=519"
  },
  {
    "text": "and of course, the Large style is great for prominent presentations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=524"
  },
  {
    "text": "Since the StoreView is composed of ProductView instances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=529"
  },
  {
    "text": "you can use the same productViewStyle modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=532"
  },
  {
    "text": "to change the style of the StoreView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=535"
  },
  {
    "text": "You can even create custom styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=538"
  },
  {
    "text": "and use them with ProductView and StoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=541"
  },
  {
    "text": "Stick around, and I'll show you how later in the session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=543"
  },
  {
    "text": "We've built a great way to offer consumable bird food in-app purchases ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=547"
  },
  {
    "text": "using ProductView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=551"
  },
  {
    "text": "The business birds think we haven't gone far enough, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=553"
  },
  {
    "text": "and they've tasked me with offering a subscription ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=555"
  },
  {
    "text": "called Backyard Birds Pass for the most avid birdwatchers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=558"
  },
  {
    "text": "While we can build subscription UI using ProductView or StoreView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=562"
  },
  {
    "text": "the new SubscriptionStoreView is built specifically for subscriptions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=566"
  },
  {
    "text": "Let's return to Xcode and build this together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=571"
  },
  {
    "text": "To get started, in our StoreKit configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=574"
  },
  {
    "text": "I've created this \"Backyard Birds Pass\" subscription group ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=577"
  },
  {
    "text": "which offers three levels of service.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=580"
  },
  {
    "text": "Take note of this group ID. We'll need this in a moment.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=584"
  },
  {
    "text": "Earlier, I made a new file for our pass shop, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=588"
  },
  {
    "text": "so let's dive right in to the SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=592"
  },
  {
    "text": "The fastest way to get up and running with the SubscriptionStoreView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=596"
  },
  {
    "text": "is by providing the group ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=599"
  },
  {
    "text": "from our StoreKit configuration file or App Store Connect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=600"
  },
  {
    "text": "I already added the group ID to our environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=604"
  },
  {
    "text": "so we can just declare an environment property to access it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=607"
  },
  {
    "text": "and then declare a SubscriptionStoreView by providing the group ID.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=611"
  },
  {
    "text": "Just like the StoreView and the ProductView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=621"
  },
  {
    "text": "the SubscriptionStoreView manages the data flow for us ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=624"
  },
  {
    "text": "and lays out a view with the different plan options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=627"
  },
  {
    "text": "It also checks for existing subscriber status ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=630"
  },
  {
    "text": "and whether the customer is eligible for an introductory offer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=633"
  },
  {
    "text": "While this automatic look is great, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=637"
  },
  {
    "text": "there are some powerful new APIs we can use to make this fit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=639"
  },
  {
    "text": "the look and feel of Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=642"
  },
  {
    "text": "For example, we can replace the marketing content in the header ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=644"
  },
  {
    "text": "with any SwiftUI view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=648"
  },
  {
    "text": "I built a marketing content view earlier, so I'll just drop this in here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=650"
  },
  {
    "text": "We can also add a container background to the Subscription Store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=657"
  },
  {
    "text": "to make things more visually interesting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=660"
  },
  {
    "text": "We can use the new SwiftUI containerBackground API.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=663"
  },
  {
    "text": "Notice how I'm choosing to place this ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=670"
  },
  {
    "text": "in the full height of the Subscription Store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=672"
  },
  {
    "text": "and then declaring a view I created earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=674"
  },
  {
    "text": "with a sky gradient and some clouds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=677"
  },
  {
    "text": "To tie everything together, we can use some other APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=680"
  },
  {
    "text": "for styling the Subscription Store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=683"
  },
  {
    "text": "By default, the Subscription Store adds a material layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=686"
  },
  {
    "text": "between the subscription controls and a full-height background.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=689"
  },
  {
    "text": "We can use the background style modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=695"
  },
  {
    "text": "to make the background behind the subscription controls clear.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=697"
  },
  {
    "text": "Now, I'll use subscriptionStoreButtonLabel ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=705"
  },
  {
    "text": "to choose a multi-line layout for our subscribe button.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=708"
  },
  {
    "text": "Notice how the subscribe button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=715"
  },
  {
    "text": "now contains both the price and \"Try it Free.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=716"
  },
  {
    "text": "Next, I'll add subscriptionStorePickerItemBackground ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=721"
  },
  {
    "text": "to declare a material effect for our subscription options.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=724"
  },
  {
    "text": "Here, we can see the sky gradient shine through the subscription plan options.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=732"
  },
  {
    "text": "Finally, because our subscription has offer codes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=740"
  },
  {
    "text": "I'll use the new storeButton modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=743"
  },
  {
    "text": "to declare the Redeem Code button as visible.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=745"
  },
  {
    "text": "With just this one view modifier, we have a button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=752"
  },
  {
    "text": "for customers to open the offer code redemption sheet.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=755"
  },
  {
    "text": "Now, our subscription view matches the feel of the rest of Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=760"
  },
  {
    "text": "While these new views significantly reduce the effort required ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=765"
  },
  {
    "text": "to add in-app purchase to an app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=768"
  },
  {
    "text": "there are a couple important pieces we're missing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=770"
  },
  {
    "text": "First, we must add logic to actually unlock the content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=774"
  },
  {
    "text": "after a purchase is made.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=777"
  },
  {
    "text": "Second, we need to check if someone is already subscribed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=779"
  },
  {
    "text": "and then hide any controls that present the SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=783"
  },
  {
    "text": "StoreKit views handle customers who are already subscribed automatically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=787"
  },
  {
    "text": "but in many cases, the best experience is choosing not to present ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=791"
  },
  {
    "text": "any merchandising UI to existing customers.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=796"
  },
  {
    "text": "StoreKit has some brand new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=800"
  },
  {
    "text": "to make implementing these important capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=802"
  },
  {
    "text": "just as easy and fun as selling your content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=805"
  },
  {
    "text": "Before you get started with these APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=808"
  },
  {
    "text": "you'll want to have already implemented your business logic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=810"
  },
  {
    "text": "or at least have some scaffolding in place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=812"
  },
  {
    "text": "Ensure you're handling updated transactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=815"
  },
  {
    "text": "cooperating with your server, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=818"
  },
  {
    "text": "tracking consumable entitlements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=820"
  },
  {
    "text": "and creating a data model that's suitable for your UI code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=822"
  },
  {
    "text": "among other things. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=825"
  },
  {
    "text": "I recommend checking out \"Meet StoreKit 2\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=827"
  },
  {
    "text": "and \"What's new in App Store server APIs\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=830"
  },
  {
    "text": "to learn more about implementing your business logic.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=832"
  },
  {
    "text": "I already went ahead and implemented our bird business logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=836"
  },
  {
    "text": "into an actor called BirdBrain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=839"
  },
  {
    "text": "You'll see me referencing this soon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=841"
  },
  {
    "text": "Let's get started with giving bird watchers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=844"
  },
  {
    "text": "access to the consumable bird food they purchase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=847"
  },
  {
    "text": "Handling purchases that come from any of the StoreKit views is simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=850"
  },
  {
    "text": "You just modify a view with onInAppPurchaseCompletion ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=853"
  },
  {
    "text": "and provide a function to call whenever a purchase completes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=857"
  },
  {
    "text": "You can modify any view with this method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=861"
  },
  {
    "text": "and it will be called whenever a descendant StoreKit view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=863"
  },
  {
    "text": "finishes a purchase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=866"
  },
  {
    "text": "Let's add this modifier to our BirdFoodShop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=867"
  },
  {
    "text": "The modifier gives us the product which was purchased ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=879"
  },
  {
    "text": "and the result of the purchase, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=882"
  },
  {
    "text": "whether it was successful or not. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=884"
  },
  {
    "text": "Let's implement this to send any successful results ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=886"
  },
  {
    "text": "to the BirdBrain actor for processing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=889"
  },
  {
    "text": "By adding this modifier, we're now unlocking the consumable bird food ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=895"
  },
  {
    "text": "that people purchase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=899"
  },
  {
    "text": "Let's give this a try in the simulator.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=901"
  },
  {
    "text": "I'll choose a backyard and tap the supplies.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=905"
  },
  {
    "text": "Then, I'll purchase some nutrition pellets.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=910"
  },
  {
    "text": "After the sheet dismisses, you'll notice we now have five nutrition pellets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=919"
  },
  {
    "text": "in our supplies inventory.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=923"
  },
  {
    "text": "Now, we can place a nutrition pellet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=926"
  },
  {
    "text": "and sit back as our pellet brings all the hungry birds to the yard.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=929"
  },
  {
    "text": "In addition to onInAppPurchaseCompletion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=934"
  },
  {
    "text": "there are a few other related view modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=937"
  },
  {
    "text": "you can use to handle events from StoreKit views.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=939"
  },
  {
    "text": "You can use onInAppPurchaseStart ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=943"
  },
  {
    "text": "to handle when someone triggers a purchase button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=945"
  },
  {
    "text": "but before the purchase begins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=948"
  },
  {
    "text": "This is useful if you want to update some UI components ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=950"
  },
  {
    "text": "while the purchase is running, like dimming controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=953"
  },
  {
    "text": "The function you provide here receives the product that will be purchased ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=956"
  },
  {
    "text": "as a parameter.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=960"
  },
  {
    "text": "When using these modifiers, it's important to know ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=962"
  },
  {
    "text": "that they will handle events from any descendant ProductView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=965"
  },
  {
    "text": "StoreView, or SubscriptionStoreView instances. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=969"
  },
  {
    "text": "If you add multiple modifiers, all of your actions will run ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=973"
  },
  {
    "text": "for each event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=976"
  },
  {
    "text": "Keep in mind, using these modifiers is entirely optional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=977"
  },
  {
    "text": "By default, successful transactions from StoreKit views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=981"
  },
  {
    "text": "will emit from the Transaction.updates sequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=985"
  },
  {
    "text": "but you have the option to add onInAppPurchaseCompletion ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=988"
  },
  {
    "text": "to handle the result directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=991"
  },
  {
    "text": "You can pass nil to any of these modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=993"
  },
  {
    "text": "to revert to the default behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=996"
  },
  {
    "text": "Now, let's talk about handling Backyard Birds Pass subscriptions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=998"
  },
  {
    "text": "In addition to the new view APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1003"
  },
  {
    "text": "StoreKit has new view modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1005"
  },
  {
    "text": "for declaring data dependencies in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1007"
  },
  {
    "text": "First, I'll cover the subscriptionStatusTask, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1010"
  },
  {
    "text": "which we can use to make unlocking our pass a breeze. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1013"
  },
  {
    "text": "In any view that depends on our subscription, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1016"
  },
  {
    "text": "we can add the subscriptionStatusTask modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1019"
  },
  {
    "text": "Let's start with the Backyard Grid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1022"
  },
  {
    "text": "because this is where we show the button to open the subscription offer sheet.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1024"
  },
  {
    "text": "The subscriptionStatusTask modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1034"
  },
  {
    "text": "takes the group ID of the subscription we depend on.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1036"
  },
  {
    "text": "This is the same group ID we used earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1040"
  },
  {
    "text": "when we declared the SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1042"
  },
  {
    "text": "Now, whenever the Backyard Grid appears, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1045"
  },
  {
    "text": "a background task will load the subscription status ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1048"
  },
  {
    "text": "and then call the function we provide once the task completes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1051"
  },
  {
    "text": "The best practice for using this API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1056"
  },
  {
    "text": "is to just pass the statuses to our business logic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1058"
  },
  {
    "text": "in our case, the BirdBrain actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1062"
  },
  {
    "text": "and then have the actor process the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1063"
  },
  {
    "text": "and return a model type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1066"
  },
  {
    "text": "that is easier to work with in our UI code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1067"
  },
  {
    "text": "I made this Pass status enum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1075"
  },
  {
    "text": "so I'll just make a state property to assign this to.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1077"
  },
  {
    "text": "Then, we can choose to only show the subscription offer card ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1087"
  },
  {
    "text": "if someone is not currently subscribed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1091"
  },
  {
    "text": "With these quick additions, we'll now only show the offer card ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1098"
  },
  {
    "text": "to bird watchers who aren't yet subscribed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1101"
  },
  {
    "text": "StoreKit will call our function when the status changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1103"
  },
  {
    "text": "so our view will always reflect the most up to date information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1106"
  },
  {
    "text": "We can use this same pattern throughout the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1111"
  },
  {
    "text": "to unlock Backyard Birds Pass content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1113"
  },
  {
    "text": "and we can use the onInAppPurchaseCompletion modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1115"
  },
  {
    "text": "to automatically dismiss the Pass Shop sheet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1119"
  },
  {
    "text": "after a successful subscription. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1122"
  },
  {
    "text": "I already completed this part earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1124"
  },
  {
    "text": "so let's run the app in the iPhone simulator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1126"
  },
  {
    "text": "and give this whole thing a test.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1128"
  },
  {
    "text": "I'll just tap Check It Out ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1135"
  },
  {
    "text": "and press Try it Free.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1138"
  },
  {
    "text": "The payment sheet appears, and I can tap Subscribe, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1142"
  },
  {
    "text": "then dismiss the alert. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1147"
  },
  {
    "text": "Watch how the offer sheet automatically dismisses, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1149"
  },
  {
    "text": "and the offer card is hidden too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1152"
  },
  {
    "text": "That's because the subscription status task ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1155"
  },
  {
    "text": "calls our function again each time the status changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1157"
  },
  {
    "text": "so we can be sure our app's UI is always up to date.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1160"
  },
  {
    "text": "While we're on the topic, if your app offers non-consumables ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1165"
  },
  {
    "text": "or non-renewing subscriptions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1168"
  },
  {
    "text": "there's a new API to make checking entitlements as easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1170"
  },
  {
    "text": "as the subscriptionStatusTask. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1173"
  },
  {
    "text": "You can use the currentEntitlementTask modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1175"
  },
  {
    "text": "to declare a view as dependent on the current entitlement ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1179"
  },
  {
    "text": "for a product ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1182"
  },
  {
    "text": "and the system will asynchronously load the current entitlement ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1183"
  },
  {
    "text": "and call your function with the current entitlement ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1186"
  },
  {
    "text": "whenever it changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1189"
  },
  {
    "text": "The functions you provide to both the subscriptionStatusTask ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1191"
  },
  {
    "text": "and currentEntitlementTask ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1194"
  },
  {
    "text": "take an entitlement task state as a parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1196"
  },
  {
    "text": "That way, you can choose to granularly handle the case ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1199"
  },
  {
    "text": "when the entitlement is still loading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1202"
  },
  {
    "text": "if it fails to load, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1204"
  },
  {
    "text": "and when the entitlement loaded successfully. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1206"
  },
  {
    "text": "I covered how these new StoreKit views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1209"
  },
  {
    "text": "help streamline in-app purchase integration in Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1211"
  },
  {
    "text": "Now, I want to go a little deeper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1215"
  },
  {
    "text": "and show how you can take these views a step further ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1217"
  },
  {
    "text": "with all the new StoreKit APIs for SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1220"
  },
  {
    "text": "First, we'll look at more options ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1225"
  },
  {
    "text": "for setting icons for ProductView and StoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1227"
  },
  {
    "text": "Then, I'll go into detail about styling the Product View. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1230"
  },
  {
    "text": "After that, I'll cover how to add buttons with common functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1234"
  },
  {
    "text": "to the StoreView and SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1238"
  },
  {
    "text": "Finally, I'll go into the various new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1241"
  },
  {
    "text": "you can use to make the Subscription Store View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1244"
  },
  {
    "text": "fit your brand's look and feel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1246"
  },
  {
    "text": "Let's get into decorative icons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1249"
  },
  {
    "text": "When you provide an icon, the standard Product View styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1251"
  },
  {
    "text": "all show a placeholder icon while the product is loading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1254"
  },
  {
    "text": "like what you can see on the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1258"
  },
  {
    "text": "Sometimes the automatic icon doesn't exactly fit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1260"
  },
  {
    "text": "what you expect the actual icon to be. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1263"
  },
  {
    "text": "For example, on iPhone, the automatic placeholder is a square, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1265"
  },
  {
    "text": "but we use circle icons for Bird Food products.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1269"
  },
  {
    "text": "You can easily improve this appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1273"
  },
  {
    "text": "by adding a second trailing closure to your ProductView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1275"
  },
  {
    "text": "with the icon you want to use for your placeholder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1278"
  },
  {
    "text": "In this case, I just provided a circle for the placeholder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1281"
  },
  {
    "text": "If you set an App Store promotion image in App Store Connect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1285"
  },
  {
    "text": "you can have the ProductView use that same image ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1288"
  },
  {
    "text": "instead of a SwiftUI view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1291"
  },
  {
    "text": "Just set the prefersPromotionalIcon parameter to true.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1293"
  },
  {
    "text": "You can still provide a SwiftUI view as a fallback, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1298"
  },
  {
    "text": "but this view is ignored as long as the product has a promotional icon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1301"
  },
  {
    "text": "Check out \"What's new in StoreKit 2 and StoreKit Testing in Xcode\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1305"
  },
  {
    "text": "and \"What's new in App Store Connect\" to learn how to set up a promotional icon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1310"
  },
  {
    "text": "Even if you don't want to use a promotional icon from the App Store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1316"
  },
  {
    "text": "you can still use the cool in-app purchase icon treatment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1320"
  },
  {
    "text": "for your icons declared in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1323"
  },
  {
    "text": "Just add this modifier to the view you provide for the icon ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1326"
  },
  {
    "text": "to get this border added to your view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1329"
  },
  {
    "text": "That's all about icons in the Product View. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1332"
  },
  {
    "text": "Keep in mind, there's corresponding API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1335"
  },
  {
    "text": "to do all of the same things with Store View icons, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1338"
  },
  {
    "text": "Now, let's talk about styling the Product View.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1342"
  },
  {
    "text": "Earlier in the session, I mentioned you can make custom Product View styles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1346"
  },
  {
    "text": "and it's finally time for me to show you how.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1350"
  },
  {
    "text": "The Product View's appearance, layout behavior, and interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1353"
  },
  {
    "text": "are entirely defined by the style it uses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1357"
  },
  {
    "text": "So, if you can't find a standard style that fits what you're going for, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1360"
  },
  {
    "text": "you can always create your own custom Product View style.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1363"
  },
  {
    "text": "The first case we'll look at involves creating custom styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1368"
  },
  {
    "text": "composed of the standard styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1370"
  },
  {
    "text": "so you aren't starting entirely from scratch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1372"
  },
  {
    "text": "For example, what if you want the Product View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1375"
  },
  {
    "text": "to show a progress spinner ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1377"
  },
  {
    "text": "instead of the standard placeholder appearance while loading? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1379"
  },
  {
    "text": "The first step for creating a custom style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1383"
  },
  {
    "text": "is to create a type that conforms to the ProductViewStyle protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1386"
  },
  {
    "text": "The only requirement for implementing the protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1390"
  },
  {
    "text": "is this makeBody method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1393"
  },
  {
    "text": "The configuration value passed to your makeBody method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1395"
  },
  {
    "text": "has all of the properties you need to declare an excellent Product View. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1398"
  },
  {
    "text": "For example, it has a state enumeration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1403"
  },
  {
    "text": "which covers the different states of loading the product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1405"
  },
  {
    "text": "To customize the loading appearance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1409"
  },
  {
    "text": "we just have to declare a ProgressView for the loading state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1410"
  },
  {
    "text": "Then, we can fallback to the standard ProductView behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1414"
  },
  {
    "text": "for any other states ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1417"
  },
  {
    "text": "by simply passing the configuration to a ProductView instance.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1419"
  },
  {
    "text": "You apply custom styles the same way you do standard styles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1424"
  },
  {
    "text": "by passing it to the productViewStyle modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1428"
  },
  {
    "text": "Of course, you don't need to compose your custom style with a standard style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1432"
  },
  {
    "text": "You can always define your style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1438"
  },
  {
    "text": "using other views in the makeBody method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1440"
  },
  {
    "text": "When the task state is success, you can access the Product value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1443"
  },
  {
    "text": "the view is representing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1447"
  },
  {
    "text": "This is the same Product value you're already used to working with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1449"
  },
  {
    "text": "if your app uses StoreKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1452"
  },
  {
    "text": "You can use all of the properties of the Product to create your view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1454"
  },
  {
    "text": "The configuration also allows you to access the decorative icon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1459"
  },
  {
    "text": "When you're adding the purchase button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1464"
  },
  {
    "text": "make sure to use the purchase method on the configuration value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1466"
  },
  {
    "text": "not the product value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1470"
  },
  {
    "text": "Using the method on the configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1472"
  },
  {
    "text": "will add default purchase options ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1474"
  },
  {
    "text": "to make sure the payment confirmation sheet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1476"
  },
  {
    "text": "displays in proximity to your Product View, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1479"
  },
  {
    "text": "and also triggers the reactive modifiers like onInAppPurchaseCompletion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1481"
  },
  {
    "text": "Remember: when your custom style is built from scratch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1487"
  },
  {
    "text": "the appearance and behavior of Product Views using this style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1490"
  },
  {
    "text": "will match that of the views you composed to build the style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1494"
  },
  {
    "text": "Creating custom styles is a great way to leverage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1497"
  },
  {
    "text": "all the infrastructure for the Product View, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1500"
  },
  {
    "text": "such as App Store data flow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1502"
  },
  {
    "text": "while being free to declare any appearance and behavior you want.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1504"
  },
  {
    "text": "While loading, the UI we built for the Bird Food Shop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1510"
  },
  {
    "text": "shows placeholder shapes for each product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1513"
  },
  {
    "text": "But what if we want an appearance like this loading spinner on the right? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1515"
  },
  {
    "text": "The solution to this problem is to lift up state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1519"
  },
  {
    "text": "Let me explain what I mean here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1522"
  },
  {
    "text": "This diagram represents the hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1525"
  },
  {
    "text": "of the BirdFoodShop we built earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1528"
  },
  {
    "text": "The BirdFoodShop has several ProductView descendants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1530"
  },
  {
    "text": "When you initialize a ProductView with a product ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1534"
  },
  {
    "text": "each view internally keeps state of the product ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1537"
  },
  {
    "text": "since the loading operation is asynchronous. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1539"
  },
  {
    "text": "If you want to create an effect where the parent BirdFoodShop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1542"
  },
  {
    "text": "shows a different appearance while the products are loading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1545"
  },
  {
    "text": "you'll need to lift your state up into the parent BirdFoodShop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1547"
  },
  {
    "text": "Once the parent BirdFoodShop is managing the state of the products, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1551"
  },
  {
    "text": "it's free to change its appearance while the data is loading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1555"
  },
  {
    "text": "and then create ProductView instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1558"
  },
  {
    "text": "using the pre-loaded product values instead of their IDs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1560"
  },
  {
    "text": "We've only covered creating Product Views by product ID so far, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1564"
  },
  {
    "text": "but it's important to know you can pass a Product value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1568"
  },
  {
    "text": "that you've already loaded to a ProductView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1570"
  },
  {
    "text": "This causes the Product View to skip loading ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1574"
  },
  {
    "text": "and just lay out the merchandising view directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1576"
  },
  {
    "text": "You might be thinking: that's all cool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1579"
  },
  {
    "text": "but in order to do that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1582"
  },
  {
    "text": "now I have to write my own product request and caching logic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1583"
  },
  {
    "text": "Well, you'll be happy to know ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1587"
  },
  {
    "text": "we're exposing the insides of the StoreKit views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1589"
  },
  {
    "text": "as a view modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1591"
  },
  {
    "text": "so you can declare any view as dependent on the metadata for a product ID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1593"
  },
  {
    "text": "StoreKit will handle loading the products for you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1598"
  },
  {
    "text": "caching them, and keeping them up to date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1600"
  },
  {
    "text": "To do this, you just use the new storeProductsTask modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1603"
  },
  {
    "text": "Similar to the subscriptionStatusTask we covered earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1608"
  },
  {
    "text": "you pass a collection of product IDs for the view to depend on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1611"
  },
  {
    "text": "Then, you get a state value you can use to handle the states of the async task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1616"
  },
  {
    "text": "This should all feel pretty familiar ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1620"
  },
  {
    "text": "after we just looked at a custom ProductViewStyle implementation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1622"
  },
  {
    "text": "From here, we can show our loading view on loading….",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1627"
  },
  {
    "text": "Use the new ContentUnavailableView if the products aren't available… ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1632"
  },
  {
    "text": "Or just show our BirdFoodShop directly with the preloaded Product values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1637"
  },
  {
    "text": "It's that easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1641"
  },
  {
    "text": "Speaking of easy, there are several useful common actions to include ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1643"
  },
  {
    "text": "with in-app purchase merchandising UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1647"
  },
  {
    "text": "The StoreView and SubscriptionStoreView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1650"
  },
  {
    "text": "make it really easy to add auxiliary buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1652"
  },
  {
    "text": "for these common actions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1654"
  },
  {
    "text": "When I talk about auxiliary buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1657"
  },
  {
    "text": "I mean buttons that perform actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1659"
  },
  {
    "text": "which support the main purpose of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1661"
  },
  {
    "text": "For example, this Cancellation button and Redeem Code button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1664"
  },
  {
    "text": "are both auxiliary to subscribing to the pass.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1668"
  },
  {
    "text": "We already looked at adding the Redeem Code button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1673"
  },
  {
    "text": "using the storeButton modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1676"
  },
  {
    "text": "when we first built this sheet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1678"
  },
  {
    "text": "Let's take a closer look at this view modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1680"
  },
  {
    "text": "There are a few values you can pass for each of the two parameters here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1683"
  },
  {
    "text": "The first parameter enables you to choose the visibility. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1687"
  },
  {
    "text": "Automatic is the default for all buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1691"
  },
  {
    "text": "which causes StoreKit to choose whether to make the button visible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1693"
  },
  {
    "text": "depending on the context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1696"
  },
  {
    "text": "You can also choose to make a button explicitly visible or hidden. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1698"
  },
  {
    "text": "The next parameter allows you to choose the button kind ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1703"
  },
  {
    "text": "you want to configure the visibility for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1706"
  },
  {
    "text": "The cancellation button shows a platform-appropriate button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1709"
  },
  {
    "text": "to dismiss the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1712"
  },
  {
    "text": "This button works for both the StoreView and the SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1714"
  },
  {
    "text": "The automatic behavior for the cancellation button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1718"
  },
  {
    "text": "is to show whenever the view is presented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1721"
  },
  {
    "text": "On the right, the Subscription Store View is presented as a sheet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1724"
  },
  {
    "text": "so it shows the cancellation button in the top right automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1728"
  },
  {
    "text": "On the left, the view isn't presented as a sheet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1732"
  },
  {
    "text": "so there's no cancellation button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1735"
  },
  {
    "text": "Of course, you could choose to override this behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1738"
  },
  {
    "text": "and hide the cancellation button when presented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1741"
  },
  {
    "text": "Keep in mind, you only want to do this ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1744"
  },
  {
    "text": "when you're replacing the cancellation button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1747"
  },
  {
    "text": "with your own cancellation button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1749"
  },
  {
    "text": "It's good practice to always accompany your merchandising UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1751"
  },
  {
    "text": "with a clear button to dismiss the presentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1754"
  },
  {
    "text": "Just like the cancellation button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1759"
  },
  {
    "text": "both the Store View and Subscription Store View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1761"
  },
  {
    "text": "can show a Restore Purchases button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1763"
  },
  {
    "text": "By default, the Restore Purchases button is always hidden, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1766"
  },
  {
    "text": "but you can choose to show it in your merchandising UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1770"
  },
  {
    "text": "with the storeButton modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1773"
  },
  {
    "text": "The next three button kinds are only for the SubscriptionStoreView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1775"
  },
  {
    "text": "We've already talked about the redeemCode button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1780"
  },
  {
    "text": "The next button kind is a signIn button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1783"
  },
  {
    "text": "If your subscription service allows people to subscribe outside of the App Store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1785"
  },
  {
    "text": "it's a good idea to show a sign in button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1790"
  },
  {
    "text": "in case an existing subscriber needs to access their subscription. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1792"
  },
  {
    "text": "An important thing to know for the sign in button is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1796"
  },
  {
    "text": "you must declare a sign in action ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1799"
  },
  {
    "text": "using the new subscriptionStoreSignInAction modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1801"
  },
  {
    "text": "If you set a sign in action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1805"
  },
  {
    "text": "the sign in button will be visible automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1807"
  },
  {
    "text": "The sign in button simply calls the function you declare ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1811"
  },
  {
    "text": "with subscriptionStoreSignInAction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1813"
  },
  {
    "text": "so you can use this as a signal to run your sign in flow.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1816"
  },
  {
    "text": "The final button kind to review is policies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1820"
  },
  {
    "text": "You might want to show links to the terms of service and privacy policy ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1823"
  },
  {
    "text": "along with your subscription offer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1827"
  },
  {
    "text": "and the SubscriptionStoreView makes this really easy.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1829"
  },
  {
    "text": "Typically the policy buttons are hidden by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1833"
  },
  {
    "text": "If you make them visible with the storeButton modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1836"
  },
  {
    "text": "they'll display above the subscribe controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1839"
  },
  {
    "text": "on iOS and Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1841"
  },
  {
    "text": "Since these buttons display above your container background, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1843"
  },
  {
    "text": "the default style may not be legible against your background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1846"
  },
  {
    "text": "Use subscriptionStorePolicyForegroundStyle to set a shape style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1850"
  },
  {
    "text": "to use for the policy buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1855"
  },
  {
    "text": "that is legible against your background.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1857"
  },
  {
    "text": "Configuring auxiliary buttons with the storeButton modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1860"
  },
  {
    "text": "helps add powerful functionality to your merchandising UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1864"
  },
  {
    "text": "with just a few straightforward declarations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1867"
  },
  {
    "text": "Earlier in the session, we configured the style of the Subscription Store View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1871"
  },
  {
    "text": "to match the look and feel of Backyard Birds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1875"
  },
  {
    "text": "Now, I want to look at these style APIs closer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1878"
  },
  {
    "text": "First, let's look at choosing a control style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1881"
  },
  {
    "text": "Automatically, the SubscriptionStoreView chooses a control style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1885"
  },
  {
    "text": "based on the kind of subscription you're merchandising.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1888"
  },
  {
    "text": "You can use the new subscriptionStoreControlStyle modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1893"
  },
  {
    "text": "to choose the style of controls to use for your subscription plans. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1896"
  },
  {
    "text": "For example, you can choose a button per plan ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1900"
  },
  {
    "text": "instead of the automatic picker.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1903"
  },
  {
    "text": "Let's talk about the different styles of controls.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1906"
  },
  {
    "text": "If you don't specify the style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1910"
  },
  {
    "text": "the Subscription Store View picks a control automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1912"
  },
  {
    "text": "On iPhone, this is the picker control ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1916"
  },
  {
    "text": "for subscriptions with multiple plan options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1918"
  },
  {
    "text": "You can also explicitly choose the picker control. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1921"
  },
  {
    "text": "On iOS and Mac, there's a prominent picker control, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1925"
  },
  {
    "text": "which displays the subscription plan options more prominently ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1928"
  },
  {
    "text": "with a shadow and selection ring.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1932"
  },
  {
    "text": "Last, you can choose to show a button for each subscription plan ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1935"
  },
  {
    "text": "instead of the picker control. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1939"
  },
  {
    "text": "On the topic of subscribe buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1942"
  },
  {
    "text": "there's a new API you can use to customize the button labels.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1944"
  },
  {
    "text": "By default, the SubscriptionStoreView shows a subscribe button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1948"
  },
  {
    "text": "that contains an action phrase ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1952"
  },
  {
    "text": "and the pricing information as a caption above the button.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1954"
  },
  {
    "text": "You can add the subscriptionStoreButtonLabel modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1958"
  },
  {
    "text": "to change the button label to multiline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1961"
  },
  {
    "text": "which causes the pricing text to be contained within the button label, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1964"
  },
  {
    "text": "instead of as a separate caption.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1967"
  },
  {
    "text": "In addition to customizing the layout of the button label, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1970"
  },
  {
    "text": "you can also customize the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1973"
  },
  {
    "text": "For example, you could choose to show the display name ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1976"
  },
  {
    "text": "of the selected subscription instead of an action phrase.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1979"
  },
  {
    "text": "You can even compose a button label value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1983"
  },
  {
    "text": "with both the layout and the content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1986"
  },
  {
    "text": "by chaining the components together, like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1988"
  },
  {
    "text": "Since the button controls are composed of the same subscribe buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1992"
  },
  {
    "text": "as the picker controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1995"
  },
  {
    "text": "you can use the same modifier to customize these buttons too.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=1997"
  },
  {
    "text": "For example, you can choose to only show the price in the label. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2001"
  },
  {
    "text": "This is useful when your plans are all the same service, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2005"
  },
  {
    "text": "but with different price points.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2008"
  },
  {
    "text": "Different subscription plans use the display name ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2010"
  },
  {
    "text": "and the description you set up in App Store Connect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2013"
  },
  {
    "text": "to build the controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2015"
  },
  {
    "text": "To make these controls more interesting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2018"
  },
  {
    "text": "you can choose to add a decorative view for each different plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2020"
  },
  {
    "text": "To add the decorative view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2024"
  },
  {
    "text": "just add the subscriptionStoreControlIcon modifier to the Subscription Store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2026"
  },
  {
    "text": "The modifier takes a view builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2031"
  },
  {
    "text": "It provides the view builder with both a Product value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2034"
  },
  {
    "text": "and a SubscriptionInfo value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2037"
  },
  {
    "text": "Using these parameters, you can provide a different view for each plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2040"
  },
  {
    "text": "These icons also work when you use the button control style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2046"
  },
  {
    "text": "for your subscription plans. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2049"
  },
  {
    "text": "Now, let's look a little closer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2051"
  },
  {
    "text": "at adding background content to the Subscription Store View. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2053"
  },
  {
    "text": "To recap from earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2056"
  },
  {
    "text": "you can add a container background to the Subscription Store ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2058"
  },
  {
    "text": "by modifying your marketing content with the containerBackground modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2062"
  },
  {
    "text": "In this case, we're providing a gradient of our accent color for the background ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2066"
  },
  {
    "text": "and choosing to place it in the Subscription Store.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2071"
  },
  {
    "text": "You can learn more about the new containerBackground API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2074"
  },
  {
    "text": "in the session \"What's new in SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2077"
  },
  {
    "text": "There are a few different background placements you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2081"
  },
  {
    "text": "for the Subscription Store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2083"
  },
  {
    "text": "If you use the Subscription Store placement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2085"
  },
  {
    "text": "it will choose an automatic placement based on the context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2088"
  },
  {
    "text": "On iOS and Mac, you can explicitly specify you want your background to be placed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2091"
  },
  {
    "text": "in the Header of the Subscription Store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2096"
  },
  {
    "text": "This placement is behind your marketing content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2098"
  },
  {
    "text": "There's also a Full Height placement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2102"
  },
  {
    "text": "which places the background ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2103"
  },
  {
    "text": "behind the full height of the Subscription Store View.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2105"
  },
  {
    "text": "Earlier in the session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2109"
  },
  {
    "text": "we discussed how to use an API like the subscription status task ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2110"
  },
  {
    "text": "to avoid presenting our Get Backyard Birds Pass sheet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2114"
  },
  {
    "text": "However, there is a case when we may want to show a Subscription Store View ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2118"
  },
  {
    "text": "to existing subscribers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2122"
  },
  {
    "text": "and that's when we want to encourage subscribers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2124"
  },
  {
    "text": "to upgrade to the premium plan.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2127"
  },
  {
    "text": "When we detect a subscriber is currently subscribed to a plan ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2129"
  },
  {
    "text": "with a lower level of service than premium, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2133"
  },
  {
    "text": "we can present an upgrade sheet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2135"
  },
  {
    "text": "by passing upgrade as the visibleRelationships parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2137"
  },
  {
    "text": "This could be any combination of subscription relationships we want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2141"
  },
  {
    "text": "and it only has effects when someone is currently subscribed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2144"
  },
  {
    "text": "Then, to make the offer more effective, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2148"
  },
  {
    "text": "we can provide a different view for the marketing content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2151"
  },
  {
    "text": "to explain the benefits of the premium plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2154"
  },
  {
    "text": "You can use the subscriptionStatusTask ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2158"
  },
  {
    "text": "to keep track of a subscriber's level of service, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2160"
  },
  {
    "text": "and then use this information to know which offering to present to a customer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2162"
  },
  {
    "text": "That's everything I have to cover today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2167"
  },
  {
    "text": "When you start adding in-app purchase to your apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2170"
  },
  {
    "text": "declare a StoreView to get up and running quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2173"
  },
  {
    "text": "If you desire a more customized layout, give ProductView a try. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2176"
  },
  {
    "text": "For your subscriptions, you can declare a SubscriptionStoreView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2180"
  },
  {
    "text": "to build compelling offers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2184"
  },
  {
    "text": "And when you're ready to take things to the next level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2186"
  },
  {
    "text": "try out the new view modifiers and other APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2189"
  },
  {
    "text": "to really make this your own. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2191"
  },
  {
    "text": "If you can't get enough StoreKit and SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2194"
  },
  {
    "text": "check out the sessions; ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2196"
  },
  {
    "text": "\"What's new in StoreKit 2 and StoreKit Testing in Xcode\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2198"
  },
  {
    "text": "and \"What's new in SwiftUI\" next.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2201"
  },
  {
    "text": "Thanks for joining me today to learn about the new StoreKit APIs for SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2206"
  },
  {
    "text": "Happy coding! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2210"
  },
  {
    "text": "",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10013/?time=2212"
  }
]