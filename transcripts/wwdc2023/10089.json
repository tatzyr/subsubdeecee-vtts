[
  {
    "text": "♪ Mellow instrumental hip-hop ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=4"
  },
  {
    "text": "Hey, I'm Pau Sastre Miguel, a Software Engineer at Apple.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=10"
  },
  {
    "text": "Today I'm going to talk about how to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=14"
  },
  {
    "text": "immersive experiences with Metal on xrOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=17"
  },
  {
    "text": "This year, with the launch of xrOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=21"
  },
  {
    "text": "you will be able to create immersive experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=23"
  },
  {
    "text": "with familiar technologies in the Apple ecosystem.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=25"
  },
  {
    "text": "With RealityKit you will be able to create experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=29"
  },
  {
    "text": "that blend your virtual content with the real world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=32"
  },
  {
    "text": "On the other hand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=35"
  },
  {
    "text": "if your application will take the user ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=36"
  },
  {
    "text": "into a fully immersive experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=38"
  },
  {
    "text": "xrOS also enables you to completely replace ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=40"
  },
  {
    "text": "the real world content with your own virtual content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=43"
  },
  {
    "text": "When creating fully immersive experiences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=47"
  },
  {
    "text": "you have a few choices when it comes to your rendering method.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=49"
  },
  {
    "text": "You can still use RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=52"
  },
  {
    "text": "or if you prefer, you can choose Metal and ARKit APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=54"
  },
  {
    "text": "RecRoom is a great example of an application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=58"
  },
  {
    "text": "that provides a fully immersive experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=61"
  },
  {
    "text": "using CompositorServices to create a rendering session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=64"
  },
  {
    "text": "Metal APIs to render frames, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=67"
  },
  {
    "text": "and ARKit to get world and hand tracking.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=69"
  },
  {
    "text": "They were able to bring support to all these technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=72"
  },
  {
    "text": "thanks to the Unity editor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=75"
  },
  {
    "text": "If you'd like to write your own engine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=78"
  },
  {
    "text": "the CompositorServices API gives you access ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=80"
  },
  {
    "text": "to Metal rendering on xrOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=82"
  },
  {
    "text": "You can combine it with ARKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=85"
  },
  {
    "text": "which adds world tracking and hand tracking, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=86"
  },
  {
    "text": "to create a fully immersive experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=89"
  },
  {
    "text": "CompositorServices is the key to configure your engine ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=92"
  },
  {
    "text": "to work on xrOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=95"
  },
  {
    "text": "I'll show you how to setup the render loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=97"
  },
  {
    "text": "and then how to render one frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=99"
  },
  {
    "text": "Finally, I'll show you how to use ARKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=102"
  },
  {
    "text": "to make your experience interactive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=105"
  },
  {
    "text": "Start with the architecture of an xrOS app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=107"
  },
  {
    "text": "You'll get the most out of today's session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=112"
  },
  {
    "text": "if you have previous experience with Metal APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=114"
  },
  {
    "text": "and Metal rendering techniques.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=116"
  },
  {
    "text": "If you haven't used Metal before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=119"
  },
  {
    "text": "check out the code samples and documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=120"
  },
  {
    "text": "over in developer.apple.com/Metal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=123"
  },
  {
    "text": "When you create immersive experiences on xrOS with Metal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=127"
  },
  {
    "text": "you'll start with SwiftUI to create the application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=131"
  },
  {
    "text": "and the rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=133"
  },
  {
    "text": "After creating the rendering session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=135"
  },
  {
    "text": "you can switch to a language you might be more familiar with, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=137"
  },
  {
    "text": "like C or C++, to define the inner parts of the engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=140"
  },
  {
    "text": "You start by creating a type that conforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=145"
  },
  {
    "text": "to the SwiftUI app protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=147"
  },
  {
    "text": "To conform to this protocol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=149"
  },
  {
    "text": "you will define the list of scenes in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=151"
  },
  {
    "text": "On xrOS, there are three main scenes types.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=154"
  },
  {
    "text": "The window type provides an experience similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=157"
  },
  {
    "text": "to 2D platforms like macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=159"
  },
  {
    "text": "The volume type renders content within its bounds ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=162"
  },
  {
    "text": "and it coexists in the Shared Space with other applications.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=165"
  },
  {
    "text": "And ImmersiveSpace allows you to render content anywhere.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=168"
  },
  {
    "text": "Whenever you render fully immersive experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=173"
  },
  {
    "text": "with Metal, you will choose the ImmersiveSpace type.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=176"
  },
  {
    "text": "ImmersiveSpace is a new SwiftUI Scene type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=180"
  },
  {
    "text": "available on xrOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=183"
  },
  {
    "text": "It serves as the container for fully immersive experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=185"
  },
  {
    "text": "To learn how to use ImmersiveSpace, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=190"
  },
  {
    "text": "check out the session \"Go beyond the window with SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=191"
  },
  {
    "text": "When you create an ImmersiveSpace scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=196"
  },
  {
    "text": "your application provides the content by using a type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=199"
  },
  {
    "text": "that conforms to the ImmersiveSpaceContent protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=201"
  },
  {
    "text": "Often, when creating content for an ImmersiveSpace Scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=206"
  },
  {
    "text": "applications will use RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=209"
  },
  {
    "text": "It uses CoreAnimation and MaterialX under the hood.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=212"
  },
  {
    "text": "But if instead, you'd like to use the power of Metal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=215"
  },
  {
    "text": "to render the content of your application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=218"
  },
  {
    "text": "you've got another option.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=220"
  },
  {
    "text": "The CompositorServices API uses Metal and ARKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=222"
  },
  {
    "text": "to provide immersive rendering capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=226"
  },
  {
    "text": "to your application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=228"
  },
  {
    "text": "The new CompositorServices API, introduced in xrOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=230"
  },
  {
    "text": "provides a Metal rendering interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=234"
  },
  {
    "text": "to be able to render the contents of an ImmersiveSpace.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=236"
  },
  {
    "text": "With CompositorServices, applications can render ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=240"
  },
  {
    "text": "directly into the compositor server.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=243"
  },
  {
    "text": "It has a low IPC overhead to minimize latency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=245"
  },
  {
    "text": "and it is built from the ground up ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=249"
  },
  {
    "text": "to support both C and Swift APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=250"
  },
  {
    "text": "When using CompositorServices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=254"
  },
  {
    "text": "the ImmersiveSpaceContent is called CompositorLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=256"
  },
  {
    "text": "To create a CompositorLayer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=260"
  },
  {
    "text": "you will need to provide two parameters.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=262"
  },
  {
    "text": "The first one is the ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=265"
  },
  {
    "text": "CompositorLayerConfiguration protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=267"
  },
  {
    "text": "This protocol defines the behavior and capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=269"
  },
  {
    "text": "of your rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=272"
  },
  {
    "text": "The second is the LayerRenderer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=274"
  },
  {
    "text": "This is the interface to the layer rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=277"
  },
  {
    "text": "Your application will use this object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=280"
  },
  {
    "text": "to schedule and render new frames.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=281"
  },
  {
    "text": "When writing an immersive experience with Metal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=285"
  },
  {
    "text": "start by defining the app type.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=288"
  },
  {
    "text": "As the scene type, use ImmersiveSpace.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=291"
  },
  {
    "text": "For the content type, use a CompositorLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=294"
  },
  {
    "text": "Once the CompositorLayer is ready to render content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=298"
  },
  {
    "text": "the system will call the application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=301"
  },
  {
    "text": "with the instance of the rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=303"
  },
  {
    "text": "Here is a good place to create the instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=306"
  },
  {
    "text": "of your custom engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=309"
  },
  {
    "text": "Now that you have the engine instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=311"
  },
  {
    "text": "you can create the render thread and run the render loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=314"
  },
  {
    "text": "by calling start.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=317"
  },
  {
    "text": "One thing to take into account ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=320"
  },
  {
    "text": "when defining the scene list in your application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=321"
  },
  {
    "text": "is that by default SwiftUI creates a window scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=324"
  },
  {
    "text": "even if the first scene in your app is an ImmersiveSpace.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=327"
  },
  {
    "text": "To change that default behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=331"
  },
  {
    "text": "you can modify the info plist of your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=333"
  },
  {
    "text": "You can add the key ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=335"
  },
  {
    "text": "UIApplicationPreferred DefaultSceneSessionRole ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=336"
  },
  {
    "text": "to your application scene manifest ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=339"
  },
  {
    "text": "to change the default scene type of your application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=341"
  },
  {
    "text": "If you are using a space with a Compositor SpaceContent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=344"
  },
  {
    "text": "you will use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=347"
  },
  {
    "text": "CPSceneSessionRole ImmersiveSpaceApplication.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=349"
  },
  {
    "text": "After setting up the application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=352"
  },
  {
    "text": "and before getting in the render loop, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=354"
  },
  {
    "text": "you'll tell CompositorServices how to configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=356"
  },
  {
    "text": "the LayerRenderer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=358"
  },
  {
    "text": "To provide a configuration to the CompositorLayer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=361"
  },
  {
    "text": "you will create a new type that conforms to the ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=363"
  },
  {
    "text": "CompositorLayerConfiguration protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=365"
  },
  {
    "text": "This protocol allows you to modify the setup ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=368"
  },
  {
    "text": "and some of the behavior of the rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=371"
  },
  {
    "text": "The CompositorLayerConfiguration provides you two parameters.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=375"
  },
  {
    "text": "The first one is the layer capabilities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=378"
  },
  {
    "text": "It enables you to query what features are available ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=381"
  },
  {
    "text": "on the device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=383"
  },
  {
    "text": "Use the capabilities to create a valid configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=385"
  },
  {
    "text": "And the second parameter is the LayerRenderer Configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=389"
  },
  {
    "text": "This type defines the configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=392"
  },
  {
    "text": "of your rendering session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=394"
  },
  {
    "text": "With the configuration, you can define ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=396"
  },
  {
    "text": "how your engine maps its content into the layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=398"
  },
  {
    "text": "enable foveated rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=401"
  },
  {
    "text": "and define the color management of your pipeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=403"
  },
  {
    "text": "Now, I'll talk about how each of these properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=406"
  },
  {
    "text": "will affect your engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=409"
  },
  {
    "text": "The first one is foveated rendering.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=411"
  },
  {
    "text": "The main goal of this feature is to allow you to render content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=414"
  },
  {
    "text": "at a higher pixel-per-degree density ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=417"
  },
  {
    "text": "without using a bigger texture size.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=419"
  },
  {
    "text": "In a regular display pipeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=422"
  },
  {
    "text": "the pixels are distributed linearly in a texture.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=424"
  },
  {
    "text": "xrOS optimizes this workflow by creating a map ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=428"
  },
  {
    "text": "that defines what regions in a display ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=431"
  },
  {
    "text": "can use a lower sampling rate.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=433"
  },
  {
    "text": "This helps reduce the power required to render your frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=436"
  },
  {
    "text": "while maintaining the visual fidelity of the display.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=439"
  },
  {
    "text": "Using foveation whenever possible is important, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=442"
  },
  {
    "text": "as it will result in a better visual experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=445"
  },
  {
    "text": "A great way to visualize how foveation affects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=448"
  },
  {
    "text": "your rendering pipeline is using Xcode's Metal Debugger.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=451"
  },
  {
    "text": "With Metal Debugger, you can inspect the target textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=455"
  },
  {
    "text": "and rasterization rate maps ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=459"
  },
  {
    "text": "being used in the render pipeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=460"
  },
  {
    "text": "This capture shows the contents of the texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=463"
  },
  {
    "text": "without scaling for the rasterization rate map.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=465"
  },
  {
    "text": "You can notice the different sample rates by focusing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=469"
  },
  {
    "text": "in the regions of the texture that are more compressed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=471"
  },
  {
    "text": "With the attachment viewer options in Metal Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=475"
  },
  {
    "text": "you can scale the image to visualize the final result ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=478"
  },
  {
    "text": "that the display will show.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=481"
  },
  {
    "text": "Compositor provides the foveation map ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=484"
  },
  {
    "text": "using an MTLRasterizationRateMap for each frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=486"
  },
  {
    "text": "It is a good practice to always check ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=491"
  },
  {
    "text": "if foveation is supported.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=492"
  },
  {
    "text": "This will change depending on the platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=495"
  },
  {
    "text": "For example, in the xrOS simulator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=497"
  },
  {
    "text": "foveation is not available.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=499"
  },
  {
    "text": "To enable foveation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=502"
  },
  {
    "text": "you can set isFoveationEnabled on the configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=503"
  },
  {
    "text": "The second property is LayerRenderer layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=508"
  },
  {
    "text": "This property is one of the most important configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=511"
  },
  {
    "text": "for your engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=514"
  },
  {
    "text": "It defines how each display from the headset ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=516"
  },
  {
    "text": "gets mapped into the rendered content of your application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=518"
  },
  {
    "text": "Each eye first maps into a Metal texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=523"
  },
  {
    "text": "provided by Compositor.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=526"
  },
  {
    "text": "Then Compositor provides the index of which slice ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=528"
  },
  {
    "text": "to use within that texture.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=530"
  },
  {
    "text": "And finally, Compositor provides the viewport to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=533"
  },
  {
    "text": "within that texture slice.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=536"
  },
  {
    "text": "The LayerRenderer layout lets you choose different mappings ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=539"
  },
  {
    "text": "between the texture slice and viewport.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=541"
  },
  {
    "text": "With layered, Compositor will use one texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=544"
  },
  {
    "text": "with two slices and two viewports.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=547"
  },
  {
    "text": "With dedicated, Compositor will use two textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=550"
  },
  {
    "text": "with one slice and one viewport each.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=553"
  },
  {
    "text": "And finally with shared, Compositor will use one texture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=556"
  },
  {
    "text": "one slice, and two different viewports for that slice.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=560"
  },
  {
    "text": "Choosing which layout to use will depend ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=564"
  },
  {
    "text": "on how you set up your rendering pipeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=566"
  },
  {
    "text": "For example, with layered and shared, you will be able ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=569"
  },
  {
    "text": "to perform your rendering in one single pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=572"
  },
  {
    "text": "so you can optimize your rendering pipeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=575"
  },
  {
    "text": "With shared layout, it might be easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=578"
  },
  {
    "text": "to port existing code bases ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=580"
  },
  {
    "text": "where foveated rendering is not an option.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=582"
  },
  {
    "text": "Layered layout is the optimal layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=584"
  },
  {
    "text": "since it allows you to render your scene in a single pass ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=586"
  },
  {
    "text": "while still maintaining foveated rendering.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=590"
  },
  {
    "text": "The last configuration property to discuss is color management.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=593"
  },
  {
    "text": "Compositor expects the content to be rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=597"
  },
  {
    "text": "with extended linear display P3 color space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=599"
  },
  {
    "text": "xrOS supports an EDR headroom of 2.0.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=603"
  },
  {
    "text": "That is two times the SDR range.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=606"
  },
  {
    "text": "By default, Compositor does not use a pixel format ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=609"
  },
  {
    "text": "that is HDR renderable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=612"
  },
  {
    "text": "but if your application supports HDR, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=614"
  },
  {
    "text": "you can specify rgba16Float in the layer configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=616"
  },
  {
    "text": "If you want to know more about how to render HDR with EDR, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=621"
  },
  {
    "text": "checkout the session \"Explore HDR rendering with EDR.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=625"
  },
  {
    "text": "To create a custom configuration in your application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=629"
  },
  {
    "text": "start by defining a new type that conforms to the ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=632"
  },
  {
    "text": "CompositorLayerConfiguration protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=634"
  },
  {
    "text": "To conform to this protocol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=637"
  },
  {
    "text": "add the makeConfiguration method.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=639"
  },
  {
    "text": "This method provides the layer capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=642"
  },
  {
    "text": "and a configuration you can modify.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=644"
  },
  {
    "text": "To enable the three properties I mentioned before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=647"
  },
  {
    "text": "first check if foveation is supported.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=649"
  },
  {
    "text": "Then check what layouts are supported in this device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=652"
  },
  {
    "text": "With this information, you can set a valid layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=657"
  },
  {
    "text": "in the configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=659"
  },
  {
    "text": "In some devices like the simulator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=661"
  },
  {
    "text": "where the Compositor only renders one view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=663"
  },
  {
    "text": "layered won't be available.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=665"
  },
  {
    "text": "For foveation, set it to true if the device supports it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=668"
  },
  {
    "text": "And finally, set the colorFormat to rgba16Float ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=672"
  },
  {
    "text": "to be able to render HDR content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=675"
  },
  {
    "text": "Returning to the code that created the Compositor layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=679"
  },
  {
    "text": "you can now add the configuration type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=682"
  },
  {
    "text": "you just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=684"
  },
  {
    "text": "Now that the rendering session is configured, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=686"
  },
  {
    "text": "you can set up the render loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=688"
  },
  {
    "text": "You'll start by using the LayerRenderer object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=691"
  },
  {
    "text": "from the CompositorLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=693"
  },
  {
    "text": "First, you'll load the resources and initialize any objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=695"
  },
  {
    "text": "that your engine will need to render frames.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=699"
  },
  {
    "text": "Then check the state of the layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=702"
  },
  {
    "text": "If the layer is paused, wait until the layer is running.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=704"
  },
  {
    "text": "Once the layer is unblocked from the wait, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=708"
  },
  {
    "text": "check the layer state again.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=710"
  },
  {
    "text": "If the layer is running, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=711"
  },
  {
    "text": "you'll be able to render a frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=713"
  },
  {
    "text": "And once that frame is rendered, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=715"
  },
  {
    "text": "check the layer state again before rendering the next frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=716"
  },
  {
    "text": "If the layer state is invalidated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=720"
  },
  {
    "text": "free the resources you created for the render loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=722"
  },
  {
    "text": "Now, it's time to define the main function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=726"
  },
  {
    "text": "of the render_loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=728"
  },
  {
    "text": "Until now I've been using Swift since the ImmersiveSpace API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=730"
  },
  {
    "text": "is only available in Swift.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=733"
  },
  {
    "text": "But from here I will switch to C to write the render loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=735"
  },
  {
    "text": "As I mentioned, the first step in the render loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=740"
  },
  {
    "text": "is to allocate and initialize all the objects you'll need ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=742"
  },
  {
    "text": "to render frames.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=745"
  },
  {
    "text": "You'll do this by calling the setup function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=747"
  },
  {
    "text": "in your custom engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=749"
  },
  {
    "text": "Next, is the main section of the loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=751"
  },
  {
    "text": "The first step is to check the layerRenderer state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=755"
  },
  {
    "text": "If the state is paused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=758"
  },
  {
    "text": "the thread will sleep until the layerRenderer is running.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=759"
  },
  {
    "text": "If the layer state is running, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=763"
  },
  {
    "text": "the engine will render one frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=765"
  },
  {
    "text": "And finally, if the layer has been invalidated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=768"
  },
  {
    "text": "the render loop will finish.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=770"
  },
  {
    "text": "The last step of the render_loop function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=773"
  },
  {
    "text": "will be to clear any used resources.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=775"
  },
  {
    "text": "Now that the app is going through the render loop, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=778"
  },
  {
    "text": "I'll explain how to render one frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=780"
  },
  {
    "text": "Rendering content in xrOS is always ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=783"
  },
  {
    "text": "from the point of view of the device.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=785"
  },
  {
    "text": "You can use ARKit to obtain the device orientation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=788"
  },
  {
    "text": "and translation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=791"
  },
  {
    "text": "ARKit is already available on iOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=792"
  },
  {
    "text": "and now xrOS is introducing a whole new API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=795"
  },
  {
    "text": "which has additional features that can help you create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=798"
  },
  {
    "text": "immersive experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=801"
  },
  {
    "text": "With ARKit, you can add world tracking, hand tracking, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=803"
  },
  {
    "text": "and other world sensing capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=807"
  },
  {
    "text": "to your application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=809"
  },
  {
    "text": "The new ARKit API is also built from the ground up ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=811"
  },
  {
    "text": "to support C and Swift APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=814"
  },
  {
    "text": "which will allow for an easier integration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=816"
  },
  {
    "text": "with existing rendering engines.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=818"
  },
  {
    "text": "To learn more about ARKit on xrOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=821"
  },
  {
    "text": "check out \"Meet ARKit for spatial computing.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=823"
  },
  {
    "text": "Within the render loop, it's time to render one frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=827"
  },
  {
    "text": "When rendering a frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=832"
  },
  {
    "text": "Compositor defines two main sections.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=833"
  },
  {
    "text": "The first one is the update.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=836"
  },
  {
    "text": "Here's where you will do ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=838"
  },
  {
    "text": "any work that is not input-latency critical.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=839"
  },
  {
    "text": "This can be things like updating the animations in your scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=842"
  },
  {
    "text": "updating your characters, or gathering inputs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=845"
  },
  {
    "text": "in your system like hand skeleton poses.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=847"
  },
  {
    "text": "The second section of the frame is the submission section.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=850"
  },
  {
    "text": "Here's where you will perform any latency-critical work.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=853"
  },
  {
    "text": "You'll also render any content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=856"
  },
  {
    "text": "that is headset-pose dependent here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=858"
  },
  {
    "text": "In order to define the timing for each of those sections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=861"
  },
  {
    "text": "Compositor provides a timing object.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=864"
  },
  {
    "text": "This diagram defines how the timing affects ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=867"
  },
  {
    "text": "the different frame sections.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=869"
  },
  {
    "text": "The CPU and GPU tracks represent the work that is being done ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=872"
  },
  {
    "text": "by your application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=875"
  },
  {
    "text": "And the Compositor track represents the work done ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=877"
  },
  {
    "text": "by the Compositor server to display your frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=879"
  },
  {
    "text": "The timing type from Compositor Services ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=883"
  },
  {
    "text": "defines three main time values.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=885"
  },
  {
    "text": "First is the optimal input time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=888"
  },
  {
    "text": "That is the best time to query the latency-critical input ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=890"
  },
  {
    "text": "and start rendering your frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=894"
  },
  {
    "text": "Second is the rendering deadline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=897"
  },
  {
    "text": "That is the time by when your CPU and GPU work ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=899"
  },
  {
    "text": "to render a frame should be finished.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=902"
  },
  {
    "text": "And third is presentation time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=905"
  },
  {
    "text": "That is the time when your frame will be presented on display.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=907"
  },
  {
    "text": "In the two sections of your frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=911"
  },
  {
    "text": "The update section should happen before the optimal input time.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=914"
  },
  {
    "text": "After the update, you will wait for the optimal input time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=918"
  },
  {
    "text": "before starting the frame submission.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=921"
  },
  {
    "text": "Then you will perform the frame submission, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=923"
  },
  {
    "text": "which will submit the render work to the GPU.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=926"
  },
  {
    "text": "It is important to notice that the CPU and GPU work ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=929"
  },
  {
    "text": "needs to finish before the rendering deadline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=933"
  },
  {
    "text": "otherwise the Compositor server won't be able to use this frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=935"
  },
  {
    "text": "and will use a previous one instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=939"
  },
  {
    "text": "Finally, on the rendering deadline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=942"
  },
  {
    "text": "the Compositor server will composite this frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=944"
  },
  {
    "text": "with the other layers in the system.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=946"
  },
  {
    "text": "Back to the render loop code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=949"
  },
  {
    "text": "it's time to define the render_new_frame function.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=951"
  },
  {
    "text": "In your engine's render_new_frame function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=956"
  },
  {
    "text": "you will first query a frame from the layerRenderer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=958"
  },
  {
    "text": "With the frame object, you will be able to predict ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=962"
  },
  {
    "text": "the timing information.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=964"
  },
  {
    "text": "Use that timing information to scope the update ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=966"
  },
  {
    "text": "and submit intervals.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=968"
  },
  {
    "text": "Next, implement the update section.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=971"
  },
  {
    "text": "Define this section by calling the start and end update ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=973"
  },
  {
    "text": "on the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=976"
  },
  {
    "text": "Inside, you will gather the device inputs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=978"
  },
  {
    "text": "and update the contents of the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=980"
  },
  {
    "text": "Once the update is finished, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=983"
  },
  {
    "text": "wait for the optimal input time before starting the submission.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=985"
  },
  {
    "text": "After the wait, define the submission section ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=989"
  },
  {
    "text": "by calling start and end submission.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=991"
  },
  {
    "text": "Inside this section, first query the drawable object.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=994"
  },
  {
    "text": "Similar to CAMetalLayer, the drawable object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=998"
  },
  {
    "text": "contains the target texture and the information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1001"
  },
  {
    "text": "that you will need to set up the render pipeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1003"
  },
  {
    "text": "Now that you have your drawable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1007"
  },
  {
    "text": "you can get the final timing information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1009"
  },
  {
    "text": "that Compositor will use to render this frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1011"
  },
  {
    "text": "With the final timing, you can query the ar_pose.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1014"
  },
  {
    "text": "It is important to set the pose in the drawable ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1017"
  },
  {
    "text": "since it will be used by the Compositor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1019"
  },
  {
    "text": "to perform reprojection on the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1022"
  },
  {
    "text": "Here I'm getting the pose ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1024"
  },
  {
    "text": "by calling the get_ar_pose function in my engine object.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1026"
  },
  {
    "text": "But you will need to implement the contents of this function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1030"
  },
  {
    "text": "using the ARKit world tracking APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1032"
  },
  {
    "text": "The last step of the function will be to encode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1035"
  },
  {
    "text": "all the GPU work and submit the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1038"
  },
  {
    "text": "Inside the submit_frame, use the drawable ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1041"
  },
  {
    "text": "to render the contents of the frame as usual.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1043"
  },
  {
    "text": "Now that the render loop is rendering frames, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1046"
  },
  {
    "text": "it's time to make your immersive experience interactive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1048"
  },
  {
    "text": "This video shows how RecRoom using Unity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1052"
  },
  {
    "text": "is already taking advantage of the ARKit and Compositor APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1055"
  },
  {
    "text": "to add interactivity to their application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1059"
  },
  {
    "text": "There are two main input sources driving this interaction.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1062"
  },
  {
    "text": "ARKit's HandTracking is providing the hand skeleton ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1066"
  },
  {
    "text": "to render virtual hands.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1069"
  },
  {
    "text": "And pinch events from the LayerRenderer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1071"
  },
  {
    "text": "are driving the user interactions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1073"
  },
  {
    "text": "In order to make the experience interactive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1075"
  },
  {
    "text": "you'll first gather the user input ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1077"
  },
  {
    "text": "and then apply it to the contents of your scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1079"
  },
  {
    "text": "All this work will happen in the update section of the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1083"
  },
  {
    "text": "There are two main input sources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1087"
  },
  {
    "text": "the LayerRenderer and the ARKit HandTracking provider.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1089"
  },
  {
    "text": "With the LayerRenderer, you will get updates every time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1093"
  },
  {
    "text": "the application receives a pinch event.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1095"
  },
  {
    "text": "These updates are exposed in the form of spatial events.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1098"
  },
  {
    "text": "These events contains three main properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1103"
  },
  {
    "text": "The phase will tell you if the event is active, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1106"
  },
  {
    "text": "if it finished, or if it got canceled.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1109"
  },
  {
    "text": "The selection ray will allow you to determine ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1112"
  },
  {
    "text": "the content of the scene that had the attention ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1114"
  },
  {
    "text": "when the event began.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1116"
  },
  {
    "text": "And the last event property is the manipulator pose.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1118"
  },
  {
    "text": "This is the pose of the pinch ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1121"
  },
  {
    "text": "and gets updated every frame for the duration of the event.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1123"
  },
  {
    "text": "From the HandTracking API, you will be able to get skeleton ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1127"
  },
  {
    "text": "for both the left and right hands.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1131"
  },
  {
    "text": "Now, it's time to add input support in the code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1134"
  },
  {
    "text": "Before gathering the input, you will decide ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1137"
  },
  {
    "text": "if your application is rendering virtual hands ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1139"
  },
  {
    "text": "or if it uses passthrough hands.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1142"
  },
  {
    "text": "Add the upperLimbVisibility scene modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1144"
  },
  {
    "text": "to the ImmersiveSpace to make the passthrough hands ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1147"
  },
  {
    "text": "visible or hidden.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1150"
  },
  {
    "text": "To access the spatial events, go back to where you defined ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1152"
  },
  {
    "text": "the CompositorLayer render handler.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1155"
  },
  {
    "text": "Here, register a block in the layerRenderer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1158"
  },
  {
    "text": "to get updates every time there is a new spatial event.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1161"
  },
  {
    "text": "If you are writing your engine code in C, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1165"
  },
  {
    "text": "you'll map the SwiftUI spatial event to a C type.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1168"
  },
  {
    "text": "Inside the C code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1172"
  },
  {
    "text": "you can now receive the C event collection.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1174"
  },
  {
    "text": "One thing to keep in mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1177"
  },
  {
    "text": "when handling the spatial event updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1179"
  },
  {
    "text": "is that the updates get delivered in the main thread.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1181"
  },
  {
    "text": "This means that you will use some synchronization mechanism ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1184"
  },
  {
    "text": "when reading and writing the events in your engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1187"
  },
  {
    "text": "Now that the events are stored in the engine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1191"
  },
  {
    "text": "it's time to implement the gather input function.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1193"
  },
  {
    "text": "The first step is to create an object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1197"
  },
  {
    "text": "to store the current input state for this frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1198"
  },
  {
    "text": "This input state will store the events that you received ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1202"
  },
  {
    "text": "from the LayerRenderer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1205"
  },
  {
    "text": "Make sure that you are accessing your internal storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1207"
  },
  {
    "text": "in a safe way.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1209"
  },
  {
    "text": "As for the hand skeleton, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1211"
  },
  {
    "text": "you can use the hand tracking provider API from ARKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1213"
  },
  {
    "text": "to get the latest hand anchors.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1216"
  },
  {
    "text": "And now that your application has input support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1219"
  },
  {
    "text": "you have all the tools at your disposal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1222"
  },
  {
    "text": "to create fully immersive experiences on xrOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1224"
  },
  {
    "text": "To recap, with SwiftUI, you will define the application.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1227"
  },
  {
    "text": "With CompositorServices and Metal, you will set up ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1231"
  },
  {
    "text": "the render loop and display 3D content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1234"
  },
  {
    "text": "And finally, with ARKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1236"
  },
  {
    "text": "you will be able to make your experience interactive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1238"
  },
  {
    "text": "Thank you for watching! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1241"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10089/?time=1243"
  }
]