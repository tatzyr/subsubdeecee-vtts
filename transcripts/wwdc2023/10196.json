[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=0"
  },
  {
    "text": "Nick Gillett: Hi, I'm Nick Gillett, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=10"
  },
  {
    "text": "an Engineer here at Apple on the SwiftData team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=12"
  },
  {
    "text": "In this session, I'll examine in detail how applications built with SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=15"
  },
  {
    "text": "evolve to take advantage of this rich, powerful new framework. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=20"
  },
  {
    "text": "First, I'll examine how to configure persistence in an application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=24"
  },
  {
    "text": "Next, I'll talk about how to use the ModelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=29"
  },
  {
    "text": "to track and persist changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=33"
  },
  {
    "text": "Finally, I'll examine how to get the most out of SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=36"
  },
  {
    "text": "when working with objects in your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=40"
  },
  {
    "text": "I'd like to note that this session builds on the concepts and APIs introduced ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=42"
  },
  {
    "text": "in \"Meet Swift Data\" and \"Model your Schema with SwiftData\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=48"
  },
  {
    "text": "I highly recommend reviewing those sessions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=51"
  },
  {
    "text": "before continuing with this one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=54"
  },
  {
    "text": "In this talk, I'll be referencing a new sample application, SampleTrips, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=56"
  },
  {
    "text": "that we built this year to demonstrate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=62"
  },
  {
    "text": "how easy it is to build applications with SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=64"
  },
  {
    "text": "SampleTrips makes it easy to organize my ideas ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=68"
  },
  {
    "text": "about where and when I want to travel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=71"
  },
  {
    "text": "SwiftData also makes it easy to implement standard platform practices ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=74"
  },
  {
    "text": "like undo and automatically saving when a user switches applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=78"
  },
  {
    "text": "SwiftData is a new way of persisting data in applications that use Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=84"
  },
  {
    "text": "It's designed to work with the types you're already using in your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=89"
  },
  {
    "text": "like Classes and Structs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=92"
  },
  {
    "text": "At the core of this concept is the Model, described by a new macro, @Model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=95"
  },
  {
    "text": "which tells SwiftData about the types you want to persist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=100"
  },
  {
    "text": "This is the Trip class from the SampleTrips application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=104"
  },
  {
    "text": "It has a few properties to capture information about a trip ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=108"
  },
  {
    "text": "and some references to other objects used in SampleTrips. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=112"
  },
  {
    "text": "We designed SwiftData to provide a minimal distance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=116"
  },
  {
    "text": "between the code you would normally write without persistence, as I have here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=120"
  },
  {
    "text": "and the code you have to write with persistence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=124"
  },
  {
    "text": "With just a few changes, I've told SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=128"
  },
  {
    "text": "this Trip is a Model I want to persist ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=131"
  },
  {
    "text": "and described how its relationships to the BucketListItem ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=134"
  },
  {
    "text": "and LivingAccommodations should behave. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=137"
  },
  {
    "text": "Where possible, SwiftData automatically infers the structure you want to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=140"
  },
  {
    "text": "from the code you write. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=145"
  },
  {
    "text": "But SwiftData also offers a powerful set of customizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=147"
  },
  {
    "text": "to help you describe exactly how you want your data to be stored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=151"
  },
  {
    "text": "You can learn all about the power of Model in \"Model your Schema with SwiftData\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=156"
  },
  {
    "text": "These annotations to the Trip class enable it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=162"
  },
  {
    "text": "to play two important roles in SwiftData. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=165"
  },
  {
    "text": "The first is to describe the object graph of the application, called the Schema, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=168"
  },
  {
    "text": "and the second is that the Trip class will be an interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=173"
  },
  {
    "text": "that I can write code against. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=177"
  },
  {
    "text": "This duality, the ability to play both parts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=179"
  },
  {
    "text": "makes classes annotated with the @Model macro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=183"
  },
  {
    "text": "the central point of contact in applications that use SwiftData, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=186"
  },
  {
    "text": "and there is an aligned API concept to support each of these roles.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=190"
  },
  {
    "text": "The Schema is applied to a class called the ModelContainer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=196"
  },
  {
    "text": "to describe how data should be persisted.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=199"
  },
  {
    "text": "The ModelContainer consumes the Schema ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=203"
  },
  {
    "text": "to generate a database that can hold instances of the Model classes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=205"
  },
  {
    "text": "When working with instances of a Model class in code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=210"
  },
  {
    "text": "those instances are linked to a ModelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=213"
  },
  {
    "text": "which tracks and manages their state in memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=217"
  },
  {
    "text": "This duality is at the core of SwiftData ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=221"
  },
  {
    "text": "and in this section, I'll take a detailed look at the first role of the model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=224"
  },
  {
    "text": "to describe the structure of persistence ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=229"
  },
  {
    "text": "and how that works with the ModelContainer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=231"
  },
  {
    "text": "The ModelContainer is where you describe how data is stored, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=234"
  },
  {
    "text": "or persisted, on a device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=238"
  },
  {
    "text": "We can think of the ModelContainer as the bridge ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=241"
  },
  {
    "text": "between the Schema and its persistence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=244"
  },
  {
    "text": "It's where descriptions about how objects are stored, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=247"
  },
  {
    "text": "like whether they're in memory, or on disk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=250"
  },
  {
    "text": "meet the operational and evolutionary semantics of that storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=253"
  },
  {
    "text": "like versioning, migration, and graph separation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=257"
  },
  {
    "text": "Instantiating a container with a Schema is easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=261"
  },
  {
    "text": "I can provide just the type I want to work with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=265"
  },
  {
    "text": "and SwiftData will figure out the rest of the Schema for me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=267"
  },
  {
    "text": "For example, because the Trip class is related to other model types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=271"
  },
  {
    "text": "ModelContainer actually infers this Schema, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=275"
  },
  {
    "text": "even though I only passed it a single type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=278"
  },
  {
    "text": "ModelContainer has a number of other powerful initializers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=281"
  },
  {
    "text": "that are designed to grow with your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=284"
  },
  {
    "text": "to enable increasingly complex configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=286"
  },
  {
    "text": "using a class called the ModelConfiguration.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=289"
  },
  {
    "text": "The ModelConfiguration describes the persistence of a Schema. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=293"
  },
  {
    "text": "It controls where data is stored, like in memory for transient data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=297"
  },
  {
    "text": "or on disk for persistent data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=301"
  },
  {
    "text": "ModelConfiguration can use a specific file URL chosen by you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=304"
  },
  {
    "text": "or it can generate one automatically using the entitlements of your application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=309"
  },
  {
    "text": "like the group container entitlement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=313"
  },
  {
    "text": "The configuration can also describe ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=316"
  },
  {
    "text": "that a persistence file should be loaded in a read only mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=318"
  },
  {
    "text": "preventing writes to sensitive or template data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=322"
  },
  {
    "text": "And finally, applications that use more than one CloudKit container ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=325"
  },
  {
    "text": "can specify it as part of the ModelConfiguration for a Schema.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=329"
  },
  {
    "text": "Let's imagine I want to add some contact information to SampleTrips ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=334"
  },
  {
    "text": "using new Person and Address classes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=338"
  },
  {
    "text": "First, the total Schema is declared containing all of the types I want to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=341"
  },
  {
    "text": "Next, a Configuration is declared for the SampleTrips data ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=347"
  },
  {
    "text": "containing the Trip, BucketListItem, and LivingAccommodations models. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=351"
  },
  {
    "text": "It declares a URL for the file I want to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=356"
  },
  {
    "text": "to store this specific object graph's data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=358"
  },
  {
    "text": "and a container identifier for the CloudKit container I want to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=362"
  },
  {
    "text": "when syncing the SampleTrips data to CloudKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=366"
  },
  {
    "text": "Then, the models for the new Schema with Person and Address are declared ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=369"
  },
  {
    "text": "in their own configuration with a unique file URL and CloudKit container identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=374"
  },
  {
    "text": "to keep this data separate from the Trips graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=379"
  },
  {
    "text": "Finally, the Schema and configurations are combined to form the ModelContainer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=383"
  },
  {
    "text": "With the power of ModelConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=390"
  },
  {
    "text": "it's easy to describe the persistence requirements of your application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=392"
  },
  {
    "text": "no matter how complicated they may be. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=396"
  },
  {
    "text": "In addition to instantiating a container by hand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=399"
  },
  {
    "text": "SwiftUI applications can use the new modelContainer modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=402"
  },
  {
    "text": "to create the container they want to work with.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=406"
  },
  {
    "text": "The modelContainer modifier can be added to any View or Scene in an application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=409"
  },
  {
    "text": "and it supports ModelContainers from simple to powerful ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=415"
  },
  {
    "text": "and everything in between. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=418"
  },
  {
    "text": "In this section, I examined how to combine the Schema with persistence ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=422"
  },
  {
    "text": "using ModelContainer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=426"
  },
  {
    "text": "It grows with your application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=428"
  },
  {
    "text": "as you build ever more powerful features and object graphs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=429"
  },
  {
    "text": "And I demonstrated how you can use ModelConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=433"
  },
  {
    "text": "to unlock powerful persistence capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=437"
  },
  {
    "text": "As we learned in \"Meet SwiftData\", the Model and ModelContext ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=440"
  },
  {
    "text": "are two of the most frequently used concepts when writing user interfaces ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=445"
  },
  {
    "text": "or operating on model objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=449"
  },
  {
    "text": "In this section, I'll take a deep dive into how the ModelContext tracks changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=451"
  },
  {
    "text": "and persists edits through the ModelContainer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=457"
  },
  {
    "text": "When we use the modelContainer modifier in view or scene code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=460"
  },
  {
    "text": "it prepares the application's environment in a specific way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=464"
  },
  {
    "text": "The modifier binds the new modelContext key in the environment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=469"
  },
  {
    "text": "to the container's mainContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=472"
  },
  {
    "text": "The main context is a special MainActor-aligned model context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=474"
  },
  {
    "text": "intended for working with ModelObjects in scenes and views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=479"
  },
  {
    "text": "By using the model context from the environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=484"
  },
  {
    "text": "view code has easy access to the context used by the Query here ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=487"
  },
  {
    "text": "so that it can perform actions like delete here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=493"
  },
  {
    "text": "So model contexts are easy to use and access ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=498"
  },
  {
    "text": "but what do they actually do? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=502"
  },
  {
    "text": "We can think of the ModelContext as a view over the data an application manages.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=504"
  },
  {
    "text": "Data we want to work with is fetched into a model context as its used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=510"
  },
  {
    "text": "In SampleTrips, when the upcoming trips view loads the data for the list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=514"
  },
  {
    "text": "each trip object is fetched into the main context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=519"
  },
  {
    "text": "If a trip is edited, that change is recorded ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=523"
  },
  {
    "text": "by the model context as a snapshot. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=526"
  },
  {
    "text": "As other changes are made, like inserting a new Trip ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=529"
  },
  {
    "text": "or deleting an existing one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=533"
  },
  {
    "text": "the context tracks and maintains state about these changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=535"
  },
  {
    "text": "until you call \"context.save()\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=539"
  },
  {
    "text": "This means that even though the deleted trip is no longer visible in the list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=542"
  },
  {
    "text": "it still exists in the ModelContext until that delete is persisted by calling save.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=546"
  },
  {
    "text": "Once save is called, the context persists changes to the ModelContainer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=554"
  },
  {
    "text": "and clears its state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=558"
  },
  {
    "text": "If you're still referencing the objects in the context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=560"
  },
  {
    "text": "like displaying them in a list, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=563"
  },
  {
    "text": "they will exist in the context until you're finished with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=565"
  },
  {
    "text": "At which point they will be freed and the context emptied out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=568"
  },
  {
    "text": "The ModelContext works in coordination with the ModelContainer it is bound to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=572"
  },
  {
    "text": "It tracks the objects you fetch in your views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=577"
  },
  {
    "text": "and then propagates any changes when save executes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=580"
  },
  {
    "text": "ModelContext also supports features like rollback or reset ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=583"
  },
  {
    "text": "for clearing its cached state when needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=588"
  },
  {
    "text": "This makes it the ideal place to support platform features like undo and autosave.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=591"
  },
  {
    "text": "In SwiftUI applications, the modelContainer modifier has ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=598"
  },
  {
    "text": "this isUndoEnabled argument, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=601"
  },
  {
    "text": "which binds the window's undo manager to the container's mainContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=604"
  },
  {
    "text": "That means that as changes are made in the main context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=609"
  },
  {
    "text": "system gestures like three finger swipe and shake can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=613"
  },
  {
    "text": "to undo or redo changes with no additional code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=617"
  },
  {
    "text": "ModelContext automatically registers undo and redo actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=621"
  },
  {
    "text": "as changes are made to model objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=626"
  },
  {
    "text": "The modelContainer modifier uses the environment's undoManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=628"
  },
  {
    "text": "which is usually provided by the system as part of the window or window group. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=633"
  },
  {
    "text": "and because of this, system gestures like three finger swipe and shake ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=637"
  },
  {
    "text": "will automatically work in your applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=641"
  },
  {
    "text": "Another standard system feature supported by the ModelContext is Autosave. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=645"
  },
  {
    "text": "When autosave is enabled the model context will save in response to system events ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=650"
  },
  {
    "text": "like an application entering the foreground or background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=655"
  },
  {
    "text": "The main context will also periodically save as an application is used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=659"
  },
  {
    "text": "Autosave is enabled by default in applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=665"
  },
  {
    "text": "and can be disabled if desired ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=668"
  },
  {
    "text": "using the modelContainer modifier's isAutosaveEnabled argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=670"
  },
  {
    "text": "Autosave is disabled for model contexts created by hand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=675"
  },
  {
    "text": "In \"Meet SwiftData\", we learned a lot about ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=679"
  },
  {
    "text": "how to work with ModelContext in an application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=682"
  },
  {
    "text": "and how well it pairs with SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=684"
  },
  {
    "text": "But user interfaces aren't the only places ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=687"
  },
  {
    "text": "that applications need to work with model objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=690"
  },
  {
    "text": "In this section, I'll examine how SwiftData makes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=693"
  },
  {
    "text": "writing powerful, scalable code easier and safer than ever.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=696"
  },
  {
    "text": "Tasks like working with data on a background queue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=702"
  },
  {
    "text": "syncing with a remote server or other persistence mechanism, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=705"
  },
  {
    "text": "and batch processing all work with model objects, frequently in sets or graphs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=708"
  },
  {
    "text": "Many of these tasks will begin by fetching a set of objects to work with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=715"
  },
  {
    "text": "via the fetch method on a ModelContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=719"
  },
  {
    "text": "In this example, the FetchDescriptor for the Trip model tells Swift that ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=722"
  },
  {
    "text": "the trips array will be a collection of Trip objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=726"
  },
  {
    "text": "There's no casting or complicated result tuples to worry about.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=731"
  },
  {
    "text": "FetchDescriptor makes it easy to craft complicated queries ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=736"
  },
  {
    "text": "using the new Predicate macro. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=739"
  },
  {
    "text": "For example, what are all the trips that involve staying at a specific hotel? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=741"
  },
  {
    "text": "Or what trips still have some activities that I need to make reservations for? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=746"
  },
  {
    "text": "In SwiftData, complicated queries that support subqueries and joins ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=751"
  },
  {
    "text": "can all be written in pure swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=756"
  },
  {
    "text": "Predicate uses the Models you create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=759"
  },
  {
    "text": "and SwiftData uses the Schema generated from those models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=761"
  },
  {
    "text": "to translate these predicates into database queries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=764"
  },
  {
    "text": "FetchDescriptor combines the power of the new Foundation Predicate macro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=768"
  },
  {
    "text": "with the Schema to bring compiler validated queries to persistence ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=772"
  },
  {
    "text": "on Apple platforms for the first time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=776"
  },
  {
    "text": "FetchDescriptor and related classes, like SortDescriptor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=779"
  },
  {
    "text": "use generics to form the result type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=783"
  },
  {
    "text": "and tell the compiler about the properties of the model you can use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=786"
  },
  {
    "text": "There are a number of tuning options you've come to know and love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=790"
  },
  {
    "text": "like offset and limit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=793"
  },
  {
    "text": "as well as parameters for faulting and prefetching.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=795"
  },
  {
    "text": "All of this power combines in the new enumerate function on ModelContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=799"
  },
  {
    "text": "It's designed to help make the foiblesome pattern of batch traversal and enumeration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=805"
  },
  {
    "text": "implicitly efficient by encapsulating ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=810"
  },
  {
    "text": "the platform best practices at a single call site. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=812"
  },
  {
    "text": "Enumerate works great with FetchDescriptors ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=817"
  },
  {
    "text": "regardless of their complexity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=819"
  },
  {
    "text": "from simple to powerful and everything in between. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=821"
  },
  {
    "text": "Enumerate automatically implements platform best practices for traversals ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=825"
  },
  {
    "text": "like batching and mutation guards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=829"
  },
  {
    "text": "These are customizable to meet the needs of your specific use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=831"
  },
  {
    "text": "For example, the batch size that enumerate uses defaults to 5,000 objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=836"
  },
  {
    "text": "But I could change it to 10,000 to reduce I/O operations during the traversal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=841"
  },
  {
    "text": "at the expense of memory growth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=846"
  },
  {
    "text": "Heavier object graphs, like those that include images, movies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=849"
  },
  {
    "text": "or other large data blobs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=853"
  },
  {
    "text": "may choose to use a smaller batch size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=855"
  },
  {
    "text": "Decreasing the batch size reduces memory growth ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=858"
  },
  {
    "text": "but increases I/O during the enumeration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=860"
  },
  {
    "text": "Enumerate also includes mutation guard by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=864"
  },
  {
    "text": "One of the most frequent causes of performance issues with large traversals ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=868"
  },
  {
    "text": "is mutations that are trapped in the context during the enumeration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=872"
  },
  {
    "text": "allowEscapingMutations tells enumerate that this is intentional, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=876"
  },
  {
    "text": "when not set, enumerate will throw ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=881"
  },
  {
    "text": "if it discovers that the ModelContext performing the enumeration is dirty, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=884"
  },
  {
    "text": "preventing it from freeing objects that were already traversed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=889"
  },
  {
    "text": "In this session, we learned how to create powerful persistence configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=894"
  },
  {
    "text": "with Schema and ModelConfiguration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=898"
  },
  {
    "text": "We also learned how easy it is to adopt standard system practices ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=901"
  },
  {
    "text": "like undo and redo with the ModelContainer and ModelContext. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=905"
  },
  {
    "text": "And you can use SwiftData today to write safe, performant code in your project ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=910"
  },
  {
    "text": "like never before with FetchDescriptor, predicate, and enumerate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=915"
  },
  {
    "text": "I can't wait to see how you push the limits of what's possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=920"
  },
  {
    "text": "with this new framework in the months and years ahead. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=923"
  },
  {
    "text": "Thanks for watching and happy coding.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10196/?time=926"
  }
]