[
  {
    "text": "♪ Mellow instrumental hip-hop ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=0"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=3"
  },
  {
    "text": "Hello, my name is Yujin, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=10"
  },
  {
    "text": "and I'm an engineer on the RealityKit team.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=12"
  },
  {
    "text": "Today, I'm going to show you new features in RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=15"
  },
  {
    "text": "that you can use to enhance your spatial computing apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=19"
  },
  {
    "text": "Since the time we released RealityKit in 2019, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=24"
  },
  {
    "text": "We've seen apps use its rich feature set ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=27"
  },
  {
    "text": "to create some amazing experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=29"
  },
  {
    "text": "Now spatial computing adds even more features to RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=32"
  },
  {
    "text": "like portals, particle emitters, RealityView attachments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=36"
  },
  {
    "text": "and many more.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=40"
  },
  {
    "text": "In the session titled ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=42"
  },
  {
    "text": "\"Build spatial experiences with RealityKit,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=43"
  },
  {
    "text": "we learned about the basic building blocks of RealityKit: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=46"
  },
  {
    "text": "entities, which are container objects; ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=50"
  },
  {
    "text": "components, which define specific behavior on entities; ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=52"
  },
  {
    "text": "and systems, which act on both entities and components ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=56"
  },
  {
    "text": "to add functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=60"
  },
  {
    "text": "We covered the RealityView API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=63"
  },
  {
    "text": "which acts as a bridge between SwiftUI and RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=64"
  },
  {
    "text": "We also showed you how to add interaction, animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=69"
  },
  {
    "text": "and Spatial Audio to your RealityKit scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=72"
  },
  {
    "text": "If you haven't watched it already, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=75"
  },
  {
    "text": "I highly recommend that you check out that session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=77"
  },
  {
    "text": "In this session, we will cover new features in RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=81"
  },
  {
    "text": "that will help make your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=84"
  },
  {
    "text": "even more engaging and immersive.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=85"
  },
  {
    "text": "First, we will learn how to embed SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=89"
  },
  {
    "text": "into our RealityKit content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=93"
  },
  {
    "text": "using attachments in RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=94"
  },
  {
    "text": "Next, we will look at how to add video playback ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=98"
  },
  {
    "text": "within our RealityKit scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=101"
  },
  {
    "text": "Then we will learn how to use portals ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=103"
  },
  {
    "text": "to open a window to an alternate world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=106"
  },
  {
    "text": "We'll go through how to use the Particle Emitters API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=109"
  },
  {
    "text": "to enhance your scene with visual effects.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=112"
  },
  {
    "text": "Finally, we'll learn how to use anchors in RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=116"
  },
  {
    "text": "to attach 3D content to real-world locations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=119"
  },
  {
    "text": "such as a wall.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=123"
  },
  {
    "text": "Let's get started with RealityView attachments.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=125"
  },
  {
    "text": "Attachments are a useful way to embed SwiftUI content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=128"
  },
  {
    "text": "into your RealityKit scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=132"
  },
  {
    "text": "In this example app, I've used attachments ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=134"
  },
  {
    "text": "to put text labels beneath the models ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=137"
  },
  {
    "text": "of the earth and moon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=139"
  },
  {
    "text": "I've also attached a view that explains how the moon ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=141"
  },
  {
    "text": "affects tides on our ocean.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=144"
  },
  {
    "text": "Let's see how to make this in code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=147"
  },
  {
    "text": "Inside of my app, I'm using a RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=150"
  },
  {
    "text": "to render my earth model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=153"
  },
  {
    "text": "A RealityView is a view that lets us add RealityKit entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=155"
  },
  {
    "text": "Entities need to be added to a RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=160"
  },
  {
    "text": "in order to be rendered, animated, and simulated.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=162"
  },
  {
    "text": "Here we simply load an entity for the earth ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=166"
  },
  {
    "text": "and add it to the RealityView's content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=169"
  },
  {
    "text": "Let's now change our RealityView to use attachments.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=172"
  },
  {
    "text": "Attachments are views that can be placed at specific locations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=176"
  },
  {
    "text": "relative to your RealityKit content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=179"
  },
  {
    "text": "There are two parts to setting up attachments.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=182"
  },
  {
    "text": "First, there's the added parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=185"
  },
  {
    "text": "in the make closure of our RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=188"
  },
  {
    "text": "Second, there's an attachments view builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=191"
  },
  {
    "text": "that is added to our RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=193"
  },
  {
    "text": "Let's cover the attachments view builder first.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=196"
  },
  {
    "text": "Here you can provide SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=199"
  },
  {
    "text": "that you want to add to your RealityKit content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=202"
  },
  {
    "text": "In this example, I've added a text view to label the Earth.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=205"
  },
  {
    "text": "We'll also add a tag modifier to the view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=210"
  },
  {
    "text": "so that we can later identify it when our view gets delivered ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=213"
  },
  {
    "text": "to the make closure as an entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=216"
  },
  {
    "text": "This tag can be any hashable value.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=219"
  },
  {
    "text": "Here I've used the string earth_label.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=222"
  },
  {
    "text": "In the make closure of our RealityView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=226"
  },
  {
    "text": "the attachments parameter contains our views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=228"
  },
  {
    "text": "that are now represented as entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=231"
  },
  {
    "text": "To get our view in entity form, we call entity(for:) ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=234"
  },
  {
    "text": "on our attachments and pass in the same tag ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=238"
  },
  {
    "text": "that we provided in the view builder, earth_label.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=241"
  },
  {
    "text": "The result that we get is a view attachment entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=245"
  },
  {
    "text": "which we can add to our RealityKit content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=249"
  },
  {
    "text": "just like any other entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=251"
  },
  {
    "text": "To make the label appear beneath the earth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=253"
  },
  {
    "text": "we'll add the attachment as a child of our earth entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=256"
  },
  {
    "text": "and position it slightly below.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=259"
  },
  {
    "text": "We can now repeat this process for all the other attachments ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=263"
  },
  {
    "text": "we want to add using a different tag for each.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=266"
  },
  {
    "text": "Let's take a look in Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=269"
  },
  {
    "text": "In my sample app, I'll add three attachments to my RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=272"
  },
  {
    "text": "First, I'll add a label below the earth.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=277"
  },
  {
    "text": "I'll also do the same for the moon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=280"
  },
  {
    "text": "Finally, I'll add a short paragraph ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=284"
  },
  {
    "text": "explaining the role of the moon's orbit on the tides.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=286"
  },
  {
    "text": "I've styled this using a glassBackgroundEffect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=290"
  },
  {
    "text": "in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=293"
  },
  {
    "text": "In the make closure of the RealityView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=295"
  },
  {
    "text": "I'll add the corresponding entities to my content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=297"
  },
  {
    "text": "First, I'll add the earthAttachment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=301"
  },
  {
    "text": "below the earth.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=303"
  },
  {
    "text": "I'll do the same for the moon.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=306"
  },
  {
    "text": "Finally, I'll place the tides explainer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=308"
  },
  {
    "text": "to the left of my container entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=311"
  },
  {
    "text": "I'll build and run my app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=314"
  },
  {
    "text": "and we'll see the attachments that I've created ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=316"
  },
  {
    "text": "displayed next to my models.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=319"
  },
  {
    "text": "Let's recap the data flow for attachments.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=323"
  },
  {
    "text": "Attachments start off in the attachments view builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=327"
  },
  {
    "text": "in our RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=330"
  },
  {
    "text": "Here, we can provide SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=332"
  },
  {
    "text": "that we want to add to our RealityKit scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=334"
  },
  {
    "text": "In the make closure of our RealityView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=337"
  },
  {
    "text": "we get the attachments back as entities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=340"
  },
  {
    "text": "which we can then add to our scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=343"
  },
  {
    "text": "We can also update the entities inside of the update closure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=346"
  },
  {
    "text": "This closure is called when there are changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=350"
  },
  {
    "text": "to our SwiftUI view state.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=353"
  },
  {
    "text": "You can use this to respond to dynamically changing content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=356"
  },
  {
    "text": "in your RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=360"
  },
  {
    "text": "For a more detailed usage of attachments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=362"
  },
  {
    "text": "check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=364"
  },
  {
    "text": "\"Work with Reality Composer Pro content in Xcode.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=366"
  },
  {
    "text": "RealityView attachments are a useful way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=370"
  },
  {
    "text": "of adding text content in other UI elements to a scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=373"
  },
  {
    "text": "Additionally, we can also add a video to our app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=377"
  },
  {
    "text": "to make it more engaging.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=381"
  },
  {
    "text": "To do this, let's use VideoPlayerComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=382"
  },
  {
    "text": "Video player component is a new component type in RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=387"
  },
  {
    "text": "that is used for embedding video content inside of a 3D scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=391"
  },
  {
    "text": "As a reminder, components define specific behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=396"
  },
  {
    "text": "that you can attach to entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=400"
  },
  {
    "text": "To play a video using VideoPlayerComponent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=403"
  },
  {
    "text": "we'll first load a video file from our resources bundle.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=406"
  },
  {
    "text": "Then we'll use that to create an AVPlayer instance.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=410"
  },
  {
    "text": "With it, we can now create a VideoPlayerComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=414"
  },
  {
    "text": "When you attach a VideoPlayerComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=419"
  },
  {
    "text": "to an entity, a rectangular mesh ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=421"
  },
  {
    "text": "that matches the aspect ratio of the video ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=424"
  },
  {
    "text": "is automatically generated for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=426"
  },
  {
    "text": "This behavior is analogous to existing video player APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=429"
  },
  {
    "text": "such as VideoPlayer in SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=433"
  },
  {
    "text": "and AVPlayerLayer in Core Animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=436"
  },
  {
    "text": "However, since RealityKit is a 3D framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=439"
  },
  {
    "text": "your video will be represented as an entity with a mesh ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=443"
  },
  {
    "text": "so that you can move and position it in 3D space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=446"
  },
  {
    "text": "All video formats that are supported by AV Foundation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=451"
  },
  {
    "text": "will work with VideoPlayerComponent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=454"
  },
  {
    "text": "including 2D video formats and 3D video using MV-HEVC.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=457"
  },
  {
    "text": "Finally, VideoPlayerComponent will automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=463"
  },
  {
    "text": "display captions that are provided through the AVPlayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=466"
  },
  {
    "text": "To learn more about how to create your own video content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=471"
  },
  {
    "text": "including 3D videos, check out the session entitled ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=475"
  },
  {
    "text": "\"Deliver video content for spatial experiences.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=479"
  },
  {
    "text": "To add video to my RealityKit scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=483"
  },
  {
    "text": "we'll first create an AVPlayerItem ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=485"
  },
  {
    "text": "using the URL to my video asset.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=488"
  },
  {
    "text": "We'll then create an AVPlayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=492"
  },
  {
    "text": "On the entity, we'll add a VideoPlayerComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=495"
  },
  {
    "text": "initialized with the AVPlayer that we just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=498"
  },
  {
    "text": "VideoPlayerComponent will automatically generate a mesh ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=503"
  },
  {
    "text": "that is sized based on the aspect ratio of my video.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=506"
  },
  {
    "text": "Because RealityKit works in real-world units, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=510"
  },
  {
    "text": "by default, the video will be one meter in height.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=513"
  },
  {
    "text": "To make the video a different size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=517"
  },
  {
    "text": "we can scale the entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=519"
  },
  {
    "text": "In my case, I'd like the video to be 40 centimeters tall, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=521"
  },
  {
    "text": "so we'll multiply the entity scale by 0.4.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=525"
  },
  {
    "text": "Finally, we're ready to play the video.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=530"
  },
  {
    "text": "We'll set the current item to our AVPlayerItem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=532"
  },
  {
    "text": "and then call play on the AVPlayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=535"
  },
  {
    "text": "Let's rebuild and run our app with this code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=539"
  },
  {
    "text": "I've added a Learn More button to our app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=543"
  },
  {
    "text": "which will add the video entity to our scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=545"
  },
  {
    "text": "On button click, I'll fade in the video ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=548"
  },
  {
    "text": "using an opacity component and a fromToByAnimation.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=551"
  },
  {
    "text": "For our video content, I've prepared a short clip ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=555"
  },
  {
    "text": "that explains the role of the Moon's gravitational force ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=558"
  },
  {
    "text": "on the Earth's rising tides.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=561"
  },
  {
    "text": "Let's take a look.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=564"
  },
  {
    "text": "The moon orbits our planet.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=565"
  },
  {
    "text": "Its gravitational pull exerts a powerful force on our oceans, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=568"
  },
  {
    "text": "causing it to bulge ever so slightly ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=573"
  },
  {
    "text": "towards the lunar sphere. < ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=576"
  },
  {
    "text": "VideoPlayerComponent respects the systemwide preferences ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=578"
  },
  {
    "text": "for captions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=582"
  },
  {
    "text": "Let's turn them on in the Settings app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=583"
  },
  {
    "text": "under the Accessibility section.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=585"
  },
  {
    "text": "And so it is, that twice a day, in a never-ending cycle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=589"
  },
  {
    "text": "the tides rise and fall, driven by this unceasing interplay ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=594"
  },
  {
    "text": "of earth and moon. < ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=600"
  },
  {
    "text": "VideoPlayerComponent also supports passthrough tinting.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=604"
  },
  {
    "text": "When this feature is enabled, your passthrough content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=608"
  },
  {
    "text": "is adjusted to match colors in the video.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=611"
  },
  {
    "text": "This is the same treatment that is used when watching movies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=614"
  },
  {
    "text": "and TV shows inside of the TV app on this platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=617"
  },
  {
    "text": "To use passthrough tinting, you can set ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=621"
  },
  {
    "text": "the isPassthroughTintingEnabled property to true.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=623"
  },
  {
    "text": "You can also subscribe to VideoPlayerEvents to be notified ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=628"
  },
  {
    "text": "when properties on a VideoPlayerComponent change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=632"
  },
  {
    "text": "such as the content type, viewing mode, and video size.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=635"
  },
  {
    "text": "To subscribe to events, you can call the subscribe function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=639"
  },
  {
    "text": "on your RealityViews content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=643"
  },
  {
    "text": "and specify the event type and entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=645"
  },
  {
    "text": "You can respond to events inside of the event handler closure.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=648"
  },
  {
    "text": "VideoPlayerComponent is a great addition to our 3D scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=653"
  },
  {
    "text": "So far, our app features a model of the earth and moon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=658"
  },
  {
    "text": "but I'd like to present it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=662"
  },
  {
    "text": "against a backdrop of outer space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=663"
  },
  {
    "text": "I think it would be pretty cool if we can make ourselves ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=666"
  },
  {
    "text": "a magic window in the room ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=670"
  },
  {
    "text": "that reveals the moon's orbit in outer space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=671"
  },
  {
    "text": "We can do this using a portal to render our scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=675"
  },
  {
    "text": "A portal creates an opening to a different world ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=679"
  },
  {
    "text": "that is visible through a mesh surface.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=683"
  },
  {
    "text": "Entities inside of this world use separate lighting ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=686"
  },
  {
    "text": "and are masked by the portal's geometry.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=689"
  },
  {
    "text": "This example demonstrates three distinct features ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=692"
  },
  {
    "text": "in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=695"
  },
  {
    "text": "First, a portal is used to render the scene in outer space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=696"
  },
  {
    "text": "Then a particle effect is used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=701"
  },
  {
    "text": "to decorate the rim of the portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=703"
  },
  {
    "text": "Finally, anchoring is used to place the portal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=705"
  },
  {
    "text": "on the wall of our room.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=708"
  },
  {
    "text": "Let's start with portals.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=710"
  },
  {
    "text": "To make a portal, we must first create a world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=713"
  },
  {
    "text": "To do this, we add an entity in our scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=716"
  },
  {
    "text": "that has a World component.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=719"
  },
  {
    "text": "This component marks its entity tree ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=722"
  },
  {
    "text": "as belonging to a different world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=724"
  },
  {
    "text": "Entities in a world are only visible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=726"
  },
  {
    "text": "through a portal surface.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=729"
  },
  {
    "text": "To add content to our world, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=731"
  },
  {
    "text": "we can attach entities as children of the world entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=733"
  },
  {
    "text": "Here, we'll add models for the sky, earth, and moon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=737"
  },
  {
    "text": "as well as an ImageBasedLight ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=742"
  },
  {
    "text": "to define the lighting inside of the world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=744"
  },
  {
    "text": "All descendants of the world entity will appear ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=747"
  },
  {
    "text": "only inside of this world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=749"
  },
  {
    "text": "Next, we'll make a portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=753"
  },
  {
    "text": "To do this, we add an entity with a model component.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=755"
  },
  {
    "text": "The model component contains two properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=758"
  },
  {
    "text": "a mesh and a material.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=761"
  },
  {
    "text": "For the mesh, we'll generate a circular plane ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=763"
  },
  {
    "text": "to act as the surface of the portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=766"
  },
  {
    "text": "For the material, we'll assign a new portal material ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=769"
  },
  {
    "text": "in order to make the mesh appear as a portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=772"
  },
  {
    "text": "To connect the portal with our world, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=775"
  },
  {
    "text": "we'll add a portal component to the entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=777"
  },
  {
    "text": "and set its target property to the world entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=780"
  },
  {
    "text": "This allows the portal to act as a mask ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=783"
  },
  {
    "text": "to reveal the content inside of our world.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=786"
  },
  {
    "text": "Let's see how this looks in code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=791"
  },
  {
    "text": "In our RealityView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=794"
  },
  {
    "text": "I've added calls to two functions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=795"
  },
  {
    "text": "that will implement makeWorld and makePortal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=797"
  },
  {
    "text": "In our makeWorld function, we'll create a world entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=801"
  },
  {
    "text": "and populate it with the portal's contents.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=805"
  },
  {
    "text": "In the makePortal function, we'll create a portal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=808"
  },
  {
    "text": "and link it to the world that we just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=811"
  },
  {
    "text": "Finally, we'll add both of these entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=815"
  },
  {
    "text": "to our RealityView's content.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=817"
  },
  {
    "text": "Let's dive into each of these functions.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=819"
  },
  {
    "text": "Inside of the makeWorld function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=823"
  },
  {
    "text": "we create an entity and attach a WorldComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=825"
  },
  {
    "text": "Next, we load an EnvironmentResource ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=830"
  },
  {
    "text": "to use as our ImageBasedLight.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=832"
  },
  {
    "text": "We'll apply this to the world ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=835"
  },
  {
    "text": "using the ImageBasedLight component ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=836"
  },
  {
    "text": "and ImageBasedLight ReceiverComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=839"
  },
  {
    "text": "To learn more about image-based lighting in RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=842"
  },
  {
    "text": "check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=845"
  },
  {
    "text": "\"Explore rendering for spatial computing.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=846"
  },
  {
    "text": "Next, we'll populate the world with our contents.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=851"
  },
  {
    "text": "I'll load models for the earth, moon, and sky, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=854"
  },
  {
    "text": "and add them to the world as children.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=857"
  },
  {
    "text": "Because these entities are children of the world, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=860"
  },
  {
    "text": "they will only be visible through the portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=863"
  },
  {
    "text": "Let's move on to the makePortal function.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=866"
  },
  {
    "text": "To make a portal, we first need a mesh.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=869"
  },
  {
    "text": "We'll create one by making a model component for the entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=872"
  },
  {
    "text": "To make our portal circular, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=876"
  },
  {
    "text": "we'll generate a plane with equal dimensions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=878"
  },
  {
    "text": "and a corner radius that is half the size.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=881"
  },
  {
    "text": "I'll also create a PortalMaterial ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=884"
  },
  {
    "text": "to use as a material for the ModelComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=886"
  },
  {
    "text": "Finally, we'll also attach a portal component ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=889"
  },
  {
    "text": "that is initialized with the world entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=893"
  },
  {
    "text": "that we created earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=895"
  },
  {
    "text": "This links the portal with the world ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=897"
  },
  {
    "text": "so that we can see the world's contents through the mesh.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=899"
  },
  {
    "text": "Next, let's decorate the rim of the portal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=904"
  },
  {
    "text": "with a particle effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=907"
  },
  {
    "text": "To do this, we can use the ParticleEmitterComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=909"
  },
  {
    "text": "provided in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=912"
  },
  {
    "text": "Particle emitters can be used to represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=914"
  },
  {
    "text": "many different visual effects in RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=916"
  },
  {
    "text": "such as sparks, snow, and impact effects.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=918"
  },
  {
    "text": "Particle emitters can be created either via Reality Composer Pro ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=924"
  },
  {
    "text": "or at runtime using RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=928"
  },
  {
    "text": "through the ParticleEmitterComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=931"
  },
  {
    "text": "Here, I've prepared a particle asset ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=933"
  },
  {
    "text": "using Reality Composer Pro.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=936"
  },
  {
    "text": "We can use this to decorate the portal that we created earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=938"
  },
  {
    "text": "Let's load this into our scene and modify ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=942"
  },
  {
    "text": "the particle properties at runtime using RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=945"
  },
  {
    "text": "To update the particles over time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=949"
  },
  {
    "text": "I've created a custom system ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=951"
  },
  {
    "text": "called ParticleTransitionSystem.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=954"
  },
  {
    "text": "Here, we'll use an EntityQuery ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=956"
  },
  {
    "text": "to find entities that have a ParticleEmitterComponent.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=959"
  },
  {
    "text": "Inside of the system update, we'll perform our query ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=963"
  },
  {
    "text": "and iterate over the resulting entities.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=966"
  },
  {
    "text": "On each entity, we'll call the function updateParticles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=970"
  },
  {
    "text": "which we will implement next.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=973"
  },
  {
    "text": "To learn more about custom systems in RealityKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=976"
  },
  {
    "text": "check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=979"
  },
  {
    "text": "\"Build spatial experiences with RealityKit.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=980"
  },
  {
    "text": "Inside of our updateParticles function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=985"
  },
  {
    "text": "we'll first get the ParticleEmitterComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=987"
  },
  {
    "text": "from the entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=990"
  },
  {
    "text": "The ParticleEmitterComponent contains many properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=992"
  },
  {
    "text": "that control various aspects of particle look and behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=995"
  },
  {
    "text": "Here, we'll set the lifeSpan and vortexStrength properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=999"
  },
  {
    "text": "based on the entity's scale, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1003"
  },
  {
    "text": "so that as the entity grows in size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1005"
  },
  {
    "text": "the particles start spinning faster around the portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1007"
  },
  {
    "text": "Finally, let's apply our changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1011"
  },
  {
    "text": "by assigning the component back to the entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1013"
  },
  {
    "text": "And we are set.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1016"
  },
  {
    "text": "To learn about all the different properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1018"
  },
  {
    "text": "on particle emitters, check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1020"
  },
  {
    "text": "\"Meet Reality Composer Pro.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1023"
  },
  {
    "text": "We're almost done adding the final touch to our app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1026"
  },
  {
    "text": "To finish, let's attach our portal to the wall in our room.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1030"
  },
  {
    "text": "To do this, we can use anchors in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1034"
  },
  {
    "text": "Anchors can be used to place content on walls, floors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1039"
  },
  {
    "text": "or locations relative to your head or hand.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1043"
  },
  {
    "text": "Anchors in RealityKit support two tracking modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1047"
  },
  {
    "text": ".continuous and .once.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1050"
  },
  {
    "text": "When using the continuous tracking mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1052"
  },
  {
    "text": "the anchor entity moves along with the anchor over time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1054"
  },
  {
    "text": "such as when your head moves.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1058"
  },
  {
    "text": "When using the once tracking mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1060"
  },
  {
    "text": "the anchor entity will not move after being positioned once.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1062"
  },
  {
    "text": "To listen to when an entity becomes anchored, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1067"
  },
  {
    "text": "you can subscribe to the AnchoredStateChanged event ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1069"
  },
  {
    "text": "in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1073"
  },
  {
    "text": "Note that while you can use anchors to parent entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1074"
  },
  {
    "text": "to place 3D content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1078"
  },
  {
    "text": "explicit transforms of the anchors themselves ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1079"
  },
  {
    "text": "are not visible to the app to preserve user privacy.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1082"
  },
  {
    "text": "To get access to anchor transforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1086"
  },
  {
    "text": "you will need to use ARKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1088"
  },
  {
    "text": "For more information on this, check out the session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1091"
  },
  {
    "text": "\"Meet ARKit for spatial computing.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1094"
  },
  {
    "text": "To use anchors in our app, we first need to modify our app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1098"
  },
  {
    "text": "to use an immersive space.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1101"
  },
  {
    "text": "An immersive space is a special type of container ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1103"
  },
  {
    "text": "that allows your app to render content outside of the window.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1106"
  },
  {
    "text": "To do this, we can add an ImmersiveSpace ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1110"
  },
  {
    "text": "to our SwiftUI scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1113"
  },
  {
    "text": "We'll also add an .immersionStyle modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1115"
  },
  {
    "text": "and set it to mixed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1118"
  },
  {
    "text": "Inside of the ImmersiveSpace, we can use a RealityView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1120"
  },
  {
    "text": "to place content that will be anchored.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1123"
  },
  {
    "text": "To learn more about Immersive Spaces, check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1126"
  },
  {
    "text": "\"Go beyond the window with SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1129"
  },
  {
    "text": "Inside of our RealityView, we can use an anchor entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1133"
  },
  {
    "text": "as a container for our portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1136"
  },
  {
    "text": "We initialize an anchor entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1139"
  },
  {
    "text": "with a specification of the type of surface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1141"
  },
  {
    "text": "that we would like to anchor our content on.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1143"
  },
  {
    "text": "In our case, we are looking for a vertical wall ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1146"
  },
  {
    "text": "with a minimum size of one meter by one meter.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1149"
  },
  {
    "text": "When an anchor is found that matches the specification, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1153"
  },
  {
    "text": "RealityKit will automatically attach our content to the wall.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1156"
  },
  {
    "text": "And we are finally done.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1160"
  },
  {
    "text": "When we run our app, we get a portal ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1162"
  },
  {
    "text": "that is attached to the wall.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1165"
  },
  {
    "text": "From portals and particles to anchors and attachments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1168"
  },
  {
    "text": "RealityKit provides many features ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1172"
  },
  {
    "text": "that let you build immersive experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1174"
  },
  {
    "text": "Let's summarize everything that we went over in this session.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1177"
  },
  {
    "text": "Attachments in RealityView let you embed SwiftUI content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1181"
  },
  {
    "text": "inside of your entity hierarchy so that you can ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1185"
  },
  {
    "text": "place UI elements alongside 3D elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1187"
  },
  {
    "text": "VideoPlayerComponent, portals, and particle effects let you add ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1191"
  },
  {
    "text": "dynamic elements to enhance your scene in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1195"
  },
  {
    "text": "Finally, anchors let you attach 3D content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1200"
  },
  {
    "text": "to real-world surfaces such as your floor or wall.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1203"
  },
  {
    "text": "The session \"Build spatial experiences with RealityKit\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1208"
  },
  {
    "text": "goes over key concepts like entities, components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1211"
  },
  {
    "text": "and RealityView.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1215"
  },
  {
    "text": "The session \"Work with Reality Composer Pro content in Xcode\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1217"
  },
  {
    "text": "takes you through the process of building an immersive app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1221"
  },
  {
    "text": "using Reality Composer Pro together with RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1224"
  },
  {
    "text": "I can't wait to see all the things you'll create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1228"
  },
  {
    "text": "using these new features in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1230"
  },
  {
    "text": "Thank you for watching.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1232"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10081/?time=1234"
  }
]