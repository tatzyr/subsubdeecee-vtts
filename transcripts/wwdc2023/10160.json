[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=0"
  },
  {
    "text": "person: Hello, and welcome to \"Demystify SwiftUI Performance.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=10"
  },
  {
    "text": "SwiftUI makes it easy to build complex, powerful apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=14"
  },
  {
    "text": "offering a large set of features and complex controls like lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=18"
  },
  {
    "text": "When you're just starting out and your app isn't very complex, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=22"
  },
  {
    "text": "performance issues aren't as obvious. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=25"
  },
  {
    "text": "but as your app's complexity grows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=28"
  },
  {
    "text": "performance becomes more important. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=30"
  },
  {
    "text": "Small issues can get amplified, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=32"
  },
  {
    "text": "and code that works well for a prototype ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=34"
  },
  {
    "text": "might not work as well in production. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=36"
  },
  {
    "text": "This session is all about building a mental model ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=39"
  },
  {
    "text": "for performance in SwiftUI because if you understand how ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=41"
  },
  {
    "text": "to write fast code from the beginning of the development process, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=44"
  },
  {
    "text": "you'll run into fewer issues as your app becomes more complex.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=47"
  },
  {
    "text": "Let's examine the feedback loop involved in addressing a performance problem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=52"
  },
  {
    "text": "Performance problems start with a symptom. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=56"
  },
  {
    "text": "Perhaps there's a slow navigation push, a broken animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=58"
  },
  {
    "text": "or you're seeing the spinning wait cursor on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=62"
  },
  {
    "text": "When you identify a performance problem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=65"
  },
  {
    "text": "the first step towards addressing it is to measure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=67"
  },
  {
    "text": "Once you have measured and verified that the symptom exists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=71"
  },
  {
    "text": "work on identifying its cause. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=74"
  },
  {
    "text": "This can often be one of the trickier phases of this loop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=76"
  },
  {
    "text": "because it requires an intuition about how things are supposed to work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=79"
  },
  {
    "text": "Bugs arise when your app has an incorrect assumption. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=84"
  },
  {
    "text": "This session is about helping you identify the mismatch ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=87"
  },
  {
    "text": "between your app's assumptions and reality.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=90"
  },
  {
    "text": "After identifying the root cause, fix the issue through optimization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=93"
  },
  {
    "text": "But performance problems don't end after you've found a root cause ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=97"
  },
  {
    "text": "and optimized your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=101"
  },
  {
    "text": "You need to re-measure and re-verify any fix you make to ensure ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=102"
  },
  {
    "text": "that it addresses the issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=106"
  },
  {
    "text": "This is a good practice for all bugs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=108"
  },
  {
    "text": "but it's especially important for performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=110"
  },
  {
    "text": "After you've verified that the problem is resolved, you break the loop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=113"
  },
  {
    "text": "This diagram puts this session in context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=117"
  },
  {
    "text": "Ideally, you never end up in this cycle, and you can avoid many performance issues ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=120"
  },
  {
    "text": "by writing fast code when prototyping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=124"
  },
  {
    "text": "However, it's inevitable that, as your app gets more complex, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=126"
  },
  {
    "text": "you end up with performance bugs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=130"
  },
  {
    "text": "It happens to the best of us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=132"
  },
  {
    "text": "And when you do encounter performance issues, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=134"
  },
  {
    "text": "it's good to have as many tools at your disposal to triage and fix them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=136"
  },
  {
    "text": "This session aims to make it easier to get through the loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=140"
  },
  {
    "text": "This is an advanced session, and there are some prerequisites.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=144"
  },
  {
    "text": "You should have a cursory understanding of SwiftUI identity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=148"
  },
  {
    "text": "including the difference between implicit and explicit identity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=151"
  },
  {
    "text": "It's also important to know the distinction ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=155"
  },
  {
    "text": "between view lifetime and view identity.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=158"
  },
  {
    "text": "If you don't have these prerequisites, don't fret. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=161"
  },
  {
    "text": "The \"Demystify SwiftUI\" session from WWDC21 has you covered. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=163"
  },
  {
    "text": "Today's session picks up where that session left off. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=169"
  },
  {
    "text": "Let's go over the agenda. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=173"
  },
  {
    "text": "We'll begin with an in-depth discussion of dependencies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=175"
  },
  {
    "text": "and explore the SwiftUI update process in detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=177"
  },
  {
    "text": "Next, we'll move on to a discussion of updates and how to improve the speed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=180"
  },
  {
    "text": "with which SwiftUI updates your interface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=184"
  },
  {
    "text": "And last, but definitely not least, we'll discuss identity in list and table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=186"
  },
  {
    "text": "Along the way, we'll take a peek under the hood ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=191"
  },
  {
    "text": "of SwiftUI and check out several tips and tricks to use when developing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=193"
  },
  {
    "text": "This session is primarily concerned with slow updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=197"
  },
  {
    "text": "to the view hierarchy, but is by no means an exhaustive look ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=200"
  },
  {
    "text": "at all the performance problems that you might encounter when developing an app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=203"
  },
  {
    "text": "Let's get started with Dependencies.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=206"
  },
  {
    "text": "It's been a few years since the last \"Demystify SwiftUI\" session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=209"
  },
  {
    "text": "and I've missed working on dog-themed apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=212"
  },
  {
    "text": "So continuing the theme from that session, I've been working on a new app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=215"
  },
  {
    "text": "that lets me keep track of my favorite furry friends ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=218"
  },
  {
    "text": "and set up some time to play with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=221"
  },
  {
    "text": "Here's one of the views, a table showing all of the dogs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=223"
  },
  {
    "text": "The app also has a detail view, shown here on iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=226"
  },
  {
    "text": "that shows a bigger picture of each dog, the dog's preferences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=230"
  },
  {
    "text": "and offers a button to set up some time to play. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=233"
  },
  {
    "text": "Here's the code for that same view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=237"
  },
  {
    "text": "The view takes in a dog as a parameter and also has an environment property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=239"
  },
  {
    "text": "for knowing whether it's play time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=243"
  },
  {
    "text": "As mentioned in the previous Demystify session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=245"
  },
  {
    "text": "this means the dog and the play time variables are dependencies of the view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=247"
  },
  {
    "text": "and another way to show this view is as a graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=251"
  },
  {
    "text": "Here is a basic graph representing approximately the same view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=254"
  },
  {
    "text": "Each arrow represents a view's body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=258"
  },
  {
    "text": "The dog view produces a stack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=261"
  },
  {
    "text": "And the stack has multiple children, like some text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=263"
  },
  {
    "text": "the scalable dog image, the detail view, and the button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=266"
  },
  {
    "text": "Continuing on, each of those views has children, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=270"
  },
  {
    "text": "and the graph continues until it reaches a leaf view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=273"
  },
  {
    "text": "like an image, text, or color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=275"
  },
  {
    "text": "All views ultimately resolve to a leaf view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=278"
  },
  {
    "text": "There are many leaf views in SwiftUI, so I won't be covering all of them here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=281"
  },
  {
    "text": "Check out the documentation for more information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=285"
  },
  {
    "text": "Let's go back to the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=289"
  },
  {
    "text": "Whenever I'm using the app, I can log whenever I play with one of my friends. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=291"
  },
  {
    "text": "I just finished playing fetch with Rocky here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=295"
  },
  {
    "text": "so I've noted that in the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=297"
  },
  {
    "text": "which updates the button and the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=298"
  },
  {
    "text": "Rocky's looking pretty happy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=301"
  },
  {
    "text": "but he's definitely too tired to play now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=303"
  },
  {
    "text": "When this data changes in the model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=305"
  },
  {
    "text": "SwiftUI updates this view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=307"
  },
  {
    "text": "Let's explore the update process in depth by returning to the graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=309"
  },
  {
    "text": "and looking at what happens when this change occurs.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=313"
  },
  {
    "text": "Here's our graph again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=316"
  },
  {
    "text": "This is where the previous Demystify session left off, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=317"
  },
  {
    "text": "explaining that views form a graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=319"
  },
  {
    "text": "and SwiftUI looks at dependencies when evaluating your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=321"
  },
  {
    "text": "Let's zoom in ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=324"
  },
  {
    "text": "and provide a more in-depth look at where those dependencies come from ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=326"
  },
  {
    "text": "and how you can control them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=329"
  },
  {
    "text": "Each child view is dependent on the view value that gets produced ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=332"
  },
  {
    "text": "by its ancestor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=335"
  },
  {
    "text": "But there are other forms of dependencies too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=337"
  },
  {
    "text": "Dynamic properties are a common source of dependencies as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=339"
  },
  {
    "text": "For example, the DogView reads whether it's play time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=342"
  },
  {
    "text": "from environment by using the @Environment property wrapper. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=345"
  },
  {
    "text": "Therefore, it is dependent both on the value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=348"
  },
  {
    "text": "produced by its parent and the value from the environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=351"
  },
  {
    "text": "If we visualize time on the X axis, the first step in the update process ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=355"
  },
  {
    "text": "is to produce a new value for the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=359"
  },
  {
    "text": "This value encompasses all the stored properties of the view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=362"
  },
  {
    "text": "like the dog value and the initial value of the dynamic property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=365"
  },
  {
    "text": "Next, SwiftUI updates all of the dynamic properties of the view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=369"
  },
  {
    "text": "replacing their values with the current ones from the graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=373"
  },
  {
    "text": "Finally, with the updated value, body runs to produce the view's children. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=376"
  },
  {
    "text": "Let's bring in the graph again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=381"
  },
  {
    "text": "This process recurses to update the interface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=383"
  },
  {
    "text": "only updating those views that have new values or other changed dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=386"
  },
  {
    "text": "When we mark Rocky as tired, we get a new dog-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=390"
  },
  {
    "text": "sorry, a new dog struct value, but it's still the same Rocky. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=394"
  },
  {
    "text": "Because our data is a value type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=398"
  },
  {
    "text": "a new copy of it is created when it's mutated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=400"
  },
  {
    "text": "And that results in DogView producing new content for the stack, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=403"
  },
  {
    "text": "Which updates the stack's children. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=407"
  },
  {
    "text": "I'm only focusing on the ScalableDogImage here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=409"
  },
  {
    "text": "but other views may update if they depend on the dog value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=412"
  },
  {
    "text": "ScalableDogImage ends up producing a new image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=415"
  },
  {
    "text": "Images are leaf views, so the rest of the work is done by SwiftUI from here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=419"
  },
  {
    "text": "The process then finishes, and a new rendering is produced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=424"
  },
  {
    "text": "That's how to look at the dependency graph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=428"
  },
  {
    "text": "Let's go over some tips to improve this process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=431"
  },
  {
    "text": "It's important to reduce the updates to only those that are necessary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=433"
  },
  {
    "text": "To understand when a view is updated, SwiftUI has the printChanges method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=437"
  },
  {
    "text": "This lets you print out why the SwiftUI graph evaluator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=442"
  },
  {
    "text": "called into a view's body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=445"
  },
  {
    "text": "Let's walk through an example of how to use it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=447"
  },
  {
    "text": "Here we have our scalable dog image, which contains a piece of state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=450"
  },
  {
    "text": "When we tap on the image, the state changes like so.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=454"
  },
  {
    "text": "Focusing on just the image view, if we set a breakpoint ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=461"
  },
  {
    "text": "in our view's body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=464"
  },
  {
    "text": "from the LLDB console, we can call Self._printChanges ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=466"
  },
  {
    "text": "by using the \"expression\" LLDB command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=470"
  },
  {
    "text": "printChanges is a debugging-only facility ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=473"
  },
  {
    "text": "that gives a best-effort explanation of why SwiftUI requested a view's body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=476"
  },
  {
    "text": "In this case, it's because scaleToFill changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=480"
  },
  {
    "text": "You can use printChanges to understand whether a view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=483"
  },
  {
    "text": "might have extra dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=486"
  },
  {
    "text": "For example, I'm currently running my app and debugging ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=488"
  },
  {
    "text": "and want to see if this view has an extra dependency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=490"
  },
  {
    "text": "I can add a call to printChanges to this view's body to print every time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=493"
  },
  {
    "text": "the view's body is accessed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=497"
  },
  {
    "text": "However, note that printChanges is prefixed with an underscore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=499"
  },
  {
    "text": "In this case, that means, it is never guaranteed to always exist ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=503"
  },
  {
    "text": "and may even be removed in a future release, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=506"
  },
  {
    "text": "so never submit a call to this method to the app store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=509"
  },
  {
    "text": "I'll need to remove this call later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=513"
  },
  {
    "text": "It's only meant for debugging and has a runtime performance impact. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=515"
  },
  {
    "text": "If I re-run my app and change Rocky's favorite treat, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=518"
  },
  {
    "text": "say, from a biscuit to something else, like a cucumber, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=522"
  },
  {
    "text": "I notice a log in the console from our image.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=525"
  },
  {
    "text": "It says that \"self\" changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=528"
  },
  {
    "text": "This means that the view value changed, so the scalable image view must have ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=529"
  },
  {
    "text": "some dependency on the treat, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=534"
  },
  {
    "text": "but it doesn't actually need to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=535"
  },
  {
    "text": "Focusing on the code, the view's value only has ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=538"
  },
  {
    "text": "the scaleToFill member and the dog property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=541"
  },
  {
    "text": "Since scaleToFill is a SwiftUI dynamic property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=543"
  },
  {
    "text": "it would have shown up in the change log if it had changed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=546"
  },
  {
    "text": "so \"@Self\" here means that the dog value changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=548"
  },
  {
    "text": "But looking at this view, we only care about the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=552"
  },
  {
    "text": "So we can eliminate this dependency by instead using just the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=555"
  },
  {
    "text": "And now, when I change a property of the dog ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=559"
  },
  {
    "text": "that isn't related to the image, I don't see a log.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=562"
  },
  {
    "text": "The view's dependencies are tightly scoped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=567"
  },
  {
    "text": "If you follow this technique, don't forget to remove the call to printChanges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=569"
  },
  {
    "text": "Let's update the parent view to match. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=574"
  },
  {
    "text": "Here's the code for the parent dog view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=576"
  },
  {
    "text": "I need to update the initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=578"
  },
  {
    "text": "for ScalableDogImage to take in an image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=580"
  },
  {
    "text": "like so. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=582"
  },
  {
    "text": "By extracting the ScalableDogImage out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=584"
  },
  {
    "text": "I've reduced the dependencies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=586"
  },
  {
    "text": "to only those that matter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=587"
  },
  {
    "text": "I can do the same with the header too ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=589"
  },
  {
    "text": "and extract it to its own view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=591"
  },
  {
    "text": "This has a number of benefits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=593"
  },
  {
    "text": "This code is now easier to read, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=595"
  },
  {
    "text": "and the dependencies of the DogHeader ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=597"
  },
  {
    "text": "are apparent at its use site. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=599"
  },
  {
    "text": "This technique works great for smaller views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=601"
  },
  {
    "text": "but just be careful with very large structs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=603"
  },
  {
    "text": "Not every dependency deserves to be scoped like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=605"
  },
  {
    "text": "You'll need to use your best judgement.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=608"
  },
  {
    "text": "Fewer updates means better performance when data changes in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=611"
  },
  {
    "text": "As we just explored, one way to do this is by reducing dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=615"
  },
  {
    "text": "Try reducing view values to only the data they actually depend on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=619"
  },
  {
    "text": "Another tip is to extract views to reduce dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=624"
  },
  {
    "text": "And finally, the new Observable protocol can also help with dependency scoping ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=628"
  },
  {
    "text": "by automatically limiting the dependencies to only that which is read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=632"
  },
  {
    "text": "Check out the \"Discover Observation in SwiftUI\" session for more information.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=636"
  },
  {
    "text": "That was just a quick tour of how to look at dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=641"
  },
  {
    "text": "Let's move on to talk about faster updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=644"
  },
  {
    "text": "In this section, we'll discuss how to reduce the cost of each SwiftUI update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=646"
  },
  {
    "text": "Slow SwiftUI updates can have a number of negative effects on your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=651"
  },
  {
    "text": "including reduced responsiveness, such as hangs and hitches. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=655"
  },
  {
    "text": "A hang is a delay in responding to user interaction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=658"
  },
  {
    "text": "like a view taking a long time to initially appear. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=661"
  },
  {
    "text": "The \"Analyze Hangs in Instruments\" session from WWDC2023 goes into detail ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=664"
  },
  {
    "text": "about how to use Instruments to analyze hangs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=670"
  },
  {
    "text": "including how to identify whether the hang may be caused by SwiftUI-related work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=672"
  },
  {
    "text": "A hitch is a user-perceivable animation issue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=677"
  },
  {
    "text": "such as a pause during scrolling or skipped frames of an animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=680"
  },
  {
    "text": "The root causes of hangs and hitches, especially in SwiftUI, are often related. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=684"
  },
  {
    "text": "For more information on hitches, including how the system render loop works, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=689"
  },
  {
    "text": "check out the \"Explore UI animation hitches and the render loop\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=693"
  },
  {
    "text": "tech talk video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=696"
  },
  {
    "text": "Both hangs and hitches in SwiftUI often originate from a slow update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=698"
  },
  {
    "text": "These slow updates have a number of common causes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=702"
  },
  {
    "text": "The first is expensive Dynamic Property instantiation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=705"
  },
  {
    "text": "such as allocating and initializing a state object or initializing state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=708"
  },
  {
    "text": "Another source is work done in body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=712"
  },
  {
    "text": "Make sure to check for expensive string interpolation or operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=714"
  },
  {
    "text": "like data filtering and other work inside of body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=718"
  },
  {
    "text": "It's important that body itself is as cheap as possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=720"
  },
  {
    "text": "These are all inter-related. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=724"
  },
  {
    "text": "For example, a dynamic property could be computed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=726"
  },
  {
    "text": "from a view's body, making the view expensive to evaluate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=728"
  },
  {
    "text": "Slow identification also frequently happens in a view's body. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=732"
  },
  {
    "text": "Let's start by looking at an example from the fetch app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=736"
  },
  {
    "text": "In this example, I've been working on the root view of the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=740"
  },
  {
    "text": "which has an object that I use to create the dog list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=743"
  },
  {
    "text": "Following the code highlight on this slide, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=746"
  },
  {
    "text": "accessing model.dogs in the body ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=748"
  },
  {
    "text": "lazily instantiates the object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=750"
  },
  {
    "text": "which brings us to the initializer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=752"
  },
  {
    "text": "which fetches the list of dogs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=754"
  },
  {
    "text": "As the code comment says, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=756"
  },
  {
    "text": "this could take a long time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=758"
  },
  {
    "text": "This is synchronous work.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=760"
  },
  {
    "text": "One way to fix this is by using the task modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=763"
  },
  {
    "text": "We'll first make the fetching async. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=766"
  },
  {
    "text": "I'm only showing the addition of the async keyword here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=769"
  },
  {
    "text": "Next, in the task modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=772"
  },
  {
    "text": "we'll asynchronously fetch the dog list by awaiting it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=774"
  },
  {
    "text": "That way, the app is responsive ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=778"
  },
  {
    "text": "when the expensive data loading operation occurs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=780"
  },
  {
    "text": "There are other sources of work that you might not realize ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=782"
  },
  {
    "text": "are affecting your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=785"
  },
  {
    "text": "For example, string interpolation can often be expensive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=786"
  },
  {
    "text": "so make sure to cache any strings you might need to frequently use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=789"
  },
  {
    "text": "Similarly, looking up values from bundles can be expensive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=793"
  },
  {
    "text": "And of course, any heap allocation, such as for a class-bound type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=797"
  },
  {
    "text": "can add up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=800"
  },
  {
    "text": "Let's move on to lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=802"
  },
  {
    "text": "List and Table support rich features beyond a simple layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=804"
  },
  {
    "text": "adding selection, swipe actions, reordering support, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=808"
  },
  {
    "text": "These are complex, advanced controls, and understanding identity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=812"
  },
  {
    "text": "is critical to ensuring they perform well in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=816"
  },
  {
    "text": "In this section, I'll discuss identity in list and table ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=819"
  },
  {
    "text": "and demystify how to maximize update performance for these built-in components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=823"
  },
  {
    "text": "Before we dive into this subject, I'd like to touch on some improvements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=827"
  },
  {
    "text": "In macOS Sonoma and iOS 17, SwiftUI has a number of optimizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=831"
  },
  {
    "text": "under the hood for cases like filtering and scrolling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=836"
  },
  {
    "text": "These improvements can be had with minimal effort on your part, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=839"
  },
  {
    "text": "and in many cases, can result in drastically more responsive load ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=842"
  },
  {
    "text": "and update times for bigger lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=846"
  },
  {
    "text": "However, there are certain ways to construct lists and tables ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=848"
  },
  {
    "text": "that result in better performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=851"
  },
  {
    "text": "List and Table use identifiers to know what changes occurred to the data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=854"
  },
  {
    "text": "For consistency, all the IDs of List and Table are gathered eagerly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=858"
  },
  {
    "text": "Therefore, being able to quickly generate identifiers for your list ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=862"
  },
  {
    "text": "and table contents directly translates to faster load and update times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=866"
  },
  {
    "text": "Identity helps SwiftUI manage view lifetime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=870"
  },
  {
    "text": "which is crucial for incremental updates to your hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=873"
  },
  {
    "text": "A change to the identity means the view changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=877"
  },
  {
    "text": "This is important for animations and performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=880"
  },
  {
    "text": "For more information on animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=883"
  },
  {
    "text": "check out the \"Fundamentals of SwiftUI Animations\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=885"
  },
  {
    "text": "Identification performance is important because identifiers are gathered often, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=888"
  },
  {
    "text": "especially for lists and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=893"
  },
  {
    "text": "Let's walk through the list identification model.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=894"
  },
  {
    "text": "I've been hard at work on the list of dogs in the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=898"
  },
  {
    "text": "I've started with just a single row. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=900"
  },
  {
    "text": "Here's the code for the list, with a single DogCell inside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=903"
  },
  {
    "text": "The next step is to use ForEach to iterate over all the dogs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=907"
  },
  {
    "text": "This example is simple, but it's directly related to identity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=911"
  },
  {
    "text": "and adding a ForEach in a List is an important time to evaluate performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=914"
  },
  {
    "text": "To understand why, let's look at the generic signature of ForEach next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=918"
  },
  {
    "text": "This is the signature for ForEach from SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=923"
  },
  {
    "text": "ForEach maps a collection of data onto a resulting sequence of views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=926"
  },
  {
    "text": "producing explicit identity for each of its views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=930"
  },
  {
    "text": "When you use List, it needs to figure out how many rows to display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=934"
  },
  {
    "text": "as well as what the identifier for each row is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=937"
  },
  {
    "text": "Therefore, it visits the data collection up front, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=940"
  },
  {
    "text": "determining each element's ID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=943"
  },
  {
    "text": "The content closure is called to produce each view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=946"
  },
  {
    "text": "Rows are created on-demand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=949"
  },
  {
    "text": "List uses a composite of the identity ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=951"
  },
  {
    "text": "and the content to produce a list row.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=954"
  },
  {
    "text": "The rows created on-demand ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=956"
  },
  {
    "text": "correlate to the visible region, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=958"
  },
  {
    "text": "plus some system-determined buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=960"
  },
  {
    "text": "for prefetching or accessibility. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=962"
  },
  {
    "text": "As the view is scrolled, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=964"
  },
  {
    "text": "more views become extant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=965"
  },
  {
    "text": "Here's the code snippet ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=967"
  },
  {
    "text": "producing this ForEach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=969"
  },
  {
    "text": "Note here that the content is just DogCell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=971"
  },
  {
    "text": "which is itself single view, because it uses an HStack inside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=973"
  },
  {
    "text": "ForEach is critical in determining the ultimate row ID used by the List. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=978"
  },
  {
    "text": "And List needs to know all of its IDs up front. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=982"
  },
  {
    "text": "But it can only do this efficiently without visiting all the content ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=985"
  },
  {
    "text": "if the content resolves to a constant number of rows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=989"
  },
  {
    "text": "As an example, let's say we want to refactor our list ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=993"
  },
  {
    "text": "to only show those dogs that like to fetch a ball. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=996"
  },
  {
    "text": "It might be tempting to add a filter using a conditional view, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=999"
  },
  {
    "text": "Here, the number of views is variable. It's either one or zero. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1003"
  },
  {
    "text": "This is bad because it results in list needing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1008"
  },
  {
    "text": "to build all the views to retrieve the row identifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1011"
  },
  {
    "text": "because it doesn't know how many views each element resolves to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1014"
  },
  {
    "text": "The same is true if you use AnyView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1017"
  },
  {
    "text": "Here, the number of views is now completely unknown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1020"
  },
  {
    "text": "So we have the same problem as before: All rows must be created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1023"
  },
  {
    "text": "What if we move the filter into the data collection itself? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1028"
  },
  {
    "text": "Now we're back to a constant number of views per element, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1031"
  },
  {
    "text": "and only those that are needed have their row contents constructed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1034"
  },
  {
    "text": "but be careful: The inline filter here is linear over the collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1038"
  },
  {
    "text": "This might work in a prototype, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1042"
  },
  {
    "text": "but when the collection scales, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1044"
  },
  {
    "text": "this operation can quickly become expensive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1045"
  },
  {
    "text": "leading to a slow update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1048"
  },
  {
    "text": "It's better to move it out to the model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1050"
  },
  {
    "text": "Now we have the best of both worlds: The filter is cached, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1052"
  },
  {
    "text": "so it won't run every time this list is constructed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1057"
  },
  {
    "text": "and the number of views per element is constant.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1059"
  },
  {
    "text": "Here are a few tips for how to ensure your view counts are constant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1062"
  },
  {
    "text": "Note that this approach to view counts is only relevant in the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1066"
  },
  {
    "text": "of ForEach within List and Table because those components ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1069"
  },
  {
    "text": "gather their identifiers up front. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1073"
  },
  {
    "text": "As I just mentioned, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1075"
  },
  {
    "text": "avoid using AnyView and lopsided conditions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1076"
  },
  {
    "text": "You can also use an explicit stack where appropriate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1079"
  },
  {
    "text": "but note that certain modifiers like listRowBackground need ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1082"
  },
  {
    "text": "to go after the stack and not within it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1085"
  },
  {
    "text": "Finally, try to flatten nested ForEach constructions if you can. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1088"
  },
  {
    "text": "However, there is one place where nested ForEach can be valuable, sectioned lists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1092"
  },
  {
    "text": "Let's take a look at an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1097"
  },
  {
    "text": "In this example, I have a list of dogs that's sectioned ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1100"
  },
  {
    "text": "by the favorite toy of each dog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1102"
  },
  {
    "text": "I'm using ForEach to create a dynamic number of sections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1105"
  },
  {
    "text": "and each section has a dynamic number of rows within it by nesting a ForEach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1108"
  },
  {
    "text": "List will need to retrieve all of the identifiers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1113"
  },
  {
    "text": "but because we're using sections here, SwiftUI understands this construction ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1116"
  },
  {
    "text": "and ensures the list is still fast to render. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1120"
  },
  {
    "text": "Dynamic sections are a good example of when using nested ForEach is recommended. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1123"
  },
  {
    "text": "The basic equation to think about is that the row count resulting ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1128"
  },
  {
    "text": "from a ForEach in a List is equal to the number of elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1131"
  },
  {
    "text": "multiplied by the number of views produced for each element. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1135"
  },
  {
    "text": "You need to ensure the number of views per element is a constant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1138"
  },
  {
    "text": "or SwiftUI has to build the views in addition to the identifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1142"
  },
  {
    "text": "in order to identify the rows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1145"
  },
  {
    "text": "So far we've talked about List, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1148"
  },
  {
    "text": "but these rules generally apply to Table too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1150"
  },
  {
    "text": "Table uses TableRow instead of views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1152"
  },
  {
    "text": "and TableRow always resolves to a single row. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1155"
  },
  {
    "text": "Let's look at a Table example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1158"
  },
  {
    "text": "Here I have the dog table, which has a ForEach inside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1160"
  },
  {
    "text": "Because TableRow is always a single row, the number of total rows here ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1164"
  },
  {
    "text": "is just the number of elements in the dogs collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1168"
  },
  {
    "text": "This construction is so common that, new in iOS 17 and macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1172"
  },
  {
    "text": "SwiftUI provides a streamlined initializer that lets you simply write ForEach ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1176"
  },
  {
    "text": "of your data collection and creates the table rows on your behalf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1181"
  },
  {
    "text": "While this initializer is new, it back deploys to all previous ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1185"
  },
  {
    "text": "operating system versions where Table is available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1188"
  },
  {
    "text": "Not only is this construction simpler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1192"
  },
  {
    "text": "it also enforces a constant number of rows for the ForEach content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1194"
  },
  {
    "text": "which helps with identification performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1198"
  },
  {
    "text": "However, there is a semantic change I'd like to call out that's new. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1200"
  },
  {
    "text": "If you have code like this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1204"
  },
  {
    "text": "it could behave differently in the newest OS versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1206"
  },
  {
    "text": "In this example, we have a ForEach over dog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1209"
  },
  {
    "text": "which also creates a row of dog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1212"
  },
  {
    "text": "However, the dogs here don't match. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1215"
  },
  {
    "text": "The values are the dog's best friend. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1218"
  },
  {
    "text": "In iOS 16, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1220"
  },
  {
    "text": "each row became identified by its value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1222"
  },
  {
    "text": "In iOS 17, this behavior has changed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1225"
  },
  {
    "text": "to improve performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1228"
  },
  {
    "text": "The reason is, now we don't need ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1229"
  },
  {
    "text": "to identify each table row ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1231"
  },
  {
    "text": "by looking into the ForEach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1233"
  },
  {
    "text": "So this example now has the IDs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1234"
  },
  {
    "text": "of each of the dogs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1237"
  },
  {
    "text": "instead of the TableRow's value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1238"
  },
  {
    "text": "If you need to back deploy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1240"
  },
  {
    "text": "you can get the old behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1241"
  },
  {
    "text": "by either mapping over your collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1243"
  },
  {
    "text": "or by explicitly specifying ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1245"
  },
  {
    "text": "an ID key path.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1246"
  },
  {
    "text": "The basic equation to think about is that the row count resulting ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1249"
  },
  {
    "text": "from a ForEach in a List is equal to the number of elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1252"
  },
  {
    "text": "multiplied by the number of views produced for each element. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1256"
  },
  {
    "text": "In Table, this is similar, but it's the number of TableRows per element. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1259"
  },
  {
    "text": "We've covered a few tips and tricks for faster lists and tables here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1264"
  },
  {
    "text": "namely that you should ensure identifiers are cheap to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1268"
  },
  {
    "text": "and that the number of views in ForEach content is constant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1271"
  },
  {
    "text": "We've covered a lot today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1275"
  },
  {
    "text": "We started with exploring the graph to understand dependencies and optimize them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1276"
  },
  {
    "text": "Then, we looked at slow updates and how to improve responsiveness. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1281"
  },
  {
    "text": "And finally, we discussed the importance of identity with Lists and Tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1285"
  },
  {
    "text": "With the right mental models, you can easily have great performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1289"
  },
  {
    "text": "from the beginning of the development process, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1293"
  },
  {
    "text": "which lets you focus more on the details of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1294"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1298"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10160/?time=1300"
  }
]