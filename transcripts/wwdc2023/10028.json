[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1"
  },
  {
    "text": "Luca: Hi! My name is Luca and I’m an engineer on the SwiftUI team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=10"
  },
  {
    "text": "Today we are going to discuss how you can bring widgets to life ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=15"
  },
  {
    "text": "with some new, exciting capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=20"
  },
  {
    "text": "Widgets are a beloved part of the iOS and macOS experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=24"
  },
  {
    "text": "and now, with interactivity and animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=29"
  },
  {
    "text": "they are even more powerful.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=33"
  },
  {
    "text": "Interactivity allows your user to directly manipulate the data in your widget, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=39"
  },
  {
    "text": "creating powerful interaction to execute the most important actions in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=45"
  },
  {
    "text": "And animations bring widgets to life by helping users get a sense ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=52"
  },
  {
    "text": "of how the content has changed and what’s the result of their actions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=57"
  },
  {
    "text": "I’m super excited about all of these new capabilities, so let’s get started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=63"
  },
  {
    "text": "First, we are going to cover animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=69"
  },
  {
    "text": "and how easy it is to make your widget look great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=71"
  },
  {
    "text": "After that, I’m going to walk you through how to add interactivity to your widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=76"
  },
  {
    "text": "Let’s start with animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=83"
  },
  {
    "text": "Throughout this talk, we are going to use an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=85"
  },
  {
    "text": "that my friend Nils has been working on ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=88"
  },
  {
    "text": "to keep track of the caffeine intake during the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=91"
  },
  {
    "text": "It already has a widget that shows the total amount of caffeine ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=96"
  },
  {
    "text": "and the last drink I had today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=101"
  },
  {
    "text": "If I recompile my widget with the latest SDK, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=103"
  },
  {
    "text": "every time the content of the widget changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=107"
  },
  {
    "text": "the system is going to animate the transition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=111"
  },
  {
    "text": "between the entries with a default animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=114"
  },
  {
    "text": "We are going to add some tweaks here to make it look even better, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=118"
  },
  {
    "text": "but before we jump into Xcode, let me briefly talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=123"
  },
  {
    "text": "about how animations work with widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=126"
  },
  {
    "text": "In a regular SwiftUI app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=130"
  },
  {
    "text": "you use state to drive changes to your view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=132"
  },
  {
    "text": "And animations are driven by state mutations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=136"
  },
  {
    "text": "using modifiers like withAnimation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=139"
  },
  {
    "text": "But Widgets work slightly differently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=143"
  },
  {
    "text": "Widget don't have state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=146"
  },
  {
    "text": "Instead, they create a timeline made of entries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=149"
  },
  {
    "text": "which correspond to different views rendered at specific times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=153"
  },
  {
    "text": "SwiftUI determines what is the same and what is different ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=158"
  },
  {
    "text": "between the entries, and animates the parts that have changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=162"
  },
  {
    "text": "By default, widgets get an implicit spring animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=167"
  },
  {
    "text": "and various implicit content transitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=171"
  },
  {
    "text": "but you can use all the transition, animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=174"
  },
  {
    "text": "and content transition APIs that SwiftUI provides out of the box ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=177"
  },
  {
    "text": "to customize how your widget animates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=182"
  },
  {
    "text": "I won’t go into more details about how all the animation primitives of SwiftUI work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=185"
  },
  {
    "text": "For that, there is a fantastic talk called “Explore SwiftUI Animation.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=191"
  },
  {
    "text": "Okay, time to open up Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=197"
  },
  {
    "text": "and show you how, with a few tweaks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=200"
  },
  {
    "text": "your widget can be as fancy as latte art on your morning cappuccino ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=203"
  },
  {
    "text": "and how the new Xcode Preview API can help you iterate quickly ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=208"
  },
  {
    "text": "on these animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=213"
  },
  {
    "text": "Here we have all the views that comprised my widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=217"
  },
  {
    "text": "The main view has a VStack with two views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=221"
  },
  {
    "text": "the first showing the total amount of caffeine ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=225"
  },
  {
    "text": "and the second, the last drink I had today, if present. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=229"
  },
  {
    "text": "Note how I am using the containerBackground modifier here ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=233"
  },
  {
    "text": "to define the background for my widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=237"
  },
  {
    "text": "This allows it to show up in all the new supported locations on the Mac and iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=241"
  },
  {
    "text": "Normally, to be able to see your widget animating, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=246"
  },
  {
    "text": "you would need to have a bunch of entries ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=249"
  },
  {
    "text": "and wait for their moment to appear on screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=252"
  },
  {
    "text": "but that can be tedious and would slow you down, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=254"
  },
  {
    "text": "but luckily we have a great solution ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=258"
  },
  {
    "text": "with the new Preview API we are introducing this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=260"
  },
  {
    "text": "I can define a new preview for a widget in systemSmall ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=264"
  },
  {
    "text": "and pass the type defining my widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=269"
  },
  {
    "text": "and now I can specify how to render a timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=275"
  },
  {
    "text": "with some entries I've defined earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=278"
  },
  {
    "text": "When I do that in the canvas, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=282"
  },
  {
    "text": "I can now see a preview of my timeline and how every entry would look like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=284"
  },
  {
    "text": "But check this out! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=290"
  },
  {
    "text": "When I click through the preview, I can see how my widget will animate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=292"
  },
  {
    "text": "when transitioning between entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=296"
  },
  {
    "text": "This is pretty cool! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=299"
  },
  {
    "text": "And this is only scratching the surface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=301"
  },
  {
    "text": "of what this new Preview API is capable of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=304"
  },
  {
    "text": "Make sure to check out the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=307"
  },
  {
    "text": "\"Build programmatic UI with Xcode Previews\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=310"
  },
  {
    "text": "to learn more about this new powerful API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=313"
  },
  {
    "text": "Okay, time to start tweaking these animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=316"
  },
  {
    "text": "The first thing I want to do is start with the text for the caffeine amount. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=320"
  },
  {
    "text": "Right now it is just cross-fading with the next value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=326"
  },
  {
    "text": "but I really want to add some drama to the value going up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=330"
  },
  {
    "text": "In this case, the view is not changing, but only the text content is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=334"
  },
  {
    "text": "and to animated that, we can use a content transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=339"
  },
  {
    "text": "And I'm going to choose add a numeric text with the value of my caffeine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=344"
  },
  {
    "text": "This is a content transition that is made specifically for important numeric value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=351"
  },
  {
    "text": "that we want to give prominence when they change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=357"
  },
  {
    "text": "I think its looking great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=362"
  },
  {
    "text": "Now, I want to focus on the view showing the last drink. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=365"
  },
  {
    "text": "I want to add a transition to emphasize that a new drink is coming in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=371"
  },
  {
    "text": "The first thing I want to do is to use the ID modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=376"
  },
  {
    "text": "to associate the identity of this view with specific log it is rendering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=381"
  },
  {
    "text": "This will inform SwiftUI that whenever this log changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=387"
  },
  {
    "text": "this is a new view and we need to transition to the new one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=391"
  },
  {
    "text": "And now I can specify a transition. I think a push will be good. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=395"
  },
  {
    "text": "From which edge? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=401"
  },
  {
    "text": "I think from bottom is a good choice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=403"
  },
  {
    "text": "Okay, you already know what to do now. Back to the preview canvas.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=409"
  },
  {
    "text": "And yeah, I like this transition from the bottom. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=417"
  },
  {
    "text": "One last tweak. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=421"
  },
  {
    "text": "I get a little jittery when I drink that much coffee, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=423"
  },
  {
    "text": "and I want that reflected with the animation curve for this transition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=426"
  },
  {
    "text": "What's great is that, like in a regular SwiftUI app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=431"
  },
  {
    "text": "I can use the animation modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=435"
  },
  {
    "text": "and choose a smooth spring with a shorter duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=440"
  },
  {
    "text": "and bind that animation to my log value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=447"
  },
  {
    "text": "And now, the animation would match my caffeination. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=452"
  },
  {
    "text": "I feel pretty good about what we have now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=456"
  },
  {
    "text": "so let's switch our attention to interactivity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=459"
  },
  {
    "text": "With interactivity, you can execute actions right from the widget! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=462"
  },
  {
    "text": "Before we jump into Xcode, I want to take a moment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=468"
  },
  {
    "text": "to discuss the architecture of how widgets work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=471"
  },
  {
    "text": "This will allow you to create a better mental model for how interactivity works. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=475"
  },
  {
    "text": "When you create a widget, you define a widget extension, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=482"
  },
  {
    "text": "which is discovered by the system and run as an independent process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=485"
  },
  {
    "text": "Widgets define a timeline provider that returns a series of entries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=492"
  },
  {
    "text": "which are effectively the widget’s model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=497"
  },
  {
    "text": "If a widget is visible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=500"
  },
  {
    "text": "the system launches the widget extension process ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=502"
  },
  {
    "text": "and asks its timeline provider for entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=505"
  },
  {
    "text": "These entries are fed back into the view builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=509"
  },
  {
    "text": "that is part of your widget configuration and used to generate a series of views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=512"
  },
  {
    "text": "based on these entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=518"
  },
  {
    "text": "After that, the system generates a representation of these views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=520"
  },
  {
    "text": "and archives it on disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=524"
  },
  {
    "text": "When its time to display a specific entry, the system decodes and renders ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=527"
  },
  {
    "text": "the archived representation of your widget in its process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=533"
  },
  {
    "text": "Let me pause for a second and reiterate this last point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=537"
  },
  {
    "text": "Your view code only runs during archiving. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=543"
  },
  {
    "text": "A separate representation of that view is rendered by the system process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=547"
  },
  {
    "text": "But if your data is not static, you might want to update those entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=552"
  },
  {
    "text": "You can do that by calling the reloadTimelines function in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=558"
  },
  {
    "text": "whenever you are updating data that is displayed by your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=563"
  },
  {
    "text": "This will repeat the process I've just described, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=568"
  },
  {
    "text": "regenerate new entries, and archive new copies of the views on disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=571"
  },
  {
    "text": "There are three important takeaways with this architecture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=577"
  },
  {
    "text": "First, when your widget is visible, your code is not running. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=581"
  },
  {
    "text": "You drive changes to the widget content by updating its timeline entries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=587"
  },
  {
    "text": "and this is also true of interactive widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=592"
  },
  {
    "text": "Typically, updates to widgets are done on a best effort basis, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=596"
  },
  {
    "text": "but importantly, reloads initiated from an interaction ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=602"
  },
  {
    "text": "are always guaranteed to occur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=607"
  },
  {
    "text": "With this out of the way, let’s look at how to add interactivity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=610"
  },
  {
    "text": "What’s great is that you can use controls that you are already familiar with, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=615"
  },
  {
    "text": "like Button and Toggle, to make part of your widget interactive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=619"
  },
  {
    "text": "But remember, since widgets are rendered in a different process, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=625"
  },
  {
    "text": "SwiftUI won’t execute your closure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=630"
  },
  {
    "text": "nor mutate your bindings, in your process space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=632"
  },
  {
    "text": "So we need a way to represent actions that can be executed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=636"
  },
  {
    "text": "by the widget extension and be invoked by the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=640"
  },
  {
    "text": "Thankfully, there is already a solution to this problem: App Intents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=645"
  },
  {
    "text": "You might have used app intents to expose actions for your app to Shortcuts or Siri. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=651"
  },
  {
    "text": "And now, the same intents can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=658"
  },
  {
    "text": "to represent the actions in your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=661"
  },
  {
    "text": "At its very core, AppIntent is a protocol that allows you to define, in code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=665"
  },
  {
    "text": "actions that can be executed by the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=671"
  },
  {
    "text": "For example, here, I’m defining an app intent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=675"
  },
  {
    "text": "to toggle a todo item in a todo app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=678"
  },
  {
    "text": "An intent defines a number of parameters as inputs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=682"
  },
  {
    "text": "and an async function called perform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=686"
  },
  {
    "text": "where you will have the business logic to run your intent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=690"
  },
  {
    "text": "App Intents are very powerful, and there is a lot more to know about them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=694"
  },
  {
    "text": "so be sure to checkout the “Dive into App Intents” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=699"
  },
  {
    "text": "and \"Explore enhancements to App Intents” sessions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=703"
  },
  {
    "text": "from WWDC22 and 23. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=707"
  },
  {
    "text": "And to support the ability to execute App Intent right from the UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=712"
  },
  {
    "text": "when you import both SwiftUI and AppIntents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=717"
  },
  {
    "text": "There is a new family of initializers on Button and Toggle ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=722"
  },
  {
    "text": "that accept an AppIntent as an argument and will execute that intent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=726"
  },
  {
    "text": "when these controls are interacted with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=732"
  },
  {
    "text": "Note that only Button and Toggle using AppIntent ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=735"
  },
  {
    "text": "are supported in interactive widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=739"
  },
  {
    "text": "Other controls won’t work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=741"
  },
  {
    "text": "And of course, those initializers work in apps as well, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=744"
  },
  {
    "text": "which is cool because you can share the app intent logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=748"
  },
  {
    "text": "between your widget and your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=752"
  },
  {
    "text": "Let’s go back to Xcode and our coffee tracker app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=755"
  },
  {
    "text": "and add some interactivity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=758"
  },
  {
    "text": "Currently, the user can log a new drink only by opening the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=761"
  },
  {
    "text": "but where interactive widget shines is as accelerator to surface ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=766"
  },
  {
    "text": "the most important actions in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=771"
  },
  {
    "text": "and for my app, this is definitely the logging of a new drink. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=774"
  },
  {
    "text": "So lets add that to a file I've already created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=780"
  },
  {
    "text": "The first thing I want to do is to define a type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=783"
  },
  {
    "text": "that conforms to AppIntent to log a new drink. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=787"
  },
  {
    "text": "We'll give it a human-readable title that can be used by the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=791"
  },
  {
    "text": "and then implement the perform requirements by logging an espresso ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=796"
  },
  {
    "text": "to our store and returning an empty intent result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=800"
  },
  {
    "text": "Something that I want to call your attention to ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=806"
  },
  {
    "text": "is that perform is an async function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=809"
  },
  {
    "text": "and you should take full advantage of it if you are doing any asynchronous work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=812"
  },
  {
    "text": "such as writing to a database ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=817"
  },
  {
    "text": "exactly like I'm doing here when I'm awaiting the log writing operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=819"
  },
  {
    "text": "As soon as your perform returns, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=824"
  },
  {
    "text": "the system will immediately initiate a reload of your widget timeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=827"
  },
  {
    "text": "giving you the opportunity to update the content of your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=832"
  },
  {
    "text": "So again, make sure to have persisted all the information necessary ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=836"
  },
  {
    "text": "to reload your updated widget before returning from perform. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=842"
  },
  {
    "text": "I've hard coded the drink to be an espresso, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=847"
  },
  {
    "text": "but, of course, we want to be able to pass the specific drink to log. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=850"
  },
  {
    "text": "To do that we can add a stored property with the @Parameter property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=855"
  },
  {
    "text": "and an initializer that populates the all parameters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=860"
  },
  {
    "text": "It is important that I use this property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=864"
  },
  {
    "text": "because only the stored properties that are annotated with it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=868"
  },
  {
    "text": "are going to be persisted and will be available ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=872"
  },
  {
    "text": "when the intent is performed in your widget extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=875"
  },
  {
    "text": "Before we add the button to invoke this intent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=879"
  },
  {
    "text": "I want to highlight an important ecosystem benefit of using App Intents here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=882"
  },
  {
    "text": "This app intent I've just defined is going to be available in Shortcut and Siri, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=888"
  },
  {
    "text": "so the investment in defining it here ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=894"
  },
  {
    "text": "will pay dividend to your user experience beyond widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=897"
  },
  {
    "text": "And now we are ready to add the button to the widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=902"
  },
  {
    "text": "Let's create a new view holding our buttons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=906"
  },
  {
    "text": "In this view I'm using this button initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=910"
  },
  {
    "text": "that take an app intent, so we can pass the one we just defined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=913"
  },
  {
    "text": "And let's add this view to the rest of the widget with some spacers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=918"
  },
  {
    "text": "Now we have everything in place, let's see how this is working out ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=924"
  },
  {
    "text": "on the widget by building and running. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=928"
  },
  {
    "text": "A little tip here: you can actually have directly build the target ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=932"
  },
  {
    "text": "for the widget extension and Xcode will install the widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=937"
  },
  {
    "text": "right on the home screen for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=941"
  },
  {
    "text": "My widget now has the button I've just defined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=943"
  },
  {
    "text": "If I tap on it, I can log this last cup of espresso. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=947"
  },
  {
    "text": "But there is also one additional change I want to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=952"
  },
  {
    "text": "so that my widget provides the best user experience possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=956"
  },
  {
    "text": "When your app intent finishes to perform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=960"
  },
  {
    "text": "it will cause a widget to reload its timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=963"
  },
  {
    "text": "This can introduce a small latency from the action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=966"
  },
  {
    "text": "to the resulting change in the UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=970"
  },
  {
    "text": "But this latency can become more pronounced with iPhone widget on Mac ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=972"
  },
  {
    "text": "so we are providing a solution out of the box for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=977"
  },
  {
    "text": "For example, in my widget, the value showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=981"
  },
  {
    "text": "the total amount of caffeine won't update until an updated entry arrived. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=985"
  },
  {
    "text": "We can annotate this view with the invalidatableContent modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=991"
  },
  {
    "text": "I've added this widget from my iPhone to my Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=996"
  },
  {
    "text": "Let's tap on the button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1000"
  },
  {
    "text": "The view showing the caffeine amount shows a system effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1004"
  },
  {
    "text": "to indicate that its value is invalidated until an update comes in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1008"
  },
  {
    "text": "We just saw Button in action and how with the invalidatableContent modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1014"
  },
  {
    "text": "you can help users improve the perception of latency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1019"
  },
  {
    "text": "Use this modifier judiciously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1024"
  },
  {
    "text": "You don't need to annotate every single view that might change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1026"
  },
  {
    "text": "You should use this modifier with views that are meaningful ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1031"
  },
  {
    "text": "to set the right expectation with your users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1036"
  },
  {
    "text": "Toggle goes one step further ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1039"
  },
  {
    "text": "and will optimistically update its presentation when interacted with ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1042"
  },
  {
    "text": "without having to wait for a roundtrip to the widget extension and back. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1047"
  },
  {
    "text": "This is done automatically, on your behalf, at archive time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1052"
  },
  {
    "text": "by pre-rendering the toggle style in both configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1057"
  },
  {
    "text": "Make sure, if you define your own toggle style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1062"
  },
  {
    "text": "to check the configuration isOn property from the style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1066"
  },
  {
    "text": "and use that to switch the appearance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1070"
  },
  {
    "text": "This concludes our overview for interactivity and animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1073"
  },
  {
    "text": "With animations and interactivity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1078"
  },
  {
    "text": "you have the opportunity to infuse new life into your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1081"
  },
  {
    "text": "and with widgets now in all these new locations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1085"
  },
  {
    "text": "you can bring these little, delightful interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1089"
  },
  {
    "text": "to your users wherever they are. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1092"
  },
  {
    "text": "So make sure to fine tune the animations for your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1096"
  },
  {
    "text": "with the help of the new Xcode Preview APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1101"
  },
  {
    "text": "and look out for the most important actions in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1105"
  },
  {
    "text": "and surface them in your widget, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1109"
  },
  {
    "text": "giving your user powerful interactions whenever and wherever they need them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1112"
  },
  {
    "text": "Thanks you! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1118"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10028/?time=1119"
  }
]