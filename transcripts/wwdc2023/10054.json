[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=0"
  },
  {
    "text": "Aasim: Hello, I'm Aasim Kandrikar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=10"
  },
  {
    "text": "and later, I'll be joined by Raleigh Ledet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=12"
  },
  {
    "text": "We are both Engineers on the AppKit team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=15"
  },
  {
    "text": "In this video, we are going to talk about \"What's New in AppKit\" in macOS Sonoma.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=17"
  },
  {
    "text": "We'll be covering a broad range of topics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=23"
  },
  {
    "text": "starting with new features and API enhancements to AppKit Controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=25"
  },
  {
    "text": "improvements to menus powered by a brand-new implementation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=30"
  },
  {
    "text": "changes to how app activation works on macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=36"
  },
  {
    "text": "graphics refinements and new features for images and symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=41"
  },
  {
    "text": "a new text input experience and improvements to text layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=47"
  },
  {
    "text": "in non-English languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=51"
  },
  {
    "text": "and improvements to working in Swift and SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=54"
  },
  {
    "text": "macOS Sonoma includes some exciting new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=60"
  },
  {
    "text": "and API refinements to AppKit controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=63"
  },
  {
    "text": "NSTableView and NSOutlineView provide a lot of functionality out of the box, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=66"
  },
  {
    "text": "making it a critical element in designing great Mac apps using AppKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=71"
  },
  {
    "text": "In macOS Sonoma, there is new API to present column customization menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=76"
  },
  {
    "text": "The menu allows users to toggle visibility of columns in your table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=81"
  },
  {
    "text": "Previously, this would have required a custom implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=86"
  },
  {
    "text": "to create and present this menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=89"
  },
  {
    "text": "but now you can add this in as little as three lines of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=92"
  },
  {
    "text": "Adopt the new delegate method tableView userCanChangeVisibilityOf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=96"
  },
  {
    "text": "Specify which columns the user can hide, and AppKit will handle the rest, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=101"
  },
  {
    "text": "including localizing the menu and restoring hidden column state on relaunch.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=105"
  },
  {
    "text": "The Progress type from Foundation represents work your application performs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=112"
  },
  {
    "text": "You may be using this in your apps to represent a download in progress ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=117"
  },
  {
    "text": "or images that are being processed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=121"
  },
  {
    "text": "In macOS Sonoma, you can now use the Progress type ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=123"
  },
  {
    "text": "from Foundation with NSProgressIndicator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=126"
  },
  {
    "text": "Assign the progress to the new observedProgress property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=130"
  },
  {
    "text": "and progress indicator will automatically update its value ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=133"
  },
  {
    "text": "as the progress changes, even on background threads.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=136"
  },
  {
    "text": "The Button bezel style API has been updated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=141"
  },
  {
    "text": "starting with a brand-new bezel style, automatic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=144"
  },
  {
    "text": "This bezel style will adapt to the most appropriate style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=148"
  },
  {
    "text": "depending on the contents of the button and where it is in the view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=152"
  },
  {
    "text": "For example, when the button is in a window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=157"
  },
  {
    "text": "it will pick the push button style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=160"
  },
  {
    "text": "When the button is placed in a toolbar, it will pick the toolbar style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=162"
  },
  {
    "text": "For tall content, the button will pick ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=166"
  },
  {
    "text": "the flexible push button style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=168"
  },
  {
    "text": "The automatic bezel style is now ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=171"
  },
  {
    "text": "the default bezel style ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=173"
  },
  {
    "text": "for all button initializers.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=174"
  },
  {
    "text": "The existing bezel style names have been updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=179"
  },
  {
    "text": "from descriptions on their appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=181"
  },
  {
    "text": "to modern names based on their semantic usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=184"
  },
  {
    "text": "For example, the formerly named \"Recessed\" button ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=187"
  },
  {
    "text": "is now \"Accessory Bar\" button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=190"
  },
  {
    "text": "indicating that this bezel style is most commonly used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=192"
  },
  {
    "text": "in Accessory Bars. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=195"
  },
  {
    "text": "Discouraged bezel styles are now deprecated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=197"
  },
  {
    "text": "The deprecations now refer to alternative bezel styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=200"
  },
  {
    "text": "with clear semantic usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=203"
  },
  {
    "text": "We've introduced a brand-new split view type, inspectors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=205"
  },
  {
    "text": "Inspectors are a trailing split view item that displays contextual information ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=209"
  },
  {
    "text": "about content that is currently selected in a document.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=214"
  },
  {
    "text": "Similar to sidebars, inspectors use the full height ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=218"
  },
  {
    "text": "of the window when the full size content view mask is set. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=221"
  },
  {
    "text": "The new inspectors back deploy to macOS Big Sur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=225"
  },
  {
    "text": "Adding an inspector to your app is straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=229"
  },
  {
    "text": "First, create a new split view item ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=233"
  },
  {
    "text": "using the new inspectorWithViewController initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=235"
  },
  {
    "text": "Then, add the new splitViewItem to your existing split view controller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=239"
  },
  {
    "text": "Next, update your toolbar delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=245"
  },
  {
    "text": "to include the new toggle inspector ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=247"
  },
  {
    "text": "toolbar item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=249"
  },
  {
    "text": "You generally want ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=251"
  },
  {
    "text": "the toggle inspector item ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=252"
  },
  {
    "text": "to be placed over the inspector ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=253"
  },
  {
    "text": "on the trailing edge of the window. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=255"
  },
  {
    "text": "To do so, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=258"
  },
  {
    "text": "add the new inspector tracking separator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=259"
  },
  {
    "text": "and a flexible space ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=261"
  },
  {
    "text": "before your toggle inspector item.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=263"
  },
  {
    "text": "We've brought some improvements to NSPopover. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=266"
  },
  {
    "text": "First, we've added support for anchoring popovers from toolbar items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=269"
  },
  {
    "text": "We've also added a way to support full size popover content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=274"
  },
  {
    "text": "so your views fill the entire popover bounds.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=277"
  },
  {
    "text": "I'll start with toolbar anchoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=281"
  },
  {
    "text": "There is a new method to present your popover relative to a toolbar item.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=283"
  },
  {
    "text": "When the toolbar item is in the overflow menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=288"
  },
  {
    "text": "the popover gracefully appears anchored to the overflow chevron.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=290"
  },
  {
    "text": "Next, popover content can now extend into the popover chevron. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=296"
  },
  {
    "text": "If you had a popover with a colored background header view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=301"
  },
  {
    "text": "it might have looked something like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=304"
  },
  {
    "text": "Notice that the color in the header background doesn't extend ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=306"
  },
  {
    "text": "into the popover chevron. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=309"
  },
  {
    "text": "To extend popover content into the chevron area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=311"
  },
  {
    "text": "set the new hasFullSizeContent property to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=315"
  },
  {
    "text": "Use the safe area rect to layout content that shouldn't be ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=319"
  },
  {
    "text": "obscured inside the popover.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=322"
  },
  {
    "text": "And now I'll pass it over to Raleigh to talk about exciting changes to Menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=326"
  },
  {
    "text": "Raleigh: Thanks Aasim. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=331"
  },
  {
    "text": "Menus have been re-written to fully use Cocoa. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=332"
  },
  {
    "text": "This reduces AppKit's carbon footprint by significantly reducing memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=335"
  },
  {
    "text": "and CPU usage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=340"
  },
  {
    "text": "It also enables new features.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=341"
  },
  {
    "text": "Specifically, I'm going to cover section headers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=345"
  },
  {
    "text": "palette menus, new selection behaviors, and badges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=348"
  },
  {
    "text": "These features open up new opportunities ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=352"
  },
  {
    "text": "and will reduce the amount of code you need to write.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=354"
  },
  {
    "text": "Section headers are a new addition that aid in conveying groups ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=359"
  },
  {
    "text": "in your menu and can be created with a single line of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=362"
  },
  {
    "text": "Use the new class function, sectionHeader(title:) to create one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=366"
  },
  {
    "text": "and add it to a menu, like any other menu item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=370"
  },
  {
    "text": "In this example, three menu sections are created, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=373"
  },
  {
    "text": "each with a section header and two items.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=376"
  },
  {
    "text": "Palette menus are an exciting new feature allowing you to build menus ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=380"
  },
  {
    "text": "where the items are laid out in a horizontal series. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=384"
  },
  {
    "text": "For example, this simple color picker.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=387"
  },
  {
    "text": "You can turn any menu into a palette menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=391"
  },
  {
    "text": "by setting the menu's presentationStyle ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=393"
  },
  {
    "text": "to .palette. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=395"
  },
  {
    "text": "For each menu item, set its image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=397"
  },
  {
    "text": "For template images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=400"
  },
  {
    "text": "AppKit will automatically add ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=402"
  },
  {
    "text": "the appropriate selection tint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=403"
  },
  {
    "text": "Alternatively, you can set ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=406"
  },
  {
    "text": "the offStateImage and the onStateImage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=408"
  },
  {
    "text": "The onStateImage is used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=410"
  },
  {
    "text": "to indicate selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=412"
  },
  {
    "text": "There are a couple of selection modes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=415"
  },
  {
    "text": "you can choose from. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=417"
  },
  {
    "text": ".selectAny toggles the state of individual menu items, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=418"
  },
  {
    "text": "but will not change the state of the other items in the group. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=422"
  },
  {
    "text": ".selectOne will set the selected menu item's state to on ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=425"
  },
  {
    "text": "while setting the other members of the group's state to off. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=429"
  },
  {
    "text": "You can also get or set which items are in the on state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=433"
  },
  {
    "text": "via the selectedItems property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=437"
  },
  {
    "text": "Note: selectionMode and selectedItems work by organizing menu items ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=440"
  },
  {
    "text": "that have the same target/action pair into a logical group. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=445"
  },
  {
    "text": "When manually creating palette menu items, give each item the same target/action pair ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=448"
  },
  {
    "text": "to take advantage of the new selectionMode and selectedItems behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=453"
  },
  {
    "text": "And here's a tip: This technique is not limited to palette menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=457"
  },
  {
    "text": "It also works for menu items that have the same target/action pair ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=462"
  },
  {
    "text": "in regular menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=465"
  },
  {
    "text": "NSMenu also provides a convenience function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=468"
  },
  {
    "text": "to create common palette menus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=471"
  },
  {
    "text": "The colors array determines the number ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=473"
  },
  {
    "text": "of palette items and their tint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=475"
  },
  {
    "text": "Titles are used for accessibility, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=478"
  },
  {
    "text": "so make sure you add them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=480"
  },
  {
    "text": "The optional template parameter specifies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=483"
  },
  {
    "text": "which template image to use for tinting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=485"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=487"
  },
  {
    "text": "the flag symbol image used here.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=488"
  },
  {
    "text": "If you don't specify a template, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=492"
  },
  {
    "text": "then AppKit will default ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=494"
  },
  {
    "text": "to filled circles.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=495"
  },
  {
    "text": "There is also ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=498"
  },
  {
    "text": "an optional closure parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=499"
  },
  {
    "text": "This closure is called any time the user ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=501"
  },
  {
    "text": "toggles a menu item in the palette. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=503"
  },
  {
    "text": "Menu is passed to the closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=506"
  },
  {
    "text": "From it, you can get an array ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=508"
  },
  {
    "text": "of the menu items in the on state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=510"
  },
  {
    "text": "with the selectedItems property.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=512"
  },
  {
    "text": "Menu items can now be badged ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=515"
  },
  {
    "text": "in a variety of ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=517"
  },
  {
    "text": "You can use a simple string or just a count.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=519"
  },
  {
    "text": "There are also three specialized count badges: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=524"
  },
  {
    "text": "Newitems, alerts, and updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=527"
  },
  {
    "text": "When you use one of these badges, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=530"
  },
  {
    "text": "AppKit will automatically add the appropriate text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=532"
  },
  {
    "text": "Further, AppKit will properly localize the text as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=535"
  },
  {
    "text": "In this example, Japanese. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=539"
  },
  {
    "text": "Notice, though, that you are still responsible ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=541"
  },
  {
    "text": "for localizing the menu item itself and the generic string badge variant.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=544"
  },
  {
    "text": "That's the completely new menu implementation: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=550"
  },
  {
    "text": "improved performance, badges, palettes, and section headers.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=552"
  },
  {
    "text": "In macOS Sonoma, we have introduced Cooperative App Activation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=559"
  },
  {
    "text": "Cooperative app activation reduces unexpected application switches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=563"
  },
  {
    "text": "for example, an app switch while you are in the middle of typing.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=567"
  },
  {
    "text": "There are two parts to cooperative app activation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=573"
  },
  {
    "text": "Activate is now a request, as opposed to a command. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=576"
  },
  {
    "text": "The system considers the broader context of what the user is doing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=580"
  },
  {
    "text": "to decide if the activate request is appropriate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=584"
  },
  {
    "text": "The new yield API allows an application to influence the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=587"
  },
  {
    "text": "of a future activation request.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=591"
  },
  {
    "text": "Now that activate is a request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=595"
  },
  {
    "text": "the ignoringOtherApps parameter and option are ignored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=597"
  },
  {
    "text": "As such, in macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=601"
  },
  {
    "text": "the activate(ignoringOtherApps:) function ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=603"
  },
  {
    "text": "and the activateIgnoringOtherApps option are both deprecated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=605"
  },
  {
    "text": "Replace them with the new activate APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=610"
  },
  {
    "text": "for NSApplication and NSRunningApplication.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=613"
  },
  {
    "text": "Only the active application can influence the activate context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=617"
  },
  {
    "text": "It does so by yielding to an explicit target application ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=622"
  },
  {
    "text": "before the target application is activated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=625"
  },
  {
    "text": "Then, when the target application requests activation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=628"
  },
  {
    "text": "the system will use the yield as part of the context when making its decision. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=632"
  },
  {
    "text": "If the request is honored, the active app will deactivate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=637"
  },
  {
    "text": "and the target app will activate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=641"
  },
  {
    "text": "Otherwise, the active app remains active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=643"
  },
  {
    "text": "NSWorkspace automatically handles this for you when opening URLs or applications.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=647"
  },
  {
    "text": "In other cases, to manually hand activation to another application, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=654"
  },
  {
    "text": "yieldActivation to the target NSRunningApplication or bundle identifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=658"
  },
  {
    "text": "The system will use the yield context ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=664"
  },
  {
    "text": "when the target app requests activation itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=666"
  },
  {
    "text": "or is otherwise activated on its behalf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=669"
  },
  {
    "text": "That's the new cooperative app activation behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=672"
  },
  {
    "text": "We've also made some significant changes and added new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=676"
  },
  {
    "text": "to graphics and drawing in macOS Sonoma.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=679"
  },
  {
    "text": "You can now create CGPaths from NSBezierPaths and vice versa. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=683"
  },
  {
    "text": "NSBezierPath gains a new init(cgPath:) initializer and a cgPath property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=688"
  },
  {
    "text": "Initing with, setting, or getting the cgPath ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=694"
  },
  {
    "text": "always results in a copy of the path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=697"
  },
  {
    "text": "Further mutations of the NSBezierPath are not reflected in the original ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=700"
  },
  {
    "text": "or copy CGPath instances. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=704"
  },
  {
    "text": "That is, they are not toll-free bridged. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=707"
  },
  {
    "text": "This addition makes using NSBezierPath with CGPath API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=710"
  },
  {
    "text": "such as the path property on a CAShapeLayer, a single line of code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=714"
  },
  {
    "text": "You can now create a CADisplayLink object on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=720"
  },
  {
    "text": "This is the same CADisplayLink that you may be familiar with from iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=724"
  },
  {
    "text": "For those not familiar with CADisplayLink, it is a timer object that allows your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=728"
  },
  {
    "text": "to synchronize its drawing to the refresh rate of the display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=733"
  },
  {
    "text": "A directly initialized display link object is synchronized with the main display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=737"
  },
  {
    "text": "but macOS is not limited to a single display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=742"
  },
  {
    "text": "Therefore, on macOS you can get a display link object directly from an NSView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=745"
  },
  {
    "text": "NSWindow or NSScreen ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=751"
  },
  {
    "text": "with their new displayLink(target:selector:) functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=754"
  },
  {
    "text": "The best approach is to get a CADisplayLink object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=757"
  },
  {
    "text": "directly from the most specific applicable element, usually a view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=761"
  },
  {
    "text": "This is because, when created from a view or window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=767"
  },
  {
    "text": "the CADisplayLink will automatically track whatever the display or view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=770"
  },
  {
    "text": "the window is on as it moves around the desktop, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=775"
  },
  {
    "text": "including suspending itself when not on a display.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=777"
  },
  {
    "text": "In this view subclass, when startAnimating is called, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=782"
  },
  {
    "text": "with two lines of code, it creates a DisplayLink object ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=785"
  },
  {
    "text": "to call its stepAnimation function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=788"
  },
  {
    "text": "synchronized to whatever display the view is on, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=791"
  },
  {
    "text": "and adds the displayLink to the main runloop for the common modes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=794"
  },
  {
    "text": "When the animation is complete, it calls invalidate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=801"
  },
  {
    "text": "to stop the display link and remove it from all registered runloop modes.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=804"
  },
  {
    "text": "NSColor now offers five new system colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=809"
  },
  {
    "text": "for filling background shapes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=812"
  },
  {
    "text": "The fill colors provide varying level ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=815"
  },
  {
    "text": "of emphasis for shapes of various sizes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=817"
  },
  {
    "text": "Smaller shapes on the scale ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=820"
  },
  {
    "text": "of a slider track or a progress bar ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=821"
  },
  {
    "text": "background use a higher level of emphasis ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=823"
  },
  {
    "text": "to stand out, such as system fill ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=826"
  },
  {
    "text": "or secondary system fill. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=828"
  },
  {
    "text": "Larger shapes, like group boxes ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=830"
  },
  {
    "text": "and font backgrounds prefer ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=832"
  },
  {
    "text": "a more subtle level of emphasis, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=834"
  },
  {
    "text": "such as quaternary or quinary system fill. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=836"
  },
  {
    "text": "These fill colors are dynamic, so they automatically adapt ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=839"
  },
  {
    "text": "to different appearances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=842"
  },
  {
    "text": "including Increased Contrast and Dark Mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=845"
  },
  {
    "text": "If you're building custom UI elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=848"
  },
  {
    "text": "these new fill colors are a convenient way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=850"
  },
  {
    "text": "to fit in with the system design and support accessibility.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=853"
  },
  {
    "text": "NSViews clip their drawing contents to their bounds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=858"
  },
  {
    "text": "That sometimes leads to drawing not displaying the way you want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=862"
  },
  {
    "text": "like the bottom of this Hindi glyph in a FreeForm alert window.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=865"
  },
  {
    "text": "Common places this can occur is with font rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=871"
  },
  {
    "text": "shadows, or other sub-view accents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=875"
  },
  {
    "text": "like a badge or a flame on that \"hot\" item for sale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=878"
  },
  {
    "text": "There are ways to solve this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=882"
  },
  {
    "text": "For example, embed the combined views as siblings in a larger view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=884"
  },
  {
    "text": "However, each technique has its own drawbacks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=889"
  },
  {
    "text": "In this case, combining the enclosing view with a button in a simple horizontal stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=892"
  },
  {
    "text": "doesn't line up the base lines of the text by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=898"
  },
  {
    "text": "And now you have another problem to solve.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=901"
  },
  {
    "text": "There is a better way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=905"
  },
  {
    "text": "When linked on macOS Sonoma, most NSViews no longer clip ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=907"
  },
  {
    "text": "to their bounds by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=911"
  },
  {
    "text": "Hit testing remains unchanged and is determined ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=915"
  },
  {
    "text": "by the geometry of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=918"
  },
  {
    "text": "Of course, you can override hitTest to change this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=920"
  },
  {
    "text": "Now that a view may draw outside of its bounds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=923"
  },
  {
    "text": "its calculated visibleRect may also extend past its bounds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=926"
  },
  {
    "text": "Review any code that uses visibleRect and adjust accordingly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=930"
  },
  {
    "text": "This also impacts the dirtyRect parameter of the draw function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=935"
  },
  {
    "text": "Specifically, the dirtyRect is not constrained by a view's bounds.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=939"
  },
  {
    "text": "AppKit reserves the right to pass a dirtyRect that is larger ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=945"
  },
  {
    "text": "than the view's bounds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=948"
  },
  {
    "text": "AppKit also reserves the right to subdivide drawing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=950"
  },
  {
    "text": "into as many rectangles as it needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=954"
  },
  {
    "text": "What this means for you is that you should use ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=956"
  },
  {
    "text": "the dirtyRect to decide what to draw, not where to draw.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=959"
  },
  {
    "text": "This is an example of unexpected drawing results that may occur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=965"
  },
  {
    "text": "This draw override fills the passed in dirtyRect with a background color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=969"
  },
  {
    "text": "causing the fill to spill outside the view's bounds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=973"
  },
  {
    "text": "covering other UI in the window. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=976"
  },
  {
    "text": "The view isn't using the dirtyRect to draw the frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=979"
  },
  {
    "text": "Likewise, its background fill should precisely fill ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=984"
  },
  {
    "text": "what your design requires, no more, no less.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=988"
  },
  {
    "text": "Drawing outside the dirtyRect is always safe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=993"
  },
  {
    "text": "The performance benefits of the dirtyRect occur when used ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=996"
  },
  {
    "text": "to decide which parts of your data you can avoid drawing in this pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1000"
  },
  {
    "text": "Perhaps calculating the stroke paths of my name in this fancy style is expensive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1004"
  },
  {
    "text": "If the dirtyRect is just this little corner, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1010"
  },
  {
    "text": "it won't intersect with the text frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1013"
  },
  {
    "text": "so the view can avoid those expensive calculations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1015"
  },
  {
    "text": "Drawing the background and the frame are still required, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1018"
  },
  {
    "text": "but, filling the entire bounds and drawing the entire frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1022"
  },
  {
    "text": "in this pass won't affect the other already drawn portions ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1026"
  },
  {
    "text": "of the view because AppKit clips the drawing to the dirtyRect.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1029"
  },
  {
    "text": "The new NSView .clipsToBounds property ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1034"
  },
  {
    "text": "is available all the way back to OS X Mavericks 10.9. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1037"
  },
  {
    "text": "But note, on older OSes turning off .clipsToBounds may have some rough edges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1041"
  },
  {
    "text": "Test accordingly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1046"
  },
  {
    "text": "Most views will behave just fine with both clipping on and off. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1048"
  },
  {
    "text": "Some container views make their own explicit decisions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1053"
  },
  {
    "text": "NSClipView, true to its name, behaves this way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1057"
  },
  {
    "text": "There may be specific instances where you disagree ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1060"
  },
  {
    "text": "with a view's default clipping behavior and need to selectively change it.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1063"
  },
  {
    "text": "Consider on a case-by-case basis which of your own views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1068"
  },
  {
    "text": "require an explicit clipsToBounds value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1072"
  },
  {
    "text": "The right choice is the one that realizes your vision for your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1075"
  },
  {
    "text": "Now back to Aasim to talk about images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1079"
  },
  {
    "text": "Aasim: Thanks Raleigh. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1083"
  },
  {
    "text": "Symbols are an essential part of designing your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1084"
  },
  {
    "text": "In macOS Sonoma, symbols gain brand-new functionality, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1088"
  },
  {
    "text": "symbol effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1092"
  },
  {
    "text": "With symbol effects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1093"
  },
  {
    "text": "your symbols can now have effects like bounce, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1095"
  },
  {
    "text": "replacement transitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1098"
  },
  {
    "text": "and pulse animations.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1101"
  },
  {
    "text": "Symbol effects are great way to emphasize an action ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1105"
  },
  {
    "text": "that has occurred or state change in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1108"
  },
  {
    "text": "Adding a symbol effect is simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1112"
  },
  {
    "text": "First, set the imageView's image property to a symbol image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1115"
  },
  {
    "text": "Then, when you want the effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1120"
  },
  {
    "text": "simply call addSymbolEffect to the image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1122"
  },
  {
    "text": "Note that this will only work if your NSImageView uses a symbol image.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1126"
  },
  {
    "text": "For more info on using symbol effects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1132"
  },
  {
    "text": "check out the \"Animate symbols in your app\" video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1135"
  },
  {
    "text": "In macOS Ventura, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1139"
  },
  {
    "text": "we introduced support for SF Symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1140"
  },
  {
    "text": "to automatically adapt ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1142"
  },
  {
    "text": "to the user's current locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1144"
  },
  {
    "text": "Now in macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1146"
  },
  {
    "text": "your asset catalog images and symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1148"
  },
  {
    "text": "get that same ability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1150"
  },
  {
    "text": "Like SF Symbols in macOS Ventura, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1153"
  },
  {
    "text": "they follow the system locale by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1155"
  },
  {
    "text": "Use the image locale method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1159"
  },
  {
    "text": "to obtain an image with a fixed locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1161"
  },
  {
    "text": "Next, I'll talk about High Dynamic Range content, or HDR for short. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1164"
  },
  {
    "text": "HDR content can express light levels far beyond standard content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1170"
  },
  {
    "text": "macOS has supported extended dynamic range for several releases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1175"
  },
  {
    "text": "allowing you to take full advantage of displays such as the Liquid Retina XDR ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1180"
  },
  {
    "text": "in Macbook Pros and the Pro Display XDR. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1184"
  },
  {
    "text": "macOS Sonoma makes it easier than ever ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1188"
  },
  {
    "text": "to display HDR content in your apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1190"
  },
  {
    "text": "with NSImageView gaining support for HDR content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1193"
  },
  {
    "text": "Images containing HDR content will now be displayed in HDR ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1196"
  },
  {
    "text": "on Extended Dynamic Range capable hardware. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1200"
  },
  {
    "text": "To display HDR content in standard dynamic range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1204"
  },
  {
    "text": "use the preferredImageDynamicRange property to override.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1207"
  },
  {
    "text": "For more info on adopting this API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1212"
  },
  {
    "text": "check out the \"Support HDR images in your apps\" video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1215"
  },
  {
    "text": "Starting in Xcode 15, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1219"
  },
  {
    "text": "images and colors in your Asset Catalog ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1220"
  },
  {
    "text": "are automatically reflected into your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1223"
  },
  {
    "text": "as static properties on NSImage and NSColor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1225"
  },
  {
    "text": "This allows you to use clean dot notation to access the image ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1228"
  },
  {
    "text": "instead of initializing it with a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1231"
  },
  {
    "text": "The images are non-optional, so you can also remove ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1234"
  },
  {
    "text": "any force unwrapping or guard checks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1237"
  },
  {
    "text": "If you modify the Asset Catalog to remove ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1240"
  },
  {
    "text": "or rename an image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1242"
  },
  {
    "text": "the compiler will catch any mismatch with your code and produce an error ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1243"
  },
  {
    "text": "when building your apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1247"
  },
  {
    "text": "which allows you to fix it immediately, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1248"
  },
  {
    "text": "instead of catching it later at runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1250"
  },
  {
    "text": "macOS Sonoma introduces significant changes to the typing experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1254"
  },
  {
    "text": "and improvements to text layout in non-English languages.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1258"
  },
  {
    "text": "It starts with a brand-new insertion indicator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1262"
  },
  {
    "text": "that adapts to the current accent color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1265"
  },
  {
    "text": "and leaves a trailing glow as you dictate text.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1268"
  },
  {
    "text": "Next, there is now a cursor accessory ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1275"
  },
  {
    "text": "below the insertion indicator that displays key information, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1277"
  },
  {
    "text": "like input mode, dictation state, and caps lock state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1281"
  },
  {
    "text": "The accessory tracks the current insertion position and will be pinned to the bottom ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1285"
  },
  {
    "text": "of the document if the insertion position is outside the visible view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1289"
  },
  {
    "text": "Apps using standard AppKit text views will get this automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1296"
  },
  {
    "text": "If you have a custom text view, we have new API that you can adopt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1300"
  },
  {
    "text": "You can replace your custom text insertion indicator drawing ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1305"
  },
  {
    "text": "with the NSTextInsertionIndicator view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1308"
  },
  {
    "text": "Add this view as a subview on your custom text view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1311"
  },
  {
    "text": "and you will get the new insertion indicator ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1314"
  },
  {
    "text": "that is consistent across the OS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1316"
  },
  {
    "text": "Note that you will be in charge of updating the frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1319"
  },
  {
    "text": "of the insertion indicator and whether it is visible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1321"
  },
  {
    "text": "Update the displayMode property to hidden when your text view ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1325"
  },
  {
    "text": "resigns first responder to hide the indicator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1328"
  },
  {
    "text": "MacOS Sonoma features several improvements to text layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1331"
  },
  {
    "text": "for non-English languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1335"
  },
  {
    "text": "An important highlight is the changes we've made ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1337"
  },
  {
    "text": "for wrapping and hyphenation, as some languages require different rules ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1340"
  },
  {
    "text": "for line breaking, depending on the text context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1344"
  },
  {
    "text": "For example, in traditional typesetting for Korean, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1347"
  },
  {
    "text": "body text may have a line break in the middle of a word, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1350"
  },
  {
    "text": "but title text will only wrap at word boundaries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1353"
  },
  {
    "text": "Breaking within words in titles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1357"
  },
  {
    "text": "can feel jarring in Korean. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1359"
  },
  {
    "text": "In this sheet from Maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1361"
  },
  {
    "text": "the Korean word for “time” ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1363"
  },
  {
    "text": "is split between two lines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1364"
  },
  {
    "text": "macOS Sonoma will now perform different line breaking ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1366"
  },
  {
    "text": "depending on the text style font used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1370"
  },
  {
    "text": "In Korean, title and Headline text styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1372"
  },
  {
    "text": "like in this sheet will not wrap at word boundaries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1375"
  },
  {
    "text": "While the body text style may have a line break within words if appropriate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1378"
  },
  {
    "text": "Here is another example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1383"
  },
  {
    "text": "In narrow layouts, some German words can be longer than an entire line width, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1384"
  },
  {
    "text": "which can cause individual characters to spill over into the next line. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1390"
  },
  {
    "text": "This wrapping isn't ideal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1394"
  },
  {
    "text": "It looks unbalanced, and there's a component of the word-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1396"
  },
  {
    "text": "which is called a morpheme-- that's being split across lines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1399"
  },
  {
    "text": "In macOS Sonoma, if you have a title text field ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1403"
  },
  {
    "text": "with hyphenation disabled, macOS will automatically hyphenate ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1406"
  },
  {
    "text": "the text at a morpheme boundary instead of character wrapping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1409"
  },
  {
    "text": "The resulting layout is more balanced and easier to read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1413"
  },
  {
    "text": "This is a great time to adopt text styles in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1417"
  },
  {
    "text": "In macOS Sonoma, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1422"
  },
  {
    "text": "AppKit has been updated to make it easier to adopt Swift-first features ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1424"
  },
  {
    "text": "like Swift concurrency and transferable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1427"
  },
  {
    "text": "SwiftUI has also been updated to allow you to use SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1431"
  },
  {
    "text": "and modifiers in more places in your AppKit app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1435"
  },
  {
    "text": "The majority of AppKit classes are restricted to the main thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1439"
  },
  {
    "text": "Under Swift concurrency, these classes are marked as main actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1444"
  },
  {
    "text": "to generate appropriate compiler errors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1447"
  },
  {
    "text": "However, there are certain classes in AppKit such as NSColor and NSShadow ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1450"
  },
  {
    "text": "that can be safely accessed outside the main thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1455"
  },
  {
    "text": "In macOS Sonoma, these classes conform to the Sendable protocol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1458"
  },
  {
    "text": "which indicates that they can be freely transferred across actor boundaries.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1462"
  },
  {
    "text": "Transferable is a Swift protocol to describe how objects can be ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1468"
  },
  {
    "text": "serialized and deserialized. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1472"
  },
  {
    "text": "This powers features like Drag and Drop and Sharing in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1474"
  },
  {
    "text": "In macOS Sonoma NSImage, NSColor, and NSSound conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1479"
  },
  {
    "text": "to the Transferable protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1483"
  },
  {
    "text": "This makes it easier for AppKit apps to adopt features like Drag and Drop ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1486"
  },
  {
    "text": "or Sharing in SwiftUI Views.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1490"
  },
  {
    "text": "In macOS Ventura 13.3, we introduced a new property wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1493"
  },
  {
    "text": "for NSViewController, ViewLoading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1497"
  },
  {
    "text": "Use ViewLoading on properties that are initialized in loadView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1500"
  },
  {
    "text": "If these properties were previously optional, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1504"
  },
  {
    "text": "you can remove the optionality and any related checks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1507"
  },
  {
    "text": "The view controller will make sure that the property is initialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1511"
  },
  {
    "text": "by calling loadViewIfNeeded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1514"
  },
  {
    "text": "A similar property wrapper, WindowLoading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1516"
  },
  {
    "text": "is also available for properties on NSWindowController. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1519"
  },
  {
    "text": "With Xcode 15, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1523"
  },
  {
    "text": "you can now use Previews to display your AppKit views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1524"
  },
  {
    "text": "and view controllers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1527"
  },
  {
    "text": "Use the new Preview macro, provide a name, and return your view or view controller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1529"
  },
  {
    "text": "The preview will stay up to date as you make changes to your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1535"
  },
  {
    "text": "Check out the “Build programmatic UI with Xcode Previews” video for more info.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1539"
  },
  {
    "text": "NSHostingView and NSHostingController are a great way ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1547"
  },
  {
    "text": "to incrementally adopt SwiftUI into your AppKit app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1550"
  },
  {
    "text": "In macOS Sonoma, there are some new features that allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1554"
  },
  {
    "text": "to adopt SwiftUI in more places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1557"
  },
  {
    "text": "SwiftUI modifiers like toolbar and navigation title ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1560"
  },
  {
    "text": "now work on NSWindows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1563"
  },
  {
    "text": "If the hostingView is the contentView of the window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1565"
  },
  {
    "text": "SwiftUI will automatically bridge all available scene modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1568"
  },
  {
    "text": "to your NSWindow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1572"
  },
  {
    "text": "For more control, there is a new property on NSHostingView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1573"
  },
  {
    "text": "and NSHostingController, sceneBridgingOptions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1576"
  },
  {
    "text": "Using this, you can explicitly state which properties should be bridged ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1580"
  },
  {
    "text": "from your SwiftUI view to the NSWindow.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1583"
  },
  {
    "text": "That's just some of the new features for AppKit in macOS Sonoma. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1587"
  },
  {
    "text": "What's next? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1591"
  },
  {
    "text": "First, compile your apps using the macOS Sonoma SDK and audit it ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1592"
  },
  {
    "text": "to ensure that the changes to clipping and activation don't cause ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1597"
  },
  {
    "text": "any unwanted side effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1600"
  },
  {
    "text": "Next, adopt the new controls API, like the new full-height inspector ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1602"
  },
  {
    "text": "and the new table column customization API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1607"
  },
  {
    "text": "Update your app's design to take advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1610"
  },
  {
    "text": "of symbol effects in macOS Sonoma. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1612"
  },
  {
    "text": "And finally, use the new Swift focused AppKit additions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1615"
  },
  {
    "text": "like Transferable and improvements to NSHostingView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1618"
  },
  {
    "text": "to adopt SwiftUI in more places in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1621"
  },
  {
    "text": "Thanks so much for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1625"
  },
  {
    "text": "We hope you enjoy all the new features of macOS Sonoma! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1627"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10054/?time=1630"
  }
]