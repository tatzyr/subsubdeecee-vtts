[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=0"
  },
  {
    "text": "Nivash: Hello, everyone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=10"
  },
  {
    "text": "I’m Nivash Raaja Karukankaatur Murugasamy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=11"
  },
  {
    "text": "an Engineer in Core Location Frameworks team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=14"
  },
  {
    "text": "Welcome to my talk on Core Location Monitor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=16"
  },
  {
    "text": "I’m really excited to talk about our new CLMonitor API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=19"
  },
  {
    "text": "It enables you to write simple yet powerful monitoring logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=23"
  },
  {
    "text": "with just few lines of code in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=28"
  },
  {
    "text": "You just create a monitor, add conditions, and await events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=31"
  },
  {
    "text": "There it is. Hello, CLMonitor! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=36"
  },
  {
    "text": "Let’s go into the details of CLMonitor API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=39"
  },
  {
    "text": "I will begin with an overview of the CLMonitor API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=43"
  },
  {
    "text": "our new simple yet powerful way to monitor for user’s location or beacons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=48"
  },
  {
    "text": "Then, I’ll tell you about the types of conditions you can monitor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=54"
  },
  {
    "text": "and how you can add or remove them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=58"
  },
  {
    "text": "Then, I will go over monitoring records, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=62"
  },
  {
    "text": "what they contain, and how you can access them during your app’s lifecycle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=65"
  },
  {
    "text": "Followed by the steps you will need to take in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=70"
  },
  {
    "text": "if any of the monitored conditions encounter an event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=73"
  },
  {
    "text": "And finally, I’ll wrap up with some requirements and recommendations ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=77"
  },
  {
    "text": "that will help you when using CLMonitor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=81"
  },
  {
    "text": "First, let’s take a look at what a monitor is ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=85"
  },
  {
    "text": "and how you can create one for monitoring.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=88"
  },
  {
    "text": "CLMonitor is a top level Swift actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=93"
  },
  {
    "text": "and each CLMonitor instance acts as a gateway to monitoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=95"
  },
  {
    "text": "As it is an actor, it relieves you from the overhead of thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=99"
  },
  {
    "text": "and task synchronization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=103"
  },
  {
    "text": "So accessing the contents of CLMonitor or adding or removing a condition at any time ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=105"
  },
  {
    "text": "just needs to be awaited. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=111"
  },
  {
    "text": "To create a monitor, you call the monitor’s init method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=113"
  },
  {
    "text": "with an alpha-numeric string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=116"
  },
  {
    "text": "If there is no prior monitor existing with that name, a new one will be created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=118"
  },
  {
    "text": "Otherwise, the existing one will be opened. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=123"
  },
  {
    "text": "Either way, the monitor instance will be returned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=126"
  },
  {
    "text": "Note that only one instance with a given name can be open at any moment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=130"
  },
  {
    "text": "The entity that is being monitored is called a condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=136"
  },
  {
    "text": "You can add a condition to a CLMonitor instance for monitoring ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=140"
  },
  {
    "text": "and associate it with an identifier using the add method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=143"
  },
  {
    "text": "The identifier is an alphanumeric string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=148"
  },
  {
    "text": "For instance, \"Work\" in this example uniquely identifies ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=150"
  },
  {
    "text": "the record of a condition that is satisfied when the user is at work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=154"
  },
  {
    "text": "The record object and its contents will be accessible by this identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=159"
  },
  {
    "text": "and the condition will be monitored until it is removed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=163"
  },
  {
    "text": "You can remove the condition from monitoring by calling remove ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=167"
  },
  {
    "text": "with the same identifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=169"
  },
  {
    "text": "Removing a condition removes the corresponding record as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=172"
  },
  {
    "text": "Now that you know how to create a monitor instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=176"
  },
  {
    "text": "and how it relates to conditions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=179"
  },
  {
    "text": "let’s take a look at the types of conditions available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=181"
  },
  {
    "text": "and how you can create one and add it for monitoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=184"
  },
  {
    "text": "There are two types of conditions supported in iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=187"
  },
  {
    "text": "First, CircularGeographicCondition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=191"
  },
  {
    "text": "A circular geographic condition is defined by a center and a radius. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=194"
  },
  {
    "text": "The center defines the geographical location of the condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=199"
  },
  {
    "text": "The radius defines the area under which the condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=204"
  },
  {
    "text": "will be considered satisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=207"
  },
  {
    "text": "Anywhere outside of that area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=209"
  },
  {
    "text": "we will report the condition as unsatisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=211"
  },
  {
    "text": "This is similar to CLCircularRegion in iOS 16 and prior releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=214"
  },
  {
    "text": "You define a center by constructing a CLLocationCoordinate2D ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=219"
  },
  {
    "text": "with the latitude and longitude of interest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=223"
  },
  {
    "text": "Then you create the CircularGeographicCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=226"
  },
  {
    "text": "with that center and the radius of interest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=229"
  },
  {
    "text": "The other type of condition supported in iOS is BeaconIdentityCondition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=234"
  },
  {
    "text": "BeaconIdentityCondition is similar to CLBeaconIdentityConstraint ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=239"
  },
  {
    "text": "or CLBeaconRegion that you may have used in iOS 16 and earlier releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=243"
  },
  {
    "text": "If your company has multiple sites at different locations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=249"
  },
  {
    "text": "you can deploy beacons to detect in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=252"
  },
  {
    "text": "if the user is at any one of your sites, or at a specific site, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=255"
  },
  {
    "text": "or even at a specific section of a specific site.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=260"
  },
  {
    "text": "Consider Apple’s cafeterias as a simple example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=265"
  },
  {
    "text": "available in offices at multiple sites. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=268"
  },
  {
    "text": "Let's see how beacons could be deployed effectively ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=271"
  },
  {
    "text": "to enable location based behavior in an associated app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=274"
  },
  {
    "text": "And as we go, I will talk about how that app can monitor for these beacons ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=277"
  },
  {
    "text": "by using different flavors of BeaconIdentityCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=282"
  },
  {
    "text": "under different situations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=285"
  },
  {
    "text": "Let's take a brief look at what defines a beacon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=287"
  },
  {
    "text": "It contains a UUID string, a major number, and a minor number. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=291"
  },
  {
    "text": "With BeaconIdentityCondition, you can monitor for a specific beacon ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=296"
  },
  {
    "text": "by specifying all three: UUID, major, and minor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=300"
  },
  {
    "text": "Or you can wildcard to match any single beacon ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=306"
  },
  {
    "text": "from a group of beacons by specifying just UUID and major, or just UUID alone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=309"
  },
  {
    "text": "When you leave the minor or the major and minor unspecified, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=316"
  },
  {
    "text": "a beacon with any values for those properties could match. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=319"
  },
  {
    "text": "Let see how we can use this in our example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=323"
  },
  {
    "text": "We could deploy beacons at these cafeteria sites with all having the same UUID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=325"
  },
  {
    "text": "And, in the app, a BeaconIdentityCondition could be created ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=332"
  },
  {
    "text": "to monitor for this UUID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=336"
  },
  {
    "text": "Then, if a user nears one of these beacons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=338"
  },
  {
    "text": "the condition will become satisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=343"
  },
  {
    "text": "Otherwise, it will be determined as unsatisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=345"
  },
  {
    "text": "In code, you can do this ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=349"
  },
  {
    "text": "by calling the init method that specifies only the UUID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=351"
  },
  {
    "text": "Now that we have deployed beacons at the required locations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=357"
  },
  {
    "text": "you might be interested to detect if a user is at one of the specific sites. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=360"
  },
  {
    "text": "In this case, let's see how to monitor whether a user is at the Apple Park site. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=365"
  },
  {
    "text": "To achieve this, the beacons deployed at each site ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=371"
  },
  {
    "text": "will have to share a unique major number. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=375"
  },
  {
    "text": "Then, in your app, you can monitor for a BeaconIdentityCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=377"
  },
  {
    "text": "with that major and the overall UUID. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=381"
  },
  {
    "text": "The condition’s state will be determined as satisfied ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=385"
  },
  {
    "text": "only when the device is at that site ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=388"
  },
  {
    "text": "where the beacons match both UUID and major values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=391"
  },
  {
    "text": "It will remain unsatisfied at other sites. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=396"
  },
  {
    "text": "In code, you can create a BeaconIdentityCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=399"
  },
  {
    "text": "by calling the init method that specifies only UUID and major.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=403"
  },
  {
    "text": "Now you know how to monitor for all sites or a specific site. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=410"
  },
  {
    "text": "But you can also monitor for a specific section within a specific site as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=414"
  },
  {
    "text": "This can be achieved by deploying beacons at different locations-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=421"
  },
  {
    "text": "say, cuisine stations-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=425"
  },
  {
    "text": "within each site with corresponding minor values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=427"
  },
  {
    "text": "In your app, you can monitor for a BeaconIdentityCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=430"
  },
  {
    "text": "for a specific minor value along with UUID and major. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=434"
  },
  {
    "text": "Such a condition would become satisfied only when the beacon with that minor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=439"
  },
  {
    "text": "as well as the overall UUID and major is detected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=443"
  },
  {
    "text": "In code, this means creating a BeaconIdentityCondition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=447"
  },
  {
    "text": "by passing in the UUID, major, and minor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=452"
  },
  {
    "text": "When creating a BeaconIdentityCondition, use the init method that suits your need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=458"
  },
  {
    "text": "OK, now that you know how to create different types and flavors of condition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=463"
  },
  {
    "text": "let’s take a look at how you can add them for monitoring.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=468"
  },
  {
    "text": "You can add a condition for monitoring by calling the add method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=473"
  },
  {
    "text": "with an alphanumeric string called identifier on your CLMonitor instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=476"
  },
  {
    "text": "The condition would be associated with the identifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=481"
  },
  {
    "text": "If a condition is already being monitored with the given identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=485"
  },
  {
    "text": "it will be replaced with the new condition that is passed in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=489"
  },
  {
    "text": "When you add a condition, it's initial state will be unknown ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=493"
  },
  {
    "text": "until determined by Core Location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=496"
  },
  {
    "text": "There might be instances where ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=500"
  },
  {
    "text": "you are aware of the current state of the condition before you add it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=502"
  },
  {
    "text": "In those cases, you can override the default initial state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=506"
  },
  {
    "text": "by passing the state when adding for monitoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=509"
  },
  {
    "text": "In this example, let’s assume that your app deduces that ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=513"
  },
  {
    "text": "you’re not at Apple Park site and so expects the condition to be unsatisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=517"
  },
  {
    "text": "You can add \"assuming: .unsatisfied\" to your call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=523"
  },
  {
    "text": "Then, monitoring will begin with state set to unsatisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=526"
  },
  {
    "text": "But not to worry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=530"
  },
  {
    "text": "If your assumption of the state is wrong, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=532"
  },
  {
    "text": "Core Location will give you the correct state once it is determined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=534"
  },
  {
    "text": "To remove a condition from monitoring, you can call the remove method ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=538"
  },
  {
    "text": "with the identifier that was passed when the condition was added. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=542"
  },
  {
    "text": "Now you know what a condition is, what types are supported, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=547"
  },
  {
    "text": "and how to add or remove one from monitoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=551"
  },
  {
    "text": "Let’s take a detailed look at the contents of a record ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=554"
  },
  {
    "text": "and how you can get a record or all the records in a monitor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=557"
  },
  {
    "text": "to inspect at any time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=561"
  },
  {
    "text": "If you can recall from the earlier slide, when you add a condition for monitoring, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=563"
  },
  {
    "text": "Core Location creates a record and adds the condition in that record. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=568"
  },
  {
    "text": "In addition to the condition, a record contains another object called event.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=574"
  },
  {
    "text": "The event contains the state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=582"
  },
  {
    "text": "representing the current observed state of the condition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=585"
  },
  {
    "text": "whether satisfied, unsatisfied, or unknown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=588"
  },
  {
    "text": "and the date and time at which the condition encountered the state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=592"
  },
  {
    "text": "now you might wonder why there is another instance of condition in the event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=597"
  },
  {
    "text": "This is called the refinement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=603"
  },
  {
    "text": "What is it for? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=605"
  },
  {
    "text": "If you can recall from BeaconIdentityCondition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=607"
  },
  {
    "text": "your app can monitor just for UUID , ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=611"
  },
  {
    "text": "or UUID and major, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=614"
  },
  {
    "text": "or UUID along with major and minor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=616"
  },
  {
    "text": "If a condition with major and minor wildcarded becomes satisfied, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=621"
  },
  {
    "text": "that event will be delivered with the refinement populated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=625"
  },
  {
    "text": "That refinement condition will carry the UUID ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=630"
  },
  {
    "text": "but also the major and minor information of the observed beacon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=633"
  },
  {
    "text": "Then, once the condition becomes unsatisfied, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=637"
  },
  {
    "text": "the refinement will be reset to nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=640"
  },
  {
    "text": "There can be multiple instance of record ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=643"
  },
  {
    "text": "with each record uniquely addressed by the identifier passed in ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=646"
  },
  {
    "text": "when the condition was added. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=650"
  },
  {
    "text": "All the records of your monitors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=652"
  },
  {
    "text": "associating conditions with lastEvents and identifiers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=654"
  },
  {
    "text": "are stored with your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=658"
  },
  {
    "text": "This enables you to query conditions and their corresponding states ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=660"
  },
  {
    "text": "as last observed at any time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=663"
  },
  {
    "text": "Let’s see what that looks like in code.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=666"
  },
  {
    "text": "To retrieve a record associated with a condition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=669"
  },
  {
    "text": "you can call the record method with its identifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=671"
  },
  {
    "text": "If no condition is being monitored with the identifier you passed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=675"
  },
  {
    "text": "nil will be returned. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=678"
  },
  {
    "text": "You can then get the underlying monitored condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=680"
  },
  {
    "text": "by accessing the condition property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=683"
  },
  {
    "text": "And you can get the lastEvent delivered to your app for that condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=686"
  },
  {
    "text": "by accessing the lastEvent property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=691"
  },
  {
    "text": "Then, from the event, you can get the most recently observed state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=695"
  },
  {
    "text": "date, and refinement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=699"
  },
  {
    "text": "Now you know how to retrieve one record. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=702"
  },
  {
    "text": "How do you get all the monitoring records? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=705"
  },
  {
    "text": "Do you need to keep track of all the identifiers? ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=707"
  },
  {
    "text": "Well, you don’t have to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=711"
  },
  {
    "text": "We maintain the list for you in the identifiers property on your monitor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=713"
  },
  {
    "text": "You can easily iterate over it to retrieve each record and its contents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=718"
  },
  {
    "text": "Now that you know how to access the contents of a record, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=724"
  },
  {
    "text": "let’s see how to consume events as changes occur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=728"
  },
  {
    "text": "The code to receive an event can be implemented ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=732"
  },
  {
    "text": "using a simple loop wrapped in a Task. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=735"
  },
  {
    "text": "When Core Location observes a state for a monitored condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=737"
  },
  {
    "text": "which differs from the state reported in the lastEvent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=741"
  },
  {
    "text": "then Core Location will deliver a new event ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=743"
  },
  {
    "text": "through the events async sequence property on your monitor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=746"
  },
  {
    "text": "which resumes the awaiting loop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=749"
  },
  {
    "text": "The event object delivered brings you the new state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=753"
  },
  {
    "text": "and the identifier of the condition affected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=756"
  },
  {
    "text": "Or, while processing the new event, you can also use the identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=760"
  },
  {
    "text": "to get the record and the lastEvent for that condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=765"
  },
  {
    "text": "We can use that information to get more context on what has happened now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=771"
  },
  {
    "text": "There it is! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=776"
  },
  {
    "text": "Our simple greeter program is complete. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=777"
  },
  {
    "text": "Now that you know how CLMonitor works, I have some advice on how to use it best.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=781"
  },
  {
    "text": "Let's begin with three key requirements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=788"
  },
  {
    "text": "First, you can have multiple monitors with different names ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=791"
  },
  {
    "text": "to separate handling of different conditions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=796"
  },
  {
    "text": "but you must instantiate only one at time for a given name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=798"
  },
  {
    "text": "Because CLMonitor maintains the state of the conditions that it is monitoring, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=804"
  },
  {
    "text": "trying to initialize another one with the same name ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=810"
  },
  {
    "text": "could result in undesired behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=812"
  },
  {
    "text": "Second, because events can arrive unpredictably, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=815"
  },
  {
    "text": "it's best to always have a Task awaiting on your monitor’s events sequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=820"
  },
  {
    "text": "An event can only become the lastEvent of some record after you have handled it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=825"
  },
  {
    "text": "So, if a condition changes state while you’re not awaiting events, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=831"
  },
  {
    "text": "your monitor will not reflect the new state until you do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=835"
  },
  {
    "text": "Finally, if your app has been terminated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=839"
  },
  {
    "text": "when any monitored conditions encounter an event, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=843"
  },
  {
    "text": "Core Location will launch your app in the background ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=846"
  },
  {
    "text": "as long as it is authorized to receive user location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=848"
  },
  {
    "text": "That means your app needs to reinit monitor ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=851"
  },
  {
    "text": "and await events whenever it is launched ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=854"
  },
  {
    "text": "if it remains interested in the state of conditions it is monitoring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=857"
  },
  {
    "text": "One way to do this is by listening to ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=861"
  },
  {
    "text": "didFinishLaunchingWithOptions app delegate callback.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=863"
  },
  {
    "text": "As the new API results in launching behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=869"
  },
  {
    "text": "I strongly recommend using CLMonitor only from your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=872"
  },
  {
    "text": "Using it in widgets or plug-ins will launch your app instead, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=876"
  },
  {
    "text": "and complicate ensuring that only one monitor exists for a given name at a time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=881"
  },
  {
    "text": "Finally, I mentioned this earlier: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=887"
  },
  {
    "text": "conditions and their states persist, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=890"
  },
  {
    "text": "and events are generated when CLMonitor observes a change of state ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=893"
  },
  {
    "text": "in one of the conditions it is monitoring, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=898"
  },
  {
    "text": "so I strongly recommend looking at those states as CLMonitor represents them ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=900"
  },
  {
    "text": "rather than maintaining them in your own table ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=906"
  },
  {
    "text": "then get out of sync with arriving events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=909"
  },
  {
    "text": "That said, some applications, such as SwiftUI visualization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=912"
  },
  {
    "text": "may require a separate representation be kept. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=917"
  },
  {
    "text": "If you need to do that, reserve that representation for SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=920"
  },
  {
    "text": "and don’t use it to reason about expected events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=924"
  },
  {
    "text": "So that’s CLMonitor! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=927"
  },
  {
    "text": "I’m really excited about our new API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=930"
  },
  {
    "text": "Try it out! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=932"
  },
  {
    "text": "We hope it will greatly improve your monitoring experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=934"
  },
  {
    "text": "We would love to hear your feedback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=937"
  },
  {
    "text": "We also have a sample app that demonstrates CLMonitor in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=940"
  },
  {
    "text": "It is available in the resources section of this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=944"
  },
  {
    "text": "Download it and give it a try. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=947"
  },
  {
    "text": "Finally, checkout the session by my colleague Siraj on location updates.",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=950"
  },
  {
    "text": "Thanks for watching!",
    "link": "https://developer.apple.com/videos/play/wwdc2023/10147/?time=955"
  }
]