[
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=0"
  },
  {
    "text": "Kathryn: Hi! I'm Kathryn, and I'm an engineer working on System Experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=10"
  },
  {
    "text": "Today I'm going to talk about the new locations for widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=14"
  },
  {
    "text": "and how you can easily optimize your widget to look great everywhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=17"
  },
  {
    "text": "First, let's go over a quick history of widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=21"
  },
  {
    "text": "iOS 14 introduced widgets on the Home screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=24"
  },
  {
    "text": "and iOS 16 brought widgets to the Lock screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=27"
  },
  {
    "text": "using the same easy WidgetKit API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=30"
  },
  {
    "text": "This year, the widget ecosystem is expanding to four new locations: ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=33"
  },
  {
    "text": "the desktop on Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=37"
  },
  {
    "text": "the Lock screen on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=39"
  },
  {
    "text": "the new StandBy mode on iPhone, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=41"
  },
  {
    "text": "and the new Smart Stack on Apple Watch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=43"
  },
  {
    "text": "This means that people will be able to see all of their favorite widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=46"
  },
  {
    "text": "in even more places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=49"
  },
  {
    "text": "Your widget will be able to appear in all of these locations automatically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=51"
  },
  {
    "text": "so it's important to make sure that it looks great no matter where it's shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=55"
  },
  {
    "text": "Thanks to iPhone Widgets On Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=58"
  },
  {
    "text": "people will be able to use your widget on Mac ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=61"
  },
  {
    "text": "even if you don't currently have a macOS app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=63"
  },
  {
    "text": "My friends Devon and Graham have asked me to help them update ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=66"
  },
  {
    "text": "their Emoji Rangers widget to get it ready for these new places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=68"
  },
  {
    "text": "You might remember this project from WWDC20's \"Widgets code-along\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=71"
  },
  {
    "text": "and WWDC22's \"Complications and widgets: Reloaded\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=76"
  },
  {
    "text": "We'll start by going over the new content margins for widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=80"
  },
  {
    "text": "and how to transition to them on Apple Watch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=83"
  },
  {
    "text": "Next, we'll add an automatically removable background to our widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=86"
  },
  {
    "text": "Then, we'll modify our widget so that it can dynamically expand its layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=90"
  },
  {
    "text": "to fit its environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=94"
  },
  {
    "text": "Finally, we'll make sure the elements in our widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=96"
  },
  {
    "text": "are ready for vibrant rendering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=98"
  },
  {
    "text": "Let’s get started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=100"
  },
  {
    "text": "New for widgets this year are content margins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=102"
  },
  {
    "text": "Content margins are padding which is automatically applied ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=105"
  },
  {
    "text": "to your widget's body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=108"
  },
  {
    "text": "preventing your content from getting to close to the edge of the widget container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=109"
  },
  {
    "text": "These margins may be larger or smaller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=113"
  },
  {
    "text": "depending on the environment where your widget is being shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=116"
  },
  {
    "text": "On watchOS 9 and below, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=119"
  },
  {
    "text": "widgets use the system-defined safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=121"
  },
  {
    "text": "to keep content from getting too close to the edge. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=124"
  },
  {
    "text": "Widgets could add modifiers like ignoresSafeArea to views ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=126"
  },
  {
    "text": "to allow them to extend outside of the safe area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=129"
  },
  {
    "text": "On watchOS 10 and above, safe areas in widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=133"
  },
  {
    "text": "have been replaced by the use of content margins. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=135"
  },
  {
    "text": "This means that modifiers like ignoresSafeArea ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=138"
  },
  {
    "text": "no longer have any effect in widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=141"
  },
  {
    "text": "For most widgets, this change won't affect how your widget looks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=143"
  },
  {
    "text": "However, if your widget has content which used to ignore the safe area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=147"
  },
  {
    "text": "you can still achieve this same effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=151"
  },
  {
    "text": "by adding the contentMarginsDisabled modifier to your widget configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=153"
  },
  {
    "text": "Then, for any content which should remain within the default content margins, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=158"
  },
  {
    "text": "simply add padding back in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=162"
  },
  {
    "text": "You can use the widgetContentMargins environment variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=164"
  },
  {
    "text": "to get the default margins for the current environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=167"
  },
  {
    "text": "Content margins, along with these new modifiers and variables, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=170"
  },
  {
    "text": "are available on every platform where widgets are shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=173"
  },
  {
    "text": "Now, let's add a removable background to our Emoji Rangers widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=176"
  },
  {
    "text": "Our existing accessory family of widgets automatically work on iPad Lock screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=180"
  },
  {
    "text": "just like on iPhone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=185"
  },
  {
    "text": "iPad can also show system small widgets right alongside them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=187"
  },
  {
    "text": "Here's what ours looks like on the Lock screen right now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=191"
  },
  {
    "text": "We need to remove its background in this environment ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=193"
  },
  {
    "text": "so that it matches the other widgets better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=195"
  },
  {
    "text": "Luckily, doing this is super simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=198"
  },
  {
    "text": "Here I have the code for our systemSmall widget's view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=201"
  },
  {
    "text": "Right now, it consists of an AvatarView ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=204"
  },
  {
    "text": "layered on top of our gameBackground color using a ZStack. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=207"
  },
  {
    "text": "To make the background color removable, all we need to change ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=211"
  },
  {
    "text": "is to add a containerBackground modifier to our View, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=214"
  },
  {
    "text": "and move our gameBackground color inside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=217"
  },
  {
    "text": "Once we do that, the system can automatically take out ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=221"
  },
  {
    "text": "our widget's background depending on where it's being shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=224"
  },
  {
    "text": "The Smart Stack on Apple Watch can also utilize this new containerBackground. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=228"
  },
  {
    "text": "By default, your accessoryRectangular widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=232"
  },
  {
    "text": "will receive a dark material background in this environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=235"
  },
  {
    "text": "By adding that same containerBackground modifier to our view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=239"
  },
  {
    "text": "the widget is placed on the same background as our other widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=242"
  },
  {
    "text": "linking it with our app's visual identity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=245"
  },
  {
    "text": "For a deeper dive on this new environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=248"
  },
  {
    "text": "check out \"Design widgets for the Smart Stack on Apple Watch\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=250"
  },
  {
    "text": "Some widgets, like the Photos and Maps widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=254"
  },
  {
    "text": "don't really have distinct foreground content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=257"
  },
  {
    "text": "so there's no background which makes sense to remove. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=259"
  },
  {
    "text": "In this case, you can add the containerBackgroundRemovable modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=262"
  },
  {
    "text": "to your WidgetConfiguration, and set it to false.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=265"
  },
  {
    "text": "Now, let's make some optimizations to our layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=269"
  },
  {
    "text": "for when we're on iPad Lock screen and StandBy mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=272"
  },
  {
    "text": "The Weather widget is a great example of how to change your layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=275"
  },
  {
    "text": "when the widget background is removed.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=278"
  },
  {
    "text": "Notice how the widget still contains the same information, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=283"
  },
  {
    "text": "but it's been optimized to take advantage of the space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=286"
  },
  {
    "text": "The content is pushed all the way to the edges, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=289"
  },
  {
    "text": "and important elements are enlarged. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=292"
  },
  {
    "text": "These tweaks make the widget easier to read from far away, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=294"
  },
  {
    "text": "and integrate it more seamlessly into StandBy mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=298"
  },
  {
    "text": "These layout changes also help the widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=301"
  },
  {
    "text": "to blend in with accessory family widgets on iPad Lock screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=303"
  },
  {
    "text": "maintaining a more consistent look across every family. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=307"
  },
  {
    "text": "Let's move to Xcode to implement these changes in our own widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=310"
  },
  {
    "text": "Here I have the code for our AvatarView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=313"
  },
  {
    "text": "which is what we use for our systemSmall widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=316"
  },
  {
    "text": "On the right, I can see a live preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=318"
  },
  {
    "text": "of what our widget looks like in Xcode Previews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=320"
  },
  {
    "text": "When shown in contexts where the container background is removed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=323"
  },
  {
    "text": "the widgetContentMargins automatically shrink to bring our content edge-to-edge. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=326"
  },
  {
    "text": "We can detect whether the widget background has been removed ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=330"
  },
  {
    "text": "using the showsWidgetContainerBackground environment variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=333"
  },
  {
    "text": "When it is, let's omit the details about our hero's level and XP ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=336"
  },
  {
    "text": "from our HeroNameView, and instead show those details below.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=340"
  },
  {
    "text": "This will also make our hero's name larger when in this environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=346"
  },
  {
    "text": "Now when we toggle between these contexts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=349"
  },
  {
    "text": "our layout changes automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=352"
  },
  {
    "text": "from our original view to our new enlarged view.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=353"
  },
  {
    "text": "Just like with accessory family widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=358"
  },
  {
    "text": "our system family widgets are shown ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=360"
  },
  {
    "text": "in the vibrant rendering mode on iPad Lock screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=361"
  },
  {
    "text": "This means that your widget will be desaturated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=364"
  },
  {
    "text": "then colored appropriately for the Lock screen background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=367"
  },
  {
    "text": "When rendered like this, issues with contrast ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=371"
  },
  {
    "text": "can impact our widget's legibility. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=373"
  },
  {
    "text": "For example, our hero's avatar becomes difficult to distinguish ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=375"
  },
  {
    "text": "from its circular backdrop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=378"
  },
  {
    "text": "Let's hop back to Xcode, and modify our widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=380"
  },
  {
    "text": "to remove that backdrop when in the vibrant rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=382"
  },
  {
    "text": "Let’s check this out in StandBy Night mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=385"
  },
  {
    "text": "We can use the widgetRenderingMode environment variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=387"
  },
  {
    "text": "to detect which rendering mode we're in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=391"
  },
  {
    "text": "Let's change our Avatar's includesBackground parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=394"
  },
  {
    "text": "to check if we're in the vibrant rendering mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=396"
  },
  {
    "text": "StandBy Night mode also uses vibrant rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=403"
  },
  {
    "text": "so our avatar is clearly visible in this context as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=405"
  },
  {
    "text": "To learn more about widget rendering modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=409"
  },
  {
    "text": "watch \"Complications and widgets: Reloaded\" from WWDC22. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=411"
  },
  {
    "text": "And for more about what's new with widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=416"
  },
  {
    "text": "check out \"Bring widgets to life\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=418"
  },
  {
    "text": "I'm super excited about all the changes that are coming to widgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=421"
  },
  {
    "text": "and I can't wait to see what ideas you come up with to enhance your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=424"
  },
  {
    "text": "with these new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=428"
  },
  {
    "text": "Thanks, and enjoy! ",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=429"
  },
  {
    "text": "♪ ♪",
    "link": "https://developer.apple.com/videos/play/wwdc2023-10027/?time=431"
  }
]