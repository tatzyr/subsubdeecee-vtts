[
  {
    "text": "Dave Roberts: Hi. I'm Dave Roberts ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=0"
  },
  {
    "text": "from the GPU Software team at Apple.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1"
  },
  {
    "text": "I'm really excited to share some of the updates to the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=4"
  },
  {
    "text": "in the new Apple A15 Bionic chip.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=7"
  },
  {
    "text": "Later on, Katelyn Hinson, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=10"
  },
  {
    "text": "my colleague on the GPU Software team, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=13"
  },
  {
    "text": "will tell you all about the new Metal features of the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=15"
  },
  {
    "text": "She'll also show you how to use those features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=18"
  },
  {
    "text": "in your Metal apps while exploring some cool use cases.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=20"
  },
  {
    "text": "The A15 Bionic is a powerful new platform ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=25"
  },
  {
    "text": "for your Metal apps and games, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=28"
  },
  {
    "text": "with updates to the CPU, GPU, Neural Engine, and other ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=29"
  },
  {
    "text": "user experience-enhancing technologies.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=34"
  },
  {
    "text": "The A15 GPU builds upon the same tile-based deferred renderer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=37"
  },
  {
    "text": "and unified memory architecture as the A14 Bionic.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=42"
  },
  {
    "text": "While we've made many microarchitectural improvements ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=46"
  },
  {
    "text": "in various areas, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=48"
  },
  {
    "text": "there are some important changes for performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=50"
  },
  {
    "text": "that I should highlight.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=52"
  },
  {
    "text": "The A15's GPU has up to five shader cores, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=54"
  },
  {
    "text": "and that fifth core provides a performance boost ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=58"
  },
  {
    "text": "of 25 percent at the same GPU core frequency.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=60"
  },
  {
    "text": "The shader cores now have double ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=64"
  },
  {
    "text": "the F32 floating-point math units ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=66"
  },
  {
    "text": "which can boost GPU performance on math-heavy workloads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=68"
  },
  {
    "text": "The A15's GPU also makes the UI even more responsive ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=72"
  },
  {
    "text": "and extends battery life even further.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=76"
  },
  {
    "text": "And you get all of these great improvements for free ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=78"
  },
  {
    "text": "without any modifications to your code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=80"
  },
  {
    "text": "But that's not everything! ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=83"
  },
  {
    "text": "We brought some brand-new features to the A15 GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=85"
  },
  {
    "text": "that you can use to make your Metal apps even better.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=87"
  },
  {
    "text": "And all of these new capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=91"
  },
  {
    "text": "belong to a new Metal feature set known as AppleGPUFamily8.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=93"
  },
  {
    "text": "For the rest of the talk, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=98"
  },
  {
    "text": "Katelyn and I will focus on these new features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=100"
  },
  {
    "text": "and explain what they are, why they are useful, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=102"
  },
  {
    "text": "and cover the changes to the new Metal API ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=105"
  },
  {
    "text": "and shading language that support them.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=108"
  },
  {
    "text": "First up, the A15's new graphics processing features.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=110"
  },
  {
    "text": "Lossy compression, which uses your app's texture memory usage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=117"
  },
  {
    "text": "with minimal impact on image quality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=120"
  },
  {
    "text": "This new A15 feature gives you the same ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=123"
  },
  {
    "text": "texture memory bandwidth savings as lossless compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=126"
  },
  {
    "text": "I'll show you how to use lossy compression in your Metal apps ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=129"
  },
  {
    "text": "with some more details in a moment.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=132"
  },
  {
    "text": "Later on, Katelyn will show you how the A15 GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=135"
  },
  {
    "text": "extends existing support for sparse textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=139"
  },
  {
    "text": "by including rendering to both sparse depth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=142"
  },
  {
    "text": "and stencil textures.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=144"
  },
  {
    "text": "Katelyn will also cover a new compute specific feature: ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=147"
  },
  {
    "text": "SIMD group shuffle and fill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=150"
  },
  {
    "text": "The A15 adds these new instructions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=152"
  },
  {
    "text": "to the GPU core instruction set.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=154"
  },
  {
    "text": "She'll explain this feature ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=157"
  },
  {
    "text": "and show you how to improve your app performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=158"
  },
  {
    "text": "by reducing compute kernel execution time ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=161"
  },
  {
    "text": "for applicable use cases such as image processing.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=163"
  },
  {
    "text": "I'll start by taking a closer look at lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=167"
  },
  {
    "text": "To better understand lossy compression, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=171"
  },
  {
    "text": "it's worth revisiting lossless compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=174"
  },
  {
    "text": "The A12 Bionic first introduced ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=177"
  },
  {
    "text": "lossless texture compression in 2018, and the A14 Bionic ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=179"
  },
  {
    "text": "added further improvements to the feature in 2020.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=183"
  },
  {
    "text": "Lossless texture compression saves memory bandwidth, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=186"
  },
  {
    "text": "which in turn saves power, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=189"
  },
  {
    "text": "so your apps can do even more on a single battery charge.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=190"
  },
  {
    "text": "Lossless compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=194"
  },
  {
    "text": "ensures that it always preserves texture detail.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=196"
  },
  {
    "text": "In fact, your apps might already take advantage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=199"
  },
  {
    "text": "of lossless compression on the A12 Bionic and later.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=201"
  },
  {
    "text": "Check out the tech talk, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=204"
  },
  {
    "text": "\"Discover Metal enhancements for A14 Bionic\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=206"
  },
  {
    "text": "and the \"Optimizing Texture Data\" article ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=209"
  },
  {
    "text": "on developer.apple.com ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=211"
  },
  {
    "text": "for more details about lossless compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=213"
  },
  {
    "text": "Lossy takes texture compression to the next level ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=217"
  },
  {
    "text": "on the A15 Bionic.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=220"
  },
  {
    "text": "In addition to the bandwidth savings ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=223"
  },
  {
    "text": "that lossless compression gives you, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=224"
  },
  {
    "text": "lossy compression uses just half the memory footprint ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=226"
  },
  {
    "text": "of an uncompressed texture.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=229"
  },
  {
    "text": "Lossy compression preserves texture quality ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=231"
  },
  {
    "text": "wherever it's possible.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=233"
  },
  {
    "text": "And best of all, you can easily apply this ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=235"
  },
  {
    "text": "to your render targets on the A15 ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=237"
  },
  {
    "text": "to take full advantage of those memory savings.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=239"
  },
  {
    "text": "You can enable lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=243"
  },
  {
    "text": "by simply setting a texture descriptor's ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=245"
  },
  {
    "text": "new compression type property to lossy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=247"
  },
  {
    "text": "So why use lossy compression? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=251"
  },
  {
    "text": "Well, compression saves ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=253"
  },
  {
    "text": "significant texture memory bandwidth, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=255"
  },
  {
    "text": "whether you choose to use lossless or lossy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=257"
  },
  {
    "text": "It's the compression unit that saves the bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=260"
  },
  {
    "text": "by compressing textured data before it's written to memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=263"
  },
  {
    "text": "When you use lossless compression, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=266"
  },
  {
    "text": "the GPU must perfectly preserve texture detail.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=268"
  },
  {
    "text": "So Metal cannot guarantee any amount of compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=271"
  },
  {
    "text": "and must allocate enough memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=274"
  },
  {
    "text": "to cover the full uncompressed texture size.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=276"
  },
  {
    "text": "However, when you use lossy compression, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=279"
  },
  {
    "text": "textures use just half the memory footprint of lossless.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=282"
  },
  {
    "text": "If the A15 GPU cannot losslessly compress a texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=286"
  },
  {
    "text": "to fit within that 50 percent smaller memory footprint, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=288"
  },
  {
    "text": "it'll reduce the fidelity of regions of the texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=292"
  },
  {
    "text": "so that it does.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=295"
  },
  {
    "text": "Lossy compression supports most pixel formats and texture types, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=297"
  },
  {
    "text": "and you can use it on your render targets.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=302"
  },
  {
    "text": "In many cases, you can enable it on textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=304"
  },
  {
    "text": "without any further modifications to your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=306"
  },
  {
    "text": "I recommend your apps enable lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=310"
  },
  {
    "text": "wherever the quality tradeoff is acceptable to you.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=312"
  },
  {
    "text": "The easiest place to enable it is your final render target ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=316"
  },
  {
    "text": "where you're least likely to notice a loss in quality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=319"
  },
  {
    "text": "Consider using lossy compression for intermediate render targets ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=323"
  },
  {
    "text": "and use that memory saving for other things, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=326"
  },
  {
    "text": "such as increasing texture resolution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=328"
  },
  {
    "text": "And be sure to review your postprocessing change ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=330"
  },
  {
    "text": "to find render target candidates ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=333"
  },
  {
    "text": "that may benefit from lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=335"
  },
  {
    "text": "Here are some of the use cases in detail.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=338"
  },
  {
    "text": "Take a look at the visual difference ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=342"
  },
  {
    "text": "if I enable a lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=344"
  },
  {
    "text": "for just the final render target.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=346"
  },
  {
    "text": "This split image compares lossless on the left ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=349"
  },
  {
    "text": "to lossy on the right, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=352"
  },
  {
    "text": "and the differences are pretty subtle.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=353"
  },
  {
    "text": "He's an image that shows the per-pixel differences ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=356"
  },
  {
    "text": "between lossless and lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=358"
  },
  {
    "text": "The black pixels represent no difference; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=361"
  },
  {
    "text": "blue to green represent small differences; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=363"
  },
  {
    "text": "and red represent the biggest changes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=366"
  },
  {
    "text": "The red and yellow pixels in this image ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=369"
  },
  {
    "text": "illustrate a few isolated regions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=371"
  },
  {
    "text": "that have the largest difference in the final render.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=374"
  },
  {
    "text": "If I zoom into one of the regions with the scooter, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=376"
  },
  {
    "text": "I have a hard time seeing any difference ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=379"
  },
  {
    "text": "between the left and the right images.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=381"
  },
  {
    "text": "Intermediate render targets ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=384"
  },
  {
    "text": "also work well with lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=386"
  },
  {
    "text": "Here's a side-by-side view of the puddle's reflection ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=389"
  },
  {
    "text": "that compares lossless and lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=392"
  },
  {
    "text": "If I switch to the per-pixel difference representation again, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=396"
  },
  {
    "text": "the lossy compressed reflection ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=399"
  },
  {
    "text": "has only minimal differences from the lossless version.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=401"
  },
  {
    "text": "Plus you can increase the resolution of the texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=404"
  },
  {
    "text": "to add more detail with the memory you save ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=407"
  },
  {
    "text": "with lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=409"
  },
  {
    "text": "For example, here's a high-resolution reflection ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=411"
  },
  {
    "text": "that shows more detail than the lossless version, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=414"
  },
  {
    "text": "all while using the same amount of memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=417"
  },
  {
    "text": "The right side of this demo uses lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=421"
  },
  {
    "text": "for every renderable texture in the scene.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=424"
  },
  {
    "text": "When it's in motion, the scene looks very stable, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=427"
  },
  {
    "text": "and it's very difficult to detect the difference ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=430"
  },
  {
    "text": "if you compare it to the lossless version on the left.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=432"
  },
  {
    "text": "Metal makes it easy to use lossy compression in your apps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=437"
  },
  {
    "text": "Here's how.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=442"
  },
  {
    "text": "Start by initializing a texture descriptor as usual, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=444"
  },
  {
    "text": "then set the compression type property to lossy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=448"
  },
  {
    "text": "Next, set the storage mode to private.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=452"
  },
  {
    "text": "Finally, create the texture.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=454"
  },
  {
    "text": "And your app can now take full advantage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=456"
  },
  {
    "text": "of lossy compression and the savings it offers.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=458"
  },
  {
    "text": "Note that you can create textures for lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=462"
  },
  {
    "text": "for most configurations with a few exceptions.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=464"
  },
  {
    "text": "For example, you can use lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=468"
  },
  {
    "text": "for most common texture types, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=470"
  },
  {
    "text": "including 2D, 3D, array, and cube.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=472"
  },
  {
    "text": "But the feature doesn't support some of the less common types.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=475"
  },
  {
    "text": "Similarly, lossy compression supports ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=479"
  },
  {
    "text": "most common pixel formats, but not the formats ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=482"
  },
  {
    "text": "with packed color channels.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=484"
  },
  {
    "text": "Lossy compression supports textures as render targets, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=487"
  },
  {
    "text": "in blit operations, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=491"
  },
  {
    "text": "and when you access them with sample and read operations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=493"
  },
  {
    "text": "However, note that you cannot populate a lossy texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=496"
  },
  {
    "text": "with shader write operations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=499"
  },
  {
    "text": "Lossy compression only supports textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=502"
  },
  {
    "text": "in private storage.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=504"
  },
  {
    "text": "You cannot use shared or managed storage nodes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=505"
  },
  {
    "text": "And lastly, lossy textures work with other common features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=510"
  },
  {
    "text": "like MSAA, sRGB, and mipmapping.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=513"
  },
  {
    "text": "Check out the Metal feature set tables on developer.apple.com ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=517"
  },
  {
    "text": "for more details about lossy compression support.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=521"
  },
  {
    "text": "So in summary, lossy compression saves the same bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=525"
  },
  {
    "text": "as lossless compression while also saving ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=529"
  },
  {
    "text": "50 percent of the texture memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=531"
  },
  {
    "text": "You can save significant amounts of memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=534"
  },
  {
    "text": "depending on the use case and how much you choose ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=536"
  },
  {
    "text": "to use lossy compression in your apps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=539"
  },
  {
    "text": "Lossy compression aims to preserve texture detail ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=541"
  },
  {
    "text": "but only slightly reducing the quality for regions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=544"
  },
  {
    "text": "where the compressed texture data doesn't fit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=547"
  },
  {
    "text": "And lastly, lossy compression supports ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=549"
  },
  {
    "text": "common texture types, common pixel formats, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=552"
  },
  {
    "text": "and all GPU access modes other than shader writes, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=555"
  },
  {
    "text": "making it easy for you to use lossy compression.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=559"
  },
  {
    "text": "Thanks for listening, and now I'll hand over to Katelyn.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=562"
  },
  {
    "text": "Katelyn Hinson: Thanks, Dave.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=567"
  },
  {
    "text": "I'm excited to introduce the new sparse textures extensions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=568"
  },
  {
    "text": "in the A15 Bionic.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=571"
  },
  {
    "text": "Sparse textures are a great way to create ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=573"
  },
  {
    "text": "high-resolution textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=575"
  },
  {
    "text": "while managing your memory budget in Metal.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=577"
  },
  {
    "text": "A13 Bionic first introduced sparse texture support, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=580"
  },
  {
    "text": "allowing you to map and unmap texture tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=583"
  },
  {
    "text": "on the GPU timeline.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=586"
  },
  {
    "text": "For more details on how to use sparse textures in your apps, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=588"
  },
  {
    "text": "refer to the talks from fall 2019 and 2020.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=592"
  },
  {
    "text": "A15 Bionic extends sparse support ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=596"
  },
  {
    "text": "by including depth and stencil attachments.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=599"
  },
  {
    "text": "The guiding principle of a sparse texture is, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=601"
  },
  {
    "text": "\"Don't allocate what you won't use.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=604"
  },
  {
    "text": "For example, this app doesn't need to map the tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=607"
  },
  {
    "text": "behind the UI elements.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=610"
  },
  {
    "text": "With sparse depth and stencil textures, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=612"
  },
  {
    "text": "this app can always leave these obscured tiles unmapped.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=615"
  },
  {
    "text": "You can optimize shadow maps with sparse depth attachments.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=620"
  },
  {
    "text": "If you're not familiar with shadow mapping, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=624"
  },
  {
    "text": "check out Metal's deferred lighting sample ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=626"
  },
  {
    "text": "which uses this technique.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=628"
  },
  {
    "text": "A shadow pass renders the shadow map ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=630"
  },
  {
    "text": "from the light's perspective, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=632"
  },
  {
    "text": "and the lighting pass reads it back.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=634"
  },
  {
    "text": "The texels sampled from the shadow map ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=637"
  },
  {
    "text": "are always within the projected frustum.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=638"
  },
  {
    "text": "This scenario is a perfect candidate for a sparse texture.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=641"
  },
  {
    "text": "A large portion of the shadow texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=645"
  },
  {
    "text": "does not need to be mapped, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=647"
  },
  {
    "text": "as the lighting pass does not sample these tiles.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=649"
  },
  {
    "text": "Here's a scene that uses shadow mapping ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=652"
  },
  {
    "text": "and its rendered shadow map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=654"
  },
  {
    "text": "The app can recover the memory in the tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=656"
  },
  {
    "text": "outside the view frustum since it doesn't need ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=659"
  },
  {
    "text": "to write or read back from those tiles.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=661"
  },
  {
    "text": "Cascaded shadow mapping is a more advanced technique ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=665"
  },
  {
    "text": "for shadows that use multiple individual shadow maps ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=667"
  },
  {
    "text": "to cover the scene more efficiently.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=670"
  },
  {
    "text": "It allocates higher resolution shadow maps near the camera ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=672"
  },
  {
    "text": "and lower resolution maps farther from the camera.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=676"
  },
  {
    "text": "For example, this scene uses three overlapping shadow maps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=680"
  },
  {
    "text": "Each shadow map has the same texture resolution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=684"
  },
  {
    "text": "and is mapped to increasingly larger areas ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=687"
  },
  {
    "text": "the further it is from the camera.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=690"
  },
  {
    "text": "The green highlighted areas in the shadow map ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=692"
  },
  {
    "text": "represent the texels that the lighting pass samples.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=694"
  },
  {
    "text": "The lighting pass nonuniformly samples from these tiles -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=698"
  },
  {
    "text": "represented as a heat map -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=702"
  },
  {
    "text": "with blue tiles undersampled and red oversampled.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=703"
  },
  {
    "text": "You can use sparse tiled shadow maps ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=708"
  },
  {
    "text": "to replace these textures with a single surface ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=710"
  },
  {
    "text": "that has adjustable resolution based on sampling rate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=712"
  },
  {
    "text": "With sparse tiled shadow maps -- or STSM -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=717"
  },
  {
    "text": "you create a single sparse depth surface.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=720"
  },
  {
    "text": "Instead of using a fixed-resolution texture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=723"
  },
  {
    "text": "the surface has mapped tiles across the sparse mipmap chain.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=725"
  },
  {
    "text": "This technique only maps the tiles needed ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=729"
  },
  {
    "text": "to match the desired sampling rate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=732"
  },
  {
    "text": "Here's an illustration of the physical resolution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=734"
  },
  {
    "text": "for each tile in its relative mip level.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=737"
  },
  {
    "text": "You can freely and efficiently ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=741"
  },
  {
    "text": "adjust the resolution of your shadow map across a scene ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=742"
  },
  {
    "text": "by mapping tiles across different mips.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=746"
  },
  {
    "text": "Here are the main steps of the STSM technique.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=749"
  },
  {
    "text": "First, generate the density map based on the sampling rate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=752"
  },
  {
    "text": "Then construct the surface and map tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=757"
  },
  {
    "text": "according to the density map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=759"
  },
  {
    "text": "And then render to and sample from the adaptive surface.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=762"
  },
  {
    "text": "To generate the density map, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=766"
  },
  {
    "text": "the geometry pass populates a density map buffer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=768"
  },
  {
    "text": "for the other passes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=771"
  },
  {
    "text": "The first step is to get the sampling rate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=773"
  },
  {
    "text": "across the shadow map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=775"
  },
  {
    "text": "The expected sample density is calculated by tracking ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=777"
  },
  {
    "text": "the shadow space derivatives of rendered geometry.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=780"
  },
  {
    "text": "The fragment shader uses atomics to store the derivatives ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=784"
  },
  {
    "text": "in a 2D grid, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=787"
  },
  {
    "text": "collecting the sampling rates across the shadowUV space.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=789"
  },
  {
    "text": "Once you have the density map, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=793"
  },
  {
    "text": "use it to lay out the tiles for your sparse depth texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=795"
  },
  {
    "text": "and generate a table of contents buffer.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=798"
  },
  {
    "text": "This table of contents buffer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=801"
  },
  {
    "text": "will be used by your lighting pass.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=802"
  },
  {
    "text": "First, map the tiles of the depth texture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=805"
  },
  {
    "text": "by iteratively dividing the surface ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=807"
  },
  {
    "text": "and scheduling the mapping of each mip level, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=810"
  },
  {
    "text": "starting with the bottom mip.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=812"
  },
  {
    "text": "To figure out which tiles to map, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=815"
  },
  {
    "text": "start by checking the sampling rate of the current mip ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=817"
  },
  {
    "text": "from the density map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=819"
  },
  {
    "text": "In this example, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=821"
  },
  {
    "text": "the density map indicates the current mip is inadequate, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=823"
  },
  {
    "text": "but the next mip level is a good fit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=826"
  },
  {
    "text": "In this case, you promote the whole tile ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=829"
  },
  {
    "text": "by mapping the next mip and unmap the current mip.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=831"
  },
  {
    "text": "Here's another, more complicated scenario.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=835"
  },
  {
    "text": "The density map indicates the current mip is satisfactory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=838"
  },
  {
    "text": "for at least one quadrant.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=841"
  },
  {
    "text": "For the next mip, the sample rate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=843"
  },
  {
    "text": "and the density map meets the target for two quadrants, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=845"
  },
  {
    "text": "while the remaining two are under the target rate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=849"
  },
  {
    "text": "In this case, map the tile in the current mip ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=852"
  },
  {
    "text": "and map half the tiles in the next.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=855"
  },
  {
    "text": "Next a compute shader writes a 2D table ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=858"
  },
  {
    "text": "that translates between UV and mip levels, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=861"
  },
  {
    "text": "which is stored in our table of contents or TOC buffer.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=864"
  },
  {
    "text": "Before sampling a texel from the STSM, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=868"
  },
  {
    "text": "the TOC buffer is read by the lighting pass ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=871"
  },
  {
    "text": "by indexing the table to get the mip.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=874"
  },
  {
    "text": "The mip is then used as an explicit LOD parameter ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=877"
  },
  {
    "text": "when you sample the shadow map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=880"
  },
  {
    "text": "The next step is to render the sparse shadow map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=883"
  },
  {
    "text": "First, cull the shadows by using the TOC buffer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=886"
  },
  {
    "text": "then encode the indirect draw commands ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=890"
  },
  {
    "text": "to render to the sparse depth texture.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=892"
  },
  {
    "text": "Render the surface by filling each mip map individually ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=895"
  },
  {
    "text": "with an indirect command buffer.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=898"
  },
  {
    "text": "ICBs are the perfect fit for this task ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=900"
  },
  {
    "text": "since compute passes can, in parallel, cull and sort ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=903"
  },
  {
    "text": "each shadow geometry mesh against the resident areas.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=907"
  },
  {
    "text": "The compute shader encodes draw commands into individual ICBs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=911"
  },
  {
    "text": "by testing meshes against the bounding volumes of the tiles.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=915"
  },
  {
    "text": "For large objects that stretch across the shadow map, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=919"
  },
  {
    "text": "the shader tests the object against the relevant tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=922"
  },
  {
    "text": "of each mip; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=925"
  },
  {
    "text": "and it encodes a draw command to the mip's ICB ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=927"
  },
  {
    "text": "if at least one tile overlaps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=931"
  },
  {
    "text": "If a mip doesn't have any tiles that overlap, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=934"
  },
  {
    "text": "don't emit a draw command for the object to that mip's ICB.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=937"
  },
  {
    "text": "The optimized set of draw commands for each object ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=942"
  },
  {
    "text": "is encoded by the shadow cull compute pass ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=944"
  },
  {
    "text": "by running all intersection tests ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=947"
  },
  {
    "text": "in parallel compute threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=949"
  },
  {
    "text": "Since the red mesh was closest to the camera, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=952"
  },
  {
    "text": "it had the biggest impact at 11 tiles on our shadow map.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=955"
  },
  {
    "text": "Compare that to the orange mesh, the furthest from the camera, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=959"
  },
  {
    "text": "which had the smallest impact at three tiles.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=962"
  },
  {
    "text": "Once the indirect draw command is complete, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=966"
  },
  {
    "text": "the STSM is ready to be sampled in the lighting pass.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=969"
  },
  {
    "text": "This table compares STSM to shadow mapping ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=973"
  },
  {
    "text": "and cascaded shadow mapping.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=976"
  },
  {
    "text": "The STSM sample rate and effective quality ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=979"
  },
  {
    "text": "is about the same as the single shadow map ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=982"
  },
  {
    "text": "but uses far less memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=984"
  },
  {
    "text": "In fact, it uses less than a percent of the memory footprint ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=987"
  },
  {
    "text": "for the same resolution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=990"
  },
  {
    "text": "I hope this deep dive gives you some ideas ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=993"
  },
  {
    "text": "on how to create efficient, high-quality shadows ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=995"
  },
  {
    "text": "in your Metal apps with sparse tiled shadow maps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=998"
  },
  {
    "text": "Lastly, I'm excited to introduce the new additions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1002"
  },
  {
    "text": "to Metal compute in A15: SIMD shuffle and fill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1005"
  },
  {
    "text": "In modern image processing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1010"
  },
  {
    "text": "convolution kernels are applied for filters like edge detection, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1012"
  },
  {
    "text": "blur, and sharpen.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1015"
  },
  {
    "text": "Here's a convolution applied to an image ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1017"
  },
  {
    "text": "from our modern rendering demo.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1020"
  },
  {
    "text": "Workloads like this one are typically limited ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1022"
  },
  {
    "text": "by texture sampling or reading from thread group memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1024"
  },
  {
    "text": "leaving the GPU's math units underutilized.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1028"
  },
  {
    "text": "Apple silicon provides a rich set of SIMD instructions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1031"
  },
  {
    "text": "that can be used in Metal compute shaders ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1034"
  },
  {
    "text": "to help optimize these workloads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1036"
  },
  {
    "text": "As threads of a SIMD group run concurrently in lockstep, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1039"
  },
  {
    "text": "SIMD group functions exploit this lockstep execution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1042"
  },
  {
    "text": "to share data between its threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1046"
  },
  {
    "text": "For more information about existing SIMD functions, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1048"
  },
  {
    "text": "please see the talks for A13 Bionic and A14 Bionic, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1051"
  },
  {
    "text": "where they were introduced.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1055"
  },
  {
    "text": "Now let's discuss the new SIMD instructions available.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1057"
  },
  {
    "text": "New to A15 Bionic ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1061"
  },
  {
    "text": "is the support for SIMD and quad shuffle and fill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1063"
  },
  {
    "text": "These instructions are designed ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1067"
  },
  {
    "text": "to improve sliding-window image operations, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1068"
  },
  {
    "text": "like the edge detection convolution previously shown.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1071"
  },
  {
    "text": "These functions optimize compute workloads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1075"
  },
  {
    "text": "by sharing data across neighboring threads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1077"
  },
  {
    "text": "in a given SIMD group without using memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1079"
  },
  {
    "text": "First let's look at the behavior for quad shuffle down, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1083"
  },
  {
    "text": "first supported in A13.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1086"
  },
  {
    "text": "The data buffer has contents A, B, C, and D, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1089"
  },
  {
    "text": "which is loaded into the registers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1093"
  },
  {
    "text": "of a quad's threads: zero, one, two, and three.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1094"
  },
  {
    "text": "When applying a shuffle down on a shift of one, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1099"
  },
  {
    "text": "the register data in thread zero, one, and two ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1102"
  },
  {
    "text": "get the data from threads one, two, and three.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1105"
  },
  {
    "text": "The computed quad lane ID doesn't wrap around, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1109"
  },
  {
    "text": "so thread three in the result has the unshifted value D.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1112"
  },
  {
    "text": "Instead, if the quad shuffle and fill down instruction is used, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1117"
  },
  {
    "text": "a fill buffer is provided ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1120"
  },
  {
    "text": "to update thread three in the result.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1122"
  },
  {
    "text": "Now the fill data of thread zero is shuffled to the output data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1125"
  },
  {
    "text": "in thread three.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1128"
  },
  {
    "text": "Similarly, for a quad shuffle up and fill with shift of two, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1131"
  },
  {
    "text": "we see A and B are shuffled to threads two and three, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1135"
  },
  {
    "text": "and the data from the fill buffer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1140"
  },
  {
    "text": "is shuffled into the output's lower lanes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1141"
  },
  {
    "text": "On Apple silicon, SIMD groups are composed of 32 threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1145"
  },
  {
    "text": "And the same shuffle and fill behavior can be applied ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1149"
  },
  {
    "text": "across our SIMD lane, where the lower delta lanes ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1152"
  },
  {
    "text": "are filled with the upper lanes of the fill data.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1155"
  },
  {
    "text": "The new SIMD and quad shuffle and fill instructions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1158"
  },
  {
    "text": "also have an optional modulo argument.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1162"
  },
  {
    "text": "This allows for user-specified vector widths.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1165"
  },
  {
    "text": "For a module of eight, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1168"
  },
  {
    "text": "the SIMD group is effectively split into four vectors.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1169"
  },
  {
    "text": "The data buffer values are first shuffled up two indices, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1173"
  },
  {
    "text": "and the fill data is shuffled into each set of eight threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1176"
  },
  {
    "text": "Let's use these new instructions in an example ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1181"
  },
  {
    "text": "where the kernel used for edge detection ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1184"
  },
  {
    "text": "of our modern rendering image can be optimized ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1187"
  },
  {
    "text": "using SIMD shuffle and fill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1190"
  },
  {
    "text": "In order to generate the final result, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1193"
  },
  {
    "text": "a 5-by-5 convolution kernel is applied ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1195"
  },
  {
    "text": "to the input image.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1197"
  },
  {
    "text": "The output image is split into a set of SIMD groups, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1200"
  },
  {
    "text": "where each SIMD group is a 4-by-8 chunk, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1203"
  },
  {
    "text": "each thread writing to a single output.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1206"
  },
  {
    "text": "Let's focus on generating the output for a single SIMD group.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1209"
  },
  {
    "text": "For the 5-by-5 convolution, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1213"
  },
  {
    "text": "each thread must read 5 by 5 pixels from the input.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1215"
  },
  {
    "text": "For each 4-by-8 SIMD group, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1219"
  },
  {
    "text": "an 8-by-12 region must be sampled in the compute shader.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1221"
  },
  {
    "text": "The naive implementation of this convolution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1225"
  },
  {
    "text": "would require 25 samples for each output thread.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1228"
  },
  {
    "text": "This results in great overlap across our SIMD group.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1231"
  },
  {
    "text": "This can be optimized by the shuffle and fill instructions, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1235"
  },
  {
    "text": "eliminating duplicate samples within a SIMD group ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1239"
  },
  {
    "text": "and sharing data through register shuffles.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1242"
  },
  {
    "text": "Let's see why we would need to read from these locations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1245"
  },
  {
    "text": "First A is loaded, which is a 4-by-8 window ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1249"
  },
  {
    "text": "where each thread in the SIMD group samples a single pixel; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1252"
  },
  {
    "text": "then B for the top-right window, C for the bottom left, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1256"
  },
  {
    "text": "and finally D for the bottom right.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1260"
  },
  {
    "text": "The red outline rectangle indicates the destination region ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1263"
  },
  {
    "text": "of our SIMD group for the output image.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1267"
  },
  {
    "text": "Through four samples per thread, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1270"
  },
  {
    "text": "the 8-by-12 input region was loaded across our SIMD group ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1272"
  },
  {
    "text": "without any overlapping samples.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1276"
  },
  {
    "text": "Refocusing on the 5-by-5 region for thread zero, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1279"
  },
  {
    "text": "these samples can be represented as a 5-by-5 neighborhood.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1282"
  },
  {
    "text": "Quad shuffle and fill down can be used ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1286"
  },
  {
    "text": "to access the first row of neighbors, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1288"
  },
  {
    "text": "first shuffling down A's data and filling with B's data.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1291"
  },
  {
    "text": "Then the 32 wide vectors from the previous row ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1296"
  },
  {
    "text": "are shuffled down for the next row.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1299"
  },
  {
    "text": "As the data is shuffled down a full row, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1302"
  },
  {
    "text": "a fill vector is needed to shuffle the samples ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1304"
  },
  {
    "text": "from C and D in the upper lanes of the 32-wide vector.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1307"
  },
  {
    "text": "Using the same approach, SIMD and quad shuffle down ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1311"
  },
  {
    "text": "can be used to get the remaining samples in the 5-by-5 region.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1315"
  },
  {
    "text": "Once the full neighborhood has been shuffled, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1320"
  },
  {
    "text": "these samples are used as the input ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1323"
  },
  {
    "text": "to the edge detection algorithm.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1324"
  },
  {
    "text": "While the naive implementation sampled the full neighborhood ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1328"
  },
  {
    "text": "for each thread, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1330"
  },
  {
    "text": "with the new SIMD and quads shuffle and fill instructions, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1332"
  },
  {
    "text": "the number of samples for each SIMD group ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1335"
  },
  {
    "text": "is reduced by 84 percent, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1338"
  },
  {
    "text": "eliminating overlapping samples across neighboring threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1340"
  },
  {
    "text": "Using the new SIMD operations, many common image processing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1344"
  },
  {
    "text": "and machine learning algorithms can apply the same approach ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1348"
  },
  {
    "text": "to optimize shared data across SIMD groups.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1352"
  },
  {
    "text": "And that's it for SIMD shuffle and fill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1356"
  },
  {
    "text": "Let's recap what we've learned.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1359"
  },
  {
    "text": "Lossy compression is an easy-to-enable feature ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1362"
  },
  {
    "text": "that saves memory footprint and bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1365"
  },
  {
    "text": "while maintaining quality for your textures.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1368"
  },
  {
    "text": "Sparse depth and stencil textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1372"
  },
  {
    "text": "help you create efficient, high-quality shadow maps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1374"
  },
  {
    "text": "New compute instructions SIMD shuffle and fill ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1378"
  },
  {
    "text": "reduce overlap and improve sliding-window image operations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1381"
  },
  {
    "text": "for machine learning and image processing applications.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1385"
  },
  {
    "text": "And finally, all Metal apps get an additional boost ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1390"
  },
  {
    "text": "in performance, responsiveness, and power savings ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1393"
  },
  {
    "text": "from the overall architectural improvements ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1397"
  },
  {
    "text": "of the A15 Bionic GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1399"
  },
  {
    "text": "Thank you for watching.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10876/?time=1402"
  }
]