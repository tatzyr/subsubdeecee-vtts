[
  {
    "text": "Hi there, my name is Ari, and I'm excited to talk about ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=0"
  },
  {
    "text": "how to migrate custom intents to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=3"
  },
  {
    "text": "In this video, I'm going to cover ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=6"
  },
  {
    "text": "why you should adopt the new App Intents framework; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=8"
  },
  {
    "text": "how migrating works, including backwards compatibility; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=11"
  },
  {
    "text": "and how to actually convert to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=14"
  },
  {
    "text": "First, let's cover why you should adopt App Intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=18"
  },
  {
    "text": "and how it's different from previous frameworks.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=21"
  },
  {
    "text": "We introduced the SiriKit Intents framework in 2016, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=24"
  },
  {
    "text": "which comes with a set of purpose-driven system intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=28"
  },
  {
    "text": "that provide a complete user experience for common use cases ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=31"
  },
  {
    "text": "like messaging, workouts, phone calls, and more.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=35"
  },
  {
    "text": "Next, we introduced custom intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=38"
  },
  {
    "text": "which lets you define your own intents for any use case, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=40"
  },
  {
    "text": "bringing your app's functionality to Siri, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=44"
  },
  {
    "text": "shortcuts, and suggestions.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=46"
  },
  {
    "text": "And we added WidgetKit which uses custom intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=48"
  },
  {
    "text": "for widget configuration and prediction.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=51"
  },
  {
    "text": "At WWDC22, we introduced App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=54"
  },
  {
    "text": "a new Swift-native framework to provide intents from your app ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=58"
  },
  {
    "text": "to the system.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=62"
  },
  {
    "text": "App Intents is a great framework to adopt, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=63"
  },
  {
    "text": "because it's modern, powerful, and easy for users.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=65"
  },
  {
    "text": "It's modern because it's designed natively for Swift.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=69"
  },
  {
    "text": "Thanks to the latest language features, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=74"
  },
  {
    "text": "you can write dramatically less code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=75"
  },
  {
    "text": "to support the same functionality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=78"
  },
  {
    "text": "We've also eliminated the need to maintain ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=80"
  },
  {
    "text": "intent-definition files and use code generation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=83"
  },
  {
    "text": "And you can now provide snippets as lightweight SwiftUI views.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=86"
  },
  {
    "text": "It's powerful because entities and queries ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=90"
  },
  {
    "text": "enabled deeper use cases.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=93"
  },
  {
    "text": "You can run App Intents directly in your app's process ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=95"
  },
  {
    "text": "without providing an extension.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=98"
  },
  {
    "text": "And there are new opportunities for customizing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=101"
  },
  {
    "text": "the user experience when people set up and run your intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=103"
  },
  {
    "text": "It's also easy for people to use.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=106"
  },
  {
    "text": "Intents can be easily exposed as App Shortcuts ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=109"
  },
  {
    "text": "which are immediately usable with zero setup required.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=112"
  },
  {
    "text": "Plus, there are new ways for people to discover ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=116"
  },
  {
    "text": "your shortcuts because they'll be shown at the top of Spotlight ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=118"
  },
  {
    "text": "and in Siri tips that you can include in your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=121"
  },
  {
    "text": "To get all the benefits of the new framework, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=125"
  },
  {
    "text": "you'll need to upgrade any custom intents that you built ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=127"
  },
  {
    "text": "for Siri and shortcuts to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=130"
  },
  {
    "text": "SiriKit intents are still fully supported.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=133"
  },
  {
    "text": "So if you're building for Siri domains ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=136"
  },
  {
    "text": "like messaging or media, or if you're using intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=138"
  },
  {
    "text": "with WidgetKit, you should leave them as is.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=141"
  },
  {
    "text": "To learn more about the App Intents framework, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=145"
  },
  {
    "text": "check out our session from WWDC22, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=147"
  },
  {
    "text": "\"Dive into App Intents.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=150"
  },
  {
    "text": "And to learn more about App Shortcuts, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=152"
  },
  {
    "text": "which makes it super easy for people to use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=154"
  },
  {
    "text": "your app's functionality from Siri and Spotlight, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=156"
  },
  {
    "text": "check out \"Implement App Shortcuts with App Intents.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=159"
  },
  {
    "text": "Next, let's cover migration.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=163"
  },
  {
    "text": "With migration, you can convert your existing intent definitions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=165"
  },
  {
    "text": "to App Intents with a single click in Xcode.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=169"
  },
  {
    "text": "You can support both iOS 15 and iOS 16 with the same app binary.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=172"
  },
  {
    "text": "And you can enable people's existing shortcuts ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=177"
  },
  {
    "text": "to continue working with your new App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=180"
  },
  {
    "text": "To convert your intent definitions to App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=183"
  },
  {
    "text": "all you have to do is navigate to your intent definition file ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=186"
  },
  {
    "text": "and push the Convert to App Intent button.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=189"
  },
  {
    "text": "Xcode will produce App Intents code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=192"
  },
  {
    "text": "that is equivalent to your old intent definition.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=194"
  },
  {
    "text": "Then, you can populate the code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=197"
  },
  {
    "text": "by refactoring your old content handler code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=199"
  },
  {
    "text": "We'll talk about this more in depth in the next section.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=201"
  },
  {
    "text": "In order for people to have a seamless experience ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=205"
  },
  {
    "text": "when your app upgrades to App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=207"
  },
  {
    "text": "the system automatically takes care ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=209"
  },
  {
    "text": "of mapping from your old intents to the new ones.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=211"
  },
  {
    "text": "Let's talk about how that works.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=214"
  },
  {
    "text": "Just by adopting the ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=216"
  },
  {
    "text": "CustomIntentMigratedAppIntent protocol, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=217"
  },
  {
    "text": "the system will have enough information to know ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=220"
  },
  {
    "text": "how to translate between the old and new intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=222"
  },
  {
    "text": "When you adopt this protocol, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=225"
  },
  {
    "text": "you provide the intent class name property, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=227"
  },
  {
    "text": "which is the class name that was used for your old custom intent.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=230"
  },
  {
    "text": "In most cases, you shouldn't have to provide this yourself.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=234"
  },
  {
    "text": "When you use the Convert to App Intent button, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=237"
  },
  {
    "text": "the resulting code already adopts this protocol.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=239"
  },
  {
    "text": "Because of the App Intent's migration capability, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=243"
  },
  {
    "text": "you don't need to wait until your app targets iOS 16 ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=245"
  },
  {
    "text": "to upgrade to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=248"
  },
  {
    "text": "In fact, you can easily support both newer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=250"
  },
  {
    "text": "and older operating systems with the same app binary.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=252"
  },
  {
    "text": "To do this, include both your legacy intent handlers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=256"
  },
  {
    "text": "and your App Intents in your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=259"
  },
  {
    "text": "To maximize code sharing, factor both sets ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=261"
  },
  {
    "text": "of intent handlers over a common set of business logic.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=263"
  },
  {
    "text": "Assuming you adopt the migrated App Intent protocol, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=267"
  },
  {
    "text": "shortcuts will automatically deduplicate your intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=270"
  },
  {
    "text": "when you include both sets in your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=273"
  },
  {
    "text": "So on iOS 15 and earlier, the Shortcuts app will only show ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=276"
  },
  {
    "text": "the legacy intent implementation; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=279"
  },
  {
    "text": "and on iOS 16 and newer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=282"
  },
  {
    "text": "it will only show the App Intent's implementation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=284"
  },
  {
    "text": "Once you switch your minimum deployment target ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=287"
  },
  {
    "text": "to iOS 16 or newer, you can safely delete ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=289"
  },
  {
    "text": "the legacy intent handlers and definitions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=292"
  },
  {
    "text": "for intents that you've migrated.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=294"
  },
  {
    "text": "They are no longer necessary.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=296"
  },
  {
    "text": "One thing to think about when migrating ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=299"
  },
  {
    "text": "is that people have existing shortcuts ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=300"
  },
  {
    "text": "that rely on your old intents, which they might have made ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=302"
  },
  {
    "text": "in the Shortcuts app or added using the Add to Siri button ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=305"
  },
  {
    "text": "in your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=308"
  },
  {
    "text": "The good news is those shortcuts will continue working ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=309"
  },
  {
    "text": "with your new App Intents as long as they adopt ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=312"
  },
  {
    "text": "the migrated App Intent protocol.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=314"
  },
  {
    "text": "People's shortcuts aren't overwritten ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=317"
  },
  {
    "text": "to use the new App Intents; they automatically use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=318"
  },
  {
    "text": "a common format that works for both the new and old intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=321"
  },
  {
    "text": "In order for this to work, the schemas of the legacy intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=324"
  },
  {
    "text": "and the App Intents must be compatible.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=328"
  },
  {
    "text": "In order to be compatible, the parameters of the custom intent ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=331"
  },
  {
    "text": "and the App Intent must have the same names ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=334"
  },
  {
    "text": "and equivalent types.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=337"
  },
  {
    "text": "There are some changes that you can make ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=339"
  },
  {
    "text": "without breaking schema compatibility.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=340"
  },
  {
    "text": "Specifically, you can add or remove parameters ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=343"
  },
  {
    "text": "or make existing parameters non-optional.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=346"
  },
  {
    "text": "To check schema compatibility in Xcode, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=349"
  },
  {
    "text": "check out the old intent definition file ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=352"
  },
  {
    "text": "where there's a list of parameters.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=354"
  },
  {
    "text": "Each parameter has a name and a type.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=356"
  },
  {
    "text": "In the inspector pane, there's also a field ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=359"
  },
  {
    "text": "for the intent's class name.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=360"
  },
  {
    "text": "When working on your App Intents code, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=363"
  },
  {
    "text": "make sure the intent class name matches ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=365"
  },
  {
    "text": "what was in the intent definition file, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=367"
  },
  {
    "text": "so that the system can consider the new intent ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=369"
  },
  {
    "text": "to be equivalent to the old intent.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=371"
  },
  {
    "text": "And make sure that the parameter names ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=373"
  },
  {
    "text": "and types in the App Intents code stay compatible.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=375"
  },
  {
    "text": "Again, the Convert to App Intents button in Xcode ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=379"
  },
  {
    "text": "will automatically ensure schema compatibility.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=382"
  },
  {
    "text": "So if you use the tool and don't make any changes, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=384"
  },
  {
    "text": "you'll be in good shape.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=387"
  },
  {
    "text": "Next, let's talk about how to actually convert ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=389"
  },
  {
    "text": "your existing intents to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=392"
  },
  {
    "text": "There are two steps to migrate an intent.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=394"
  },
  {
    "text": "Step one is to migrate the intent definition file ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=397"
  },
  {
    "text": "and step two is to migrate your code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=400"
  },
  {
    "text": "Let's start with the intent definition.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=403"
  },
  {
    "text": "I'm a big fan of soup, and we have an example app ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=405"
  },
  {
    "text": "called Soup Chef that lets people place orders for soup.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=408"
  },
  {
    "text": "It has an intent for placing orders with parameters ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=411"
  },
  {
    "text": "for which soup to order and how many, which toppings to add, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=414"
  },
  {
    "text": "and pickup or delivery locations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=417"
  },
  {
    "text": "I'm ready to convert this to App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=419"
  },
  {
    "text": "so I'll navigate to the intent definition file in Xcode ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=422"
  },
  {
    "text": "and press the convert button.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=425"
  },
  {
    "text": "Next, I choose which intents to convert -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=427"
  },
  {
    "text": "just the one in this case.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=429"
  },
  {
    "text": "Then I'll choose where to save my new intent code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=431"
  },
  {
    "text": "and which target to include it in.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=434"
  },
  {
    "text": "That could be my app target ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=436"
  },
  {
    "text": "or an App Intents extension target if I've added one.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=437"
  },
  {
    "text": "In this case, I'll check the app target ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=441"
  },
  {
    "text": "and the watch target too.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=443"
  },
  {
    "text": "App Intents cannot be added to framework targets.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=445"
  },
  {
    "text": "Next, I'll see the App Intents code that Xcode generated.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=448"
  },
  {
    "text": "It's broken apart across a few files which represent ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=452"
  },
  {
    "text": "all of the intents, enums, and custom types ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=455"
  },
  {
    "text": "that were included in the intent definition file.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=458"
  },
  {
    "text": "I want to call attention to a few particular areas ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=460"
  },
  {
    "text": "of my old intent definition that have been migrated.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=463"
  },
  {
    "text": "In the new code, there's an orderSoup struct ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=466"
  },
  {
    "text": "that conforms to the App Intent protocol.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=469"
  },
  {
    "text": "Note that this structure is marked as available ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=471"
  },
  {
    "text": "in iOS 16 or later.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=474"
  },
  {
    "text": "You'll need to apply that annotation to all code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=476"
  },
  {
    "text": "that uses the App Intents framework ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=479"
  },
  {
    "text": "if you're deploying your app earlier than iOS 16.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=480"
  },
  {
    "text": "Each parameter in my intent definition file, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=484"
  },
  {
    "text": "along with its metadata, has been migrated ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=486"
  },
  {
    "text": "to @Parameter declarations in the App Intent structure.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=488"
  },
  {
    "text": "All of the Shortcuts app parameter summaries ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=492"
  },
  {
    "text": "have been migrated to this parameterSummary declaration.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=494"
  },
  {
    "text": "What used to be represented as parameter relationships ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=498"
  },
  {
    "text": "can now be represented using Switch, Case, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=501"
  },
  {
    "text": "or When statements in the ParameterSummary.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=503"
  },
  {
    "text": "My Soup and Toppings custom types are now app entities, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=506"
  },
  {
    "text": "including some to-dos that I'll need to fill in later.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=510"
  },
  {
    "text": "OrderDetails is now a transient app entity.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=513"
  },
  {
    "text": "It's considered transient because it doesn't have ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=516"
  },
  {
    "text": "a unique identifier that can be used to look it up later on.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=519"
  },
  {
    "text": "And my OrderType custom enum is now an app enum.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=522"
  },
  {
    "text": "The human-readable names were migrated ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=526"
  },
  {
    "text": "to case display representations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=528"
  },
  {
    "text": "Lastly, all of the dialogs in the intent response ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=532"
  },
  {
    "text": "have been migrated to an extension on IntentDialog.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=535"
  },
  {
    "text": "These dialogs can be used for my perform method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=539"
  },
  {
    "text": "The migrator may generate more strings than are needed, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=542"
  },
  {
    "text": "so if you see ones that aren't actually used ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=545"
  },
  {
    "text": "in the old intent handler like, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=547"
  },
  {
    "text": "\"Just to confirm, you wanted \\ (soup)?,\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=548"
  },
  {
    "text": "feel free to remove them.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=551"
  },
  {
    "text": "Now that we migrated our intent definition, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=553"
  },
  {
    "text": "let's go ahead and migrate our intent-handling code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=555"
  },
  {
    "text": "Note that the autogenerated App Intent has a placeholder ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=558"
  },
  {
    "text": "for the perform() method with a to-do ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=562"
  },
  {
    "text": "noting that it needs to be filled in.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=564"
  },
  {
    "text": "Let's look at how to do that.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=566"
  },
  {
    "text": "In the old framework, you provided ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=568"
  },
  {
    "text": "an intent definition file and a set of intent handling code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=570"
  },
  {
    "text": "In the new framework, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=574"
  },
  {
    "text": "everything is represented in code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=575"
  },
  {
    "text": "The parameters in your old intent definition ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=578"
  },
  {
    "text": "have already been migrated to the new code.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=580"
  },
  {
    "text": "The resolve, confirm, and handle methods in your old code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=582"
  },
  {
    "text": "will need to be combined into a single perform method ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=586"
  },
  {
    "text": "that gets called when your intent is run.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=589"
  },
  {
    "text": "And custom types and dynamic options ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=591"
  },
  {
    "text": "will need to be refactored into entities and queries.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=593"
  },
  {
    "text": "So let's take a look at how to migrate each phase ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=597"
  },
  {
    "text": "of intent handling, starting with resolve.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=600"
  },
  {
    "text": "In the resolve phase, your intent handler validates ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=603"
  },
  {
    "text": "each parameter of your intent and prompts the user ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=605"
  },
  {
    "text": "for a value if needed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=609"
  },
  {
    "text": "When migrating resolve methods, you should take advantage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=610"
  },
  {
    "text": "of App Intents' new automatic resolution behavior ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=613"
  },
  {
    "text": "where possible.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=616"
  },
  {
    "text": "Otherwise you should refactor your resolution logic ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=618"
  },
  {
    "text": "into the perform method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=621"
  },
  {
    "text": "Let's take a look at some examples.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=622"
  },
  {
    "text": "Here's our old resolution method for the soup parameter.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=625"
  },
  {
    "text": "This follows a common pattern in the old intents framework.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=628"
  },
  {
    "text": "Try to unwrap the soup parameter.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=632"
  },
  {
    "text": "If it's nil, return a resolution result asking the user ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=634"
  },
  {
    "text": "to pick a soup using a disambiguation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=637"
  },
  {
    "text": "If it's set, return a resolution result with success ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=639"
  },
  {
    "text": "and pass back the same soup that was already specified.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=642"
  },
  {
    "text": "This kind of boilerplate is no longer necessary ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=645"
  },
  {
    "text": "with App Intents thanks to automatic resolution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=648"
  },
  {
    "text": "If you have parameters that were resolved this way before, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=651"
  },
  {
    "text": "here's how to take advantage of the new functionality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=653"
  },
  {
    "text": "By default, your migrated parameters will be optional ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=657"
  },
  {
    "text": "but you can get automatic resolution behavior ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=660"
  },
  {
    "text": "by changing the type to non-optional.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=663"
  },
  {
    "text": "When you make a parameter non-optional, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=666"
  },
  {
    "text": "App Intents will automatically ask the user for a value ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=668"
  },
  {
    "text": "if it's empty by using the suggested entities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=671"
  },
  {
    "text": "from the SoupAppEntity's query.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=673"
  },
  {
    "text": "Then, add a dialog into your parameter declaration ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=676"
  },
  {
    "text": "so that the user gets asked a specific question ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=680"
  },
  {
    "text": "when the resolution system prompts for a value like, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=682"
  },
  {
    "text": "\"Which soup do you want?\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=685"
  },
  {
    "text": "Once you do this, you don't need any resolution code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=687"
  },
  {
    "text": "for this parameter anymore.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=689"
  },
  {
    "text": "For all other types of resolution, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=691"
  },
  {
    "text": "you should move your resolve implementation ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=693"
  },
  {
    "text": "to the top of your perform() method and change your API usage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=696"
  },
  {
    "text": "to use the appropriate new APIs to ask the user ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=699"
  },
  {
    "text": "for clarification.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=702"
  },
  {
    "text": "For example, let's say your old resolve method for quantity ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=704"
  },
  {
    "text": "unwraps the quantity and throws a needsValue if it's missing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=707"
  },
  {
    "text": "and then checks to see if the quantity is greater ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=711"
  },
  {
    "text": "than the number of soups that are actually available ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=714"
  },
  {
    "text": "and returns an error if so.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=716"
  },
  {
    "text": "When we move this code to App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=718"
  },
  {
    "text": "we don't need the first part at all anymore, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=720"
  },
  {
    "text": "because we can separately ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=722"
  },
  {
    "text": "just make the quantity parameter non-optional.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=724"
  },
  {
    "text": "For that second part, we'll want to take the code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=726"
  },
  {
    "text": "that caused the completion handler ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=729"
  },
  {
    "text": "with an unsupported resolution result ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=730"
  },
  {
    "text": "and replace it with code that throws an error ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=732"
  },
  {
    "text": "indicating that there aren't enough soups in stock.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=735"
  },
  {
    "text": "We'll need to define the error as an enum, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=738"
  },
  {
    "text": "conforming to error and the custom localized string resource ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=740"
  },
  {
    "text": "convertible protocols.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=743"
  },
  {
    "text": "That way, we can provide the dialog that's spoken ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=745"
  },
  {
    "text": "or shown to the user when this case is hit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=747"
  },
  {
    "text": "If you used to have code that returned and needsValue result ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=750"
  },
  {
    "text": "dynamically like in this example, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=753"
  },
  {
    "text": "you can replace that with code that throws a needsValueError.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=755"
  },
  {
    "text": "When you throw a needsValueError, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=759"
  },
  {
    "text": "the system will prompt the user for a value with the dialog ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=761"
  },
  {
    "text": "you provide and then will run your perform method again ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=764"
  },
  {
    "text": "from the start.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=767"
  },
  {
    "text": "Another option is to use the requestValue method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=768"
  },
  {
    "text": "When you use requestValue, you can prompt the user ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=772"
  },
  {
    "text": "for a value and continue running your perform method ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=775"
  },
  {
    "text": "without starting over.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=777"
  },
  {
    "text": "In addition to the requestValue method, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=779"
  },
  {
    "text": "there are also requestDisambiguation ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=781"
  },
  {
    "text": "and requestConfirmation methods that you can use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=783"
  },
  {
    "text": "to replace your previous API usage.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=785"
  },
  {
    "text": "Next let's talk about confirm.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=788"
  },
  {
    "text": "Confirm is an opportunity to do additional validation ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=791"
  },
  {
    "text": "and supply information for the system to ask the user ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=794"
  },
  {
    "text": "to confirm that they want to proceed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=797"
  },
  {
    "text": "For validation, you should move all of the validation logic ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=799"
  },
  {
    "text": "that was in your confirm method to your perform method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=802"
  },
  {
    "text": "For asking the user for confirmation, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=805"
  },
  {
    "text": "we have a new simple requestConfirmation() API.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=807"
  },
  {
    "text": "The new API is just a single method call.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=810"
  },
  {
    "text": "Using async/await, this method will wait ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=813"
  },
  {
    "text": "until the user confirms before continuing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=816"
  },
  {
    "text": "with your perform method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=818"
  },
  {
    "text": "If they cancel, an error will be thrown, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=820"
  },
  {
    "text": "and execution of your perform method will stop.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=823"
  },
  {
    "text": "The requestConfirmation method includes several arguments ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=826"
  },
  {
    "text": "that affect the confirmation prompt, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=828"
  },
  {
    "text": "including the dialog that is spoken or shown by Siri, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=830"
  },
  {
    "text": "the SwiftUI view that's shown in the snippet, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=833"
  },
  {
    "text": "the label used for the confirmation button -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=836"
  },
  {
    "text": "in this case, order -- and the showPrompt argument, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=839"
  },
  {
    "text": "which controls whether or not the dialog should be shown ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=842"
  },
  {
    "text": "onscreen as a prompt.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=844"
  },
  {
    "text": "This should be set to false when the dialog and view ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=847"
  },
  {
    "text": "contain the same information as each other.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=849"
  },
  {
    "text": "So it makes sense for Siri to speak the dialogue ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=852"
  },
  {
    "text": "but not show it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=855"
  },
  {
    "text": "Next, let's look at handle.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=856"
  },
  {
    "text": "For refactoring handle, you can simply move your code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=858"
  },
  {
    "text": "from your handle method to the perform method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=861"
  },
  {
    "text": "You should be able to remove some validation code ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=865"
  },
  {
    "text": "from the old handle method since resolve, confirm, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=867"
  },
  {
    "text": "and handle now happen all in one single method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=869"
  },
  {
    "text": "For example, if you copied your old code from handle, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=872"
  },
  {
    "text": "you'll probably end up with code for unwrapping parameters ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=875"
  },
  {
    "text": "that are no longer optional which can now be deleted.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=879"
  },
  {
    "text": "At the end of your perform method, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=882"
  },
  {
    "text": "you should return an intent result.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=884"
  },
  {
    "text": "The result can include a variety of fields like the dialogue ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=886"
  },
  {
    "text": "for Siri to speak or a snippet view to show.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=890"
  },
  {
    "text": "Each one requires that you annotate your perform method's ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=893"
  },
  {
    "text": "return type with the appropriate protocols, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=896"
  },
  {
    "text": "like ProvidesDialog for dialog and ShowSnippetView ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=898"
  },
  {
    "text": "for the SwiftUI snippet view.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=902"
  },
  {
    "text": "Lastly, let's look at migrating dynamic options.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=905"
  },
  {
    "text": "You'll need to fill in the Query or DynamicOptionsProvider ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=908"
  },
  {
    "text": "depending on the parameter type.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=911"
  },
  {
    "text": "Xcode will provide to-dos in these places ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=913"
  },
  {
    "text": "where you need to fill them in.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=917"
  },
  {
    "text": "For a query, you'll need to implement methods ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=918"
  },
  {
    "text": "for returning entities by identifier, by string ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=920"
  },
  {
    "text": "if it's searchable, and the set of suggested entities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=924"
  },
  {
    "text": "that will appear when the user taps that parameter ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=927"
  },
  {
    "text": "in Shortcuts.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=929"
  },
  {
    "text": "For dynamic options, you can just return all of the options ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=931"
  },
  {
    "text": "in the results method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=934"
  },
  {
    "text": "And that's it! ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=936"
  },
  {
    "text": "You're finished migrating to App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=937"
  },
  {
    "text": "Before you're really done, there are a few more things ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=940"
  },
  {
    "text": "I'd recommend looking at.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=943"
  },
  {
    "text": "The first is to adopt App Shortcuts.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=945"
  },
  {
    "text": "This will let you make your intents discoverable ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=947"
  },
  {
    "text": "and let people use them just by saying a few words to Siri.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=950"
  },
  {
    "text": "Add Siri tips into your UI so people can learn ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=954"
  },
  {
    "text": "what to say to Siri to use your app's functionality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=957"
  },
  {
    "text": "These should replace any Add to Siri buttons you had before.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=961"
  },
  {
    "text": "Make sure to test the customer upgrade path ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=964"
  },
  {
    "text": "by creating shortcuts with the previous version of your app ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=967"
  },
  {
    "text": "and testing that they behave correctly ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=971"
  },
  {
    "text": "with the new versions of your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=973"
  },
  {
    "text": "And if your app works in multiple locales, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=975"
  },
  {
    "text": "think about localization.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=977"
  },
  {
    "text": "In order to localize your App Intents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=979"
  },
  {
    "text": "all of the strings included in your App Intent ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=981"
  },
  {
    "text": "should be provided as localized string resources, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=984"
  },
  {
    "text": "and you can localize them by providing a corresponding ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=987"
  },
  {
    "text": "localizable .strings file with those strings.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=989"
  },
  {
    "text": "If you use pluralized strings, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=992"
  },
  {
    "text": "you can also use a .strings dict file.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=994"
  },
  {
    "text": "When localizing App Shortcuts, add the strings into a file ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=997"
  },
  {
    "text": "called AppShortcuts.strings and replace any variables ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1001"
  },
  {
    "text": "in those strings with ${ } notation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1005"
  },
  {
    "text": "To summarize, we'd recommend upgrading your custom intents ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1010"
  },
  {
    "text": "to App Intents to get all the benefits of iOS 16's ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1013"
  },
  {
    "text": "new features and the new simpler development model ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1016"
  },
  {
    "text": "of App Intents.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1019"
  },
  {
    "text": "Make sure to add App Shortcuts so people can easily discover ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1021"
  },
  {
    "text": "and use your app's functionality.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1024"
  },
  {
    "text": "And to learn more about how to put together ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1027"
  },
  {
    "text": "a great user experience, check out ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1029"
  },
  {
    "text": "the \"Design App Shortcuts\" session from WWDC22.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1031"
  },
  {
    "text": "Thank you.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10168/?time=1036"
  }
]