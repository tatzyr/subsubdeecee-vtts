[
  {
    "text": "Metal 2 introduces a new set of APIs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=0"
  },
  {
    "text": "and shading language changes ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=3"
  },
  {
    "text": "to take advantage of the architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=5"
  },
  {
    "text": "and new features of the A11 GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=7"
  },
  {
    "text": "Let us review what is new with Metal 2 on A11. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=10"
  },
  {
    "text": "Apple designed Metal to enable rapid innovations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=14"
  },
  {
    "text": "in GPU architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=17"
  },
  {
    "text": "And in turn, the Apple GPU architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=18"
  },
  {
    "text": "has informed the design of Metal. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=21"
  },
  {
    "text": "This deep and seamless ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=24"
  },
  {
    "text": "integration of hardware and software ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=25"
  },
  {
    "text": "enables exciting new possibilities for your graphics, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=28"
  },
  {
    "text": "compute, machine learning apps, and games.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=31"
  },
  {
    "text": "Just three years after the introduction of Metal, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=35"
  },
  {
    "text": "we introduced Metal 2, the next generation of Metal, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=38"
  },
  {
    "text": "at WWDC 2017. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=42"
  },
  {
    "text": "Building on a clean and well-factored design, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=45"
  },
  {
    "text": "Metal 2 expands to include even more cutting edge ways ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=48"
  },
  {
    "text": "to access the capabilities of the GPU, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=51"
  },
  {
    "text": "such as GPU-driven rendering, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=54"
  },
  {
    "text": "which allows the GPU to dispatch graphics workloads to itself, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=56"
  },
  {
    "text": "further increasing efficiency ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=60"
  },
  {
    "text": "and decrease the draw call cost by up to 10X. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=62"
  },
  {
    "text": "In 2015, Metal expanded ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=66"
  },
  {
    "text": "to support the Mac and desktop GPUs. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=68"
  },
  {
    "text": "Now, Metal 2 aligns the API to expose key features uniformly, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=71"
  },
  {
    "text": "regardless of the underlying GPU architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=76"
  },
  {
    "text": "With the rise of machine learning ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=79"
  },
  {
    "text": "across a wide variety of domains, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=81"
  },
  {
    "text": "Metal 2 brings a wider and more sophisticated set of functions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=83"
  },
  {
    "text": "that are aimed at accelerating inference operations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=87"
  },
  {
    "text": "for improved performance and efficiency. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=90"
  },
  {
    "text": "Metal 2 also brings a new set of optimization tools ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=94"
  },
  {
    "text": "that make it far easier for you to expertly tap into ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=97"
  },
  {
    "text": "the power of the GPUs on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=100"
  },
  {
    "text": "And now, we can reveal more Metal 2 capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=103"
  },
  {
    "text": "that we didn't announce at WWDC. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=107"
  },
  {
    "text": "Metal 2 includes a set of powerful new features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=110"
  },
  {
    "text": "that expose the unique capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=113"
  },
  {
    "text": "of Apple-designed GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=115"
  },
  {
    "text": "in our latest A-series chip, the A11.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=117"
  },
  {
    "text": "Before we go into the details ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=122"
  },
  {
    "text": "of A11 GPU architecture and features, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=123"
  },
  {
    "text": "let us review the architecture of a classical GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=126"
  },
  {
    "text": "and tile-based deferred rendering architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=130"
  },
  {
    "text": "This is a simplified diagram of a classical GPU architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=133"
  },
  {
    "text": "GPUs are massively parallel machines. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=137"
  },
  {
    "text": "The vertex and fragment stages that are shown in this diagram ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=140"
  },
  {
    "text": "are replicated many times, and they run in parallel. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=143"
  },
  {
    "text": "There are also many optimizations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=147"
  },
  {
    "text": "such as cache hierarchies, FIFOs, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=149"
  },
  {
    "text": "early coarse depth test, and so on, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=152"
  },
  {
    "text": "that are not shown in this diagram. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=154"
  },
  {
    "text": "Fundamentally, GPUs with classical architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=157"
  },
  {
    "text": "take primitives and generate depth, color, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=160"
  },
  {
    "text": "data buffers, and textures. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=163"
  },
  {
    "text": "One of the defining characteristics ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=166"
  },
  {
    "text": "of this architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=168"
  },
  {
    "text": "is that the output of the vertex stage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=169"
  },
  {
    "text": "feeds directly into the fragment stage. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=171"
  },
  {
    "text": "Let us look at the tile-based deferred rendering architecture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=175"
  },
  {
    "text": "which is also known as TBDR. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=178"
  },
  {
    "text": "All A-series GPUs are based on TBDR architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=181"
  },
  {
    "text": "TBDR makes some significant changes ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=186"
  },
  {
    "text": "to the classical GPU architecture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=188"
  },
  {
    "text": "The first major difference is that the vertex stage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=191"
  },
  {
    "text": "is not fed directly into the fragment stage. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=194"
  },
  {
    "text": "Instead, as they come out of the vertex stage, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=197"
  },
  {
    "text": "the primitives are binned into screen-aligned small tiles ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=200"
  },
  {
    "text": "and stored into the memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=203"
  },
  {
    "text": "This change allows the vertex stage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=206"
  },
  {
    "text": "to run asynchronously relative to fragment stage. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=208"
  },
  {
    "text": "While running the fragment stage of a renderpass, in parallel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=211"
  },
  {
    "text": "the hardware executes the vertex stage of a future renderpass. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=215"
  },
  {
    "text": "Running vertex stage asynchronously ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=219"
  },
  {
    "text": "provides significant performance improvements. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=221"
  },
  {
    "text": "The vertex stage is usually making heavy use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=224"
  },
  {
    "text": "of fixed-function hardware, whereas the fragment stage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=226"
  },
  {
    "text": "is a heavy user of math and bandwidth. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=229"
  },
  {
    "text": "Completely overlapping them allows us to use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=232"
  },
  {
    "text": "all the hardware blocks on the GPU simultaneously. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=235"
  },
  {
    "text": "Having primitives binned to tiles allows us ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=238"
  },
  {
    "text": "to process all primitives in a tile all together. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=240"
  },
  {
    "text": "Let us see how we can take advantage of that. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=243"
  },
  {
    "text": "We put tile-sized, full resolution, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=246"
  },
  {
    "text": "depth, stencil, and frame buffers on the chip ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=249"
  },
  {
    "text": "next to our shader cores. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=251"
  },
  {
    "text": "We call this memory tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=254"
  },
  {
    "text": "There are three important characteristics ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=257"
  },
  {
    "text": "of the tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=259"
  },
  {
    "text": "First, the bandwidth between the shader core and tile memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=260"
  },
  {
    "text": "is many times higher than the bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=264"
  },
  {
    "text": "between the GPU and the external memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=266"
  },
  {
    "text": "and scales proportionally with the number of shader cores.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=268"
  },
  {
    "text": "Second, the memory access latency to the tile memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=273"
  },
  {
    "text": "is many times lower than the latency for the accesses ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=276"
  },
  {
    "text": "to the external memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=279"
  },
  {
    "text": "Finally, tile memory consumes significantly lower power ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=280"
  },
  {
    "text": "than the external memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=284"
  },
  {
    "text": "TBDR uses this low-latency, low-power-consumption, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=286"
  },
  {
    "text": "high-bandwidth memory for two major optimizations. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=290"
  },
  {
    "text": "First, the tile depth/stencil memory allows the hardware ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=294"
  },
  {
    "text": "to generate full depth and stencil buffer information ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=297"
  },
  {
    "text": "for opaque objects ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=300"
  },
  {
    "text": "before the shading core starts to process them, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=302"
  },
  {
    "text": "which enables the hardware to perfectly cull fragments ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=304"
  },
  {
    "text": "that are occluded before sending to the shader core. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=308"
  },
  {
    "text": "If the depth buffer is not needed ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=312"
  },
  {
    "text": "for the subsequent renderpasses, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=314"
  },
  {
    "text": "the full-size depth buffer can be entirely eliminated ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=316"
  },
  {
    "text": "through the use of memoryless render targets, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=319"
  },
  {
    "text": "saving a large amount of memory bandwidth, storage, and power. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=321"
  },
  {
    "text": "Second, tile memory is used ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=326"
  },
  {
    "text": "for storing the color buffers on the chip. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=328"
  },
  {
    "text": "Blending operations are fast ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=330"
  },
  {
    "text": "because they do not need to access ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=332"
  },
  {
    "text": "the full-sized frame buffer on the external memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=334"
  },
  {
    "text": "Tile memory is written only once, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=337"
  },
  {
    "text": "after the entire tile is processed, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=339"
  },
  {
    "text": "and saves significant amounts of power, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=340"
  },
  {
    "text": "performance, and bandwidth. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=343"
  },
  {
    "text": "Higher occupancy is achieved thanks to this faster memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=345"
  },
  {
    "text": "The framebuffer fetch feature ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=349"
  },
  {
    "text": "allows you to implement custom blending ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=350"
  },
  {
    "text": "and enables several advanced techniques. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=352"
  },
  {
    "text": "Combined with memoryless frame buffers, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=355"
  },
  {
    "text": "many of these techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=357"
  },
  {
    "text": "do not need to consume external memory either. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=359"
  },
  {
    "text": "As a result, TBDR brings great performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=362"
  },
  {
    "text": "even when bandwidth is limited. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=366"
  },
  {
    "text": "TBDR consumes much lower power, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=368"
  },
  {
    "text": "which is essential for battery-powered devices.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=370"
  },
  {
    "text": "Let us now switch gears to A11 GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=374"
  },
  {
    "text": "On A11, the first major change we made to the GPU architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=377"
  },
  {
    "text": "is to give you direct control of data residing in tile memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=382"
  },
  {
    "text": "from your fragment functions. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=386"
  },
  {
    "text": "Imageblocks provide optimized access to image data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=389"
  },
  {
    "text": "residing in tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=391"
  },
  {
    "text": "You'll be able to lay out pixels ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=393"
  },
  {
    "text": "in the way that makes sense to your application, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=395"
  },
  {
    "text": "yet can still be rendered to efficiently. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=398"
  },
  {
    "text": "An imageblock is a 2D data structure in tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=401"
  },
  {
    "text": "You can specify its width, height, depth, and format. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=405"
  },
  {
    "text": "Metal 2 adds texture pixel formats ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=409"
  },
  {
    "text": "to the shading language ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=411"
  },
  {
    "text": "to give you full control over the pixel layout ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=413"
  },
  {
    "text": "through the packed data types. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=415"
  },
  {
    "text": "The second major architectural change ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=418"
  },
  {
    "text": "gives you access to all pixels that are stored in tile memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=420"
  },
  {
    "text": "at the same time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=424"
  },
  {
    "text": "Tile shading is the new programmable stage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=426"
  },
  {
    "text": "in Apple's A11 GPU that provides compute capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=428"
  },
  {
    "text": "inline within render passes. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=432"
  },
  {
    "text": "Tile shading enables a whole new level of performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=435"
  },
  {
    "text": "and efficiency in Metal 2. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=438"
  },
  {
    "text": "Rendering and compute operations can now share the data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=441"
  },
  {
    "text": "through the higher bandwidth, lower latency, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=443"
  },
  {
    "text": "and lower power tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=446"
  },
  {
    "text": "Tile shading is deeply integrated with imageblocks. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=448"
  },
  {
    "text": "You will be able to analyze imageblock contents, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=451"
  },
  {
    "text": "summarize that content, store imageblocks mid-scene, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=455"
  },
  {
    "text": "and even change imageblock layouts. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=458"
  },
  {
    "text": "You can also use threadgroup memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=461"
  },
  {
    "text": "just like a regular compute kernel would. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=463"
  },
  {
    "text": "For tile shaders, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=465"
  },
  {
    "text": "the threadgroup memory is persistent. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=467"
  },
  {
    "text": "Each successive invocation of tile shader ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=469"
  },
  {
    "text": "can operate on the threadgroup memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=471"
  },
  {
    "text": "starting with the values that are left ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=474"
  },
  {
    "text": "from the previous tile shader. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=476"
  },
  {
    "text": "This is true for imageblock memory as well. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=477"
  },
  {
    "text": "They are persistent between invocations of ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=480"
  },
  {
    "text": "tile and fragment shaders. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=482"
  },
  {
    "text": "Additionally, we are introducing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=484"
  },
  {
    "text": "an advanced version of raster order groups ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=486"
  },
  {
    "text": "that supports imageblock and tile shading. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=488"
  },
  {
    "text": "And finally, we are extending the Metal shading language ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=491"
  },
  {
    "text": "to give you full control over sample coverage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=494"
  },
  {
    "text": "for multi-sampled imageblocks. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=496"
  },
  {
    "text": "Let us see a set of rendering techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=499"
  },
  {
    "text": "that can take great advantage of the new architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=501"
  },
  {
    "text": "and the new Metal 2 features.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=504"
  },
  {
    "text": "Tile shaders, imageblocks, and raster order groups ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=507"
  },
  {
    "text": "are a great way to combine interleaved, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=510"
  },
  {
    "text": "render, and compute passes into a single combined pass. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=511"
  },
  {
    "text": "Deferred rendering and tiled forward rendering ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=516"
  },
  {
    "text": "could be accelerated this way. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=518"
  },
  {
    "text": "Let us look at the tiled forward implementation as an example. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=520"
  },
  {
    "text": "You can pass geometry to create on-chip depth information first, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=524"
  },
  {
    "text": "then run a tile shader ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=529"
  },
  {
    "text": "to create per tile min-max depth information, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=530"
  },
  {
    "text": "run another tile shader to create a culled light list ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=534"
  },
  {
    "text": "in threadgroup memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=537"
  },
  {
    "text": "and then run your material shaders. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=539"
  },
  {
    "text": "All of these operations can be done in one combined pass, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=542"
  },
  {
    "text": "increasing performance by eliminating ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=545"
  },
  {
    "text": "large amounts of bandwidth, storage, and power. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=547"
  },
  {
    "text": "These features also enable efficient implementations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=551"
  },
  {
    "text": "of order-independent transparency, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=554"
  },
  {
    "text": "multi-layer alpha blending, and sub-surface scattering. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=555"
  },
  {
    "text": "Sample coverage control, tile shaders, and imageblock ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=560"
  },
  {
    "text": "enable much more efficient ways of doing custom MSAA resolves, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=563"
  },
  {
    "text": "MSAA tone mapping, and surface aggregation. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=567"
  },
  {
    "text": "To show how some of these use cases can be accelerated, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=571"
  },
  {
    "text": "we are releasing sample code for deferred rendering, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=574"
  },
  {
    "text": "tiled forward, multi-layer alpha blending, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=577"
  },
  {
    "text": "and surface aggregation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=580"
  },
  {
    "text": "Metal 2 on A11 advances the TBDR architecture ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=584"
  },
  {
    "text": "by introducing imageblocks, tile shaders, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=587"
  },
  {
    "text": "imageblock sample coverage control, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=592"
  },
  {
    "text": "and raster order groups. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=594"
  },
  {
    "text": "Additionally, we introduced new Metal shading language changes ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=596"
  },
  {
    "text": "to give you new and efficient mechanisms to share data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=599"
  },
  {
    "text": "between your compute threads and threadgroups. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=603"
  },
  {
    "text": "Let us briefly review these and other additional features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=606"
  },
  {
    "text": "and performance improvements on A11.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=609"
  },
  {
    "text": "Let us start with imageblocks. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=613"
  },
  {
    "text": "An imageblock is a 2D data structure in tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=615"
  },
  {
    "text": "Fragment functions can only access a single pixel ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=619"
  },
  {
    "text": "that corresponds to its location, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=622"
  },
  {
    "text": "whereas kernels can access the entire imageblock. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=624"
  },
  {
    "text": "Each pixel can be quite complex, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=627"
  },
  {
    "text": "consisting of multiple components, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=629"
  },
  {
    "text": "and each component can be addressed ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=631"
  },
  {
    "text": "as its own image plane. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=633"
  },
  {
    "text": "Imageblocks also provide bulk access ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=636"
  },
  {
    "text": "to the GPU's format conversion hardware. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=638"
  },
  {
    "text": "Floating point pixels will be converted to ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=640"
  },
  {
    "text": "the destination texture format when stored to device memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=643"
  },
  {
    "text": "Tile shaders provide compute capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=648"
  },
  {
    "text": "inline within render passes. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=650"
  },
  {
    "text": "Tile shaders can access the entire imageblock, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=653"
  },
  {
    "text": "and just like regular compute kernels, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=655"
  },
  {
    "text": "they have support for threadgroup memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=657"
  },
  {
    "text": "Unlike a threadgroup memory of a compute kernel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=660"
  },
  {
    "text": "the threadgroup memory of a tile shader ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=663"
  },
  {
    "text": "persists across the lifetime of a tile, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=665"
  },
  {
    "text": "just like color data persists across draws. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=668"
  },
  {
    "text": "So where before you were limited ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=671"
  },
  {
    "text": "to communicating across draws within the scope of a pixel ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=672"
  },
  {
    "text": "using the framebuffer fetch feature, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=675"
  },
  {
    "text": "you can now communicate between the tile dispatches ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=677"
  },
  {
    "text": "and fragment draw calls using the wider tile scope. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=680"
  },
  {
    "text": "Let us now look into how A11 improves MSAA ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=684"
  },
  {
    "text": "over previous generations. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=687"
  },
  {
    "text": "Apple's A-series GPUs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=689"
  },
  {
    "text": "have a very efficient MSAA implementation. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=691"
  },
  {
    "text": "When the fragment is not an edge fragment, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=694"
  },
  {
    "text": "the hardware blending executes once per fragment, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=697"
  },
  {
    "text": "not once per sample. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=699"
  },
  {
    "text": "Additionally, you can resolve directly from tile memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=701"
  },
  {
    "text": "to the resolve attachment ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=705"
  },
  {
    "text": "and avoid incurring additional memory bandwidth. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=706"
  },
  {
    "text": "Through the use of Metal's ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=709"
  },
  {
    "text": "memoryless render target feature, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=711"
  },
  {
    "text": "you can also eliminate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=713"
  },
  {
    "text": "MSAA rendertarget memory storage entirely. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=714"
  },
  {
    "text": "With Metal 2 on A11, we took MSAA even further. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=717"
  },
  {
    "text": "While our current A-series GPUs already track edges in a pixel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=721"
  },
  {
    "text": "the A11 GPU extends this tracking ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=725"
  },
  {
    "text": "to an even finer granularity ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=728"
  },
  {
    "text": "by tracking the number of unique samples within each pixel. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=731"
  },
  {
    "text": "This hardware change makes your multisample applications faster ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=734"
  },
  {
    "text": "without requiring any changes to your application. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=738"
  },
  {
    "text": "With A11, Metal 2 also gives you ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=741"
  },
  {
    "text": "full control of this tracking metadata ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=744"
  },
  {
    "text": "with imageblock sample coverage control. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=746"
  },
  {
    "text": "You can also leverage this feature in combination with ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=749"
  },
  {
    "text": "threadgroup imageblocks and tile shaders. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=751"
  },
  {
    "text": "With imageblock sample coverage control, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=754"
  },
  {
    "text": "your tile pipeline can modify ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=757"
  },
  {
    "text": "the GPU's sample coverage tracking data, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=759"
  },
  {
    "text": "allowing you to resolve sample data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=761"
  },
  {
    "text": "at any time in a render pass ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=763"
  },
  {
    "text": "with your own custom resolve algorithm. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=765"
  },
  {
    "text": "Raster order groups enable you to access memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=769"
  },
  {
    "text": "from overlapping fragment functions in submission order, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=771"
  },
  {
    "text": "and allows fragment functions to communicate. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=774"
  },
  {
    "text": "A11 extends the raster order groups' functionality. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=777"
  },
  {
    "text": "First, A11 exposes the GPU's internal tile memory. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=781"
  },
  {
    "text": "Raster order groups make tile memory more useful ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=785"
  },
  {
    "text": "by giving you access to it in a predictable order. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=788"
  },
  {
    "text": "Second, where raster order groups on other GPUs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=792"
  },
  {
    "text": "are limited to only one mutex per pixel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=795"
  },
  {
    "text": "A11 can go finer-grained than that, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=798"
  },
  {
    "text": "allowing an even lighter touch ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=800"
  },
  {
    "text": "and minimizing how often your threads are waiting for access.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=802"
  },
  {
    "text": "Now let us look at how Metal 2 accelerates data sharing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=807"
  },
  {
    "text": "between threads and threadgroups. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=810"
  },
  {
    "text": "Metal 2 shading language extends atomic functions ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=812"
  },
  {
    "text": "with memory order and scope attributes. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=814"
  },
  {
    "text": "These new additions enable new ways of flexible ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=818"
  },
  {
    "text": "and efficient sharing of data between threads. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=820"
  },
  {
    "text": "Before Metal 2, to communicate between threadgroups ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=824"
  },
  {
    "text": "required completing the kernel execution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=828"
  },
  {
    "text": "and issuing a new kernel to consume the outputs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=830"
  },
  {
    "text": "of the threadgroups of the first kernel. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=833"
  },
  {
    "text": "On Metal 2, threadgroups can communicate directly ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=835"
  },
  {
    "text": "with each other. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=838"
  },
  {
    "text": "Additionally, with the addition of these new features, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=839"
  },
  {
    "text": "threads within a threadgroup ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=842"
  },
  {
    "text": "can communicate without using a barrier ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=844"
  },
  {
    "text": "resulting in improved performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=847"
  },
  {
    "text": "We also added some other significant features ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=850"
  },
  {
    "text": "and capabilities to Metal 2 on A11. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=853"
  },
  {
    "text": "On A11, f16 math has overall better accuracy ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=856"
  },
  {
    "text": "through the improvements to rounding ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=860"
  },
  {
    "text": "and the maximum value handling. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=862"
  },
  {
    "text": "A11 adds support for texture cube arrays, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=864"
  },
  {
    "text": "and introduces read-write texture functionality. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=867"
  },
  {
    "text": "With A11, an array of sampler coverage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=871"
  },
  {
    "text": "comes to A-series GPUs. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=873"
  },
  {
    "text": "A11 adds post-depth coverage feature ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=876"
  },
  {
    "text": "and provides a more flexible way of dispatching compute kernels. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=878"
  },
  {
    "text": "A11 adds support for quad scoped permute operations as well. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=884"
  },
  {
    "text": "For further details about these features, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=888"
  },
  {
    "text": "please check the Metal 2 documentation. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=890"
  },
  {
    "text": "A11 makes many significant performance improvements ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=894"
  },
  {
    "text": "to the GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=897"
  },
  {
    "text": "It has up to 2X math performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=898"
  },
  {
    "text": "when it comes to tasks for computer vision, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=900"
  },
  {
    "text": "image processing, and machine learning. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=903"
  },
  {
    "text": "But that is not the only area of improvement for performance. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=906"
  },
  {
    "text": "Let us review the improved performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=910"
  },
  {
    "text": "and capabilities of A11 GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=911"
  },
  {
    "text": "We doubled F16 math and texture filtering rate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=914"
  },
  {
    "text": "per clock cycle when compared to A10 GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=918"
  },
  {
    "text": "Please note: On A11, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=922"
  },
  {
    "text": "using F16 data types in your shaders when possible ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=924"
  },
  {
    "text": "makes a much larger performance difference. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=927"
  },
  {
    "text": "We doubled the maximum threadgroup size ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=931"
  },
  {
    "text": "from 512 to 1K on A11. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=932"
  },
  {
    "text": "Maximum multiple render target size increased ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=936"
  },
  {
    "text": "from 256 bits to 512 bits. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=938"
  },
  {
    "text": "Maximum threadgroup memory size doubled from 16K to 32K. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=942"
  },
  {
    "text": "We also made significant improvement ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=947"
  },
  {
    "text": "over the performance of feedback operations. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=949"
  },
  {
    "text": "They're also known as alpha-test and discard. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=951"
  },
  {
    "text": "For more information about Metal 2 ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=955"
  },
  {
    "text": "and links to the sample code, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=957"
  },
  {
    "text": "please visit the developer website at ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=959"
  },
  {
    "text": "developer.apple.com/metal. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=961"
  },
  {
    "text": "Thank you for watching!",
    "link": "https://developer.apple.com/videos/play/tech-talks-602/?time=965"
  }
]