[
  {
    "text": "Jason Fielder: Hi, my name's Jason Fielder, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1"
  },
  {
    "text": "and I'm with GPU Software Engineering team here at Apple.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=3"
  },
  {
    "text": "We're going to learn how to take advantage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=7"
  },
  {
    "text": "of the awesome graphics processing capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=8"
  },
  {
    "text": "of our new M1 Pro and M1 Max notebooks, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=11"
  },
  {
    "text": "and we'll be exploring the best practices you can adopt ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=14"
  },
  {
    "text": "to make your applications perform great on our GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=17"
  },
  {
    "text": "Our latest MacBook Pros feature the most powerful chips ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=22"
  },
  {
    "text": "we have ever created.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=25"
  },
  {
    "text": "The M1 Pro has up to 16 GPU cores, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=27"
  },
  {
    "text": "and the M1 Max doubles that to 32.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=30"
  },
  {
    "text": "This, coupled with much higher DRAM bandwidth, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=33"
  },
  {
    "text": "greatly increases the performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=37"
  },
  {
    "text": "of the MacBook Pro.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=38"
  },
  {
    "text": "The system memory is now available to the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=40"
  },
  {
    "text": "thanks to our Unified Memory Architecture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=42"
  },
  {
    "text": "and with up to 64GB available, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=45"
  },
  {
    "text": "our GPU application is able to access more memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=47"
  },
  {
    "text": "than ever before.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=50"
  },
  {
    "text": "These MacBook Pros will open up a whole new world ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=53"
  },
  {
    "text": "of possibilities for developers and creative pros, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=55"
  },
  {
    "text": "enabling workflows that were previously only targeting ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=58"
  },
  {
    "text": "desktop machines.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=61"
  },
  {
    "text": "So how do we open up this new world of GPU potential? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=64"
  },
  {
    "text": "We'll start with a recap of Metal Compute, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=67"
  },
  {
    "text": "which enables work to be scheduled on the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=69"
  },
  {
    "text": "Then, with an understanding ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=72"
  },
  {
    "text": "of the API and the GPU architecture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=74"
  },
  {
    "text": "we will look at the best practices ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=76"
  },
  {
    "text": "for each stage of your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=78"
  },
  {
    "text": "Then we'll conclude with some specific kernel optimizations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=80"
  },
  {
    "text": "that you can apply.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=83"
  },
  {
    "text": "Let's start with a quick refresh of Metal Compute.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=85"
  },
  {
    "text": "Metal is Apple's modern low-overhead API ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=89"
  },
  {
    "text": "for performing GPU work.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=91"
  },
  {
    "text": "It is designed to be as thin and as efficient as possible ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=94"
  },
  {
    "text": "and provides a unified graphics and compute interface.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=97"
  },
  {
    "text": "Metal is multithread friendly, enabling work to be ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=101"
  },
  {
    "text": "trivially queued from multiple CPU threads, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=103"
  },
  {
    "text": "and gives you, the developer, flexibility to use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=106"
  },
  {
    "text": "an offline or online shader compilation pipeline.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=108"
  },
  {
    "text": "Under the hood in our hardware layer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=113"
  },
  {
    "text": "we have a CPU and GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=115"
  },
  {
    "text": "both connected to the same physical memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=116"
  },
  {
    "text": "The CPU creates GPU resources within the unified memory block, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=119"
  },
  {
    "text": "and both the GPU and CPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=123"
  },
  {
    "text": "are able to read and write to these resources.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=124"
  },
  {
    "text": "We've a few layers of API to work through ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=129"
  },
  {
    "text": "to see a kernel executed on the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=131"
  },
  {
    "text": "The top layer is the command queue.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=134"
  },
  {
    "text": "As per its name, this object allows an application ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=136"
  },
  {
    "text": "to queue work for execution at some points on the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=139"
  },
  {
    "text": "The commands are batched up on the CPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=143"
  },
  {
    "text": "through a command buffer.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=146"
  },
  {
    "text": "These objects are transient, and you'll create a lot of these ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=148"
  },
  {
    "text": "at the granularity that makes sense for your app.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=151"
  },
  {
    "text": "You may find this is imposed by requirements around ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=153"
  },
  {
    "text": "CPU and GPU synchronization, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=156"
  },
  {
    "text": "but in short, you'll want to ensure you have enough work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=158"
  },
  {
    "text": "to keep the GPU fully busy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=161"
  },
  {
    "text": "To put instructions into the command buffer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=164"
  },
  {
    "text": "we'll need a command encoder.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=166"
  },
  {
    "text": "There are different types of command encoders ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=168"
  },
  {
    "text": "targeting different types of work.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=170"
  },
  {
    "text": "There's a graphics encoder for 3D draws, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=172"
  },
  {
    "text": "a blit encoder for copying resources around, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=174"
  },
  {
    "text": "but for this talk, we'll focus on the compute encoder ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=176"
  },
  {
    "text": "for kernel dispatches.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=179"
  },
  {
    "text": "With a compute encoder in place, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=181"
  },
  {
    "text": "we're now ready to encode a kernel dispatch.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=183"
  },
  {
    "text": "Along with the kernel function itself, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=186"
  },
  {
    "text": "the encoder is how resources needed by the kernel ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=188"
  },
  {
    "text": "are bound to it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=190"
  },
  {
    "text": "In fact we can encode multiple kernel dispatches ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=192"
  },
  {
    "text": "to the same encoder.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=195"
  },
  {
    "text": "We can change kernel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=196"
  },
  {
    "text": "or bound resources between each dispatch ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=198"
  },
  {
    "text": "and also inform Metal whether a dispatch ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=200"
  },
  {
    "text": "can be executed concurrently ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=202"
  },
  {
    "text": "or should be serialized and executed ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=204"
  },
  {
    "text": "after the previous dispatch has completed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=206"
  },
  {
    "text": "With our encoding complete, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=210"
  },
  {
    "text": "we end the encoder which makes the command buffer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=212"
  },
  {
    "text": "available to either start encoding a new encoder ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=214"
  },
  {
    "text": "or to commit the command buffer to the GPU for execution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=217"
  },
  {
    "text": "Here we've encoded a total of three compute encoders ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=221"
  },
  {
    "text": "to the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=224"
  },
  {
    "text": "This represents a body of work from start to finish, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=226"
  },
  {
    "text": "and we're ready to instruct the GPU to start executing it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=228"
  },
  {
    "text": "A call to commit returns immediately, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=232"
  },
  {
    "text": "and Metal will ensure that the work is scheduled ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=235"
  },
  {
    "text": "and executed on the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=237"
  },
  {
    "text": "once all other work before it in the queue has completed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=239"
  },
  {
    "text": "The CPU thread is now available ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=242"
  },
  {
    "text": "to start building a new command buffer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=244"
  },
  {
    "text": "or perform any other app work that's appropriate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=246"
  },
  {
    "text": "while the GPU is busy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=248"
  },
  {
    "text": "The CPU is likely going to need to know ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=250"
  },
  {
    "text": "when a body of work has been completed, though, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=252"
  },
  {
    "text": "so that its results can be read back.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=255"
  },
  {
    "text": "For this, the command buffer has two techniques for us.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=258"
  },
  {
    "text": "Here, before committing the work, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=261"
  },
  {
    "text": "the application can add a completion handler function ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=263"
  },
  {
    "text": "that will be invoked by Metal once the work has completed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=266"
  },
  {
    "text": "For simple cases, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=269"
  },
  {
    "text": "there is a synchronous method called waitUntilComplete ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=270"
  },
  {
    "text": "that will block the calling CPU thread, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=273"
  },
  {
    "text": "but here we're using the asynchronous method.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=275"
  },
  {
    "text": "So this is our basic execution model.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=278"
  },
  {
    "text": "One final feature of the API is that multiple command buffers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=281"
  },
  {
    "text": "can be encoded simultaneously.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=285"
  },
  {
    "text": "Multiple CPU threads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=287"
  },
  {
    "text": "can encode multiple command buffers at once, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=289"
  },
  {
    "text": "and commit the work once encoding is complete.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=291"
  },
  {
    "text": "If ordering is important, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=294"
  },
  {
    "text": "either reserve the command buffer's place for execution ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=296"
  },
  {
    "text": "in the command queue by calling enqueue, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=299"
  },
  {
    "text": "or alternatively, simply call commit ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=301"
  },
  {
    "text": "in the desired order.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=303"
  },
  {
    "text": "Use whichever approach fits your application best.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=305"
  },
  {
    "text": "With the possibility of creating multiple command queues too, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=308"
  },
  {
    "text": "the flexibility of Metal enables an app to encode work to the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=311"
  },
  {
    "text": "in a pattern most efficient for its needs.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=316"
  },
  {
    "text": "So that's the recap of the execution model Metal exposes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=320"
  },
  {
    "text": "Let's build on that ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=323"
  },
  {
    "text": "and take a look at how to optimize for it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=324"
  },
  {
    "text": "We've a handful of recommendations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=328"
  },
  {
    "text": "on how your app should access GPU memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=329"
  },
  {
    "text": "to take advantage of our Unified Memory Architecture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=331"
  },
  {
    "text": "how to submit work to the GPU to align with the compute model ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=334"
  },
  {
    "text": "we just went over, and how to choose ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=338"
  },
  {
    "text": "which resources to allocate to align best with our UMA.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=340"
  },
  {
    "text": "First up to talk about is definitely ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=345"
  },
  {
    "text": "the Unified Memory Architecture.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=347"
  },
  {
    "text": "This set of best practices is about minimizing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=350"
  },
  {
    "text": "the amount of work necessary on the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=352"
  },
  {
    "text": "With a Unified Memory Architecture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=355"
  },
  {
    "text": "the traditional management of copies between system RAM ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=357"
  },
  {
    "text": "and video RAM goes away.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=360"
  },
  {
    "text": "Metal exposes the UMA through shared resources ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=362"
  },
  {
    "text": "that allow the GPU and CPU to read and write the same memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=365"
  },
  {
    "text": "Resource management is then about synchronizing the access ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=371"
  },
  {
    "text": "between the CPU and GPU to happen safely at the right time, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=373"
  },
  {
    "text": "rather than duplicating or shadowing data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=378"
  },
  {
    "text": "between system memory and video memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=380"
  },
  {
    "text": "Working from a single instance of a resource in memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=382"
  },
  {
    "text": "drastically reduces the requirements on memory bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=386"
  },
  {
    "text": "your app may have, enabling large performance gains.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=388"
  },
  {
    "text": "Where there is possible contention -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=393"
  },
  {
    "text": "such as the CPU needing to update a buffer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=395"
  },
  {
    "text": "for a second batch of work while the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=397"
  },
  {
    "text": "is still executing the first batch -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=399"
  },
  {
    "text": "an explicit multi-buffer model is necessary.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=402"
  },
  {
    "text": "The CPU prepares content in buffer n, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=405"
  },
  {
    "text": "while the GPU is reading from buffer n-1 ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=408"
  },
  {
    "text": "and then increments n for the next batch.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=411"
  },
  {
    "text": "This allows you as the app developer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=413"
  },
  {
    "text": "to tune for your memory overheads and access patterns, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=416"
  },
  {
    "text": "and avoid unnecessary CPU/GPU stalls or copies.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=418"
  },
  {
    "text": "The limit on amount of GPU resources an app can allocate ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=424"
  },
  {
    "text": "has two values to be aware of.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=428"
  },
  {
    "text": "The total amount of GPU resources that can be allocated, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=430"
  },
  {
    "text": "and more critically, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=433"
  },
  {
    "text": "the amount of memory a single command encoder ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=435"
  },
  {
    "text": "can reference at any one time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=437"
  },
  {
    "text": "This limit is known as the working set limit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=440"
  },
  {
    "text": "It can be fetched from the Metal device at runtime ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=444"
  },
  {
    "text": "through reading recommendedMaxWorkingSetSize.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=446"
  },
  {
    "text": "We recommend you make use of this in your app ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=450"
  },
  {
    "text": "to help control how much memory you look to use ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=452"
  },
  {
    "text": "and rely on being available.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=454"
  },
  {
    "text": "While a single command encoder has this working set limit, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=457"
  },
  {
    "text": "Metal's able to allocate further resources beyond this.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=460"
  },
  {
    "text": "Metal manages the residency of these resources for you, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=463"
  },
  {
    "text": "and just like system memory allocations, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=467"
  },
  {
    "text": "the GPU allocations are also virtually allocated ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=469"
  },
  {
    "text": "and made resident before execution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=472"
  },
  {
    "text": "By breaking up your resource usage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=475"
  },
  {
    "text": "across multiple command encoders, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=477"
  },
  {
    "text": "an application can use total resources ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=479"
  },
  {
    "text": "in excess of the working set size ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=481"
  },
  {
    "text": "and avoid the traditional constraints ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=484"
  },
  {
    "text": "associated with hard VRAM limits.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=486"
  },
  {
    "text": "For the new MacBook Pros, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=490"
  },
  {
    "text": "the GPU working set size is shown in this table.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=492"
  },
  {
    "text": "Now, for an M1 Pro or M1 Max with 32GB of system RAM, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=496"
  },
  {
    "text": "the GPU can access 21GB of memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=501"
  },
  {
    "text": "and for an M1 Max with 64GB of RAM, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=504"
  },
  {
    "text": "the GPU can access 48GB of memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=508"
  },
  {
    "text": "This is by far the highest amount of memory ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=512"
  },
  {
    "text": "we've ever made available to the GPU in a Mac, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=515"
  },
  {
    "text": "and the new MacBook Pro lineup ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=517"
  },
  {
    "text": "offers greatly expanded capabilities to users.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=519"
  },
  {
    "text": "We're really excited to see what experiences ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=522"
  },
  {
    "text": "you'll be able to empower users with ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=525"
  },
  {
    "text": "and to experience what they'll create with it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=527"
  },
  {
    "text": "That's our best practices for working with UMA, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=531"
  },
  {
    "text": "and we're ready for our next topic.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=534"
  },
  {
    "text": "At the command buffer level, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=538"
  },
  {
    "text": "there's latency with submitting it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=539"
  },
  {
    "text": "Small amounts of work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=542"
  },
  {
    "text": "can lead to more time spent waiting than working.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=543"
  },
  {
    "text": "Look to batch more encoders together ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=546"
  },
  {
    "text": "into each command buffer before making that call to commit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=548"
  },
  {
    "text": "If your app spends time waiting for GPU results ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=553"
  },
  {
    "text": "to inform what should be dispatched next, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=555"
  },
  {
    "text": "then bubbles will appear in the GPU timeline.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=558"
  },
  {
    "text": "In these bubbles, the GPU is sitting idle, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=561"
  },
  {
    "text": "waiting for the next dispatch to arrive.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=563"
  },
  {
    "text": "To hide this, consider using multiple CPU threads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=566"
  },
  {
    "text": "working on multiple pieces of work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=569"
  },
  {
    "text": "and keep the GPU busy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=571"
  },
  {
    "text": "Either by creating multiple command buffers, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=573"
  },
  {
    "text": "or by creating multiple command queues.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=575"
  },
  {
    "text": "For the kernel dispatches themselves, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=580"
  },
  {
    "text": "the GPU is kept busy by having enough threads to work on, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=582"
  },
  {
    "text": "and with enough work within each thread ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=586"
  },
  {
    "text": "to justify the overheads of launching it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=587"
  },
  {
    "text": "In our image processing example here, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=590"
  },
  {
    "text": "each pixel is processed by a single thread.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=593"
  },
  {
    "text": "When you can, increase the number of total threads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=597"
  },
  {
    "text": "in the kernel dispatches to ensure all processing cores ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=600"
  },
  {
    "text": "of the GPU can be utilized.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=603"
  },
  {
    "text": "Here, a single kernel dispatch ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=606"
  },
  {
    "text": "is used to process the entire image ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=608"
  },
  {
    "text": "allowing Metal and the GPU to optimally distribute the work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=610"
  },
  {
    "text": "across all available processing cores.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=613"
  },
  {
    "text": "Finally, where you do have and need smaller thread counts, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=617"
  },
  {
    "text": "use the concurrent dispatch model ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=620"
  },
  {
    "text": "instead of the default serialize model.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=622"
  },
  {
    "text": "We've observed many applications that run great on M1, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=625"
  },
  {
    "text": "but fall short of their potential ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=628"
  },
  {
    "text": "on M1 Pro and M1 Max.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=630"
  },
  {
    "text": "Submitting work in larger volumes using these techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=632"
  },
  {
    "text": "is an easy way for your application to scale ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=635"
  },
  {
    "text": "and reach its potential.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=638"
  },
  {
    "text": "The next consideration I want to talk about are L1 caches.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=643"
  },
  {
    "text": "Apple Silicon GPUs contain separate L1 caches ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=647"
  },
  {
    "text": "for texture reads and buffer reads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=650"
  },
  {
    "text": "With Metal being a unified API across graphics and compute, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=653"
  },
  {
    "text": "the full suite of texture objects and samplers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=657"
  },
  {
    "text": "are available to apps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=659"
  },
  {
    "text": "So if your application is only using buffers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=662"
  },
  {
    "text": "for its data sources, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=664"
  },
  {
    "text": "there are performance benefits to be had ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=665"
  },
  {
    "text": "from moving some of these resources to textures.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=667"
  },
  {
    "text": "This will allow better utilization of the GPU's ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=670"
  },
  {
    "text": "high performance caches, reduce traffic from RAM, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=673"
  },
  {
    "text": "and increase performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=676"
  },
  {
    "text": "Let's see what that looks like.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=679"
  },
  {
    "text": "While the GPU accesses RAM for reads of all resources, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=681"
  },
  {
    "text": "there's a cache for improving the performance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=685"
  },
  {
    "text": "of future buffer reads to the same local area of memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=687"
  },
  {
    "text": "The cache is of a limited size, though, and will fill quickly, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=691"
  },
  {
    "text": "so older data that hasn't been read for a while ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=694"
  },
  {
    "text": "will be discarded to make way for newer reads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=696"
  },
  {
    "text": "Hypothetically, if our kernel operated on a small enough ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=701"
  },
  {
    "text": "set of data, once the cache is populated, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=704"
  },
  {
    "text": "all future reads would hit the cache ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=707"
  },
  {
    "text": "and complete with no stalls or delays caused by ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=709"
  },
  {
    "text": "waiting for a system memory loads to complete.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=711"
  },
  {
    "text": "The bandwidth to the cache is significantly higher, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=714"
  },
  {
    "text": "and with lower latency than of that to system RAM.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=717"
  },
  {
    "text": "When reads miss the cache, the calling threads will stall ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=722"
  },
  {
    "text": "while the read is fetched from RAM ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=726"
  },
  {
    "text": "and placed into the cache.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=727"
  },
  {
    "text": "Data reads become limited by the system memory bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=729"
  },
  {
    "text": "rather than the on-chip cache bandwidth.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=732"
  },
  {
    "text": "A kernel accessing large amounts of data from buffers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=735"
  },
  {
    "text": "can thrash the cache in this way ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=737"
  },
  {
    "text": "and result in reduced performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=739"
  },
  {
    "text": "Apple silicon GPUs contains a second cache ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=742"
  },
  {
    "text": "alongside the buffer cache ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=745"
  },
  {
    "text": "that's dedicated to texture reads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=747"
  },
  {
    "text": "Applications can move some of their source data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=750"
  },
  {
    "text": "from Metal buffer objects to Metal texture objects, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=752"
  },
  {
    "text": "and effectively increase the amount of cache space ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=755"
  },
  {
    "text": "and increase performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=758"
  },
  {
    "text": "Also, texture data can be twiddled, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=761"
  },
  {
    "text": "and Metal will do this for you automatically on upload.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=763"
  },
  {
    "text": "Twiddling means the texels are ordered more optimally ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=767"
  },
  {
    "text": "for a random access pattern ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=770"
  },
  {
    "text": "and can help improve cache efficiency further, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=772"
  },
  {
    "text": "giving another performance gain over a regular buffer.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=774"
  },
  {
    "text": "This is transparent to the kernel when reading, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=777"
  },
  {
    "text": "so it doesn't add complexity to your kernel source.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=780"
  },
  {
    "text": "Actually, textures are a gift that keeps on giving.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=783"
  },
  {
    "text": "Apple Silicon can also perform ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=786"
  },
  {
    "text": "a lossless compression of a texture -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=788"
  },
  {
    "text": "after it's been created and when possible -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=790"
  },
  {
    "text": "to further reduce the memory bandwidth of reading from it, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=792"
  },
  {
    "text": "and again, increase performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=795"
  },
  {
    "text": "This, too, is transparent to the shader kernel ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=798"
  },
  {
    "text": "as the decompression happens automatically ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=801"
  },
  {
    "text": "on the texture read or sample.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=803"
  },
  {
    "text": "A Metal texture will be compressed by default ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=805"
  },
  {
    "text": "if it's private to the GPU, but shared and managed textures ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=808"
  },
  {
    "text": "can explicitly be compressed after upload ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=811"
  },
  {
    "text": "through a call to optimizeContentsForGPUAccess ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=813"
  },
  {
    "text": "on a blit command encoder.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=817"
  },
  {
    "text": "For lossless texture compression to be available, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=821"
  },
  {
    "text": "textures need to have their usage set ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=823"
  },
  {
    "text": "to either shaderRead or renderTarget.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=825"
  },
  {
    "text": "Ensure this is set on your descriptor ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=828"
  },
  {
    "text": "when creating the texture object.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=829"
  },
  {
    "text": "And if your texture data is actual image data, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=833"
  },
  {
    "text": "or being used in a way where lossy compression ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=836"
  },
  {
    "text": "would be acceptable, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=838"
  },
  {
    "text": "then consider higher ratio lossy compression formats ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=839"
  },
  {
    "text": "such as ASTC or BC.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=843"
  },
  {
    "text": "This will further reduce both the memory footprint ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=846"
  },
  {
    "text": "and bandwidth utilization, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=848"
  },
  {
    "text": "increasing the kernel's performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=850"
  },
  {
    "text": "BC and ASTC can both be generated using offline tools, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=853"
  },
  {
    "text": "giving a great image quality, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=857"
  },
  {
    "text": "and have compression ratios ranging from 4:1 ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=859"
  },
  {
    "text": "through to 36:1.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=862"
  },
  {
    "text": "With our work now batched optimally, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=865"
  },
  {
    "text": "utilizing buffers and textures for our data input, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=867"
  },
  {
    "text": "and being UMA aware ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=870"
  },
  {
    "text": "to reduce the amount of copy work we're performing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=871"
  },
  {
    "text": "we're ready to look at kernel optimizations.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=874"
  },
  {
    "text": "All of these best practices ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=877"
  },
  {
    "text": "are aimed at increasing your kernel's performance.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=878"
  },
  {
    "text": "Let's take a look at some of them.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=881"
  },
  {
    "text": "I'm going to focus on memory indexing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=884"
  },
  {
    "text": "global atomics, and occupancy ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=886"
  },
  {
    "text": "as areas of opportunity in your kernels.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=888"
  },
  {
    "text": "We'll also take a look at where to look in our profiling tools ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=891"
  },
  {
    "text": "to understand your kernel's bottlenecks ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=894"
  },
  {
    "text": "and how to measure any improvements ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=896"
  },
  {
    "text": "any optimizations may have.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=898"
  },
  {
    "text": "At last year's WWDC, our GPU software team ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=901"
  },
  {
    "text": "released a video on Metal optimization techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=905"
  },
  {
    "text": "for Apple silicon.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=908"
  },
  {
    "text": "I'll recap briefly some of that talk's content here, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=909"
  },
  {
    "text": "but for complete details and examples, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=912"
  },
  {
    "text": "please do watch that presentation.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=914"
  },
  {
    "text": "First up, I want to talk about memory indexing.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=918"
  },
  {
    "text": "When indexing into an array, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=922"
  },
  {
    "text": "use signed integer types over unsigned types.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=923"
  },
  {
    "text": "Here we have a for loop, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=927"
  },
  {
    "text": "with count variable i declared as unsigned.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=928"
  },
  {
    "text": "Due to the wrapping characteristics of uint ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=932"
  },
  {
    "text": "in the shader language spec, this disables vectorized loads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=934"
  },
  {
    "text": "Usually, this is not what you want, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=938"
  },
  {
    "text": "and the extra code generated can be avoided ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=940"
  },
  {
    "text": "by using a signed type.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=942"
  },
  {
    "text": "And here, as the wrapping behavior of int is undefined, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=945"
  },
  {
    "text": "the load will be vectorized ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=949"
  },
  {
    "text": "and likely give a performance improvement.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=950"
  },
  {
    "text": "With the increase of GPU cores and memory bandwidth ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=954"
  },
  {
    "text": "in the new MacBook Pros, we have seen ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=956"
  },
  {
    "text": "the primary bottlenecks of some GPU workloads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=958"
  },
  {
    "text": "shift from ALU or memory bandwidth usage to other areas.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=961"
  },
  {
    "text": "One of those areas is global atomics.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=966"
  },
  {
    "text": "Our recommendation is to minimize ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=968"
  },
  {
    "text": "the use of atomic operations in your kernels, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=970"
  },
  {
    "text": "or use techniques built around thread-group atomics instead.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=973"
  },
  {
    "text": "As with all good optimization workflows, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=977"
  },
  {
    "text": "profile your shaders first to understand ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=979"
  },
  {
    "text": "if this is a problem you're experiencing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=981"
  },
  {
    "text": "as moderate use of atomics won't be a problem.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=983"
  },
  {
    "text": "So how do we get this vital profiling information? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=987"
  },
  {
    "text": "By using the GPU frame debugger inside Xcode.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=990"
  },
  {
    "text": "It is a great tool for this evaluation work.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=993"
  },
  {
    "text": "It provides a wealth of insight into the work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=996"
  },
  {
    "text": "occurring on the GPU and once we have our capture, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=998"
  },
  {
    "text": "we're able to browse it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1001"
  },
  {
    "text": "The timeline view gives us a great overview of our workload, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1003"
  },
  {
    "text": "and shows us graphs visualizing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1006"
  },
  {
    "text": "the major performance counters of the GPU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1008"
  },
  {
    "text": "Many of these counters give both a utilization ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1012"
  },
  {
    "text": "and a limiter value.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1014"
  },
  {
    "text": "Using ALU as an example here, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1016"
  },
  {
    "text": "the utilization number is telling us ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1018"
  },
  {
    "text": "that the kernel used about 27 percent ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1020"
  },
  {
    "text": "of the GPU's ALU capabilities during execution.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1022"
  },
  {
    "text": "Other time was spent doing other tasks, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1027"
  },
  {
    "text": "such as data reads and writes, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1029"
  },
  {
    "text": "making control logic decisions, et cetera.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1031"
  },
  {
    "text": "The limiter figure means the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1034"
  },
  {
    "text": "is bottlenecked by ALU utilization ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1036"
  },
  {
    "text": "for about 31 percent of the kernel's execution time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1039"
  },
  {
    "text": "So how can the GPU be utilizing ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1043"
  },
  {
    "text": "27 percent of the GPU's ALU capabilities ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1045"
  },
  {
    "text": "but be bottlenecked by ALU for 31 percent? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1048"
  },
  {
    "text": "The limiter can be thought of as the efficiency ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1052"
  },
  {
    "text": "of the ALU work that was done.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1054"
  },
  {
    "text": "It is the time spent doing actual work, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1057"
  },
  {
    "text": "plus the time spent on internal stalls or inefficiency.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1060"
  },
  {
    "text": "In best case, these times are equal, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1063"
  },
  {
    "text": "but in practice, there is a difference.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1065"
  },
  {
    "text": "A large difference indicates that the GPU has work to do, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1067"
  },
  {
    "text": "but is unable to do it for some reason.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1071"
  },
  {
    "text": "Complex ALU operations such as log() for instance, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1073"
  },
  {
    "text": "or using expensive texture formats, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1076"
  },
  {
    "text": "can result in underutilization, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1078"
  },
  {
    "text": "and signify that there could be scope ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1081"
  },
  {
    "text": "to optimize the kernel's math.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1082"
  },
  {
    "text": "These two figures work hand in hand ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1087"
  },
  {
    "text": "to help you understand ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1089"
  },
  {
    "text": "the general makeup of work your kernels are performing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1090"
  },
  {
    "text": "and how efficient each category of work is to perform.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1093"
  },
  {
    "text": "With this particular kernel, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1097"
  },
  {
    "text": "we can see that occupancy is at 37 percent.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1098"
  },
  {
    "text": "This value looks low ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1102"
  },
  {
    "text": "and certainly worthy of investigation ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1103"
  },
  {
    "text": "to understand if it can be increased.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1105"
  },
  {
    "text": "Let's take a closer look at occupancy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1107"
  },
  {
    "text": "It is the measure of how many threads are currently active ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1111"
  },
  {
    "text": "on the GPU, relative to the maximum that could be.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1113"
  },
  {
    "text": "When this figure is low, it is important to understand why, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1117"
  },
  {
    "text": "to determine if this is expected or signifies a problem.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1121"
  },
  {
    "text": "Low occupancy sometimes isn't surprising nor avoidable, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1125"
  },
  {
    "text": "if for instance your submitted work ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1128"
  },
  {
    "text": "has a comparatively low number of threads ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1130"
  },
  {
    "text": "because the work to perform is simply small.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1132"
  },
  {
    "text": "It can also be okay if the GPU is limited by other counters, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1135"
  },
  {
    "text": "such as ALU.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1138"
  },
  {
    "text": "However a low occupancy ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1140"
  },
  {
    "text": "coupled with low limiter counters ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1141"
  },
  {
    "text": "signifies that the GPU has capacity ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1143"
  },
  {
    "text": "to execute more threads simultaneously.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1146"
  },
  {
    "text": "So what may be causing problematic low occupancy? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1150"
  },
  {
    "text": "A common reason for this is exhausting thread ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1154"
  },
  {
    "text": "or thread-group memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1156"
  },
  {
    "text": "Both of these resources are finite on the GPU ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1158"
  },
  {
    "text": "and shared among the running threads.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1161"
  },
  {
    "text": "Thread memory is backed by registers, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1164"
  },
  {
    "text": "and as the pressure for registers increases, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1166"
  },
  {
    "text": "occupancy can be decreased to accommodate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1168"
  },
  {
    "text": "With a high thread-group memory usage, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1172"
  },
  {
    "text": "the only way to increase occupancy ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1174"
  },
  {
    "text": "is to reduce the amount of shared memory used.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1177"
  },
  {
    "text": "Reducing threrad-group memory can also help reduce the impact ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1179"
  },
  {
    "text": "of thread-register pressure.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1182"
  },
  {
    "text": "There is scope for the compiler ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1185"
  },
  {
    "text": "to spill registers more efficiently ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1186"
  },
  {
    "text": "when the maximum thread count in a thread group is known ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1188"
  },
  {
    "text": "at pipeline state creation time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1191"
  },
  {
    "text": "These optimizations can be enabled by setting ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1194"
  },
  {
    "text": "either maxThreadsPerThreadgroup ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1197"
  },
  {
    "text": "on the compute pipeline state descriptor ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1199"
  },
  {
    "text": "or by using the Metal Shader langauge ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1202"
  },
  {
    "text": "max_total_threads_per threadgroup attribute ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1203"
  },
  {
    "text": "directly in your kernel source.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1206"
  },
  {
    "text": "Tune this value to find the balance ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1209"
  },
  {
    "text": "that works best for your kernels.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1210"
  },
  {
    "text": "Aim for a value that is the smallest multiple ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1212"
  },
  {
    "text": "of the thread execution width that works for your algorithm.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1215"
  },
  {
    "text": "Let's go deeper into register pressure.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1220"
  },
  {
    "text": "When this is high, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1223"
  },
  {
    "text": "we will see register spill in Xcode's GPU profiler.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1224"
  },
  {
    "text": "With this kernel example, we can see that our occupancy ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1229"
  },
  {
    "text": "is at 16 percent, and this is really low.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1232"
  },
  {
    "text": "Looking at the compiler statistics for this kernel ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1236"
  },
  {
    "text": "shows the relative instruction costs of it, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1238"
  },
  {
    "text": "including the spilled bytes.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1241"
  },
  {
    "text": "This spill, along with the temporary registers, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1245"
  },
  {
    "text": "is likely the cause of our poor occupancy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1248"
  },
  {
    "text": "We are exhausting the thread memory, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1250"
  },
  {
    "text": "and occupancy is reduced to free up more registers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1252"
  },
  {
    "text": "for the threads that will run.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1255"
  },
  {
    "text": "Registers are allocated to a kernel in register blocks, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1258"
  },
  {
    "text": "and as such, you'll need to reduce the usage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1261"
  },
  {
    "text": "by up to the block size to see a potential increase in occupancy.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1263"
  },
  {
    "text": "Optimizing for minimal register usage is a great way ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1268"
  },
  {
    "text": "to make impactful performance improvements to complex kernels, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1271"
  },
  {
    "text": "but how do we do this? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1275"
  },
  {
    "text": "Preferring 16bit types over 32bit types ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1278"
  },
  {
    "text": "increases the number of registers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1281"
  },
  {
    "text": "available to other parts of the kernel.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1282"
  },
  {
    "text": "Conversion between these types to their 32bit counterparts ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1285"
  },
  {
    "text": "is usually free.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1287"
  },
  {
    "text": "And reducing the data stored on the stack -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1289"
  },
  {
    "text": "for example, large arrays or structs -- ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1291"
  },
  {
    "text": "can consume a large number of registers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1293"
  },
  {
    "text": "and reducing them is an effective tool.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1295"
  },
  {
    "text": "Look to tune your shader inputs ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1299"
  },
  {
    "text": "to make the best use of the constant address space.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1300"
  },
  {
    "text": "This can drastically reduce the number ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1304"
  },
  {
    "text": "of general purpose registers being used unnecessarily.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1306"
  },
  {
    "text": "And final tip is to avoid indexing into arrays ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1311"
  },
  {
    "text": "stored on the stack or in constant data ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1313"
  },
  {
    "text": "with a dynamic index.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1315"
  },
  {
    "text": "An example of this is shown here, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1318"
  },
  {
    "text": "where an array is initialized at runtime.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1320"
  },
  {
    "text": "If index is not known to the compiler at compile time, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1322"
  },
  {
    "text": "the array will likely spill to memory.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1325"
  },
  {
    "text": "In this second example, though, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1328"
  },
  {
    "text": "index is known at compile time, and the compiler will likely ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1330"
  },
  {
    "text": "unroll the loop and be able to optimize away any spill.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1333"
  },
  {
    "text": "Each of these techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1337"
  },
  {
    "text": "will reduce the allocation of registers, reduce spill, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1338"
  },
  {
    "text": "and help increase occupancy for more performant kernels.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1341"
  },
  {
    "text": "For more insights into Metal optimization techniques ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1346"
  },
  {
    "text": "for Apple Silicon, do watch the WWDC 2020 video, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1349"
  },
  {
    "text": "\"Optimize Metal Performance for Apple Silicon Macs.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1353"
  },
  {
    "text": "And there you have it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1357"
  },
  {
    "text": "Let's review what we covered today.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1358"
  },
  {
    "text": "We started with a review in the role of command queues, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1361"
  },
  {
    "text": "command buffers, and command encoders ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1364"
  },
  {
    "text": "to remind ourselves about the submission model, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1366"
  },
  {
    "text": "and how work is queued to the GPU in Metal, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1369"
  },
  {
    "text": "and we explored how to encode Metal commands ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1372"
  },
  {
    "text": "from multiple threads to reduce the CPU encoding time and cost.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1374"
  },
  {
    "text": "With that knowledge, we looked at recommendations ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1378"
  },
  {
    "text": "on how to tune your applications; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1381"
  },
  {
    "text": "avoiding unnecessary copies to take advantage ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1383"
  },
  {
    "text": "of the unified memory architecture; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1386"
  },
  {
    "text": "submitting larger quantities of work; ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1387"
  },
  {
    "text": "and using Metal textures as well as Metal buffers ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1390"
  },
  {
    "text": "for our kernel's resources.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1392"
  },
  {
    "text": "And finally, we took a walkthrough ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1395"
  },
  {
    "text": "of how to use our tools to identify ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1397"
  },
  {
    "text": "performance bottlenecks.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1398"
  },
  {
    "text": "We understood how to interpret the GPU's utilization ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1400"
  },
  {
    "text": "and limiter values, and how we can tackle ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1403"
  },
  {
    "text": "problematic low occupancy if we discover it.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1405"
  },
  {
    "text": "Thank you very much, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1410"
  },
  {
    "text": "and I hope you're as excited as I am by what's possible ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1411"
  },
  {
    "text": "with the most powerful\nMacBook Pro lineup ever.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10580/?time=1413"
  }
]