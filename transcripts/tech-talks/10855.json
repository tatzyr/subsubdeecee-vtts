[
  {
    "text": "Hi, I'm Patrick, and I work on a performance team at Apple. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=0"
  },
  {
    "text": "Today we'll be discussing scrolling and animation hitches in your apps ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=3"
  },
  {
    "text": "and look at the Render Loop in detail.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=7"
  },
  {
    "text": "First, we'll get a general sense of what is a hitch. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=9"
  },
  {
    "text": "Then we'll discuss the Render Loop ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=13"
  },
  {
    "text": "and the different types of hitches that can happen.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=15"
  },
  {
    "text": "Finally, we'll discuss how to measure hitches.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=18"
  },
  {
    "text": "So first, what is a hitch? ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=21"
  },
  {
    "text": "In your app, a person might drag their finger across the screen to scroll. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=24"
  },
  {
    "text": "They might tap a button and expect feedback ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=27"
  },
  {
    "text": "or transition between views in a hierarchy. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=30"
  },
  {
    "text": "These animations build a visual sense of connection ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=33"
  },
  {
    "text": "between people and content on screen.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=35"
  },
  {
    "text": "Animation hitches can cause jumps in animations and break that connection, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=38"
  },
  {
    "text": "causing confusion instead of delight.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=43"
  },
  {
    "text": "A hitch is any time a frame appears on screen later than expected. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=46"
  },
  {
    "text": "Let's look at a common example of scrolling a collection view.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=50"
  },
  {
    "text": "Here we have a meal planner app that helps us curate our favorite recipes. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=55"
  },
  {
    "text": "As a user drags their finger up the screen, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=59"
  },
  {
    "text": "the scroll view responds by moving the content up. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=61"
  },
  {
    "text": "But while scrolling, we notice a jump in the content.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=64"
  },
  {
    "text": "If we look at this frame by frame, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=67"
  },
  {
    "text": "we can see our finger moving with the content ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=69"
  },
  {
    "text": "in the first three frames, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=71"
  },
  {
    "text": "but in the next frame the content appears to stall. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=74"
  },
  {
    "text": "That's because the third frame actually repeated, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=77"
  },
  {
    "text": "staying on the display for another frame. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=80"
  },
  {
    "text": "Finally comes the fourth frame, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=82"
  },
  {
    "text": "and it appears to jump forward to where our finger is.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=84"
  },
  {
    "text": "The third frame repeated because the fourth frame arrived late, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=88"
  },
  {
    "text": "and the user saw a hitch.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=91"
  },
  {
    "text": "Hitches are caused when the Render Loop fails to finish a frame on time. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=93"
  },
  {
    "text": "So let's look into the Render Loop.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=97"
  },
  {
    "text": "The Render Loop is a continuous process ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=100"
  },
  {
    "text": "by which touch events are handed to an app, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=102"
  },
  {
    "text": "and then changes to the UI are sent to the operating system ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=104"
  },
  {
    "text": "where the frame is finalized. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=107"
  },
  {
    "text": "It's a loop, and it happens at the device's refresh rate.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=109"
  },
  {
    "text": "On iPhone and iPad, this is 60 frames per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=112"
  },
  {
    "text": "which means a new frame can be displayed every 16.67 milliseconds. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=115"
  },
  {
    "text": "On iPad Pro, this is 120 frames per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=120"
  },
  {
    "text": "which means a new frame can be displayed every 8.33 milliseconds.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=123"
  },
  {
    "text": "At the beginning of a frame, the hardware emits an event called a VSYNC. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=128"
  },
  {
    "text": "The VSYNC denotes when a new frame must be ready. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=132"
  },
  {
    "text": "We highlight them in the display track, so it's easy to see the deadline. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=136"
  },
  {
    "text": "The Render Loop is timed to VSYNCs. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=140"
  },
  {
    "text": "It must hit checkpoints along the way in order to have a frame ready.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=142"
  },
  {
    "text": "It's broken up into three stages. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=147"
  },
  {
    "text": "The first stage is in your app, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=149"
  },
  {
    "text": "where events are handled and changes are made to the UI. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=150"
  },
  {
    "text": "That work must complete before the next VSYNC, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=154"
  },
  {
    "text": "so the next stage can begin. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=156"
  },
  {
    "text": "The next stage happens in a separate process called the render server. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=158"
  },
  {
    "text": "This is where your UI is actually rendered. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=162"
  },
  {
    "text": "This stage must also complete before the next VSYNC, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=165"
  },
  {
    "text": "so that the frame can be displayed, which is the third and final stage.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=167"
  },
  {
    "text": "An important caveat to the three-stage process ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=173"
  },
  {
    "text": "is that the frame is processed for two frames before display. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=175"
  },
  {
    "text": "We call this double buffering, but there is another mode. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=178"
  },
  {
    "text": "To avoid hitches, the system may switch to triple buffering, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=181"
  },
  {
    "text": "where the render server is given one extra frame duration ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=184"
  },
  {
    "text": "to complete its work. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=187"
  },
  {
    "text": "Since this is a fallback mode, we're gonna focus on double buffering ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=189"
  },
  {
    "text": "while talking about hitches in the Render Loop.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=192"
  },
  {
    "text": "Overall, the entire Render Loop is made up of five phases. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=195"
  },
  {
    "text": "The loop begins with the first phase, the event phase. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=199"
  },
  {
    "text": "Here your app handles touch events and decides if a change is needed in the UI. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=202"
  },
  {
    "text": "Next is the commit phase. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=207"
  },
  {
    "text": "In the commit phase, your app updates its UI ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=209"
  },
  {
    "text": "and submits that to the render server for rendering. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=211"
  },
  {
    "text": "On the next VSYNC, the render server takes that submission, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=214"
  },
  {
    "text": "and in the render prepare phase, prepares it for drawing on the GPU. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=217"
  },
  {
    "text": "In the render execute phase, the GPU draws your UI into a final image, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=221"
  },
  {
    "text": "so on the next VSYNC the frame can be displayed to your user.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=226"
  },
  {
    "text": "Each stage is critical to having a smooth user experience every frame, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=231"
  },
  {
    "text": "even the render work. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=235"
  },
  {
    "text": "Although it happens in a separate process, it does work on your app's behalf, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=237"
  },
  {
    "text": "so it's on you to ensure your layer tree can be processed and drawn in time. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=241"
  },
  {
    "text": "To understand this a little further, let's look at an example.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=246"
  },
  {
    "text": "In this example, we're gonna follow this frame ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=251"
  },
  {
    "text": "through the Render Loop to see each phase along the way. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=253"
  },
  {
    "text": "First is the event phase, where the app will receive events. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=256"
  },
  {
    "text": "These events are things like touches, networking callbacks, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=260"
  },
  {
    "text": "keyboard presses and timers. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=263"
  },
  {
    "text": "The app can respond to these events in any way ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=265"
  },
  {
    "text": "by altering its layer hierarchy. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=268"
  },
  {
    "text": "For example, the app can change the background color of a layer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=270"
  },
  {
    "text": "or even change a layer's size and position.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=273"
  },
  {
    "text": "But when the app updates the bounds of a layer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=277"
  },
  {
    "text": "Core Animation also calls setNeedsLayout. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=280"
  },
  {
    "text": "This identifies all the layers, which must recalculate their layout in response.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=282"
  },
  {
    "text": "The system will coalesce these \"need layout\" requests ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=287"
  },
  {
    "text": "and perform them in order during the commit phase ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=291"
  },
  {
    "text": "to reduce duplicate work.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=293"
  },
  {
    "text": "If any layout is needed, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=296"
  },
  {
    "text": "the commit phase will automatically start once the event phase finishes. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=297"
  },
  {
    "text": "First, the system takes all the layers requiring layout ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=302"
  },
  {
    "text": "and lays them out one at a time, from parent to child.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=306"
  },
  {
    "text": "Layout is a common performance bottleneck, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=310"
  },
  {
    "text": "so keep in mind that your app only has a couple of milliseconds ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=312"
  },
  {
    "text": "to complete this work. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=315"
  },
  {
    "text": "Some views also require custom drawing, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=317"
  },
  {
    "text": "like labels, image views or just any view overriding drawRect. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=319"
  },
  {
    "text": "If these views require a visual update, they must call setNeedsDisplay. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=323"
  },
  {
    "text": "Like layout, the system will coalesce these requests ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=329"
  },
  {
    "text": "to perform them once all layout has completed.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=331"
  },
  {
    "text": "During the drawing process, every custom drawing layer ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=336"
  },
  {
    "text": "will receive a texture-backed Core Graphics context ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=338"
  },
  {
    "text": "which they'll draw into.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=341"
  },
  {
    "text": "As far as Core Animation is concerned, these layers are now just images. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=344"
  },
  {
    "text": "And now that all layers have laid out and drawn, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=348"
  },
  {
    "text": "the entire altered layer tree is collected ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=350"
  },
  {
    "text": "and sent to the render server for rendering.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=353"
  },
  {
    "text": "Now we are in the render server, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=357"
  },
  {
    "text": "which is responsible for turning our layer tree ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=359"
  },
  {
    "text": "into an actual displayable image. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=361"
  },
  {
    "text": "In the prepare phase, the render server iterates through the app's layer tree ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=364"
  },
  {
    "text": "and prepares a linear pipeline that the GPU can then execute.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=368"
  },
  {
    "text": "Starting from the top layer, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=373"
  },
  {
    "text": "it works its way from parent to child and sibling to sibling ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=374"
  },
  {
    "text": "so that the layers are arranged from back to front.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=379"
  },
  {
    "text": "Next, this linear pipeline is passed through the GPU, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=384"
  },
  {
    "text": "where each layer is composited into a final texture. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=387"
  },
  {
    "text": "Some layers can take longer to render, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=390"
  },
  {
    "text": "and this is another common performance bottleneck we will discuss shortly.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=392"
  },
  {
    "text": "Great. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=397"
  },
  {
    "text": "So once the GPU executes and renders the image on the right, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=398"
  },
  {
    "text": "it's ready to be displayed on the next VSYNC.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=401"
  },
  {
    "text": "Each phase of the Render Loop is performance-sensitive ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=404"
  },
  {
    "text": "and has a deadline. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=407"
  },
  {
    "text": "The deadline is the next VSYNC. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=408"
  },
  {
    "text": "To hit the target frame rate and maintain low input latency, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=410"
  },
  {
    "text": "this entire process is actually happening in parallel every frame.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=413"
  },
  {
    "text": "This way, the pipeline becomes concurrent, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=418"
  },
  {
    "text": "and our app can prepare a new frame ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=421"
  },
  {
    "text": "while the system is rendering the previous one. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=423"
  },
  {
    "text": "This is why any missed deadlines are so important.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=425"
  },
  {
    "text": "Now that you see how the Render Loop works, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=429"
  },
  {
    "text": "let's dive into what types of hitches you might see in your apps.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=431"
  },
  {
    "text": "There are two primary types: ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=435"
  },
  {
    "text": "commit hitches, which happen within the app's process, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=437"
  },
  {
    "text": "and render hitches, which happen in the render server.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=440"
  },
  {
    "text": "A commit hitch is when the app takes too long to process events or commit.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=443"
  },
  {
    "text": "Here, the commit takes too long and misses the deadline, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=449"
  },
  {
    "text": "so in the next VSYNC, the render server has nothing to process ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=452"
  },
  {
    "text": "and now must wait for the next VSYNC to begin rendering. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=455"
  },
  {
    "text": "And now we have delayed the frame delivery time by one frame. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=459"
  },
  {
    "text": "In milliseconds, that's 16.67 milliseconds on an iPhone or iPad. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=462"
  },
  {
    "text": "We call this delay duration \"hitch time,\" and we measure it in milliseconds.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=467"
  },
  {
    "text": "If the commit work took even longer and went past the next VSYNC, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=472"
  },
  {
    "text": "then the frame would be late by two frames, or 33.34 milliseconds.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=476"
  },
  {
    "text": "That's 33.34 milliseconds that the user is not seeing a smooth scroll.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=480"
  },
  {
    "text": "To understand more about commit hitches and how you can fix them in your apps, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=486"
  },
  {
    "text": "check out \"Find and Fix Hitches in the Commit Phase.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=489"
  },
  {
    "text": "The second type of hitch is a render hitch. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=493"
  },
  {
    "text": "These happen when the render server is unable to prepare ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=496"
  },
  {
    "text": "or execute our layer tree on time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=498"
  },
  {
    "text": "Here, the render execute phase takes too long ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=502"
  },
  {
    "text": "and goes over the VSYNC boundary. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=504"
  },
  {
    "text": "The frame was therefore not ready on time, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=506"
  },
  {
    "text": "and the green frame was displayed one frame later than expected.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=508"
  },
  {
    "text": "Once again, we have a 16-millisecond hitch time.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=513"
  },
  {
    "text": "To understand more about render hitches and how to optimize your layer tree, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=516"
  },
  {
    "text": "check out \"Demystify and Eliminate Hitches in the Render Phase.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=519"
  },
  {
    "text": "Great. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=524"
  },
  {
    "text": "So those are the two main types of hitches. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=526"
  },
  {
    "text": "Now let's turn our focus to how we measure and quantify hitches.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=528"
  },
  {
    "text": "We looked at hitch time in the previous slides. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=533"
  },
  {
    "text": "It's very useful when talking about a single hitch, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=535"
  },
  {
    "text": "but can become intractable when discussing longer-term events ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=537"
  },
  {
    "text": "like scrolls, animations or transitions.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=540"
  },
  {
    "text": "Firstly, it's difficult to compare unless each scroll or animation ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=544"
  },
  {
    "text": "takes the exact same amount of time, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=548"
  },
  {
    "text": "and therefore the exact same number of frames.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=550"
  },
  {
    "text": "What's worse is that iOS devices do not always update the screen. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=553"
  },
  {
    "text": "If there are no commits sent to the render server, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=558"
  },
  {
    "text": "no new frame is submitted. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=560"
  },
  {
    "text": "That makes it even harder to compare hitch time across tests and devices. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=562"
  },
  {
    "text": "So instead, we use a metric called \"hitch time ratio.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=567"
  },
  {
    "text": "Hitch time ratio is the total hitch time in an interval divided by its duration. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=570"
  },
  {
    "text": "Because it's normalized to total time, we can compare it across experiences. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=576"
  },
  {
    "text": "It's measured in hitch milliseconds per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=582"
  },
  {
    "text": "so it represents the amount of milliseconds the device was hitching ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=584"
  },
  {
    "text": "every second. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=587"
  },
  {
    "text": "To learn about how you can use this metric to measure your own app performance, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=589"
  },
  {
    "text": "check out \"What's New in MetricKit.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=593"
  },
  {
    "text": "To see how to track hitch time ratio in your test suite, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=595"
  },
  {
    "text": "check out \"Eliminate Animation Hitches with XCTest.\" ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=598"
  },
  {
    "text": "Finally, let's look at an example where hitch time ratio can be used.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=602"
  },
  {
    "text": "Here we have 30 frames, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=607"
  },
  {
    "text": "which on an iPhone is half a second's worth of work. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=609"
  },
  {
    "text": "Each frame hits its deadline, and the user sees no hitches. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=612"
  },
  {
    "text": "The hitch time is zero, and hitch time ratio is also zero.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=616"
  },
  {
    "text": "But now we see a display track on the bottom with disjoint intervals.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=621"
  },
  {
    "text": "Some frames are on screen longer than others, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=625"
  },
  {
    "text": "and some commits and renders are causing hitches. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=628"
  },
  {
    "text": "If we add up this hitch time, we get 100.02 milliseconds. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=630"
  },
  {
    "text": "Over half a second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=635"
  },
  {
    "text": "we have a hitch time ratio of 200.04 milliseconds per second. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=636"
  },
  {
    "text": "This is just an example. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=641"
  },
  {
    "text": "In general, these are the target hitch ratios we recommend ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=642"
  },
  {
    "text": "and use in our tools here at Apple. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=646"
  },
  {
    "text": "Although this goal is zero hitch milliseconds per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=648"
  },
  {
    "text": "anything under five hitch milliseconds per second is considered good ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=651"
  },
  {
    "text": "and mostly unnoticeable by a user. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=654"
  },
  {
    "text": "Between five and ten hitch milliseconds per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=657"
  },
  {
    "text": "the user is going to notice some interruptions, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=660"
  },
  {
    "text": "and these should be investigated. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=663"
  },
  {
    "text": "Over ten hitch milliseconds per second, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=665"
  },
  {
    "text": "hitches are greatly impacting the user experience, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=667"
  },
  {
    "text": "and you should immediately investigate how to optimize your Render Loop.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=670"
  },
  {
    "text": "To recap, today we discussed the Render Loop ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=675"
  },
  {
    "text": "and how a new frame is displayed to the user. ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=677"
  },
  {
    "text": "We looked at what a hitch is and the two types, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=680"
  },
  {
    "text": "a commit hitch and a render hitch.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=682"
  },
  {
    "text": "Finally, we defined the hitch time ratio ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=685"
  },
  {
    "text": "to measure the amount of hitching experienced by users ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=688"
  },
  {
    "text": "within a given duration.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=690"
  },
  {
    "text": "To learn more about the types of hitches ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=692"
  },
  {
    "text": "and how to catch and fix them in your apps, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=694"
  },
  {
    "text": "please check out our two talks on commit hitches and render hitches.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=696"
  },
  {
    "text": "We can't wait to see your buttery smooth apps, ",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=700"
  },
  {
    "text": "and thanks for watching.",
    "link": "https://developer.apple.com/videos/play/tech-talks-10855/?time=703"
  }
]