[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2"
  },
  {
    "text": "Donna: Hi. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=9"
  },
  {
    "text": "I'm Donna Tom, and I'm a TextKit engineer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=10"
  },
  {
    "text": "My colleague Chris Willmore will join me later in this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=13"
  },
  {
    "text": "We're introducing TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=17"
  },
  {
    "text": "Apple's next-generation text engine.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=19"
  },
  {
    "text": "To understand what TextKit 2 is all about, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=24"
  },
  {
    "text": "let's briefly review the original TextKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=27"
  },
  {
    "text": "which we'll call TextKit 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=29"
  },
  {
    "text": "TextKit 1 is a text engine ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=33"
  },
  {
    "text": "that drives text layout and display ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=35"
  },
  {
    "text": "across all of Apple's platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=36"
  },
  {
    "text": "Text controls in UIKit and AppKit use TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=39"
  },
  {
    "text": "to manage the storage and control the layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=43"
  },
  {
    "text": "of text content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=46"
  },
  {
    "text": "TextKit 1 first appeared on the system in OpenStep ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=49"
  },
  {
    "text": "over 20 years ago. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=52"
  },
  {
    "text": "It's grown and evolved with us over the years ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=55"
  },
  {
    "text": "from macOS 10.0 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=57"
  },
  {
    "text": "to iOS 7 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=59"
  },
  {
    "text": "to macOS 11 and iOS 14.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=61"
  },
  {
    "text": "It's pretty amazing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=65"
  },
  {
    "text": "that TextKit 1 still powers so much essential functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=66"
  },
  {
    "text": "across all Apple devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=70"
  },
  {
    "text": "Technology design and engineering principles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=72"
  },
  {
    "text": "have changed a lot over the decades. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=75"
  },
  {
    "text": "Since TextKit 1 is tied to its original principles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=77"
  },
  {
    "text": "it's become more challenging over the years ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=80"
  },
  {
    "text": "to provide APIs that integrate well ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=82"
  },
  {
    "text": "with our newer technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=84"
  },
  {
    "text": "while still delivering a high standard of performance.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=86"
  },
  {
    "text": "That's why we've built TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=91"
  },
  {
    "text": "TextKit 2 is Apple's next-generation text engine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=94"
  },
  {
    "text": "built on a set of forward-looking design principles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=98"
  },
  {
    "text": "And guess what? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=100"
  },
  {
    "text": "You're already using TextKit 2 on your Mac. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=102"
  },
  {
    "text": "In Big Sur, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=105"
  },
  {
    "text": "we updated many of the text components across the OS ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=107"
  },
  {
    "text": "to use TextKit 2 behind the scenes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=110"
  },
  {
    "text": "Big surprise: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=112"
  },
  {
    "text": "you've been using TextKit 2 since macOS 11. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=114"
  },
  {
    "text": "Now, let's briefly review the architecture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=117"
  },
  {
    "text": "that let us do this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=119"
  },
  {
    "text": "TextKit 2 coexists with TextKit 1.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=121"
  },
  {
    "text": "Just like its predecessor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=125"
  },
  {
    "text": "TextKit 2 is built on top of Foundation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=127"
  },
  {
    "text": "Quartz, and Core Text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=130"
  },
  {
    "text": "Text controls in UIKit and AppKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=133"
  },
  {
    "text": "are built on top of TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=135"
  },
  {
    "text": "TextKit 2 also loosely retains the MVC design ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=138"
  },
  {
    "text": "of its predecessor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=141"
  },
  {
    "text": "The view portion remains in the view objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=143"
  },
  {
    "text": "of the UIKit and AppKit frameworks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=146"
  },
  {
    "text": "while there are new versions of our old friends, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=148"
  },
  {
    "text": "NSTextStorage and NSLayoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=151"
  },
  {
    "text": "In addition to these new versions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=155"
  },
  {
    "text": "there are many more new classes and protocols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=156"
  },
  {
    "text": "joining the model and controller layers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=159"
  },
  {
    "text": "There are a quite a few of them, but don't be alarmed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=162"
  },
  {
    "text": "These new components are simple, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=165"
  },
  {
    "text": "focused, and powerful in combination.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=167"
  },
  {
    "text": "They make it easier for you to express ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=172"
  },
  {
    "text": "what you want to do with your text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=174"
  },
  {
    "text": "and worry less about how the system accomplishes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=176"
  },
  {
    "text": "what you want.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=179"
  },
  {
    "text": "Now that we've gotten an architectural view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=182"
  },
  {
    "text": "of the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=184"
  },
  {
    "text": "let's dive into the details.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=185"
  },
  {
    "text": "First, we're going to discuss the core design principles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=187"
  },
  {
    "text": "of TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=190"
  },
  {
    "text": "and how these principles will change the way you think ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=192"
  },
  {
    "text": "about customizing the storage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=194"
  },
  {
    "text": "layout, and display of text in your apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=197"
  },
  {
    "text": "After that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=201"
  },
  {
    "text": "Chris will walk you through ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=202"
  },
  {
    "text": "a TextKit 2 sample app we've created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=203"
  },
  {
    "text": "to collaborate on a book of recipes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=205"
  },
  {
    "text": "This app uses the new TextKit 2 classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=208"
  },
  {
    "text": "to lay out and display text in CALayers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=210"
  },
  {
    "text": "Here, you'll get to learn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=214"
  },
  {
    "text": "how the design principles work in practice.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=215"
  },
  {
    "text": "Finally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=219"
  },
  {
    "text": "we'll cover some important technical details ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=220"
  },
  {
    "text": "for modernizing your apps for TextKit 2.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=222"
  },
  {
    "text": "So let's get started with the design principles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=225"
  },
  {
    "text": "The core high-level design principles of TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=229"
  },
  {
    "text": "are correctness, safety, and performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=233"
  },
  {
    "text": "We've taken a balanced approach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=237"
  },
  {
    "text": "All three principles are important, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=240"
  },
  {
    "text": "so there is no priority to the order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=241"
  },
  {
    "text": "in which we discuss them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=243"
  },
  {
    "text": "Each of these high-level design principles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=247"
  },
  {
    "text": "informs a specific design change in the system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=249"
  },
  {
    "text": "For correctness, TextKit 2 abstracts away glyph handling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=254"
  },
  {
    "text": "For safety, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=259"
  },
  {
    "text": "TextKit 2 places a heavier focus on value semantics.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=260"
  },
  {
    "text": "And for performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=266"
  },
  {
    "text": "TextKit 2 uses viewport-based layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=268"
  },
  {
    "text": "and rendering.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=270"
  },
  {
    "text": "We'll begin with correctness. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=273"
  },
  {
    "text": "In this area, we've abstracted away glyph handling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=275"
  },
  {
    "text": "to provide a consistent experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=278"
  },
  {
    "text": "for international text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=280"
  },
  {
    "text": "Apple devices are used everywhere around the world, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=283"
  },
  {
    "text": "so it's really important to provide correct layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=286"
  },
  {
    "text": "rendering, and interaction for text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=290"
  },
  {
    "text": "in all languages and scripts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=293"
  },
  {
    "text": "We want everyone to be able to read and interact ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=297"
  },
  {
    "text": "with text on their devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=299"
  },
  {
    "text": "And the design of some of the TextKit 1 APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=301"
  },
  {
    "text": "makes it difficult to work with international text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=304"
  },
  {
    "text": "in a way that's universally correct.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=306"
  },
  {
    "text": "To understand why, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=310"
  },
  {
    "text": "we first need to understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=312"
  },
  {
    "text": "what a glyph is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=313"
  },
  {
    "text": "A glyph is a visual representation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=315"
  },
  {
    "text": "of a variable number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=317"
  },
  {
    "text": "of characters.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=319"
  },
  {
    "text": "In many Western languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=321"
  },
  {
    "text": "one glyph usually represents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=323"
  },
  {
    "text": "one character, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=325"
  },
  {
    "text": "but this is not always true.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=326"
  },
  {
    "text": "You can have multiple glyphs representing a single character, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=330"
  },
  {
    "text": "or it could be the other way around. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=333"
  },
  {
    "text": "A single glyph could represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=335"
  },
  {
    "text": "multiple characters.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=337"
  },
  {
    "text": "This single glyph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=340"
  },
  {
    "text": "used to represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=341"
  },
  {
    "text": "multiple characters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=342"
  },
  {
    "text": "is called a ligature.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=343"
  },
  {
    "text": "There aren't too many ligatures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=346"
  },
  {
    "text": "in Western languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=347"
  },
  {
    "text": "and they don't usually affect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=349"
  },
  {
    "text": "the legibility of the text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=350"
  },
  {
    "text": "You can still read it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=352"
  },
  {
    "text": "just fine without ligatures.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=353"
  },
  {
    "text": "But that's not true ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=356"
  },
  {
    "text": "for all languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=357"
  },
  {
    "text": "Scripts like Arabic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=359"
  },
  {
    "text": "and Devanagari ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=360"
  },
  {
    "text": "use lots of ligatures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=362"
  },
  {
    "text": "and they do affect the legibility. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=363"
  },
  {
    "text": "Check out this word in Arabic script.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=366"
  },
  {
    "text": "It's an Urdu word that means \"moment.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=369"
  },
  {
    "text": "Now take a moment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=372"
  },
  {
    "text": "to compare these two renderings.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=374"
  },
  {
    "text": "The full word, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=377"
  },
  {
    "text": "drawn with ligatures on the right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=378"
  },
  {
    "text": "appears very different ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=379"
  },
  {
    "text": "from the individual characters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=380"
  },
  {
    "text": "on the left.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=381"
  },
  {
    "text": "Native readers of the language ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=383"
  },
  {
    "text": "would consider the version on the left to be illegible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=385"
  },
  {
    "text": "Many of the APIs in TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=392"
  },
  {
    "text": "require working with a glyph index or range. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=394"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=398"
  },
  {
    "text": "to get the bounding rectangle of some text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=399"
  },
  {
    "text": "you need to know the glyph range of the text you want.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=401"
  },
  {
    "text": "If the text is in a Western language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=407"
  },
  {
    "text": "figuring out the right glyph range isn't too bad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=409"
  },
  {
    "text": "In this English example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=413"
  },
  {
    "text": "it's pretty easy to find the glyph range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=414"
  },
  {
    "text": "for the first four characters of the text.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=416"
  },
  {
    "text": "Now consider Kannada, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=421"
  },
  {
    "text": "a script and language ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=423"
  },
  {
    "text": "spoken by millions of people in India.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=424"
  },
  {
    "text": "Not only does it use lots of ligatures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=427"
  },
  {
    "text": "the glyphs can be reordered and combined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=430"
  },
  {
    "text": "in all sorts of interesting ways.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=432"
  },
  {
    "text": "This Kannada word meaning \"October\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=435"
  },
  {
    "text": "features a split vowel at character index four, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=438"
  },
  {
    "text": "so that gets split up into two glyphs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=441"
  },
  {
    "text": "Then the one on the left gets reordered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=445"
  },
  {
    "text": "between the glyphs representing characters one and two ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=447"
  },
  {
    "text": "before the ligature for two is applied.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=450"
  },
  {
    "text": "The glyph representing the character at index three ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=454"
  },
  {
    "text": "also gets substituted to a conjoining form.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=457"
  },
  {
    "text": "In the final word, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=462"
  },
  {
    "text": "it's drawn below one of the glyphs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=463"
  },
  {
    "text": "in the split vowel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=464"
  },
  {
    "text": "Now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=466"
  },
  {
    "text": "if you didn't understand any of what I just said, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=467"
  },
  {
    "text": "that is totally OK.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=470"
  },
  {
    "text": "These are details ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=472"
  },
  {
    "text": "that the framework should be handling for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=474"
  },
  {
    "text": "so that you can focus on building your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=476"
  },
  {
    "text": "The point is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=479"
  },
  {
    "text": "it's not possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=480"
  },
  {
    "text": "to find the glyph range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=481"
  },
  {
    "text": "for the first four characters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=482"
  },
  {
    "text": "of text like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=484"
  },
  {
    "text": "There is no single glyph range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=486"
  },
  {
    "text": "that will represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=488"
  },
  {
    "text": "those four characters.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=489"
  },
  {
    "text": "And since many TextKit 1 APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=492"
  },
  {
    "text": "require a glyph range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=494"
  },
  {
    "text": "using those APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=497"
  },
  {
    "text": "can potentially break ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=498"
  },
  {
    "text": "layout and rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=499"
  },
  {
    "text": "for complex scripts like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=500"
  },
  {
    "text": "And that's why TextKit 2 abstracts away glyph handling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=503"
  },
  {
    "text": "TextKit 2 renders all text with Core Text-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=507"
  },
  {
    "text": "so you'll automatically get correct rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=510"
  },
  {
    "text": "for complex scripts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=513"
  },
  {
    "text": "You won't have to manage glyphs at all with TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=515"
  },
  {
    "text": "Instead, you use higher-level objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=519"
  },
  {
    "text": "to control text layout and interactions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=521"
  },
  {
    "text": "Meet NSTextSelection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=525"
  },
  {
    "text": "one of these higher-level objects.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=527"
  },
  {
    "text": "It contains all the necessary context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=530"
  },
  {
    "text": "to represent a text selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=532"
  },
  {
    "text": "such as its granularity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=534"
  },
  {
    "text": "its affinity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=536"
  },
  {
    "text": "and the possibly disjoint ranges of text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=538"
  },
  {
    "text": "that make up the selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=540"
  },
  {
    "text": "These properties on NSTextSelection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=543"
  },
  {
    "text": "are read only, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=545"
  },
  {
    "text": "so you won't modify instances of the selection object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=546"
  },
  {
    "text": "to change them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=549"
  },
  {
    "text": "Instead, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=551"
  },
  {
    "text": "you use an instance of NSTextSelectionNavigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=552"
  },
  {
    "text": "to perform actions on text selections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=555"
  },
  {
    "text": "receiving new instances of NSTextSelection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=557"
  },
  {
    "text": "that represent the resulting selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=560"
  },
  {
    "text": "You can ask the navigation object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=567"
  },
  {
    "text": "to give you selections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=568"
  },
  {
    "text": "resulting from tap ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=569"
  },
  {
    "text": "or mouse-down events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=571"
  },
  {
    "text": "at a point on the screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=572"
  },
  {
    "text": "or get a new selection resulting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=574"
  },
  {
    "text": "from navigating forward ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=575"
  },
  {
    "text": "or backward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=576"
  },
  {
    "text": "This makes it easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=579"
  },
  {
    "text": "to do things, like extend the selection forward ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=580"
  },
  {
    "text": "by one word ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=582"
  },
  {
    "text": "and get the correct result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=583"
  },
  {
    "text": "accounting for bidirectional text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=584"
  },
  {
    "text": "in right-to-left languages.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=586"
  },
  {
    "text": "Now I wanna call your attention ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=589"
  },
  {
    "text": "to something interesting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=590"
  },
  {
    "text": "about these new selection APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=591"
  },
  {
    "text": "This method takes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=594"
  },
  {
    "text": "a NSTextLocation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=595"
  },
  {
    "text": "This is another new object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=597"
  },
  {
    "text": "in TextKit 2.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=599"
  },
  {
    "text": "Meet NSTextLocation and NSTextRange.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=602"
  },
  {
    "text": "These are very similar to the UITextPosition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=606"
  },
  {
    "text": "and UITextRange classes from UIKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=609"
  },
  {
    "text": "except you're not required to subclass them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=611"
  },
  {
    "text": "Most of the time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=615"
  },
  {
    "text": "you'll use the default location and range objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=616"
  },
  {
    "text": "with TextKit 2.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=618"
  },
  {
    "text": "Using objects instead of integers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=622"
  },
  {
    "text": "allows for more expressive document models ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=624"
  },
  {
    "text": "because the ranges are defined in terms of locations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=626"
  },
  {
    "text": "relative to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=629"
  },
  {
    "text": "The HTML document object model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=631"
  },
  {
    "text": "is a good example of this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=633"
  },
  {
    "text": "Since it has nested elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=636"
  },
  {
    "text": "a location needs to represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=638"
  },
  {
    "text": "both the absolute position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=639"
  },
  {
    "text": "in the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=641"
  },
  {
    "text": "and also the position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=642"
  },
  {
    "text": "in the visible text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=643"
  },
  {
    "text": "This can't be expressed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=645"
  },
  {
    "text": "with a single numerical index.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=646"
  },
  {
    "text": "And that's it for correctness. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=649"
  },
  {
    "text": "Next up is safety.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=652"
  },
  {
    "text": "In this area, we've designed TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=654"
  },
  {
    "text": "with a greater emphasis on value semantics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=657"
  },
  {
    "text": "to better align with the goals of technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=660"
  },
  {
    "text": "like Swift and SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=662"
  },
  {
    "text": "And when I say \"value semantics,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=667"
  },
  {
    "text": "I'm not talking about value types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=669"
  },
  {
    "text": "We did not make NSLayoutManager into a struct.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=672"
  },
  {
    "text": "Value types keep a unique copy of their data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=678"
  },
  {
    "text": "which prevents mutation of that data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=680"
  },
  {
    "text": "This makes your code safer and more stable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=683"
  },
  {
    "text": "by removing unintended sharing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=686"
  },
  {
    "text": "and associated side effects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=687"
  },
  {
    "text": "But value types ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=690"
  },
  {
    "text": "are not the only way to get this benefit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=691"
  },
  {
    "text": "Immutable classes have properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=695"
  },
  {
    "text": "that cannot be changed after initialization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=697"
  },
  {
    "text": "which also prevents mutation of their data.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=699"
  },
  {
    "text": "These classes behave like value types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=703"
  },
  {
    "text": "so we refer to them as having value semantics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=706"
  },
  {
    "text": "If you want to change the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=710"
  },
  {
    "text": "in one of these objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=711"
  },
  {
    "text": "you have to make a brand-new instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=713"
  },
  {
    "text": "to replace the original one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=715"
  },
  {
    "text": "And many of the classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=717"
  },
  {
    "text": "in TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=719"
  },
  {
    "text": "are designed in this way.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=720"
  },
  {
    "text": "To illustrate the benefits of this design change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=723"
  },
  {
    "text": "let's refresh our memory on the design of TextKit 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=725"
  },
  {
    "text": "The flow of text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=729"
  },
  {
    "text": "from the storage to the screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=730"
  },
  {
    "text": "used to work like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=732"
  },
  {
    "text": "Updates to the text storage notified the layout manager, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=735"
  },
  {
    "text": "which would then generate glyphs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=739"
  },
  {
    "text": "position them, and draw them directly into the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=742"
  },
  {
    "text": "With this approach of drawing glyphs directly into the view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=747"
  },
  {
    "text": "it's difficult to figure out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=750"
  },
  {
    "text": "where to separate the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=752"
  },
  {
    "text": "to create spaces for custom drawing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=753"
  },
  {
    "text": "To understand what I mean by that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=757"
  },
  {
    "text": "check out this sneak-peek screenshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=758"
  },
  {
    "text": "from the sample app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=760"
  },
  {
    "text": "where I've left some comments on a recipe.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=761"
  },
  {
    "text": "Notice how the comment appears ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=765"
  },
  {
    "text": "right underneath the recipe it's referring to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=767"
  },
  {
    "text": "and it's drawn with this distinct, bubble-shaped, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=769"
  },
  {
    "text": "indigo background and white text.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=772"
  },
  {
    "text": "What approach should we take ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=776"
  },
  {
    "text": "to insert comments in the correct place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=777"
  },
  {
    "text": "and make them look different from the rest of the text? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=779"
  },
  {
    "text": "You might expect to do this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=784"
  },
  {
    "text": "by dividing the recipe text into meaningful units, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=786"
  },
  {
    "text": "or elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=789"
  },
  {
    "text": "putting each comment in its own element, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=791"
  },
  {
    "text": "and positioning each comment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=794"
  },
  {
    "text": "after the recipe it's related to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=795"
  },
  {
    "text": "while providing instructions for how to draw the comments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=797"
  },
  {
    "text": "With TextKit 1, the reality is quite different.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=801"
  },
  {
    "text": "You have to worry about a lot of details, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=805"
  },
  {
    "text": "like finding the glyph index, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=807"
  },
  {
    "text": "making sure that the glyph is not in the middle of a grapheme cluster, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=809"
  },
  {
    "text": "adjusting that glyph index if it is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=811"
  },
  {
    "text": "changing the line spacing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=812"
  },
  {
    "text": "and possibly customizing the line-fragment geometry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=813"
  },
  {
    "text": "And these details are not relevant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=817"
  },
  {
    "text": "to what you're trying to do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=818"
  },
  {
    "text": "So with TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=820"
  },
  {
    "text": "we're aiming to make the expectation into reality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=822"
  },
  {
    "text": "We've changed the flow of text through the system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=826"
  },
  {
    "text": "to make approaches like this possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=828"
  },
  {
    "text": "Here's how that flow works in TextKit 2.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=832"
  },
  {
    "text": "Updates to the text storage go through a new object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=836"
  },
  {
    "text": "called the content manager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=839"
  },
  {
    "text": "The content manager divides the text up into elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=843"
  },
  {
    "text": "and keeps track of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=846"
  },
  {
    "text": "When it's time for layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=849"
  },
  {
    "text": "the text layout manager asks the content manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=850"
  },
  {
    "text": "for the elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=853"
  },
  {
    "text": "Then the text layout manager lays out the elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=856"
  },
  {
    "text": "into the text container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=859"
  },
  {
    "text": "and generates layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=860"
  },
  {
    "text": "that contain the layout and positioning information.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=862"
  },
  {
    "text": "When it's time for display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=867"
  },
  {
    "text": "the layout fragments are handed off ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=869"
  },
  {
    "text": "to the ViewportLayoutController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=870"
  },
  {
    "text": "which coordinates the positioning ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=872"
  },
  {
    "text": "and layout of those fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=873"
  },
  {
    "text": "in your rendering surface of choice, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=875"
  },
  {
    "text": "whether it's a view or a layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=877"
  },
  {
    "text": "As you can tell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=880"
  },
  {
    "text": "there are a lot of new objects involved in this process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=881"
  },
  {
    "text": "And this is where the emphasis on value semantics comes in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=884"
  },
  {
    "text": "You control the layout and display of your text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=890"
  },
  {
    "text": "by hooking into the system at the right point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=892"
  },
  {
    "text": "and obtaining the information you need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=895"
  },
  {
    "text": "from objects that use value semantics.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=897"
  },
  {
    "text": "To make changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=902"
  },
  {
    "text": "you create new instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=904"
  },
  {
    "text": "of the value objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=905"
  },
  {
    "text": "with the changes you want ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=906"
  },
  {
    "text": "and give them back ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=907"
  },
  {
    "text": "to the system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=908"
  },
  {
    "text": "The system uses the values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=910"
  },
  {
    "text": "from your replacement objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=911"
  },
  {
    "text": "for layout and display.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=912"
  },
  {
    "text": "So now, let's meet these new objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=915"
  },
  {
    "text": "and identify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=917"
  },
  {
    "text": "the different points of the system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=918"
  },
  {
    "text": "where you can receive or replace them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=919"
  },
  {
    "text": "We'll start with the storage objects.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=921"
  },
  {
    "text": "Meet NSTextElement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=925"
  },
  {
    "text": "Elements are the building blocks of your document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=928"
  },
  {
    "text": "Each element represents a portion of the content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=931"
  },
  {
    "text": "and contains a range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=933"
  },
  {
    "text": "that describes where it is in the document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=935"
  },
  {
    "text": "And elements have value semantics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=938"
  },
  {
    "text": "Their properties, including the range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=941"
  },
  {
    "text": "are immutable and cannot be changed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=942"
  },
  {
    "text": "after creating the element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=944"
  },
  {
    "text": "Modeling the document as a series of elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=948"
  },
  {
    "text": "rather than a series of characters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=950"
  },
  {
    "text": "gives us a lot more power. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=952"
  },
  {
    "text": "We gain the ability to easily distinguish ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=955"
  },
  {
    "text": "what kind of content a given element represents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=958"
  },
  {
    "text": "whether it's a paragraph of text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=961"
  },
  {
    "text": "an attachment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=963"
  },
  {
    "text": "or some other custom type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=964"
  },
  {
    "text": "And we can make decisions on how to lay out elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=967"
  },
  {
    "text": "based on their type.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=969"
  },
  {
    "text": "Now let's meet NSTextContentManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=973"
  },
  {
    "text": "The content manager knows how to generate elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=976"
  },
  {
    "text": "from the text content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=979"
  },
  {
    "text": "and keeps track of the ranges of those elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=980"
  },
  {
    "text": "within the overall document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=982"
  },
  {
    "text": "It also knows how to work with the backing store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=985"
  },
  {
    "text": "and how to generate new elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=987"
  },
  {
    "text": "with updated ranges ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=989"
  },
  {
    "text": "when the content in the backing store changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=990"
  },
  {
    "text": "Think of the content manager as a wrapper ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=994"
  },
  {
    "text": "for the backing store.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=995"
  },
  {
    "text": "The content manager provides an interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=998"
  },
  {
    "text": "for translating the raw data into elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1000"
  },
  {
    "text": "NSTextContentManager and NSTextElement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1006"
  },
  {
    "text": "are both abstract types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1008"
  },
  {
    "text": "so you could subclass them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1010"
  },
  {
    "text": "if you need to use a custom document model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1011"
  },
  {
    "text": "or a custom backing store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1013"
  },
  {
    "text": "The headers and documentation provide guidance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1016"
  },
  {
    "text": "on how to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1018"
  },
  {
    "text": "But most of the time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1020"
  },
  {
    "text": "you can use the default ones that TextKit 2 provides.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1021"
  },
  {
    "text": "Meet NSTextContentStorage and NSTextParagraph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1025"
  },
  {
    "text": "These are the default content manager and element types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1029"
  },
  {
    "text": "NSTextContentStorage is a content manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1034"
  },
  {
    "text": "that uses an NSTextStorage as the backing store.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1037"
  },
  {
    "text": "It knows how to divide the contents of the text storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1041"
  },
  {
    "text": "into paragraph elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1044"
  },
  {
    "text": "which are instances of NSTextParagraph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1045"
  },
  {
    "text": "NSTextContentStorage also knows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1049"
  },
  {
    "text": "how to generate updated paragraph elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1051"
  },
  {
    "text": "when the text in the text storage changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1054"
  },
  {
    "text": "This brings me to an important point.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1057"
  },
  {
    "text": "When making changes to the underlying text storage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1060"
  },
  {
    "text": "you should wrap your updates in this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1063"
  },
  {
    "text": "performEditingTransaction method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1065"
  },
  {
    "text": "This ensures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1068"
  },
  {
    "text": "that the other parts of the TextKit 2 system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1069"
  },
  {
    "text": "are notified of your changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1071"
  },
  {
    "text": "You can do some cool stuff ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1075"
  },
  {
    "text": "with the content storage delegates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1076"
  },
  {
    "text": "without having to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1077"
  },
  {
    "text": "a full NSTextContentManager subclass.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1078"
  },
  {
    "text": "Later in this video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1082"
  },
  {
    "text": "Chris will cover how to use content delegates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1084"
  },
  {
    "text": "to change the comment font and color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1086"
  },
  {
    "text": "without modifying the text storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1088"
  },
  {
    "text": "and how to hide comments altogether. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1090"
  },
  {
    "text": "So stay tuned for more details.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1092"
  },
  {
    "text": "OK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1096"
  },
  {
    "text": "Now we understand how TextKit 2 creates elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1097"
  },
  {
    "text": "from your text content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1100"
  },
  {
    "text": "That takes care of the first two steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1102"
  },
  {
    "text": "from our new approach.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1103"
  },
  {
    "text": "The content storage automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1106"
  },
  {
    "text": "divides the text into paragraph elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1107"
  },
  {
    "text": "and it knows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1110"
  },
  {
    "text": "how to create new paragraphs for the new comments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1111"
  },
  {
    "text": "Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1115"
  },
  {
    "text": "let's figure out how we can accomplish ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1116"
  },
  {
    "text": "the last two steps: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1117"
  },
  {
    "text": "the positioning and display of comments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1118"
  },
  {
    "text": "Returning to our flow diagram, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1121"
  },
  {
    "text": "we need to get layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1123"
  },
  {
    "text": "for our comment elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1125"
  },
  {
    "text": "There are new layout objects to help us with these tasks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1127"
  },
  {
    "text": "Let's meet them now.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1130"
  },
  {
    "text": "Meet NSTextLayoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1133"
  },
  {
    "text": "The text layout manager controls the text layout process.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1136"
  },
  {
    "text": "NSTextLayoutManager is similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1140"
  },
  {
    "text": "to the old NSLayoutManager from TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1142"
  },
  {
    "text": "with one major difference: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1145"
  },
  {
    "text": "NSTextLayoutManager does not deal with glyphs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1147"
  },
  {
    "text": "Instead, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1152"
  },
  {
    "text": "NSTextLayoutManager takes text elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1153"
  },
  {
    "text": "lays them out into the text container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1156"
  },
  {
    "text": "and generates layout fragments for those elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1159"
  },
  {
    "text": "You work with layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1163"
  },
  {
    "text": "to get layout information for text elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1164"
  },
  {
    "text": "So now let's learn about layout fragments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1167"
  },
  {
    "text": "Meet NSTextLayoutFragment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1171"
  },
  {
    "text": "A layout fragment contains layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1174"
  },
  {
    "text": "for one or more text elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1177"
  },
  {
    "text": "Just like elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1179"
  },
  {
    "text": "they use value semantics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1181"
  },
  {
    "text": "and their properties are immutable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1182"
  },
  {
    "text": "So the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1185"
  },
  {
    "text": "will create layout fragments for each of our comment elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1187"
  },
  {
    "text": "and then we can use the information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1190"
  },
  {
    "text": "from the layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1192"
  },
  {
    "text": "to position and display them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1193"
  },
  {
    "text": "Layout fragments communicate layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1196"
  },
  {
    "text": "through three properties: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1199"
  },
  {
    "text": "an array of textLineFragments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1201"
  },
  {
    "text": "the layoutFragmentFrame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1204"
  },
  {
    "text": "and the renderingSurfaceBounds.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1207"
  },
  {
    "text": "If you want to customize or change the layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1210"
  },
  {
    "text": "it's essential to understand the information you get ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1213"
  },
  {
    "text": "with each of these properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1215"
  },
  {
    "text": "So we'll go over that next.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1217"
  },
  {
    "text": "For the first property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1220"
  },
  {
    "text": "we'll meet NSTextLineFragment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1221"
  },
  {
    "text": "Line fragments contain measurement information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1224"
  },
  {
    "text": "for each line of text in the layout fragment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1227"
  },
  {
    "text": "These are useful ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1230"
  },
  {
    "text": "for obtaining geometric information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1231"
  },
  {
    "text": "for specific lines ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1233"
  },
  {
    "text": "or for counting the number of lines in a layout fragment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1235"
  },
  {
    "text": "The second property, the layout fragment frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1239"
  },
  {
    "text": "describes how the text in the layout fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1242"
  },
  {
    "text": "is laid out inside the text container area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1244"
  },
  {
    "text": "In TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1248"
  },
  {
    "text": "text layout is basically stacking up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1249"
  },
  {
    "text": "the layout fragment frames within the container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1252"
  },
  {
    "text": "Think of these frames like tiles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1255"
  },
  {
    "text": "The system is dividing up the text container area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1257"
  },
  {
    "text": "into tiles, where each layout fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1259"
  },
  {
    "text": "is a single tile.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1262"
  },
  {
    "text": "Empty lines have their own layout fragment frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1265"
  },
  {
    "text": "as shown in the diagram. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1267"
  },
  {
    "text": "In general, layout fragment frames ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1270"
  },
  {
    "text": "are useful for positioning other views in your UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1272"
  },
  {
    "text": "near the fragment contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1275"
  },
  {
    "text": "or for calculating the total height of the text content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1277"
  },
  {
    "text": "Now, this frame does not accurately represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1282"
  },
  {
    "text": "the space needed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1284"
  },
  {
    "text": "to draw the text itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1285"
  },
  {
    "text": "That information comes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1287"
  },
  {
    "text": "from the third property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1288"
  },
  {
    "text": "The rendering surface bounds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1291"
  },
  {
    "text": "describes the area required ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1293"
  },
  {
    "text": "to draw the text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1295"
  },
  {
    "text": "This is the rectangle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1297"
  },
  {
    "text": "you want to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1298"
  },
  {
    "text": "to get the size of the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1299"
  },
  {
    "text": "in the view's coordinate space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1300"
  },
  {
    "text": "And this is different ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1303"
  },
  {
    "text": "from the layout fragment frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1304"
  },
  {
    "text": "because the text can overshoot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1305"
  },
  {
    "text": "the edges of the fragment frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1307"
  },
  {
    "text": "This happens with diacritics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1309"
  },
  {
    "text": "or, as shown here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1311"
  },
  {
    "text": "with long descenders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1313"
  },
  {
    "text": "in italic fonts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1314"
  },
  {
    "text": "Notice how the bottom-left edge of the J ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1316"
  },
  {
    "text": "sticks out just a little bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1319"
  },
  {
    "text": "from the layout fragment frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1321"
  },
  {
    "text": "It doesn't stick out that much, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1324"
  },
  {
    "text": "so here's a more extreme example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1326"
  },
  {
    "text": "Some fonts, like Zapfino, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1329"
  },
  {
    "text": "have glyphs that extend very far ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1330"
  },
  {
    "text": "outside the typographic bounds.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1332"
  },
  {
    "text": "The rendering surface bounds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1335"
  },
  {
    "text": "will be much larger ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1336"
  },
  {
    "text": "than the layout fragment frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1337"
  },
  {
    "text": "in this case.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1338"
  },
  {
    "text": "Now that we understand the layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1341"
  },
  {
    "text": "that layout fragments provide, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1344"
  },
  {
    "text": "let's back up a bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1345"
  },
  {
    "text": "and talk about how to use this information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1346"
  },
  {
    "text": "to customize the layout of text elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1349"
  },
  {
    "text": "Since layout fragments are immutable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1352"
  },
  {
    "text": "you can't directly change the layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1354"
  },
  {
    "text": "on a fragment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1357"
  },
  {
    "text": "Going back to our flow diagram, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1360"
  },
  {
    "text": "we need to hook into the layout process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1362"
  },
  {
    "text": "and create new instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1364"
  },
  {
    "text": "of NSTextLayoutFragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1366"
  },
  {
    "text": "with the information we want to change.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1367"
  },
  {
    "text": "And you hook into the layout process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1373"
  },
  {
    "text": "using this delegate method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1375"
  },
  {
    "text": "on NSTextLayoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1377"
  },
  {
    "text": "This method gets called during the layout process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1380"
  },
  {
    "text": "when the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1382"
  },
  {
    "text": "is generating the layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1384"
  },
  {
    "text": "from the elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1385"
  },
  {
    "text": "Here you have an opportunity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1387"
  },
  {
    "text": "to create your own layout fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1389"
  },
  {
    "text": "for an element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1391"
  },
  {
    "text": "That takes care of the last two steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1395"
  },
  {
    "text": "in our approach to the comment problem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1396"
  },
  {
    "text": "We'll handle the positioning and custom drawing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1399"
  },
  {
    "text": "of our comment layout fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1401"
  },
  {
    "text": "by using a subclass of NSTextLayoutFragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1403"
  },
  {
    "text": "and providing instances of our custom fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1406"
  },
  {
    "text": "in the text layout manager delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1408"
  },
  {
    "text": "Later in this video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1411"
  },
  {
    "text": "Chris will demonstrate how this is done in our sample app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1412"
  },
  {
    "text": "And that's safety. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1417"
  },
  {
    "text": "Now let's move on to performance.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1418"
  },
  {
    "text": "Performance is one of the greatest challenges ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1422"
  },
  {
    "text": "for any text engine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1424"
  },
  {
    "text": "TextKit 2 is extremely fast ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1426"
  },
  {
    "text": "for an incredibly wide range of scenarios, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1428"
  },
  {
    "text": "from quickly rendering labels that are only a few lines each ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1431"
  },
  {
    "text": "to laying out documents that are hundreds of megabytes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1434"
  },
  {
    "text": "being scrolled through at interactive rates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1437"
  },
  {
    "text": "And for these scenarios, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1439"
  },
  {
    "text": "when you're scrolling through these really large documents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1441"
  },
  {
    "text": "at variable rates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1444"
  },
  {
    "text": "noncontiguous text layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1445"
  },
  {
    "text": "is absolutely essential for great performance.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1448"
  },
  {
    "text": "Let's review the difference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1454"
  },
  {
    "text": "between contiguous and noncontiguous layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1455"
  },
  {
    "text": "This diagram shows a document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1459"
  },
  {
    "text": "where the yellow rectangle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1461"
  },
  {
    "text": "represents the visible content area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1462"
  },
  {
    "text": "on the screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1464"
  },
  {
    "text": "Contiguous layout starts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1467"
  },
  {
    "text": "at the very beginning of the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1468"
  },
  {
    "text": "and goes in order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1470"
  },
  {
    "text": "from the beginning to the end of the text.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1471"
  },
  {
    "text": "So if you scroll to some point in the middle of the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1475"
  },
  {
    "text": "contiguous layout performs layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1479"
  },
  {
    "text": "for all of the text that came before that point.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1481"
  },
  {
    "text": "This includes all the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1484"
  },
  {
    "text": "that's been scrolled off the screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1486"
  },
  {
    "text": "all the way back to the beginning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1487"
  },
  {
    "text": "And if there's a lot of text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1490"
  },
  {
    "text": "the performance can be slow ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1492"
  },
  {
    "text": "and you can get animation hiccups when scrolling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1494"
  },
  {
    "text": "In the worst case, it can hang.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1497"
  },
  {
    "text": "In contrast, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1501"
  },
  {
    "text": "noncontiguous layout means ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1502"
  },
  {
    "text": "we can lay out a piece of the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1504"
  },
  {
    "text": "anywhere within the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1506"
  },
  {
    "text": "without laying out the pieces that come before it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1507"
  },
  {
    "text": "Now when you scroll to the middle of the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1511"
  },
  {
    "text": "layout happens for that visible area right away.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1514"
  },
  {
    "text": "This improves performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1518"
  },
  {
    "text": "by performing layout only for the portions of text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1520"
  },
  {
    "text": "that are visible on the screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1522"
  },
  {
    "text": "plus an additional over-scroll region, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1524"
  },
  {
    "text": "resulting in a smoother scrolling experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1526"
  },
  {
    "text": "And layout in TextKit 2 is always noncontiguous.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1530"
  },
  {
    "text": "In contrast, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1535"
  },
  {
    "text": "noncontiguous layout is optional in TextKit 1.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1537"
  },
  {
    "text": "It's enabled using a boolean property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1541"
  },
  {
    "text": "on NSLayoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1543"
  },
  {
    "text": "This API is simple, but because it is simple, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1546"
  },
  {
    "text": "it can't express information about the state of the layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1549"
  },
  {
    "text": "at the time you request layout information.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1552"
  },
  {
    "text": "Noncontiguous layout relies on estimates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1557"
  },
  {
    "text": "that may change later ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1559"
  },
  {
    "text": "once other portions of the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1561"
  },
  {
    "text": "have been laid out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1562"
  },
  {
    "text": "With TextKit 1, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1564"
  },
  {
    "text": "you can only turn noncontiguous layout on or off.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1565"
  },
  {
    "text": "There is no ability to control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1570"
  },
  {
    "text": "which parts of the document get laid out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1571"
  },
  {
    "text": "and no way to know when layout finishes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1574"
  },
  {
    "text": "and the layout estimates are updated to the real values.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1576"
  },
  {
    "text": "The TextKit 2 API is richer and more expressive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1580"
  },
  {
    "text": "TextKit 2 gives you consistent layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1586"
  },
  {
    "text": "for elements in the visible content area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1588"
  },
  {
    "text": "and notifies you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1591"
  },
  {
    "text": "when the layout updates for that visible area.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1592"
  },
  {
    "text": "This area is called the viewport. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1596"
  },
  {
    "text": "You manage the viewport by adjusting or relocating it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1599"
  },
  {
    "text": "and you receive callbacks before, during, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1602"
  },
  {
    "text": "and after viewport layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1605"
  },
  {
    "text": "For optimum performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1608"
  },
  {
    "text": "your code should focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1610"
  },
  {
    "text": "on working with layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1611"
  },
  {
    "text": "inside the viewport area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1613"
  },
  {
    "text": "Avoid requesting layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1615"
  },
  {
    "text": "for elements outside the viewport when possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1617"
  },
  {
    "text": "The layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1622"
  },
  {
    "text": "for elements outside the viewport ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1623"
  },
  {
    "text": "might not be accurate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1625"
  },
  {
    "text": "unless you explicitly ask ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1626"
  },
  {
    "text": "to ensure layout for the text ranges ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1628"
  },
  {
    "text": "corresponding to those elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1630"
  },
  {
    "text": "This call can be expensive, especially for large documents.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1633"
  },
  {
    "text": "Revisiting our flow diagram from earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1639"
  },
  {
    "text": "there's another new controller class ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1642"
  },
  {
    "text": "to help us manage the viewport.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1644"
  },
  {
    "text": "Meet NSTextViewportLayoutController. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1648"
  },
  {
    "text": "This is the source of truth for viewport layout information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1651"
  },
  {
    "text": "It talks to the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1655"
  },
  {
    "text": "to get layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1657"
  },
  {
    "text": "for elements within the viewport area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1658"
  },
  {
    "text": "You can access the viewport layout controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1662"
  },
  {
    "text": "through the property on the text layout manager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1664"
  },
  {
    "text": "Now that we've met the viewport layout controller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1668"
  },
  {
    "text": "let's talk about how to participate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1671"
  },
  {
    "text": "in the viewport layout process.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1672"
  },
  {
    "text": "The viewport layout controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1676"
  },
  {
    "text": "calls three important methods on its delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1678"
  },
  {
    "text": "during the viewport layout process: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1680"
  },
  {
    "text": "TextViewportLayoutController WillLayout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1682"
  },
  {
    "text": "textViewportController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1686"
  },
  {
    "text": "configureRenderingSurface FortextLayoutFragment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1688"
  },
  {
    "text": "and textViewportLayoutController DidLayout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1692"
  },
  {
    "text": "First, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1696"
  },
  {
    "text": "the viewport layout controller calls the willLayout method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1697"
  },
  {
    "text": "before laying out elements in the viewport. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1700"
  },
  {
    "text": "Here is where you do any setup work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1703"
  },
  {
    "text": "to prepare for layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1705"
  },
  {
    "text": "such as clearing out the contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1706"
  },
  {
    "text": "of the view or layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1708"
  },
  {
    "text": "Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1711"
  },
  {
    "text": "the viewport layout controller calls configureRenderingSurface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1712"
  },
  {
    "text": "for every layout fragment that's visible in the viewport. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1715"
  },
  {
    "text": "Here is where you update the geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1719"
  },
  {
    "text": "of each fragment view or layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1721"
  },
  {
    "text": "Finally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1724"
  },
  {
    "text": "the viewport layout controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1725"
  },
  {
    "text": "calls the didLayout method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1727"
  },
  {
    "text": "after it's finished laying out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1729"
  },
  {
    "text": "all of the layout fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1730"
  },
  {
    "text": "visible in the viewport.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1731"
  },
  {
    "text": "And here's where you perform ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1734"
  },
  {
    "text": "any needed updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1735"
  },
  {
    "text": "after viewport layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1736"
  },
  {
    "text": "is finished, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1737"
  },
  {
    "text": "like if you wanted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1738"
  },
  {
    "text": "to adjust the viewport to make the last element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1739"
  },
  {
    "text": "fully visible on the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1741"
  },
  {
    "text": "And that sums it up for performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1743"
  },
  {
    "text": "Now I'll hand it off to Chris ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1745"
  },
  {
    "text": "to show you how to use TextKit 2 in practice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1747"
  },
  {
    "text": "Thank you, Donna. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1750"
  },
  {
    "text": "We wrote a sample app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1751"
  },
  {
    "text": "that demonstrates some of the different ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1753"
  },
  {
    "text": "you can use TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1755"
  },
  {
    "text": "to lay out and interact with text in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1756"
  },
  {
    "text": "You can download the sample code used in this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1758"
  },
  {
    "text": "Let's open it up and try it out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1761"
  },
  {
    "text": "We're using this collaboration app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1764"
  },
  {
    "text": "to review a book of recipes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1766"
  },
  {
    "text": "so we can figure out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1767"
  },
  {
    "text": "what we want to make for lunch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1768"
  },
  {
    "text": "Scrolling through the recipes works as expected, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1771"
  },
  {
    "text": "but something special is happening behind the scenes: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1773"
  },
  {
    "text": "Only the paragraphs that are visible in the viewport ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1777"
  },
  {
    "text": "are being drawn.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1780"
  },
  {
    "text": "And instead of every paragraph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1782"
  },
  {
    "text": "being rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1783"
  },
  {
    "text": "on the same big surface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1784"
  },
  {
    "text": "each paragraph is being rendered into its own layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1785"
  },
  {
    "text": "If I click the Show Bounds button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1789"
  },
  {
    "text": "in the toolbar here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1791"
  },
  {
    "text": "these colored rectangles appear. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1793"
  },
  {
    "text": "The orange rectangle shows the bounds of each layer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1795"
  },
  {
    "text": "Drawing text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1800"
  },
  {
    "text": "into separate layers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1801"
  },
  {
    "text": "lets us implement a fun feature: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1802"
  },
  {
    "text": "I can leave comments on the recipes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1804"
  },
  {
    "text": "Now, I think an egg sandwich sounds pretty good, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1806"
  },
  {
    "text": "so I'm going to double-click on this paragraph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1809"
  },
  {
    "text": "and type, \"hey this sounds pretty good,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1812"
  },
  {
    "text": "and hit Enter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1816"
  },
  {
    "text": "to insert the comment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1817"
  },
  {
    "text": "I've just inserted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1819"
  },
  {
    "text": "a new paragraph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1820"
  },
  {
    "text": "into the document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1821"
  },
  {
    "text": "The bubble background is being drawn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1823"
  },
  {
    "text": "by a custom subclass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1824"
  },
  {
    "text": "of NSTextLayoutFragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1825"
  },
  {
    "text": "called BubbleLayoutFragment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1827"
  },
  {
    "text": "More on that later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1829"
  },
  {
    "text": "What's special is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1831"
  },
  {
    "text": "as I insert comments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1833"
  },
  {
    "text": "into the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1834"
  },
  {
    "text": "all of the paragraphs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1835"
  },
  {
    "text": "below the comment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1836"
  },
  {
    "text": "move to make room for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1837"
  },
  {
    "text": "If you didn't catch it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1839"
  },
  {
    "text": "the first time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1840"
  },
  {
    "text": "I'm going to click this turtle button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1841"
  },
  {
    "text": "in the toolbar to enable Slow Mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1842"
  },
  {
    "text": "Let's add another comment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1846"
  },
  {
    "text": "\"Yeah let's make it for lunch today.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1848"
  },
  {
    "text": "After I hit Enter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1852"
  },
  {
    "text": "the comment is added ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1854"
  },
  {
    "text": "to the document below it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1855"
  },
  {
    "text": "and all paragraphs below it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1856"
  },
  {
    "text": "animate slowly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1857"
  },
  {
    "text": "If you want ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1859"
  },
  {
    "text": "to hide all the comments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1860"
  },
  {
    "text": "you can click ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1861"
  },
  {
    "text": "the Toggle Comments button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1862"
  },
  {
    "text": "in the toolbar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1863"
  },
  {
    "text": "This is not actually editing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1864"
  },
  {
    "text": "the underlying document. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1866"
  },
  {
    "text": "It's instead asking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1868"
  },
  {
    "text": "the text content manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1869"
  },
  {
    "text": "to skip comments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1870"
  },
  {
    "text": "when enumerating text elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1872"
  },
  {
    "text": "for layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1873"
  },
  {
    "text": "TextKit 2 works just as well on iOS as it does on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1875"
  },
  {
    "text": "This means the TextKit 2 parts of the macOS app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1880"
  },
  {
    "text": "can be reused on iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1882"
  },
  {
    "text": "Let's run it on iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1884"
  },
  {
    "text": "We've used those parts to write an iOS version ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1888"
  },
  {
    "text": "of our collaboration app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1891"
  },
  {
    "text": "with all the same functionality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1892"
  },
  {
    "text": "I'm long-pressing on a paragraph to leave a comment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1895"
  },
  {
    "text": "then typing, \"hey that sounds good\"... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1898"
  },
  {
    "text": "and hitting Enter.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1903"
  },
  {
    "text": "Just like the app on macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1906"
  },
  {
    "text": "I can tap ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1908"
  },
  {
    "text": "the comment Show/Hide button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1909"
  },
  {
    "text": "to hide all comments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1910"
  },
  {
    "text": "I've just gone through an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1913"
  },
  {
    "text": "that uses TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1914"
  },
  {
    "text": "to lay out, draw, and interact with text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1915"
  },
  {
    "text": "Now let's go over some of the code in the sample app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1919"
  },
  {
    "text": "and how TextKit 2 makes it possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1921"
  },
  {
    "text": "The app demonstrates a lot of the functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1925"
  },
  {
    "text": "that TextKit 2 provides, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1928"
  },
  {
    "text": "but I want to focus on two areas for now: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1930"
  },
  {
    "text": "how it lays out the text in the viewport ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1933"
  },
  {
    "text": "using NSViewportLayoutController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1935"
  },
  {
    "text": "and how it implements the custom hiding behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1937"
  },
  {
    "text": "and rendering of the comments.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1939"
  },
  {
    "text": "When the text layout manager is about to lay out the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1943"
  },
  {
    "text": "either because it changed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1946"
  },
  {
    "text": "the container size was changed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1948"
  },
  {
    "text": "or a previously unseen portion of the document ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1950"
  },
  {
    "text": "has moved into the viewport, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1952"
  },
  {
    "text": "it calls textViewportLayout ControllerWillLayout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1954"
  },
  {
    "text": "on its viewport layout delegate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1958"
  },
  {
    "text": "We're using it here ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1961"
  },
  {
    "text": "to clear out all the text sublayers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1962"
  },
  {
    "text": "and open an animation transaction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1964"
  },
  {
    "text": "For each text element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1968"
  },
  {
    "text": "that the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1969"
  },
  {
    "text": "lays out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1971"
  },
  {
    "text": "it calls textViewportLayoutController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1972"
  },
  {
    "text": "configureRenderingSurfaceFor textLayoutFragment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1974"
  },
  {
    "text": "Here we're getting a layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1977"
  },
  {
    "text": "to display ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1979"
  },
  {
    "text": "the text layout fragment in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1980"
  },
  {
    "text": "updating its geometry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1981"
  },
  {
    "text": "animating it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1983"
  },
  {
    "text": "to its new position, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1984"
  },
  {
    "text": "if possible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1985"
  },
  {
    "text": "and adding it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1987"
  },
  {
    "text": "as sublayer of the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1988"
  },
  {
    "text": "When the layout manager is done laying out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1991"
  },
  {
    "text": "it will call textViewportLayout ControllerDidLayout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1993"
  },
  {
    "text": "We commit the animation transaction, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1997"
  },
  {
    "text": "update the selection highlights, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=1999"
  },
  {
    "text": "and update the content size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2002"
  },
  {
    "text": "so the scroll thumb is placed correctly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2003"
  },
  {
    "text": "Now let's talk about the comments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2008"
  },
  {
    "text": "TextKit 2 provides several hooks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2010"
  },
  {
    "text": "that you can use to customize layout element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2012"
  },
  {
    "text": "and layout fragment generation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2014"
  },
  {
    "text": "I'm gonna show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2017"
  },
  {
    "text": "how we take comments in the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2018"
  },
  {
    "text": "set custom attributes like font and color for display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2021"
  },
  {
    "text": "and draw the bubble behind them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2025"
  },
  {
    "text": "For each paragraph in the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2028"
  },
  {
    "text": "the text content storage gives its delegate a chance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2030"
  },
  {
    "text": "to customize the attributes on that paragraph. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2033"
  },
  {
    "text": "In our implementation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2037"
  },
  {
    "text": "we're setting a custom font and color on comments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2038"
  },
  {
    "text": "without having to alter the font or color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2041"
  },
  {
    "text": "of the underlying text storage.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2043"
  },
  {
    "text": "The text content manager also gives its delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2047"
  },
  {
    "text": "the chance to decide which text elements will be shown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2050"
  },
  {
    "text": "to the text layout manager during layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2052"
  },
  {
    "text": "Returning false for a text element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2056"
  },
  {
    "text": "prevents it from being displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2058"
  },
  {
    "text": "Here we're hiding comments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2060"
  },
  {
    "text": "by choosing not to enumerate them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2061"
  },
  {
    "text": "without having to actually delete them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2064"
  },
  {
    "text": "from the underlying text storage.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2065"
  },
  {
    "text": "The text layout manager has a delegate too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2069"
  },
  {
    "text": "By implementing textLayoutManager, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2072"
  },
  {
    "text": "textLayoutFragmentFor location in textElement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2074"
  },
  {
    "text": "the delegate can generate a custom text layout fragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2078"
  },
  {
    "text": "instead of the default ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2081"
  },
  {
    "text": "NSTextLayoutFragment instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2082"
  },
  {
    "text": "for a given NSTextElement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2084"
  },
  {
    "text": "In this case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2087"
  },
  {
    "text": "when it encounters an NSTextElement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2088"
  },
  {
    "text": "that represents a comment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2090"
  },
  {
    "text": "it creates a BubbleLayoutFragment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2092"
  },
  {
    "text": "which is a custom subclass of NSTextLayoutFragment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2094"
  },
  {
    "text": "BubbleLayoutFragment overrides the draw method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2099"
  },
  {
    "text": "of NSTextLayoutFragment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2102"
  },
  {
    "text": "to draw the background bubble ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2103"
  },
  {
    "text": "before calling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2105"
  },
  {
    "text": "the base class implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2106"
  },
  {
    "text": "to draw the text on top. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2108"
  },
  {
    "text": "Note that the text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2110"
  },
  {
    "text": "is being rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2111"
  },
  {
    "text": "with the custom font ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2112"
  },
  {
    "text": "and text color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2113"
  },
  {
    "text": "that we set earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2114"
  },
  {
    "text": "I've gone over how the sample app uses TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2117"
  },
  {
    "text": "to perform viewport-based animated layout of text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2120"
  },
  {
    "text": "and how it renders comments in those colorful bubbles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2123"
  },
  {
    "text": "going all the way from custom attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2126"
  },
  {
    "text": "in the text storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2128"
  },
  {
    "text": "to custom drawing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2130"
  },
  {
    "text": "But there's a lot more in the sample code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2131"
  },
  {
    "text": "that takes advantage of new API provided by TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2133"
  },
  {
    "text": "including interpreting mouse events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2137"
  },
  {
    "text": "to determine the text selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2139"
  },
  {
    "text": "rendering the text selection highlight, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2141"
  },
  {
    "text": "placing the comment popover ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2143"
  },
  {
    "text": "at a particular paragraph in the document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2144"
  },
  {
    "text": "and estimating the document height. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2147"
  },
  {
    "text": "You can find further discussion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2150"
  },
  {
    "text": "of all of these topics in the sample code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2151"
  },
  {
    "text": "Let's go back to Donna ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2154"
  },
  {
    "text": "to talk about preparing your apps for TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2155"
  },
  {
    "text": "Thanks, Chris. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2158"
  },
  {
    "text": "That's a fantastic example of how TextKit 2 works in practice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2160"
  },
  {
    "text": "Now that we've gone over what TextKit 2 can do, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2165"
  },
  {
    "text": "let's discuss some approaches for app modernization.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2167"
  },
  {
    "text": "Everything we've talked about so far ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2173"
  },
  {
    "text": "applies to creating your own TextKit 2 stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2175"
  },
  {
    "text": "to use with a generic view or layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2178"
  },
  {
    "text": "All of the new classes are available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2181"
  },
  {
    "text": "in UIKit with iOS 15 and in AppKit with macOS 12. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2183"
  },
  {
    "text": "So if you wanna go this route, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2187"
  },
  {
    "text": "you can start writing new code with TextKit 2 today.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2189"
  },
  {
    "text": "On the other hand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2194"
  },
  {
    "text": "many apps use the built-in text controls, like text view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2195"
  },
  {
    "text": "to take advantage of all the great, free functionality, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2198"
  },
  {
    "text": "like accessibility support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2201"
  },
  {
    "text": "and selection and editing services. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2203"
  },
  {
    "text": "Some of these controls have already been updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2206"
  },
  {
    "text": "to use TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2208"
  },
  {
    "text": "If your app uses the built-in controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2211"
  },
  {
    "text": "there are a few additional details ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2213"
  },
  {
    "text": "to be aware of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2215"
  },
  {
    "text": "Maintaining compatibility is as important to us ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2217"
  },
  {
    "text": "as it is to you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2220"
  },
  {
    "text": "Since TextKit 1 is such an integral part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2222"
  },
  {
    "text": "of the built-in text controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2225"
  },
  {
    "text": "we're going to great lengths to maintain compatibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2227"
  },
  {
    "text": "for apps that are using them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2229"
  },
  {
    "text": "This is why only some controls use TextKit 2 automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2231"
  },
  {
    "text": "in iOS 15 and macOS 12.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2235"
  },
  {
    "text": "Additionally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2239"
  },
  {
    "text": "some controls require taking extra steps to use TextKit 2 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2240"
  },
  {
    "text": "in these OS versions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2244"
  },
  {
    "text": "For AppKit developers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2246"
  },
  {
    "text": "NSTextView does not use TextKit 2 automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2248"
  },
  {
    "text": "If you want to use TextKit 2 with a NSTextView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2252"
  },
  {
    "text": "you need to opt in programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2255"
  },
  {
    "text": "at creation time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2257"
  },
  {
    "text": "This is how to do it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2260"
  },
  {
    "text": "First, create a text layout manager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2262"
  },
  {
    "text": "Next, create a text container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2266"
  },
  {
    "text": "Then associate the text container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2269"
  },
  {
    "text": "with the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2271"
  },
  {
    "text": "using the textContainer property on NSTextLayoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2273"
  },
  {
    "text": "Finally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2277"
  },
  {
    "text": "create your NSTextView using the designated initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2278"
  },
  {
    "text": "with the text container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2282"
  },
  {
    "text": "Now you'll have a text view that uses TextKit 2.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2285"
  },
  {
    "text": "You can access the text layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2288"
  },
  {
    "text": "and text content storage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2290"
  },
  {
    "text": "with new properties on NSTextView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2291"
  },
  {
    "text": "There's just one thing to be careful of.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2295"
  },
  {
    "text": "Recall that NSTextView has a layoutManager property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2298"
  },
  {
    "text": "that allows getting and setting its NSLayoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2301"
  },
  {
    "text": "NSLayoutManager is a TextKit 1 object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2305"
  },
  {
    "text": "and it's not compatible with the TextKit 2 stack.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2308"
  },
  {
    "text": "A text view can't have both a layout manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2312"
  },
  {
    "text": "and a text layout manager at the same time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2315"
  },
  {
    "text": "So here's the deal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2319"
  },
  {
    "text": "We added a special compatibility mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2321"
  },
  {
    "text": "for NSTextView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2323"
  },
  {
    "text": "that switches it to TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2324"
  },
  {
    "text": "when needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2325"
  },
  {
    "text": "The text view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2327"
  },
  {
    "text": "can automatically detect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2328"
  },
  {
    "text": "whether it needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2329"
  },
  {
    "text": "to use this mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2330"
  },
  {
    "text": "and replace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2331"
  },
  {
    "text": "its NSTextLayoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2332"
  },
  {
    "text": "with NSLayoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2333"
  },
  {
    "text": "For optimum performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2336"
  },
  {
    "text": "the text view will remain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2338"
  },
  {
    "text": "in compatibility mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2339"
  },
  {
    "text": "from that point forward.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2340"
  },
  {
    "text": "Even if you opted in to TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2343"
  },
  {
    "text": "your text view will automatically switch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2345"
  },
  {
    "text": "to TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2347"
  },
  {
    "text": "if you explicitly call the layoutManager property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2348"
  },
  {
    "text": "on your text view or text container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2351"
  },
  {
    "text": "The text view will also switch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2355"
  },
  {
    "text": "if it encounters text content that is not yet supported ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2356"
  },
  {
    "text": "or detects other conditions that require TextKit 1.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2359"
  },
  {
    "text": "And this can happen for field editors as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2364"
  },
  {
    "text": "Field editors for NSTextField use TextKit 2 by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2368"
  },
  {
    "text": "But if your text field subclass is requesting layout information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2372"
  },
  {
    "text": "from the field editor's layout manager, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2375"
  },
  {
    "text": "the field editor will switch to TextKit 1 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2378"
  },
  {
    "text": "for all text fields in that window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2380"
  },
  {
    "text": "The system will issue notifications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2385"
  },
  {
    "text": "before and after a text view switches to TextKit 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2387"
  },
  {
    "text": "You can observe these notifications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2390"
  },
  {
    "text": "to receive this information.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2391"
  },
  {
    "text": "The notification objects contain a reference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2394"
  },
  {
    "text": "to the exact text view that changed modes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2396"
  },
  {
    "text": "For complete details ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2400"
  },
  {
    "text": "on the TextKit 1 compatibility mode for AppKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2401"
  },
  {
    "text": "please refer to the documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2404"
  },
  {
    "text": "on the Apple Developer portal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2406"
  },
  {
    "text": "For UIKit developers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2409"
  },
  {
    "text": "UITextField uses TextKit 2 automatically in iOS 15.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2411"
  },
  {
    "text": "UITextView with TextKit 2 is not available in iOS 15.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2416"
  },
  {
    "text": "We're working to ensure maximum compatibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2423"
  },
  {
    "text": "for all applications that use UITextView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2425"
  },
  {
    "text": "and there are quite a lot of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2428"
  },
  {
    "text": "In the meantime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2430"
  },
  {
    "text": "you can review your existing code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2431"
  },
  {
    "text": "for uses of UITextView's layoutManager property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2433"
  },
  {
    "text": "and think about how to express your intent with TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2437"
  },
  {
    "text": "That way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2441"
  },
  {
    "text": "you'll be ready to transition once it's available.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2442"
  },
  {
    "text": "And that's a wrap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2445"
  },
  {
    "text": "Now you've met TextKit 2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2447"
  },
  {
    "text": "Apple's new text engine to take us into the future. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2449"
  },
  {
    "text": "We look forward to seeing what you'll build ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2452"
  },
  {
    "text": "with TextKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2454"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2455"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10061/?time=2456"
  }
]