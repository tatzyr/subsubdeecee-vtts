[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=0"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=3"
  },
  {
    "text": "Hi there. I’m Amanda, and I’ll be joined in a bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=9"
  },
  {
    "text": "by my colleague, Olivier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=11"
  },
  {
    "text": "In this talk, we’ll explore the features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=13"
  },
  {
    "text": "that we’ve added to RealityKit in 2021.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=15"
  },
  {
    "text": "RealityKit is an augmented reality authoring framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=18"
  },
  {
    "text": "introduced in 2019 focused on realistic rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=21"
  },
  {
    "text": "and making it easy to create AR apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=24"
  },
  {
    "text": "Leveraging ARKit to read the device’s sensor data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=27"
  },
  {
    "text": "RealityKit allows you to place 3D content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=30"
  },
  {
    "text": "in the real-world environment and make that content look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=33"
  },
  {
    "text": "as realistic as possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=35"
  },
  {
    "text": "Here are some great examples of RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=38"
  },
  {
    "text": "experiences in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=40"
  },
  {
    "text": "Go on a scavenger hunt in the real world, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=42"
  },
  {
    "text": "bowl virtually against your friends, even become ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=44"
  },
  {
    "text": "a sculpture in a museum, and find some colorful bugs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=47"
  },
  {
    "text": "Over the past couple of years, we’ve seen some amazing apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=52"
  },
  {
    "text": "created with RealityKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=54"
  },
  {
    "text": "and received really good feedback ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=56"
  },
  {
    "text": "to make this framework even better.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=57"
  },
  {
    "text": "And we’ve listened to your feedback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=61"
  },
  {
    "text": "We are happy to share that RealityKit 2 introduces ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=63"
  },
  {
    "text": "a bunch of new features to help you make ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=65"
  },
  {
    "text": "even more immersive AR apps and games.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=67"
  },
  {
    "text": "In this session, we’ll be highlighting some of them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=70"
  },
  {
    "text": "including our most-requested features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=73"
  },
  {
    "text": "like custom shaders and materials, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=75"
  },
  {
    "text": "custom systems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=77"
  },
  {
    "text": "and our new character controller concept. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=79"
  },
  {
    "text": "So put on your snorkel mask and let’s dive in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=81"
  },
  {
    "text": "When I was growing up in the Middle East, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=85"
  },
  {
    "text": "I learned to scuba dive in the Gulf. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=87"
  },
  {
    "text": "Although I didn’t get to wear ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=90"
  },
  {
    "text": "one of these super cute steampunk helmets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=91"
  },
  {
    "text": "I loved seeing all the colorful fish schooling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=94"
  },
  {
    "text": "I thought it might be fun to re-create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=96"
  },
  {
    "text": "that underwater vibe right here in my living room. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=98"
  },
  {
    "text": "Olivier and I wrote this demo using a bunch of the features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=101"
  },
  {
    "text": "that we’ll be showing you in this session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=104"
  },
  {
    "text": "and in our second RealityKit session later this week. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=106"
  },
  {
    "text": "We’ve got post processing to create the depth fog effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=109"
  },
  {
    "text": "and the water caustics, a custom geometry modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=112"
  },
  {
    "text": "to make the seaweed dance in the waves, and a bunch more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=115"
  },
  {
    "text": "Basically, RealityKit 2 lets you customize ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=119"
  },
  {
    "text": "so many things now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=122"
  },
  {
    "text": "This sample code is available for you to try out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=124"
  },
  {
    "text": "at developer.apple.com.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=126"
  },
  {
    "text": "There are five main topics we’ll cover today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=129"
  },
  {
    "text": "We’ll do a recap of what an ECS is and how we used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=132"
  },
  {
    "text": "our new custom systems feature to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=135"
  },
  {
    "text": "the fishes’ flocking behavior in our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=137"
  },
  {
    "text": "We’ll show you advancements in what you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=140"
  },
  {
    "text": "with materials as well as animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=142"
  },
  {
    "text": "the new character controller, which is how we got the diver ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=146"
  },
  {
    "text": "to interact so seamlessly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=148"
  },
  {
    "text": "with the AR mesh of the living room, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=150"
  },
  {
    "text": "and how you can now generate resources at runtime.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=152"
  },
  {
    "text": "So let’s start with the ECS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=156"
  },
  {
    "text": "ECS, short for entity component system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=158"
  },
  {
    "text": "is a way of structuring data and behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=161"
  },
  {
    "text": "and it’s commonly used in games and simulations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=164"
  },
  {
    "text": "It’s different from object-oriented programming ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=167"
  },
  {
    "text": "in which you tend to model an item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=170"
  },
  {
    "text": "as an encapsulated bundle of both ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=172"
  },
  {
    "text": "its functionality and the state associated with that item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=173"
  },
  {
    "text": "But with ECS, you have three prongs: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=177"
  },
  {
    "text": "entity, component, and system, where the functionality goes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=180"
  },
  {
    "text": "in the system, the state goes in the components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=183"
  },
  {
    "text": "and the entity is an identifier for a group of components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=186"
  },
  {
    "text": "This year, with RealityKit 2, we’re moving ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=191"
  },
  {
    "text": "towards a more pure ECS implementation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=194"
  },
  {
    "text": "guiding you to keep more of your functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=196"
  },
  {
    "text": "in the system layer with our new custom systems.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=198"
  },
  {
    "text": "What does entity mean to us? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=202"
  },
  {
    "text": "An entity represents one thing in your scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=204"
  },
  {
    "text": "Here are entities that represent the sea creatures in our scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=208"
  },
  {
    "text": "An entity can have child entities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=211"
  },
  {
    "text": "giving you a graph structure to work with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=213"
  },
  {
    "text": "For example, the transform component uses ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=215"
  },
  {
    "text": "the parent entity’s transform to add its own position onto. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=218"
  },
  {
    "text": "An entity itself doesn’t render anything on screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=222"
  },
  {
    "text": "For that, you need to give it a model component ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=226"
  },
  {
    "text": "or create a model entity, which’ll do that for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=228"
  },
  {
    "text": "To add attributes, properties, and behaviors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=231"
  },
  {
    "text": "you add components to your entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=234"
  },
  {
    "text": "Speaking of which, let’s talk about components.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=236"
  },
  {
    "text": "Components are for storing state between frames ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=240"
  },
  {
    "text": "and for marking an entity’s participation in a system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=243"
  },
  {
    "text": "You don’t need to include any logic for dealing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=246"
  },
  {
    "text": "with that state here, though. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=249"
  },
  {
    "text": "Your logic and behavior go in your custom system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=250"
  },
  {
    "text": "There are some components that will be already present ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=254"
  },
  {
    "text": "on any entity you create. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=256"
  },
  {
    "text": "Not shown here are the built-in components: the transform ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=258"
  },
  {
    "text": "and synchronization components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=261"
  },
  {
    "text": "They’re on all three of these entities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=264"
  },
  {
    "text": "There are others that you’ll often want to add, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=266"
  },
  {
    "text": "like the model component, which contains the mesh ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=268"
  },
  {
    "text": "and materials that make your entity show up on screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=271"
  },
  {
    "text": "You can add and remove components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=274"
  },
  {
    "text": "from your entities at runtime too, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=275"
  },
  {
    "text": "if you want to dynamically change their behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=277"
  },
  {
    "text": "We’ll mark this first fish as participating ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=281"
  },
  {
    "text": "in the Flocking System, and we’ll tell it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=283"
  },
  {
    "text": "that it likes to eat algae. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=285"
  },
  {
    "text": "This second fish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=287"
  },
  {
    "text": "it’s also going to flock with the first fish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=288"
  },
  {
    "text": "but it prefers to eat plankton right now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=291"
  },
  {
    "text": "This third guy is a plankton. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=293"
  },
  {
    "text": "It will be food for the second fish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=295"
  },
  {
    "text": "It should watch its back, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=297"
  },
  {
    "text": "because in our app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=298"
  },
  {
    "text": "we’ve got some hungry creatures.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=300"
  },
  {
    "text": "We know which ones are hungry because they have the AlgaeEater ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=302"
  },
  {
    "text": "or the PlanktonEater components on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=305"
  },
  {
    "text": "Every frame, our Eating System has its update function called. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=307"
  },
  {
    "text": "In here, it finds all the entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=311"
  },
  {
    "text": "in the scene that have either of these components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=313"
  },
  {
    "text": "plus all the entities that are food, so it can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=316"
  },
  {
    "text": "guide the hungry fish toward the food they prefer to eat. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=318"
  },
  {
    "text": "But what’s a performant way for the Eating System ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=322"
  },
  {
    "text": "to figure out which entities are hungry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=324"
  },
  {
    "text": "which ones are the food, and which ones are neither? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=327"
  },
  {
    "text": "We don’t want to have to traverse our entity graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=330"
  },
  {
    "text": "and check each one’s components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=333"
  },
  {
    "text": "Instead, we perform an entity query. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=335"
  },
  {
    "text": "Let RealityKit do the bookkeeping for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=338"
  },
  {
    "text": "The Flocking System wants to find ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=341"
  },
  {
    "text": "all entities that have a FlockingComponent on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=343"
  },
  {
    "text": "While the Eating System wants both kinds of hungry entities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=346"
  },
  {
    "text": "plus the entity that’s a type of food. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=350"
  },
  {
    "text": "So let’s take a closer look at what exactly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=353"
  },
  {
    "text": "is happening when a system uses an entity query. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=355"
  },
  {
    "text": "Systems have their update functions called every frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=358"
  },
  {
    "text": "Let’s look at the Flocking System ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=363"
  },
  {
    "text": "for our Yellow Tang fish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=364"
  },
  {
    "text": "We’ll pause at this frame to see what’s going on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=365"
  },
  {
    "text": "In the Flocking System’s update function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=369"
  },
  {
    "text": "we query for all entities in the scene that have both ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=372"
  },
  {
    "text": "the FlockingComponent and the MotionComponent on them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=374"
  },
  {
    "text": "Lots of things have the MotionComponent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=378"
  },
  {
    "text": "but we don’t want all of them, we just want our flock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=380"
  },
  {
    "text": "Our query returns our flocking fish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=384"
  },
  {
    "text": "so now we can drive our custom game physics by applying ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=386"
  },
  {
    "text": "the classic Boids simulation to each fish in the flock.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=389"
  },
  {
    "text": "We add forces on each fish’s MotionComponent, where we keep ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=392"
  },
  {
    "text": "our state between frames, forces for sticking together, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=396"
  },
  {
    "text": "for preferring to stay a certain distance apart, and for trying ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=399"
  },
  {
    "text": "to point their noses in the same direction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=402"
  },
  {
    "text": "When the Motion System runs, in the same frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=406"
  },
  {
    "text": "but after the Flocking System runs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=408"
  },
  {
    "text": "it rolls up all these forces to decide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=410"
  },
  {
    "text": "the fish’s new acceleration, velocity, and position. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=412"
  },
  {
    "text": "It doesn’t care which other system added them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=417"
  },
  {
    "text": "There are others, like the Eating System ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=419"
  },
  {
    "text": "and the Fear System that also operate on the MotionComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=421"
  },
  {
    "text": "to push the fish in various directions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=425"
  },
  {
    "text": "So let’s see the code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=427"
  },
  {
    "text": "Here’s an outline of our Flocking System. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=430"
  },
  {
    "text": "It’s a class that conforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=433"
  },
  {
    "text": "to the RealityKit.System protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=435"
  },
  {
    "text": "When you register your custom system at app launch time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=438"
  },
  {
    "text": "you’re telling the engine that you want it to instantiate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=441"
  },
  {
    "text": "one of this type per scene in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=443"
  },
  {
    "text": "The init is required, and you can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=446"
  },
  {
    "text": "also provide a deinit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=448"
  },
  {
    "text": "We can specify dependencies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=450"
  },
  {
    "text": "This system should always run ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=452"
  },
  {
    "text": "before the MotionSystem, which is why we’ve used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=454"
  },
  {
    "text": "the enumeration value.before here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=456"
  },
  {
    "text": "In our update function, we’ll be altering the state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=459"
  },
  {
    "text": "stored in the MotionComponent, and the MotionSystem will be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=462"
  },
  {
    "text": "acting upon the state we provide, so we need to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=465"
  },
  {
    "text": "sure the FlockingSystem runs before the MotionSystem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=467"
  },
  {
    "text": "sort of like a producer-consumer relationship. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=471"
  },
  {
    "text": "You can also use the .after option. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=474"
  },
  {
    "text": "If you don’t specify dependencies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=477"
  },
  {
    "text": "your systems’ update functions will be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=479"
  },
  {
    "text": "executed in the order you registered them in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=481"
  },
  {
    "text": "Our EntityQuery says that we want all entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=485"
  },
  {
    "text": "that have the Flocking and Motion Components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=488"
  },
  {
    "text": "It’s a static let because it’s not going ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=490"
  },
  {
    "text": "to change for the duration of our simulation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=492"
  },
  {
    "text": "In a multiplayer AR experience, components that conform ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=495"
  },
  {
    "text": "to codable are automatically synced over the network. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=499"
  },
  {
    "text": "However, data in systems are not automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=502"
  },
  {
    "text": "synced over the network. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=506"
  },
  {
    "text": "Data should be generally stored in components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=507"
  },
  {
    "text": "Now let’s dive in to our FlockingSystem’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=510"
  },
  {
    "text": "update function.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=512"
  },
  {
    "text": "It takes a SceneUpdateContext, which has in it the deltaTime ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=514"
  },
  {
    "text": "for that frame and a reference to the scene itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=518"
  },
  {
    "text": "First, we perform our EntityQuery ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=522"
  },
  {
    "text": "on the scene, which returns a query result ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=524"
  },
  {
    "text": "that we can iterate over for the entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=527"
  },
  {
    "text": "that have the FlockingComponent on them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=529"
  },
  {
    "text": "We get each one’s MotionComponent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=532"
  },
  {
    "text": "which we’re going to be modifying. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=534"
  },
  {
    "text": "Why are we not getting the FlockingComponent itself? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=537"
  },
  {
    "text": "Because it doesn’t have any data associated with it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=539"
  },
  {
    "text": "We use that one like a tag to signify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=542"
  },
  {
    "text": "membership in the flock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=545"
  },
  {
    "text": "Then we run our standard Boids simulation on them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=547"
  },
  {
    "text": "to guide the flock, modifying the collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=550"
  },
  {
    "text": "of forces in the MotionComponent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=552"
  },
  {
    "text": "At the end, since we’ve added forces to each fish to push it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=555"
  },
  {
    "text": "in the desired direction, and because components are Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=558"
  },
  {
    "text": "structs which are value types, we need to store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=562"
  },
  {
    "text": "our MotionComponent back onto the entity it came from.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=565"
  },
  {
    "text": "Systems don’t have to implement a custom update function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=568"
  },
  {
    "text": "It can also be useful to create a system which only provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=571"
  },
  {
    "text": "an init, like to register event handlers for scene events.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=574"
  },
  {
    "text": "So far, we’ve been looking at the relationships between ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=579"
  },
  {
    "text": "entities, components, and custom systems.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=582"
  },
  {
    "text": "Now let’s zoom out for a second and talk about some high-level ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=585"
  },
  {
    "text": "architecture changes that we’ve brought in RealityKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=588"
  },
  {
    "text": "Before, you would subscribe to the SceneEvents.update event ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=592"
  },
  {
    "text": "using a closure that would be called every frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=596"
  },
  {
    "text": "These kind of event handlers would often live, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=599"
  },
  {
    "text": "or at least be registered in, your Game Manager-like classes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=602"
  },
  {
    "text": "Instead of closures like that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=605"
  },
  {
    "text": "you can now have your update logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=608"
  },
  {
    "text": "cleanly separated and formally ordered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=609"
  },
  {
    "text": "in separate system update functions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=612"
  },
  {
    "text": "So that means your Game Managers can play less of a role. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=615"
  },
  {
    "text": "Instead of doing all your registrations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=619"
  },
  {
    "text": "for event updates there and then managing the order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=621"
  },
  {
    "text": "in which you call update on all the things in your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=624"
  },
  {
    "text": "now the Game Managers only have to add ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=627"
  },
  {
    "text": "components to the entities to signify to your systems ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=629"
  },
  {
    "text": "that those entities should be included in their queries.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=632"
  },
  {
    "text": "Previously, you would declare protocol conformances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=636"
  },
  {
    "text": "on your entity subclasses to express ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=639"
  },
  {
    "text": "that that entity type has certain components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=641"
  },
  {
    "text": "Now you don’t need to subclass entity anymore, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=645"
  },
  {
    "text": "since it, too, can play less of a role.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=647"
  },
  {
    "text": "It can be merely an identifier for an object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=651"
  },
  {
    "text": "and its attributes can be modeled as components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=654"
  },
  {
    "text": "Because when you don’t subclass entity, you don’t ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=657"
  },
  {
    "text": "tie your object to forever keeping those components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=659"
  },
  {
    "text": "You’re free to add and remove components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=663"
  },
  {
    "text": "during the experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=665"
  },
  {
    "text": "So with RealityKit 2, your custom components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=666"
  },
  {
    "text": "are a lot more useful because you have custom systems.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=669"
  },
  {
    "text": "But you can still do it either way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=673"
  },
  {
    "text": "That’s the beauty of game development. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=675"
  },
  {
    "text": "The world is your oyster. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=677"
  },
  {
    "text": "In our underwater demo, we’re using both methods.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=679"
  },
  {
    "text": "We’ve also added a new type of component: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=683"
  },
  {
    "text": "TransientComponent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=685"
  },
  {
    "text": "Say, for example, your fish were afraid ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=687"
  },
  {
    "text": "of the octopus, but only if they had ever looked at it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=689"
  },
  {
    "text": "When you clone up a new fish entity, you might not want ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=693"
  },
  {
    "text": "the clone to inherit that fish’s fear of the octopus. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=696"
  },
  {
    "text": "You could make your FearComponent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=699"
  },
  {
    "text": "conform to TransientComponent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=701"
  },
  {
    "text": "That way, it wouldn’t be present on the new entity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=703"
  },
  {
    "text": "The TransientComponent is still included in a network sync, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=707"
  },
  {
    "text": "though, if it conforms to codable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=709"
  },
  {
    "text": "like any other kind of component that does so.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=712"
  },
  {
    "text": "Another addition is our new extension on cancellable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=716"
  },
  {
    "text": "You don’t need to manually manage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=719"
  },
  {
    "text": "unsubscribing to events for an entity anymore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=721"
  },
  {
    "text": "We’ll do it for you when you use storeWhileEntityActive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=724"
  },
  {
    "text": "Here, we’re handling collision events for a fish entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=728"
  },
  {
    "text": "We don’t need this subscription to outlive the fish itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=732"
  },
  {
    "text": "so we use storeWhileEntityActive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=735"
  },
  {
    "text": "As always, when building a game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=738"
  },
  {
    "text": "there’s a whole bunch of settings that you want ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=740"
  },
  {
    "text": "to tweak on the fly without having to recompile.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=742"
  },
  {
    "text": "In our game, we built a Settings view in SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=745"
  },
  {
    "text": "and we pass its backing model down into our various ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=748"
  },
  {
    "text": "CustomSystems by way of wrapping them in CustomComponents.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=751"
  },
  {
    "text": "We create our Settings instance as a @StateObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=756"
  },
  {
    "text": "and pass it into both our ARViewContainer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=759"
  },
  {
    "text": "and our SwiftUI view as an environmentObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=762"
  },
  {
    "text": "We wrap the Settings object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=767"
  },
  {
    "text": "in a CustomComponent, a SettingsComponent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=768"
  },
  {
    "text": "Then when we create our fish entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=771"
  },
  {
    "text": "we give it a SettingsComponent. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=774"
  },
  {
    "text": "That way, when any CustomSystem comes along that wants ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=776"
  },
  {
    "text": "those settings, it can read them from there, like take ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=779"
  },
  {
    "text": "the “top speed” value and use it to cap each fish’s velocity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=782"
  },
  {
    "text": "And now I’ll hand it over to my colleague, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=786"
  },
  {
    "text": "Olivier, to tell you about materials.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=789"
  },
  {
    "text": "Thanks, Amanda. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=792"
  },
  {
    "text": "This year, we added new APIs for materials. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=794"
  },
  {
    "text": "We already had a few types, such as SimpleMaterial, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=797"
  },
  {
    "text": "with a baseColor, roughness, and metallic property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=800"
  },
  {
    "text": "We also had UnlitMaterial, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=804"
  },
  {
    "text": "with just a color and no lighting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=806"
  },
  {
    "text": "We had OcclusionMaterials, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=809"
  },
  {
    "text": "which can be used as a mask to hide virtual objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=811"
  },
  {
    "text": "And last year, we introduced VideoMaterials, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=815"
  },
  {
    "text": "which are UnlitMaterials using a video as their color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=818"
  },
  {
    "text": "Note that this year we added support for transparency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=822"
  },
  {
    "text": "If the video file contains transparency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=825"
  },
  {
    "text": "it will be used to render the object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=827"
  },
  {
    "text": "This year, we added new APIs that give you a more ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=831"
  },
  {
    "text": "advanced control over materials, starting with the type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=833"
  },
  {
    "text": "PhysicallyBasedMaterial, which is very similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=837"
  },
  {
    "text": "to the schema for materials in USD. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=840"
  },
  {
    "text": "It is a superset of SimpleMaterial and has ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=843"
  },
  {
    "text": "most of the standard PBR properties that you can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=846"
  },
  {
    "text": "find in other renderers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=848"
  },
  {
    "text": "This is the material that you will find ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=850"
  },
  {
    "text": "on entities that have been loaded from a USD. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=851"
  },
  {
    "text": "You can, for example, load the USD ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=854"
  },
  {
    "text": "of the clown fish and then modify individual properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=856"
  },
  {
    "text": "on its materials to make it gold or purple.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=860"
  },
  {
    "text": "Among the properties of the material, you can, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=864"
  },
  {
    "text": "for example, change the normal map ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=866"
  },
  {
    "text": "to add small details that are not part of the mesh. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=868"
  },
  {
    "text": "You can also assign a texture defining ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=871"
  },
  {
    "text": "the transparency of the model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=873"
  },
  {
    "text": "By default, the transparency is using ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=875"
  },
  {
    "text": "alpha blending, but if you also assign ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=877"
  },
  {
    "text": "an opacityThreshold, all the fragments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=880"
  },
  {
    "text": "below that threshold will be discarded.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=883"
  },
  {
    "text": "You can set the texture for ambient occlusion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=886"
  },
  {
    "text": "defining vague shadows in the model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=889"
  },
  {
    "text": "And an example of a more advanced property is clearcoat, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=892"
  },
  {
    "text": "which will simulate an additional layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=895"
  },
  {
    "text": "of reflective paint on the material. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=897"
  },
  {
    "text": "And there’s many other properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=899"
  },
  {
    "text": "available on the type PhysicallyBasedMaterial.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=901"
  },
  {
    "text": "We also added a new type called custom material ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=905"
  },
  {
    "text": "to make materials using your own metal code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=908"
  },
  {
    "text": "This is what we used to make the color transition effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=911"
  },
  {
    "text": "on this octopus model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=913"
  },
  {
    "text": "We will explain this shader and custom materials ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=915"
  },
  {
    "text": "in the second talk about rendering.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=917"
  },
  {
    "text": "In addition to materials, we also added ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=921"
  },
  {
    "text": "more control over animations in RealityKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=923"
  },
  {
    "text": "First, let’s go over the existing API for animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=927"
  },
  {
    "text": "which are mostly about playback of animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=930"
  },
  {
    "text": "loaded from a USD. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=932"
  },
  {
    "text": "If you load an animation from a USD, you can play it once.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=935"
  },
  {
    "text": "You can also repeat it so that it loops infinitely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=938"
  },
  {
    "text": "which is what we want for the Idle animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=941"
  },
  {
    "text": "of our diver here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=943"
  },
  {
    "text": "You can also pause, resume, and stop an animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=945"
  },
  {
    "text": "Finally, when playing a new animation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=949"
  },
  {
    "text": "you can specify a transition duration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=952"
  },
  {
    "text": "If you don’t specify one, the character will ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=955"
  },
  {
    "text": "instantly switch to the new animation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=957"
  },
  {
    "text": "If you do specify a transition duration, RealityKit will blend ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=960"
  },
  {
    "text": "between the old and new animations during that time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=964"
  },
  {
    "text": "This is useful, for example, when transitioning ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=967"
  },
  {
    "text": "between the Walk and Idle cycles of the diver.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=969"
  },
  {
    "text": "But we can still improve the animation of the feet there.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=973"
  },
  {
    "text": "We can use the new API for blend layers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=977"
  },
  {
    "text": "to make the animations more realistic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=979"
  },
  {
    "text": "We play the Walking animation and the Idle animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=982"
  },
  {
    "text": "on two separate blend layers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=984"
  },
  {
    "text": "and since we played the Walking animation on the top layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=986"
  },
  {
    "text": "that’s the only animation that we currently see. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=989"
  },
  {
    "text": "But we can change the blend factor of the Walking animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=992"
  },
  {
    "text": "to reveal the Idle animation underneath. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=996"
  },
  {
    "text": "Notice how, as the blend factor gets smaller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=998"
  },
  {
    "text": "the footsteps also get smaller.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1001"
  },
  {
    "text": "And we can also change the playback speed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1005"
  },
  {
    "text": "of the animations to make the diver walk faster or slower. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1007"
  },
  {
    "text": "Here, the diver is walking at half speed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1011"
  },
  {
    "text": "Finally, we use the speed of the character relative ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1015"
  },
  {
    "text": "to the ground to control both of these values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1018"
  },
  {
    "text": "This way, we can make the animations smoother ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1021"
  },
  {
    "text": "and reduce the sliding of the feet ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1023"
  },
  {
    "text": "compared to the ground.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1025"
  },
  {
    "text": "So far, we have been using multiple animation clips, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1028"
  },
  {
    "text": "such as the Idle and Walk cycles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1031"
  },
  {
    "text": "These are stored ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1034"
  },
  {
    "text": "as AnimationResources in RealityKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1035"
  },
  {
    "text": "And there are multiple ways to load them from USD files. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1038"
  },
  {
    "text": "The first way is to have one USD file per clip. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1041"
  },
  {
    "text": "We can load each USD as an entity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1045"
  },
  {
    "text": "and get its animations as AnimationResources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1048"
  },
  {
    "text": "The AnimationResource can then be played ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1051"
  },
  {
    "text": "on any entity, as long as the names ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1053"
  },
  {
    "text": "of the joints in its skeleton match the animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1056"
  },
  {
    "text": "Another way to load multiple animation clips is to have them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1059"
  },
  {
    "text": "in a single USD on the same timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1062"
  },
  {
    "text": "and then use AnimationViews ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1065"
  },
  {
    "text": "to slice this timeline into multiples clips.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1067"
  },
  {
    "text": "This requires knowing the timecodes between each clip.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1070"
  },
  {
    "text": "Each AnimationView can then be converted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1074"
  },
  {
    "text": "to an AnimationResource and used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1076"
  },
  {
    "text": "exactly the same way as the previous method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1078"
  },
  {
    "text": "Let’s now go over the animations of the octopus in the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1081"
  },
  {
    "text": "The octopus is hiding, but when the player gets near, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1085"
  },
  {
    "text": "it will be scared and move to a new hiding spot. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1088"
  },
  {
    "text": "Let’s see how to animate it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1091"
  },
  {
    "text": "We start with loading the skeletal animations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1093"
  },
  {
    "text": "of the octopus: jumping, swimming, and landing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1095"
  },
  {
    "text": "These animations are loaded from a USD, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1098"
  },
  {
    "text": "just like what we did for the diver. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1101"
  },
  {
    "text": "But we also want to animate the transform of the octopus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1104"
  },
  {
    "text": "to move it from one location to the next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1106"
  },
  {
    "text": "To animate the transform, we use a new API to programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1109"
  },
  {
    "text": "create an animation of type FromToByAnimation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1113"
  },
  {
    "text": "This way, we can animate the position. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1118"
  },
  {
    "text": "Let’s see what it looks like on the octopus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1121"
  },
  {
    "text": "To make it more interesting, let’s also animate the rotation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1126"
  },
  {
    "text": "The octopus now rotates while it moves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1133"
  },
  {
    "text": "but it’s swimming sideways, which is not very realistic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1135"
  },
  {
    "text": "We can improve this by making a sequence of animations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1139"
  },
  {
    "text": "First, we rotate the octopus towards the new location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1143"
  },
  {
    "text": "Then we translate it to the new location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1147"
  },
  {
    "text": "And finally, we rotate the octopus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1150"
  },
  {
    "text": "back towards the camera. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1152"
  },
  {
    "text": "And here is the full animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1155"
  },
  {
    "text": "In addition to new APIs for animations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1162"
  },
  {
    "text": "we also added a way to manage the physics of characters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1165"
  },
  {
    "text": "It’s called Character controller. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1169"
  },
  {
    "text": "This allows us to create characters that can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1171"
  },
  {
    "text": "physically interact with the colliders in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1173"
  },
  {
    "text": "Here, we see the diver jumping from the floor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1176"
  },
  {
    "text": "to the couch and walking on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1179"
  },
  {
    "text": "This is achieved by adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1181"
  },
  {
    "text": "a character controller to the diver. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1183"
  },
  {
    "text": "With that, the diver will automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1185"
  },
  {
    "text": "interact with the mesh of the environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1187"
  },
  {
    "text": "generated from the LiDAR sensor.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1189"
  },
  {
    "text": "Creating a character controller is simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1192"
  },
  {
    "text": "All you need to do is to define a capsule ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1195"
  },
  {
    "text": "that matches the shape of your character. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1196"
  },
  {
    "text": "On creation, you have to specify the height ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1199"
  },
  {
    "text": "of the capsule and its radius. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1201"
  },
  {
    "text": "After the character controller has been assigned to the entity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1205"
  },
  {
    "text": "you can call the move(to:) function every frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1208"
  },
  {
    "text": "It will make the character move to the desired location, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1211"
  },
  {
    "text": "but without going through obstacles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1214"
  },
  {
    "text": "On the other hand, if you do want to ignore obstacles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1217"
  },
  {
    "text": "you can use the teleport function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1219"
  },
  {
    "text": "Now I will hand it off to Amanda, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1222"
  },
  {
    "text": "who will take you through a few more fun features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1225"
  },
  {
    "text": "that we’ve added to this release of RealityKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1227"
  },
  {
    "text": "Great. Thanks, Olivier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1229"
  },
  {
    "text": "OK, so I’ll highlight two new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1231"
  },
  {
    "text": "that are available for creating resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1234"
  },
  {
    "text": "on the fly without having to load them from disk.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1236"
  },
  {
    "text": "First I’ll show you how you can get the mesh of a person’s face ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1240"
  },
  {
    "text": "from SceneUnderstanding, and then ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1243"
  },
  {
    "text": "I’ll take you through how to generate audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1245"
  },
  {
    "text": "There’s a sea of possibilities that these open up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1247"
  },
  {
    "text": "for procedurally generated art.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1250"
  },
  {
    "text": "First up, the face mesh. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1252"
  },
  {
    "text": "I was so inspired by the look of the purple and orange octopus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1255"
  },
  {
    "text": "we have in our demo app, I tried my hand at painting one ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1258"
  },
  {
    "text": "on my face, but virtually, using the new face mesh capability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1261"
  },
  {
    "text": "SceneUnderstanding can now give you entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1266"
  },
  {
    "text": "that represent people’s faces, and those entities have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1268"
  },
  {
    "text": "ModelComponents on them, which means you can swap out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1271"
  },
  {
    "text": "the properties of the materials on the face entity’s mesh. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1274"
  },
  {
    "text": "We had a lot of fun generating the textures to apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1278"
  },
  {
    "text": "to the face mesh on the fly with our live drawings.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1280"
  },
  {
    "text": "Let’s look at the code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1284"
  },
  {
    "text": "The SceneUnderstandingComponent now has an enum property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1286"
  },
  {
    "text": "called entityType, which is set by the SceneUnderstandingSystem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1290"
  },
  {
    "text": "and can take one of two values: face, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1293"
  },
  {
    "text": "meaning it’s the representation of a real-world person’s face, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1296"
  },
  {
    "text": "or meshChunk, meaning it’s some other part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1300"
  },
  {
    "text": "of the reconstructed world mesh. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1302"
  },
  {
    "text": "It can also be nil, meaning its type is not yet known.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1304"
  },
  {
    "text": "Here’s an EntityQuery again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1308"
  },
  {
    "text": "You can query for entities that have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1310"
  },
  {
    "text": "the SceneUnderstandingComponent and check ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1312"
  },
  {
    "text": "their entityType to find faces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1314"
  },
  {
    "text": "Then, you can get the ModelComponents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1317"
  },
  {
    "text": "from those entities and do whatever you want with them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1318"
  },
  {
    "text": "In our face painting sample, we’re using PencilKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1322"
  },
  {
    "text": "to let people draw on the canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1325"
  },
  {
    "text": "and then wrapping the resulting CGImage onto the faceEntity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1327"
  },
  {
    "text": "by creating a TextureResource from that CGImage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1331"
  },
  {
    "text": "We’re using a PhysicallyBasedMaterial ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1334"
  },
  {
    "text": "so that we can make this face paint look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1337"
  },
  {
    "text": "as realistic as possible, and we’re setting a few ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1339"
  },
  {
    "text": "of the properties on it to dial it in for our look. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1341"
  },
  {
    "text": "To make the glitter paint effect, we use a normal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1345"
  },
  {
    "text": "map texture which tells the physically based renderer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1347"
  },
  {
    "text": "how it should reflect the light differently on this surface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1350"
  },
  {
    "text": "than it would if we had simply left the material metallic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1353"
  },
  {
    "text": "We then give the pencil-drawn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1356"
  },
  {
    "text": "TextureResource to the material and set it on the entity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1358"
  },
  {
    "text": "So that’s one way to work with our new ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1363"
  },
  {
    "text": "generated resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1365"
  },
  {
    "text": "Another type of resource you can now generate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1367"
  },
  {
    "text": "is the AudioBufferResource. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1369"
  },
  {
    "text": "You can get an AVAudioBuffer however you like: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1371"
  },
  {
    "text": "by recording microphone input, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1373"
  },
  {
    "text": "procedurally generating it yourself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1375"
  },
  {
    "text": "or using an AVSpeechSynthesizer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1377"
  },
  {
    "text": "Then you can use the AVAudioBuffer to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1381"
  },
  {
    "text": "an AudioBufferResource and use that to play sounds in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1383"
  },
  {
    "text": "Here’s how we turn text into speech by writing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1388"
  },
  {
    "text": "an AVSpeechUtterance to an AVSpeechSynthesizer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1390"
  },
  {
    "text": "We receive an AVAudioBuffer in a callback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1394"
  },
  {
    "text": "Here, we’re creating an AudioBufferResource ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1397"
  },
  {
    "text": "and setting its inputMode to .spatial to make use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1401"
  },
  {
    "text": "of 3D positional audio.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1404"
  },
  {
    "text": "The other available inputModes are nonSpatial and ambient. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1406"
  },
  {
    "text": "Then we tell an entity to play that audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1410"
  },
  {
    "text": "You could, of course, process the audio buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1413"
  },
  {
    "text": "with fancy tricks to make it sound like your fish ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1415"
  },
  {
    "text": "are blowing bubbles as they talk under water ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1417"
  },
  {
    "text": "or whatever fun things you can come up with.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1420"
  },
  {
    "text": "So this was an overview of some of the new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1423"
  },
  {
    "text": "in RealityKit this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1425"
  },
  {
    "text": "We’ve really focused on giving you more control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1427"
  },
  {
    "text": "over the appearance and behaviors of your scenes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1429"
  },
  {
    "text": "We’ve modified our ECS ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1432"
  },
  {
    "text": "to provide you with custom systems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1434"
  },
  {
    "text": "which gives you way more flexibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1436"
  },
  {
    "text": "in structuring your app’s behaviors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1437"
  },
  {
    "text": "We’ve added lots of advancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1440"
  },
  {
    "text": "to our materials and animation APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1441"
  },
  {
    "text": "We’ve introduced the character controller to make it easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1444"
  },
  {
    "text": "for your entities to interact with the real-world environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1447"
  },
  {
    "text": "Finally, we’ve highlighted a few of the ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1450"
  },
  {
    "text": "in which you can generate resources on the fly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1452"
  },
  {
    "text": "But that’s definitely not an exhaustive list ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1455"
  },
  {
    "text": "of everything that’s new in RealityKit 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1457"
  },
  {
    "text": "In our second RealityKit session later this week, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1459"
  },
  {
    "text": "you can learn more about the new rendering capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1462"
  },
  {
    "text": "and see how we implemented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1465"
  },
  {
    "text": "some of the things in our underwater demo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1466"
  },
  {
    "text": "A geometry modifier is what we use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1469"
  },
  {
    "text": "to animate our seaweed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1471"
  },
  {
    "text": "The octopus uses surface shaders to transition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1472"
  },
  {
    "text": "beautifully between its colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1475"
  },
  {
    "text": "The blue depth fog effect as well as the water caustics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1477"
  },
  {
    "text": "were created using post processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1480"
  },
  {
    "text": "And in the theme of generative resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1483"
  },
  {
    "text": "you’ll learn how to use dynamic meshes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1485"
  },
  {
    "text": "For a refresher, you might also want to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1488"
  },
  {
    "text": "the session “Building Apps with RealityKit” from 2019.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1491"
  },
  {
    "text": "Thank you, and we look forward to seeing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1495"
  },
  {
    "text": "the depths of your creativity with these APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1497"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10074/?time=1501"
  }
]