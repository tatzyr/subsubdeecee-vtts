[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=2"
  },
  {
    "text": "Hello and welcome to WWDC 2021. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=9"
  },
  {
    "text": "I'm Suzy, and I work on XCTest in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=13"
  },
  {
    "text": "In this session, we're gonna learn about how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=17"
  },
  {
    "text": "to diagnose unreliable code with test repetitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=19"
  },
  {
    "text": "a tool to repeat your tests.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=22"
  },
  {
    "text": "In the process of running tests that exercise your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=27"
  },
  {
    "text": "your tests may occasionally fail when running unreliable code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=30"
  },
  {
    "text": "You may run into this type of inconsistency ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=35"
  },
  {
    "text": "when dealing with race conditions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=37"
  },
  {
    "text": "environment assumptions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=39"
  },
  {
    "text": "global state, or communication with external services. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=41"
  },
  {
    "text": "These are hard bugs to track down ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=45"
  },
  {
    "text": "because they're challenging to reproduce. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=47"
  },
  {
    "text": "One way to diagnose these types of failures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=51"
  },
  {
    "text": "is to run your tests repeatedly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=54"
  },
  {
    "text": "Test repetition, added in Xcode 13, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=56"
  },
  {
    "text": "allows you to repeat a test up to a specified number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=60"
  },
  {
    "text": "of iterations with a stopping condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=62"
  },
  {
    "text": "Xcode supports three test repetition modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=66"
  },
  {
    "text": "The first mode is Fixed iterations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=70"
  },
  {
    "text": "Fixed iterations will repeat your tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=73"
  },
  {
    "text": "a fixed number of times regardless of the status. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=75"
  },
  {
    "text": "Fixed iterations is great for understanding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=79"
  },
  {
    "text": "the reliability of your test suite and helping ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=81"
  },
  {
    "text": "keep it reliable as new tests are introduced over time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=83"
  },
  {
    "text": "The second is Until failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=88"
  },
  {
    "text": "Until failure will continue to repeat a test until it fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=90"
  },
  {
    "text": "I love using this tool to reproduce a nondeterministic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=94"
  },
  {
    "text": "test failure to catch it in the debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=97"
  },
  {
    "text": "Lastly is Retry on failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=101"
  },
  {
    "text": "Retry on failure will retry your test ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=104"
  },
  {
    "text": "until it succeeds up to a specified maximum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=106"
  },
  {
    "text": "This is useful to identify unreliable tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=110"
  },
  {
    "text": "which fail initially but eventually succeed on reattempt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=113"
  },
  {
    "text": "If a test in CI is exhibiting this behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=117"
  },
  {
    "text": "you could enable Retry on failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=120"
  },
  {
    "text": "in your test plan temporarily ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=122"
  },
  {
    "text": "and gather additional data to fix the issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=124"
  },
  {
    "text": "It's important to remember retrying failures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=127"
  },
  {
    "text": "can hide problems in the actual product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=130"
  },
  {
    "text": "Some functionality fails initially ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=133"
  },
  {
    "text": "before eventually succeeding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=135"
  },
  {
    "text": "so it's best to use this mode temporarily ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=137"
  },
  {
    "text": "to diagnose the failures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=139"
  },
  {
    "text": "Let's get a better understanding of how this works in practice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=142"
  },
  {
    "text": "I created an app called IceCreamTruckCountdown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=146"
  },
  {
    "text": "that tells me how long until the ice cream truck ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=148"
  },
  {
    "text": "drives by my home. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=150"
  },
  {
    "text": "I love when the truck has cookies and cream, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=152"
  },
  {
    "text": "and so I wrote a test called testFlavors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=154"
  },
  {
    "text": "to ensure that the truck has all the flavors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=156"
  },
  {
    "text": "testFlavors has a truck that I get from the truckDepot.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=160"
  },
  {
    "text": "I call prepareFlavors and, lastly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=166"
  },
  {
    "text": "assert that the truck has all 33 flavors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=169"
  },
  {
    "text": "Recently, I've noticed testFlavors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=173"
  },
  {
    "text": "sometimes fails on the main branch in Xcode Cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=176"
  },
  {
    "text": "To gather more information, I temporarily configured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=180"
  },
  {
    "text": "my test plan, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=182"
  },
  {
    "text": "enabling Test Repetition Mode to Retry on failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=185"
  },
  {
    "text": "Let's take a look at the report navigator ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=189"
  },
  {
    "text": "and check our cloud reports.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=191"
  },
  {
    "text": "My tests are inconsistently failing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=197"
  },
  {
    "text": "so let's check this last one for more information.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=199"
  },
  {
    "text": "If I expand the first device open, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=208"
  },
  {
    "text": "there is an iteration label here letting us know ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=210"
  },
  {
    "text": "it was the first iteration of this test.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=213"
  },
  {
    "text": "Huh. And when I expand all the other rows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=218"
  },
  {
    "text": "the assertion failures are all the same, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=221"
  },
  {
    "text": "and this last test passed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=224"
  },
  {
    "text": "I expected all the tests to pass consistently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=226"
  },
  {
    "text": "not just on one device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=229"
  },
  {
    "text": "I'm gonna try to reproduce this failure locally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=232"
  },
  {
    "text": "Let's go to our file that has testFlavors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=235"
  },
  {
    "text": "I'll Control-click on the test diamond for our test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=239"
  },
  {
    "text": "In the menu, I'll select Run \"testFlavors()\" Repeatedly… ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=243"
  },
  {
    "text": "to bring up the test repetition dialog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=247"
  },
  {
    "text": "Here you can select the stopping condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=251"
  },
  {
    "text": "of your repetitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=253"
  },
  {
    "text": "set Maximum Repetitions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=254"
  },
  {
    "text": "and other options like Pause on Failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=256"
  },
  {
    "text": "I want to try to reproduce the issue that happened ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=259"
  },
  {
    "text": "in our cloud report, so I'm setting my stopping condition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=262"
  },
  {
    "text": "to go through maximum repetitions and keep it at 100.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=265"
  },
  {
    "text": "Now I'll run my test.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=270"
  },
  {
    "text": "Oh, yay! The test failed locally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=276"
  },
  {
    "text": "When I click on the failure annotation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=279"
  },
  {
    "text": "it displays the same error that happened in Xcode Cloud, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=281"
  },
  {
    "text": "and it failed 4 out of 100 times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=285"
  },
  {
    "text": "Great! I can now debug this issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=287"
  },
  {
    "text": "I'll Control-click again on the test diamond ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=291"
  },
  {
    "text": "for testFlavors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=293"
  },
  {
    "text": "selecting Run \"testFlavors()\" Repeatedly… ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=294"
  },
  {
    "text": "but this time, I'm gonna use stop on failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=298"
  },
  {
    "text": "so I can debug the issue when it happens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=300"
  },
  {
    "text": "Thankfully, Xcode automatically selects Pause on Failure for me, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=303"
  },
  {
    "text": "so I can catch the error in the debugger.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=307"
  },
  {
    "text": "All right, we have caught the issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=312"
  },
  {
    "text": "And I know we're looking at inconsistencies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=316"
  },
  {
    "text": "with the flavors on the truck, so I'll take a look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=318"
  },
  {
    "text": "at our truck object in the debugger.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=321"
  },
  {
    "text": "It seems strange that flavors is 0 when it should be 33 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=330"
  },
  {
    "text": "because we already called prepareFlavors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=334"
  },
  {
    "text": "I wonder if we've made it inside this completionHandler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=337"
  },
  {
    "text": "I'll add a breakpoint and click Continue.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=341"
  },
  {
    "text": "Hmm, that seems wrong.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=348"
  },
  {
    "text": "Oh, the fulfill is called in the outer completionHandler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=354"
  },
  {
    "text": "and not the inner prepareFlavors completionHandler.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=358"
  },
  {
    "text": "This is a fairly simple bug caused by asynchronous events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=365"
  },
  {
    "text": "with multiple completionHandlers and the expectation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=369"
  },
  {
    "text": "not being fulfilled in the correct place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=372"
  },
  {
    "text": "XCTest's support for Swift 5.5's async/await ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=375"
  },
  {
    "text": "lets me simplify this test so it won't happen again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=378"
  },
  {
    "text": "To transform this test to use async/await, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=382"
  },
  {
    "text": "I'll add “async throws” to the method header.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=385"
  },
  {
    "text": "I'll use the “await” version of getting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=400"
  },
  {
    "text": "the iceCreamTruck from the truckDepot.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=402"
  },
  {
    "text": "I'll use the \"await\" version of prepareFlavors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=418"
  },
  {
    "text": "I'll keep the same assert, but the truck is no longer optional.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=427"
  },
  {
    "text": "Let's run this test one more time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=434"
  },
  {
    "text": "to make sure that it is fixed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=436"
  },
  {
    "text": "I'll Control-click and select Run \"testFlavors()\" Repeatedly… ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=438"
  },
  {
    "text": "and once again select Maximum Repetitions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=441"
  },
  {
    "text": "as the stop condition.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=444"
  },
  {
    "text": "Yay! The test passed 100 times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=456"
  },
  {
    "text": "I'm now confident that this is fixed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=459"
  },
  {
    "text": "and I'm ready to remove Retry on failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=461"
  },
  {
    "text": "from the test plan and commit my change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=463"
  },
  {
    "text": "So we just got a better understanding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=466"
  },
  {
    "text": "of how to use this at desk ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=468"
  },
  {
    "text": "and one way to run your test repeatedly in CI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=470"
  },
  {
    "text": "by configuring it in your test plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=472"
  },
  {
    "text": "Let's talk about another way to run your tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=475"
  },
  {
    "text": "with repetition, like in the demo, using the CLI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=477"
  },
  {
    "text": "When running xcodebuild directly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=481"
  },
  {
    "text": "you can add xcodebuild flags ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=483"
  },
  {
    "text": "which override any test plan setting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=485"
  },
  {
    "text": "Pass -test-iterations with a number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=488"
  },
  {
    "text": "to run a test a fixed number of times ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=491"
  },
  {
    "text": "or combine it with -retry-tests-on-failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=494"
  },
  {
    "text": "or -run-tests-until-failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=496"
  },
  {
    "text": "to use it with one of the other stopping conditions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=499"
  },
  {
    "text": "To run your test the same as in the demo with xcodebuild, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=502"
  },
  {
    "text": "you start with the base xcodebuild command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=506"
  },
  {
    "text": "used to run your tests and add the flags ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=508"
  },
  {
    "text": "-test-iterations set to 100 and -run-tests-until-failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=511"
  },
  {
    "text": "In summary, use test repetitions as a tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=515"
  },
  {
    "text": "to help diagnose unreliable code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=518"
  },
  {
    "text": "For more information about handling inconsistent tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=522"
  },
  {
    "text": "watch \"Embrace expected failures in XCTest.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=524"
  },
  {
    "text": "To learn more about Swift async, check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=528"
  },
  {
    "text": "\"Meet async/await in Swift.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=530"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=533"
  },
  {
    "text": "[percussive music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10296/?time=534"
  }
]