[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=1"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=7"
  },
  {
    "text": "Wil Addario-Turner: Hi, welcome to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=9"
  },
  {
    "text": "\"Embrace Expected Failures in XCTest.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=10"
  },
  {
    "text": "My name is Wil, and in this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=13"
  },
  {
    "text": "I'm going to discuss ways of improving the data you get ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=15"
  },
  {
    "text": "when you run your project's tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=18"
  },
  {
    "text": "To begin with, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=21"
  },
  {
    "text": "let's consider why we test our code in the first place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=22"
  },
  {
    "text": "Of course, at a high level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=25"
  },
  {
    "text": "it's how we ensure the quality of the product. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=27"
  },
  {
    "text": "But in more concrete terms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=29"
  },
  {
    "text": "I would say it's to discover bugs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=31"
  },
  {
    "text": "before we ship and not afterwards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=33"
  },
  {
    "text": "Now, testing is an investment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=37"
  },
  {
    "text": "It takes resources to create, run, and maintain tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=39"
  },
  {
    "text": "As with any investment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=44"
  },
  {
    "text": "we want to maximize our returns while minimizing our cost. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=45"
  },
  {
    "text": "This session focuses on tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=50"
  },
  {
    "text": "for reducing the maintenance cost. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=52"
  },
  {
    "text": "By maintenance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=54"
  },
  {
    "text": "I'm primarily referring to how you handle failures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=56"
  },
  {
    "text": "when they occur in your test suites. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=58"
  },
  {
    "text": "When a test that's been passing begins to fail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=62"
  },
  {
    "text": "that's a valuable piece of new information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=65"
  },
  {
    "text": "This indicates either a flaw in the product, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=67"
  },
  {
    "text": "a problem in the test itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=70"
  },
  {
    "text": "or some issue in one of the dependencies -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=72"
  },
  {
    "text": "that is, all of the frameworks and subsystems ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=75"
  },
  {
    "text": "on top of which the product sits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=78"
  },
  {
    "text": "Regardless of the type of problem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=81"
  },
  {
    "text": "once that failure has been registered, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=83"
  },
  {
    "text": "subsequent reports of the same failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=85"
  },
  {
    "text": "are significantly less valuable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=88"
  },
  {
    "text": "because they represent information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=90"
  },
  {
    "text": "that you already have. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=91"
  },
  {
    "text": "Ideally, any new failure is triaged and fixed quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=94"
  },
  {
    "text": "However, your team may not be able to resolve a problem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=98"
  },
  {
    "text": "right away, which means that the failure quickly goes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=101"
  },
  {
    "text": "from being a valuable piece of new information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=104"
  },
  {
    "text": "to a noisy distraction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=106"
  },
  {
    "text": "Given a known failure in your tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=110"
  },
  {
    "text": "that cannot be immediately resolved, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=112"
  },
  {
    "text": "what tools are available for managing the noise? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=114"
  },
  {
    "text": "Two approaches that might come to mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=118"
  },
  {
    "text": "are disabling and skipping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=120"
  },
  {
    "text": "Let's consider the tradeoffs for these ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=123"
  },
  {
    "text": "and then we'll talk about the best tool -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=125"
  },
  {
    "text": "and the topic of this session -- XCTest's ExpectedFailures API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=126"
  },
  {
    "text": "Xcode lets you disable tests in the test plan or scheme. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=133"
  },
  {
    "text": "You can use this for known test failures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=137"
  },
  {
    "text": "and one advantage is that your test code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=139"
  },
  {
    "text": "will continue to be compiled. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=141"
  },
  {
    "text": "However, since the code won't execute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=143"
  },
  {
    "text": "you won't see it in the test report. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=145"
  },
  {
    "text": "This reduced visibility makes it harder to track ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=147"
  },
  {
    "text": "as an issue that needs to be resolved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=150"
  },
  {
    "text": "Where this feature -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=154"
  },
  {
    "text": "the ability to choose which tests are enabled or disabled -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=155"
  },
  {
    "text": "really shines is for curating collections of tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=159"
  },
  {
    "text": "for specific purposes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=162"
  },
  {
    "text": "But it's rarely the best way to handle a known failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=164"
  },
  {
    "text": "XCTSkip is another way you might manage a failing test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=169"
  },
  {
    "text": "With this approach, not only does the code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=174"
  },
  {
    "text": "continue to get built with your tests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=176"
  },
  {
    "text": "it also executes up until the point where XCTSkip is called. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=178"
  },
  {
    "text": "This means that it's included in the test report, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=183"
  },
  {
    "text": "giving you much better visibility of the issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=185"
  },
  {
    "text": "However, it doesn't execute all of your test, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=190"
  },
  {
    "text": "which means you lose out on potentially useful information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=192"
  },
  {
    "text": "in the form of new issues and changes to the existing issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=196"
  },
  {
    "text": "XCTSkip is a great tool for managing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=201"
  },
  {
    "text": "configuration-based limitations on your test, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=204"
  },
  {
    "text": "such as requiring a specific OS version or device type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=207"
  },
  {
    "text": "In the example here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=211"
  },
  {
    "text": "the test will be skipped if it's not running on an iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=212"
  },
  {
    "text": "This brings us to XCTExpectFailure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=217"
  },
  {
    "text": "a set of functions in XCTest ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=220"
  },
  {
    "text": "specifically designed for managing known failures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=222"
  },
  {
    "text": "In Swift, it has a number of overloads ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=226"
  },
  {
    "text": "for different use cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=228"
  },
  {
    "text": "and Objective-C provides the same capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=230"
  },
  {
    "text": "with several distinct functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=232"
  },
  {
    "text": "With this API, your test executes normally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=235"
  },
  {
    "text": "but the results are changed as follows: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=238"
  },
  {
    "text": "Failure in the test will be reported as an expected failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=241"
  },
  {
    "text": "Failure in the test suite containing that test ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=245"
  },
  {
    "text": "will be reported as a pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=248"
  },
  {
    "text": "unless of course some other test in it fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=251"
  },
  {
    "text": "This eliminates the noise generated by the failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=255"
  },
  {
    "text": "making it easier to see whether there are any other issues ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=258"
  },
  {
    "text": "in your tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=261"
  },
  {
    "text": "Of course, suppressing the noise ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=263"
  },
  {
    "text": "doesn't solve the underlying issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=264"
  },
  {
    "text": "So to help you keep track of it, the API takes a failure reason. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=267"
  },
  {
    "text": "This string documents the problem in your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=271"
  },
  {
    "text": "and you can even embed a URL for your issue-tracking system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=274"
  },
  {
    "text": "Xcode's test report UI shows expected failures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=280"
  },
  {
    "text": "just as it does normal failures or skipped tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=283"
  },
  {
    "text": "When you hover, if the failure reason contains a URL, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=287"
  },
  {
    "text": "an issue-tracking button appears ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=290"
  },
  {
    "text": "that lets you jump out to the link. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=292"
  },
  {
    "text": "So let's see how this works! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=296"
  },
  {
    "text": "I have here a simple project with some unit tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=299"
  },
  {
    "text": "for my VendorAccount class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=302"
  },
  {
    "text": "I'm going to run the tests, and when they finish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=304"
  },
  {
    "text": "we'll see that one is failing while the other is passing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=308"
  },
  {
    "text": "You can see three test result icons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=312"
  },
  {
    "text": "one for each test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=314"
  },
  {
    "text": "A red X for the failing test ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=316"
  },
  {
    "text": "and a green check for the passing test, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=318"
  },
  {
    "text": "and one for the test suite; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=320"
  },
  {
    "text": "a red X because one of the tests in the suite has failed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=322"
  },
  {
    "text": "so we consider the suite itself to have failed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=326"
  },
  {
    "text": "Now I'm going to add a call to XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=329"
  },
  {
    "text": "at the beginning of the failing test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=335"
  },
  {
    "text": "You can see the failure reason begins with a URL ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=337"
  },
  {
    "text": "that references the bug I've filed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=340"
  },
  {
    "text": "to keep track of this failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=342"
  },
  {
    "text": "Now I'll rerun the tests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=345"
  },
  {
    "text": "and we'll see how this affects the outcome. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=347"
  },
  {
    "text": "OK, so the red X icon for the failing test ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=350"
  },
  {
    "text": "has changed to a gray X, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=353"
  },
  {
    "text": "which is the indicator for an expected failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=355"
  },
  {
    "text": "What's even more interesting is that the test suite icon ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=358"
  },
  {
    "text": "has changed from a red X to a green dash. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=361"
  },
  {
    "text": "This icon indicates that the test suite has passed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=365"
  },
  {
    "text": "with a mixed state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=368"
  },
  {
    "text": "meaning that one or more of its tests did not pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=369"
  },
  {
    "text": "but was either a skip or an expected failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=372"
  },
  {
    "text": "So that's how easy it is to use XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=377"
  },
  {
    "text": "to handle a failing test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=381"
  },
  {
    "text": "Now let's take a closer look at the API.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=382"
  },
  {
    "text": "The first consideration when using XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=389"
  },
  {
    "text": "is which API variant to call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=392"
  },
  {
    "text": "There are two approaches: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=395"
  },
  {
    "text": "a stateful approach where you call XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=396"
  },
  {
    "text": "and any subsequent failure in the test is treated as expected; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=400"
  },
  {
    "text": "alternatively, you can use the scoped approach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=404"
  },
  {
    "text": "in which you wrap the failing code in a closure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=407"
  },
  {
    "text": "passed to XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=410"
  },
  {
    "text": "Let's look at some examples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=412"
  },
  {
    "text": "Here's a very simple test that calls some function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=415"
  },
  {
    "text": "in my project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=418"
  },
  {
    "text": "The test begins to fail ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=419"
  },
  {
    "text": "because the function is no longer returning true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=421"
  },
  {
    "text": "Here's what it looks like ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=424"
  },
  {
    "text": "to use the stateful expected failure approach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=425"
  },
  {
    "text": "just as we did in the demo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=428"
  },
  {
    "text": "Alternatively, we could use the scoped approach ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=431"
  },
  {
    "text": "by wrapping the failing code in a closure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=434"
  },
  {
    "text": "trailing the call to XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=436"
  },
  {
    "text": "This means any failure in the code outside the closure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=439"
  },
  {
    "text": "will be reported normally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=442"
  },
  {
    "text": "The API also supports nesting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=445"
  },
  {
    "text": "In other words, you can call the API more than once in a test, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=448"
  },
  {
    "text": "including inside the closure from another call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=452"
  },
  {
    "text": "This is an important consideration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=456"
  },
  {
    "text": "when using the API in test library code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=457"
  },
  {
    "text": "For example, if a common utility function begins to fail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=461"
  },
  {
    "text": "many tests could be impacted, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=464"
  },
  {
    "text": "some of which might already be using XCTExpectFailure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=466"
  },
  {
    "text": "for different issues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=469"
  },
  {
    "text": "When a failure occurs in the context of nested calls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=473"
  },
  {
    "text": "to XCTExpectFailure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=476"
  },
  {
    "text": "the issue is matched against the nearest call site first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=478"
  },
  {
    "text": "and if rejected by the matcher, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=481"
  },
  {
    "text": "will be passed on to the next call and so on ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=483"
  },
  {
    "text": "with stack semantics for the calls to XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=486"
  },
  {
    "text": "For this reason, with shared code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=491"
  },
  {
    "text": "it's best to use the closure-based API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=493"
  },
  {
    "text": "to limit the effects on test state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=496"
  },
  {
    "text": "The next thing to consider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=499"
  },
  {
    "text": "is how precisely to match the issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=501"
  },
  {
    "text": "By default, any failure in the affected scope is caught, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=504"
  },
  {
    "text": "but you can be more selective ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=507"
  },
  {
    "text": "by specifying an issue-matching filter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=509"
  },
  {
    "text": "In this example, we construct an object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=512"
  },
  {
    "text": "of type XCTExpectedFailure.Options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=514"
  },
  {
    "text": "and define its issueMatcher. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=518"
  },
  {
    "text": "The matcher is passed the XCTIssue object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=521"
  },
  {
    "text": "with the failure details, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=524"
  },
  {
    "text": "so you have full access to that information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=525"
  },
  {
    "text": "in determining whether or not to match. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=528"
  },
  {
    "text": "If the matcher rejects the failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=530"
  },
  {
    "text": "then it won't be handled as an expected failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=532"
  },
  {
    "text": "This can be useful in detecting when new problems show up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=535"
  },
  {
    "text": "in the code being tested. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=538"
  },
  {
    "text": "The options object also has a property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=541"
  },
  {
    "text": "that can be used to disable the expected failure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=543"
  },
  {
    "text": "in certain configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=546"
  },
  {
    "text": "For example, my test may be passing on macOS ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=547"
  },
  {
    "text": "but failing on iOS, so I only want to expect failures on iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=550"
  },
  {
    "text": "To achieve that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=555"
  },
  {
    "text": "I disable the expected failure via the options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=557"
  },
  {
    "text": "but only for platforms where I don't need it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=559"
  },
  {
    "text": "So what happens when your expected failures stop failing? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=563"
  },
  {
    "text": "Usually this means the underlying issue ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=567"
  },
  {
    "text": "has been resolved, which is great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=569"
  },
  {
    "text": "But how does XCTExpectFailure behave? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=571"
  },
  {
    "text": "If you're still calling the API and no failure is occurring, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=574"
  },
  {
    "text": "it will generate a new and distinct failure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=578"
  },
  {
    "text": "We call this an \"unmatched expected failure\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=581"
  },
  {
    "text": "and it's part of the strict behavior that is the default ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=584"
  },
  {
    "text": "for XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=587"
  },
  {
    "text": "This behavior helps you maintain your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=590"
  },
  {
    "text": "by prompting you to remove unnecessary calls to the API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=592"
  },
  {
    "text": "But what about tests that only fail some of the time? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=597"
  },
  {
    "text": "There are cases in which a test might fail sometimes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=602"
  },
  {
    "text": "but not other times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=605"
  },
  {
    "text": "These fall into two categories, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=606"
  },
  {
    "text": "the first of which is deterministic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=608"
  },
  {
    "text": "and includes environmental or other knowable conditions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=610"
  },
  {
    "text": "such as the earlier example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=613"
  },
  {
    "text": "of a test that only fails on certain platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=615"
  },
  {
    "text": "On the other hand, some failures are inherently nondeterministic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=619"
  },
  {
    "text": "These might be caused by timing issues, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=623"
  },
  {
    "text": "unreliable ordering dependencies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=625"
  },
  {
    "text": "or concurrency bugs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=627"
  },
  {
    "text": "For nondeterministic failures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=629"
  },
  {
    "text": "the strict behavior isn't helpful; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=631"
  },
  {
    "text": "it just generates noise. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=633"
  },
  {
    "text": "Once again, the options object provides a way to control this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=636"
  },
  {
    "text": "The isStrict flag, which defaults to true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=640"
  },
  {
    "text": "can be turned off. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=643"
  },
  {
    "text": "Then, if XCTExpectFailure does not catch a failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=645"
  },
  {
    "text": "it will still allow the test to pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=648"
  },
  {
    "text": "In Swift, you can also specify the strict behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=651"
  },
  {
    "text": "as a direct parameter to XCTExpectFailure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=655"
  },
  {
    "text": "Disabling strict behavior is great way to handle flaky ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=658"
  },
  {
    "text": "or nondeterministic tests in your project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=661"
  },
  {
    "text": "As an aside, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=664"
  },
  {
    "text": "when you need to investigate a nondeterministic failure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=665"
  },
  {
    "text": "Xcode makes it easy to run a test multiple times, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=668"
  },
  {
    "text": "stopping when it fails or some other condition is met. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=671"
  },
  {
    "text": "This can be really helpful in tracking down failures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=675"
  },
  {
    "text": "in flaky tests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=677"
  },
  {
    "text": "For more about this, watch the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=679"
  },
  {
    "text": "\"Diagnose Unreliable Code with Test Repetitions.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=681"
  },
  {
    "text": "So that's XCTExpectFailure -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=685"
  },
  {
    "text": "APIs in XCTest for improving the signal-to-noise ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=687"
  },
  {
    "text": "in your test suite results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=691"
  },
  {
    "text": "This helps you identify new issues more efficiently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=693"
  },
  {
    "text": "leading to higher-quality code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=696"
  },
  {
    "text": "Thanks for watching! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=698"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10207/?time=700"
  }
]