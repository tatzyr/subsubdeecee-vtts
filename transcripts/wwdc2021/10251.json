[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=0"
  },
  {
    "text": "Hi, I'm Tom, and I'd like to welcome you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=9"
  },
  {
    "text": "to \"SF Symbols in UIKit and AppKit.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=11"
  },
  {
    "text": "Today I'm going to take you on a tour of how to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=13"
  },
  {
    "text": "the new features of SF Symbols in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=16"
  },
  {
    "text": "First, we're gonna go over the different color modes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=19"
  },
  {
    "text": "and how to use them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=21"
  },
  {
    "text": "Then, we'll talk about how to combine configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=24"
  },
  {
    "text": "to get the effects that you want.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=26"
  },
  {
    "text": "And finally, we're going to explore using ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=28"
  },
  {
    "text": "these colored symbols in attributed strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=30"
  },
  {
    "text": "You will see examples that apply both to AppKit and UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=33"
  },
  {
    "text": "The new APIs are identical for both frameworks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=37"
  },
  {
    "text": "so what applies to one, also applies to the other, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=40"
  },
  {
    "text": "with the exception of some framework-specific nuances.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=42"
  },
  {
    "text": "The new features center around adding colors to SF Symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=47"
  },
  {
    "text": "While AppKit added multicolor symbols in macOS 11, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=50"
  },
  {
    "text": "UIKit is adding them in iOS 15. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=54"
  },
  {
    "text": "For this year's releases, additional ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=57"
  },
  {
    "text": "color rendering modes for SF Symbols are being added. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=58"
  },
  {
    "text": "And to be clear, these rendering modes work on all platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=61"
  },
  {
    "text": "In order to support the new rendering modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=65"
  },
  {
    "text": "symbols now have different layers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=67"
  },
  {
    "text": "each having a different color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=69"
  },
  {
    "text": "These layers are defined in a hierarchy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=71"
  },
  {
    "text": "meaning that one layer is more prominent than another. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=73"
  },
  {
    "text": "This means we've got three layers: primary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=76"
  },
  {
    "text": "secondary, and tertiary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=79"
  },
  {
    "text": "On iOS, symbols require template mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=82"
  },
  {
    "text": "for the new rendering modes to take effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=84"
  },
  {
    "text": "On macOS, applying the new configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=87"
  },
  {
    "text": "will automatically set the correct template mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=89"
  },
  {
    "text": "And if you're new to SF Symbols, check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=92"
  },
  {
    "text": "\"Introducing SF Symbols\" from WWDC19. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=94"
  },
  {
    "text": "The first rendering mode we're going to look at ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=98"
  },
  {
    "text": "are monochrome symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=101"
  },
  {
    "text": "Here's a Voicemail app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=103"
  },
  {
    "text": "In this UI, a couple symbols are being used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=105"
  },
  {
    "text": "There's one monochrome symbol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=108"
  },
  {
    "text": "and a few other symbols using a different color mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=110"
  },
  {
    "text": "But let's focus on the monochrome symbol first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=112"
  },
  {
    "text": "and we'll come back to the others later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=115"
  },
  {
    "text": "As the name implies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=119"
  },
  {
    "text": "a monochrome symbol only has one color: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=120"
  },
  {
    "text": "usually the tint or accent color of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=122"
  },
  {
    "text": "And in order to accomplish this result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=125"
  },
  {
    "text": "we create a new symbol image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=127"
  },
  {
    "text": "assign it to the image view, and set a tint ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=129"
  },
  {
    "text": "or accent color to configure the color of the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=131"
  },
  {
    "text": "And nothing has changed here: we don't need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=133"
  },
  {
    "text": "any extra configuration to render a monochrome symbol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=136"
  },
  {
    "text": "as it is the default behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=139"
  },
  {
    "text": "So, monochrome was the only rendering mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=142"
  },
  {
    "text": "before iOS 15 and macOS 11. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=144"
  },
  {
    "text": "To specify a color, all we have to do is set the tint ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=147"
  },
  {
    "text": "or accent color on the image view, and that's it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=150"
  },
  {
    "text": "Now that we have the previously-existing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=153"
  },
  {
    "text": "monochrome mode out of the way, we can talk about a new mode: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=155"
  },
  {
    "text": "hierarchical color symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=159"
  },
  {
    "text": "A good example of hierarchical symbols on a Mac ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=160"
  },
  {
    "text": "are the icons used in Control Center. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=164"
  },
  {
    "text": "There are a few places where symbols are being used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=167"
  },
  {
    "text": "in Control Center, but let's zoom in on the Display section.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=169"
  },
  {
    "text": "There are a few symbols being used here: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=174"
  },
  {
    "text": "the row of toggle buttons in the center, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=176"
  },
  {
    "text": "and the icons in the list of devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=178"
  },
  {
    "text": "The device symbols are tinted differently ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=181"
  },
  {
    "text": "than the toggle buttons above them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=183"
  },
  {
    "text": "and these are hierarchically-colored symbols.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=184"
  },
  {
    "text": "The hierarchical color mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=188"
  },
  {
    "text": "uses the layer hierarchy of a symbol to color each layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=189"
  },
  {
    "text": "and the provided color is used as the primary layer color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=192"
  },
  {
    "text": "The secondary and tertiary layers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=196"
  },
  {
    "text": "get variations of the primary color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=198"
  },
  {
    "text": "with progressively reduced opacity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=200"
  },
  {
    "text": "You specify the color mode through a new type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=203"
  },
  {
    "text": "of symbol configuration, which works exactly like ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=205"
  },
  {
    "text": "the existing types of symbol configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=208"
  },
  {
    "text": "And by setting the symbol configuration of an imageView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=212"
  },
  {
    "text": "to this type of configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=214"
  },
  {
    "text": "the symbol will be displayed as a hierarchical color symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=216"
  },
  {
    "text": "The color scheme of a hierarchical color symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=220"
  },
  {
    "text": "is based on one color, with the other colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=222"
  },
  {
    "text": "derived from that one color by reducing opacity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=224"
  },
  {
    "text": "The layer hierarchy is important here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=228"
  },
  {
    "text": "If one layer is missing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=230"
  },
  {
    "text": "the associated derived color will not be used.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=231"
  },
  {
    "text": "There's also a third color rendering mode: palette. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=235"
  },
  {
    "text": "As we will discover, it's much like hierarchical ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=238"
  },
  {
    "text": "color rendering mode, but also different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=240"
  },
  {
    "text": "Let's go back to our Voicemail example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=242"
  },
  {
    "text": "The three buttons on the right each have multiple colors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=245"
  },
  {
    "text": "and each have different colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=248"
  },
  {
    "text": "We're going to build these buttons one step at a time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=250"
  },
  {
    "text": "First, we're gonna initialize our buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=254"
  },
  {
    "text": "with the desired images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=255"
  },
  {
    "text": "We're using a new button configuration for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=257"
  },
  {
    "text": "But these plain images isn't what we want at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=260"
  },
  {
    "text": "The images should have a circle shape and be filled in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=263"
  },
  {
    "text": "We used to be able to do this by appending ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=268"
  },
  {
    "text": "the desired modifiers to the symbol name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=269"
  },
  {
    "text": "but now there's a better way: image variants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=271"
  },
  {
    "text": "As the name implies, when using image variants, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=274"
  },
  {
    "text": "you can request a different variant of an image ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=277"
  },
  {
    "text": "without manually changing the name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=280"
  },
  {
    "text": "First, let's turn our images into circles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=282"
  },
  {
    "text": "Then, we'll add a nice fill to those circles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=287"
  },
  {
    "text": "Since we are specifying the variants ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=290"
  },
  {
    "text": "on the button container view, those variants are ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=292"
  },
  {
    "text": "applied to all the images in all the buttons. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=294"
  },
  {
    "text": "If an image doesn't have that variant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=297"
  },
  {
    "text": "the originally-specified image will be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=299"
  },
  {
    "text": "The variant specification will propagate down ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=302"
  },
  {
    "text": "the view hierarchy, and the image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=305"
  },
  {
    "text": "in that hierarchy will pick them up to do their magic.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=306"
  },
  {
    "text": "Now that we have the shape out of the way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=311"
  },
  {
    "text": "how do we specify the colors for each of these symbols? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=312"
  },
  {
    "text": "Well, we can create a new type of symbol configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=316"
  },
  {
    "text": "one that specifies a palette of colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=319"
  },
  {
    "text": "These colors are applied to the layer hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=321"
  },
  {
    "text": "similar to the hierarchical color configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=323"
  },
  {
    "text": "But we're using colors here that are specified ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=326"
  },
  {
    "text": "explicitly versus using derived colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=328"
  },
  {
    "text": "And we're also using a new type of color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=331"
  },
  {
    "text": "in the list of palette colors: tint color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=333"
  },
  {
    "text": "This means that the view will automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=336"
  },
  {
    "text": "apply its tint color to the appropriate layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=337"
  },
  {
    "text": "And for the next button, we do exactly as before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=341"
  },
  {
    "text": "Load the base image, build the right color configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=344"
  },
  {
    "text": "and apply them to the button configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=347"
  },
  {
    "text": "And in this case, it looks exactly the same as before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=350"
  },
  {
    "text": "but there's a catch here, and I'll explain that later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=353"
  },
  {
    "text": "And the same scenario also works for the last button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=356"
  },
  {
    "text": "but just with different colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=359"
  },
  {
    "text": "And like before, you might wonder why ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=361"
  },
  {
    "text": "we explicitly have to specify white here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=363"
  },
  {
    "text": "Couldn't we just use a monochrome symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=365"
  },
  {
    "text": "and tint them correctly? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=367"
  },
  {
    "text": "The answer is no, we can't, and this is the catch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=369"
  },
  {
    "text": "I mentioned before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=372"
  },
  {
    "text": "Our designer specified that the inner parts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=374"
  },
  {
    "text": "of these symbols should always be white. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=376"
  },
  {
    "text": "And up until now, we would've gotten ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=378"
  },
  {
    "text": "the correct result by accident, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=380"
  },
  {
    "text": "even when using monochrome symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=382"
  },
  {
    "text": "Why? We were in light mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=384"
  },
  {
    "text": "But when we switch to dark mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=387"
  },
  {
    "text": "monochrome symbols do not give us the desired results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=389"
  },
  {
    "text": "This is because the monochrome versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=392"
  },
  {
    "text": "use knockouts for the inner parts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=394"
  },
  {
    "text": "and so the background bleeds through the gaps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=396"
  },
  {
    "text": "Now, by using a palette rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=399"
  },
  {
    "text": "we make sure these buttons appear correctly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=401"
  },
  {
    "text": "for different user interface styles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=403"
  },
  {
    "text": "I mentioned a new color before: tintColor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=407"
  },
  {
    "text": "This is a new dynamic color in UIKit that will ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=410"
  },
  {
    "text": "resolve to the tint color of the view it is used in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=412"
  },
  {
    "text": "This is especially handy when specifying symbol layer colors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=416"
  },
  {
    "text": "but you can also use this color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=419"
  },
  {
    "text": "everywhere where you can use any other color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=421"
  },
  {
    "text": "However, keep in mind that the rules ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=423"
  },
  {
    "text": "around dynamic colors still apply.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=425"
  },
  {
    "text": "See \"Implementing dark mode on iOS\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=428"
  },
  {
    "text": "of WWDC19 to learn more about how dynamic colors work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=431"
  },
  {
    "text": "Some symbols only have two layers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=436"
  },
  {
    "text": "For instance, there's a bunch of symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=438"
  },
  {
    "text": "that are missing a secondary layer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=440"
  },
  {
    "text": "How do we handle palette mode for these kinds of symbols? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=442"
  },
  {
    "text": "A good example of these are the device symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=446"
  },
  {
    "text": "which only have a primary layer and a tertiary layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=449"
  },
  {
    "text": "How do we color this iPad symbol with two layer colors? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=452"
  },
  {
    "text": "Since symbols can have up to three layers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=456"
  },
  {
    "text": "you can just specify three colors, one for each layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=458"
  },
  {
    "text": "In this case, the secondary color is not used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=463"
  },
  {
    "text": "because the layer isn't there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=466"
  },
  {
    "text": "However, there's another way to do this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=468"
  },
  {
    "text": "for symbols with only two layers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=470"
  },
  {
    "text": "For those symbols, we can specify just two colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=472"
  },
  {
    "text": "in your configuration, and the colors will be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=474"
  },
  {
    "text": "applied to the available layers in sequence.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=477"
  },
  {
    "text": "The former method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=481"
  },
  {
    "text": "allows for consistency on how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=482"
  },
  {
    "text": "to specify palette colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=483"
  },
  {
    "text": "for related symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=485"
  },
  {
    "text": "with a mixed number of layers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=486"
  },
  {
    "text": "because the colors directly map to the correct layer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=487"
  },
  {
    "text": "The latter method is a convenience for when ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=492"
  },
  {
    "text": "you know for sure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=494"
  },
  {
    "text": "that the symbol only has two layers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=496"
  },
  {
    "text": "The palette configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=499"
  },
  {
    "text": "specifies an explicit set of colors that are ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=500"
  },
  {
    "text": "applied to the layer hierarchy of the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=503"
  },
  {
    "text": "Unlike the hierarchical rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=506"
  },
  {
    "text": "the palette rendering mode doesn't create derived colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=508"
  },
  {
    "text": "And similar to hierarchical rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=511"
  },
  {
    "text": "the hierarchy level of each symbol layer is important. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=513"
  },
  {
    "text": "There's also a convenient solution ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=517"
  },
  {
    "text": "for symbols with less than three layers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=518"
  },
  {
    "text": "This brings us to the last color rendering mode: multicolor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=521"
  },
  {
    "text": "Like I mentioned before, this color mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=525"
  },
  {
    "text": "was added to AppKit and SwiftUI last year ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=527"
  },
  {
    "text": "but is introduced to UIKit this year.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=529"
  },
  {
    "text": "Some of these categories have images with multiple colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=533"
  },
  {
    "text": "These are multicolor symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=536"
  },
  {
    "text": "Let's see how we would implement this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=538"
  },
  {
    "text": "First of all, we need to load the images for each cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=541"
  },
  {
    "text": "For now, these are regular symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=544"
  },
  {
    "text": "and we get the monochrome mode by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=546"
  },
  {
    "text": "Then we need to indicate that we want multicolor symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=549"
  },
  {
    "text": "We do this by creating a configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=553"
  },
  {
    "text": "requesting the multicolor variant of a symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=554"
  },
  {
    "text": "and assigning that configuration to the image view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=557"
  },
  {
    "text": "But one icon didn't change: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=561"
  },
  {
    "text": "its symbol does not support multicolor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=563"
  },
  {
    "text": "So, how do you figure out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=566"
  },
  {
    "text": "which symbols support multicolor or not? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=567"
  },
  {
    "text": "An easy way to find out is to use the SF Symbols app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=569"
  },
  {
    "text": "Search for the symbol, then use the inspector to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=573"
  },
  {
    "text": "which color rendering modes the symbol supports. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=575"
  },
  {
    "text": "For instance, our flame symbol only supports monochrome.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=579"
  },
  {
    "text": "But the lung symbol supports all four color rendering modes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=583"
  },
  {
    "text": "Additionally, you can also play with the color mapping ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=587"
  },
  {
    "text": "for each layer here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=589"
  },
  {
    "text": "in order to get a better feel of how the symbol would appear ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=590"
  },
  {
    "text": "without having to write one line of code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=592"
  },
  {
    "text": "Let's go back to our example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=595"
  },
  {
    "text": "So, since not all of these symbols support multicolor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=598"
  },
  {
    "text": "we need to manually set the tintColor to the right value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=601"
  },
  {
    "text": "in order for the symbol to display correctly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=603"
  },
  {
    "text": "Some multicolor symbols have a tint layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=607"
  },
  {
    "text": "and they will be affected by the tint ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=609"
  },
  {
    "text": "or accent color of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=611"
  },
  {
    "text": "Symbols without such layer won't be affected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=613"
  },
  {
    "text": "In our example, none of them do, so everything remains as is.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=616"
  },
  {
    "text": "As you might have guessed from the name of the configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=621"
  },
  {
    "text": "the multicolor configuration indicates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=623"
  },
  {
    "text": "a preference for a multicolor rendering of a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=625"
  },
  {
    "text": "As I mentioned before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=629"
  },
  {
    "text": "not all symbols have a multicolor variant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=630"
  },
  {
    "text": "You can combine a multicolor configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=633"
  },
  {
    "text": "with one of the other color configurations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=636"
  },
  {
    "text": "but more on that later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=638"
  },
  {
    "text": "And the result is a configuration that supports ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=640"
  },
  {
    "text": "two color modes: multicolor when it is available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=642"
  },
  {
    "text": "and the other color mode otherwise. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=645"
  },
  {
    "text": "Note that combining hierarchical mode and palette mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=648"
  },
  {
    "text": "will result in the last-specified mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=650"
  },
  {
    "text": "as they are mutually exclusive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=652"
  },
  {
    "text": "If, in turn, that color mode is not supported, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=655"
  },
  {
    "text": "the system uses monochrome mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=657"
  },
  {
    "text": "So, multicolor symbols have a fixed set of colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=661"
  },
  {
    "text": "which aren't modifiable in code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=663"
  },
  {
    "text": "Additionally, some symbols have a layer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=666"
  },
  {
    "text": "that will be rendered using the tint or accent color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=668"
  },
  {
    "text": "And you don't have anything to do in order for this to work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=671"
  },
  {
    "text": "The symbol picks up the right tint or accent color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=674"
  },
  {
    "text": "from its imageview when it is displayed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=676"
  },
  {
    "text": "Now, we've covered all four modes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=680"
  },
  {
    "text": "and how to use them in your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=682"
  },
  {
    "text": "But can we do the same in Interface Builder? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=683"
  },
  {
    "text": "Fortunately, the answer is yes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=686"
  },
  {
    "text": "Xcode has added similar functionality to configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=688"
  },
  {
    "text": "color rendering modes right from the IDE.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=691"
  },
  {
    "text": "Here we have Xcode Open displaying ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=695"
  },
  {
    "text": "a storyboard for the Planets app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=697"
  },
  {
    "text": "The ImageView UI has been expanded ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=699"
  },
  {
    "text": "to enable specifying a color rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=701"
  },
  {
    "text": "And the resulting color configuration is also combinable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=704"
  },
  {
    "text": "with the previously-existing configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=707"
  },
  {
    "text": "If you want to learn more about all these new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=710"
  },
  {
    "text": "in Interface Builder, check out this year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=712"
  },
  {
    "text": "\"Build interfaces with style.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=715"
  },
  {
    "text": "Now that we have talked about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=717"
  },
  {
    "text": "all these different color modes, how can we combine them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=719"
  },
  {
    "text": "with other configurations to get more complex effects? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=722"
  },
  {
    "text": "Luckily, it's not that hard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=724"
  },
  {
    "text": "Let's check out another example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=726"
  },
  {
    "text": "this time from the Shortcuts app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=729"
  },
  {
    "text": "The icons of each of the actions are quite large, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=731"
  },
  {
    "text": "but they also appear to have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=733"
  },
  {
    "text": "a hierarchical color rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=735"
  },
  {
    "text": "So, we need two configurations: one for specifying a point size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=737"
  },
  {
    "text": "and one for specifying a color configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=741"
  },
  {
    "text": "But we can only apply one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=745"
  },
  {
    "text": "How do we combine them? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=747"
  },
  {
    "text": "Turns out there's an easy way to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=748"
  },
  {
    "text": "There's a method to combine two configurations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=751"
  },
  {
    "text": "resulting in a configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=753"
  },
  {
    "text": "that has the elements of both configurations.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=755"
  },
  {
    "text": "In the example here, we create two configurations: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=758"
  },
  {
    "text": "one for specifying a point size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=761"
  },
  {
    "text": "and another one for specifying a hierarchical color.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=763"
  },
  {
    "text": "We then combine them using the applying methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=767"
  },
  {
    "text": "to create a final configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=769"
  },
  {
    "text": "And that configuration is applied on the image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=771"
  },
  {
    "text": "displaying the image, giving us the desired result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=773"
  },
  {
    "text": "Note that this mechanism ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=776"
  },
  {
    "text": "is not limited to color configurations only. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=777"
  },
  {
    "text": "You can also use this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=780"
  },
  {
    "text": "with the other types of configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=781"
  },
  {
    "text": "For instance, combining text, style, and weight.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=783"
  },
  {
    "text": "Now we know how to combine different configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=786"
  },
  {
    "text": "We've got one topic left: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=790"
  },
  {
    "text": "using color symbols in attributed strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=791"
  },
  {
    "text": "Take this last example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=794"
  },
  {
    "text": "This is an imaginary app that lists various hotels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=796"
  },
  {
    "text": "and information about their available rooms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=798"
  },
  {
    "text": "There's a few places where symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=801"
  },
  {
    "text": "are combined with text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=803"
  },
  {
    "text": "But let's focus on the room amenities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=804"
  },
  {
    "text": "and how we would implement this text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=805"
  },
  {
    "text": "It's fairly simple, but a bit elaborate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=808"
  },
  {
    "text": "We have to build an attributed string with an image attachment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=810"
  },
  {
    "text": "First, we load the image, using the correct color configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=814"
  },
  {
    "text": "In this case, we're using a hierarchical ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=818"
  },
  {
    "text": "color configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=820"
  },
  {
    "text": "We use this image to create a text attachment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=822"
  },
  {
    "text": "and then we use that attachment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=824"
  },
  {
    "text": "to complete our attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=826"
  },
  {
    "text": "And this is then repeated for all the available amenities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=828"
  },
  {
    "text": "On the label displaying the text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=832"
  },
  {
    "text": "we also specify the correct font ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=833"
  },
  {
    "text": "and the same text color as we used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=835"
  },
  {
    "text": "for the hierarchical color configurations.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=837"
  },
  {
    "text": "Monochrome symbols pick up the text color automatically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=840"
  },
  {
    "text": "but for symbols with a color configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=843"
  },
  {
    "text": "we have to specify the colors explicitly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=845"
  },
  {
    "text": "And color symbols do pick up the font sizes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=848"
  },
  {
    "text": "specified in the string, just like monochrome symbols.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=851"
  },
  {
    "text": "After these steps, we have the result that we want: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=855"
  },
  {
    "text": "a label with the right content, color, and size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=857"
  },
  {
    "text": "thanks to the integration of symbols in attributed strings.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=859"
  },
  {
    "text": "We introduced three new color modes for SF Symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=864"
  },
  {
    "text": "in addition to the existing one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=866"
  },
  {
    "text": "and we explained how to use them in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=868"
  },
  {
    "text": "Symbols are a great way to add high-quality images to your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=871"
  },
  {
    "text": "Colored symbols expand on that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=874"
  },
  {
    "text": "allowing for even more possibilities.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=876"
  },
  {
    "text": "If you enjoyed this session, be sure to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=881"
  },
  {
    "text": "a few related sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=883"
  },
  {
    "text": "Watch \"What's new in SF Symbols\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=885"
  },
  {
    "text": "for a primer on the new capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=887"
  },
  {
    "text": "Or take a look at \"SF Symbols in SwiftUI\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=890"
  },
  {
    "text": "to see how you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=892"
  },
  {
    "text": "the new symbols in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=894"
  },
  {
    "text": "Thanks for watching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=897"
  },
  {
    "text": "and now go build amazing apps! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=898"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10251/?time=899"
  }
]