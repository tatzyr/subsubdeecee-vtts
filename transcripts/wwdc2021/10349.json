[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=1"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=4"
  },
  {
    "text": "Hey, I'm Jacob. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=9"
  },
  {
    "text": "Welcome to \"SF Symbols in SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=11"
  },
  {
    "text": "We're going to look at a few topics during this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=14"
  },
  {
    "text": "First, some of the fundamentals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=16"
  },
  {
    "text": "of using SF Symbols from SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=18"
  },
  {
    "text": "Then, how to use variants of your symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=21"
  },
  {
    "text": "And finally, working with the new Rendering Modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=24"
  },
  {
    "text": "One note on the availability of these APIs: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=27"
  },
  {
    "text": "everything we'll see in this session is available on all Apple platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=30"
  },
  {
    "text": "and look for the new badge to know ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=34"
  },
  {
    "text": "when something's new in this year's releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=36"
  },
  {
    "text": "Let's get into the fundamentals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=38"
  },
  {
    "text": "If you've already used Symbols from SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=40"
  },
  {
    "text": "this part should be a breeze.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=42"
  },
  {
    "text": "To start, let's just show a Symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=46"
  },
  {
    "text": "The most simple way is to use one of the system-provided symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=50"
  },
  {
    "text": "like \"heart,\" in an Image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=53"
  },
  {
    "text": "A Label view is the other main way to show symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=56"
  },
  {
    "text": "A Label is a combination of a title with an icon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=59"
  },
  {
    "text": "which is most often a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=63"
  },
  {
    "text": "The great thing about a label is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=66"
  },
  {
    "text": "that it's a general description of this pairing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=68"
  },
  {
    "text": "and will adapt its behavior to the context where it's shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=70"
  },
  {
    "text": "For example, in many components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=74"
  },
  {
    "text": "the label will be shown with the symbol, and then the title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=76"
  },
  {
    "text": "Sometimes, they'll be shown in a different layout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=79"
  },
  {
    "text": "or sometimes, a component will show ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=82"
  },
  {
    "text": "only the symbol or only the title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=85"
  },
  {
    "text": "SwiftUI automatically makes these changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=87"
  },
  {
    "text": "for you in built-in views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=89"
  },
  {
    "text": "and you can use label styles in your own views to do it, too.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=91"
  },
  {
    "text": "You can show custom symbols in both Image and Label ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=96"
  },
  {
    "text": "by just changing the initializer you use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=99"
  },
  {
    "text": "This is what each of these configurations looks like, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=102"
  },
  {
    "text": "but their visual representation isn't the only one that matters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=105"
  },
  {
    "text": "This is how each of these views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=109"
  },
  {
    "text": "will appear to VoiceOver by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=111"
  },
  {
    "text": "You can see that using Label ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=114"
  },
  {
    "text": "automatically gives us great Accessibility support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=116"
  },
  {
    "text": "since the title gives a textual description ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=118"
  },
  {
    "text": "of the content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=121"
  },
  {
    "text": "Let's look closer at the image-only cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=122"
  },
  {
    "text": "When possible, SwiftUI will provide a label ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=126"
  },
  {
    "text": "based on a system symbol's content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=129"
  },
  {
    "text": "This might be all you need, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=132"
  },
  {
    "text": "like if you were using a heart for a \"love\" button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=133"
  },
  {
    "text": "However, some symbols don't have a standard meaning, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=137"
  },
  {
    "text": "and in those cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=140"
  },
  {
    "text": "the default Accessibility description won't be as useful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=141"
  },
  {
    "text": "You also might be able to add more specific information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=145"
  },
  {
    "text": "about how your app is using the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=148"
  },
  {
    "text": "You can always use an accessibilityLabel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=151"
  },
  {
    "text": "to provide that information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=154"
  },
  {
    "text": "Our custom symbol is another case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=157"
  },
  {
    "text": "where we're not getting an ideal accessibility description. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=159"
  },
  {
    "text": "A great way to improve that is to provide a localization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=163"
  },
  {
    "text": "for the image's name in a Localizable.strings file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=167"
  },
  {
    "text": "SwiftUI will automatically use this localizable string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=170"
  },
  {
    "text": "for the accessibility label of this image anywhere it's used.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=174"
  },
  {
    "text": "One last way to use symbols is as part of Text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=178"
  },
  {
    "text": "You can embed a symbol inside a run of text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=182"
  },
  {
    "text": "by using string interpolation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=184"
  },
  {
    "text": "This is a good technique to use when you want a symbol to reflow ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=186"
  },
  {
    "text": "along with your text, like this chevron.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=190"
  },
  {
    "text": "Okay, let's go back to our Label with the heart ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=195"
  },
  {
    "text": "and look at some of the modifiers we can apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=197"
  },
  {
    "text": "to symbols to customize them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=200"
  },
  {
    "text": "Let's start by changing our symbols' color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=203"
  },
  {
    "text": "with the foregroundStyle modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=205"
  },
  {
    "text": "Text and symbols default to black or white ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=208"
  },
  {
    "text": "in light mode or dark mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=211"
  },
  {
    "text": "You can set the foregroundStyle to a specific color, like red, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=214"
  },
  {
    "text": "or to more semantic values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=218"
  },
  {
    "text": "like the current tint or secondary style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=220"
  },
  {
    "text": "We'll come back to foregroundStyle again later ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=223"
  },
  {
    "text": "to see some more advanced effects we can do with it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=226"
  },
  {
    "text": "You can use a font modifier to change both the text size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=230"
  },
  {
    "text": "as well as the size of your symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=234"
  },
  {
    "text": "If you use a text style, like body or caption, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=237"
  },
  {
    "text": "then the text and symbol will scale with dynamic type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=240"
  },
  {
    "text": "and if you choose a fixed size, then they stay constant.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=243"
  },
  {
    "text": "The other axis where you can change the size of symbols is their scale, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=249"
  },
  {
    "text": "using the imageScale modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=253"
  },
  {
    "text": "This doesn't change the font size that's used, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=256"
  },
  {
    "text": "but how large a symbol appears relative to text.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=258"
  },
  {
    "text": "Next, let's take a look at variants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=263"
  },
  {
    "text": "You may have noticed that iOS tab bars ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=266"
  },
  {
    "text": "should use filled symbol variants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=268"
  },
  {
    "text": "In the past, this was something that you had to do yourself ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=271"
  },
  {
    "text": "by carefully choosing the right symbol from the Symbols app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=274"
  },
  {
    "text": "and knowing when a symbol didn't have a fill variant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=277"
  },
  {
    "text": "like \"sparkles\" here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=279"
  },
  {
    "text": "New this year, tab bars and other views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=281"
  },
  {
    "text": "now automatically opt into specific variants, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=284"
  },
  {
    "text": "like fill, to be applied to any symbols they contain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=287"
  },
  {
    "text": "This means you can just use the base version of the symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=290"
  },
  {
    "text": "and get the right variant without any extra work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=293"
  },
  {
    "text": "And by not over-specifying the exact configuration you want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=296"
  },
  {
    "text": "you also get code that's more reusable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=300"
  },
  {
    "text": "For example, if we run this same code on macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=302"
  },
  {
    "text": "we get the correct variant for that platform: outlines.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=305"
  },
  {
    "text": "We can use this variant support in our own components, as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=310"
  },
  {
    "text": "Here, I have a simple list of labels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=314"
  },
  {
    "text": "shown with the default outline variant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=316"
  },
  {
    "text": "To use filled variants here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=319"
  },
  {
    "text": "I can use the new symbolVariant modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=321"
  },
  {
    "text": "This modifier sets the specified variant in the environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=324"
  },
  {
    "text": "so it's great to use on a whole view hierarchy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=327"
  },
  {
    "text": "like we're doing here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=330"
  },
  {
    "text": "There's a large set of variants available: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=332"
  },
  {
    "text": "fill, slash, and a set of shape encapsulations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=334"
  },
  {
    "text": "And these can be combined with each other, as well, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=338"
  },
  {
    "text": "the same way they're combined in the names ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=341"
  },
  {
    "text": "of the symbols themselves, like .circle.fill.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=343"
  },
  {
    "text": "This same set of variants works on your custom symbols, as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=347"
  },
  {
    "text": "All you have to do is follow the same naming patterns ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=351"
  },
  {
    "text": "used by system symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=354"
  },
  {
    "text": "Next, let's look at rendering modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=356"
  },
  {
    "text": "Symbols support four different rendering modes to allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=359"
  },
  {
    "text": "to customize the way your symbols are colored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=363"
  },
  {
    "text": "Here are some examples of each rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=366"
  },
  {
    "text": "We'll go over them one by one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=368"
  },
  {
    "text": "And if you want to learn more ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=370"
  },
  {
    "text": "about the design of the different rendering modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=372"
  },
  {
    "text": "I highly recommend \"What's new in SF Symbols.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=374"
  },
  {
    "text": "Okay, let's go back to our list of cards, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=379"
  },
  {
    "text": "this time on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=381"
  },
  {
    "text": "Right now, our symbols are showing the default rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=383"
  },
  {
    "text": "which is monochrome. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=387"
  },
  {
    "text": "This works well for showing consistent colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=389"
  },
  {
    "text": "for a set of symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=391"
  },
  {
    "text": "However, in this case, I'd like to show these symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=394"
  },
  {
    "text": "using the colors associated with each card. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=397"
  },
  {
    "text": "The multicolor rendering mode is a great way to show colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=400"
  },
  {
    "text": "for what each symbol represents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=404"
  },
  {
    "text": "And we can change to it by adding a symbolRenderingMode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=406"
  },
  {
    "text": "modifier on multicolor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=409"
  },
  {
    "text": "If a symbol doesn't have a multicolor representation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=411"
  },
  {
    "text": "it will fall back to the monochrome rendering mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=414"
  },
  {
    "text": "You can use the SF Symbols app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=418"
  },
  {
    "text": "to look up which symbols have multicolor definitions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=419"
  },
  {
    "text": "and to add multicolor support to your custom symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=422"
  },
  {
    "text": "Check out the \"SF Symbols App Overview\" to learn more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=426"
  },
  {
    "text": "In another part of this app, we have some buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=430"
  },
  {
    "text": "to shuffle cards to different parts of the deck. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=433"
  },
  {
    "text": "I'd like to emphasize the key parts of these symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=436"
  },
  {
    "text": "with different levels of opacity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=438"
  },
  {
    "text": "Do you remember which rendering mode does that? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=440"
  },
  {
    "text": "That's right! Hierarchical! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=443"
  },
  {
    "text": "We can use the same symbolRenderingMode modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=446"
  },
  {
    "text": "with hierarchical. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=449"
  },
  {
    "text": "This uses the current foreground style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=450"
  },
  {
    "text": "to apply a single color to the symbol, like monochrome, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=452"
  },
  {
    "text": "but also adds multiple levels of opacity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=455"
  },
  {
    "text": "to emphasize the key elements of the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=458"
  },
  {
    "text": "There's one last rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=461"
  },
  {
    "text": "and there's a button in my app that it could help with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=463"
  },
  {
    "text": "I'm not very good at card games, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=466"
  },
  {
    "text": "so I need this button to undo my mistakes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=467"
  },
  {
    "text": "Here, I'm showing a symbol in a button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=470"
  },
  {
    "text": "with a .circle.fill variant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=472"
  },
  {
    "text": "to get this circular background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=474"
  },
  {
    "text": "But the coloring isn't exactly what I want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=477"
  },
  {
    "text": "I'd like something that better matches the color of our cards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=479"
  },
  {
    "text": "Remember that we can use the foregroundStyle modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=483"
  },
  {
    "text": "to set a color on a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=486"
  },
  {
    "text": "But we can go further. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=487"
  },
  {
    "text": "New this year, we can set multiple colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=490"
  },
  {
    "text": "to be used to draw our symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=492"
  },
  {
    "text": "This uses the palette rendering mode, which allows maximum control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=494"
  },
  {
    "text": "over the coloring of the layers of a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=498"
  },
  {
    "text": "You can specify up to three styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=500"
  },
  {
    "text": "to control each level of the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=503"
  },
  {
    "text": "This symbol has primary and tertiary content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=505"
  },
  {
    "text": "so the first and third colors will be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=509"
  },
  {
    "text": "If we used a symbol that just has primary and secondary content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=512"
  },
  {
    "text": "like the outline version of this symbol, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=516"
  },
  {
    "text": "then only those colors would be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=518"
  },
  {
    "text": "Because most individual symbols only use two layers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=521"
  },
  {
    "text": "like both of these, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=524"
  },
  {
    "text": "you can specify two styles instead of three, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=525"
  },
  {
    "text": "and the last style is used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=528"
  },
  {
    "text": "for everything from secondary onwards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=530"
  },
  {
    "text": "In many cases, this is all you need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=533"
  },
  {
    "text": "We've been using colors so far, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=536"
  },
  {
    "text": "but this is a foreground style modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=538"
  },
  {
    "text": "and it works with any ShapeStyle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=540"
  },
  {
    "text": "We can use a secondary style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=543"
  },
  {
    "text": "to get a vibrant effect in front of blurs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=545"
  },
  {
    "text": "or even use a material to blur the background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=548"
  },
  {
    "text": "behind a symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=550"
  },
  {
    "text": "If you want to learn more about foreground styles and materials, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=552"
  },
  {
    "text": "check out \"Add rich graphics to your SwiftUI app.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=555"
  },
  {
    "text": "Let's look back at the full set of rendering modes again.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=559"
  },
  {
    "text": "The best way to see and choose which rendering modes to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=564"
  },
  {
    "text": "is the SF Symbols app and its inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=567"
  },
  {
    "text": "And these APIs to express ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=571"
  },
  {
    "text": "these configurations in SwiftUI work the same way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=573"
  },
  {
    "text": "so it's easy to go back and forth ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=576"
  },
  {
    "text": "between the Symbols app and your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=578"
  },
  {
    "text": "You also get the best behavior with minimal configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=580"
  },
  {
    "text": "If you have only one foreground style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=584"
  },
  {
    "text": "and don't specify a rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=587"
  },
  {
    "text": "you'll automatically get monochrome. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=588"
  },
  {
    "text": "And if you specify more than one foreground style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=592"
  },
  {
    "text": "but don't specify a rendering mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=594"
  },
  {
    "text": "you'll automatically get palette.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=596"
  },
  {
    "text": "The Symbols app has a large set of colors available to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=600"
  },
  {
    "text": "with these different rendering modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=603"
  },
  {
    "text": "And that full set of colors is available in SwiftUI, as well, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=606"
  },
  {
    "text": "including several colors and styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=610"
  },
  {
    "text": "that are new this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=612"
  },
  {
    "text": "These colors are optimized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=614"
  },
  {
    "text": "for all the different configurations they appear in: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=615"
  },
  {
    "text": "light and dark mode, special rendering over blurs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=618"
  },
  {
    "text": "even the specific platform they're shown on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=621"
  },
  {
    "text": "We just saw how to create symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=624"
  },
  {
    "text": "a set of modifiers to change their appearance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=626"
  },
  {
    "text": "how to change which variant of a symbol is shown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=629"
  },
  {
    "text": "choosing different rendering modes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=631"
  },
  {
    "text": "and how to use foreground styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=633"
  },
  {
    "text": "to customize your symbol's coloring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=635"
  },
  {
    "text": "SF Symbols make it easy to add beautiful graphics to your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=637"
  },
  {
    "text": "and to customize them as little or as much as you want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=641"
  },
  {
    "text": "See where you can adopt them to make your apps look even better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=644"
  },
  {
    "text": "Thanks for watching and have a great WWDC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=648"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10349/?time=651"
  }
]