[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=7"
  },
  {
    "text": "Chris Donegan: Hi, I'm Chris, an engineer on UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=9"
  },
  {
    "text": "I'll be joined later by my colleagues Anant and Mohammed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=12"
  },
  {
    "text": "iPad is the primary device for many people ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=15"
  },
  {
    "text": "due to its power and capabilities.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=18"
  },
  {
    "text": "In this video, you'll learn about some exciting new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=20"
  },
  {
    "text": "you should use to take your iPad app to the next level.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=24"
  },
  {
    "text": "First, I'll show you the latest advancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=28"
  },
  {
    "text": "in multitasking and scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=30"
  },
  {
    "text": "Then, Anant will walk you through ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=33"
  },
  {
    "text": "the powerful changes to keyboard shortcuts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=35"
  },
  {
    "text": "Finally, Mohammed will show you the latest enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=38"
  },
  {
    "text": "to the system pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=41"
  },
  {
    "text": "Let's get right into multitasking.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=44"
  },
  {
    "text": "iPadOS 13 introduced the ability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=47"
  },
  {
    "text": "to run multiple instances of your app's UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=49"
  },
  {
    "text": "In iPadOS 15, we're improving this experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=52"
  },
  {
    "text": "with new APIs for scene presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=55"
  },
  {
    "text": "as well as enhanced state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=58"
  },
  {
    "text": "These enhancements build upon ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=61"
  },
  {
    "text": "the existing UIScene infrastructure.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=62"
  },
  {
    "text": "If you haven't adopted UIScene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=65"
  },
  {
    "text": "check out \"Introducing Multiple Windows on iPad.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=67"
  },
  {
    "text": "Let's briefly go over the key concepts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=71"
  },
  {
    "text": "A scene represents a single instance of your app's UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=75"
  },
  {
    "text": "The structure of a scene's components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=80"
  },
  {
    "text": "is defined by a scene configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=82"
  },
  {
    "text": "At a minimum, it defines the scene's role and delegate class.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=85"
  },
  {
    "text": "You can also provide a name, storyboard, and scene subclass.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=90"
  },
  {
    "text": "Scene configurations can either be declared in your Info.plist, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=94"
  },
  {
    "text": "or created at runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=98"
  },
  {
    "text": "using the UISceneConfiguration object.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=99"
  },
  {
    "text": "The content of a scene is represented by ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=103"
  },
  {
    "text": "an NSUserActivity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=106"
  },
  {
    "text": "These activities are used for requesting scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=108"
  },
  {
    "text": "as well as for state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=110"
  },
  {
    "text": "A scene is managed by a scene delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=112"
  },
  {
    "text": "The delegate is responsible for setting up the UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=116"
  },
  {
    "text": "responding to lifecycle events, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=119"
  },
  {
    "text": "as well as saving and restoring state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=120"
  },
  {
    "text": "Finally, a scene is tracked by a scene session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=125"
  },
  {
    "text": "The scene itself can be disconnected and reconnected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=129"
  },
  {
    "text": "by the system when it's in the background.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=132"
  },
  {
    "text": "The scene session tracks the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=135"
  },
  {
    "text": "regardless of its connection state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=137"
  },
  {
    "text": "and persists between launches.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=139"
  },
  {
    "text": "The session can be thought of as the representation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=142"
  },
  {
    "text": "in the system app switcher.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=145"
  },
  {
    "text": "Each item in the switcher corresponds to a scene session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=147"
  },
  {
    "text": "When requesting a scene from the system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=151"
  },
  {
    "text": "you can provide an options object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=153"
  },
  {
    "text": "for customizing the request.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=155"
  },
  {
    "text": "iPadOS 15 has a new options subclass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=158"
  },
  {
    "text": "specifically for window scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=160"
  },
  {
    "text": "Using this subclass allows you to specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=162"
  },
  {
    "text": "a presentation style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=165"
  },
  {
    "text": "Window scene presentation styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=167"
  },
  {
    "text": "influence how the scene is presented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=169"
  },
  {
    "text": "relative to other scenes in the workspace.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=171"
  },
  {
    "text": "There are three possible values: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=174"
  },
  {
    "text": "prominent, standard, and automatic.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=176"
  },
  {
    "text": "This is a scene using the prominent presentation style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=180"
  },
  {
    "text": "It's presented modally in the current workspace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=184"
  },
  {
    "text": "with the scenes behind it dimmed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=186"
  },
  {
    "text": "Because it's modal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=189"
  },
  {
    "text": "it should provide Cancel, Close, or Done buttons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=190"
  },
  {
    "text": "This new style can be thought of ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=193"
  },
  {
    "text": "as a staging ground for new scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=195"
  },
  {
    "text": "It can be repositioned like any other scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=198"
  },
  {
    "text": "using the new multitasking controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=200"
  },
  {
    "text": "and it can also be moved into the app shelf for later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=203"
  },
  {
    "text": "When considering if this style is appropriate for a scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=207"
  },
  {
    "text": "there are some guidelines to keep in mind.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=210"
  },
  {
    "text": "First, prominent scenes should be useful on their own.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=213"
  },
  {
    "text": "They should not be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=216"
  },
  {
    "text": "for providing options or tools for another scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=217"
  },
  {
    "text": "They should provide a Done or Close button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=221"
  },
  {
    "text": "and they should be dedicated to specific content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=224"
  },
  {
    "text": "within your app like a document or file.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=227"
  },
  {
    "text": "This dedicated content scope must be defined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=230"
  },
  {
    "text": "in the scene's activation conditions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=233"
  },
  {
    "text": "For more information on activation conditions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=236"
  },
  {
    "text": "check out \"Targeting Content with Multiple Windows.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=238"
  },
  {
    "text": "This example shows how Safari is opening a new scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=243"
  },
  {
    "text": "using the standard style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=246"
  },
  {
    "text": "They are presented side by side, allowing interaction with each, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=248"
  },
  {
    "text": "and both provide the full functionality of the main scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=252"
  },
  {
    "text": "You can also specify automatic as the style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=256"
  },
  {
    "text": "This value tells the system that it should choose ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=260"
  },
  {
    "text": "the best style based on how it was requested.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=262"
  },
  {
    "text": "iPadOS 15 not only provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=266"
  },
  {
    "text": "a way to customize presentation using styles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=268"
  },
  {
    "text": "it also makes it easier for people to open their content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=271"
  },
  {
    "text": "in new scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=274"
  },
  {
    "text": "On the Mac, it's common to find an Open in New Window item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=277"
  },
  {
    "text": "in context menus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=280"
  },
  {
    "text": "You should bring this familiar experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=282"
  },
  {
    "text": "to your iPad app by using UIWindowScene.ActivationAction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=284"
  },
  {
    "text": "It's a new UIAction subclass for requesting scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=289"
  },
  {
    "text": "that can be used in menus, buttons, and bar button items.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=292"
  },
  {
    "text": "To add this functionality to your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=296"
  },
  {
    "text": "start by initializing a UIWindowScene.ActivationAction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=298"
  },
  {
    "text": "It's initialized with a closure that is executed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=303"
  },
  {
    "text": "when the item is selected.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=305"
  },
  {
    "text": "The closure should return an activation configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=308"
  },
  {
    "text": "with a user activity for the new scene's content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=311"
  },
  {
    "text": "Finally, put the action in a menu and you're good to go.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=315"
  },
  {
    "text": "On iPad and Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=320"
  },
  {
    "text": "the menu shows an Open in New Window item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=322"
  },
  {
    "text": "that, when selected, will present a new scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=324"
  },
  {
    "text": "On iPhone, the item is automatically hidden ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=327"
  },
  {
    "text": "because multiple scenes are not supported.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=330"
  },
  {
    "text": "If you would rather show another item in its place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=334"
  },
  {
    "text": "you can provide an alternate action.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=336"
  },
  {
    "text": "Let's update the previous example to offer one.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=339"
  },
  {
    "text": "To do this, start by creating the alternate action.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=342"
  },
  {
    "text": "The new action's title and image are shown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=346"
  },
  {
    "text": "when multiple windows are not available.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=348"
  },
  {
    "text": "Then, update the initializer of the scene activation action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=352"
  },
  {
    "text": "by passing the new action as the alternate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=355"
  },
  {
    "text": "With an alternate action provided, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=361"
  },
  {
    "text": "the menus on iPad and Mac Catalyst ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=363"
  },
  {
    "text": "still show the Open in New Window item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=365"
  },
  {
    "text": "but on iPhone, the Show Details item is visible; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=368"
  },
  {
    "text": "all done without a single condition in your code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=372"
  },
  {
    "text": "Adding these menu items is a clear and familiar way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=376"
  },
  {
    "text": "for people to open their content in new scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=379"
  },
  {
    "text": "But it's not the only way.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=382"
  },
  {
    "text": "iPad is a touch-first device ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=384"
  },
  {
    "text": "and it's easy to open scenes with a single gesture.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=386"
  },
  {
    "text": "In the Notes app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=390"
  },
  {
    "text": "pinching out on a cell opens the note in a new scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=391"
  },
  {
    "text": "The scene interactively animates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=394"
  },
  {
    "text": "from the cell to its final position.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=396"
  },
  {
    "text": "There are two ways of offering this functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=400"
  },
  {
    "text": "in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=403"
  },
  {
    "text": "If you're using a collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=404"
  },
  {
    "text": "there's a new delegate method.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=406"
  },
  {
    "text": "For other views, use UIWindowScene ActivationInteraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=408"
  },
  {
    "text": "Both of these are only for presenting scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=412"
  },
  {
    "text": "with a prominent style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=414"
  },
  {
    "text": "To support this gesture in your collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=417"
  },
  {
    "text": "implement the new delegate method named ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=420"
  },
  {
    "text": "sceneActivationConfiguration ForItemAt indexPath.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=422"
  },
  {
    "text": "It's very similar to the context menu example from earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=426"
  },
  {
    "text": "Create the user activity for the new scene's content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=430"
  },
  {
    "text": "then return an activation configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=434"
  },
  {
    "text": "with that activity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=436"
  },
  {
    "text": "You may not want every cell to support opening a new scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=438"
  },
  {
    "text": "To prevent the gesture from beginning, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=442"
  },
  {
    "text": "just return nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=444"
  },
  {
    "text": "To support this gesture on other views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=446"
  },
  {
    "text": "create a UIWindowScene .ActivationInteraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=449"
  },
  {
    "text": "It's created with a closure that accepts two arguments: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=452"
  },
  {
    "text": "the interaction itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=456"
  },
  {
    "text": "and the point of the interaction in the view's coordinate space.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=457"
  },
  {
    "text": "These can be used to create specific user activities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=462"
  },
  {
    "text": "for different regions of the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=464"
  },
  {
    "text": "The closure should return an activation configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=467"
  },
  {
    "text": "with the user activity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=470"
  },
  {
    "text": "The interaction also takes an error handler.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=473"
  },
  {
    "text": "While the interaction is disabled on platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=475"
  },
  {
    "text": "that don't support multiple scenes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=478"
  },
  {
    "text": "errors can still occur due to configuration issues ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=480"
  },
  {
    "text": "or a lack of system resources.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=483"
  },
  {
    "text": "You've probably noticed that all of these ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=486"
  },
  {
    "text": "of presenting window scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=488"
  },
  {
    "text": "use the same activation configuration object.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=490"
  },
  {
    "text": "Its only requirement is a user activity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=494"
  },
  {
    "text": "but it also contains scene request options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=497"
  },
  {
    "text": "and a targeted preview.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=500"
  },
  {
    "text": "If these are not provided, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=502"
  },
  {
    "text": "the system will do its best to create them for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=503"
  },
  {
    "text": "However, you can explicitly provide them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=506"
  },
  {
    "text": "to refine the experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=508"
  },
  {
    "text": "As an example, these collection view cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=511"
  },
  {
    "text": "have a thumbnail, title, and caption.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=513"
  },
  {
    "text": "When the cell is pinched out, a scene is presented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=516"
  },
  {
    "text": "which mainly displays the larger version ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=519"
  },
  {
    "text": "of the thumbnail's content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=521"
  },
  {
    "text": "Notice that the new scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=523"
  },
  {
    "text": "is transitioning from the cell as a whole.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=524"
  },
  {
    "text": "It would look better ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=527"
  },
  {
    "text": "if it transitioned from just the thumbnail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=528"
  },
  {
    "text": "To achieve this effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=531"
  },
  {
    "text": "the activation configuration is created as before.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=533"
  },
  {
    "text": "Then, check if the cell is a thumbnail cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=537"
  },
  {
    "text": "If so, use the cell's thumbnail view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=541"
  },
  {
    "text": "to create a targeted preview and set it on the configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=544"
  },
  {
    "text": "By providing a custom preview on the activation configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=549"
  },
  {
    "text": "the transition is much more polished.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=552"
  },
  {
    "text": "Let's take a closer look.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=555"
  },
  {
    "text": "Now, rather than transitioning from the cell itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=557"
  },
  {
    "text": "it transitions from the thumbnail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=561"
  },
  {
    "text": "leaving the rest of the cell in place.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=563"
  },
  {
    "text": "Activation configurations allow you to request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=567"
  },
  {
    "text": "any of your app's scenes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=570"
  },
  {
    "text": "However, you may simply want to display a file ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=572"
  },
  {
    "text": "without having to build a scene yourself.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=575"
  },
  {
    "text": "iPadOS 15 makes this very easy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=577"
  },
  {
    "text": "There's a special subclass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=581"
  },
  {
    "text": "of UIWindowScene .ActivationConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=582"
  },
  {
    "text": "called \"QLPreviewScene ActivationConfiguration\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=585"
  },
  {
    "text": "Returning a preview scene configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=590"
  },
  {
    "text": "requests a system-managed preview scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=592"
  },
  {
    "text": "There's no scene delegate and no callbacks to worry about, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=595"
  },
  {
    "text": "but your app must declare support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=598"
  },
  {
    "text": "for multiple windows in the Info.plist.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=600"
  },
  {
    "text": "Providing polished and convenient ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=604"
  },
  {
    "text": "for people to open content in new scenes is important.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=606"
  },
  {
    "text": "But it's equally as important ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=610"
  },
  {
    "text": "to save and restore the scene's state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=611"
  },
  {
    "text": "so returning to them later on is a seamless experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=613"
  },
  {
    "text": "When a scene moves to the background, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=618"
  },
  {
    "text": "the system will ask the scene's delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=619"
  },
  {
    "text": "for an NSUserActivity to represent its state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=622"
  },
  {
    "text": "This activity could be the root view controller's activity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=626"
  },
  {
    "text": "if it supports Handoff, or one created on the spot.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=629"
  },
  {
    "text": "Here, a user activity is created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=633"
  },
  {
    "text": "saving the contents of a text field ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=635"
  },
  {
    "text": "in the activity's user info dictionary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=637"
  },
  {
    "text": "To give the best experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=642"
  },
  {
    "text": "the scene state should go beyond just the content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=644"
  },
  {
    "text": "You should also save the visual and interaction state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=647"
  },
  {
    "text": "like scroll position, cursor position, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=650"
  },
  {
    "text": "and first responder status.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=652"
  },
  {
    "text": "Rather than saving each of these independently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=655"
  },
  {
    "text": "UITextField and UITextView now have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=657"
  },
  {
    "text": "an interactionState property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=660"
  },
  {
    "text": "This property provides a single object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=663"
  },
  {
    "text": "containing all of the interaction state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=665"
  },
  {
    "text": "The object doesn't contain the content itself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=668"
  },
  {
    "text": "it's additional information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=670"
  },
  {
    "text": "for you to save in the user activity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=672"
  },
  {
    "text": "I've updated the previous example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=677"
  },
  {
    "text": "by saving the interaction state of the text field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=678"
  },
  {
    "text": "Now, by saving both the content and the interaction state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=681"
  },
  {
    "text": "the user activity contains enough information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=685"
  },
  {
    "text": "to be accurately restored.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=688"
  },
  {
    "text": "On iPadOS 14, restoring state can be a little tricky.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=692"
  },
  {
    "text": "If you tried to restore state when the scene was connecting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=697"
  },
  {
    "text": "you'd notice that the storyboard and views weren't fully loaded.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=699"
  },
  {
    "text": "If you restored later, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=704"
  },
  {
    "text": "when the scene was transitioning to the foreground, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=705"
  },
  {
    "text": "you had to track whether or not it was for the first time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=707"
  },
  {
    "text": "iPadOS 15 solves this problem with a new delegate method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=711"
  },
  {
    "text": "explicitly for restoring state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=715"
  },
  {
    "text": "It's called after the scene is connected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=718"
  },
  {
    "text": "and the storyboard has been loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=720"
  },
  {
    "text": "but before the first transition to foreground.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=722"
  },
  {
    "text": "Regardless of whether your app uses storyboards, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=726"
  },
  {
    "text": "you should use this new callback for restoring state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=728"
  },
  {
    "text": "Restoring state from the activity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=732"
  },
  {
    "text": "saved in the previous example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=734"
  },
  {
    "text": "starts with the system calling sceneRestoreInteractionState.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=736"
  },
  {
    "text": "Then, restoring the content of the text field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=740"
  },
  {
    "text": "Finally, restoring its interaction state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=744"
  },
  {
    "text": "It's critical that the content be restored ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=747"
  },
  {
    "text": "before the interaction state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=749"
  },
  {
    "text": "Lastly, synchronously restoring state can be complex.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=752"
  },
  {
    "text": "You may need to access a database or load a file ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=756"
  },
  {
    "text": "and don't want empty UI during that time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=759"
  },
  {
    "text": "To account for this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=762"
  },
  {
    "text": "iPadOS 15 allows your app to request a short-term extension.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=763"
  },
  {
    "text": "During this extension, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=768"
  },
  {
    "text": "the launch image will remain visible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=769"
  },
  {
    "text": "while still allowing the main RunLoop to execute.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=771"
  },
  {
    "text": "Once your content is loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=775"
  },
  {
    "text": "the app should signal to complete the restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=777"
  },
  {
    "text": "This extension is short and not intended to be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=781"
  },
  {
    "text": "for potentially long-running tasks like network access.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=784"
  },
  {
    "text": "If your app fails to signal completion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=788"
  },
  {
    "text": "or takes too long, it will be closed by the system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=790"
  },
  {
    "text": "To use extended state restoration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=794"
  },
  {
    "text": "start by requesting an extension from the scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=796"
  },
  {
    "text": "Then, kick off your asynchronous work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=799"
  },
  {
    "text": "Once the content is loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=802"
  },
  {
    "text": "restore it and tell the scene to complete restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=803"
  },
  {
    "text": "The scene will then display your freshly restored UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=808"
  },
  {
    "text": "Supporting multitasking in your app makes it shine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=811"
  },
  {
    "text": "but to be a true next-level iPad app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=815"
  },
  {
    "text": "there's more to do.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=817"
  },
  {
    "text": "And now, over to Anant.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=819"
  },
  {
    "text": "Anant Jain: Thank you, Chris! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=821"
  },
  {
    "text": "My name is Anant and I'm a UIKit engineer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=823"
  },
  {
    "text": "People love that iPad is light enough to hold in their hands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=827"
  },
  {
    "text": "while still being able to attach to a physical keyboard ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=832"
  },
  {
    "text": "at a moment's notice.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=835"
  },
  {
    "text": "They expect your app to keep up with them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=838"
  },
  {
    "text": "by having great keyboard support.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=840"
  },
  {
    "text": "iPadOS 15 introduces several new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=843"
  },
  {
    "text": "to bring your app's keyboard shortcuts to the next level.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=847"
  },
  {
    "text": "iPadOS 15 features a totally new interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=851"
  },
  {
    "text": "for discovering keyboard shortcuts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=855"
  },
  {
    "text": "It structures each command into familiar categories, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=857"
  },
  {
    "text": "bringing increased parity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=861"
  },
  {
    "text": "between the iPad and Mac Catalyst versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=862"
  },
  {
    "text": "of your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=865"
  },
  {
    "text": "The menu offers a convenient search feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=867"
  },
  {
    "text": "that can be brought up from anywhere across the system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=869"
  },
  {
    "text": "You can even tap on a shortcut to trigger it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=873"
  },
  {
    "text": "If you need a refresher on how to support keyboard shortcuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=877"
  },
  {
    "text": "with UIKeyCommand, including how commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=880"
  },
  {
    "text": "are dispatched to the responder chain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=882"
  },
  {
    "text": "check out \"Support hardware keyboards in your app.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=885"
  },
  {
    "text": "On Mac Catalyst, apps each have a global menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=889"
  },
  {
    "text": "called the main menu, which is displayed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=892"
  },
  {
    "text": "in the menu bar at the top of the screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=894"
  },
  {
    "text": "The main menu consists of several category submenus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=897"
  },
  {
    "text": "like File and Edit, and these category menus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=901"
  },
  {
    "text": "in turn contain further submenus with all the app's commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=905"
  },
  {
    "text": "On iPadOS 15, we've brought ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=911"
  },
  {
    "text": "the main menu system to iPad apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=913"
  },
  {
    "text": "The new shortcut interface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=916"
  },
  {
    "text": "which appears by holding down the Command key, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=917"
  },
  {
    "text": "displays this menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=920"
  },
  {
    "text": "Now, the main menu system is represented a bit differently ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=923"
  },
  {
    "text": "on the iPad compared to the Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=927"
  },
  {
    "text": "The Mac displays the full submenu hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=929"
  },
  {
    "text": "within each category, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=932"
  },
  {
    "text": "whereas the iPad flattens those hierarchies.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=933"
  },
  {
    "text": "Disabled and non-performable commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=937"
  },
  {
    "text": "appear grayed out on the Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=939"
  },
  {
    "text": "whereas they are hidden on the iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=942"
  },
  {
    "text": "Furthermore, the iPad shortcut menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=944"
  },
  {
    "text": "is designed to help discover keyboard shortcuts in an app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=947"
  },
  {
    "text": "It won't display keyless commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=951"
  },
  {
    "text": "like the Mac menu bar does.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=953"
  },
  {
    "text": "By default, the main menu contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=956"
  },
  {
    "text": "all the system category menus like File and Edit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=958"
  },
  {
    "text": "These include all the system commands, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=963"
  },
  {
    "text": "like Undo and Redo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=965"
  },
  {
    "text": "Paste and Match Style, and so on.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=967"
  },
  {
    "text": "iPadOS 15 adds the Print command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=970"
  },
  {
    "text": "to this list of system commands, which apps can get by adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=973"
  },
  {
    "text": "the UIApplication SupportsPrintCommand key ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=977"
  },
  {
    "text": "to their Info.plist.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=980"
  },
  {
    "text": "Now that iPad apps on iPadOS 15 support the main menu system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=984"
  },
  {
    "text": "they can use the UIMenuBuilder API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=989"
  },
  {
    "text": "to customize it, just like Mac Catalyst apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=991"
  },
  {
    "text": "In fact, if you already have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=995"
  },
  {
    "text": "a Mac Catalyst version of your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=997"
  },
  {
    "text": "you've already done most of the work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=999"
  },
  {
    "text": "Apps should use the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1003"
  },
  {
    "text": "to add all supported key commands to their main menus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1004"
  },
  {
    "text": "This is a change from how apps would previously ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1008"
  },
  {
    "text": "declare keyboard shortcuts: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1011"
  },
  {
    "text": "by overriding the keyCommands property on UIResponder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1013"
  },
  {
    "text": "or by calling addKeyCommand(_:) on a view controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1017"
  },
  {
    "text": "Commands defined this way do still work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1021"
  },
  {
    "text": "but they'll appear in a separate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1024"
  },
  {
    "text": "uncategorized section of the new interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1026"
  },
  {
    "text": "Apps should remove key command declarations like this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1030"
  },
  {
    "text": "and instead add them to the main menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1033"
  },
  {
    "text": "To customize the main menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1036"
  },
  {
    "text": "override buildMenu(withbuilder:) in your AppDelegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1038"
  },
  {
    "text": "UIKit calls this method at app launch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1042"
  },
  {
    "text": "and passes in a UIMenuBuilder object.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1045"
  },
  {
    "text": "Apps should check if the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1049"
  },
  {
    "text": "is modifying the main menu system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1050"
  },
  {
    "text": "If so, they can use the builder to make customizations.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1053"
  },
  {
    "text": "Suppose an app wants some key commands in the File menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1058"
  },
  {
    "text": "for working with tabs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1061"
  },
  {
    "text": "The app simply creates a submenu using the UIMenu API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1064"
  },
  {
    "text": "and adds the desired key commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1068"
  },
  {
    "text": "as that menu's children.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1071"
  },
  {
    "text": "Then the app calls the insertChild method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1073"
  },
  {
    "text": "on the builder object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1076"
  },
  {
    "text": "to insert the submenu into the File menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1078"
  },
  {
    "text": "To reference an existing element in the main menu system -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1082"
  },
  {
    "text": "like the File menu, in this case -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1085"
  },
  {
    "text": "apps should specify the element's identifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1088"
  },
  {
    "text": "The built-in system menu identifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1091"
  },
  {
    "text": "are defined as constants under UIMenu.Identifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1094"
  },
  {
    "text": "Apps can easily create their own menu categories, too.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1099"
  },
  {
    "text": "Here, the app creates a Bookmarks menu -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1103"
  },
  {
    "text": "once again, using the UIMenu API.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1105"
  },
  {
    "text": "Then, the app uses the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1109"
  },
  {
    "text": "to insert that menu into the root menu -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1111"
  },
  {
    "text": "in this case, after the system View menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1114"
  },
  {
    "text": "That's all it takes! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1117"
  },
  {
    "text": "Now, the builder can be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1119"
  },
  {
    "text": "to make further insertions into the Bookmarks menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1121"
  },
  {
    "text": "just as it would with the File menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1124"
  },
  {
    "text": "Just pass in the new menu's identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1126"
  },
  {
    "text": "which UIKit automatically generates.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1129"
  },
  {
    "text": "Now, I keep mentioning identifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1132"
  },
  {
    "text": "UIMenuBuilder will enforce that each element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1135"
  },
  {
    "text": "in the main menu system has a unique identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1138"
  },
  {
    "text": "including individual commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1142"
  },
  {
    "text": "Suppose an app inserts key commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1144"
  },
  {
    "text": "to display content either as a list or as a grid.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1146"
  },
  {
    "text": "Both commands share the same action: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1151"
  },
  {
    "text": "changeViewMode(_:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1154"
  },
  {
    "text": "In the main menu system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1155"
  },
  {
    "text": "commands are implicitly identified by their actions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1157"
  },
  {
    "text": "so both of these commands share the same identifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1161"
  },
  {
    "text": "UIMenuBuilder won't allow both commands to be inserted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1165"
  },
  {
    "text": "unless they have different identifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1168"
  },
  {
    "text": "One way to distinguish these commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1171"
  },
  {
    "text": "is to give them different propertyList values.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1174"
  },
  {
    "text": "But a better way is to simply give each command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1177"
  },
  {
    "text": "a unique action describing what it specifically does.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1180"
  },
  {
    "text": "The builder also enforces that keyboard shortcut combinations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1184"
  },
  {
    "text": "in the main menu are unique.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1188"
  },
  {
    "text": "Suppose an app inserts a Get Info key command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1191"
  },
  {
    "text": "on Command-I.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1194"
  },
  {
    "text": "Because the system Italic shortcut in the text style menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1196"
  },
  {
    "text": "shares the same shortcut, this insertion will also fail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1199"
  },
  {
    "text": "Once again, there are two solutions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1205"
  },
  {
    "text": "The app can change the Get Info shortcut to something ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1208"
  },
  {
    "text": "that doesn't collide with an existing shortcut, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1211"
  },
  {
    "text": "such as Control-Command-I.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1213"
  },
  {
    "text": "Alternatively, the app can tell the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1216"
  },
  {
    "text": "to remove the text style commands if they're not needed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1219"
  },
  {
    "text": "If an insertion includes a duplicate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1223"
  },
  {
    "text": "then UIMenuBuilder fails that insertion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1226"
  },
  {
    "text": "and logs an error in the console showing either ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1228"
  },
  {
    "text": "the duplicated key commands or the shared identifiers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1231"
  },
  {
    "text": "If you're finding your insertions aren't appearing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1236"
  },
  {
    "text": "chances are there's a duplicate somewhere, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1239"
  },
  {
    "text": "so look for logs like this in the console.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1242"
  },
  {
    "text": "After the call to buildMenu(with builder:) ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1246"
  },
  {
    "text": "finishes, the app's main menu appears ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1248"
  },
  {
    "text": "in the Mac menu bar and the iPad shortcut overlay.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1251"
  },
  {
    "text": "There is one problem, though.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1256"
  },
  {
    "text": "The app added a submenu with commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1258"
  },
  {
    "text": "to sort bookmarks either by name or by date.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1261"
  },
  {
    "text": "But because the iPad shortcut overlay ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1265"
  },
  {
    "text": "doesn't display the submenu hierarchy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1267"
  },
  {
    "text": "it's not clear what these shortcuts do on iPadOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1269"
  },
  {
    "text": "For situations like this, set a more descriptive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1274"
  },
  {
    "text": "discoverability title on the key commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1277"
  },
  {
    "text": "iPadOS prefers the discoverability title ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1280"
  },
  {
    "text": "over the regular title if both are provided.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1283"
  },
  {
    "text": "Now, I mentioned earlier that individual responders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1287"
  },
  {
    "text": "should avoid declaring keyboard shortcuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1291"
  },
  {
    "text": "and instead declare them in the main menu system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1294"
  },
  {
    "text": "However, responders should still implement action methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1297"
  },
  {
    "text": "for main menu commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1301"
  },
  {
    "text": "When key commands are triggered, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1304"
  },
  {
    "text": "UIKit automatically dispatches the action to a responder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1305"
  },
  {
    "text": "UIKit does this by traversing the app's responder chain.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1311"
  },
  {
    "text": "As soon as it finds a responder that can perform the action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1316"
  },
  {
    "text": "it calls that responder's action method.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1320"
  },
  {
    "text": "If nothing in the chain can perform the action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1324"
  },
  {
    "text": "then the key command isn't performable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1327"
  },
  {
    "text": "If you're new to UIResponder concepts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1330"
  },
  {
    "text": "\"Support hardware keyboards in your app\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1333"
  },
  {
    "text": "has a fantastic introduction to how it works.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1335"
  },
  {
    "text": "\"Qualities of a great Mac Catalyst app\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1339"
  },
  {
    "text": "also dives into a bit more detail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1341"
  },
  {
    "text": "When UIKit performs a responder search along the chain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1344"
  },
  {
    "text": "it calls two useful UIResponder methods.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1348"
  },
  {
    "text": "Apps can override these methods in their responders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1351"
  },
  {
    "text": "to improve their key commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1355"
  },
  {
    "text": "The first is canPerformAction (_:withSender:), ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1357"
  },
  {
    "text": "which UIKit uses to check ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1361"
  },
  {
    "text": "if a responder can perform an action.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1363"
  },
  {
    "text": "By default, this returns true ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1366"
  },
  {
    "text": "if the responder implements that action method; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1369"
  },
  {
    "text": "otherwise, it returns false.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1372"
  },
  {
    "text": "Responders can override this to add custom logic.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1375"
  },
  {
    "text": "For example, a web browser can tell UIKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1379"
  },
  {
    "text": "that the closeTab command isn't performable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1382"
  },
  {
    "text": "if there are no open tabs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1386"
  },
  {
    "text": "Since UIKit can't find a target responder for that action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1389"
  },
  {
    "text": "the command will be non-performable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1393"
  },
  {
    "text": "and it won't be shown in the shortcut interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1396"
  },
  {
    "text": "Note that overrides for this method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1400"
  },
  {
    "text": "must call super for unhandled cases.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1402"
  },
  {
    "text": "The other useful method is validate(_ command:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1406"
  },
  {
    "text": "When UIKit finds a target responder for a key command, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1410"
  },
  {
    "text": "it calls this method on that responder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1413"
  },
  {
    "text": "and passes in a copy of the command.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1416"
  },
  {
    "text": "Responders can override validate(_ command:) ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1419"
  },
  {
    "text": "to update the appearance of the command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1422"
  },
  {
    "text": "for the current state of the app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1424"
  },
  {
    "text": "Here, the app updates the title ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1427"
  },
  {
    "text": "of the toggleBookmark(_:) command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1429"
  },
  {
    "text": "based on whether or not the current page is bookmarked.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1432"
  },
  {
    "text": "The title set in this method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1435"
  },
  {
    "text": "will reflect in the shortcut interface when it appears.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1437"
  },
  {
    "text": "In iPadOS 15, UIKit is introducing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1440"
  },
  {
    "text": "a major change to the responder chain.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1443"
  },
  {
    "text": "When apps adopt keyboard navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1446"
  },
  {
    "text": "with the focus system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1448"
  },
  {
    "text": "then responder traversal will begin at the focused item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1450"
  },
  {
    "text": "rather than the first responder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1454"
  },
  {
    "text": "This change plays incredibly well with key commands.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1456"
  },
  {
    "text": "Photos, for example, allows users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1461"
  },
  {
    "text": "to work with their photo library using just the keyboard.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1463"
  },
  {
    "text": "When users focus a cell in the grid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1467"
  },
  {
    "text": "they can hit the Space bar to view that photo.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1469"
  },
  {
    "text": "They can even hit Command-C to copy that photo ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1472"
  },
  {
    "text": "for pasting into another app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1475"
  },
  {
    "text": "Each cell implements various key command actions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1477"
  },
  {
    "text": "and since responder traversal starts at the focused item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1480"
  },
  {
    "text": "then the key commands target the cell.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1484"
  },
  {
    "text": "In short, the focus system levels up key commands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1487"
  },
  {
    "text": "and the responder chain.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1490"
  },
  {
    "text": "Take advantage of it to support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1493"
  },
  {
    "text": "powerful contextual shortcuts in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1494"
  },
  {
    "text": "To learn more, check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1498"
  },
  {
    "text": "\"Focus on iPad keyboard navigation.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1500"
  },
  {
    "text": "Finally, iPadOS 15 and macOS 12 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1503"
  },
  {
    "text": "introduce keyboard shortcut localization.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1506"
  },
  {
    "text": "When you build your app with these SDKs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1510"
  },
  {
    "text": "the system automatically localizes shortcut modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1512"
  },
  {
    "text": "and inputs for each keyboard layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1515"
  },
  {
    "text": "Take the Command-backslash shortcut, for example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1519"
  },
  {
    "text": "While the shortcut works on a US keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1522"
  },
  {
    "text": "it's impossible to perform on a Japanese keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1525"
  },
  {
    "text": "since that layout has no backslash key.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1528"
  },
  {
    "text": "So the system will remap the shortcut for Japanese keyboards.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1531"
  },
  {
    "text": "This means apps should not ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1534"
  },
  {
    "text": "localize shortcut modifiers or inputs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1536"
  },
  {
    "text": "and instead let the system do the work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1539"
  },
  {
    "text": "Apps can also opt out of automatic localization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1542"
  },
  {
    "text": "either at the app-wide level or on a per-shortcut basis.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1545"
  },
  {
    "text": "When the system localizes shortcuts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1550"
  },
  {
    "text": "it also mirrors them for right-to-left layouts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1553"
  },
  {
    "text": "For example, a shortcut to navigate backwards ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1557"
  },
  {
    "text": "with Command-left bracket ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1560"
  },
  {
    "text": "is flipped to Command-right bracket.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1562"
  },
  {
    "text": "If a shortcut shouldn't be mirrored, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1565"
  },
  {
    "text": "set the command's allowsAutomaticMirroring ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1567"
  },
  {
    "text": "property to false to disable mirroring ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1569"
  },
  {
    "text": "without disabling automatic localization entirely.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1572"
  },
  {
    "text": "iPadOS 15 is a huge release for keyboard shortcuts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1577"
  },
  {
    "text": "There's a ton of other enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1581"
  },
  {
    "text": "on top of everything we've covered today.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1583"
  },
  {
    "text": "So you've adopted all the new Multitasking features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1585"
  },
  {
    "text": "and you've built great keyboard support.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1588"
  },
  {
    "text": "Now, Mohammed will give you a few pointers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1592"
  },
  {
    "text": "to take your iPad app to the highest level.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1595"
  },
  {
    "text": "Mohammed Jisrawi: Thanks, Anant! Hi, I'm Mohammed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1599"
  },
  {
    "text": "Let's talk about the improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1602"
  },
  {
    "text": "iPadOS 15 brings to the system pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1604"
  },
  {
    "text": "iPadOS 13.4 introduced an adaptive system pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1608"
  },
  {
    "text": "that bridges between the touch-based UI of the iPad ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1612"
  },
  {
    "text": "and the precision of a mouse or trackpad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1616"
  },
  {
    "text": "If you're new to pointer interactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1620"
  },
  {
    "text": "take a moment to familiarize yourself with them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1622"
  },
  {
    "text": "and check out these previous videos.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1625"
  },
  {
    "text": "\"Build for the iPadOS pointer\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1628"
  },
  {
    "text": "breaks down the pointer interaction APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1629"
  },
  {
    "text": "\"Design for the iPadOS Pointer\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1633"
  },
  {
    "text": "dives into the design philosophy behind them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1635"
  },
  {
    "text": "and discusses best practices when adopting them in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1637"
  },
  {
    "text": "iPadOS 15 brings over some familiar Mac user interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1642"
  },
  {
    "text": "in a way that's consistent with the iPad's design language.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1646"
  },
  {
    "text": "It also introduces some new concepts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1650"
  },
  {
    "text": "that enhance usability and clarity.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1653"
  },
  {
    "text": "The first of these additions is band selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1657"
  },
  {
    "text": "a new pointer-specific multiselection experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1660"
  },
  {
    "text": "that should be familiar to anyone who's used a Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1664"
  },
  {
    "text": "In iPadOS 15, when you click and drag in a collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1668"
  },
  {
    "text": "the pointer stretches into a rectangle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1672"
  },
  {
    "text": "and the collection view selects the items ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1675"
  },
  {
    "text": "that the rectangle encompasses.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1677"
  },
  {
    "text": "Of course this translates naturally ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1680"
  },
  {
    "text": "to the familiar Mac UI on Mac Catalyst apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1682"
  },
  {
    "text": "This interaction is built into non-list UICollectionViews.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1686"
  },
  {
    "text": "Any UICollectionView that supports the existing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1690"
  },
  {
    "text": "one- and two-finger multiselection gestures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1693"
  },
  {
    "text": "via the shouldBeginMultiple SelectionInteraction API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1696"
  },
  {
    "text": "gets this behavior automatically in iPadOS 15.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1700"
  },
  {
    "text": "For anything other than a UICollectionView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1705"
  },
  {
    "text": "the new UIBandSelectionInteraction API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1707"
  },
  {
    "text": "allows you to easily adopt this experience in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1710"
  },
  {
    "text": "Since the selection logic is completely up to you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1715"
  },
  {
    "text": "you're able to support custom selection behaviors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1718"
  },
  {
    "text": "and have your UI react to the changing selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1721"
  },
  {
    "text": "in any way you choose.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1724"
  },
  {
    "text": "To get started, instantiate the interaction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1726"
  },
  {
    "text": "with a selection handler to be called as the pointer moves ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1729"
  },
  {
    "text": "and the interaction's state changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1733"
  },
  {
    "text": "Once it's created, add the interaction to your view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1736"
  },
  {
    "text": "as you would any other UIInteraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1739"
  },
  {
    "text": "In the handler, you can implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1742"
  },
  {
    "text": "your custom selection logic by responding to changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1744"
  },
  {
    "text": "in the interaction's state and selectionRect.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1747"
  },
  {
    "text": "Here we have a simple implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1751"
  },
  {
    "text": "that sets the selection to the items ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1753"
  },
  {
    "text": "within the interaction's selectionRect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1756"
  },
  {
    "text": "while the pointer is moving.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1758"
  },
  {
    "text": "It then finalizes the selection session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1761"
  },
  {
    "text": "when the primary mouse button is released ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1763"
  },
  {
    "text": "and the interaction ends.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1765"
  },
  {
    "text": "In addition to basic selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1768"
  },
  {
    "text": "UICollectionView's built-in band selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1770"
  },
  {
    "text": "supports some common keyboard shortcuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1773"
  },
  {
    "text": "out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1775"
  },
  {
    "text": "Holding Shift at the start of the drag, for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1777"
  },
  {
    "text": "causes items to be added to an existing selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1780"
  },
  {
    "text": "rather than replacing the currently selected items.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1783"
  },
  {
    "text": "Holding Command toggles the selection state of items ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1786"
  },
  {
    "text": "in the selection rect.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1789"
  },
  {
    "text": "This can be implemented in custom UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1791"
  },
  {
    "text": "using the interaction's initialModifierFlags property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1793"
  },
  {
    "text": "which provides the keys held at the start of the drag.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1797"
  },
  {
    "text": "Since it's a set of all the pressed modifiers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1801"
  },
  {
    "text": "you can respond to arbitrary key combinations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1803"
  },
  {
    "text": "to support custom or more advanced behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1806"
  },
  {
    "text": "that's specific to your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1809"
  },
  {
    "text": "The second addition to the system pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1811"
  },
  {
    "text": "is the ability to attach accessories.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1813"
  },
  {
    "text": "Accessories communicate additional information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1816"
  },
  {
    "text": "and provide contextual hints by combining secondary shapes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1819"
  },
  {
    "text": "with the primary pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1824"
  },
  {
    "text": "For instance, in the example on the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1826"
  },
  {
    "text": "the two arrows indicate that this view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1828"
  },
  {
    "text": "can be dragged horizontally.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1831"
  },
  {
    "text": "In the example on the right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1832"
  },
  {
    "text": "the plus provides some additional context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1834"
  },
  {
    "text": "for this Add to Cart button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1836"
  },
  {
    "text": "There are a few key distinctions between accessories ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1839"
  },
  {
    "text": "and using a custom pointer shape.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1841"
  },
  {
    "text": "Accessories are visually separate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1844"
  },
  {
    "text": "and secondary to the main pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1846"
  },
  {
    "text": "This is emphasized by the fact that they may be rendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1849"
  },
  {
    "text": "with a different appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1853"
  },
  {
    "text": "and animate separately from the main pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1854"
  },
  {
    "text": "They are independent units which can be combined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1858"
  },
  {
    "text": "and positioned around the pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1861"
  },
  {
    "text": "to communicate different ideas.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1863"
  },
  {
    "text": "Since they are independent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1866"
  },
  {
    "text": "they can be combined with any pointer style.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1867"
  },
  {
    "text": "Here's a demonstration of how the same set of accessories -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1871"
  },
  {
    "text": "two arrows indicating draggability -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1875"
  },
  {
    "text": "can be combined with different pointer styles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1877"
  },
  {
    "text": "On the left, they're combined with a lift effect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1880"
  },
  {
    "text": "where the pointer merges with the view and lifts it up.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1883"
  },
  {
    "text": "In the middle, they're alongside a highlight effect, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1888"
  },
  {
    "text": "where the pointer turns into a rounded rectangle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1891"
  },
  {
    "text": "and goes under the view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1894"
  },
  {
    "text": "On the right, they appear with the default system pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1897"
  },
  {
    "text": "using the new UIPointerStyle.system() API.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1901"
  },
  {
    "text": "So we're able to provide this additional context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1906"
  },
  {
    "text": "while still using the ideal effect for the situation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1909"
  },
  {
    "text": "without sacrificing the liveliness of the pointer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1913"
  },
  {
    "text": "and while still maintaining its deep relationship ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1916"
  },
  {
    "text": "with the app's UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1919"
  },
  {
    "text": "Just like it animates between pointer styles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1920"
  },
  {
    "text": "the system will automatically animate the appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1923"
  },
  {
    "text": "and disappearance of accessories.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1926"
  },
  {
    "text": "It'll also seamlessly animate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1929"
  },
  {
    "text": "between accessory shapes and position.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1930"
  },
  {
    "text": "The act of transitioning accessories ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1934"
  },
  {
    "text": "while a given effect is active can be meaningful.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1935"
  },
  {
    "text": "Such a transition can be used to communicate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1939"
  },
  {
    "text": "a change in state or behavior in the underlying UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1941"
  },
  {
    "text": "In the example on the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1946"
  },
  {
    "text": "the transition from a plus to a no sign ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1948"
  },
  {
    "text": "may indicate that an operation that was previously possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1951"
  },
  {
    "text": "is no longer permitted.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1954"
  },
  {
    "text": "Pointer accessories are composed of a UIPointerShape ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1958"
  },
  {
    "text": "and a UIPointerAccessory.Position, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1962"
  },
  {
    "text": "which describes the desired position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1965"
  },
  {
    "text": "as an offset from the pointer's midpoint ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1968"
  },
  {
    "text": "and an angle from the top.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1970"
  },
  {
    "text": "For convenience, UIKit provides some predefined values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1974"
  },
  {
    "text": "for positions around the pointer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1977"
  },
  {
    "text": "If the predefined positions don't quite fit your needs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1980"
  },
  {
    "text": "you can use them as a starting point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1983"
  },
  {
    "text": "and customize individual properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1985"
  },
  {
    "text": "This example starts with the topRight position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1988"
  },
  {
    "text": "and customizes the offset.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1991"
  },
  {
    "text": "You can also define entirely custom positions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1994"
  },
  {
    "text": "as in this example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1997"
  },
  {
    "text": "which creates a position with a custom offset and angle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=1998"
  },
  {
    "text": "To set up the example we saw at the beginning of this segment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2003"
  },
  {
    "text": "we'll create a UITargetedPreview with our view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2006"
  },
  {
    "text": "and use that to create a UIPointerStyle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2010"
  },
  {
    "text": "with a lift effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2013"
  },
  {
    "text": "Then we'll set the style's new accessories property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2016"
  },
  {
    "text": "to an array that contains our two arrow accessories.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2019"
  },
  {
    "text": "UIKit provides a premade arrow accessory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2024"
  },
  {
    "text": "so we can just create two of those ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2026"
  },
  {
    "text": "positioned on the left and right sides of the effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2028"
  },
  {
    "text": "So now when the pointer hovers over this view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2032"
  },
  {
    "text": "the two arrows animate out as the view lifts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2034"
  },
  {
    "text": "hinting that it can be dragged.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2038"
  },
  {
    "text": "If you've ever tried to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2041"
  },
  {
    "text": "this sort of interaction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2042"
  },
  {
    "text": "where a view with a pointer effect is draggable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2043"
  },
  {
    "text": "you've probably noticed something like this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2047"
  },
  {
    "text": "When the pointer reaches the edge of the pointer region, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2050"
  },
  {
    "text": "it disengages from the lifted view and the effect ends.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2053"
  },
  {
    "text": "This is usually desirable, since it prevents the pointer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2057"
  },
  {
    "text": "from sticking to views as it moves around.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2061"
  },
  {
    "text": "However, in scenarios like this, the ideal experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2065"
  },
  {
    "text": "would be for the pointer effect to remain stable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2068"
  },
  {
    "text": "and latch to the view and follow it along as it's dragged.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2071"
  },
  {
    "text": "To better enable these sorts of interactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2075"
  },
  {
    "text": "iPadOS 15 introduces the concept of latchingAxes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2077"
  },
  {
    "text": "on UIPointerRegion.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2081"
  },
  {
    "text": "When a region latches along a given axis, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2083"
  },
  {
    "text": "its pointer effect follows the pointer along the axis ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2086"
  },
  {
    "text": "when the primary mouse button is pressed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2089"
  },
  {
    "text": "A horizontally latching region lets you drag freely ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2091"
  },
  {
    "text": "along the x-axis while still rubberbanding along the y-axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2094"
  },
  {
    "text": "A vertically latching one ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2099"
  },
  {
    "text": "lets you drag freely along the y-axis.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2100"
  },
  {
    "text": "And one that latches along both ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2104"
  },
  {
    "text": "lets you drag freely along both axes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2105"
  },
  {
    "text": "These new tools can be used to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2109"
  },
  {
    "text": "some really powerful new experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2111"
  },
  {
    "text": "Here they are combined in a document editing app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2114"
  },
  {
    "text": "like Pages or Keynote.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2117"
  },
  {
    "text": "This image can be selected using band selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2119"
  },
  {
    "text": "Selecting the image causes dragging indicators to appear, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2123"
  },
  {
    "text": "and when the pointer hovers over an indicator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2127"
  },
  {
    "text": "accessories appear to hint at ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2130"
  },
  {
    "text": "how the image will be resized if it's dragged.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2132"
  },
  {
    "text": "And finally, latching allows the pointer effect and accessories ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2135"
  },
  {
    "text": "to follow the axis-locked resize gesture.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2139"
  },
  {
    "text": "These are just some of the enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2143"
  },
  {
    "text": "iPadOS 15 brings to the iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2145"
  },
  {
    "text": "Take advantage of them where applicable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2148"
  },
  {
    "text": "to really maximize the utility of your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2150"
  },
  {
    "text": "Adopt prominent scenes to give people a focused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2152"
  },
  {
    "text": "uninterrupted view of your app's content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2155"
  },
  {
    "text": "Empower them to achieve complex tasks quickly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2158"
  },
  {
    "text": "with the new keyboard shortcuts menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2161"
  },
  {
    "text": "and boost their productivity with the new pointer features.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2164"
  },
  {
    "text": "Thanks for watching! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2168"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10057/?time=2170"
  }
]