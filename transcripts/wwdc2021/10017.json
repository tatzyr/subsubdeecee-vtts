[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=0"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=3"
  },
  {
    "text": "Hello, everybody. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=9"
  },
  {
    "text": "I'm Michael LeHew from the Core Data team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=11"
  },
  {
    "text": "And today, I'm really excited to talk to you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=12"
  },
  {
    "text": "about some of the enhancements the team has made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=14"
  },
  {
    "text": "to make working with Core Data and Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=17"
  },
  {
    "text": "a truly excellent experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=19"
  },
  {
    "text": "I'm going to start with a review ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=22"
  },
  {
    "text": "of how Core Data is a great solution ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=24"
  },
  {
    "text": "for your customers’ data persistence needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=26"
  },
  {
    "text": "across all Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=27"
  },
  {
    "text": "I'll then follow up with a discussion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=30"
  },
  {
    "text": "on some of the ways that Core Data has adopted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=32"
  },
  {
    "text": "the new concurrency opportunities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=34"
  },
  {
    "text": "in the Swift runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=36"
  },
  {
    "text": "Next, I'll cover some of the enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=38"
  },
  {
    "text": "we've made to Core Data APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=40"
  },
  {
    "text": "to make your code more expressive in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=42"
  },
  {
    "text": "And then conclude the discussion with an exploration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=45"
  },
  {
    "text": "of the dynamic capabilities that Core Data is adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=47"
  },
  {
    "text": "to our existing SwiftUI support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=50"
  },
  {
    "text": "that we introduced in 2020. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=52"
  },
  {
    "text": "Let's start at the beginning, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=55"
  },
  {
    "text": "where regardless of which Apple platform you are developing for, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=57"
  },
  {
    "text": "you simply have an application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=60"
  },
  {
    "text": "At some point, your application ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=63"
  },
  {
    "text": "is going to eventually encounter user data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=65"
  },
  {
    "text": "and you'll likely need to store it somewhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=67"
  },
  {
    "text": "A great choice for that need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=70"
  },
  {
    "text": "is to use Core Data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=72"
  },
  {
    "text": "Core Data is Apple's hallmark framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=74"
  },
  {
    "text": "for application developers who desire to persist ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=77"
  },
  {
    "text": "their users' data in a robust and feature-rich way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=79"
  },
  {
    "text": "The framework takes care of many of the complexities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=83"
  },
  {
    "text": "of appropriately managing user data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=86"
  },
  {
    "text": "from the way it was represented as an object graph in memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=88"
  },
  {
    "text": "to how it's modeled in storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=92"
  },
  {
    "text": "The framework also goes through great efforts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=94"
  },
  {
    "text": "to manage important runtime considerations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=96"
  },
  {
    "text": "like memory use and latency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=98"
  },
  {
    "text": "The capabilities provided by the framework are scalable too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=101"
  },
  {
    "text": "You can start with a simple, locally-persisted store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=104"
  },
  {
    "text": "and expand to use multiple execution contexts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=108"
  },
  {
    "text": "to improve performance, and even create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=110"
  },
  {
    "text": "powerful shared data experiences through CloudKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=113"
  },
  {
    "text": "Core Data also works across all Apple-supported platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=116"
  },
  {
    "text": "And I'd really like to emphasize this last point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=120"
  },
  {
    "text": "Once you start using Core Data, everything you learn will work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=123"
  },
  {
    "text": "on each of our platforms, from your Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=127"
  },
  {
    "text": "to your iPhone, or even your Apple Watch.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=129"
  },
  {
    "text": "And, of course, Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=133"
  },
  {
    "text": "works great in Swift too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=135"
  },
  {
    "text": "Over the past few years, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=137"
  },
  {
    "text": "we've been continuing to enhance Core Data API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=139"
  },
  {
    "text": "to be as expressive as possible in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=142"
  },
  {
    "text": "And this is a pretty exciting year for Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=145"
  },
  {
    "text": "with the introduction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=147"
  },
  {
    "text": "of the all-new concurrency features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=148"
  },
  {
    "text": "in the language and runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=150"
  },
  {
    "text": "Since its inception, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=153"
  },
  {
    "text": "Core Data has always cared about running code concurrently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=155"
  },
  {
    "text": "and there's a really good reason for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=159"
  },
  {
    "text": "Persisting data requires reading and writing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=161"
  },
  {
    "text": "to some external storage media, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=164"
  },
  {
    "text": "and this makes supporting the new concurrency model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=166"
  },
  {
    "text": "a natural fit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=168"
  },
  {
    "text": "Let's explore how this works in the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=170"
  },
  {
    "text": "of our Earthquakes sample application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=173"
  },
  {
    "text": "This application reads a data feed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=176"
  },
  {
    "text": "from the US Geological Survey ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=178"
  },
  {
    "text": "and uses Core Data to store information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=180"
  },
  {
    "text": "about recent earthquakes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=182"
  },
  {
    "text": "such as their magnitude, location, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=183"
  },
  {
    "text": "and the date for which the event occurred. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=186"
  },
  {
    "text": "Architecturally, Earthquakes is a Swift application ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=189"
  },
  {
    "text": "that has a view context to drive the UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=192"
  },
  {
    "text": "and a background context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=194"
  },
  {
    "text": "to ingest the data provided by the USGS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=196"
  },
  {
    "text": "Our sample has a local container for our application ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=199"
  },
  {
    "text": "and gathers quake data from the USGS's JSON feed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=203"
  },
  {
    "text": "As we download data, we hand it off to our JSON parser ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=208"
  },
  {
    "text": "and then import it into our background context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=211"
  },
  {
    "text": "to be turned into managed objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=213"
  },
  {
    "text": "and saved to our local store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=215"
  },
  {
    "text": "The view context then merges the changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=218"
  },
  {
    "text": "to magically update our UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=220"
  },
  {
    "text": "In 2020, we focused on how to efficiently handle this data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=223"
  },
  {
    "text": "through the use of batch operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=227"
  },
  {
    "text": "Now, however, I'd like to focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=230"
  },
  {
    "text": "on how we perform these operations concurrently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=231"
  },
  {
    "text": "In particular, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=234"
  },
  {
    "text": "I'd like to focus on the three steps that we take ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=236"
  },
  {
    "text": "to import data into the application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=238"
  },
  {
    "text": "Step one is to download the raw data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=241"
  },
  {
    "text": "and upon successful download, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=243"
  },
  {
    "text": "the application needs to convert it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=245"
  },
  {
    "text": "to our specific local representation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=246"
  },
  {
    "text": "And finally, save the new objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=249"
  },
  {
    "text": "into the persistent store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=251"
  },
  {
    "text": "Let's go ahead and convert this to high-level code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=253"
  },
  {
    "text": "I've abstracted each operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=257"
  },
  {
    "text": "into its own function or closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=259"
  },
  {
    "text": "The app first retrieves the raw data from the server, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=261"
  },
  {
    "text": "processes it into a convenient local representation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=264"
  },
  {
    "text": "and then imports the objects into Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=267"
  },
  {
    "text": "by making a batch insert request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=269"
  },
  {
    "text": "on the background managed object context.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=271"
  },
  {
    "text": "Written like this, it is a bit easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=275"
  },
  {
    "text": "to visualize potential bottlenecks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=278"
  },
  {
    "text": "Loading data over the network would be a great opportunity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=280"
  },
  {
    "text": "to consider doing our work asynchronously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=283"
  },
  {
    "text": "Converting might also be a place to consider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=286"
  },
  {
    "text": "Additionally, importing the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=289"
  },
  {
    "text": "into our persistent store seems quite opportune.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=291"
  },
  {
    "text": "Historically, though, in all of these cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=295"
  },
  {
    "text": "you would need to implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=297"
  },
  {
    "text": "any such asynchronous mechanism yourself ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=299"
  },
  {
    "text": "or lean heavily ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=301"
  },
  {
    "text": "upon a framework-specific implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=302"
  },
  {
    "text": "Let's talk about Core Data's specific abstraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=305"
  },
  {
    "text": "In the case of Core Data, when you call performAndWait, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=310"
  },
  {
    "text": "the managed object context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=313"
  },
  {
    "text": "will execute the provided closure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=315"
  },
  {
    "text": "within its own protected execution environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=316"
  },
  {
    "text": "This can potentially tie up the calling thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=319"
  },
  {
    "text": "until the work is complete.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=321"
  },
  {
    "text": "If we were to visualize this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=324"
  },
  {
    "text": "we can imagine three blocks of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=325"
  },
  {
    "text": "which I've labeled BEFORE, DURING, and AFTER.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=328"
  },
  {
    "text": "When our code runs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=332"
  },
  {
    "text": "first the code labeled BEFORE gets a chance to execute ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=333"
  },
  {
    "text": "on the originating thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=337"
  },
  {
    "text": "We then call performAndWait, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=339"
  },
  {
    "text": "and the calling thread will block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=341"
  },
  {
    "text": "until the work that happens DURING the closure completes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=343"
  },
  {
    "text": "When that work is done, the code described AFTER will execute.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=347"
  },
  {
    "text": "Of course, if you don't need to wait ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=352"
  },
  {
    "text": "for the closure to finish, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=353"
  },
  {
    "text": "we've always offered a fully asynchronous variant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=355"
  },
  {
    "text": "But new this year, Swift has gained ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=358"
  },
  {
    "text": "powerful concurrency model with deep language integration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=360"
  },
  {
    "text": "which allows Core Data to more accurately describe ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=363"
  },
  {
    "text": "the intention of our API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=366"
  },
  {
    "text": "The syntax is a bit different. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=369"
  },
  {
    "text": "You ask to await the results of the perform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=371"
  },
  {
    "text": "but the mental model for using this new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=374"
  },
  {
    "text": "is exactly the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=377"
  },
  {
    "text": "that managed object has always supported. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=378"
  },
  {
    "text": "The benefit, however, is that the concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=382"
  },
  {
    "text": "is no longer a hidden implementation detail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=384"
  },
  {
    "text": "but instead deeply integrated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=386"
  },
  {
    "text": "into the Swift language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=388"
  },
  {
    "text": "Because of this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=390"
  },
  {
    "text": "the compiler can automatically prevent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=392"
  },
  {
    "text": "many common concurrency bugs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=394"
  },
  {
    "text": "such as data races and deadlocks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=395"
  },
  {
    "text": "and even efficiently make use of resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=397"
  },
  {
    "text": "when tasks are known to be awaiting results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=400"
  },
  {
    "text": "Let's go back to the code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=403"
  },
  {
    "text": "and see what using this in practice is like.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=405"
  },
  {
    "text": "As we saw, you ask to await an async-declared function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=409"
  },
  {
    "text": "This has the potential ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=413"
  },
  {
    "text": "to suspend the calling execution context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=414"
  },
  {
    "text": "until the async function yields control by returning.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=416"
  },
  {
    "text": "It also seamlessly works ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=421"
  },
  {
    "text": "with Swift's existing structured error handling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=423"
  },
  {
    "text": "by routing any thrown errors to the calling frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=426"
  },
  {
    "text": "just as you would expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=429"
  },
  {
    "text": "Now that we've seen an example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=431"
  },
  {
    "text": "of calling an asynchronous function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=433"
  },
  {
    "text": "let's take a look at how they're declared ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=435"
  },
  {
    "text": "by looking at Core Data's brand-new way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=437"
  },
  {
    "text": "to perform asynchronous work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=440"
  },
  {
    "text": "within a managed object context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=442"
  },
  {
    "text": "There is quite a bit of functionality packed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=445"
  },
  {
    "text": "into this small stanza of Swift code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=447"
  },
  {
    "text": "but I'm only gonna talk about a few important details, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=449"
  },
  {
    "text": "and then we'll jump into showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=451"
  },
  {
    "text": "how you can use it in practice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=453"
  },
  {
    "text": "Starting with the declaration of the new perform overload. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=456"
  },
  {
    "text": "You can see it's generic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=459"
  },
  {
    "text": "based on the kind of results that it can return ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=460"
  },
  {
    "text": "and is decorated with the new async keyword, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=463"
  },
  {
    "text": "which opts this function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=465"
  },
  {
    "text": "into the new concurrency capabilities in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=466"
  },
  {
    "text": "Perhaps the most significant facet of this new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=470"
  },
  {
    "text": "is that the provided closure now allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=473"
  },
  {
    "text": "to throw an error or return a value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=476"
  },
  {
    "text": "saving you the effort of routing these back ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=478"
  },
  {
    "text": "to the calling frame by hand. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=480"
  },
  {
    "text": "Let's see how cool this is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=482"
  },
  {
    "text": "by exploring a few different scenarios. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=484"
  },
  {
    "text": "Historically, since the concurrency was hiding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=487"
  },
  {
    "text": "inside of our implementation, one of the only ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=490"
  },
  {
    "text": "to route errors outside of a performAndWait ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=492"
  },
  {
    "text": "was to close over an optional ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=494"
  },
  {
    "text": "and then check it afterwards. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=496"
  },
  {
    "text": "This could be more complicated if you were using ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=500"
  },
  {
    "text": "the fully asynchronous versions of perform ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=503"
  },
  {
    "text": "because you'd need to do a lot of plumbing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=505"
  },
  {
    "text": "by passing completion handlers around ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=507"
  },
  {
    "text": "and making sure you used them consistently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=509"
  },
  {
    "text": "With the new concurrency model in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=513"
  },
  {
    "text": "all of that plumbing is handled for you! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=515"
  },
  {
    "text": "Just try and await your asynchronous work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=517"
  },
  {
    "text": "and if an error occurs, just throw it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=520"
  },
  {
    "text": "and things will unwind to the calling frame naturally.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=522"
  },
  {
    "text": "So now, we focused on errors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=527"
  },
  {
    "text": "but what about results? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=530"
  },
  {
    "text": "Well, everything I've described works exactly the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=531"
  },
  {
    "text": "Let's look at a concrete example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=534"
  },
  {
    "text": "Let's sketch out what we wanna do before jumping into the code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=537"
  },
  {
    "text": "For this example, I'd like to configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=541"
  },
  {
    "text": "a fetch request to identify the number of earthquakes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=543"
  },
  {
    "text": "that have happened in the last five hours. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=546"
  },
  {
    "text": "As a sentence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=549"
  },
  {
    "text": "this is a straightforward task to describe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=550"
  },
  {
    "text": "But in code, we're going to need to reorder things a bit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=553"
  },
  {
    "text": "We'll first need to figure out when five hours ago was, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=557"
  },
  {
    "text": "for which we can use the Calendar APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=561"
  },
  {
    "text": "to calculate this in a robust way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=563"
  },
  {
    "text": "We'll then configure a fetch request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=566"
  },
  {
    "text": "with a predicate in terms of that date ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=568"
  },
  {
    "text": "and ask for a count result type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=571"
  },
  {
    "text": "In code, it looks pretty much like our plan. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=573"
  },
  {
    "text": "We use Calendar's offset API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=577"
  },
  {
    "text": "to calculate five hours before now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=579"
  },
  {
    "text": "and then configure a Quake FetchRequest ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=581"
  },
  {
    "text": "to return a count result with a predicate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=583"
  },
  {
    "text": "that matches the dates that we care about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=585"
  },
  {
    "text": "Historically, returning results ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=589"
  },
  {
    "text": "followed a similar pattern to the way we captured errors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=591"
  },
  {
    "text": "You would close over any state that you needed to mutate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=594"
  },
  {
    "text": "perform your computations in the managed object context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=597"
  },
  {
    "text": "and then later, use the result after regaining control.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=600"
  },
  {
    "text": "Now, we can simply just try ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=605"
  },
  {
    "text": "and await the result of our perform call ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=607"
  },
  {
    "text": "and return the result for perform directly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=609"
  },
  {
    "text": "to our calling frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=612"
  },
  {
    "text": "The rest of the code is exactly the same. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=614"
  },
  {
    "text": "It's only the by-hand value routing that we avoid ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=617"
  },
  {
    "text": "along with any potential bugs or nuances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=620"
  },
  {
    "text": "that that code may have had. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=623"
  },
  {
    "text": "This new code is quite succinct and expressive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=626"
  },
  {
    "text": "It is worth mentioning, however, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=630"
  },
  {
    "text": "that there are times where you should be cautious. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=632"
  },
  {
    "text": "Let's look at a different example to see why. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=635"
  },
  {
    "text": "This example attempts to return ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=639"
  },
  {
    "text": "the most recent earthquake as a managed object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=641"
  },
  {
    "text": "While the new API makes it really easy to return values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=644"
  },
  {
    "text": "it is not safe to return managed objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=647"
  },
  {
    "text": "that are already registered to a managed object context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=649"
  },
  {
    "text": "It is only valid to refer to such registered objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=653"
  },
  {
    "text": "within the closure of a call to perform. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=656"
  },
  {
    "text": "Instead, if you need to refer to a managed object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=660"
  },
  {
    "text": "between different execution contexts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=664"
  },
  {
    "text": "either make use of the object ID and refetch as needed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=666"
  },
  {
    "text": "or make use of the dictionary representation option ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=669"
  },
  {
    "text": "of the fetch request. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=672"
  },
  {
    "text": "Now before we look at one more example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=675"
  },
  {
    "text": "I'd like to cover a detail that I haven't talked about yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=677"
  },
  {
    "text": "And that detail is the ScheduledTaskType. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=681"
  },
  {
    "text": "So far, every async perform that we have seen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=683"
  },
  {
    "text": "has been in terms of the default value for this option: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=687"
  },
  {
    "text": ".immediate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=690"
  },
  {
    "text": "There is a second option called .enqueued, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=692"
  },
  {
    "text": "and to understand the difference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=694"
  },
  {
    "text": "between these two scheduling approaches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=695"
  },
  {
    "text": "it helps to think about what specifically happens ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=697"
  },
  {
    "text": "inside a managed object context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=699"
  },
  {
    "text": "when you ask to schedule work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=701"
  },
  {
    "text": "As we've seen, .immediate behaves a lot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=703"
  },
  {
    "text": "like a Swift-async-aware version of performAndWait. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=707"
  },
  {
    "text": "If you're running on a different execution context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=710"
  },
  {
    "text": "and ask to await work performed on the background context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=713"
  },
  {
    "text": "you will wait until it is scheduled and completed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=716"
  },
  {
    "text": "If you're already on the same execution context, however, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=725"
  },
  {
    "text": "the work will be optimistically scheduled right away.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=728"
  },
  {
    "text": ".enqueued, on the other hand, is a bit simpler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=733"
  },
  {
    "text": "It simply always just appends the requested work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=736"
  },
  {
    "text": "to the end of the contexts' work set, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=739"
  },
  {
    "text": "regardless of the affinity of the originating call site. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=740"
  },
  {
    "text": "Let's go ahead and look at one more example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=744"
  },
  {
    "text": "All of these async features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=747"
  },
  {
    "text": "can be adopted by you as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=748"
  },
  {
    "text": "Here, I factored the import logic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=751"
  },
  {
    "text": "that we have been talking about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=753"
  },
  {
    "text": "into a new importQuakes function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=754"
  },
  {
    "text": "decorated with the new async keyword. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=757"
  },
  {
    "text": "This function is, in turn, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=760"
  },
  {
    "text": "implemented in terms of other async functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=761"
  },
  {
    "text": "Now anyone can await upon this new function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=766"
  },
  {
    "text": "to take advantage of the new concurrency features in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=769"
  },
  {
    "text": "Let's summarize what we've seen so far. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=772"
  },
  {
    "text": "Taken altogether, this new API brings the support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=775"
  },
  {
    "text": "for Swift's structured concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=778"
  },
  {
    "text": "right into Core Data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=780"
  },
  {
    "text": "The new variants of the perform API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=782"
  },
  {
    "text": "are just Swift concurrency-aware versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=784"
  },
  {
    "text": "of the existing Core Data API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=786"
  },
  {
    "text": "you already know and love. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=789"
  },
  {
    "text": "We strongly encourage you to take advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=791"
  },
  {
    "text": "of this new API in your applications.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=793"
  },
  {
    "text": "Further, NSManagedObjectContext is not ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=797"
  },
  {
    "text": "the only type in Core Data that supports performing tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=801"
  },
  {
    "text": "within its protected concurrency domain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=803"
  },
  {
    "text": "We're also adding similar API to both ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=805"
  },
  {
    "text": "NSPersistentContainer and NSPersistentStoreCoordinator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=808"
  },
  {
    "text": "The general shape and behavior of these APIs are quite similar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=811"
  },
  {
    "text": "to what I've already described. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=815"
  },
  {
    "text": "But with all that concurrent power, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=816"
  },
  {
    "text": "I would be remiss to not offer the advice ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=819"
  },
  {
    "text": "of using existing debugging tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=821"
  },
  {
    "text": "available at your disposal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=823"
  },
  {
    "text": "Of course, the Xcode-provided ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=825"
  },
  {
    "text": "address and thread sanitizers are incredibly helpful ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=827"
  },
  {
    "text": "for catching bugs you might not even know existed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=830"
  },
  {
    "text": "These can both be found in the Diagnostics pane ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=832"
  },
  {
    "text": "of the scheme editor's Run settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=836"
  },
  {
    "text": "Each sanitizer detects different kinds of issues, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=839"
  },
  {
    "text": "including validating safe memory use assumptions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=841"
  },
  {
    "text": "and appropriate use of data from multiple threads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=844"
  },
  {
    "text": "It's always a good idea to qualify your applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=848"
  },
  {
    "text": "and their associated tests with both sanitizers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=850"
  },
  {
    "text": "before you release your software to your community of users.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=853"
  },
  {
    "text": "And while the sanitizers are useful in all contexts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=857"
  },
  {
    "text": "I also wanna highlight that Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=860"
  },
  {
    "text": "provides a special runtime flag ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=862"
  },
  {
    "text": "that you can enable to get more domain-specific help. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=864"
  },
  {
    "text": "By enabling this option, Core Data will turn on a number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=867"
  },
  {
    "text": "of useful assertions to validate internal locks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=871"
  },
  {
    "text": "and confirm appropriate use of various Core Data types.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=874"
  },
  {
    "text": "Adopting Swift concurrency support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=880"
  },
  {
    "text": "is not the only change made to Core Data this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=882"
  },
  {
    "text": "Every new API that we are introducing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=884"
  },
  {
    "text": "from CloudKit sharing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=887"
  },
  {
    "text": "to the new Spotlight integration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=889"
  },
  {
    "text": "has been crafted with its presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=890"
  },
  {
    "text": "in Swift in mind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=893"
  },
  {
    "text": "This year, we have a separate session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=895"
  },
  {
    "text": "for each of these topics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=897"
  },
  {
    "text": "and I encourage you to check them out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=898"
  },
  {
    "text": "We additionally made a pass throughout the entire framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=901"
  },
  {
    "text": "to identify other places ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=904"
  },
  {
    "text": "where we can make improvements in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=905"
  },
  {
    "text": "and I'd like to show you a few of these now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=907"
  },
  {
    "text": "starting with the kinds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=911"
  },
  {
    "text": "of different persistent stores that we support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=912"
  },
  {
    "text": "Recall, persistent stores describe ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=914"
  },
  {
    "text": "how you physically want to store your customers' data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=917"
  },
  {
    "text": "Core Data currently provides four such stores: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=920"
  },
  {
    "text": "XML, binary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=923"
  },
  {
    "text": "in-memory, and SQLite. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=925"
  },
  {
    "text": "And you use these identifiers all the time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=927"
  },
  {
    "text": "New this year, we've gone ahead ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=931"
  },
  {
    "text": "and gave these more natural names in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=933"
  },
  {
    "text": "The existing names will continue to work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=936"
  },
  {
    "text": "but the new API that consumes these ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=938"
  },
  {
    "text": "will be a lot more ergonomic to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=941"
  },
  {
    "text": "due to the shorter names ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=942"
  },
  {
    "text": "and ability to autocomplete these symbols. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=944"
  },
  {
    "text": "Of course, persistent stores are not ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=947"
  },
  {
    "text": "the only thing in Core Data that concerns itself with types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=949"
  },
  {
    "text": "After all, the framework is all about storing typed data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=953"
  },
  {
    "text": "and such types are described with attribute descriptions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=956"
  },
  {
    "text": "And this year, we're adding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=960"
  },
  {
    "text": "a new extensible enumeration to attribute description ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=962"
  },
  {
    "text": "that provides a much more natural syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=964"
  },
  {
    "text": "for working with their types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=967"
  },
  {
    "text": "Let's take a look at these in action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=969"
  },
  {
    "text": "by writing a unit test that can validate that our runtime model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=970"
  },
  {
    "text": "matches what we designed in the Xcode model builder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=973"
  },
  {
    "text": "For simplicity, we'll just try to validate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=977"
  },
  {
    "text": "a single runtime type defined by our earthquake object model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=980"
  },
  {
    "text": "but you can imagine how this would scale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=983"
  },
  {
    "text": "This might seem like a small test to write, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=986"
  },
  {
    "text": "but it's a good thing to validate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=988"
  },
  {
    "text": "as it could speed up more interesting diagnoses ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=990"
  },
  {
    "text": "in the future. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=992"
  },
  {
    "text": "To write this test, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=994"
  },
  {
    "text": "we'll write a quick helper function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=995"
  },
  {
    "text": "in terms of the new attribute type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=997"
  },
  {
    "text": "Let's go ahead and describe this function now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=999"
  },
  {
    "text": "We'll start with the signature, which expects an attribute name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1002"
  },
  {
    "text": "the entity description that we care about, and the type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1005"
  },
  {
    "text": "described in terms of the new AttributeType enumeration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1008"
  },
  {
    "text": "The definition of this utility is fairly straightforward. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1013"
  },
  {
    "text": "We first validate that we have an attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1016"
  },
  {
    "text": "with the provided name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1018"
  },
  {
    "text": "failing the test if we can't find it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1020"
  },
  {
    "text": "And then we validate that the type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1023"
  },
  {
    "text": "of the attribute is as expected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1024"
  },
  {
    "text": "And that's really all there is to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1026"
  },
  {
    "text": "We could repeat this for each entity and property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1028"
  },
  {
    "text": "and enjoy peace of mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1031"
  },
  {
    "text": "that our runtime behavior matches the model we defined.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1033"
  },
  {
    "text": "And this is just a sampling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1037"
  },
  {
    "text": "of some of the ergonomic improvements that we've made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1038"
  },
  {
    "text": "to Core Data enumerations in Swift this year.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1040"
  },
  {
    "text": "Up till now, I've been focusing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1046"
  },
  {
    "text": "on a lot of lower-level framework interactions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1048"
  },
  {
    "text": "and how they manifest in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1050"
  },
  {
    "text": "but what about presenting data to your users? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1052"
  },
  {
    "text": "In 2020, we introduced a number of conveniences ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1055"
  },
  {
    "text": "for working with Core Data in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1058"
  },
  {
    "text": "And now, my colleague, Scott, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1061"
  },
  {
    "text": "has quite a bit to share with you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1062"
  },
  {
    "text": "about the new enhancements we are introducing this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1064"
  },
  {
    "text": "Scott? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1067"
  },
  {
    "text": "Thanks, Michael! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1068"
  },
  {
    "text": "There are a bunch of improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1069"
  },
  {
    "text": "to the experience of using Core Data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1071"
  },
  {
    "text": "with SwiftUI this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1072"
  },
  {
    "text": "starting with lazy entity resolution in fetch requests, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1074"
  },
  {
    "text": "which relaxes the requirement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1077"
  },
  {
    "text": "that apps have their Core Data stacks set up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1079"
  },
  {
    "text": "before they construct their views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1081"
  },
  {
    "text": "Also this year, fetch requests pick up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1083"
  },
  {
    "text": "dynamic configuration for their sort descriptors and predicates.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1085"
  },
  {
    "text": "And there's a new kind of fetch request in town ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1090"
  },
  {
    "text": "that supports sectioned fetching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1092"
  },
  {
    "text": "I'm going to walk through each of these ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1095"
  },
  {
    "text": "using our Earthquakes sample app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1097"
  },
  {
    "text": "that Michael mentioned earlier in the talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1098"
  },
  {
    "text": "starting with lazy entity resolution.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1100"
  },
  {
    "text": "Probably in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1104"
  },
  {
    "text": "you have some code like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1106"
  },
  {
    "text": "This container property here isn't really necessary ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1108"
  },
  {
    "text": "to support the code in this type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1112"
  },
  {
    "text": "or even the broader app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1113"
  },
  {
    "text": "All that stuff gets what it needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1115"
  },
  {
    "text": "from the QuakesProvider type directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1117"
  },
  {
    "text": "No, this property exists ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1119"
  },
  {
    "text": "to make sure the Core Data stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1121"
  },
  {
    "text": "has been set up before any of the views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1122"
  },
  {
    "text": "in the environment try to refer to any entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1124"
  },
  {
    "text": "before the model has been loaded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1127"
  },
  {
    "text": "See here ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1129"
  },
  {
    "text": "that the environment view modifier is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1131"
  },
  {
    "text": "after ContentView has been initialized. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1135"
  },
  {
    "text": "This trick isn't necessary anymore ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1137"
  },
  {
    "text": "when deploying against this year's SDKs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1139"
  },
  {
    "text": "The FetchRequest property wrapper now looks up entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1142"
  },
  {
    "text": "by name lazily at fetch-time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1144"
  },
  {
    "text": "at which point the environment has guaranteed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1146"
  },
  {
    "text": "that the Core Data stack has been set up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1148"
  },
  {
    "text": "so it's now safe to delete this property...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1151"
  },
  {
    "text": "And just refer to...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1156"
  },
  {
    "text": "the QuakesProvider shared container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1160"
  },
  {
    "text": "directly in the environment call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1162"
  },
  {
    "text": "Moving on to some new APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1165"
  },
  {
    "text": "FetchRequest now supports dynamic configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1168"
  },
  {
    "text": "There are two new properties on the wrapped value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1171"
  },
  {
    "text": "for directly changing the request's predicate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1174"
  },
  {
    "text": "as well as its sort descriptors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1176"
  },
  {
    "text": "which are expressed both ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1178"
  },
  {
    "text": "with the NSSortDescriptors that you're used to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1180"
  },
  {
    "text": "as well as a new SortDescriptor value type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1182"
  },
  {
    "text": "that provides more convenience and safety ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1184"
  },
  {
    "text": "when fetching entities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1186"
  },
  {
    "text": "with automatically generated managed object subclasses.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1187"
  },
  {
    "text": "And finally, there's a configuration binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1193"
  },
  {
    "text": "with the same set of properties as the wrapped value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1195"
  },
  {
    "text": "for easier integration with views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1197"
  },
  {
    "text": "Before this new API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1200"
  },
  {
    "text": "I would've had to design my views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1202"
  },
  {
    "text": "so the sort and predicate parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1204"
  },
  {
    "text": "were passed through a view's initializer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1205"
  },
  {
    "text": "but that made it really tricky ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1208"
  },
  {
    "text": "to support things like configuring my fetch request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1209"
  },
  {
    "text": "using controls in a toolbar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1211"
  },
  {
    "text": "This friction is eliminated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1214"
  },
  {
    "text": "by these new dynamic configuration properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1216"
  },
  {
    "text": "and I'd love to show you how to use them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1218"
  },
  {
    "text": "by adding sorting and filtering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1220"
  },
  {
    "text": "to the Earthquakes sample app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1222"
  },
  {
    "text": "Let's look at sort descriptors first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1223"
  },
  {
    "text": "By default, the Earthquakes app sorts by recency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1226"
  },
  {
    "text": "but I'd also like to order them by magnitude, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1229"
  },
  {
    "text": "so I'm going to add a menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1231"
  },
  {
    "text": "that lets me control the results' order.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1232"
  },
  {
    "text": "I'll start by adding a static array of tuples...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1236"
  },
  {
    "text": "containing the sort descriptors I'd like to support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1241"
  },
  {
    "text": "as well as names for them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1244"
  },
  {
    "text": "See here that they're also using the new SortDescriptor type.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1246"
  },
  {
    "text": "I'll also want a bit of state to track ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1252"
  },
  {
    "text": "which sort order I am currently using. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1255"
  },
  {
    "text": "I've already created a type for this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1258"
  },
  {
    "text": "so I'll add it as a property of the content view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1261"
  },
  {
    "text": "Now I'll add a toolbar menu to the list view...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1265"
  },
  {
    "text": "That modifies the selected sort ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1271"
  },
  {
    "text": "as well as an onChange modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1273"
  },
  {
    "text": "that updates the fetch request's sort descriptors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1275"
  },
  {
    "text": "Now in the preview, we can see the new menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1280"
  },
  {
    "text": "and I can use it to sort the earthquakes by magnitude. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1284"
  },
  {
    "text": "Great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1287"
  },
  {
    "text": "Now to add filtering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1289"
  },
  {
    "text": "I'd like to filter based on the earthquake's place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1292"
  },
  {
    "text": "The first thing I need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1296"
  },
  {
    "text": "is some state for the search field's text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1299"
  },
  {
    "text": "And I'll make ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1302"
  },
  {
    "text": "a binding property...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1304"
  },
  {
    "text": "for the search field that updates the fetch request.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1308"
  },
  {
    "text": "With those in place, all I need is the UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1316"
  },
  {
    "text": "Conveniently...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1319"
  },
  {
    "text": "searchable takes a binding to a string, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1324"
  },
  {
    "text": "so we can just plop that right in here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1326"
  },
  {
    "text": "Now in our preview, we can narrow down ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1331"
  },
  {
    "text": "all the earthquakes near a place matching a sandwich ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1333"
  },
  {
    "text": "by just typing \"sandwich\" in this new field here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1336"
  },
  {
    "text": "And that's dynamic configuration for FetchRequest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1342"
  },
  {
    "text": "Another commonly requested piece of functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1345"
  },
  {
    "text": "is support for sectioned fetching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1348"
  },
  {
    "text": "which arrives this year as a new property wrapper type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1350"
  },
  {
    "text": "called SectionedFetchRequest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1352"
  },
  {
    "text": "This type supports the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1355"
  },
  {
    "text": "new dynamic configuration properties as FetchRequest, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1357"
  },
  {
    "text": "but it gets initialized with an additional parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1360"
  },
  {
    "text": "a key path to a property that identifies the section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1363"
  },
  {
    "text": "a lot like NSFetchedResultsController.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1366"
  },
  {
    "text": "But unlike the fetched results controller, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1370"
  },
  {
    "text": "the property that identifies the section ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1373"
  },
  {
    "text": "can have any type you like, so long as it's hashable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1375"
  },
  {
    "text": "This gets encoded in the type system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1377"
  },
  {
    "text": "using an additional generic parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1379"
  },
  {
    "text": "on SectionedFetchRequest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1381"
  },
  {
    "text": "Finally, this new type wraps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1385"
  },
  {
    "text": "a two-dimensional result type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1387"
  },
  {
    "text": "SectionedFetchResults is a collection of sections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1389"
  },
  {
    "text": "each of which is itself a collection of results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1392"
  },
  {
    "text": "Each section also has a property with the section identifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1395"
  },
  {
    "text": "This is really easy to adopt, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1401"
  },
  {
    "text": "so I'm going to add sectioned fetching ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1403"
  },
  {
    "text": "to the Earthquakes app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1405"
  },
  {
    "text": "First, I update my FetchRequest declaration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1406"
  },
  {
    "text": "Quake already has a property for day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1414"
  },
  {
    "text": "so I'm going to use that for the sectioning key path.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1417"
  },
  {
    "text": "Next, I need to update the body property...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1421"
  },
  {
    "text": "To match the new sectioned results type.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1429"
  },
  {
    "text": "The outer loop here iterates over the sections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1433"
  },
  {
    "text": "so I'm emitting a Section view here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1437"
  },
  {
    "text": "and each section itself is a collection of Quakes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1440"
  },
  {
    "text": "so this inner ForEach iterates over the section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1442"
  },
  {
    "text": "just like I was iterating over the results before.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1446"
  },
  {
    "text": "If we look over at the preview, I've now got earthquakes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1452"
  },
  {
    "text": "ordered by time and sectioned by day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1455"
  },
  {
    "text": "And SwiftUI even gives me automatic support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1458"
  },
  {
    "text": "for collapsing sections.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1461"
  },
  {
    "text": "This new SectionedFetchRequest type supports the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1467"
  },
  {
    "text": "dynamic configuration properties as FetchRequest ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1470"
  },
  {
    "text": "as well as an additional configuration property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1473"
  },
  {
    "text": "for the section identifier key path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1475"
  },
  {
    "text": "This is super important because it's not actually safe ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1479"
  },
  {
    "text": "for us to change the sorting anymore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1482"
  },
  {
    "text": "It could cause the sections to be discontiguous ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1484"
  },
  {
    "text": "because time and earthquake magnitude ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1486"
  },
  {
    "text": "aren't perfectly correlated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1488"
  },
  {
    "text": "which is probably for the best. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1490"
  },
  {
    "text": "To fix this, I need to update the sorts up top...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1493"
  },
  {
    "text": "so each has a corresponding section identifier key path.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1499"
  },
  {
    "text": "Next, down in the toolbar...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1505"
  },
  {
    "text": "I need to update the section identifier key path ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1509"
  },
  {
    "text": "each time I update the sort descriptors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1512"
  },
  {
    "text": "But here's the important part. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1516"
  },
  {
    "text": "Changes to the request are committed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1519"
  },
  {
    "text": "whenever the results getter is called, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1521"
  },
  {
    "text": "so to update both the sorting and the sectioning safely...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1523"
  },
  {
    "text": "I need to update the configuration on a reference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1529"
  },
  {
    "text": "to the results that I've pulled into a local.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1532"
  },
  {
    "text": "Now in the preview, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1536"
  },
  {
    "text": "we can see that changing the order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1537"
  },
  {
    "text": "also changes the sectioning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1540"
  },
  {
    "text": "We can flip between earthquakes ordered by time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1542"
  },
  {
    "text": "sectioned by day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1545"
  },
  {
    "text": "and earthquakes ordered and sectioned by magnitude.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1546"
  },
  {
    "text": "And there we have it: lazy stack initialization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1554"
  },
  {
    "text": "dynamic configuration, and sectioned fetching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1558"
  },
  {
    "text": "all easily applied to an existing app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1561"
  },
  {
    "text": "using iOS 15 and macOS Monterey.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1563"
  },
  {
    "text": "So, to recap, Core Data is your one-stop shop ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1567"
  },
  {
    "text": "for managing your app's data persistence needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1570"
  },
  {
    "text": "across all of Apple's platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1572"
  },
  {
    "text": "It harnesses the new concurrency features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1575"
  },
  {
    "text": "available in Swift through a new perform API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1577"
  },
  {
    "text": "and still has powerful thread safety debugging built right in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1580"
  },
  {
    "text": "It's got new enumeration interfaces that make store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1584"
  },
  {
    "text": "and attribute types even more natural to use in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1587"
  },
  {
    "text": "plus CloudKit sharing and Spotlight integration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1590"
  },
  {
    "text": "And it's easier than ever to connect your data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1594"
  },
  {
    "text": "to your views using SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1596"
  },
  {
    "text": "with dynamic configuration and sectioned fetching.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1598"
  },
  {
    "text": "There's lots more new stuff to learn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1603"
  },
  {
    "text": "related to these topics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1605"
  },
  {
    "text": "We suggest checking out the collections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1606"
  },
  {
    "text": "\"Simplify with SwiftUI and Meet Swift Concurrency.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1609"
  },
  {
    "text": "And that's it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1612"
  },
  {
    "text": "I'm really looking forward to seeing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1613"
  },
  {
    "text": "what you all build with these new APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1615"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10017/?time=1617"
  }
]