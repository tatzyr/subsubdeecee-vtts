[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=0"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=3"
  },
  {
    "text": "Hello, my name is Brett Cato, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=9"
  },
  {
    "text": "and I’m an engineer on the System Experience team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=11"
  },
  {
    "text": "Today we’re going to be talking about principles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=14"
  },
  {
    "text": "of great widgets, diving into some hot topics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=17"
  },
  {
    "text": "to help you build the best widgets possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=20"
  },
  {
    "text": "In iOS 14, we introduced WidgetKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=23"
  },
  {
    "text": "WidgetKit allows you to create beautiful, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=26"
  },
  {
    "text": "dynamic, multiplatform widgets right on the user’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=28"
  },
  {
    "text": "Home Screen on iOS, iPadOS, and macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=30"
  },
  {
    "text": "Now, before we get started, if you missed any of the talks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=37"
  },
  {
    "text": "from WWDC 2020, there are some really great ones, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=40"
  },
  {
    "text": "like “Meet WidgetKit,” which provides an introduction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=43"
  },
  {
    "text": "to the WidgetKit framework and its core concepts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=46"
  },
  {
    "text": "“Widgets code-along” is a three-part series ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=50"
  },
  {
    "text": "of building a widget with increasing complexity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=53"
  },
  {
    "text": "from basic to advanced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=55"
  },
  {
    "text": "“Building SwiftUI views for widgets” details ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=57"
  },
  {
    "text": "how to get the most out of SwiftUI to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=60"
  },
  {
    "text": "adaptable views for your widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=62"
  },
  {
    "text": "Lastly, “Design great widgets” explores design considerations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=64"
  },
  {
    "text": "from our human interface group with many, many examples.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=68"
  },
  {
    "text": "Today we’re gonna touch on two topics for great widgets: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=73"
  },
  {
    "text": "keeping them relevant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=77"
  },
  {
    "text": "and enabling widget customization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=79"
  },
  {
    "text": "So let’s get started with relevance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=82"
  },
  {
    "text": "There’s three types of relevance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=85"
  },
  {
    "text": "that we’re gonna discuss in depth ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=87"
  },
  {
    "text": "to make sure your widget is up to date ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=88"
  },
  {
    "text": "and can adapt to its environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=90"
  },
  {
    "text": "We’re gonna talk about time, presentation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=93"
  },
  {
    "text": "and location relevance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=96"
  },
  {
    "text": "At the heart of WidgetKit is the timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=99"
  },
  {
    "text": "This is the core mechanism of Widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=101"
  },
  {
    "text": "to stay relevant throughout the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=103"
  },
  {
    "text": "A timeline is composed of one or more timeline entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=105"
  },
  {
    "text": "In this example, you can see three such entries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=109"
  },
  {
    "text": "one at 9:00 AM, 9:30 AM, and 10:00 AM. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=111"
  },
  {
    "text": "Now, when the system asks your widget for a timeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=116"
  },
  {
    "text": "the resulting timeline will be archived and its entries ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=119"
  },
  {
    "text": "rendered at specific times you specify into the future. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=122"
  },
  {
    "text": "This lets the system have your user interface ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=126"
  },
  {
    "text": "at a moment’s notice to be displayed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=128"
  },
  {
    "text": "right when the user needs it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=130"
  },
  {
    "text": "Let’s look at some examples of timelines, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=132"
  },
  {
    "text": "starting from the most simplistic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=134"
  },
  {
    "text": "and look at the type of content that might be in them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=136"
  },
  {
    "text": "Here’s an example of the simplest timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=140"
  },
  {
    "text": "with just a single entry: Screen Time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=143"
  },
  {
    "text": "Now, because Screen Time can’t predict or forecast data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=146"
  },
  {
    "text": "into the future ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=148"
  },
  {
    "text": "and it’s strictly based on the statistical history ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=150"
  },
  {
    "text": "of how the user’s device has been used, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=152"
  },
  {
    "text": "it really can’t leverage multiple entries ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=155"
  },
  {
    "text": "in its timeline very well, so it just uses a single entry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=157"
  },
  {
    "text": "This is the most simplistic timeline that you can have. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=160"
  },
  {
    "text": "That said, though, not all widgets need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=163"
  },
  {
    "text": "to be single entry, and in fact, in most cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=166"
  },
  {
    "text": "I’d encourage you to consider and question why you aren’t ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=169"
  },
  {
    "text": "offering multiple entries in your timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=171"
  },
  {
    "text": "If you have forward-looking content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=173"
  },
  {
    "text": "have important dates or deadlines, or can forecast ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=176"
  },
  {
    "text": "your content into the future, your widget should really be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=179"
  },
  {
    "text": "taking advantage of multiple entries in your timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=182"
  },
  {
    "text": "Here’s another example from Weather. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=185"
  },
  {
    "text": "As you can see, Weather’s timeline provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=187"
  },
  {
    "text": "multiple entries to last hours throughout the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=190"
  },
  {
    "text": "Now, the first entry here is the most accurate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=193"
  },
  {
    "text": "because it represents the current weather, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=195"
  },
  {
    "text": "and all the other subsequent entries represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=197"
  },
  {
    "text": "forecast data at times later in the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=200"
  },
  {
    "text": "This extra forecast data is super useful ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=203"
  },
  {
    "text": "as widget reloads aren’t guaranteed to reload ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=206"
  },
  {
    "text": "at the exact time that you specify. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=208"
  },
  {
    "text": "And if a reload doesn’t hit that target date ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=210"
  },
  {
    "text": "exactly when it’s desired, then now the system has ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=213"
  },
  {
    "text": "additional forecasted content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=216"
  },
  {
    "text": "to tide over the user experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=219"
  },
  {
    "text": "Here’s an example from Photos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=222"
  },
  {
    "text": "You can see that the Photos timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=224"
  },
  {
    "text": "provides a number of personal and relevant photos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=226"
  },
  {
    "text": "to appear at specific times of the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=229"
  },
  {
    "text": "For me, these are some really, really great memories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=231"
  },
  {
    "text": "And now, while the widget reloads ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=235"
  },
  {
    "text": "only a couple times a day, it really gives the feeling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=236"
  },
  {
    "text": "of being lively throughout by presenting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=239"
  },
  {
    "text": "new and fresh content from these multiple timeline entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=241"
  },
  {
    "text": "As you can see here, even if you don’t have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=245"
  },
  {
    "text": "data that’s forecastable like weather, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=248"
  },
  {
    "text": "as in this example with Photos, you can still incorporate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=250"
  },
  {
    "text": "content that’s relevant to the user in a way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=253"
  },
  {
    "text": "that can surprise and delight by leveraging ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=255"
  },
  {
    "text": "these multiple entries in your timeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=258"
  },
  {
    "text": "Now, because some widgets are viewed more than others, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=262"
  },
  {
    "text": "we decided to give widgets a fairness factor for updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=264"
  },
  {
    "text": "We call this an update budget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=267"
  },
  {
    "text": "Budgets are allocated and accumulated through the day, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=270"
  },
  {
    "text": "and they’re heavily influenced by user viewing habits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=273"
  },
  {
    "text": "A frequently viewed widget can be expected to receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=277"
  },
  {
    "text": "somewhere in the ballpark of around 40 to 70 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=280"
  },
  {
    "text": "background updates per day, which translates to an update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=282"
  },
  {
    "text": "roughly every 15 to 30 minutes if spaced evenly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=286"
  },
  {
    "text": "during the normal hours that a user is awake. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=289"
  },
  {
    "text": "However, of course not all reloads have to be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=292"
  },
  {
    "text": "evenly spaced like this, and our goal was to enable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=295"
  },
  {
    "text": "and support a varied update cadence ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=297"
  },
  {
    "text": "for different requirements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=299"
  },
  {
    "text": "For example, maybe you have a sports widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=301"
  },
  {
    "text": "that’s largely idle until an upcoming game ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=303"
  },
  {
    "text": "for a favorite team, and then it can receive a burst ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=306"
  },
  {
    "text": "of score updates before, during, and even after the game.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=308"
  },
  {
    "text": "WidgetKit’s smart, and it may withhold updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=314"
  },
  {
    "text": "when the user isn’t using the device ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=316"
  },
  {
    "text": "for extended periods of time like when the user’s sleeping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=318"
  },
  {
    "text": "Otherwise, widget updates may be withheld ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=321"
  },
  {
    "text": "until budgets become available for a particular widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=324"
  },
  {
    "text": "All that said, though, reloads are not ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=327"
  },
  {
    "text": "an every second operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=330"
  },
  {
    "text": "Widgets are not about creating ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=331"
  },
  {
    "text": "a live running experience on the Home Screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=333"
  },
  {
    "text": "Now, there’s numerous ways that your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=336"
  },
  {
    "text": "will refresh throughout the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=339"
  },
  {
    "text": "And we’re gonna walk through each of these briefly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=341"
  },
  {
    "text": "to understand what they are, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=343"
  },
  {
    "text": "how they work, and how they function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=344"
  },
  {
    "text": "relative to the budget that we just introduced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=346"
  },
  {
    "text": "The first is the TimelineReloadPolicy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=350"
  },
  {
    "text": "which is API in WidgetKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=352"
  },
  {
    "text": "This is the core mechanism ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=354"
  },
  {
    "text": "for your reloads to occur automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=356"
  },
  {
    "text": "When you provide a timeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=359"
  },
  {
    "text": "you also provide a reload policy alongside it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=360"
  },
  {
    "text": "This reload policy informs the system when you’d like ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=364"
  },
  {
    "text": "to automatically refresh your widget in the background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=367"
  },
  {
    "text": "These automatic updates are budgeted and debited ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=370"
  },
  {
    "text": "from your widget’s current available budget.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=373"
  },
  {
    "text": "Next is the WidgetCenter reload API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=377"
  },
  {
    "text": "This is an API to refresh your widget when events occur ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=380"
  },
  {
    "text": "that would invalidate your widget’s existing data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=384"
  },
  {
    "text": "Now, normally, requests using this API would ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=386"
  },
  {
    "text": "consume available budget, meaning that updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=389"
  },
  {
    "text": "won’t occur until budget is available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=392"
  },
  {
    "text": "However, there are a few situational exceptions that will ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=394"
  },
  {
    "text": "make these reloads occur both immediately and budget-free. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=397"
  },
  {
    "text": "These are when your container app is foreground to the user ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=402"
  },
  {
    "text": "or when your app is participating in a user session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=405"
  },
  {
    "text": "like Navigation or Now Playing audio.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=408"
  },
  {
    "text": "This API is really supplemental to the automatic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=412"
  },
  {
    "text": "background updates from the TimelineReloadPolicy API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=415"
  },
  {
    "text": "Your widgets can also update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=419"
  },
  {
    "text": "when a significant location change has occurred. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=420"
  },
  {
    "text": "When the system detects a significant location change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=423"
  },
  {
    "text": "and your widget uses location, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=426"
  },
  {
    "text": "the system will grant you a budget-free update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=428"
  },
  {
    "text": "This refresh occurs when the user next views your widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=430"
  },
  {
    "text": "so that location can be resolved appropriately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=433"
  },
  {
    "text": "Now, note that this is not guaranteed to happen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=437"
  },
  {
    "text": "right when the location change occurs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=439"
  },
  {
    "text": "but, rather, the next time the user views the widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=441"
  },
  {
    "text": "We’ll talk a little bit more on location later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=444"
  },
  {
    "text": "The system can refresh your widget, too, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=447"
  },
  {
    "text": "if its presentation environment changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=449"
  },
  {
    "text": "For example, maybe the user changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=451"
  },
  {
    "text": "an Accessibility preference like dynamic text or bold text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=453"
  },
  {
    "text": "there’s a language or region change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=457"
  },
  {
    "text": "an iCloud or App Store account change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=459"
  },
  {
    "text": "significant time change, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=461"
  },
  {
    "text": "Lastly, due to budgeting, if a user has a widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=464"
  },
  {
    "text": "that’s rarely seen, it may not receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=467"
  },
  {
    "text": "as many updates as you, the developer, may prefer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=470"
  },
  {
    "text": "The system knows what dates are in your timeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=473"
  },
  {
    "text": "what your preferred refresh time is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=475"
  },
  {
    "text": "and general view history from the user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=477"
  },
  {
    "text": "The system may grant a budget-free reload ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=480"
  },
  {
    "text": "if it thinks the data may be stale ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=482"
  },
  {
    "text": "when it’s viewed by the user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=484"
  },
  {
    "text": "Of course, all these system-initiated updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=485"
  },
  {
    "text": "are always budget-free. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=488"
  },
  {
    "text": "As we learned just a moment ago, each timeline comes paired ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=490"
  },
  {
    "text": "with a reload policy that describes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=493"
  },
  {
    "text": "when it should automatically update in the background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=495"
  },
  {
    "text": "WidgetKit offers three choices here: atEnd, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=498"
  },
  {
    "text": "afterDate, and never. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=501"
  },
  {
    "text": "Which of these three reload policies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=504"
  },
  {
    "text": "are appropriate for your widget? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=506"
  },
  {
    "text": "Let’s dive in to talk about each one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=508"
  },
  {
    "text": "with some examples for context, and we’ll talk about gotchas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=510"
  },
  {
    "text": "on what to be mindful about with each one.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=513"
  },
  {
    "text": "The first policy we’ll discuss is the atEnd reload policy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=517"
  },
  {
    "text": "This policy will mark your widget eligible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=521"
  },
  {
    "text": "to be refreshed when the timeline comes to an end, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=523"
  },
  {
    "text": "that is, of course, when the last entry becomes relevant. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=525"
  },
  {
    "text": "In this case, it’s at 10:30 AM. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=529"
  },
  {
    "text": "Note, too, that this time is simply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=533"
  },
  {
    "text": "the time that the widget becomes eligible for refreshing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=535"
  },
  {
    "text": "and it doesn’t guarantee that it’ll refresh ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=538"
  },
  {
    "text": "exactly at this time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=540"
  },
  {
    "text": "Further, if using atEnd with widgets that have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=543"
  },
  {
    "text": "single-entry timelines, like the Screen Time example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=546"
  },
  {
    "text": "we talked about before, the system will choose ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=548"
  },
  {
    "text": "an appropriate time for your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=551"
  },
  {
    "text": "atEnd is recommended if your widget already has content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=554"
  },
  {
    "text": "that extends beyond the life of its current timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=558"
  },
  {
    "text": "I kind of like to think about it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=561"
  },
  {
    "text": "like viewing windows into your content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=562"
  },
  {
    "text": "Let’s look at an example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=564"
  },
  {
    "text": "Outlined here is the current timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=567"
  },
  {
    "text": "for the Calendar widget on June 7th. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=569"
  },
  {
    "text": "It has four entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=571"
  },
  {
    "text": "I’ve included its past and future content to help ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=573"
  },
  {
    "text": "showcase the windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=576"
  },
  {
    "text": "And as we change the timeline for June 8th, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=578"
  },
  {
    "text": "you can see what I mean ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=581"
  },
  {
    "text": "by viewing a window into its content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=582"
  },
  {
    "text": "And again for the timeline for June 9th. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=586"
  },
  {
    "text": "We’re just changing the perspective on the data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=588"
  },
  {
    "text": "that’s already available and provided by the user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=590"
  },
  {
    "text": "This type of content is really where using ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=593"
  },
  {
    "text": "the atEnd policy shines.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=596"
  },
  {
    "text": "Now, some examples of widgets that use the atEnd policy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=600"
  },
  {
    "text": "include Reminders, Calendar, Photos, Tips, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=603"
  },
  {
    "text": "Again, these are all widgets with endless content well known ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=607"
  },
  {
    "text": "into the future where you can simply view a window into it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=610"
  },
  {
    "text": "It’s not really a great fit for single-entry timelines ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=614"
  },
  {
    "text": "because the system’s gonna choose a reload time for you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=618"
  },
  {
    "text": "and it’s probably not what you want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=620"
  },
  {
    "text": "AtEnd is also not recommended if your timeline has ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=623"
  },
  {
    "text": "projected content that loses relevance or accuracy over time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=626"
  },
  {
    "text": "We simply want your content to be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=630"
  },
  {
    "text": "the most relevant that it can be, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=632"
  },
  {
    "text": "and if we wait until the end of the timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=634"
  },
  {
    "text": "when things are the least relevant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=636"
  },
  {
    "text": "to become eligible for updating, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=638"
  },
  {
    "text": "then it just doesn’t lead to the best user experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=640"
  },
  {
    "text": "So that’s atEnd. Now, let’s talk about afterDate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=643"
  },
  {
    "text": "The afterDate reload policy makes your widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=647"
  },
  {
    "text": "eligible for reloading after the date that’s specified. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=650"
  },
  {
    "text": "With afterDate, you’re really in full control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=653"
  },
  {
    "text": "of the eligibility time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=656"
  },
  {
    "text": "In this example, let’s pretend the timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=658"
  },
  {
    "text": "is valid from 9:00 AM to roughly 11:00 AM. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=660"
  },
  {
    "text": "A widget reload policy date of 9:30 AM was chosen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=664"
  },
  {
    "text": "because the widget’s forecast data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=667"
  },
  {
    "text": "starts to lose accuracy around 9:45 or so. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=669"
  },
  {
    "text": "This gives the widget plenty of runway after 9:30 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=672"
  },
  {
    "text": "to still show its forecast data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=675"
  },
  {
    "text": "even if it’s not reloaded immediately at 9:30.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=677"
  },
  {
    "text": "afterDate is most appropriate for content that can change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=681"
  },
  {
    "text": "unpredictably or unexpectedly throughout the day ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=684"
  },
  {
    "text": "as well as for data whose accuracy or relevance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=688"
  },
  {
    "text": "changes periodically.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=690"
  },
  {
    "text": "Some examples of widgets that use afterDate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=693"
  },
  {
    "text": "include Stocks, Weather, News, Mail, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=696"
  },
  {
    "text": "These are all widgets with content that can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=700"
  },
  {
    "text": "change unpredictably or unexpectedly through the day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=703"
  },
  {
    "text": "Now, with afterDate, you have to really be careful ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=707"
  },
  {
    "text": "of a few potential issues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=709"
  },
  {
    "text": "Be cautious of near-immediate reloads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=712"
  },
  {
    "text": "It can be valid to specify a date a minute or so away ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=715"
  },
  {
    "text": "but usually only for very narrow windows of time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=718"
  },
  {
    "text": "Asking for too many refreshes at this level of resolution ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=721"
  },
  {
    "text": "can starve yourself of reloads later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=724"
  },
  {
    "text": "Also be careful if you align widgets refresh dates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=728"
  },
  {
    "text": "across devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=731"
  },
  {
    "text": "For example, the U.S. Stock Market opens ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=732"
  },
  {
    "text": "at 9:30 AM on the East Coast ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=735"
  },
  {
    "text": "and you schedule a refresh at exactly 9:30 AM ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=737"
  },
  {
    "text": "to fetch that initial data for the day from servers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=741"
  },
  {
    "text": "Remember, your widget could be on thousands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=745"
  },
  {
    "text": "or even many millions of devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=747"
  },
  {
    "text": "potentially even multiple times ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=749"
  },
  {
    "text": "on each of those devices as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=750"
  },
  {
    "text": "And if you have to have time-aligned data pulls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=753"
  },
  {
    "text": "like this, you really should consider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=756"
  },
  {
    "text": "adding some level of random jitter to these dates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=758"
  },
  {
    "text": "in addition to hitting caching servers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=762"
  },
  {
    "text": "These are especially important to consider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=764"
  },
  {
    "text": "to avoid any potentially unplanned or unnecessary costs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=766"
  },
  {
    "text": "Lastly, let’s talk about my favorite reload policy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=771"
  },
  {
    "text": "which is never. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=774"
  },
  {
    "text": "The never reload policy is the simplest policy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=776"
  },
  {
    "text": "because it never automatically reloads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=779"
  },
  {
    "text": "If your widget’s content can only change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=781"
  },
  {
    "text": "through its container application being foreground ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=784"
  },
  {
    "text": "or through discrete events like push notifications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=787"
  },
  {
    "text": "then never is a great choice for your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=790"
  },
  {
    "text": "When using the never policy, you can keep your widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=793"
  },
  {
    "text": "up to date solely with the WidgetCenter reload API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=796"
  },
  {
    "text": "from your container or other accessory extensions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=799"
  },
  {
    "text": "This really minimizes reloads to happen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=803"
  },
  {
    "text": "only when necessary and it keeps minimal impact ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=806"
  },
  {
    "text": "to your budget and to the user’s battery life. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=809"
  },
  {
    "text": "Never is also appropriate if your widget requires ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=812"
  },
  {
    "text": "an explicit user condition in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=814"
  },
  {
    "text": "that hasn’t yet been satisfied. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=816"
  },
  {
    "text": "For example, maybe logging in to a service ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=818"
  },
  {
    "text": "or purchasing some specific content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=820"
  },
  {
    "text": "Consider never if your widget can’t produce meaningful content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=823"
  },
  {
    "text": "before these types of conditions are met in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=826"
  },
  {
    "text": "Good examples of widgets that use the never policy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=829"
  },
  {
    "text": "include TV, Notes, Music, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=832"
  },
  {
    "text": "Podcasts, Contacts, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=835"
  },
  {
    "text": "These are all widgets and apps that require ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=837"
  },
  {
    "text": "user interaction in the app to drive content changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=839"
  },
  {
    "text": "or they receive pushes for those content updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=843"
  },
  {
    "text": "In summary, leverage timeline entries to your advantage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=846"
  },
  {
    "text": "Choose the correct reload policy for your widget, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=850"
  },
  {
    "text": "and use WidgetCenter’s reload API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=854"
  },
  {
    "text": "to reload timeline events on discrete events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=856"
  },
  {
    "text": "All right, let’s move on to presentation relevance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=860"
  },
  {
    "text": "Your widget may be presented in specific contexts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=864"
  },
  {
    "text": "on iOS or macOS that could result ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=866"
  },
  {
    "text": "in your widget changing appearance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=869"
  },
  {
    "text": "The widget may sometimes be rerendered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=871"
  },
  {
    "text": "without any timeline updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=873"
  },
  {
    "text": "And great widgets will always adapt ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=876"
  },
  {
    "text": "to these presentation environments appropriately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=877"
  },
  {
    "text": "So we’re gonna talk about color schemes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=880"
  },
  {
    "text": "Dark and Light Mode, partial privacy redactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=882"
  },
  {
    "text": "which are new in iOS 15, and full-on privacy redactions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=885"
  },
  {
    "text": "WidgetKit will automatically handle shifting your content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=890"
  },
  {
    "text": "between Light and Dark Mode as the system settings change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=893"
  },
  {
    "text": "This is because we use the power of SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=896"
  },
  {
    "text": "Now think about how you want your widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=900"
  },
  {
    "text": "to look in these respective contexts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=901"
  },
  {
    "text": "Here you can see examples of Notes and Calendar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=904"
  },
  {
    "text": "in both the light and dark schemes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=907"
  },
  {
    "text": "Remember, though, that not all widgets necessarily ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=911"
  },
  {
    "text": "have to conform to Light and Dark Mode by changing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=913"
  },
  {
    "text": "their background and text colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=915"
  },
  {
    "text": "There are a few widgets, like Music and Stocks, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=917"
  },
  {
    "text": "for example, that don’t change their colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=920"
  },
  {
    "text": "If your application design is agnostic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=922"
  },
  {
    "text": "of this high contrast content of dark and light styles, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=924"
  },
  {
    "text": "then feel free to continue ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=927"
  },
  {
    "text": "whatever color scheme makes sense for your widget.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=928"
  },
  {
    "text": "You can also preview color scheme changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=933"
  },
  {
    "text": "to your widget in Xcode through Xcode Previews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=935"
  },
  {
    "text": "Here’s a quick example of previewing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=938"
  },
  {
    "text": "a systemSmall widget in Light Mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=939"
  },
  {
    "text": "And now in Dark Mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=944"
  },
  {
    "text": "All we had to do was add the colorScheme ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=946"
  },
  {
    "text": "environment override to preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=948"
  },
  {
    "text": "how our widget would look in this environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=950"
  },
  {
    "text": "And if you want the system standard background color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=952"
  },
  {
    "text": "for Light and Dark Mode as shown here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=955"
  },
  {
    "text": "then use BackgroundStyle for your fill.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=957"
  },
  {
    "text": "Widgets are also subjected to presentation environments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=962"
  },
  {
    "text": "that can be privacy sensitive, like the Lock Screen on iOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=964"
  },
  {
    "text": "New in iOS 15, widgets can now redact ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=968"
  },
  {
    "text": "partial content in these situations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=971"
  },
  {
    "text": "Now, that may sound really confusing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=974"
  },
  {
    "text": "so let’s give an example to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=975"
  },
  {
    "text": "what the heck I’m talking about here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=977"
  },
  {
    "text": "Let’s pretend we had a banking widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=980"
  },
  {
    "text": "where I’m showing the balance available in a specific account. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=982"
  },
  {
    "text": "In this case, I have $128.45 available in my account.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=985"
  },
  {
    "text": "Now, when we go to the Lock Screen and lock the device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=991"
  },
  {
    "text": "this account balance still appears in iOS 14 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=994"
  },
  {
    "text": "because WidgetKit really had no way to dynamically redact ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=997"
  },
  {
    "text": "the balance information when the device became locked. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1001"
  },
  {
    "text": "However, that’s now changed in iOS 15, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1004"
  },
  {
    "text": "and you may now contextually mark ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1007"
  },
  {
    "text": "specific views to be redacted in these situations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1008"
  },
  {
    "text": "Now, to show you how to do that, all we do is, we simply insert ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1012"
  },
  {
    "text": "the .privacySensitive view modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1016"
  },
  {
    "text": "on the text representing the balance amount. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1018"
  },
  {
    "text": "So when not passcode locked, as you can see here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1020"
  },
  {
    "text": "the view still renders the balance amount ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1024"
  },
  {
    "text": "as you’d expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1026"
  },
  {
    "text": "But when we now lock the device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1028"
  },
  {
    "text": "the balance amount becomes masked, or redacted.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1030"
  },
  {
    "text": "Be aware, too, that this modifier can be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1035"
  },
  {
    "text": "applied to any view, including container views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1036"
  },
  {
    "text": "like hstacks and vstacks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1039"
  },
  {
    "text": "And if applied to a container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1041"
  },
  {
    "text": "the entire container will be redacted.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1042"
  },
  {
    "text": "If your app leverages complete data protection that can’t be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1046"
  },
  {
    "text": "touched while an iOS device is passcode locked, for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1049"
  },
  {
    "text": "maybe your app is using Health data and you skipped ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1052"
  },
  {
    "text": "building a widget or were scared to include it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1056"
  },
  {
    "text": "because you thought it had to be shown on the Lock Screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1058"
  },
  {
    "text": "then this feature is really for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1061"
  },
  {
    "text": "WidgetKit can automatically replace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1064"
  },
  {
    "text": "your active timeline content with your placeholder content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1066"
  },
  {
    "text": "when the device is passcode locked ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1069"
  },
  {
    "text": "for a full redaction of content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1071"
  },
  {
    "text": "And it can even withhold updates for the duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1074"
  },
  {
    "text": "while the device is passcode locked. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1077"
  },
  {
    "text": "This is all possible when you adopt ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1079"
  },
  {
    "text": "the default-data-protection entitlement listed here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1081"
  },
  {
    "text": "Your timeline data will be stored per your wishes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1084"
  },
  {
    "text": "in that data class on the device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1086"
  },
  {
    "text": "We really take your data privacy seriously here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1089"
  },
  {
    "text": "Lastly, I want to talk about location relevancy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1092"
  },
  {
    "text": "Widgets, like your app, can also provide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1095"
  },
  {
    "text": "contextual information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1097"
  },
  {
    "text": "for our current physical location ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1098"
  },
  {
    "text": "or just simply locations that are relevant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1101"
  },
  {
    "text": "to the user in one way or another.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1103"
  },
  {
    "text": "If your application uses location normally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1106"
  },
  {
    "text": "then it’s likely that your widget should too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1109"
  },
  {
    "text": "Because widgets can have multiple instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1111"
  },
  {
    "text": "on the Home screen and in Notification Center ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1113"
  },
  {
    "text": "on the Mac, consider offering pre-selected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1115"
  },
  {
    "text": "and even searchable locations for your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1118"
  },
  {
    "text": "in addition to using the current location ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1120"
  },
  {
    "text": "just like we do with the Weather widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1122"
  },
  {
    "text": "through the power of Intents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1124"
  },
  {
    "text": "Now, to fetch current location in your widget, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1126"
  },
  {
    "text": "there’s only a few steps required. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1128"
  },
  {
    "text": "First, you need to specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1131"
  },
  {
    "text": "the NSWidgetUsesLocation key in your Info.plist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1133"
  },
  {
    "text": "This lets the system know that you’ll be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1136"
  },
  {
    "text": "using location from your widget extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1138"
  },
  {
    "text": "Secondly, use the CLLocationManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1141"
  },
  {
    "text": "as you would normally, except this time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1144"
  },
  {
    "text": "from your TimelineProvider in your widget extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1146"
  },
  {
    "text": "Consider the resolution your widget requires, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1150"
  },
  {
    "text": "as it’s faster to resolve coarse location, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1152"
  },
  {
    "text": "and it can result in a better user experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1155"
  },
  {
    "text": "if you don’t need super precise location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1157"
  },
  {
    "text": "In general, the more precise the location requested, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1159"
  },
  {
    "text": "the longer it’s gonna take to resolve.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1161"
  },
  {
    "text": "Lastly, you can check whether the widget is authorized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1165"
  },
  {
    "text": "for location updates by using the isAuthorizedForWidgetUpdates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1167"
  },
  {
    "text": "API on the CLLocationManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1170"
  },
  {
    "text": "This’ll tell you whether the user has granted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1173"
  },
  {
    "text": "your widget permission to use location or not. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1175"
  },
  {
    "text": "Speaking of permissions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1178"
  },
  {
    "text": "let’s look at location permissions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1179"
  },
  {
    "text": "for widgets in more detail to see how they work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1181"
  },
  {
    "text": "Permissions for the widget are generally shared ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1184"
  },
  {
    "text": "with its app container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1186"
  },
  {
    "text": "Here, you can see a list of the available location ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1188"
  },
  {
    "text": "permissions available from the Settings app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1190"
  },
  {
    "text": "If the user selects “While using app,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1194"
  },
  {
    "text": "the user’s location is available to the widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1196"
  },
  {
    "text": "only when the widget’s container app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1198"
  },
  {
    "text": "is foreground to the user or other situations that would ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1200"
  },
  {
    "text": "consider the app to be in-use, like being in a nav session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1203"
  },
  {
    "text": "If the user selects “While using app or widgets,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1208"
  },
  {
    "text": "then location is available just the same as before ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1211"
  },
  {
    "text": "with “While using app,” but with an additional allowance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1214"
  },
  {
    "text": "specific to the widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1217"
  },
  {
    "text": "This allows the widget permissions to receive location ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1219"
  },
  {
    "text": "up to 15 minutes after a widget was last viewed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1222"
  },
  {
    "text": "And when location can’t be resolved with either of these ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1226"
  },
  {
    "text": "two permissions set, consider alternate content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1229"
  },
  {
    "text": "potentially even prior content if it’s available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1232"
  },
  {
    "text": "or simply indicating ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1235"
  },
  {
    "text": "that the location couldn’t be resolved.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1236"
  },
  {
    "text": "If the user selects “Always” for the permission, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1241"
  },
  {
    "text": "the widget will always have available permission ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1243"
  },
  {
    "text": "to access location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1245"
  },
  {
    "text": "Finally, let’s talk about building customizable widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1248"
  },
  {
    "text": "We’re gonna talk about size, kind, and configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1251"
  },
  {
    "text": "as a means for users to personalize ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1254"
  },
  {
    "text": "their widget experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1256"
  },
  {
    "text": "Now, widgets come in all different sizes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1258"
  },
  {
    "text": "And it’s recommended to support as many sizes as you can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1260"
  },
  {
    "text": "so that users have choice when placing their widgets. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1263"
  },
  {
    "text": "Remember that small variances do exist in sizing between devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1266"
  },
  {
    "text": "and it’s best to use system standard padding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1270"
  },
  {
    "text": "margins, text styles, and text sizes when possible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1273"
  },
  {
    "text": "Now, if you look at this iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1277"
  },
  {
    "text": "it’s really transformed into a content showcase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1279"
  },
  {
    "text": "If it’s not obvious, a new size has been added in iOS 15 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1282"
  },
  {
    "text": "specifically for the iPad, and we call it Extra Large.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1285"
  },
  {
    "text": "Here it is so you can see it better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1291"
  },
  {
    "text": "It’s the same height as the large widget but wider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1292"
  },
  {
    "text": "to showcase even more content that’s available on the iPad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1295"
  },
  {
    "text": "And here’s how you add it to your widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1299"
  },
  {
    "text": "Here I’ve added it to an existing widget config ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1302"
  },
  {
    "text": "that already supports the systemLarge family.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1304"
  },
  {
    "text": "By default, if you don’t specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1307"
  },
  {
    "text": "supported families on your widget configuration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1309"
  },
  {
    "text": "then the new size will be supported automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1311"
  },
  {
    "text": "if you build with the iOS 15 SDK, or later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1314"
  },
  {
    "text": "The next axis for personalization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1320"
  },
  {
    "text": "is the widget kind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1322"
  },
  {
    "text": "Kinds of widgets offer different perspectives ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1323"
  },
  {
    "text": "into your data or content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1326"
  },
  {
    "text": "So think about what kinds of widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1328"
  },
  {
    "text": "might make the most sense in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1330"
  },
  {
    "text": "The best way to describe these is really by example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1332"
  },
  {
    "text": "Here’s an example from Clock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1336"
  },
  {
    "text": "On the left, we have a City widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1338"
  },
  {
    "text": "that tracks the time of a single city, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1340"
  },
  {
    "text": "and on the right, a World Clock widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1343"
  },
  {
    "text": "that can accommodate many different cities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1345"
  },
  {
    "text": "in the same view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1347"
  },
  {
    "text": "Here’s another example from Stocks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1350"
  },
  {
    "text": "On the left, there’s a stock Symbol widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1351"
  },
  {
    "text": "that shows the stock price for a given stock-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1353"
  },
  {
    "text": "in this case, Apple-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1355"
  },
  {
    "text": "and on the right, an Overview widget. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1357"
  },
  {
    "text": "The Overview widget will show a series of stocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1360"
  },
  {
    "text": "reflected in the user’s Stocks app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1363"
  },
  {
    "text": "So how do you publish these different kinds of widgets? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1365"
  },
  {
    "text": "Well, to publish multiple kinds of widgets is super trivial.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1369"
  },
  {
    "text": "Using that Stocks example from before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1373"
  },
  {
    "text": "here I have a Symbol widget and an Overview widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1376"
  },
  {
    "text": "in the top left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1378"
  },
  {
    "text": "To publish these, you just return the different ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1380"
  },
  {
    "text": "widget configurations in a WidgetBundle object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1382"
  },
  {
    "text": "and include the @main attribute to the WidgetBundle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1385"
  },
  {
    "text": "It’s that easy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1388"
  },
  {
    "text": "Note that the order that widgets are defined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1391"
  },
  {
    "text": "in the bundle is also very important. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1393"
  },
  {
    "text": "This order reflects how your widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1395"
  },
  {
    "text": "will appear in the widget gallery. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1397"
  },
  {
    "text": "So make sure that the first widget listed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1399"
  },
  {
    "text": "is your hero use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1401"
  },
  {
    "text": "Lastly, it’s not possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1404"
  },
  {
    "text": "to dynamically publish or dynamically retract ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1406"
  },
  {
    "text": "the availability of a widget once your app is installed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1409"
  },
  {
    "text": "So some care and thought should be applied ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1412"
  },
  {
    "text": "around the support of your widgets over time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1414"
  },
  {
    "text": "The last axis for customizability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1419"
  },
  {
    "text": "is through configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1420"
  },
  {
    "text": "And widgets support two types: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1422"
  },
  {
    "text": "static and Intent-based configurations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1424"
  },
  {
    "text": "Static widget configurations deliver ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1427"
  },
  {
    "text": "the same content for each widget instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1429"
  },
  {
    "text": "Remember that Stocks Overview example from before? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1433"
  },
  {
    "text": "Well, each one’s gonna show the exact same content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1435"
  },
  {
    "text": "even if they’re in different locations on the user’s device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1438"
  },
  {
    "text": "Static widgets are super simple, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1442"
  },
  {
    "text": "and they’re elegant widget definitions because they take ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1444"
  },
  {
    "text": "no configuration or setup from the user.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1447"
  },
  {
    "text": "On the other hand, Intent widget configurations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1451"
  },
  {
    "text": "deliver user-configured content for each instance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1454"
  },
  {
    "text": "Check out these Stock Symbol widgets on the right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1458"
  },
  {
    "text": "This user has configured many different instances, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1462"
  },
  {
    "text": "each showcasing a different stock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1464"
  },
  {
    "text": "Now, this is some pretty sweet stuff. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1467"
  },
  {
    "text": "And a user could even combine these all into a stack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1468"
  },
  {
    "text": "of widgets on their Home Screen to flip through to save space.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1471"
  },
  {
    "text": "So how are these configured by the user, you might ask. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1475"
  },
  {
    "text": "Well, from a user’s perspective, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1479"
  },
  {
    "text": "the system will provide all the surrounding UI pieces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1481"
  },
  {
    "text": "And after tapping on a widget in Edit mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1484"
  },
  {
    "text": "that supports Intents, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1486"
  },
  {
    "text": "the configuration platter is shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1488"
  },
  {
    "text": "It presents a list of parameters from the Intent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1490"
  },
  {
    "text": "that the user can configure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1492"
  },
  {
    "text": "And in this example, there’s a single parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1494"
  },
  {
    "text": "for the Symbol to track and its value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1497"
  },
  {
    "text": "is currently the string AAPL for the Apple stock. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1498"
  },
  {
    "text": "Now, once a user taps on a parameter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1502"
  },
  {
    "text": "an input controller appears ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1503"
  },
  {
    "text": "to collect the input from the user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1505"
  },
  {
    "text": "And once completed, the widget will update automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1507"
  },
  {
    "text": "Now, there’s a ton of customization that you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1510"
  },
  {
    "text": "with an Intent, and there’s a great talk ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1513"
  },
  {
    "text": "from WWDC 2020 that I’ll share in a moment to help you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1515"
  },
  {
    "text": "get started if you want an Intent configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1518"
  },
  {
    "text": "In the meantime, let’s just quickly highlight ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1520"
  },
  {
    "text": "what the differences are between coding a widget ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1523"
  },
  {
    "text": "based on Intents versus a static configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1525"
  },
  {
    "text": "The static configuration’s really simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1529"
  },
  {
    "text": "You just instantiate a StaticConfiguration object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1531"
  },
  {
    "text": "with the standard TimelineProvider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1533"
  },
  {
    "text": "Let’s contrast that with an Intent configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1536"
  },
  {
    "text": "All that’s different here is that the StaticConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1540"
  },
  {
    "text": "is replaced by an IntentConfiguration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1543"
  },
  {
    "text": "and the TimelineProvider is replaced ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1545"
  },
  {
    "text": "by an IntentTimelineProvider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1547"
  },
  {
    "text": "Each of these has a slightly modified interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1549"
  },
  {
    "text": "to support Intents, and this is so you can receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1551"
  },
  {
    "text": "the user-configured Intent when populating your timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1554"
  },
  {
    "text": "For a more detailed look at creating and configuring ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1557"
  },
  {
    "text": "Intents for widgets, including an overview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1559"
  },
  {
    "text": "on the various data types supported ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1561"
  },
  {
    "text": "and what they look like from the config UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1563"
  },
  {
    "text": "check out the “Add configuration and intelligence ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1565"
  },
  {
    "text": "to your widgets” talk from WWDC 2020.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1568"
  },
  {
    "text": "To wrap up, we’ve reviewed how great widgets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1572"
  },
  {
    "text": "make use of their timeline entries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1574"
  },
  {
    "text": "master their reload policy, and adapt to their presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1576"
  },
  {
    "text": "and potentially physical environments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1580"
  },
  {
    "text": "Plan to offer different sizes, kinds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1583"
  },
  {
    "text": "and configurations to give a dynamic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1585"
  },
  {
    "text": "and personalizable experience to your users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1587"
  },
  {
    "text": "Thank you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10048/?time=1590"
  }
]