[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=2"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=7"
  },
  {
    "text": "Owen Monsma: Hello, and welcome to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=9"
  },
  {
    "text": "\"Qualities of a great Mac Catalyst app.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=10"
  },
  {
    "text": "My name is Owen Monsma, and I'm a Cocoa engineer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=13"
  },
  {
    "text": "And I'll be joined later by my colleague ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=16"
  },
  {
    "text": "Dave Rahardja from UIKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=18"
  },
  {
    "text": "Today we're going to go over three important considerations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=20"
  },
  {
    "text": "for making an amazing Catalyst app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=24"
  },
  {
    "text": "First, we'll cover some high-level changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=27"
  },
  {
    "text": "that happen when you migrate to a Mac Catalyst app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=29"
  },
  {
    "text": "Next, we'll dive into some specific code modifications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=33"
  },
  {
    "text": "you can make to improve your app experience on Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=36"
  },
  {
    "text": "And we'll end with information about app distribution.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=40"
  },
  {
    "text": "So let's begin with migrating your app to Mac Catalyst.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=44"
  },
  {
    "text": "The first step toward a great Catalyst app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=49"
  },
  {
    "text": "is having a great iPad app, and your app already runs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=51"
  },
  {
    "text": "with no additional changes on Macs with M1.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=55"
  },
  {
    "text": "If you have an M1 Mac, you can try this right away ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=58"
  },
  {
    "text": "with the Designed for iPad run destination in Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=61"
  },
  {
    "text": "By adopting these features on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=65"
  },
  {
    "text": "your Mac app will have a great head start.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=68"
  },
  {
    "text": "If your app supports multitasking on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=71"
  },
  {
    "text": "you can automatically get multiple window support on Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=74"
  },
  {
    "text": "And if you use UIMenuBuilder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=79"
  },
  {
    "text": "your menus are automatically picked up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=81"
  },
  {
    "text": "in your app's menu bar, and by contextual menus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=83"
  },
  {
    "text": "with a secondary click on your views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=86"
  },
  {
    "text": "We also automatically bridge system behaviors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=89"
  },
  {
    "text": "like copy/paste and drag and drop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=91"
  },
  {
    "text": "To learn more about how your iPad app runs as-is on M1 Macs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=94"
  },
  {
    "text": "check out our video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=99"
  },
  {
    "text": "\"Qualities of great iPad and iPhone apps on Macs with M1.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=101"
  },
  {
    "text": "But you're here because you want to take things further.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=106"
  },
  {
    "text": "By checking the Mac checkbox, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=109"
  },
  {
    "text": "you gain the ability to distribute to all Macs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=111"
  },
  {
    "text": "and get access to additional APIs to further refine your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=114"
  },
  {
    "text": "So let's do it with our app, Trip Planner! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=118"
  },
  {
    "text": "In our Xcode project settings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=122"
  },
  {
    "text": "we check the Mac option under Deployment Info.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=124"
  },
  {
    "text": "Notice to the right, an additional pop-up appears, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=128"
  },
  {
    "text": "letting us choose between a scaled iPad interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=131"
  },
  {
    "text": "and a Mac optimized interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=134"
  },
  {
    "text": "We will examine this choice more in a little bit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=136"
  },
  {
    "text": "For now, let's click build and run in the Xcode toolbar.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=139"
  },
  {
    "text": "And our app builds and runs! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=144"
  },
  {
    "text": "Now, if your app failed to build, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=147"
  },
  {
    "text": "there are a few things to investigate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=150"
  },
  {
    "text": "Certain deprecated frameworks and classes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=153"
  },
  {
    "text": "are unavailable for Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=155"
  },
  {
    "text": "so now is the time to modernize.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=158"
  },
  {
    "text": "Not only will this get your app running on Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=160"
  },
  {
    "text": "but it will improve your iOS app, too.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=163"
  },
  {
    "text": "Moving from OpenGLES to Apple's own Metal framework ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=166"
  },
  {
    "text": "unlocks the full power of the GPU.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=170"
  },
  {
    "text": "The Contacts framework replaced the deprecated AddressBook ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=173"
  },
  {
    "text": "and is a forward-looking, thread-safe way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=177"
  },
  {
    "text": "to handle contacts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=179"
  },
  {
    "text": "And UIWebView is deprecated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=181"
  },
  {
    "text": "and has been superseded by WKWebView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=183"
  },
  {
    "text": "Also, make sure to check your third-party dependencies.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=186"
  },
  {
    "text": "If those frameworks are distributed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=190"
  },
  {
    "text": "as an XCFramework bundle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=192"
  },
  {
    "text": "make sure that they provide a Mac binary to link against.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=194"
  },
  {
    "text": "As you begin work on your Mac app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=199"
  },
  {
    "text": "watch for compiler warnings when building your project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=201"
  },
  {
    "text": "and monitor the console log for runtime messages.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=203"
  },
  {
    "text": "These warnings tell you how to fix your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=206"
  },
  {
    "text": "so it runs well as a Mac Catalyst process.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=209"
  },
  {
    "text": "And remember to only use supported API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=213"
  },
  {
    "text": "so your app continues to run on future macOS releases.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=215"
  },
  {
    "text": "It's also important to be aware of the lifecycle events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=220"
  },
  {
    "text": "that your app will receive when running on a Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=223"
  },
  {
    "text": "If your app currently relies on lifecycle events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=226"
  },
  {
    "text": "called on your app delegate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=229"
  },
  {
    "text": "you should instead monitor scene lifecycles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=231"
  },
  {
    "text": "so your app can respond to events ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=234"
  },
  {
    "text": "specific to the content of each window on the desktop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=236"
  },
  {
    "text": "Remember, a Mac Catalyst app will not receive the ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=241"
  },
  {
    "text": "sceneDidEnterBackground event as often as an iPad app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=244"
  },
  {
    "text": "Scenes enter the background state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=249"
  },
  {
    "text": "when a desktop window is minimized or closed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=250"
  },
  {
    "text": "If your app uses sceneDidEnterBackground ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=254"
  },
  {
    "text": "to perform some routine work like autosaving a document, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=257"
  },
  {
    "text": "using a timer instead ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=261"
  },
  {
    "text": "will ensure this action is taken regularly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=262"
  },
  {
    "text": "Finally, remember that your Catalyst app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=265"
  },
  {
    "text": "may have zero scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=268"
  },
  {
    "text": "but continue to run in the foreground.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=270"
  },
  {
    "text": "This state happens when all your app's windows have been closed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=272"
  },
  {
    "text": "but your app's name remains visible in the menu bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=276"
  },
  {
    "text": "Now let's decide whether to optimize our interface for Mac.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=280"
  },
  {
    "text": "This is one of the most important decisions to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=284"
  },
  {
    "text": "when you first begin bringing your app over.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=287"
  },
  {
    "text": "Using Mac idiom is recommended to make your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=290"
  },
  {
    "text": "feel the most at home on Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=293"
  },
  {
    "text": "but it does require some additional work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=295"
  },
  {
    "text": "In the Mac idiom, your app will run at 100 percent scale, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=298"
  },
  {
    "text": "giving you pixel-perfect text and images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=303"
  },
  {
    "text": "and native AppKit controls.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=305"
  },
  {
    "text": "If you want, you can add new Mac-specific assets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=308"
  },
  {
    "text": "in your asset catalog ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=312"
  },
  {
    "text": "to take advantage of this additional detail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=313"
  },
  {
    "text": "It's good practice to provide both 1x and 2x assets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=316"
  },
  {
    "text": "to support all monitor resolutions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=320"
  },
  {
    "text": "Be aware, the size metrics of many of your controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=323"
  },
  {
    "text": "will change, so it is important to adjust your app's layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=327"
  },
  {
    "text": "to accommodate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=330"
  },
  {
    "text": "For custom controls in your app, you have an additional choice.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=332"
  },
  {
    "text": "Automatically, you get the Mac style of control.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=336"
  },
  {
    "text": "But now you can opt out your buttons and sliders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=339"
  },
  {
    "text": "from this conversion to use customization APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=341"
  },
  {
    "text": "that are unavailable on Mac controls.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=345"
  },
  {
    "text": "If you use any custom assets -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=348"
  },
  {
    "text": "like setting the thumb on a UISlider -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=350"
  },
  {
    "text": "they will appear larger than expected by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=353"
  },
  {
    "text": "so you may need to scale them or provide new assets.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=356"
  },
  {
    "text": "Also keep in mind that Mac users expect AppKit-style controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=360"
  },
  {
    "text": "so custom controls should be used sparingly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=364"
  },
  {
    "text": "For more detail on the Mac idiom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=368"
  },
  {
    "text": "check out our video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=371"
  },
  {
    "text": "\"Optimize the interface of your Mac Catalyst app.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=372"
  },
  {
    "text": "Because a Catalyst app in the Mac idiom ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=376"
  },
  {
    "text": "takes on AppKit control styles, both the appearance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=378"
  },
  {
    "text": "and behavior of some of your controls will change.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=382"
  },
  {
    "text": "In our video, \"What's new in Mac Catalyst,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=385"
  },
  {
    "text": "we introduced the new pop-up button style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=388"
  },
  {
    "text": "which rounds out our suite of Mac button types.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=391"
  },
  {
    "text": "Let's dive into what makes these controls different ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=394"
  },
  {
    "text": "and how the system picks which one to use.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=397"
  },
  {
    "text": "Understanding these controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=400"
  },
  {
    "text": "and where they are commonly found ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=402"
  },
  {
    "text": "will help you make informed choices ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=404"
  },
  {
    "text": "about their use in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=406"
  },
  {
    "text": "The default UIButton type is UIButton type .system.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=408"
  },
  {
    "text": "With this button type, the button automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=413"
  },
  {
    "text": "takes on the expected appearance for its context.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=416"
  },
  {
    "text": "In the Mac idiom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=419"
  },
  {
    "text": "this means it becomes a bordered push button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=420"
  },
  {
    "text": "Pull-down buttons are a Mac-native control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=424"
  },
  {
    "text": "used to provide a list of possible actions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=427"
  },
  {
    "text": "and are drawn with a single-arrow indicator.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=430"
  },
  {
    "text": "A good example is the PDF pull-down in the print dialog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=433"
  },
  {
    "text": "which presents actions such as Save as PDF or Send in Mail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=437"
  },
  {
    "text": "To get a pull-down button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=442"
  },
  {
    "text": "make sure that you have assigned a UI menu to your button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=444"
  },
  {
    "text": "via its menu property, and additionally set ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=447"
  },
  {
    "text": "showsMenuAsPrimaryAction to true.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=450"
  },
  {
    "text": "Your button will take on the pull-down look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=454"
  },
  {
    "text": "and present the menu on a click.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=456"
  },
  {
    "text": "And new to Catalyst with macOS Monterey ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=459"
  },
  {
    "text": "are pop-up buttons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=461"
  },
  {
    "text": "Pop-up buttons look similar to pull-down buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=465"
  },
  {
    "text": "but have a double-arrow indicator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=467"
  },
  {
    "text": "and they do something slightly different.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=469"
  },
  {
    "text": "Where the pull-down triggers an action, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=472"
  },
  {
    "text": "a pop-up button is used to select ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=473"
  },
  {
    "text": "one of a set of mutually exclusive options.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=476"
  },
  {
    "text": "For example, selecting the day of the week.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=480"
  },
  {
    "text": "The title in the button then updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=483"
  },
  {
    "text": "to reflect the selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=486"
  },
  {
    "text": "This is a good, Mac-friendly choice ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=487"
  },
  {
    "text": "to replace a UIPickerView in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=490"
  },
  {
    "text": "Getting this control is similar to a pull-down button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=493"
  },
  {
    "text": "but the property changesSelectionAsPrimaryAction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=495"
  },
  {
    "text": "must also be true.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=499"
  },
  {
    "text": "Finally, checkboxes are used to represent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=501"
  },
  {
    "text": "a non-exclusive binary toggle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=504"
  },
  {
    "text": "and are a more mouse-friendly alternative to a switch.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=507"
  },
  {
    "text": "And as it turns out, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=510"
  },
  {
    "text": "you get the checkbox with no additional work! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=512"
  },
  {
    "text": "Just make sure that the switch has a title set, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=515"
  },
  {
    "text": "and keep in mind the title property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=518"
  },
  {
    "text": "is only supported in the Mac idiom.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=520"
  },
  {
    "text": "By default, the switch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=523"
  },
  {
    "text": "has a preferredStyle of automatic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=525"
  },
  {
    "text": "and you can verify at runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=527"
  },
  {
    "text": "whether it is a switch or a checkbox ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=529"
  },
  {
    "text": "using the read-only style property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=532"
  },
  {
    "text": "Now, to dive into some specific code changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=536"
  },
  {
    "text": "let's hand things off to my colleague, Dave.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=539"
  },
  {
    "text": "Dave Rahardja: Hi everyone, my name is Dave, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=542"
  },
  {
    "text": "and I'm an engineer on the UIKit team.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=544"
  },
  {
    "text": "Let's talk about some specific things you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=547"
  },
  {
    "text": "to make your Mac Catalyst app feel more at home.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=550"
  },
  {
    "text": "A Mac Catalyst app may have access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=553"
  },
  {
    "text": "to a lot more screen real estate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=555"
  },
  {
    "text": "Your app's windows can be resized much larger on a Mac ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=558"
  },
  {
    "text": "than on an iPad, and can be shown full screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=562"
  },
  {
    "text": "Take a moment to resize your app's windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=566"
  },
  {
    "text": "and pay attention to its layout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=568"
  },
  {
    "text": "Make sure you're using the additional space ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=571"
  },
  {
    "text": "to show more content and controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=573"
  },
  {
    "text": "to make your apps easier to use.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=576"
  },
  {
    "text": "Live resizing will put your app's layout performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=579"
  },
  {
    "text": "to the test.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=582"
  },
  {
    "text": "Your app should do the least amount of work possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=583"
  },
  {
    "text": "during layout to keep your app's windows responsive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=586"
  },
  {
    "text": "during resizing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=589"
  },
  {
    "text": "Take special note of interactions in your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=591"
  },
  {
    "text": "that rely on modal presentations and popovers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=594"
  },
  {
    "text": "With a larger display area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=598"
  },
  {
    "text": "you can make these interactions always available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=600"
  },
  {
    "text": "by showing them as child views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=602"
  },
  {
    "text": "Now, let's talk about pointer input devices.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=606"
  },
  {
    "text": "Remember that not all Macs have a trackpad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=609"
  },
  {
    "text": "and some Macs are connected to input devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=613"
  },
  {
    "text": "that don't support scrolling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=616"
  },
  {
    "text": "If your views rely on a pinch or rotate gesture to work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=618"
  },
  {
    "text": "make sure that all of its capabilities are accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=622"
  },
  {
    "text": "using a mouse without scroll input.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=625"
  },
  {
    "text": "Add additional buttons or other controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=629"
  },
  {
    "text": "to your Mac Catalyst app's view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=631"
  },
  {
    "text": "to make sure all of its functionality is accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=634"
  },
  {
    "text": "Additionally, detecting keyboard modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=638"
  },
  {
    "text": "on tap or pan gesture recognizers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=641"
  },
  {
    "text": "can sometimes provide faster access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=643"
  },
  {
    "text": "to your view's functionality.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=646"
  },
  {
    "text": "For example, allowing Shift-pan to zoom.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=648"
  },
  {
    "text": "Let's talk about keyboard shortcuts and the main menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=654"
  },
  {
    "text": "The main menu of a Mac app is a great place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=657"
  },
  {
    "text": "to discover all the actions available in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=660"
  },
  {
    "text": "as well as their associated keyboard shortcuts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=663"
  },
  {
    "text": "If your app already supports keyboard shortcuts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=666"
  },
  {
    "text": "by returning key commands from its responders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=669"
  },
  {
    "text": "add these commands to the main menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=672"
  },
  {
    "text": "using the menu builder API instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=674"
  },
  {
    "text": "Moving all your keyboard shortcuts to the main menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=677"
  },
  {
    "text": "makes them discoverable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=680"
  },
  {
    "text": "even when they are not currently enabled.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=681"
  },
  {
    "text": "What's more, using the MenuBuilder API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=684"
  },
  {
    "text": "to organize your shortcuts on Mac Catalyst ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=687"
  },
  {
    "text": "also organizes them on the iPad shortcuts overlay.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=690"
  },
  {
    "text": "As you build out your main menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=695"
  },
  {
    "text": "be sure to add all the actions needed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=697"
  },
  {
    "text": "to interact with your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=699"
  },
  {
    "text": "Actions performed with gestures on an iPad ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=702"
  },
  {
    "text": "should also be accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=704"
  },
  {
    "text": "by selecting items from the main menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=706"
  },
  {
    "text": "Adding keyboard shortcuts to your menu items ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=709"
  },
  {
    "text": "will provide even quicker access to these actions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=712"
  },
  {
    "text": "Because menu bar and key command actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=716"
  },
  {
    "text": "are routed starting from the first responder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=718"
  },
  {
    "text": "make sure that the views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=721"
  },
  {
    "text": "that would be the target of those actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=723"
  },
  {
    "text": "can become first responder and can accept focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=725"
  },
  {
    "text": "You can do this by having your views return true ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=729"
  },
  {
    "text": "for the canBecomeFirstResponder and canBecomeFocused properties.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=732"
  },
  {
    "text": "Since a Mac app must rely less on direct manipulation of views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=738"
  },
  {
    "text": "and more on the user selecting a view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=742"
  },
  {
    "text": "and then selecting an action from the main menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=745"
  },
  {
    "text": "the ability for more of your app's views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=747"
  },
  {
    "text": "to become first responder and focused ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=750"
  },
  {
    "text": "becomes more important on Mac Catalyst.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=753"
  },
  {
    "text": "For more information about focus and first responders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=757"
  },
  {
    "text": "check out the video, \"Focus on iPad keyboard navigation.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=760"
  },
  {
    "text": "While we're on the subject of responders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=765"
  },
  {
    "text": "be sure to leave the responder chain unmodified in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=767"
  },
  {
    "text": "In other words, don't override nextResponder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=772"
  },
  {
    "text": "Leaving the responder chain unmodified ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=776"
  },
  {
    "text": "ensures that Mac Catalyst can route your actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=778"
  },
  {
    "text": "to the appropriate targets.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=781"
  },
  {
    "text": "If your app has to handle certain actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=784"
  },
  {
    "text": "using objects that are not in its responder chain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=786"
  },
  {
    "text": "use the target(for Action:, withSender:) function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=789"
  },
  {
    "text": "to delegate these actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=792"
  },
  {
    "text": "to the appropriate object instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=794"
  },
  {
    "text": "Let's go over the code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=797"
  },
  {
    "text": "In this example, our view delegates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=799"
  },
  {
    "text": "the setAsFavorite action to a model object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=802"
  },
  {
    "text": "while allowing other actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=806"
  },
  {
    "text": "to continue to propagate up the responder chain.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=807"
  },
  {
    "text": "Now let's talk about scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=811"
  },
  {
    "text": "and how they work in a Mac Catalyst app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=813"
  },
  {
    "text": "A Mac app may have many desktop windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=816"
  },
  {
    "text": "open at the same time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=819"
  },
  {
    "text": "In a Mac Catalyst app, each of these windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=821"
  },
  {
    "text": "is paired with a UIWindowScene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=824"
  },
  {
    "text": "Your app may offer windows that have different functions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=828"
  },
  {
    "text": "For example, it may have a document window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=831"
  },
  {
    "text": "a detail viewer window, a message composer window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=834"
  },
  {
    "text": "and so on.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=837"
  },
  {
    "text": "The best way to organize these different scene functions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=839"
  },
  {
    "text": "is by defining a scene configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=842"
  },
  {
    "text": "for each type of window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=844"
  },
  {
    "text": "To define scene configurations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=847"
  },
  {
    "text": "add them to your Info.plist ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=848"
  },
  {
    "text": "under the Application Scene Manifest entry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=851"
  },
  {
    "text": "Under the Application Session Role array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=854"
  },
  {
    "text": "create one configuration for each type of scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=857"
  },
  {
    "text": "your app supports.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=860"
  },
  {
    "text": "Give each of these configurations a name ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=862"
  },
  {
    "text": "and choose the scene class, delegate class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=865"
  },
  {
    "text": "and storyboard that will be instantiated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=868"
  },
  {
    "text": "when the scene is created.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=870"
  },
  {
    "text": "Now that we've defined our scene configurations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=873"
  },
  {
    "text": "let's discuss how we can use them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=875"
  },
  {
    "text": "to create a new scene of a particular configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=878"
  },
  {
    "text": "In this example, we want to create a new detail viewer scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=882"
  },
  {
    "text": "when a view is double-clicked.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=886"
  },
  {
    "text": "The first thing we do is define a new user activity type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=889"
  },
  {
    "text": "for requesting a detail viewer scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=893"
  },
  {
    "text": "We'll call it viewDetailActivityType.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=896"
  },
  {
    "text": "When we create that new user activity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=899"
  },
  {
    "text": "we want to pass along an identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=902"
  },
  {
    "text": "for the item that we want to show in detail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=904"
  },
  {
    "text": "To do that, we define an itemIDKey ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=908"
  },
  {
    "text": "that will hold that information in the user info dictionary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=910"
  },
  {
    "text": "Then, in our double-click event handler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=915"
  },
  {
    "text": "we create a new NSUserActivity object of the appropriate type, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=918"
  },
  {
    "text": "and set its userInfo property to a dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=923"
  },
  {
    "text": "holding the itemID that we want to show.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=926"
  },
  {
    "text": "Finally, we call the UIApplication ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=930"
  },
  {
    "text": "requestSceneSessionActivation function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=933"
  },
  {
    "text": "passing in the user activity we just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=936"
  },
  {
    "text": "This will cause the system to create our new scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=940"
  },
  {
    "text": "So now we know how to request a new scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=944"
  },
  {
    "text": "for a particular user activity type.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=947"
  },
  {
    "text": "Now let's talk about how to use that information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=949"
  },
  {
    "text": "to load the appropriate scene configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=952"
  },
  {
    "text": "We respond to scene creation requests by implementing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=956"
  },
  {
    "text": "the application configurationForConnecting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=959"
  },
  {
    "text": "function in the application delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=961"
  },
  {
    "text": "In our implementation, we examine ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=965"
  },
  {
    "text": "if the incoming scene request contains any user activities.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=967"
  },
  {
    "text": "The request can contain multiple user activities, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=972"
  },
  {
    "text": "but for this code example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=975"
  },
  {
    "text": "we'll just examine the first one.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=977"
  },
  {
    "text": "If there is an activity we need to handle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=980"
  },
  {
    "text": "we then check its activityType.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=983"
  },
  {
    "text": "Here, we test if it's equal to the viewDetailActivityType.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=986"
  },
  {
    "text": "If so, we return the scene configuration named ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=991"
  },
  {
    "text": "DetailViewer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=994"
  },
  {
    "text": "This will cause the system to check in our Info.plist ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=996"
  },
  {
    "text": "for a configuration of that name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=999"
  },
  {
    "text": "and load the appropriate scene and scene delegate classes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1001"
  },
  {
    "text": "and display the specified storyboard ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1005"
  },
  {
    "text": "in a new desktop window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1008"
  },
  {
    "text": "If no specific scene configuration should be loaded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1011"
  },
  {
    "text": "we fall back to returning the default configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1014"
  },
  {
    "text": "There is one more thing to do.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1019"
  },
  {
    "text": "Remember that we saved the itemID ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1021"
  },
  {
    "text": "for the item to be shown? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1023"
  },
  {
    "text": "We still need to set that value on the view controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1025"
  },
  {
    "text": "of the scene that we just created.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1028"
  },
  {
    "text": "We do that in our SceneDelegate class.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1031"
  },
  {
    "text": "The scene willConnectTo session function is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1035"
  },
  {
    "text": "just before the scene is about to be shown on the desktop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1038"
  },
  {
    "text": "The user activity that was passed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1043"
  },
  {
    "text": "into our application delegate is also passed into this function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1044"
  },
  {
    "text": "in the scene delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1048"
  },
  {
    "text": "We can now extract the itemID from its userInfo dictionary ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1050"
  },
  {
    "text": "and set it on our new view controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1054"
  },
  {
    "text": "Using NSUserActivity to configure new scenes also ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1058"
  },
  {
    "text": "makes it easier for your app to support state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1062"
  },
  {
    "text": "If your scene delegate responds to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1066"
  },
  {
    "text": "the stateRestorationActivity (for Scene:) callback, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1068"
  },
  {
    "text": "the returned user activity will be saved by the system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1072"
  },
  {
    "text": "when your app exits.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1075"
  },
  {
    "text": "If state restoration is enabled in System Preferences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1077"
  },
  {
    "text": "the next time your app is launched, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1081"
  },
  {
    "text": "the system will recreate your scenes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1083"
  },
  {
    "text": "and pass each scene's user activity object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1085"
  },
  {
    "text": "to your app delegate's application ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1088"
  },
  {
    "text": "configurationForConnecting SceneSession function.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1091"
  },
  {
    "text": "This is the same function that is called when your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1094"
  },
  {
    "text": "creates new scenes, as covered earlier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1097"
  },
  {
    "text": "By using a consistent set of activity types, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1100"
  },
  {
    "text": "you can use the same code to select ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1103"
  },
  {
    "text": "the appropriate scene configuration when your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1106"
  },
  {
    "text": "creates new desktop windows and during state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1109"
  },
  {
    "text": "There is one thing you need to add to your scene delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1115"
  },
  {
    "text": "so your app can handle both new scene requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1117"
  },
  {
    "text": "and state restoration with the same code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1120"
  },
  {
    "text": "and that is to modify your scene willConnect session function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1123"
  },
  {
    "text": "in your scene delegate so that it falls back ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1127"
  },
  {
    "text": "to the stateRestorationActivity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1130"
  },
  {
    "text": "if the activity in the scene connection options is nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1132"
  },
  {
    "text": "Now your app is ready to handle new scene requests ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1136"
  },
  {
    "text": "and state restoration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1139"
  },
  {
    "text": "For more information on state restoration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1142"
  },
  {
    "text": "check out the \"Introducing Multiple Windows on iPad\" video.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1144"
  },
  {
    "text": "Next, let's talk about your app's toolbar.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1149"
  },
  {
    "text": "A great Mac app uses its windows' toolbars ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1153"
  },
  {
    "text": "to present frequently used actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1156"
  },
  {
    "text": "and other navigation options for quick access.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1158"
  },
  {
    "text": "Unlike toolbars on iOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1161"
  },
  {
    "text": "the toolbar on a Mac Catalyst app's desktop window ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1163"
  },
  {
    "text": "does not change as view controllers appear and disappear ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1167"
  },
  {
    "text": "in the Split View controller or a navigation controller.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1171"
  },
  {
    "text": "Because toolbars are strongly associated with scenes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1174"
  },
  {
    "text": "the best place to configure your toolbar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1178"
  },
  {
    "text": "is in your scene delegate subclass.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1180"
  },
  {
    "text": "One important item usually found on the toolbar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1183"
  },
  {
    "text": "is the sharing button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1187"
  },
  {
    "text": "Adding an NSSharingServicePicker ToolbarItem to your toolbar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1189"
  },
  {
    "text": "allows your app to share the main content shown in your scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1194"
  },
  {
    "text": "using the Mac's standard sharing menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1197"
  },
  {
    "text": "In macOS Monterey, we have added the ability for the button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1201"
  },
  {
    "text": "to automatically use the activity items configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1205"
  },
  {
    "text": "shared by your scene.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1209"
  },
  {
    "text": "Notice that this is the same configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1211"
  },
  {
    "text": "that the new Share This function of Siri uses on iOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1214"
  },
  {
    "text": "A good way to provide a sharing configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1219"
  },
  {
    "text": "for your scene is to return an object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1221"
  },
  {
    "text": "from your RootViewController's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1224"
  },
  {
    "text": "activityItemsConfiguration property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1226"
  },
  {
    "text": "On Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1229"
  },
  {
    "text": "an NSSharingServicePicker ToolbarItem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1230"
  },
  {
    "text": "in your app's toolbar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1233"
  },
  {
    "text": "automatically uses this property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1234"
  },
  {
    "text": "On iOS, Siri uses the same property to share data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1237"
  },
  {
    "text": "using Share This.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1241"
  },
  {
    "text": "Of course, the toolbar is not the only place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1243"
  },
  {
    "text": "your app can offer items to share.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1246"
  },
  {
    "text": "Often, you'd want to allow sharing of images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1248"
  },
  {
    "text": "or other items through a context menu.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1251"
  },
  {
    "text": "To do this, return an activityItemsConfiguration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1255"
  },
  {
    "text": "object from your view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1258"
  },
  {
    "text": "then add a contextMenuInteraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1260"
  },
  {
    "text": "Here are the results, on both Mac Catalyst and iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1264"
  },
  {
    "text": "On Mac Catalyst, note that a Copy action and a Share menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1269"
  },
  {
    "text": "are automatically added.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1273"
  },
  {
    "text": "And when your app runs on iPad, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1276"
  },
  {
    "text": "a Copy and Share action are added.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1278"
  },
  {
    "text": "Tapping the Share action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1281"
  },
  {
    "text": "automatically presents the share sheet.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1282"
  },
  {
    "text": "Using the Activity Items Configuration API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1285"
  },
  {
    "text": "allows your app to declare what its views can share ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1288"
  },
  {
    "text": "so the system can display the appropriate UI on each platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1291"
  },
  {
    "text": "Now that we've talked about how your app can share its data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1296"
  },
  {
    "text": "let's talk about how your app can import images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1299"
  },
  {
    "text": "from an iPhone or iPad using Continuity Camera.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1302"
  },
  {
    "text": "If your app uses a UITextView to display rich text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1307"
  },
  {
    "text": "Continuity Camera support is automatically enabled ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1311"
  },
  {
    "text": "in macOS Monterey.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1314"
  },
  {
    "text": "A right-click on a text view will show a context menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1316"
  },
  {
    "text": "with an option to take a photo on your iPhone or iPad ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1319"
  },
  {
    "text": "and automatically add it as an attachment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1324"
  },
  {
    "text": "To add support for Continuity Camera to any view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1327"
  },
  {
    "text": "simply return a UIPasteConfiguration object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1331"
  },
  {
    "text": "that accepts images from your view's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1335"
  },
  {
    "text": "pasteConfiguration property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1337"
  },
  {
    "text": "then add a UI contextMenuInteraction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1340"
  },
  {
    "text": "Then implement the paste(itemProviders:) function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1344"
  },
  {
    "text": "to load and paste the incoming objects -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1347"
  },
  {
    "text": "in this case, images.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1350"
  },
  {
    "text": "As a bonus, returning a paste configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1353"
  },
  {
    "text": "from your view not only enables Continuity Camera ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1356"
  },
  {
    "text": "when the configuration accepts images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1359"
  },
  {
    "text": "it also automatically enables a Paste action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1362"
  },
  {
    "text": "in the context menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1365"
  },
  {
    "text": "and allows your view to accept incoming drags, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1366"
  },
  {
    "text": "both on Mac Catalyst and iPad.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1370"
  },
  {
    "text": "So those are some specific things you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1373"
  },
  {
    "text": "to help make your app a great Mac Catalyst app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1376"
  },
  {
    "text": "Now let's go back to Owen to talk about distribution.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1380"
  },
  {
    "text": "Owen: Thanks, Dave.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1384"
  },
  {
    "text": "When it comes to releasing your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1386"
  },
  {
    "text": "the big thing to remember is that Mac Catalyst apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1388"
  },
  {
    "text": "are Mac apps, and can be distributed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1390"
  },
  {
    "text": "through all the same means as any other Mac app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1393"
  },
  {
    "text": "You can publish your app on the Mac App Store, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1397"
  },
  {
    "text": "with the option for Universal Purchase ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1400"
  },
  {
    "text": "so your existing iOS customers automatically get your Mac app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1403"
  },
  {
    "text": "You have access to TestFlight for beta releases of your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1408"
  },
  {
    "text": "and to get early feedback on new builds.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1411"
  },
  {
    "text": "You can also use App Notarization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1414"
  },
  {
    "text": "and distribute it yourself.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1416"
  },
  {
    "text": "And if you develop a framework, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1419"
  },
  {
    "text": "use XCFrameworks to distribute cross-platform, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1421"
  },
  {
    "text": "bundling together binaries for all platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1424"
  },
  {
    "text": "Today, we've covered the process of building your iOS app for Mac ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1427"
  },
  {
    "text": "with Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1431"
  },
  {
    "text": "and highlighted some important decisions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1433"
  },
  {
    "text": "and changes to make along the way.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1435"
  },
  {
    "text": "Now it's time to consider your own projects.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1437"
  },
  {
    "text": "It's easy to get your app running on Mac, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1440"
  },
  {
    "text": "and with just a little bit of work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1443"
  },
  {
    "text": "you can make your app feel right at home ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1445"
  },
  {
    "text": "and make it available to a whole new set of excited customers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1447"
  },
  {
    "text": "Thank you! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1452"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10053/?time=1453"
  }
]