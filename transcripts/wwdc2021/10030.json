[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=7"
  },
  {
    "text": "Sihui Liu: Hello. Welcome to “Develop advanced web content.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=9"
  },
  {
    "text": "I'm Sihui, and I am an engineer on the Safari and WebKit team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=12"
  },
  {
    "text": "I am happy to share with you the important updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=17"
  },
  {
    "text": "we have made in WebKit and Safari ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=19"
  },
  {
    "text": "for web developers in the past year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=21"
  },
  {
    "text": "The things I'm about to share ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=23"
  },
  {
    "text": "generally fall into three categories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=25"
  },
  {
    "text": "First, I will walk you through new features and enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=28"
  },
  {
    "text": "in JavaScript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=31"
  },
  {
    "text": "Then I will give you an overview of the updates in WebAssembly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=33"
  },
  {
    "text": "And finally, I will introduce you to some new web APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=39"
  },
  {
    "text": "that can add additional capabilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=43"
  },
  {
    "text": "to your web content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=45"
  },
  {
    "text": "There is a lot to cover, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=47"
  },
  {
    "text": "so let’s begin with our news in JavaScript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=48"
  },
  {
    "text": "Each year, there are hundreds of changes made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=51"
  },
  {
    "text": "in our JavaScript engine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=54"
  },
  {
    "text": "I will cover some of the most important ones ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=56"
  },
  {
    "text": "you need know if you work with JavaScript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=58"
  },
  {
    "text": "They are: new class field syntax, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=62"
  },
  {
    "text": "weak references that enables smarter memory management, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=66"
  },
  {
    "text": "new usage of the await keyword, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=70"
  },
  {
    "text": "support for modules in workers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=75"
  },
  {
    "text": "and interfaces added to Internationalization API family. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=80"
  },
  {
    "text": "To put you in the picture of these new features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=85"
  },
  {
    "text": "I'm going to use a simple stopwatch as example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=88"
  },
  {
    "text": "The stopwatch has only one button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=91"
  },
  {
    "text": "Click it once, it begins counting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=94"
  },
  {
    "text": "Click it again, it will stop ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=96"
  },
  {
    "text": "and give you the duration passed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=98"
  },
  {
    "text": "Keep this in mind ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=100"
  },
  {
    "text": "and we will implement it later in JavaScript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=102"
  },
  {
    "text": "Now, let’s take a look at the new class field syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=106"
  },
  {
    "text": "We have new private class fields and methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=109"
  },
  {
    "text": "that let you define real private members ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=112"
  },
  {
    "text": "whose access is protected by the language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=116"
  },
  {
    "text": "You will see an error if you break the access rules. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=119"
  },
  {
    "text": "We also add support for static fields, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=122"
  },
  {
    "text": "which allows you to declare a class member ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=125"
  },
  {
    "text": "that can be accessed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=127"
  },
  {
    "text": "without creating an instance of the class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=129"
  },
  {
    "text": "Now you have the basic idea. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=132"
  },
  {
    "text": "Let’s check how it can be used with the stopwatch example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=135"
  },
  {
    "text": "If you are asked to implement the stopwatch class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=139"
  },
  {
    "text": "your implementation may look like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=143"
  },
  {
    "text": "StopwatchWithOneButton has only one method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=146"
  },
  {
    "text": "named click(). ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=149"
  },
  {
    "text": "It checks startTime variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=150"
  },
  {
    "text": "If start time is unset, the click means to start, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=153"
  },
  {
    "text": "so it will set the start time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=157"
  },
  {
    "text": "If start time is already set, the click means to stop, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=159"
  },
  {
    "text": "so it will calculate a duration and reset the start time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=163"
  },
  {
    "text": "You can see startTime comes with an underscore prefix. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=167"
  },
  {
    "text": "This is a naming convention commonly used to denote ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=171"
  },
  {
    "text": "that the variable should only be used inside of the class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=174"
  },
  {
    "text": "But that does not actually prevent the start time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=178"
  },
  {
    "text": "from being accessed publicly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=181"
  },
  {
    "text": "The new private syntax can help fix this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=183"
  },
  {
    "text": "Just replace the underscore with hash, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=186"
  },
  {
    "text": "and you can declare a real private instance field. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=188"
  },
  {
    "text": "The encapsulation is enforced by the language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=191"
  },
  {
    "text": "There is also support for private methods. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=195"
  },
  {
    "text": "For example, to make click() methods more structured, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=198"
  },
  {
    "text": "we can create two private methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=202"
  },
  {
    "text": "start() and stop() ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=204"
  },
  {
    "text": "to replace the highlighted content, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=206"
  },
  {
    "text": "By adding the hash prefix to methods, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=210"
  },
  {
    "text": "we make sure the member functions can only be accessed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=213"
  },
  {
    "text": "from inside of the class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=215"
  },
  {
    "text": "The new private syntax also applies to static fields ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=219"
  },
  {
    "text": "like startedStopwatchCount. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=223"
  },
  {
    "text": "Here, startedStopwatchCount can only be modified ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=225"
  },
  {
    "text": "by stopwatch objects at start or stop times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=228"
  },
  {
    "text": "Of course, if you want startedStopwatchCount ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=232"
  },
  {
    "text": "to be accessed everywhere, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=234"
  },
  {
    "text": "you can declare it as public static field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=237"
  },
  {
    "text": "without the hash prefix. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=240"
  },
  {
    "text": "Public static field is also available in WebKit now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=242"
  },
  {
    "text": "Private instance fields, methods, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=246"
  },
  {
    "text": "private static fields, and public static fields; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=248"
  },
  {
    "text": "that’s our new class field support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=252"
  },
  {
    "text": "And let’s continue to another feature, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=254"
  },
  {
    "text": "weak references. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=257"
  },
  {
    "text": "Weak references allow you to hold reference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=259"
  },
  {
    "text": "to a JavaScript object in a way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=262"
  },
  {
    "text": "that does not prevent garbage collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=264"
  },
  {
    "text": "Unlike WeakMap and WeakSet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=267"
  },
  {
    "text": "you can get the underlying object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=270"
  },
  {
    "text": "without already having a reference to it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=272"
  },
  {
    "text": "The support also includes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=275"
  },
  {
    "text": "notification on garbage collection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=277"
  },
  {
    "text": "so you may perform some cleanup task if you need to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=279"
  },
  {
    "text": "And let’s see how it can be used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=283"
  },
  {
    "text": "We just implemented the stopwatch class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=285"
  },
  {
    "text": "Now imagine you have created multiple stopwatch objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=288"
  },
  {
    "text": "for different tasks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=292"
  },
  {
    "text": "For testing, you need to click all of them at a time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=294"
  },
  {
    "text": "How would you do that? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=297"
  },
  {
    "text": "An intuitive way is to keep ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=299"
  },
  {
    "text": "a set of all stopwatch instances. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=301"
  },
  {
    "text": "When the stopwatch is created, add it to the set. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=304"
  },
  {
    "text": "Then in clickAllStopwatches function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=307"
  },
  {
    "text": "iterate the set and click each stopwatch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=310"
  },
  {
    "text": "But there is an issue with this approach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=314"
  },
  {
    "text": "We know JavaScript objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=317"
  },
  {
    "text": "hold strong reference by default, so in this case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=319"
  },
  {
    "text": "all stopwatch objects cannot be garbage collected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=322"
  },
  {
    "text": "because the set still has reference to them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=325"
  },
  {
    "text": "Of course, we don’t want to keep all stopwatch objects around ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=328"
  },
  {
    "text": "just for testing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=331"
  },
  {
    "text": "This is not great for memory use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=332"
  },
  {
    "text": "Now, you may suggest just replacing Set with WeakSet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=336"
  },
  {
    "text": "but WeakSet is not iterable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=339"
  },
  {
    "text": "So what would you do? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=342"
  },
  {
    "text": "We can solve it with the new interface WeakRef, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=344"
  },
  {
    "text": "which holds weak references to an object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=347"
  },
  {
    "text": "We still have the set, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=350"
  },
  {
    "text": "but this time we add WeakRef of stopwatch objects to the set. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=351"
  },
  {
    "text": "In clickAllStopwatches function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=356"
  },
  {
    "text": "we check if the object still exists ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=358"
  },
  {
    "text": "by dereferencing it before clicking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=361"
  },
  {
    "text": "This seems to solve our issue, but there is another problem: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=364"
  },
  {
    "text": "we don’t remove garbage-collected stopwatches ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=368"
  },
  {
    "text": "from the set in a timely manner, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=371"
  },
  {
    "text": "and the set can grow quite large before our next click test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=373"
  },
  {
    "text": "Now what should we do? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=377"
  },
  {
    "text": "Another new interface -- FinalizationRegistry -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=381"
  },
  {
    "text": "may help in this case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=384"
  },
  {
    "text": "With it, you can specify a callback to be invoked ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=385"
  },
  {
    "text": "at when some object is garbage collected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=389"
  },
  {
    "text": "Here we create a finalizationRegistry object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=392"
  },
  {
    "text": "with removeStopwatch function, so this function is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=395"
  },
  {
    "text": "every time an object is collected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=399"
  },
  {
    "text": "Then, we register stopwatch objects to the registry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=403"
  },
  {
    "text": "Each stopwatch is bound with an identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=407"
  },
  {
    "text": "so removeStopwatch knows which stopwatch to remove. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=410"
  },
  {
    "text": "Good, now garbage-collected stopwatches will be removed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=414"
  },
  {
    "text": "from allStopwatches. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=417"
  },
  {
    "text": "The usage of weak references sounds not that hard, right? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=420"
  },
  {
    "text": "But be aware that garbage collection in JavaScript ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=425"
  },
  {
    "text": "is very complicated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=428"
  },
  {
    "text": "and there is a lot of uncertainty. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=430"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=432"
  },
  {
    "text": "the object you think should be collected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=433"
  },
  {
    "text": "may not actually be collected until a long time after, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=435"
  },
  {
    "text": "and you may not get the callback from FinalizationRegistry ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=439"
  },
  {
    "text": "right way because it runs on event loop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=442"
  },
  {
    "text": "Therefore, make sure you fully understand the syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=446"
  },
  {
    "text": "and its expected behavior before use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=450"
  },
  {
    "text": "Let’s move on from weak references ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=453"
  },
  {
    "text": "to the next feature, top-level await. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=455"
  },
  {
    "text": "This is a new feature for modules. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=457"
  },
  {
    "text": "It enables you to use the await keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=460"
  },
  {
    "text": "outside of the async function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=463"
  },
  {
    "text": "In this case, the module itself is like a big async function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=466"
  },
  {
    "text": "so an async module can block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=470"
  },
  {
    "text": "the execution of the module importing them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=472"
  },
  {
    "text": "Let me show you an example with our stopwatch class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=475"
  },
  {
    "text": "This is the class we just created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=480"
  },
  {
    "text": "To illustrate a use of top-level await, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=483"
  },
  {
    "text": "let’s make it a module and export the class. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=485"
  },
  {
    "text": "This is an HTML file that contains an inline module. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=489"
  },
  {
    "text": "It imports the stopwatch module using dynamic import. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=493"
  },
  {
    "text": "The import function returns a promise, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=498"
  },
  {
    "text": "so we can use then or catch methods to perform actions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=501"
  },
  {
    "text": "after import is done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=505"
  },
  {
    "text": "With top-level await, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=507"
  },
  {
    "text": "you can remove the chaining methods ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=509"
  },
  {
    "text": "and write the code in a synchronous way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=511"
  },
  {
    "text": "This can make your code easier to follow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=514"
  },
  {
    "text": "Also, because imported modules are evaluated at load time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=518"
  },
  {
    "text": "so an async module can block execution of modules ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=522"
  },
  {
    "text": "depending on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=526"
  },
  {
    "text": "That means if stopwatch module runs async operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=528"
  },
  {
    "text": "and waits for result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=530"
  },
  {
    "text": "the stopwatch variable here will be initialized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=532"
  },
  {
    "text": "after stopwatch module finishes execution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=535"
  },
  {
    "text": "Top-level await has made it easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=539"
  },
  {
    "text": "to do dependency management. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=541"
  },
  {
    "text": "But again, this feature is only available in modules, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=543"
  },
  {
    "text": "so if the script is not a module, like this...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=547"
  },
  {
    "text": "...you will see a syntax error in Web Inspector. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=554"
  },
  {
    "text": "Speaking of modules, there’s another related feature: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=557"
  },
  {
    "text": "module workers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=561"
  },
  {
    "text": "Workers has some well-known benefits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=562"
  },
  {
    "text": "It can run scripts in a background thread, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=565"
  },
  {
    "text": "so resources can be utilized more efficiently. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=567"
  },
  {
    "text": "With this new support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=571"
  },
  {
    "text": "workers now share the benefits of modules, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=573"
  },
  {
    "text": "including dynamic import, optimized loading and execution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=576"
  },
  {
    "text": "and dependency management. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=580"
  },
  {
    "text": "It is more beneficial and easier for you to move heavy work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=584"
  },
  {
    "text": "from main thread to background thread now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=587"
  },
  {
    "text": "Modules is now available in different types of workers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=591"
  },
  {
    "text": "including web worker, service worker, and worklet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=595"
  },
  {
    "text": "To create a module worker, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=598"
  },
  {
    "text": "for web workers and service worker, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=601"
  },
  {
    "text": "you need to specify type to be module in the options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=603"
  },
  {
    "text": "For a worklet like Audio Worklet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=607"
  },
  {
    "text": "you can use addModule function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=609"
  },
  {
    "text": "It’s quite easy to create a module worker ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=612"
  },
  {
    "text": "that helps speed up your application. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=615"
  },
  {
    "text": "Last in JavaScript section ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=618"
  },
  {
    "text": "is updates on the Internationalization API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=619"
  },
  {
    "text": "This API provides language-based formatting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=623"
  },
  {
    "text": "It is useful if your web content is built for users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=626"
  },
  {
    "text": "in different locales. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=629"
  },
  {
    "text": "To show you how it can be used, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=631"
  },
  {
    "text": "I built this stopwatch records page because, you know, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=633"
  },
  {
    "text": "stopwatch needs to keep up with times ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=636"
  },
  {
    "text": "and our feature releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=639"
  },
  {
    "text": "This page shows us details about a single use of stopwatch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=641"
  },
  {
    "text": "including duration, start time, event, participants, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=645"
  },
  {
    "text": "and the available languages of the page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=649"
  },
  {
    "text": "Now, let’s dive into each section ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=653"
  },
  {
    "text": "and take a closer look of each interface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=655"
  },
  {
    "text": "First is NumberFormat. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=658"
  },
  {
    "text": "NumberFormat provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=660"
  },
  {
    "text": "language-sensitive number formatting, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=661"
  },
  {
    "text": "and it is used to format the duration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=663"
  },
  {
    "text": "Constructor of NumberFormat takes two optional parameters: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=666"
  },
  {
    "text": "language and options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=670"
  },
  {
    "text": "Here I set the language to English ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=673"
  },
  {
    "text": "and I make two options object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=675"
  },
  {
    "text": "which specify different minimum numbers of digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=678"
  },
  {
    "text": "After creating two NumberFormat objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=682"
  },
  {
    "text": "with language and options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=684"
  },
  {
    "text": "we can use them to format the duration numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=686"
  },
  {
    "text": "Here, if number is not milliseconds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=689"
  },
  {
    "text": "I use Format1 to keep two digits; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=692"
  },
  {
    "text": "otherwise I use Format2 to keep three digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=695"
  },
  {
    "text": "As you can see, the format method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=699"
  },
  {
    "text": "automatically adds padding zeroes for us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=701"
  },
  {
    "text": "There are many different options you can utilize ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=704"
  },
  {
    "text": "to create formats you need, such as style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=707"
  },
  {
    "text": "where you can specify value to be currency or unit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=710"
  },
  {
    "text": "Next is DateTimeFormat, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=714"
  },
  {
    "text": "which enables language-sensitive date and time formatting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=717"
  },
  {
    "text": "The usage is similar to NumberFormat. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=721"
  },
  {
    "text": "First, set the language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=723"
  },
  {
    "text": "Then, set the options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=725"
  },
  {
    "text": "In the options, I set different styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=727"
  },
  {
    "text": "for date and time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=729"
  },
  {
    "text": "The DateTimeFormat object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=731"
  },
  {
    "text": "provides a fine-grained configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=733"
  },
  {
    "text": "that even allows you to specify style for second or millisecond. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=735"
  },
  {
    "text": "After that, we can create a DateTimeFormat object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=740"
  },
  {
    "text": "with parameters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=744"
  },
  {
    "text": "and use it to format our start time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=745"
  },
  {
    "text": "The result is represented in English. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=748"
  },
  {
    "text": "You can see date is more detailed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=751"
  },
  {
    "text": "because it has the long style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=753"
  },
  {
    "text": "Next one is Segmenter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=757"
  },
  {
    "text": "It enables you to do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=759"
  },
  {
    "text": "language-sensitive string splitting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=761"
  },
  {
    "text": "I used it to find keywords in the event sentence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=763"
  },
  {
    "text": "This is the Chinese version of the stopwatch records page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=768"
  },
  {
    "text": "First, I declare a short list of keywords I want to highlight. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=772"
  },
  {
    "text": "The event string even includes a Unicode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=776"
  },
  {
    "text": "for the Celsius degree symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=778"
  },
  {
    "text": "Here we specify Chinese as language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=781"
  },
  {
    "text": "In options, the granularity is set to be a word. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=784"
  },
  {
    "text": "The other possible values are grapheme and sentence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=788"
  },
  {
    "text": "Then we create a Segmenter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=792"
  },
  {
    "text": "and use it to split the string with segment method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=794"
  },
  {
    "text": "We can iterate the result objects to get all segments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=798"
  },
  {
    "text": "Check and see if each segment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=802"
  },
  {
    "text": "is contained in the keyword list to mark it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=805"
  },
  {
    "text": "Segmenter is quite useful for interpreting languages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=808"
  },
  {
    "text": "like Chinese, where the word boundary is not that obvious. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=811"
  },
  {
    "text": "The next is ListFormat, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=818"
  },
  {
    "text": "which enables language-sensitive list formatting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=820"
  },
  {
    "text": "The same as before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=823"
  },
  {
    "text": "we can specify language and options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=825"
  },
  {
    "text": "ListFormat does not have as many options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=827"
  },
  {
    "text": "as the other interfaces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=830"
  },
  {
    "text": "The most useful ones I found are type and style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=832"
  },
  {
    "text": "With language and options, we can create a ListFormat ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=836"
  },
  {
    "text": "and format the participants list we have. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=840"
  },
  {
    "text": "As you can see, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=843"
  },
  {
    "text": "because the type is conjunction and the style is long, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=845"
  },
  {
    "text": "the format method adds a comma and a word “and” in the result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=848"
  },
  {
    "text": "The last one is DisplayNames. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=853"
  },
  {
    "text": "It provides consistent translation of display names ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=856"
  },
  {
    "text": "for language, region, and script. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=858"
  },
  {
    "text": "Here I specify language to be Japanese. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=861"
  },
  {
    "text": "DisplayNames can take language code as input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=864"
  },
  {
    "text": "In the options, we set type as language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=867"
  },
  {
    "text": "Then we can create DisplayNames object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=871"
  },
  {
    "text": "And here, using of method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=874"
  },
  {
    "text": "we can get the translated result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=876"
  },
  {
    "text": "Even though this page is built in English, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=879"
  },
  {
    "text": "Japanese users can know what languages are supported. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=881"
  },
  {
    "text": "And this is how I built the stopwatch records page ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=885"
  },
  {
    "text": "with new internationalization interfaces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=889"
  },
  {
    "text": "To refresh your memory, here is the list of things ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=892"
  },
  {
    "text": "we’ve just looked at in the JavaScript section. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=895"
  },
  {
    "text": "Following that, our next stop is updates in WebAssembly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=898"
  },
  {
    "text": "We’ve been shipping our WebAssembly engine ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=904"
  },
  {
    "text": "for a while, but in case you’re not familiar with it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=906"
  },
  {
    "text": "let me begin by filling in with some background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=909"
  },
  {
    "text": "of WebAssembly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=912"
  },
  {
    "text": "WebAssembly is a binary instruction format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=913"
  },
  {
    "text": "for a stack-based virtual machine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=916"
  },
  {
    "text": "It is a type of a code that can be run in modern web browsers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=920"
  },
  {
    "text": "with performance close to native code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=923"
  },
  {
    "text": "WebAssembly is designed to be a portable compilation target ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=926"
  },
  {
    "text": "for programming languages like C, C++, or Rust, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=930"
  },
  {
    "text": "so WebAssembly can help us deploy applications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=935"
  },
  {
    "text": "written in those languages on the web. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=937"
  },
  {
    "text": "In most use cases of WebAssembly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=942"
  },
  {
    "text": "it runs alongside with JavaScript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=945"
  },
  {
    "text": "They can communicate with each other ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=947"
  },
  {
    "text": "through the WebAssembly API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=949"
  },
  {
    "text": "WebAssembly can provide near-native performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=952"
  },
  {
    "text": "and makes powerful frameworks available on the web. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=954"
  },
  {
    "text": "JavaScript can manipulate the DOM ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=959"
  },
  {
    "text": "and offers powerful web APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=961"
  },
  {
    "text": "They can be good additions to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=964"
  },
  {
    "text": "A good example of WebAssembly use is Funky Karts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=969"
  },
  {
    "text": "It is a game converted from C++ to WebAssembly with Emscripten. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=972"
  },
  {
    "text": "As you can see, it gets to run very smoothly in Safari. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=977"
  },
  {
    "text": "This year, we’ve upgraded our WebAssembly engine ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=982"
  },
  {
    "text": "with following features: new memory instructions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=985"
  },
  {
    "text": "that give you better performance on bulk memory operations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=990"
  },
  {
    "text": "like copying or initializing blocks of memory; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=993"
  },
  {
    "text": "new instructions to tell user process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=997"
  },
  {
    "text": "not to trap on exception, like positive overflow ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1000"
  },
  {
    "text": "when converting between float and int; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1003"
  },
  {
    "text": "new sign-extension operators ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1007"
  },
  {
    "text": "that let you extend a signed integer; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1009"
  },
  {
    "text": "implementation of the latest proposal to convert ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1014"
  },
  {
    "text": "between WebAssembly type i64 and JavaScript BigInt, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1017"
  },
  {
    "text": "which is simpler than previous solutions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1021"
  },
  {
    "text": "and can make your code run faster; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1023"
  },
  {
    "text": "new reference types that allows WebAssembly modules ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1027"
  },
  {
    "text": "to hold references to JavaScript and DOM objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1030"
  },
  {
    "text": "passing them as arguments and storing them; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1033"
  },
  {
    "text": "and finally, streaming download and compilation of WebAssembly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1037"
  },
  {
    "text": "that shortens overall execution time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1041"
  },
  {
    "text": "These are the highlights of our new WebAssembly features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1044"
  },
  {
    "text": "We hope they will help your development. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1048"
  },
  {
    "text": "Now, let's move from powerful low-level code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1051"
  },
  {
    "text": "to some high-level APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1053"
  },
  {
    "text": "In this section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1057"
  },
  {
    "text": "we are going to explore the new web APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1059"
  },
  {
    "text": "My goal is to not only let you know ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1062"
  },
  {
    "text": "about the new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1064"
  },
  {
    "text": "but also make you feel you are ready to use them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1066"
  },
  {
    "text": "so you will see some good examples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1069"
  },
  {
    "text": "But this will not be a complete tutorial, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1072"
  },
  {
    "text": "so remember to check official documentation before use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1074"
  },
  {
    "text": "This is a preview of features I will talk about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1079"
  },
  {
    "text": "Some of them are completely new ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1082"
  },
  {
    "text": "like Speech Recognition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1084"
  },
  {
    "text": "and some of them are already there, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1086"
  },
  {
    "text": "but we have some updates we’d like to share, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1088"
  },
  {
    "text": "like Storage Access. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1090"
  },
  {
    "text": "Now, let’s dig into each of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1092"
  },
  {
    "text": "We know to make the web content attractive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1097"
  },
  {
    "text": "it’s very important to provide amazing visual experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1099"
  },
  {
    "text": "With WebGL2 being available in WebKit and Safari, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1104"
  },
  {
    "text": "it’s easier for you to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1107"
  },
  {
    "text": "beautiful, interactive web content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1109"
  },
  {
    "text": "Here is a good example of what can be done ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1113"
  },
  {
    "text": "with WebGL2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1115"
  },
  {
    "text": "After the Flood is an interactive demo ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1117"
  },
  {
    "text": "developed by PlayCanvas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1119"
  },
  {
    "text": "You can see the gentle wind sways the tree. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1122"
  },
  {
    "text": "It looks vivid in Safari. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1125"
  },
  {
    "text": "So what is WebGL2? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1128"
  },
  {
    "text": "WebGL is a very widely used low-level API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1130"
  },
  {
    "text": "for rendering 2D and 3D graphics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1133"
  },
  {
    "text": "WebGL2 is an upgrade of WebGL ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1136"
  },
  {
    "text": "that eliminates fallbacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1138"
  },
  {
    "text": "and introduces some cool new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1140"
  },
  {
    "text": "It adds 3D textures to allow rendering volumetric effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1143"
  },
  {
    "text": "like cloud. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1147"
  },
  {
    "text": "It has sampler objects that give you more flexibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1149"
  },
  {
    "text": "about how to use textures in shaders. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1152"
  },
  {
    "text": "It provides transform feedback that helps you implement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1156"
  },
  {
    "text": "performance particle systems on the GPU. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1159"
  },
  {
    "text": "There are so many great new features in WebGL2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1163"
  },
  {
    "text": "And more importantly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1167"
  },
  {
    "text": "WebGL2 is now available in Safari on all Apple devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1169"
  },
  {
    "text": "That means you can build a beautiful site ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1174"
  },
  {
    "text": "that looks great everywhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1176"
  },
  {
    "text": "And let’s get more familiar with WebGL2 with an example: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1179"
  },
  {
    "text": "creating an orange square. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1182"
  },
  {
    "text": "And this is the JavaScript code you need to write for it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1186"
  },
  {
    "text": "If you have not used WebGL before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1190"
  },
  {
    "text": "this may not be as easy as you would have imagined. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1192"
  },
  {
    "text": "As I mentioned, because WebGL is a low-level API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1197"
  },
  {
    "text": "it can be very verbose. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1200"
  },
  {
    "text": "But don’t worry; there are many great libraries and frameworks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1203"
  },
  {
    "text": "that can help simplify your development. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1207"
  },
  {
    "text": "With them, it’s not that hard to create a nice square ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1210"
  },
  {
    "text": "or something more complicated than that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1213"
  },
  {
    "text": "Now, if you already use WebGL in you web content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1217"
  },
  {
    "text": "there is also a good news. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1220"
  },
  {
    "text": "We have improved our support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1223"
  },
  {
    "text": "by migrating backend from OpenGL to Metal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1225"
  },
  {
    "text": "That means iOS Simulator is now able to use the GPU ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1229"
  },
  {
    "text": "for web content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1232"
  },
  {
    "text": "making it a much more accurate representation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1234"
  },
  {
    "text": "of what your users will see. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1237"
  },
  {
    "text": "Also, you can use Metal tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1240"
  },
  {
    "text": "such as the Xcode Frame Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1242"
  },
  {
    "text": "to analyze your WebGL code now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1245"
  },
  {
    "text": "Besides creating content with WebGL, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1247"
  },
  {
    "text": "another common way to provide great visual experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1250"
  },
  {
    "text": "is through video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1253"
  },
  {
    "text": "Not all browsers have the same kind of support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1254"
  },
  {
    "text": "for media formats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1257"
  },
  {
    "text": "so sometimes it might be tricky for you to decide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1259"
  },
  {
    "text": "which format you are going to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1262"
  },
  {
    "text": "To make things easier for you, this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1266"
  },
  {
    "text": "we have increased our support for WebM, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1269"
  },
  {
    "text": "a common media format on the web. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1271"
  },
  {
    "text": "For a start, the support is only for streaming playback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1275"
  },
  {
    "text": "In macOS 11.3, we added support for playing WebM files ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1279"
  },
  {
    "text": "containing VP8 or VP9 video and Vorbis audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1284"
  },
  {
    "text": "And in macOS 12, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1288"
  },
  {
    "text": "we add support for files containing Opus audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1290"
  },
  {
    "text": "Last year, we started supporting WebM played through ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1294"
  },
  {
    "text": "Media Source Extensions on macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1297"
  },
  {
    "text": "Now, we’re bringing that support to iPadOS 15. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1300"
  },
  {
    "text": "To check if WebM is supported in your code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1304"
  },
  {
    "text": "you can use MediaCapabilities API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1307"
  },
  {
    "text": "which lets you detect the exact media configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1310"
  },
  {
    "text": "you want to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1313"
  },
  {
    "text": "The configuration on the screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1315"
  },
  {
    "text": "is supported in the latest Safari, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1316"
  },
  {
    "text": "and that means VP9 is also supported now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1319"
  },
  {
    "text": "With support for this video-coding format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1323"
  },
  {
    "text": "we expect more web content to be available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1326"
  },
  {
    "text": "in Safari and WebKit apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1329"
  },
  {
    "text": "You can use VP9 in both streaming and WebRTC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1332"
  },
  {
    "text": "It works on macOS and iPadOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1336"
  },
  {
    "text": "Regarding support on different devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1339"
  },
  {
    "text": "it is available on all Apple silicon Macs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1342"
  },
  {
    "text": "For the others, you can check with MediaCapabilities API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1346"
  },
  {
    "text": "just like what we just saw for WebM. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1350"
  },
  {
    "text": "Now, if your site has WebM or VP9 content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1353"
  },
  {
    "text": "I encourage you to check how it works ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1357"
  },
  {
    "text": "in the latest Safari and WebKit; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1359"
  },
  {
    "text": "but if you are still deciding which media format to use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1361"
  },
  {
    "text": "we would recommend H.264 or HEVC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1365"
  },
  {
    "text": "H.264 is mature and well-supported ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1370"
  },
  {
    "text": "across browsers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1372"
  },
  {
    "text": "HEVC has great support for high-quality videos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1374"
  },
  {
    "text": "They both come with hardware acceleration that can provide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1378"
  },
  {
    "text": "smoother playback and longer playback battery life. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1381"
  },
  {
    "text": "Talking about hosting video content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1386"
  },
  {
    "text": "a common case is that we don’t own the content; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1388"
  },
  {
    "text": "instead, we get it from a third party. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1391"
  },
  {
    "text": "For example, I see this nice video on video.domain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1393"
  },
  {
    "text": "To make it appear on my site, main.domain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1398"
  },
  {
    "text": "I can load this video source from video.domain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1401"
  },
  {
    "text": "or I just create iframes of video.domain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1404"
  },
  {
    "text": "For security reasons, third-party iframes or resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1409"
  },
  {
    "text": "do not have access to first-party storage by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1413"
  },
  {
    "text": "And that means if the resource request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1416"
  },
  {
    "text": "for video.domain is initiated from main.domain, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1418"
  },
  {
    "text": "it will not include the cookies of video.domain. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1422"
  },
  {
    "text": "This can be a problem when web servers of video.domain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1426"
  },
  {
    "text": "only want to serve content to authenticated users. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1429"
  },
  {
    "text": "And no cookies means no authentication. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1433"
  },
  {
    "text": "The Storage Access API solves this issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1437"
  },
  {
    "text": "It enables third-party iframes to request permission ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1441"
  },
  {
    "text": "to access first-party cookies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1445"
  },
  {
    "text": "If user grants the permission, the third-party video.domain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1448"
  },
  {
    "text": "will be able to access its first-party cookies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1453"
  },
  {
    "text": "The Storage Access API has been available in WebKit and Safari ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1457"
  },
  {
    "text": "for over three years. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1460"
  },
  {
    "text": "To improve interoperability, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1462"
  },
  {
    "text": "this year we have added two new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1465"
  },
  {
    "text": "First, access is granted on a per-page scope. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1469"
  },
  {
    "text": "It means once permission is granted for a third party, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1472"
  },
  {
    "text": "it is extended to all its subresources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1475"
  },
  {
    "text": "on the same page. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1478"
  },
  {
    "text": "You don't have to make a request for each iframe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1480"
  },
  {
    "text": "Second, we allow nested iframes to make requests. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1485"
  },
  {
    "text": "This means iframes inside of iframes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1489"
  },
  {
    "text": "can also request access to first-party cookies, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1492"
  },
  {
    "text": "which was not possible before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1495"
  },
  {
    "text": "To learn more about the new usage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1498"
  },
  {
    "text": "please check our blog post ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1501"
  },
  {
    "text": "“Updates to the Storage Access API” at webkit.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1503"
  },
  {
    "text": "Now we know how to load or import video content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1508"
  },
  {
    "text": "from a third party with user permission if needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1511"
  },
  {
    "text": "How about creating something on your own? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1515"
  },
  {
    "text": "With the new Media Recorder API, it’s very easy to do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1518"
  },
  {
    "text": "Media Recorder API enables you to capture data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1523"
  },
  {
    "text": "from media elements, which includes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1526"
  },
  {
    "text": "HTML media elements like video tag ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1528"
  },
  {
    "text": "or MediaStream objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1531"
  },
  {
    "text": "You can use it to record from user’s input devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1534"
  },
  {
    "text": "You can specify desired options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1539"
  },
  {
    "text": "such as the container's MIME type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1541"
  },
  {
    "text": "or desired bit rates of tracks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1543"
  },
  {
    "text": "The API is simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1547"
  },
  {
    "text": "It is comprised of a single major interface, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1549"
  },
  {
    "text": "MediaRecorder, which does all the work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1552"
  },
  {
    "text": "of collecting the data from source and delivering it to you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1554"
  },
  {
    "text": "Let me show you an example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1558"
  },
  {
    "text": "I used MediaRecorder API to build this web app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1562"
  },
  {
    "text": "called \"Voice Memo.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1565"
  },
  {
    "text": "This is my first voice memo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1567"
  },
  {
    "text": "Click the button, it starts recording from microphone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1569"
  },
  {
    "text": "Click again, it stops recording and offers playback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1573"
  },
  {
    "text": "This is my first voice memo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1576"
  },
  {
    "text": "That is fun. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1579"
  },
  {
    "text": "And now let’s check the implementation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1581"
  },
  {
    "text": "We have two major functions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1585"
  },
  {
    "text": "startRecording and stopRecording. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1587"
  },
  {
    "text": "In startRecording, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1589"
  },
  {
    "text": "we get the input media stream for microphone. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1590"
  },
  {
    "text": "Then we create a MediaRecorder object with that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1593"
  },
  {
    "text": "We listen to two events of the media recorder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1596"
  },
  {
    "text": "And then we can start the recorder with start method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1600"
  },
  {
    "text": "To stop recording, we just need to call stop method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1603"
  },
  {
    "text": "on mediaRecorder object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1606"
  },
  {
    "text": "Here are the two event handlers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1610"
  },
  {
    "text": "When some captured data is available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1612"
  },
  {
    "text": "we store it in an array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1615"
  },
  {
    "text": "When the recording is stopped, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1617"
  },
  {
    "text": "we make a blob with collected data in an array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1619"
  },
  {
    "text": "and send it to an existing audio element for playback. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1621"
  },
  {
    "text": "Just like that, you can create a functional voice recorder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1625"
  },
  {
    "text": "After you collect the audio data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1629"
  },
  {
    "text": "you may want to edit it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1631"
  },
  {
    "text": "In this case, you can put the new Audio Worklet API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1633"
  },
  {
    "text": "to good use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1636"
  },
  {
    "text": "The Audio Worklet interface is part of Web Audio API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1638"
  },
  {
    "text": "which you may already be familiar with ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1642"
  },
  {
    "text": "if you have done audio processing on the web before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1644"
  },
  {
    "text": "It allows us to run scripts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1647"
  },
  {
    "text": "such as JavaScript or WebAssembly code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1649"
  },
  {
    "text": "to process audio on the audio-rendering thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1652"
  },
  {
    "text": "supporting custom AudioNodes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1655"
  },
  {
    "text": "Compared with ScriptProcessorNode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1657"
  },
  {
    "text": "the previous solution to run custom script ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1660"
  },
  {
    "text": "it reduces the hopping between rendering thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1662"
  },
  {
    "text": "and main thread and ensures low latency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1665"
  },
  {
    "text": "With Audio Worklet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1669"
  },
  {
    "text": "I added a new capability to my Voice Memo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1671"
  },
  {
    "text": "This is my distorted voice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1675"
  },
  {
    "text": "If Distortion box is checked for recording, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1677"
  },
  {
    "text": "some distortion effect will be applied to the audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1680"
  },
  {
    "text": "This is my distorted voice ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1683"
  },
  {
    "text": "That sounds cool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1686"
  },
  {
    "text": "and let’s take a look at how it is implemented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1688"
  },
  {
    "text": "I modified the startRecording function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1692"
  },
  {
    "text": "to add audio processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1694"
  },
  {
    "text": "We still need to get the MediaStream ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1696"
  },
  {
    "text": "for audio input first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1698"
  },
  {
    "text": "To use Audio Worklet API, there are four basic steps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1700"
  },
  {
    "text": "Step one: create a source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1703"
  },
  {
    "text": "Step two: create an AudioWorkletNode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1706"
  },
  {
    "text": "and bind it with an Audio Worklet processor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1709"
  },
  {
    "text": "which performs audio processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1711"
  },
  {
    "text": "The processor is implemented in a module, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1714"
  },
  {
    "text": "and we will look at it later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1717"
  },
  {
    "text": "Step three: create a destination. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1719"
  },
  {
    "text": "Step four: connect the path from source to destination. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1721"
  },
  {
    "text": "This time, MediaRecorder takes the output ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1726"
  },
  {
    "text": "from AudioWorklet as source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1729"
  },
  {
    "text": "and it records the distorted audio. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1731"
  },
  {
    "text": "This is the audio-processing module. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1735"
  },
  {
    "text": "We implement the DistortionProcessor class here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1738"
  },
  {
    "text": "It must extend the AudioWorkletProcessor class ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1741"
  },
  {
    "text": "and must provide the implementation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1745"
  },
  {
    "text": "for process function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1747"
  },
  {
    "text": "The inputs are the audio samples coming into Audio Worklet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1749"
  },
  {
    "text": "and outputs are the resulting samples after processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1754"
  },
  {
    "text": "You can use different algorithms to create output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1757"
  },
  {
    "text": "Here, I use a custom function called distort() ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1761"
  },
  {
    "text": "to calculate a value based on input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1764"
  },
  {
    "text": "Process function returns true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1766"
  },
  {
    "text": "meaning the processor node is active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1769"
  },
  {
    "text": "That’s the basic structure of the process function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1772"
  },
  {
    "text": "After creating the processor class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1775"
  },
  {
    "text": "we need to globally register it under a specified name, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1778"
  },
  {
    "text": "so it can be used to construct AudioWorkletNode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1781"
  },
  {
    "text": "Just like that, you can apply sound effects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1785"
  },
  {
    "text": "to your audio data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1788"
  },
  {
    "text": "So far we have discussed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1790"
  },
  {
    "text": "about producing and processing audio data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1791"
  },
  {
    "text": "How about storing it or sharing it to somewhere else ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1794"
  },
  {
    "text": "for your record? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1797"
  },
  {
    "text": "I guess you don’t want to lose the recording ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1799"
  },
  {
    "text": "after you quit the browser. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1801"
  },
  {
    "text": "With updates to Web Share API this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1804"
  },
  {
    "text": "it’s quite easy to do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1806"
  },
  {
    "text": "Web Share is not new in WebKit and Safari. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1810"
  },
  {
    "text": "If you choose to share a link on a web page in Safari, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1813"
  },
  {
    "text": "a share sheet will show up with sharing targets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1817"
  },
  {
    "text": "like Messages, Mail, or AirDrop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1819"
  },
  {
    "text": "The share sheet that matches well with the system style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1824"
  },
  {
    "text": "is created with Web Share API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1827"
  },
  {
    "text": "This year, we have added support for file sharing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1832"
  },
  {
    "text": "It means you can share image, video, audio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1836"
  },
  {
    "text": "or other types of file with this API now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1839"
  },
  {
    "text": "Let’s add the sharing capability to Voice Memo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1843"
  },
  {
    "text": "If the Save box is checked, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1847"
  },
  {
    "text": "Voice Memo will create an audio file with captured data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1849"
  },
  {
    "text": "and display a Share button to let us share the file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1853"
  },
  {
    "text": "Here, I want to share the memo file by email. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1857"
  },
  {
    "text": "With just one click, a nice draft is created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1860"
  },
  {
    "text": "with the memo file attached. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1863"
  },
  {
    "text": "And let’s check the code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1866"
  },
  {
    "text": "This is the stop event handler we saw ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1869"
  },
  {
    "text": "in the MediaRecorder example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1872"
  },
  {
    "text": "First, let’s make the blob variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1874"
  },
  {
    "text": "in stop event handler global, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1876"
  },
  {
    "text": "so it can be used by the share function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1878"
  },
  {
    "text": "The share function is the click event handler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1881"
  },
  {
    "text": "of the share button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1883"
  },
  {
    "text": "It converts a blob to a file and gives it a file name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1885"
  },
  {
    "text": "The file is put in an array ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1889"
  },
  {
    "text": "because that’s the expected input type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1892"
  },
  {
    "text": "Then we check if the API is available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1894"
  },
  {
    "text": "and if the file can be shared with canShare method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1897"
  },
  {
    "text": "If check is passed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1900"
  },
  {
    "text": "we call navigator.share with the file array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1902"
  },
  {
    "text": "There are options you can specify, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1906"
  },
  {
    "text": "like title and description text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1908"
  },
  {
    "text": "It’s as easy as that to make your web app to share files ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1911"
  },
  {
    "text": "like a native app does. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1914"
  },
  {
    "text": "Well, if you don’t actually want to interact with audio data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1917"
  },
  {
    "text": "but just want the text of it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1921"
  },
  {
    "text": "for example, in the case of voice command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1923"
  },
  {
    "text": "there is also a new API for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1925"
  },
  {
    "text": "That’s Speech Recognition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1928"
  },
  {
    "text": "Like its name suggested, Speech Recognition API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1931"
  },
  {
    "text": "captures live audio and transcribes it to text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1934"
  },
  {
    "text": "It also gives you probabilities and alternatives of transcript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1938"
  },
  {
    "text": "It uses the same speech engine as Siri, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1943"
  },
  {
    "text": "and it gets all the benefits: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1946"
  },
  {
    "text": "multiple languages support and great accuracy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1948"
  },
  {
    "text": "That also means your user will need to turn on Siri ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1952"
  },
  {
    "text": "or Dictation in System Preferences or Settings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1955"
  },
  {
    "text": "to make the API available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1958"
  },
  {
    "text": "Recognition can be server based, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1961"
  },
  {
    "text": "so we put up a privacy prompt when recognition service ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1963"
  },
  {
    "text": "is used for the first time in the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1966"
  },
  {
    "text": "Users can change the permission ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1969"
  },
  {
    "text": "in System Preferences or Settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1971"
  },
  {
    "text": "Now, let’s update Voice Memo with this new capability. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1975"
  },
  {
    "text": "If the Recognition box is checked, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1979"
  },
  {
    "text": "it means generating a transcript for the recording. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1981"
  },
  {
    "text": "This is my Voice Memo transcript. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1984"
  },
  {
    "text": "Period. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1987"
  },
  {
    "text": "And let’s check the code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1990"
  },
  {
    "text": "The usage is a bit like media recorder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1993"
  },
  {
    "text": "Here we have two major functions: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1996"
  },
  {
    "text": "startRecognition and stopRecognition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=1998"
  },
  {
    "text": "You need to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2001"
  },
  {
    "text": "a webkitSpeechRecognition object first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2002"
  },
  {
    "text": "Yes, we still keep the WebKit prefix for now ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2005"
  },
  {
    "text": "for compatibility, so don’t forget to add it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2008"
  },
  {
    "text": "Then you can set some properties of the recognition, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2012"
  },
  {
    "text": "like continuous, which asks recognition to keep going ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2016"
  },
  {
    "text": "until it is stopped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2019"
  },
  {
    "text": "We listen to result and end events. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2022"
  },
  {
    "text": "With recognition object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2025"
  },
  {
    "text": "we can call start method to start ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2027"
  },
  {
    "text": "and call stop method to stop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2030"
  },
  {
    "text": "On result event, we collect finalTranscript to a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2035"
  },
  {
    "text": "Here, I only pick the first item of the results ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2039"
  },
  {
    "text": "because the transcription alternatives are sorted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2042"
  },
  {
    "text": "based on probabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2045"
  },
  {
    "text": "When recognition stops, I use a custom log function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2047"
  },
  {
    "text": "to print the transcript to the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2050"
  },
  {
    "text": "Like that, you can add recognition capability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2053"
  },
  {
    "text": "to your web content within just a few lines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2056"
  },
  {
    "text": "It’s been a long journey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2060"
  },
  {
    "text": "and there’s one last web API I think worth mentioning. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2062"
  },
  {
    "text": "You may have noticed that on macOS and iOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2066"
  },
  {
    "text": "the Now Playing widget can show you media states in Safari. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2069"
  },
  {
    "text": "It’s convenient, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2073"
  },
  {
    "text": "but it usually does not contain much information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2075"
  },
  {
    "text": "For example, this only shows the title of web page; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2079"
  },
  {
    "text": "no information about what audio is being played. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2083"
  },
  {
    "text": "There is a new web API that can help you improve this situation: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2086"
  },
  {
    "text": "the Media Session API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2092"
  },
  {
    "text": "Media Session API lets you communicate media states ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2095"
  },
  {
    "text": "between web page and other platform components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2099"
  },
  {
    "text": "If you want your user to view or control media states ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2102"
  },
  {
    "text": "outside of the web page, like in the Now Playing widget, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2105"
  },
  {
    "text": "this is the API you need to know. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2109"
  },
  {
    "text": "For more details about Media Session API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2112"
  },
  {
    "text": "please check our WWDC session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2115"
  },
  {
    "text": "\"Coordinate media playback on the web with GroupActivities.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2118"
  },
  {
    "text": "And these are the new features we have just explored. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2124"
  },
  {
    "text": "I hope you feel you have learned something of it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2127"
  },
  {
    "text": "And your homework today ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2130"
  },
  {
    "text": "is to implement your own Voice Memo ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2131"
  },
  {
    "text": "with these new APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2133"
  },
  {
    "text": "I'm just kidding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2136"
  },
  {
    "text": "but we do have a few things we hope you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2137"
  },
  {
    "text": "to help us bring you the best development experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2140"
  },
  {
    "text": "in WebKit and Safari. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2143"
  },
  {
    "text": "Please try out the new features in the latest WebKit and Safari ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2145"
  },
  {
    "text": "and file bug reports at bugs.webkit.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2149"
  },
  {
    "text": "You can take a sneak peek of new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2153"
  },
  {
    "text": "or features under active development ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2156"
  },
  {
    "text": "with Safari Technology Preview. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2158"
  },
  {
    "text": "If you are interested in web technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2161"
  },
  {
    "text": "that are used in WebKit or Safari, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2163"
  },
  {
    "text": "or interested in joining the WebKit community, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2165"
  },
  {
    "text": "webkit.org is a good source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2168"
  },
  {
    "text": "If you want to get fresh updates about WebKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2171"
  },
  {
    "text": "or if you have any question for us, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2174"
  },
  {
    "text": "don’t forget to follow us or tag us on Twitter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2177"
  },
  {
    "text": "Thanks for watching this session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2180"
  },
  {
    "text": "and I hope you have a great time at WWDC! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2182"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10030/?time=2185"
  }
]