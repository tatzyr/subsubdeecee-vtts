[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=2"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=8"
  },
  {
    "text": "Ali de Jong: Welcome to WWDC 2021. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=9"
  },
  {
    "text": "My name is Ali de Jong, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=12"
  },
  {
    "text": "and I'm a GPU software engineer at Apple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=13"
  },
  {
    "text": "And today, along with my colleague David Núñez Rubio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=16"
  },
  {
    "text": "we'll explore hybrid rendering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=20"
  },
  {
    "text": "with Metal ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=21"
  },
  {
    "text": "We'll start by showing you some improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=23"
  },
  {
    "text": "that ray tracing can bring to your visuals; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=25"
  },
  {
    "text": "then discuss how to incorporate a ray tracing pass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=29"
  },
  {
    "text": "into rasterization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=31"
  },
  {
    "text": "using a technique called \"hybrid rendering;\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=33"
  },
  {
    "text": "then David will walk us through the new tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=36"
  },
  {
    "text": "to help you implement ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=39"
  },
  {
    "text": "Let's start by taking a look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=43"
  },
  {
    "text": "at some great use cases for ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=44"
  },
  {
    "text": "Games and movies are in the constant pursuit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=48"
  },
  {
    "text": "of ever-increasing realism, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=51"
  },
  {
    "text": "and for many years, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=52"
  },
  {
    "text": "the approach to graphics has been by means of rasterization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=53"
  },
  {
    "text": "Rasterization is great at producing beautiful images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=57"
  },
  {
    "text": "at real-time rates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=59"
  },
  {
    "text": "However, there are limitations to what we can achieve. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=61"
  },
  {
    "text": "Ray tracing is a mechanism ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=64"
  },
  {
    "text": "that allows us to query the world from shaders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=66"
  },
  {
    "text": "opening the door to new, exciting techniques. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=68"
  },
  {
    "text": "And by combining it with rasterization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=71"
  },
  {
    "text": "we can greatly improve our visuals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=73"
  },
  {
    "text": "Let's take a look at a few examples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=76"
  },
  {
    "text": "One area that's always been problematic for rasterization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=79"
  },
  {
    "text": "is reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=82"
  },
  {
    "text": "This is because when we're shading a rasterized pixel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=83"
  },
  {
    "text": "we have no context of the rest of the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=86"
  },
  {
    "text": "for accurate reflections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=88"
  },
  {
    "text": "and we have to do extra work to generate that information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=90"
  },
  {
    "text": "Ray tracing allows us to trace array ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=94"
  },
  {
    "text": "from the pixel being shaded ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=96"
  },
  {
    "text": "and discover what's out there in the world. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=97"
  },
  {
    "text": "Even better, we can apply this process recursively ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=99"
  },
  {
    "text": "to apply correct shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=102"
  },
  {
    "text": "and even reflections in reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=103"
  },
  {
    "text": "Another area where ray tracing excels is shadows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=108"
  },
  {
    "text": "Notice with rasterization, the shadows' general blurriness ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=111"
  },
  {
    "text": "and the aliasing caused by a shadow map resolution ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=114"
  },
  {
    "text": "on the curved surfaces of the moped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=117"
  },
  {
    "text": "Ray-traced shadows are sharper and address aliasing issues ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=120"
  },
  {
    "text": "without the need of artificial parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=124"
  },
  {
    "text": "such as a shadow bias. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=125"
  },
  {
    "text": "Soft shadows can also be approximated more accurately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=127"
  },
  {
    "text": "We can naturally produce shadows that are harder or softer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=131"
  },
  {
    "text": "depending on the proximity of the occluding object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=134"
  },
  {
    "text": "to the shaded point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=136"
  },
  {
    "text": "With rasterization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=138"
  },
  {
    "text": "we would need to rely on filtering the shadow map ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=139"
  },
  {
    "text": "at sampling time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=141"
  },
  {
    "text": "But with ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=143"
  },
  {
    "text": "we can simply trace rays in a cone to get this result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=144"
  },
  {
    "text": "Lastly, another area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=147"
  },
  {
    "text": "where ray tracing can elevate our visuals is transparency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=148"
  },
  {
    "text": "This is traditionally very hard to handle accurately ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=152"
  },
  {
    "text": "for rasterization techniques. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=154"
  },
  {
    "text": "In this image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=156"
  },
  {
    "text": "note how the sunlight is coming through the window, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=157"
  },
  {
    "text": "yet the opaque letters on the glass produce no shadow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=159"
  },
  {
    "text": "Traditional shadow-mapping techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=162"
  },
  {
    "text": "often have problems with transparent objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=164"
  },
  {
    "text": "With ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=168"
  },
  {
    "text": "we can create a custom intersection function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=169"
  },
  {
    "text": "for transparent materials. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=171"
  },
  {
    "text": "With this, we can define ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=172"
  },
  {
    "text": "which rays are able to pass through the material ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=174"
  },
  {
    "text": "and which ones don't, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=176"
  },
  {
    "text": "naturally producing projected shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=177"
  },
  {
    "text": "like the letters on the head of the bust. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=179"
  },
  {
    "text": "And of course, all the shadows look sharper overall. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=181"
  },
  {
    "text": "So why is it that ray tracing is able to improve our visuals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=185"
  },
  {
    "text": "so dramatically? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=188"
  },
  {
    "text": "To understand this, let's take a look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=190"
  },
  {
    "text": "at how the traditional rasterization process works. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=191"
  },
  {
    "text": "In the rasterization process, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=195"
  },
  {
    "text": "meshes are sent down to Metal to be rendered. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=197"
  },
  {
    "text": "They are placed in the world and in front of the camera ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=200"
  },
  {
    "text": "by a vertex shader, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=202"
  },
  {
    "text": "and those primitives are placed onto pixels -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=204"
  },
  {
    "text": "or fragments -- by the rasterizer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=206"
  },
  {
    "text": "These pixels are then shaded by a fragment shader, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=208"
  },
  {
    "text": "and the result is blended onto the output image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=211"
  },
  {
    "text": "As you know, each pixel can be shaded independently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=215"
  },
  {
    "text": "operating in parallel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=218"
  },
  {
    "text": "which is what makes GPUs so good at the rasterization process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=219"
  },
  {
    "text": "The tradeoff, however, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=223"
  },
  {
    "text": "is at the time we're applying our shading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=224"
  },
  {
    "text": "we've completely lost the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=226"
  },
  {
    "text": "of the rest of our scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=227"
  },
  {
    "text": "and we don't know what objects might be surrounding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=228"
  },
  {
    "text": "the point associated with this pixel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=230"
  },
  {
    "text": "Advanced game engines make up for this situation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=234"
  },
  {
    "text": "by adding extra render passes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=236"
  },
  {
    "text": "that generate intermediate information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=238"
  },
  {
    "text": "The fragment shader can then leverage that data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=241"
  },
  {
    "text": "to approximate the details of the geometric context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=243"
  },
  {
    "text": "the point is in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=246"
  },
  {
    "text": "Let's take a look at how this works in a bit more detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=248"
  },
  {
    "text": "For this technique, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=251"
  },
  {
    "text": "you rasterize geometric information about the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=253"
  },
  {
    "text": "to intermediate textures instead of directly to the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=255"
  },
  {
    "text": "This can be things like albedo, depth, or normals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=259"
  },
  {
    "text": "This is commonly referred to as a Geometry Buffer pass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=263"
  },
  {
    "text": "or G-Buffer pass for short. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=266"
  },
  {
    "text": "The intermediate textures are used as input ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=269"
  },
  {
    "text": "for light approximation passes that use smart tricks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=271"
  },
  {
    "text": "to approximate how the light would interact with the objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=274"
  },
  {
    "text": "in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=277"
  },
  {
    "text": "Some examples are screen-space ambient occlusion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=278"
  },
  {
    "text": "and screen-space reflection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=280"
  },
  {
    "text": "In the last step, our intermediate attachments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=283"
  },
  {
    "text": "are often denoised or blurred slightly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=285"
  },
  {
    "text": "to make for a smoother image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=287"
  },
  {
    "text": "and everything is combined together ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=289"
  },
  {
    "text": "to produce the final image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=291"
  },
  {
    "text": "While these sometimes elaborate techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=293"
  },
  {
    "text": "can help improve the image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=295"
  },
  {
    "text": "they're still just approximations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=296"
  },
  {
    "text": "On the other hand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=299"
  },
  {
    "text": "ray tracing takes a completely different approach ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=300"
  },
  {
    "text": "that enables more accurate visuals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=302"
  },
  {
    "text": "and simplified visual techniques. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=304"
  },
  {
    "text": "Instead of processing meshes one at a time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=306"
  },
  {
    "text": "in ray tracing, we build an acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=309"
  },
  {
    "text": "that encompasses the whole scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=312"
  },
  {
    "text": "Once we have that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=314"
  },
  {
    "text": "we can have the GPU trace rays from a point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=315"
  },
  {
    "text": "toward a given direction and find intersections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=317"
  },
  {
    "text": "This gives us access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=320"
  },
  {
    "text": "to all the contextual scene information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=321"
  },
  {
    "text": "Since ray tracing models ray interactions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=325"
  },
  {
    "text": "it has applications beyond rendering, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=327"
  },
  {
    "text": "It can be used for audio and physics simulation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=330"
  },
  {
    "text": "collision detection, or AI and pathfinding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=333"
  },
  {
    "text": "Since ray tracing is such a powerful technique, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=337"
  },
  {
    "text": "we'd like to bring together ray tracing and rasterization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=340"
  },
  {
    "text": "to get the unique benefits of each, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=342"
  },
  {
    "text": "and we can do so through a technique ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=345"
  },
  {
    "text": "called \"hybrid rendering.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=346"
  },
  {
    "text": "Now let's look at how to create a hybrid rendered frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=349"
  },
  {
    "text": "and some use cases for this technique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=351"
  },
  {
    "text": "If we start from our rasterized frame diagram, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=355"
  },
  {
    "text": "we can use ray tracing to replace some or all ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=357"
  },
  {
    "text": "of our light approximation passes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=360"
  },
  {
    "text": "We still rasterize our G-Buffer -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=364"
  },
  {
    "text": "it plays the role of our primary rays -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=366"
  },
  {
    "text": "and then we use ray tracing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=368"
  },
  {
    "text": "to more realistically simulate the properties of light ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=369"
  },
  {
    "text": "by querying into the rest of the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=372"
  },
  {
    "text": "We still denoise and do a light composition pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=374"
  },
  {
    "text": "but our results are much more accurate to the scene data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=377"
  },
  {
    "text": "This frame architecture provides a good foundation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=381"
  },
  {
    "text": "to explore a number of hybrid rendering techniques. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=384"
  },
  {
    "text": "Let's take a look at how we can encode a frame like this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=387"
  },
  {
    "text": "using Metal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=389"
  },
  {
    "text": "We start with filling out our G-Buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=392"
  },
  {
    "text": "To do so, we create a render pass ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=396"
  },
  {
    "text": "and fill out a G-Buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=398"
  },
  {
    "text": "and set its textures as the attachments for our pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=399"
  },
  {
    "text": "We make sure our images are stored to memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=404"
  },
  {
    "text": "so the rendered contents are available to subsequent passes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=406"
  },
  {
    "text": "We start our pass, encode our rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=410"
  },
  {
    "text": "and end the render pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=414"
  },
  {
    "text": "Next, we'll add a ray-tracing compute dispatch to this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=416"
  },
  {
    "text": "So after we create the intermediate textures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=420"
  },
  {
    "text": "let's encode our ray-tracing pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=423"
  },
  {
    "text": "We create the compute pass from the same command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=427"
  },
  {
    "text": "and make sure to set the G-Buffer textures as inputs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=429"
  },
  {
    "text": "By default, Metal will track write-read dependencies for you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=433"
  },
  {
    "text": "so you're free to focus on your algorithm ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=437"
  },
  {
    "text": "without being too concerned by synchronization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=439"
  },
  {
    "text": "Since this is compute, we set our output textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=442"
  },
  {
    "text": "to write the results of our ray-tracing work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=445"
  },
  {
    "text": "We set the PipelineState object for our ray-tracing technique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=449"
  },
  {
    "text": "Each thread in the compute shader ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=453"
  },
  {
    "text": "will calculate the ray-tracing result for a pixel or region. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=454"
  },
  {
    "text": "Finally, we dispatch our 2D grid and end this pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=459"
  },
  {
    "text": "After this pass is encoded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=465"
  },
  {
    "text": "we can now continue to encode more work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=467"
  },
  {
    "text": "such as the light accumulation pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=469"
  },
  {
    "text": "or we can submit the command buffer now ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=471"
  },
  {
    "text": "so the GPU starts working on it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=473"
  },
  {
    "text": "while we encode the rest of the frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=475"
  },
  {
    "text": "Since we encoded our work in two passes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=477"
  },
  {
    "text": "this requires saving our intermediate render attachments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=480"
  },
  {
    "text": "to system memory for the passes to communicate with each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=482"
  },
  {
    "text": "This works, but on Apple Silicon and iOS devices ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=486"
  },
  {
    "text": "there's an opportunity to make this even better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=490"
  },
  {
    "text": "On Apple GPUs, the hardware utilizes tile memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=494"
  },
  {
    "text": "to hold our pixel data as we work on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=497"
  },
  {
    "text": "At the end of the pass, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=500"
  },
  {
    "text": "this tile memory is fleshed out to system memory ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=501"
  },
  {
    "text": "and must be reloaded at the beginning of the next pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=503"
  },
  {
    "text": "Ideally, though, we would have the compute passes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=507"
  },
  {
    "text": "work directly on tile memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=509"
  },
  {
    "text": "avoiding the round trips to system memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=511"
  },
  {
    "text": "I'm excited to share ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=515"
  },
  {
    "text": "this year we've added the ability to do that ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=516"
  },
  {
    "text": "by dispatching ray-tracing work from render pipelines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=518"
  },
  {
    "text": "This allows mixing render and compute via tile shaders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=521"
  },
  {
    "text": "in a single pass to leverage on-tile memory for ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=524"
  },
  {
    "text": "This will reduce bandwidth use, memory consumption, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=529"
  },
  {
    "text": "and help your users' devices run cooler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=532"
  },
  {
    "text": "Please make sure to review ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=536"
  },
  {
    "text": "our 2019 \"Modern rendering with Metal\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=537"
  },
  {
    "text": "to learn how to efficiently mix render and compute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=540"
  },
  {
    "text": "so you can apply that for ray tracing from render; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=542"
  },
  {
    "text": "as well as this year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=545"
  },
  {
    "text": "\"Enhance your app with Metal ray-tracing\" session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=547"
  },
  {
    "text": "to learn about other improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=549"
  },
  {
    "text": "coming to Metal ray tracing this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=550"
  },
  {
    "text": "Now that we know how to encode a hybrid rendering workload, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=553"
  },
  {
    "text": "let's review some techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=556"
  },
  {
    "text": "that can be improved with ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=558"
  },
  {
    "text": "We'll focus on shadows, ambient occlusion, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=560"
  },
  {
    "text": "and reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=563"
  },
  {
    "text": "Let's start with shadows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=565"
  },
  {
    "text": "Shadows help convey the proximity of objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=568"
  },
  {
    "text": "to each other within the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=570"
  },
  {
    "text": "This is a challenge for rasterization, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=572"
  },
  {
    "text": "because we lose the context of the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=574"
  },
  {
    "text": "at the time of shading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=576"
  },
  {
    "text": "Shadow mapping can help supplement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=578"
  },
  {
    "text": "this lack of information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=580"
  },
  {
    "text": "but requires extra rendering from each light's point of view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=581"
  },
  {
    "text": "This rasterization technique starts by rendering the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=586"
  },
  {
    "text": "from every light's perspective. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=589"
  },
  {
    "text": "This produces a series of depth maps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=591"
  },
  {
    "text": "that need to be stored ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=593"
  },
  {
    "text": "alongside each light's transformation matrix. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=594"
  },
  {
    "text": "Then we render from the main camera's perspective. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=597"
  },
  {
    "text": "To shade each pixel, we need to convert the point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=601"
  },
  {
    "text": "to the light's coordinates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=604"
  },
  {
    "text": "We sample the depth coming from the depth map ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=605"
  },
  {
    "text": "and ultimately compare these depth values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=608"
  },
  {
    "text": "to determine if we're in light or shadow ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=610"
  },
  {
    "text": "for each light source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=612"
  },
  {
    "text": "There's a couple of drawbacks with this technique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=614"
  },
  {
    "text": "First, we'll have to render the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=617"
  },
  {
    "text": "from the light's perspective for each light. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=618"
  },
  {
    "text": "This means processing the scene multiple times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=621"
  },
  {
    "text": "Second, the shadow maps have a predetermined resolution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=624"
  },
  {
    "text": "which means our shadows will be subject to aliasing; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=628"
  },
  {
    "text": "and worse, we won't have information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=631"
  },
  {
    "text": "for pixels that didn't fit in the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=633"
  },
  {
    "text": "Let's compare this to ray-traced shadows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=636"
  },
  {
    "text": "To compute shadows with ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=639"
  },
  {
    "text": "we can simply trace a ray from a point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=641"
  },
  {
    "text": "toward the direction of the light source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=643"
  },
  {
    "text": "and determine if any object is blocking its path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=645"
  },
  {
    "text": "If we don't find anything, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=648"
  },
  {
    "text": "that means the point should take this light source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=649"
  },
  {
    "text": "into consideration for shading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=651"
  },
  {
    "text": "In the case an object is blocking the path, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=654"
  },
  {
    "text": "we just exclude that light source's contribution ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=656"
  },
  {
    "text": "in the lighting equation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=659"
  },
  {
    "text": "Notice how this produces a natural shadow ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=661"
  },
  {
    "text": "corresponding to the silhouette of the occluding object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=663"
  },
  {
    "text": "Even better, we're no longer limited to the information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=667"
  },
  {
    "text": "stored in a depth map. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=669"
  },
  {
    "text": "We can determine shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=671"
  },
  {
    "text": "for points outside the light's frustum or camera's view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=672"
  },
  {
    "text": "Let's see how our shadow technique is simplified ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=677"
  },
  {
    "text": "with ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=679"
  },
  {
    "text": "We start by rendering from the main camera. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=681"
  },
  {
    "text": "Next, we take the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=684"
  },
  {
    "text": "and the depth map rendered from the camera's position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=687"
  },
  {
    "text": "and feed it into our ray-tracing kernel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=690"
  },
  {
    "text": "Calculate the pixel position, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=693"
  },
  {
    "text": "and then we simply trace a ray in the light's direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=694"
  },
  {
    "text": "From this, we determine if the point is lit or in shadow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=698"
  },
  {
    "text": "depending on whether an intersection was found ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=701"
  },
  {
    "text": "with an occluding object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=703"
  },
  {
    "text": "This process produces a shadow texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=705"
  },
  {
    "text": "that we can then combine with our render pass results ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=707"
  },
  {
    "text": "to get the final image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=710"
  },
  {
    "text": "Let's look at how to code a Metal shader to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=712"
  },
  {
    "text": "In our shader code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=716"
  },
  {
    "text": "we start by calculating the position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=717"
  },
  {
    "text": "each thread will process from the depth and the thread_id. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=719"
  },
  {
    "text": "We create our shadow ray from the calculated position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=723"
  },
  {
    "text": "and set it up to trace in the light's direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=726"
  },
  {
    "text": "For most light types, like point lights, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=729"
  },
  {
    "text": "spotlights, and area lights, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=731"
  },
  {
    "text": "we set the min and max to trace all the way from the point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=733"
  },
  {
    "text": "to the light source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=736"
  },
  {
    "text": "For directional shadows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=738"
  },
  {
    "text": "we may want to set the max to infinity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=739"
  },
  {
    "text": "Additionally, if we decide to implement cone ray tracing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=742"
  },
  {
    "text": "for softer shadows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=744"
  },
  {
    "text": "this is a great place to add jitter to our shadowRay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=746"
  },
  {
    "text": "We then create an intersector object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=750"
  },
  {
    "text": "If we find any one intersection, that means we're in shadow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=753"
  },
  {
    "text": "so we configure the intersector to accept any intersection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=756"
  },
  {
    "text": "Finally, we intersect against the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=760"
  },
  {
    "text": "Based on that intersection result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=765"
  },
  {
    "text": "we write whether the point is lit or not, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=767"
  },
  {
    "text": "which creates a shadow texture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=769"
  },
  {
    "text": "that's more accurate to the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=771"
  },
  {
    "text": "When that shadow texture is applied, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=774"
  },
  {
    "text": "you can see we get much more realistic shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=776"
  },
  {
    "text": "and get rid of the aliasing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=778"
  },
  {
    "text": "With ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=782"
  },
  {
    "text": "determining shadows becomes a very natural technique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=784"
  },
  {
    "text": "We just trace a ray to find if something ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=787"
  },
  {
    "text": "occludes the light source for that point or not. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=788"
  },
  {
    "text": "There is no longer a need to have intermediate depth maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=791"
  },
  {
    "text": "and we can avoid having multiple extra render passes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=794"
  },
  {
    "text": "for each light. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=796"
  },
  {
    "text": "This technique is easy to implement into a deferred ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=798"
  },
  {
    "text": "or forward renderer, as it only depends on depth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=801"
  },
  {
    "text": "And finally, it allows for custom intersection functions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=804"
  },
  {
    "text": "for translucent materials. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=806"
  },
  {
    "text": "Next, let's take a look at ambient occlusion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=809"
  },
  {
    "text": "Conceptually, a point surrounded by geometry is less likely ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=813"
  },
  {
    "text": "to receive a large amount of ambient light. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=817"
  },
  {
    "text": "Ambient occlusion consists in muting the ambient light ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=819"
  },
  {
    "text": "received at a point based on how busy its neighborhood is, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=822"
  },
  {
    "text": "which naturally darkens crevices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=825"
  },
  {
    "text": "giving the final image more depth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=827"
  },
  {
    "text": "Rasterization techniques to achieve this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=831"
  },
  {
    "text": "depend on sampling the depth and normals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=833"
  },
  {
    "text": "in the neighborhood of the point, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=835"
  },
  {
    "text": "to determine if there are objects surrounding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=837"
  },
  {
    "text": "and potentially occluding it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=838"
  },
  {
    "text": "Based on how many nearby objects are found, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=841"
  },
  {
    "text": "we calculate an attenuation factor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=843"
  },
  {
    "text": "to mute the ambient light ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=845"
  },
  {
    "text": "and create a texture to apply to our image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=847"
  },
  {
    "text": "Relying on screen-space information like depth buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=850"
  },
  {
    "text": "and surface normals, however, is missing information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=853"
  },
  {
    "text": "for nonvisible occluders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=855"
  },
  {
    "text": "and objects outside the border of the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=857"
  },
  {
    "text": "With ray tracing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=860"
  },
  {
    "text": "instead of relying on screen-space information, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=861"
  },
  {
    "text": "we can rely on actual geometric data of our scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=864"
  },
  {
    "text": "The idea is for every pixel to shade, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=867"
  },
  {
    "text": "we generate random rays in a hemisphere ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=870"
  },
  {
    "text": "and search for intersections against objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=872"
  },
  {
    "text": "If any intersections are found, we take it into consideration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=875"
  },
  {
    "text": "for our ambient occlusion factor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=878"
  },
  {
    "text": "We start again with the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=882"
  },
  {
    "text": "For this technique, we require normal data as well as depth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=884"
  },
  {
    "text": "so we collect those in our G-Buffer pass. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=888"
  },
  {
    "text": "The depth and normals are used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=891"
  },
  {
    "text": "to generate the random rays in the hemisphere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=892"
  },
  {
    "text": "Next, we trace rays ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=895"
  },
  {
    "text": "and calculate the attenuation factor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=896"
  },
  {
    "text": "This produces an image where crevices are naturally darkened, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=899"
  },
  {
    "text": "creating the effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=902"
  },
  {
    "text": "Let's take a look at a Metal shader ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=904"
  },
  {
    "text": "for ambient occlusion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=905"
  },
  {
    "text": "First, we generate the random rays. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=908"
  },
  {
    "text": "In this case, we take a cosineWeightedRay ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=911"
  },
  {
    "text": "along the normal in each thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=913"
  },
  {
    "text": "We set the max_distance to a small number, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=916"
  },
  {
    "text": "as we're only interested in a small neighborhood. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=918"
  },
  {
    "text": "Next, we create our intersector ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=922"
  },
  {
    "text": "and intersect the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=924"
  },
  {
    "text": "Depending on the result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=927"
  },
  {
    "text": "we accumulate into our attenuation factor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=928"
  },
  {
    "text": "Here's a side-by-side comparison. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=933"
  },
  {
    "text": "And we can immediately see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=935"
  },
  {
    "text": "how much better the ray-traced approach looks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=936"
  },
  {
    "text": "I want to highlight a few places that really show the limitations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=939"
  },
  {
    "text": "of a screen-space effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=942"
  },
  {
    "text": "Here is an example where the neighborhood ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=944"
  },
  {
    "text": "is misrepresented due to limited screen-space information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=946"
  },
  {
    "text": "This is because the actual geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=950"
  },
  {
    "text": "is almost perpendicular to the camera and, therefore, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=952"
  },
  {
    "text": "not in the depth buffer at this angle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=954"
  },
  {
    "text": "The same problem occurs across the image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=957"
  },
  {
    "text": "in particular, under the moped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=959"
  },
  {
    "text": "From this angle, the bottom of the moped ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=962"
  },
  {
    "text": "is missing from the depth buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=964"
  },
  {
    "text": "So the screen-space technique ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=966"
  },
  {
    "text": "completely misses the attenuation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=967"
  },
  {
    "text": "The ray-traced version, on the other hand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=969"
  },
  {
    "text": "correctly discovers the intersections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=971"
  },
  {
    "text": "against the bottom of the moped for the floor pixels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=973"
  },
  {
    "text": "And here's a great example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=976"
  },
  {
    "text": "of the limitations around the screen border. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=978"
  },
  {
    "text": "The occluding geometry is offscreen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=981"
  },
  {
    "text": "so its contribution is lost in the screen-space technique, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=983"
  },
  {
    "text": "but accounted for in ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=986"
  },
  {
    "text": "As we can see, hybrid rendering provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=990"
  },
  {
    "text": "a significant quality improvement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=992"
  },
  {
    "text": "by using the actual geometry of the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=994"
  },
  {
    "text": "freeing the technique from limitations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=996"
  },
  {
    "text": "in screen-space information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=998"
  },
  {
    "text": "And finally, let's take a look at reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1000"
  },
  {
    "text": "Reflections have traditionally been ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1004"
  },
  {
    "text": "very difficult for rasterization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1006"
  },
  {
    "text": "Reflection probes is a technique that works well ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1008"
  },
  {
    "text": "but is limited in resolution, requires filtering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1010"
  },
  {
    "text": "and struggles with dynamic geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1014"
  },
  {
    "text": "Screen-space reflection techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1017"
  },
  {
    "text": "are limited by screen-space information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1018"
  },
  {
    "text": "Reflection probes are a solution that requires ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1021"
  },
  {
    "text": "strategically placing cameras along the entire scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1024"
  },
  {
    "text": "to capture surrounding color information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1026"
  },
  {
    "text": "To use reflection probes, cube maps are captured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1029"
  },
  {
    "text": "from different locations in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1032"
  },
  {
    "text": "This is essentially a rendering of the scene in six directions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1035"
  },
  {
    "text": "from the same point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1038"
  },
  {
    "text": "When a pixel is shaded, you calculate the relation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1040"
  },
  {
    "text": "to the probes and sample the cube maps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1042"
  },
  {
    "text": "to produce the reflected shading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1045"
  },
  {
    "text": "For realistic results, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1048"
  },
  {
    "text": "usually many probes need to be scattered across the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1050"
  },
  {
    "text": "And as dynamic objects move across the scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1053"
  },
  {
    "text": "shaders need to sample from more than one cube map ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1055"
  },
  {
    "text": "and manually interpolate reflected colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1058"
  },
  {
    "text": "The cube maps also need to be prefiltered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1061"
  },
  {
    "text": "to accurately represent irradiance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1064"
  },
  {
    "text": "and are limited in resolution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1066"
  },
  {
    "text": "Another rasterization technique, screen-space reflection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1069"
  },
  {
    "text": "avoids some of these problems by basing its reflections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1073"
  },
  {
    "text": "on pixels already on the framebuffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1075"
  },
  {
    "text": "The fragment shader uses the normals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1079"
  },
  {
    "text": "to incrementally march outwards ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1081"
  },
  {
    "text": "and check the depth map for potential nearby objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1083"
  },
  {
    "text": "If we find something, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1086"
  },
  {
    "text": "we sample the color directly from the frame buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1087"
  },
  {
    "text": "and shade it onto the output image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1090"
  },
  {
    "text": "It does suffer, however, from the screen-space limitations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1092"
  },
  {
    "text": "we discussed earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1095"
  },
  {
    "text": "Notice in this moped example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1098"
  },
  {
    "text": "how only part of the surface can get an accurate reflection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1099"
  },
  {
    "text": "corresponding to the floor tiles present in the framebuffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1103"
  },
  {
    "text": "The rest of the scene is missing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1106"
  },
  {
    "text": "Worse, the lower portion behind the fender, marked in yellow, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1108"
  },
  {
    "text": "is missing information; we have no way of knowing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1111"
  },
  {
    "text": "what the surface facing away from the camera would look like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1114"
  },
  {
    "text": "The ray marching can also get computationally expensive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1119"
  },
  {
    "text": "Ray-traced reflections, however, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1123"
  },
  {
    "text": "helps us overcome both sets of problems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1124"
  },
  {
    "text": "as we can rely on the true scene information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1127"
  },
  {
    "text": "in the acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1129"
  },
  {
    "text": "Let's take a look at how a perfect mirror would work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1132"
  },
  {
    "text": "First, we take the incident ray from the camera's position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1136"
  },
  {
    "text": "to the point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1139"
  },
  {
    "text": "Then, we reflect this point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1140"
  },
  {
    "text": "on the normal associated with the point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1141"
  },
  {
    "text": "This provides us with a direction ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1144"
  },
  {
    "text": "we can trace a ray towards, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1145"
  },
  {
    "text": "and find any reflected objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1146"
  },
  {
    "text": "For this, we provide our reflection ray-tracing kernel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1149"
  },
  {
    "text": "with the normals and depth of the G-Buffer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1152"
  },
  {
    "text": "This ray-tracing kernel calculates the view vector, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1156"
  },
  {
    "text": "from the camera to each point, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1158"
  },
  {
    "text": "reflects this vector, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1160"
  },
  {
    "text": "and traces a ray in that direction from the point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1162"
  },
  {
    "text": "Finally, for accurate reflections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1165"
  },
  {
    "text": "we can shade the intersection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1167"
  },
  {
    "text": "found directly in the ray-tracing kernel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1169"
  },
  {
    "text": "Let's take a look at coding this shader. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1172"
  },
  {
    "text": "Once again, we start from the point's depth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1175"
  },
  {
    "text": "and reconstruct its position. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1177"
  },
  {
    "text": "This time, we want the position to be in world space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1179"
  },
  {
    "text": "So in our calculatePosition function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1183"
  },
  {
    "text": "we'll need to multiply the inverse of the view matrix. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1185"
  },
  {
    "text": "Then, we calculate our reflected incident vector over the normal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1189"
  },
  {
    "text": "and create a ray in that direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1193"
  },
  {
    "text": "Next, we create our intersector and trace our reflectedRay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1196"
  },
  {
    "text": "If we hit an object, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1202"
  },
  {
    "text": "we now shade that point to produce the reflection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1204"
  },
  {
    "text": "If the intersection missed all objects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1207"
  },
  {
    "text": "we can just sample a skybox and return its color ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1209"
  },
  {
    "text": "to simulate a reflection that's showing the sky. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1212"
  },
  {
    "text": "Note that the shading is performed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1215"
  },
  {
    "text": "directly in the compute kernel for this technique. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1216"
  },
  {
    "text": "Let's compare reflection probes to ray-traced reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1221"
  },
  {
    "text": "The image on the right used hybrid rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1225"
  },
  {
    "text": "and we can see the details of the floor tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1227"
  },
  {
    "text": "much more clearly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1229"
  },
  {
    "text": "The buildings are present, and we can even see shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1231"
  },
  {
    "text": "reflected on the front panel of the moped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1233"
  },
  {
    "text": "Reflections are a natural fit for ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1237"
  },
  {
    "text": "It nicely handles mirror-like reflections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1240"
  },
  {
    "text": "and rough reflections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1242"
  },
  {
    "text": "Those can be achieved by tracing multiple rays ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1244"
  },
  {
    "text": "along a cone and filtering the results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1246"
  },
  {
    "text": "Because they rely on perfect information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1249"
  },
  {
    "text": "coming from the acceleration structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1251"
  },
  {
    "text": "ray-traced reflections are free from screen-space artifacts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1254"
  },
  {
    "text": "and can handle both static and dynamic geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1257"
  },
  {
    "text": "in the scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1259"
  },
  {
    "text": "Now, one important detail: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1261"
  },
  {
    "text": "we mentioned that for reflections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1263"
  },
  {
    "text": "we need to shade the point directly in the compute kernel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1265"
  },
  {
    "text": "Some techniques like this one or global illumination ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1268"
  },
  {
    "text": "require accessing vertex data and Metal resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1271"
  },
  {
    "text": "from the compute kernel directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1275"
  },
  {
    "text": "For these cases we need to make sure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1277"
  },
  {
    "text": "the GPU has access to the data that it needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1279"
  },
  {
    "text": "to apply our shading equations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1282"
  },
  {
    "text": "This is achieved with a bindless binding model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1284"
  },
  {
    "text": "which in Metal is represented as argument buffers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1287"
  },
  {
    "text": "Please make sure to check out this year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1290"
  },
  {
    "text": "\"Bindless rendering in Metal\" talk for more detail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1292"
  },
  {
    "text": "We just saw how hybrid rendering can be put into practice ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1296"
  },
  {
    "text": "with several different techniques. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1299"
  },
  {
    "text": "This leads to more natural algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1301"
  },
  {
    "text": "that also have the advantage of producing more accurate results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1303"
  },
  {
    "text": "In some cases, when we compare ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1308"
  },
  {
    "text": "to the traditional rasterization techniques, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1310"
  },
  {
    "text": "we see that we can remove render passes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1313"
  },
  {
    "text": "and save memory and bandwidth in some cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1315"
  },
  {
    "text": "With the addition of ray tracing from render, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1318"
  },
  {
    "text": "we can even keep our entire work on chip. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1320"
  },
  {
    "text": "Ray-tracing adoption is a big task, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1324"
  },
  {
    "text": "and we have excellent new tooling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1326"
  },
  {
    "text": "to assist you in the process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1328"
  },
  {
    "text": "of bringing these techniques to your engine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1329"
  },
  {
    "text": "This year, we're introducing tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1332"
  },
  {
    "text": "that enable you to capture ray-tracing work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1334"
  },
  {
    "text": "inspect acceleration structures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1336"
  },
  {
    "text": "and inspect visible and intersection functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1338"
  },
  {
    "text": "Now David will give us a tour of these new tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1341"
  },
  {
    "text": "David Núñez Rubio: Thanks, Ali. My name is David Núñez Rubio, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1345"
  },
  {
    "text": "and I am a GPU software engineer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1348"
  },
  {
    "text": "Last year, we introduced ray-tracing support in Metal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1350"
  },
  {
    "text": "However, developing complex application can be challenging. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1354"
  },
  {
    "text": "Fortunately, Metal Debugger is here to help you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1358"
  },
  {
    "text": "This year, we introduced ray-tracing support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1362"
  },
  {
    "text": "in Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1365"
  },
  {
    "text": "Thanks to the adoption of hybrid rendering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1367"
  },
  {
    "text": "our demo is looking better than ever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1369"
  },
  {
    "text": "Ray-traced soft shadows, reflections, ambient occlusion; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1372"
  },
  {
    "text": "the results are amazing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1376"
  },
  {
    "text": "During development of the demo, we hit some issues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1378"
  },
  {
    "text": "This is how tools can help you resolving these problems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1382"
  },
  {
    "text": "In this early version of the demo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1387"
  },
  {
    "text": "ray-traced shadows have already been implemented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1389"
  },
  {
    "text": "But if you look carefully, you'll notice missing shadows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1392"
  },
  {
    "text": "from the tree leaves on the ground. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1395"
  },
  {
    "text": "It is more obvious if we compare with the reference version. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1398"
  },
  {
    "text": "See reference versus ray traced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1401"
  },
  {
    "text": "Let's jump into Xcode and take a capture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1406"
  },
  {
    "text": "to see how the tools can help us debugging this issue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1409"
  },
  {
    "text": "We need to press the Metal button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1414"
  },
  {
    "text": "and click on Capture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1416"
  },
  {
    "text": "Since this is a static problem, we just need a single frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1419"
  },
  {
    "text": "In the debugger, API calls are organized in the left side ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1425"
  },
  {
    "text": "on the debug navigator. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1429"
  },
  {
    "text": "Let's unfold the offscreen command buffer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1431"
  },
  {
    "text": "to look for our shadow encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1433"
  },
  {
    "text": "I have labeled my compute command encoder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1437"
  },
  {
    "text": "as \"Raytrace Shadows.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1440"
  },
  {
    "text": "It is a good practice to label your Metal objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1442"
  },
  {
    "text": "so you can easily find them in the Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1444"
  },
  {
    "text": "The thumbnail also gives us a hint that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1448"
  },
  {
    "text": "indeed, this is the encoder we are looking for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1450"
  },
  {
    "text": "We can now click on the dispatch Threadgroups API call ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1453"
  },
  {
    "text": "to show band resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1456"
  },
  {
    "text": "This is a list of all the objects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1459"
  },
  {
    "text": "associated with our current kernel dispatch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1461"
  },
  {
    "text": "And here, we can see an acceleration of structure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1465"
  },
  {
    "text": "which we have conveniently labeled as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1468"
  },
  {
    "text": "Our kernel uses an acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1471"
  },
  {
    "text": "to cast rays. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1474"
  },
  {
    "text": "This is commonly implemented as a bounding volume hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1475"
  },
  {
    "text": "or BVH, which is a tree-like data structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1479"
  },
  {
    "text": "representing the 3D world that rays will intersect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1483"
  },
  {
    "text": "Now, double-click to open the acceleration structure viewer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1487"
  },
  {
    "text": "This is a great new tool built into the Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1496"
  },
  {
    "text": "Let me give you an overview of how it is organized. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1500"
  },
  {
    "text": "On the right side, we have the 3D view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1504"
  },
  {
    "text": "where we have a ray traced visualization of our 3D scene, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1506"
  },
  {
    "text": "including any custom geometry or intersection functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1510"
  },
  {
    "text": "This works great with custom geometry such as hair ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1514"
  },
  {
    "text": "or when using alpha testing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1518"
  },
  {
    "text": "You can use familiar controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1520"
  },
  {
    "text": "to move the camera and look around. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1522"
  },
  {
    "text": "And here's a tip: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1525"
  },
  {
    "text": "press Option key while scrolling to zoom in and out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1527"
  },
  {
    "text": "We have built some great visualization tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1531"
  },
  {
    "text": "to better understand our scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1534"
  },
  {
    "text": "Let's click on the highlighted menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1536"
  },
  {
    "text": "to see the different modes available. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1538"
  },
  {
    "text": "For instance, we can visualize bounding volume traversals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1542"
  },
  {
    "text": "This is a heat map showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1546"
  },
  {
    "text": "how many nodes a single ray will need to traverse ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1548"
  },
  {
    "text": "before hitting a surface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1552"
  },
  {
    "text": "Darker colors mean more nodes need to be traversed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1554"
  },
  {
    "text": "and a slower intersection test. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1557"
  },
  {
    "text": "We can also color-code our scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1562"
  },
  {
    "text": "based on acceleration structures... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1564"
  },
  {
    "text": "geometries... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1571"
  },
  {
    "text": "instances... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1575"
  },
  {
    "text": "or intersection functions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1579"
  },
  {
    "text": "Now that we are a bit more familiar with the tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1586"
  },
  {
    "text": "we can go back to our original problem. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1588"
  },
  {
    "text": "Thanks to the 3D view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1591"
  },
  {
    "text": "we have confirmed that our geometry is there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1593"
  },
  {
    "text": "So there must be something else. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1596"
  },
  {
    "text": "On the left side, there is the navigator area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1599"
  },
  {
    "text": "Here we can see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1602"
  },
  {
    "text": "our top- and bottom-level acceleration structures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1604"
  },
  {
    "text": "We can unfold any acceleration structures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1607"
  },
  {
    "text": "to see the list of geometries it is built from. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1610"
  },
  {
    "text": "We can unfold again to see their properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1613"
  },
  {
    "text": "such as opacity or primitive count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1617"
  },
  {
    "text": "We can also see the list of instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1623"
  },
  {
    "text": "of this acceleration structure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1625"
  },
  {
    "text": "Let's click on the tree leaves to reveal their instance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1627"
  },
  {
    "text": "on the navigator and inspect its properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1631"
  },
  {
    "text": "The matrix looks correct, and there are no flags set, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1635"
  },
  {
    "text": "but it seems that the mask is missing something. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1640"
  },
  {
    "text": "In this demo, we are using intersection masks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1644"
  },
  {
    "text": "We use the lowest bit of the mask ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1647"
  },
  {
    "text": "to flag objects casting shadows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1649"
  },
  {
    "text": "Our intersector then will test this mask ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1652"
  },
  {
    "text": "using a bitwise and operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1654"
  },
  {
    "text": "and reject the intersection if it fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1657"
  },
  {
    "text": "We can visualize this behavior directly in the 3D view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1660"
  },
  {
    "text": "We need to open the intersector hints menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1664"
  },
  {
    "text": "Here we can configure ray traversal options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1669"
  },
  {
    "text": "for visualization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1672"
  },
  {
    "text": "We can change culling operations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1674"
  },
  {
    "text": "disable custom intersections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1677"
  },
  {
    "text": "or change the intersector’s mask. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1679"
  },
  {
    "text": "By default, it will intersect everything. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1682"
  },
  {
    "text": "Let's change it to the value that we are using for shadows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1685"
  },
  {
    "text": "This will show us an exact visualization of our scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1691"
  },
  {
    "text": "when using our shadow mask. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1695"
  },
  {
    "text": "And indeed, we have confirmed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1699"
  },
  {
    "text": "that our tree leaves are now missing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1701"
  },
  {
    "text": "Once we have identified the problem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1704"
  },
  {
    "text": "we need to go back to our source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1706"
  },
  {
    "text": "and make sure we are setting the right mask value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1708"
  },
  {
    "text": "This is how shadows looked before. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1713"
  },
  {
    "text": "And this is how they look after fixing the mask value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1717"
  },
  {
    "text": "This is an example of the workflows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1721"
  },
  {
    "text": "that can help you debug your ray-tracing applications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1723"
  },
  {
    "text": "If you want to learn more about tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1727"
  },
  {
    "text": "make sure you check out this year's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1729"
  },
  {
    "text": "\"Discover Metal debugging, profiling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1731"
  },
  {
    "text": "and asset creation tools\" WWDC session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1733"
  },
  {
    "text": "In this session, we have reviewed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1738"
  },
  {
    "text": "how ray tracing can elevate your visuals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1739"
  },
  {
    "text": "Hybrid rendering is the combination ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1743"
  },
  {
    "text": "of rasterization and ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1745"
  },
  {
    "text": "This allows replacing light approximation techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1748"
  },
  {
    "text": "with more accurate ones that also happen to be simpler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1751"
  },
  {
    "text": "We also saw the new tools to aid you in the process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1756"
  },
  {
    "text": "of adopting ray tracing in your engine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1759"
  },
  {
    "text": "We have only scratched the surface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1762"
  },
  {
    "text": "on what new possibilities are available to you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1764"
  },
  {
    "text": "by combining rasterization and ray tracing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1767"
  },
  {
    "text": "We can't wait to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1771"
  },
  {
    "text": "how you put these technologies in practice ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1772"
  },
  {
    "text": "to develop the new innovative graphics techniques ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1774"
  },
  {
    "text": "of the future. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1778"
  },
  {
    "text": "Thank you and enjoy the rest of WWDC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1779"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10150/?time=1783"
  }
]