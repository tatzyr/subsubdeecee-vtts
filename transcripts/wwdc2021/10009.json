[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=7"
  },
  {
    "text": "Brady White: Hi, I’m Brady. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=9"
  },
  {
    "text": "I’m an engineer on the Fitness team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=10"
  },
  {
    "text": "Thanks for joining me. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=12"
  },
  {
    "text": "There are lots of great workout apps already available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=14"
  },
  {
    "text": "in the App Store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=16"
  },
  {
    "text": "Apple Watch is an amazing device ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=18"
  },
  {
    "text": "capable of tracking all sorts of fitness activity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=20"
  },
  {
    "text": "It can track distance and elevation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=23"
  },
  {
    "text": "on those challenging bike rides. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=24"
  },
  {
    "text": "You can monitor your heart rate and energy burned ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=26"
  },
  {
    "text": "during intense workouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=29"
  },
  {
    "text": "For swimming, it can even detect stroke type and count laps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=30"
  },
  {
    "text": "All of this and more is available for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=34"
  },
  {
    "text": "to build a great workout app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=37"
  },
  {
    "text": "Let’s take a look at what we will be covering today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=39"
  },
  {
    "text": "This session is a Code-Along. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=43"
  },
  {
    "text": "We'll go over what that means and how you can participate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=45"
  },
  {
    "text": "We'll build our workout views in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=49"
  },
  {
    "text": "Then, we'll integrate HealthKit to our views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=53"
  },
  {
    "text": "We'll also show you how to support the Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=57"
  },
  {
    "text": "I'm excited, let's get started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=60"
  },
  {
    "text": "This session is a code-along. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=64"
  },
  {
    "text": "We will build a workout app together from scratch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=66"
  },
  {
    "text": "While you get your Xcode ready, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=69"
  },
  {
    "text": "let's cover a couple of concepts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=71"
  },
  {
    "text": "What is a workout app? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=74"
  },
  {
    "text": "A workout app tracks fitness activity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=76"
  },
  {
    "text": "during a workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=78"
  },
  {
    "text": "A workout can be started with a single tap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=79"
  },
  {
    "text": "While the workout is in session, live metrics are displayed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=82"
  },
  {
    "text": "such as elapsed time, energy burned, heart rate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=86"
  },
  {
    "text": "and distance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=89"
  },
  {
    "text": "When the workout ends, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=91"
  },
  {
    "text": "a summary shows the metrics recorded for the workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=92"
  },
  {
    "text": "This is what we will build today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=96"
  },
  {
    "text": "Let’s get started building our workout views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=99"
  },
  {
    "text": "Let’s open Xcode and start a new project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=102"
  },
  {
    "text": "Click Create a new Xcode project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=106"
  },
  {
    "text": "watchOS, Watch App, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=109"
  },
  {
    "text": "click Next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=111"
  },
  {
    "text": "Give your workout app a name, such as \"MyWorkouts\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=114"
  },
  {
    "text": "Ensure Interface is SwiftUI, and language is Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=118"
  },
  {
    "text": "and click Next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=122"
  },
  {
    "text": "Find a location for your project and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=124"
  },
  {
    "text": "Let’s hide the inspector and resize our canvas.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=133"
  },
  {
    "text": "Let’s click Resume to see what our app looks like, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=139"
  },
  {
    "text": "using Xcode previews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=141"
  },
  {
    "text": "Great, our SwiftUI app is ready. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=144"
  },
  {
    "text": "Let’s provide a way for someone to start their workout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=147"
  },
  {
    "text": "with a StartView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=150"
  },
  {
    "text": "A workout can be started with just a single tap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=151"
  },
  {
    "text": "The list view with carousel-style layout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=154"
  },
  {
    "text": "will provide a list of workouts that scrolls vertically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=157"
  },
  {
    "text": "with a great depth effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=159"
  },
  {
    "text": "Our list of workouts will include bike, run, and walk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=162"
  },
  {
    "text": "Let’s create our StartView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=165"
  },
  {
    "text": "Let’s rename \"ContentView\" to \"StartView\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=168"
  },
  {
    "text": "Command-click on ContentView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=171"
  },
  {
    "text": "click Rename, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=174"
  },
  {
    "text": "Enter \"StartView\" as the new name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=176"
  },
  {
    "text": "Notice that in MyWorkoutsApp.swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=181"
  },
  {
    "text": "StartView is now NavigationView’s root view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=183"
  },
  {
    "text": "Click Rename. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=188"
  },
  {
    "text": "Let’s define an array of workout types ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=192"
  },
  {
    "text": "to display in our StartView’s list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=193"
  },
  {
    "text": "First, let’s import HealthKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=196"
  },
  {
    "text": "to get access to HKWorkoutActivityType.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=198"
  },
  {
    "text": "Next, let’s add our array of workout types.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=205"
  },
  {
    "text": "Our workout list will have HKWorkoutActivityTypes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=214"
  },
  {
    "text": "of cycling, running, and walking. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=217"
  },
  {
    "text": "Let’s make HKWorkoutActivityType ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=220"
  },
  {
    "text": "accessible to our list ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=222"
  },
  {
    "text": "by extending the HKWorkoutActivityType enum ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=224"
  },
  {
    "text": "to conform to the identifiable protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=227"
  },
  {
    "text": "and add a name variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=229"
  },
  {
    "text": "The ID-computed variable will return the rawValue of the enum.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=241"
  },
  {
    "text": "The name variable will switch through the cases ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=249"
  },
  {
    "text": "to return a name like “Run”, “Bike”, or “Walk”. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=251"
  },
  {
    "text": "Let’s add a List view to our StartView’s body ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=255"
  },
  {
    "text": "to display the list of workouts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=257"
  },
  {
    "text": "The list uses the workoutTypes variable as its model.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=268"
  },
  {
    "text": "A NavigationLink is displayed for each workoutType. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=275"
  },
  {
    "text": "A NavigationLink defines a destination ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=278"
  },
  {
    "text": "for a navigation-based interface. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=280"
  },
  {
    "text": "For now, the destination will be a text view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=282"
  },
  {
    "text": "We'll set these navigation links up later ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=285"
  },
  {
    "text": "to make sure they are tracking the right workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=287"
  },
  {
    "text": "Padding makes the navigation links taller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=294"
  },
  {
    "text": "to give them a larger tap area to easily start a workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=296"
  },
  {
    "text": "The list uses a carousel listStyle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=302"
  },
  {
    "text": "to provide a depth effect when scrolling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=304"
  },
  {
    "text": "The navigationBarTitle will display “Workouts”. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=309"
  },
  {
    "text": "Let’s click Resume to see a preview of our StartView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=312"
  },
  {
    "text": "Click Live Preview to be able to scroll. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=320"
  },
  {
    "text": "Scroll up to see the carousel ListStyle depth effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=325"
  },
  {
    "text": "Looks great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=329"
  },
  {
    "text": "The workout session will be presented as a modal experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=330"
  },
  {
    "text": "During a workout, people typically need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=334"
  },
  {
    "text": "only session-specific functionality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=336"
  },
  {
    "text": "They don't need to review the list of workouts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=338"
  },
  {
    "text": "or access other parts of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=340"
  },
  {
    "text": "Offering the most important items in a modal experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=342"
  },
  {
    "text": "can help people manage their session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=345"
  },
  {
    "text": "while minimizing distraction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=348"
  },
  {
    "text": "People who use workout apps on Apple Watch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=350"
  },
  {
    "text": "expect the views to be in this order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=352"
  },
  {
    "text": "On the left, our controls view has buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=356"
  },
  {
    "text": "that control the in-progress session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=358"
  },
  {
    "text": "such as End, Pause, and Resume. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=361"
  },
  {
    "text": "In the center, metrics appear on a dedicated screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=364"
  },
  {
    "text": "that people can read at a glance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=367"
  },
  {
    "text": "On the right, media playback controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=370"
  },
  {
    "text": "allow media to be controlled during a workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=372"
  },
  {
    "text": "A TabView on watchOS switches between multiple child views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=376"
  },
  {
    "text": "when someone swipes left or right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=379"
  },
  {
    "text": "A TabView also provides a page indicator ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=382"
  },
  {
    "text": "at the bottom of the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=384"
  },
  {
    "text": "A TabView will work great to display our in-session views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=386"
  },
  {
    "text": "Let’s create a SessionPagingView with a TabView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=390"
  },
  {
    "text": "for our three workout session views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=393"
  },
  {
    "text": "Click File > New > File... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=398"
  },
  {
    "text": "SwiftUI View, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=403"
  },
  {
    "text": "name this \"SessionPagingView\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=407"
  },
  {
    "text": "Let’s create a Tab enum to model each view that can be selected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=415"
  },
  {
    "text": "in our TabView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=418"
  },
  {
    "text": "The Tab enum has three cases: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=423"
  },
  {
    "text": "controls, metrics, and nowPlaying. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=425"
  },
  {
    "text": "We’ve also added a @State variable named \"selection\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=428"
  },
  {
    "text": "to provide the binding for the TabView’s selection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=431"
  },
  {
    "text": "Selection’s default value will be metrics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=434"
  },
  {
    "text": "so that when the workout starts, the metrics view is displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=436"
  },
  {
    "text": "Let’s add the TabView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=440"
  },
  {
    "text": "The TabView’s selection parameter uses a binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=449"
  },
  {
    "text": "to our selection state variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=451"
  },
  {
    "text": "Text views are placeholders for each view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=454"
  },
  {
    "text": "until they are created. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=456"
  },
  {
    "text": "Each of the views have a tag so they can be selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=458"
  },
  {
    "text": "Let’s click Resume ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=461"
  },
  {
    "text": "and see what our SessionPagingView looks like.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=462"
  },
  {
    "text": "Click Live Preview to be able to swipe between the views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=468"
  },
  {
    "text": "Notice the Metrics text view is displayed first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=474"
  },
  {
    "text": "because SessionPagingView's selection variable's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=477"
  },
  {
    "text": "default value is metrics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=479"
  },
  {
    "text": "Swiping to the left shows the Controls text view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=482"
  },
  {
    "text": "Swiping all the way to the right ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=487"
  },
  {
    "text": "shows the Now Playing text view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=489"
  },
  {
    "text": "Great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=491"
  },
  {
    "text": "While the workout is running, live metrics are displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=493"
  },
  {
    "text": "When a session requires movement, like running, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=496"
  },
  {
    "text": "your app should use large font sizes and arrange text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=498"
  },
  {
    "text": "so that the most important information is easy to read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=502"
  },
  {
    "text": "Our MetricsView will display elapsed time, active energy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=506"
  },
  {
    "text": "current heart rate, and distance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=510"
  },
  {
    "text": "HealthKit has many more HKQuantityTypes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=512"
  },
  {
    "text": "available for you to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=515"
  },
  {
    "text": "Let’s create the MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=517"
  },
  {
    "text": "Click File > New > File ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=520"
  },
  {
    "text": "SwiftUI View, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=526"
  },
  {
    "text": "name this \"MetricsView\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=530"
  },
  {
    "text": "A VStack will contain our four metric Text views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=540"
  },
  {
    "text": "The Text views have default values for now ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=552"
  },
  {
    "text": "until we connect these Text views to our model.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=554"
  },
  {
    "text": "Let’s make elapsed time the focal point by giving it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=562"
  },
  {
    "text": "a yellow foregroundColor and semibold fontWeight.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=564"
  },
  {
    "text": "The active energy text view creates a measurement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=572"
  },
  {
    "text": "using a default value in energy unit kilocalories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=576"
  },
  {
    "text": "The Measurement uses a new formatted function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=579"
  },
  {
    "text": "which abbreviates the unit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=582"
  },
  {
    "text": "usage is workout for workout energy burned, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=583"
  },
  {
    "text": "and numberFormat has zero fractionLength ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=586"
  },
  {
    "text": "to trim fractions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=588"
  },
  {
    "text": "The heart rate text view uses a default value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=595"
  },
  {
    "text": "formatted with fractionLength zero. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=597"
  },
  {
    "text": "It appends “bpm” -- for beats per minute -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=600"
  },
  {
    "text": "to the formatted string.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=602"
  },
  {
    "text": "The distance text view uses a default value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=608"
  },
  {
    "text": "with UnitLength.meters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=611"
  },
  {
    "text": "The measurement is formatted with abbreviated units. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=613"
  },
  {
    "text": "usage is road, which displays naturally progressing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=616"
  },
  {
    "text": "imperial or metric units based on locale.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=619"
  },
  {
    "text": "We’ll use a system font of title with rounded design, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=627"
  },
  {
    "text": "monospacedDigits, and lowercaseSmallCaps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=630"
  },
  {
    "text": "We want our metrics to be aligned to the leading edge, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=636"
  },
  {
    "text": "so we’ve given the VStack a frame view modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=639"
  },
  {
    "text": "with maxWidth infinity, and leading alignment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=642"
  },
  {
    "text": "We want to allow content of this VStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=648"
  },
  {
    "text": "to extend all the way to the bottom of the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=650"
  },
  {
    "text": "To allow this, we ignore the bottom safe area.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=652"
  },
  {
    "text": "We want our metrics to be aligned ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=658"
  },
  {
    "text": "to the navigation bar title, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=659"
  },
  {
    "text": "so we've used scenePadding() to do this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=661"
  },
  {
    "text": "We want our elapsed time Text view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=670"
  },
  {
    "text": "to format the elapsed time properly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=671"
  },
  {
    "text": "and hide or show subseconds based on the Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=674"
  },
  {
    "text": "To do this, let’s create an ElapsedTimeView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=677"
  },
  {
    "text": "and create a custom ElapsedTimeFormatter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=680"
  },
  {
    "text": "Click File > New > File, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=683"
  },
  {
    "text": "SwiftUI View, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=689"
  },
  {
    "text": "name it \"ElapsedTimeView\", and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=693"
  },
  {
    "text": "Our ElapsedTimeView has elapsedTime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=709"
  },
  {
    "text": "which is a TimeInterval, defaulted to zero. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=711"
  },
  {
    "text": "showSubseconds is a Boolean argument defaulted to true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=714"
  },
  {
    "text": "timeFormatter is an ElapsedTimeFormatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=720"
  },
  {
    "text": "state variable that we define below.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=722"
  },
  {
    "text": "The View’s body contains a Text view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=729"
  },
  {
    "text": "that casts the elapsedTime to an NSNumber ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=731"
  },
  {
    "text": "so that the timeFormatter can use it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=733"
  },
  {
    "text": "Text view has a semibold fontWeight. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=736"
  },
  {
    "text": "When showSubseconds changes, the timeFormatter’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=739"
  },
  {
    "text": "showSubseconds variable also changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=741"
  },
  {
    "text": "The ElapsedTimeFormatter is a custom formatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=752"
  },
  {
    "text": "that uses a DateComponentsFormatter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=754"
  },
  {
    "text": "We want elapsed time to show minutes and seconds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=757"
  },
  {
    "text": "and pad zeros. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=760"
  },
  {
    "text": "The showSubseconds variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=761"
  },
  {
    "text": "dictates if subseconds are shown.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=763"
  },
  {
    "text": "We override the string for value function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=769"
  },
  {
    "text": "which returns an optional String. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=771"
  },
  {
    "text": "The first guard ensures the value is a TimeInterval.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=774"
  },
  {
    "text": "The second guard ensures the componentsFormatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=780"
  },
  {
    "text": "returned a string.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=783"
  },
  {
    "text": "If showSubseconds is true, calculate the subseconds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=789"
  },
  {
    "text": "by getting the truncatedRemainder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=792"
  },
  {
    "text": "by dividingBy 1, then multiplying by 100. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=794"
  },
  {
    "text": "Use a localized decimalSeparator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=797"
  },
  {
    "text": "then return a formattedString, appending the subseconds.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=799"
  },
  {
    "text": "If showSubseconds is false, then just return ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=806"
  },
  {
    "text": "the formattedString without subseconds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=808"
  },
  {
    "text": "Click resume to see a preview of our ElapsedTimeView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=811"
  },
  {
    "text": "Looks good. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=818"
  },
  {
    "text": "Minutes has zeros padded on the left side of the colon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=819"
  },
  {
    "text": "Seconds has zeros padded on the right side of the colon. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=821"
  },
  {
    "text": "Subseconds are displayed after the decimal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=824"
  },
  {
    "text": "Let’s add the ElapsedTimeView to MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=828"
  },
  {
    "text": "Click MetricsView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=830"
  },
  {
    "text": "Replace the elapsed time Text view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=835"
  },
  {
    "text": "with the ElapsedTimeView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=836"
  },
  {
    "text": "Let’s preview our MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=845"
  },
  {
    "text": "Looks great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=847"
  },
  {
    "text": "The ControlsView has buttons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=850"
  },
  {
    "text": "that control the in-progress session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=851"
  },
  {
    "text": "such as End, Pause, and Resume. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=854"
  },
  {
    "text": "When the End button is tapped, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=857"
  },
  {
    "text": "the workout summary will be displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=858"
  },
  {
    "text": "When the Pause button is tapped, the workout will pause ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=861"
  },
  {
    "text": "and the MetricsView will be displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=863"
  },
  {
    "text": "Let’s create the ControlsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=866"
  },
  {
    "text": "Click File > New > File, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=869"
  },
  {
    "text": "SwiftUI View, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=875"
  },
  {
    "text": "name this \"ControlsView\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=878"
  },
  {
    "text": "Let’s add the End and Pause buttons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=886"
  },
  {
    "text": "An HStack contains two VStacks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=895"
  },
  {
    "text": "where each VStack contains a button and a text view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=897"
  },
  {
    "text": "The End button’s label is an Image with systemName “xmark”. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=905"
  },
  {
    "text": "The button has a red tint and uses title2 font ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=909"
  },
  {
    "text": "to increase the size of the symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=912"
  },
  {
    "text": "The text view below has an “End” string.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=915"
  },
  {
    "text": "The pause button uses an image with systemName “pause”. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=922"
  },
  {
    "text": "It has a yellow tint. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=925"
  },
  {
    "text": "The text view below has a “Pause” string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=927"
  },
  {
    "text": "Click Resume to preview the ControlsView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=929"
  },
  {
    "text": "Looks great.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=939"
  },
  {
    "text": "The NowPlayingView provides media playback controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=943"
  },
  {
    "text": "while the workout is in session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=946"
  },
  {
    "text": "This includes controls for third-party apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=948"
  },
  {
    "text": "that are currently playing media. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=950"
  },
  {
    "text": "Let’s add the NowPlayingView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=952"
  },
  {
    "text": "Select SessionPagingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=955"
  },
  {
    "text": "The NowPlayingView is provided by WatchKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=961"
  },
  {
    "text": "Let’s import WatchKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=963"
  },
  {
    "text": "Let’s replace our text views with ControlsView, MetricsView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=968"
  },
  {
    "text": "and the NowPlayingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=972"
  },
  {
    "text": "The NowPlayingView is a SwiftUI view provided by WatchKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=981"
  },
  {
    "text": "It’s that simple. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=984"
  },
  {
    "text": "Click Resume to see a preview of SessionPagingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=986"
  },
  {
    "text": "In Preview, we can see our MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=998"
  },
  {
    "text": "Swipe to the left to see the ControlsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1002"
  },
  {
    "text": "Swipe all the way to the right... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1006"
  },
  {
    "text": "...to see the NowPlayingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1010"
  },
  {
    "text": "Let’s go back to our StartView and change the destination ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1017"
  },
  {
    "text": "of the NavigationLink to SessionPagingView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1020"
  },
  {
    "text": "Select StartView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1024"
  },
  {
    "text": "Update the destination to SessionPagingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1028"
  },
  {
    "text": "A Summary screen confirms that a workout is finished ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1038"
  },
  {
    "text": "and displays the recorded information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1041"
  },
  {
    "text": "We will enhance the summary by including Activity Rings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1044"
  },
  {
    "text": "so that people can easily check their current progress. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1048"
  },
  {
    "text": "Let’s create the Summary view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1051"
  },
  {
    "text": "Click File > New > File, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1055"
  },
  {
    "text": "SwiftUI View, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1060"
  },
  {
    "text": "name this \"SummaryView\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1063"
  },
  {
    "text": "Let’s create a custom SummaryMetricView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1069"
  },
  {
    "text": "that describes the metric and its value.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1072"
  },
  {
    "text": "SummaryMetricView takes a title that describes the metric ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1082"
  },
  {
    "text": "and a value string of the metric.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1085"
  },
  {
    "text": "Body contains the two text views and a divider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1092"
  },
  {
    "text": "The text view showing the metric value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1095"
  },
  {
    "text": "uses a title system font with rounded design ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1097"
  },
  {
    "text": "and lowercaseSmallCaps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1100"
  },
  {
    "text": "It uses the accentColor as its foregroundColor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1101"
  },
  {
    "text": "Let’s create the workout duration formatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1106"
  },
  {
    "text": "for the SummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1108"
  },
  {
    "text": "durationFormatter is a DateComponentsFormatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1116"
  },
  {
    "text": "that displays hours, minutes, and seconds separated by colons ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1118"
  },
  {
    "text": "and pads zeros. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1122"
  },
  {
    "text": "Let’s add the SummaryMetricViews and the Done button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1125"
  },
  {
    "text": "to our SummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1127"
  },
  {
    "text": "A ScrollView and VStack contain our four SummaryMetricViews ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1138"
  },
  {
    "text": "and Done button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1141"
  },
  {
    "text": "Total Time text view uses the durationFormatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1148"
  },
  {
    "text": "to display hours, minutes, and seconds, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1151"
  },
  {
    "text": "separated by colons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1154"
  },
  {
    "text": "Total Distance SummaryMetricView uses Measurement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1161"
  },
  {
    "text": "with a default value that is formatted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1165"
  },
  {
    "text": "using an abbreviated unit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1167"
  },
  {
    "text": "usage is road, which displays naturally progressing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1169"
  },
  {
    "text": "imperial or metric units based on locale.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1172"
  },
  {
    "text": "Total Energy SummaryMetricView uses Measurement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1182"
  },
  {
    "text": "with a default value and energy unit of kilocalories. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1185"
  },
  {
    "text": "It is formatted using an abbreviated unit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1188"
  },
  {
    "text": "usage is workout for workout energy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1191"
  },
  {
    "text": "and numberFormat has a precision with fractionLength zero.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1194"
  },
  {
    "text": "Average Heart Rate SummaryMetricView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1203"
  },
  {
    "text": "uses a default value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1205"
  },
  {
    "text": "formatted with number precision, fractionLength of zero, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1207"
  },
  {
    "text": "and appends \"bpm\" for beats per minute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1210"
  },
  {
    "text": "We’ll provide actual workout values later ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1214"
  },
  {
    "text": "for the SummaryMetricViews. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1217"
  },
  {
    "text": "We want the text views and dividers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1221"
  },
  {
    "text": "to align to the navigation bar title ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1223"
  },
  {
    "text": "so we've used .scenePadding() on the VStack.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1225"
  },
  {
    "text": "The navigationTitle will be \"Summary\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1231"
  },
  {
    "text": "and will display inline in the navigation bar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1234"
  },
  {
    "text": "Next let’s add Activity Rings to the workout summary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1238"
  },
  {
    "text": "Click File > New > File, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1242"
  },
  {
    "text": "Swift File, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1247"
  },
  {
    "text": "name this \"ActivityRingsView\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1251"
  },
  {
    "text": "Import HealthKit to get access to the HKHealthStore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1266"
  },
  {
    "text": "Import SwiftUI to get access to WKInterfaceObjectRepresentable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1270"
  },
  {
    "text": "The ActivityRingsView struct conforms to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1278"
  },
  {
    "text": "WKInterfaceObjectRepresentable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1280"
  },
  {
    "text": "The healthStore constant is assigned at initialization.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1283"
  },
  {
    "text": "Two functions are required to conform to the protocol: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1290"
  },
  {
    "text": "makeWKInterfaceObject and updateWKInterfaceObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1293"
  },
  {
    "text": "Inside makeWKInterfaceObject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1302"
  },
  {
    "text": "we declare the activityRingsObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1304"
  },
  {
    "text": "which is a WKInterfaceActivityRing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1306"
  },
  {
    "text": "Next we create the predicate for the HKActivitySummaryQuery ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1313"
  },
  {
    "text": "and use date components for today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1317"
  },
  {
    "text": "Then we create the query and handle the result, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1322"
  },
  {
    "text": "which sets the activity summary on the activityRingsObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1324"
  },
  {
    "text": "on the main queue.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1327"
  },
  {
    "text": "Then execute the query on the HKHealthStore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1333"
  },
  {
    "text": "Finally, return the activityRingsObject. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1336"
  },
  {
    "text": "Let’s add the ActivityRingsView to the SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1339"
  },
  {
    "text": "Click SummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1342"
  },
  {
    "text": "Let's import HealthKit to get access to HKHealthStore.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1348"
  },
  {
    "text": "Next, let's add a Text view and an ActivityRingsView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1355"
  },
  {
    "text": "above the Done button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1357"
  },
  {
    "text": "We’ve added a Text view and an ActivityRingsViews ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1368"
  },
  {
    "text": "with a frame width and height of 50. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1371"
  },
  {
    "text": "We’ll create an HKHealthStore for now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1373"
  },
  {
    "text": "Later, we’ll reuse one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1375"
  },
  {
    "text": "Let’s preview our SummaryView. Click Resume.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1378"
  },
  {
    "text": "Click Live Preview to be able to scroll.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1386"
  },
  {
    "text": "See each of our SummaryMetricViews, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1392"
  },
  {
    "text": "Activity Rings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1397"
  },
  {
    "text": "and Done button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1399"
  },
  {
    "text": "Let’s talk about HealthKit integration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1402"
  },
  {
    "text": "HealthKit provides built-in functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1405"
  },
  {
    "text": "to track fitness activity during the workout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1408"
  },
  {
    "text": "and save that workout to HealthKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1410"
  },
  {
    "text": "This saves you time as a developer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1413"
  },
  {
    "text": "and your customers will have all their workouts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1415"
  },
  {
    "text": "saved to one location. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1417"
  },
  {
    "text": "HK workout session prepares the device’s sensors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1420"
  },
  {
    "text": "for data collection so that you can accurately collect data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1423"
  },
  {
    "text": "that’s relevant to the workout, like calories and heart rate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1426"
  },
  {
    "text": "It also allows your application to run in the background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1430"
  },
  {
    "text": "when the workout is active. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1433"
  },
  {
    "text": "HKLiveWorkoutBuilder will create and save an HKWorkout object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1436"
  },
  {
    "text": "It automatically collects samples ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1440"
  },
  {
    "text": "and events for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1442"
  },
  {
    "text": "To learn more, check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1445"
  },
  {
    "text": "the “New ways to work with workouts” session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1446"
  },
  {
    "text": "Let’s see what the data flow will be for our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1450"
  },
  {
    "text": "WorkoutManager will be responsible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1454"
  },
  {
    "text": "for interfacing with HealthKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1456"
  },
  {
    "text": "It interfaces with an HKWorkoutSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1458"
  },
  {
    "text": "to start, pause, and end the workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1461"
  },
  {
    "text": "It interfaces with an HKLiveWorkoutBuilder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1464"
  },
  {
    "text": "to listen for workout samples and provide that data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1467"
  },
  {
    "text": "to our views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1470"
  },
  {
    "text": "WorkoutManager will be an environment object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1472"
  },
  {
    "text": "An environment object invalidates the current view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1475"
  },
  {
    "text": "whenever the observable object changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1478"
  },
  {
    "text": "We will assignMyWorkoutsApp’s NavigationView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1482"
  },
  {
    "text": "the WorkoutManager environmentObject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1485"
  },
  {
    "text": "which will propagate WorkoutManager to views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1488"
  },
  {
    "text": "in the NavigationView’s view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1490"
  },
  {
    "text": "Views will then declare an @EnvironmentObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1494"
  },
  {
    "text": "to gain access to WorkoutManager in the environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1497"
  },
  {
    "text": "Let’s create the WorkoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1501"
  },
  {
    "text": "Click File > New > File, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1503"
  },
  {
    "text": "Swift File, click Next, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1509"
  },
  {
    "text": "name this \"WorkoutManager\" and click Create.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1513"
  },
  {
    "text": "Import HealthKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1522"
  },
  {
    "text": "so that WorkoutManager has access to HealthKit’s APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1523"
  },
  {
    "text": "Then define the WorkoutManager class which is an NSObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1532"
  },
  {
    "text": "that conforms to the ObservableObject protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1535"
  },
  {
    "text": "We want to give all of our views access to WorkoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1539"
  },
  {
    "text": "We do this by assigning WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1542"
  },
  {
    "text": "as an environment object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1545"
  },
  {
    "text": "on MyWorkoutsApp’s NavigationView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1546"
  },
  {
    "text": "Select MyWorkoutsApp.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1549"
  },
  {
    "text": "Add workoutManager as a StateObject.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1553"
  },
  {
    "text": "Add the environmentObject view modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1560"
  },
  {
    "text": "to the NavigationView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1562"
  },
  {
    "text": "When a NavigationView is assigned an environmentObject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1567"
  },
  {
    "text": "it automatically passes the environmentObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1570"
  },
  {
    "text": "to views in its view hierarchy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1573"
  },
  {
    "text": "Let’s set up our navigation model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1575"
  },
  {
    "text": "Select WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1577"
  },
  {
    "text": "WorkoutManager will manage the selected workout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1583"
  },
  {
    "text": "which is an optional HKWorkoutActivityType.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1585"
  },
  {
    "text": "We’ve added the selectedWorkout variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1592"
  },
  {
    "text": "to track the selected workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1594"
  },
  {
    "text": "Now our StartView’s NavigationLink ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1597"
  },
  {
    "text": "needs to bind its selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1598"
  },
  {
    "text": "to WorkoutManager’s selectedWorkout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1600"
  },
  {
    "text": "Select StartView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1603"
  },
  {
    "text": "Add workoutManager EnvironmentObject to StartView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1608"
  },
  {
    "text": "Let’s update NavigationLink with tag and selection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1615"
  },
  {
    "text": "tag is the workoutType. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1625"
  },
  {
    "text": "selection is a binding to selectedWorkout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1627"
  },
  {
    "text": "on workoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1631"
  },
  {
    "text": "Now, whenever a workout is tapped, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1632"
  },
  {
    "text": "selectedWorkout on workoutManager will update. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1634"
  },
  {
    "text": "Now let’s start an HKWorkoutSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1638"
  },
  {
    "text": "and HKLiveWorkoutBuilder when a workout is selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1640"
  },
  {
    "text": "Select WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1644"
  },
  {
    "text": "Add the HKHealthStore, HKWorkoutSession, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1656"
  },
  {
    "text": "and HKLiveWorkoutBuilder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1659"
  },
  {
    "text": "Now, let’s create a startWorkout function to start the workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1662"
  },
  {
    "text": "The startWorkout function takes a workoutType parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1674"
  },
  {
    "text": "A HKWorkoutConfiguration is created using the workoutType. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1677"
  },
  {
    "text": "For our app, all of our workouts will be outdoor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1682"
  },
  {
    "text": "Note that location type determines how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1685"
  },
  {
    "text": "the HKWorkoutSession and HKLiveWorkoutBuilder behaves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1687"
  },
  {
    "text": "For example, an outdoor cycling activity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1691"
  },
  {
    "text": "generates accurate location data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1693"
  },
  {
    "text": "while an indoor cycling activity does not. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1695"
  },
  {
    "text": "Create the HKWorkoutSession using the healthStore ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1699"
  },
  {
    "text": "and configuration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1702"
  },
  {
    "text": "Assign builder to the session’s associatedWorkoutBuilder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1707"
  },
  {
    "text": "This is done in a do-catch block to handle any errors thrown.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1711"
  },
  {
    "text": "Assign the builder’s dataSource to an HKLiveWorkoutDataSource ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1718"
  },
  {
    "text": "using the healthStore and workoutConfiguration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1721"
  },
  {
    "text": "An HKLiveWorkoutDataSource automatically provides live data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1725"
  },
  {
    "text": "from an active workout session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1729"
  },
  {
    "text": "Create a startDate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1735"
  },
  {
    "text": "call startActivity on the session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1737"
  },
  {
    "text": "and beginCollection on the builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1739"
  },
  {
    "text": "Whenever selectedWorkout changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1742"
  },
  {
    "text": "let’s call startWorkout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1744"
  },
  {
    "text": "selectedWorkout can be nil. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1752"
  },
  {
    "text": "Use a guard statement to only call startWorkout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1755"
  },
  {
    "text": "when selectedWorkout is not nil. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1757"
  },
  {
    "text": "Before our app can create a workout session, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1761"
  },
  {
    "text": "we need to set up HealthKit and request authorization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1763"
  },
  {
    "text": "to read and share any health data our app intends to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1766"
  },
  {
    "text": "Let's add a function to request authorization.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1770"
  },
  {
    "text": "For workout sessions, we must request permission ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1782"
  },
  {
    "text": "to share workout types.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1784"
  },
  {
    "text": "We also want to read any data types automatically recorded ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1790"
  },
  {
    "text": "by Apple Watch as part of the session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1793"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1796"
  },
  {
    "text": "We also want permission to read the Activity Rings summary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1798"
  },
  {
    "text": "Then call requestAuthorization on the healthStore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1805"
  },
  {
    "text": "Let’s have the StartView request authorization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1808"
  },
  {
    "text": "from HealthKit when the view appears. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1810"
  },
  {
    "text": "Click StartView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1812"
  },
  {
    "text": "On appear, workoutManager’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1823"
  },
  {
    "text": "requestAuthorization function will be called. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1825"
  },
  {
    "text": "Let’s enable HealthKit for our extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1828"
  },
  {
    "text": "Select MyWorkouts's project file...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1831"
  },
  {
    "text": "...MyWorkouts WatchKit Extension, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1839"
  },
  {
    "text": "Signing & Capabilities. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1842"
  },
  {
    "text": "Select Add Capability, scroll down, select HealthKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1845"
  },
  {
    "text": "Apps with an active workout session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1853"
  },
  {
    "text": "can run in the background, so you need to add ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1855"
  },
  {
    "text": "the background modes capability to your WatchKit Extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1857"
  },
  {
    "text": "Workout sessions require ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1861"
  },
  {
    "text": "the Workout processing background mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1862"
  },
  {
    "text": "Select Add Capability, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1865"
  },
  {
    "text": "Background Modes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1869"
  },
  {
    "text": "Select Workout processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1872"
  },
  {
    "text": "We need to add usage descriptions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1876"
  },
  {
    "text": "to our WatchKit Extension’s Info.plist file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1877"
  },
  {
    "text": "Select Info.plist.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1881"
  },
  {
    "text": "Select the last row, then press Return.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1886"
  },
  {
    "text": "Use the NSHealth ShareUsageDescription key.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1893"
  },
  {
    "text": "Describe why your app needs to read the requested data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1900"
  },
  {
    "text": "Press Return. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1905"
  },
  {
    "text": "Use the NSHealth UpdateUsageDescription key.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1908"
  },
  {
    "text": "Describe the data your app intends to write.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1915"
  },
  {
    "text": "Let’s build and run our app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1922"
  },
  {
    "text": "to see our app request permission from HealthKit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1923"
  },
  {
    "text": "Click Run.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1926"
  },
  {
    "text": "Our app has requested HealthKit authorization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1945"
  },
  {
    "text": "Scroll down and click Review.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1948"
  },
  {
    "text": "Select All Requested Data Below.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1953"
  },
  {
    "text": "See that our app has requested to share Workouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1959"
  },
  {
    "text": "See our provided explanation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1964"
  },
  {
    "text": "Tap Next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1967"
  },
  {
    "text": "Our app has requested read access. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1970"
  },
  {
    "text": "Select All Requested Data Below. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1972"
  },
  {
    "text": "See the data types that our app has requested read access to.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1976"
  },
  {
    "text": "See our provided explanation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1987"
  },
  {
    "text": "Tap Done.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1990"
  },
  {
    "text": "Now that the workout session can start, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1994"
  },
  {
    "text": "we need to control the HKWorkoutSession. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1996"
  },
  {
    "text": "Select WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=1999"
  },
  {
    "text": "Let's add our session state control logic.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2007"
  },
  {
    "text": "A @Published variable named \"running\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2019"
  },
  {
    "text": "tracks if the session is running.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2020"
  },
  {
    "text": "The pause and resume functions pause and resume the session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2026"
  },
  {
    "text": "The togglePause function will either pause ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2030"
  },
  {
    "text": "or resume the session based on if the session is running.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2033"
  },
  {
    "text": "The endWorkout function will end the session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2040"
  },
  {
    "text": "Let’s extend WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2043"
  },
  {
    "text": "to be an HKWorkoutSessionDelegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2045"
  },
  {
    "text": "to listen for changes to the session state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2047"
  },
  {
    "text": "The workoutSession didChangeTo toState fromState ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2059"
  },
  {
    "text": "with Date function is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2063"
  },
  {
    "text": "whenever the session state changes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2065"
  },
  {
    "text": "Our running variable will update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2071"
  },
  {
    "text": "based on if the toState is running and is dispatched ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2072"
  },
  {
    "text": "to the main queue for UI updates.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2075"
  },
  {
    "text": "When the session transitions to ended, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2081"
  },
  {
    "text": "call endCollection on the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2083"
  },
  {
    "text": "with the end date provided to stop collecting workout samples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2085"
  },
  {
    "text": "Once endCollection finishes, call finishWorkout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2090"
  },
  {
    "text": "to save the HKWorkout to the Health database. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2092"
  },
  {
    "text": "Make sure to assign WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2096"
  },
  {
    "text": "as the HKWorkoutSession delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2099"
  },
  {
    "text": "Now let’s have the ControlsView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2108"
  },
  {
    "text": "pause, resume, and end the session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2111"
  },
  {
    "text": "Select ControlsView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2114"
  },
  {
    "text": "Add workoutManager as an EnvironmentObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2119"
  },
  {
    "text": "so that our view can control the session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2122"
  },
  {
    "text": "Have the End button’s action call endWorkout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2131"
  },
  {
    "text": "on workoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2134"
  },
  {
    "text": "The Pause/Resume button needs to pause or resume the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2140"
  },
  {
    "text": "and update its image and text based on the session state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2144"
  },
  {
    "text": "The button’s action calls workoutManager’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2156"
  },
  {
    "text": "togglePause function to pause or resume the session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2158"
  },
  {
    "text": "The button’s Image’s systemName is either \"pause\" or \"play\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2165"
  },
  {
    "text": "based on workoutManager’s running variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2168"
  },
  {
    "text": "The text below the button shows either “Pause” or “Resume”, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2173"
  },
  {
    "text": "also based on workoutManager’s running variable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2176"
  },
  {
    "text": "Let’s update our SessionPagingView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2179"
  },
  {
    "text": "to display the workout name in the navigation bar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2181"
  },
  {
    "text": "Select SessionPagingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2184"
  },
  {
    "text": "The SessionPagingView needs access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2189"
  },
  {
    "text": "to the WorkoutManager environment variable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2190"
  },
  {
    "text": "so let’s add that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2193"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2195"
  },
  {
    "text": "Now let’s configure our navigation bar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2199"
  },
  {
    "text": "The navigation title ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2202"
  },
  {
    "text": "is the WorkoutManager’s selectedWorkout’s name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2204"
  },
  {
    "text": "The navigation bar’s back button is hidden, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2208"
  },
  {
    "text": "because we don’t want someone to go back to the StartView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2210"
  },
  {
    "text": "while they are in a workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2213"
  },
  {
    "text": "When the NowPlayingView is shown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2216"
  },
  {
    "text": "we want to hide the navigation bar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2218"
  },
  {
    "text": "When someone pauses or resumes their workout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2221"
  },
  {
    "text": "they shouldn’t need to swipe to the MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2224"
  },
  {
    "text": "We can do this for them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2226"
  },
  {
    "text": "by adding an onChange view modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2227"
  },
  {
    "text": "When WorkoutManager’s running published variable changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2238"
  },
  {
    "text": "the displayMetricsView function is called. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2241"
  },
  {
    "text": "displayMetricsView sets the selection state variable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2243"
  },
  {
    "text": "to metrics withAnimation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2246"
  },
  {
    "text": "Now that the workout can end, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2249"
  },
  {
    "text": "let’s add the ability to show and dismiss the SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2251"
  },
  {
    "text": "Click WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2254"
  },
  {
    "text": "Add a published variable named \"showingSummaryView\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2259"
  },
  {
    "text": "which is a Boolean defaulted to false.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2263"
  },
  {
    "text": "This variable will provide a binding to a sheet’s selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2273"
  },
  {
    "text": "on our app’s navigation view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2276"
  },
  {
    "text": "In endWorkout, set showingSummaryView to true.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2278"
  },
  {
    "text": "Let’s add the SummaryView as a Sheet ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2291"
  },
  {
    "text": "to MyWorkoutsApp’s NavigationView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2293"
  },
  {
    "text": "Click MyWorkoutsApp.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2296"
  },
  {
    "text": "Add a sheet view modifier to NavigationView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2301"
  },
  {
    "text": "The isPresented parameter is a binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2309"
  },
  {
    "text": "to workoutManager’s showingSummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2312"
  },
  {
    "text": "The sheet’s content is a SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2315"
  },
  {
    "text": "In SummaryView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2318"
  },
  {
    "text": "let’s add the ability to dismiss the sheet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2319"
  },
  {
    "text": "Click SummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2322"
  },
  {
    "text": "Add the dismiss Dnvironment variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2328"
  },
  {
    "text": "In the Done button’s action, call dismiss().",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2336"
  },
  {
    "text": "Let’s run our application to start and end the session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2346"
  },
  {
    "text": "and see the SummaryView displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2349"
  },
  {
    "text": "Click Stop to stop the previous run.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2352"
  },
  {
    "text": "Click Run.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2357"
  },
  {
    "text": "Tap the Run workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2364"
  },
  {
    "text": "Default metric values will still be displayed in-session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2367"
  },
  {
    "text": "and in the summary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2370"
  },
  {
    "text": "We'll set that up later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2371"
  },
  {
    "text": "Swipe to the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2373"
  },
  {
    "text": "Tap Pause. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2375"
  },
  {
    "text": "Notice the MetricsView is displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2378"
  },
  {
    "text": "Swipe to the left.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2380"
  },
  {
    "text": "Notice the button now shows \"Resume\". ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2385"
  },
  {
    "text": "Tap End.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2387"
  },
  {
    "text": "Our workout summary displays as a sheet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2391"
  },
  {
    "text": "Scroll down. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2394"
  },
  {
    "text": "Tap Done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2397"
  },
  {
    "text": "The sheet is dismissed and the StartView is displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2399"
  },
  {
    "text": "Let’s get our MetricsView and SummaryView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2403"
  },
  {
    "text": "to show actual workout metrics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2405"
  },
  {
    "text": "WorkoutManager will expose published workout metrics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2407"
  },
  {
    "text": "that MetricsView and SummaryView can observe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2411"
  },
  {
    "text": "Select WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2414"
  },
  {
    "text": "Let’s add the Published metric variables to WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2420"
  },
  {
    "text": "averageHeartRate will be used by SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2432"
  },
  {
    "text": "heartRate, activeEnergy, and distance will be observed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2435"
  },
  {
    "text": "by MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2439"
  },
  {
    "text": "WorkoutManager needs to observe workout samples ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2441"
  },
  {
    "text": "added to the builder by being an HKLiveWorkoutBuilderDelegate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2444"
  },
  {
    "text": "Let’s do this now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2448"
  },
  {
    "text": "First, let’s assign the builder’s delegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2450"
  },
  {
    "text": "as WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2452"
  },
  {
    "text": "Now let’s make WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2459"
  },
  {
    "text": "conform to the HKLiveWorkout BuilderDelegate protocol.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2461"
  },
  {
    "text": "We’ve extended WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2474"
  },
  {
    "text": "to conform to the HKLiveWorkout BuilderDelegate protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2475"
  },
  {
    "text": "workoutBuilderDidCollectEvent is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2481"
  },
  {
    "text": "whenever the builder collects an event. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2484"
  },
  {
    "text": "We will leave this function empty for our app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2486"
  },
  {
    "text": "workoutBuilder didCollectDataOf collectedTypes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2492"
  },
  {
    "text": "is called whenever the builder collects new samples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2495"
  },
  {
    "text": "We will iterate over each type in collectedTypes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2502"
  },
  {
    "text": "The guard ensures the collected type is an HKQuantityType. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2505"
  },
  {
    "text": "Statistics are read from the builder for that quantity type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2509"
  },
  {
    "text": "updateForStatistics -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2512"
  },
  {
    "text": "a function we will create shortly -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2514"
  },
  {
    "text": "will be called, which updates the published metric values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2516"
  },
  {
    "text": "Let’s create the updateForStatistics function.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2520"
  },
  {
    "text": "updateForStatistics takes an optional HKStatistics object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2533"
  },
  {
    "text": "A guard early returns if statistics is nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2538"
  },
  {
    "text": "Dispatch the metric updates asynchronously ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2545"
  },
  {
    "text": "to the main queue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2548"
  },
  {
    "text": "Switch through each quantity type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2549"
  },
  {
    "text": "For heartRate, we want beats per minute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2551"
  },
  {
    "text": "so we use a count HKUnit divided by a minute HKUnit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2554"
  },
  {
    "text": "Assign heartRate as the mostRrecentQuantity’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2558"
  },
  {
    "text": "doubleValue for beats per minute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2561"
  },
  {
    "text": "Assign averageHeartRate as statistics.averageQuantity’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2564"
  },
  {
    "text": "doubleValue for beats per minute.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2567"
  },
  {
    "text": "For the activeEnergyBurned quantityType, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2573"
  },
  {
    "text": "use the kilocalorie energyUnit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2576"
  },
  {
    "text": "Assign activeEnergy as the sumQuantity’s doubleValue ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2579"
  },
  {
    "text": "for the energyUnit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2582"
  },
  {
    "text": "For walking, running, and cycling distance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2588"
  },
  {
    "text": "get the sumQuantity’s doubleValue for meterUnit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2590"
  },
  {
    "text": "Now let’s have MetricsView use metric values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2594"
  },
  {
    "text": "from the WorkoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2598"
  },
  {
    "text": "Select MetricsView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2599"
  },
  {
    "text": "Add workoutManager as an Environment variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2605"
  },
  {
    "text": "Let's update our views to use metric values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2612"
  },
  {
    "text": "from WorkoutManager.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2614"
  },
  {
    "text": "The ElapsedTimeView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2636"
  },
  {
    "text": "uses the workoutManager’s builder’s elapsedTime.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2637"
  },
  {
    "text": "The activeEnergy Text view’s Measurement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2644"
  },
  {
    "text": "uses workoutManager’s activeEnergy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2646"
  },
  {
    "text": "The heartRate Text view uses workoutManager’s heartRate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2654"
  },
  {
    "text": "The distance text view’s Measurement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2662"
  },
  {
    "text": "uses workoutManager’s distance.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2664"
  },
  {
    "text": "The builder’s elapsed time variable isn’t published, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2671"
  },
  {
    "text": "so our view currently will not update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2674"
  },
  {
    "text": "when builder’s elapsedTime updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2676"
  },
  {
    "text": "What we can do is wrap the VStack in a TimelineView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2678"
  },
  {
    "text": "TimelineView is new this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2686"
  },
  {
    "text": "A TimelineView updates over time in line with its schedule. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2688"
  },
  {
    "text": "watchOS apps now support Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2692"
  },
  {
    "text": "TimelineViews make our view aware of changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2696"
  },
  {
    "text": "to the Always On context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2698"
  },
  {
    "text": "To learn more, check out the “What’s new in watchOS 8” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2700"
  },
  {
    "text": "and \"What's new in SwiftUI\" sessions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2703"
  },
  {
    "text": "Apps can be in either active state or Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2708"
  },
  {
    "text": "Apps with active workout sessions can update, at most, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2713"
  },
  {
    "text": "once every second in Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2716"
  },
  {
    "text": "This means the MetricsView needs to hide subseconds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2719"
  },
  {
    "text": "in Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2723"
  },
  {
    "text": "Other design considerations should be made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2725"
  },
  {
    "text": "for Always On state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2727"
  },
  {
    "text": "such as hiding the page indicator controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2728"
  },
  {
    "text": "to simplify the view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2731"
  },
  {
    "text": "Our TimelineView needs a custom TimelineSchedule ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2733"
  },
  {
    "text": "that changes its interval based on the TimelineScheduleMode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2737"
  },
  {
    "text": "dictated by the Always On context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2740"
  },
  {
    "text": "Let’s create our custom TimelineSchedule.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2743"
  },
  {
    "text": "MetricsTimelineSchedule has a startDate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2758"
  },
  {
    "text": "for when the schedule should start. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2760"
  },
  {
    "text": "Its initializer takes a startDate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2762"
  },
  {
    "text": "MetricsTimelineSchedule ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2769"
  },
  {
    "text": "implements the entries function to produce ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2770"
  },
  {
    "text": "PeriodicTimelineSchedule entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2772"
  },
  {
    "text": "The function creates a PeriodicTimelineSchedule ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2774"
  },
  {
    "text": "using the startDate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2777"
  },
  {
    "text": "The interval is determined by the TimelineScheduleMode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2779"
  },
  {
    "text": "When the TimelineScheduleMode is lowFrequency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2782"
  },
  {
    "text": "the TimelineSchedule interval is one second. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2785"
  },
  {
    "text": "When the TimelineScheduleMode is normal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2788"
  },
  {
    "text": "the interval is 30 times per second. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2791"
  },
  {
    "text": "Let’s wrap our VStack in a TimelineView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2793"
  },
  {
    "text": "The TimelineView uses our MetricsTimelineSchedule, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2807"
  },
  {
    "text": "using the builder’s startDate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2810"
  },
  {
    "text": "ElapsedTimeView’s showSubseconds is determined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2815"
  },
  {
    "text": "by the TimelineView’s context.cadence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2818"
  },
  {
    "text": "When cadence is live, subseconds are shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2821"
  },
  {
    "text": "Otherwise subseconds are hidden in Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2824"
  },
  {
    "text": "Let’s run our application to see the metrics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2828"
  },
  {
    "text": "updating during the workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2830"
  },
  {
    "text": "Click Stop to stop the current run. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2832"
  },
  {
    "text": "Click Run.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2836"
  },
  {
    "text": "Tap the Run workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2842"
  },
  {
    "text": "Notice that elapsed time is incrementing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2846"
  },
  {
    "text": "The watchOS simulator automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2849"
  },
  {
    "text": "simulates collecting live workout samples for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2851"
  },
  {
    "text": "Calories are accruing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2854"
  },
  {
    "text": "Heart rate is updating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2856"
  },
  {
    "text": "Distance is accumulating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2857"
  },
  {
    "text": "Let’s try the Always On state by clicking the Lock button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2860"
  },
  {
    "text": "on the simulator.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2862"
  },
  {
    "text": "Notice subseconds are hidden and metrics update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2866"
  },
  {
    "text": "only once per second. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2868"
  },
  {
    "text": "Click the Unlock button to return to active state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2872"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2875"
  },
  {
    "text": "Swipe left and end the workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2878"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2880"
  },
  {
    "text": "The SummaryView still needs the actual HKWorkout values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2884"
  },
  {
    "text": "Let’s do this now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2888"
  },
  {
    "text": "First, let’s add the HKWorkout to the WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2890"
  },
  {
    "text": "to be used in the SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2893"
  },
  {
    "text": "Select WorkoutManager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2895"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2897"
  },
  {
    "text": "Add a HKWorkout Published variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2902"
  },
  {
    "text": "When the builder has finished saving the workout, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2910"
  },
  {
    "text": "assign the workout to WorkoutManager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2912"
  },
  {
    "text": "when builder’s finishWorkout function completes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2915"
  },
  {
    "text": "We do this assignment on the main queue for UI updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2928"
  },
  {
    "text": "When the SummaryView dismisses, we need to reset our model. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2932"
  },
  {
    "text": "Let’s create a resetWorkout function that does this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2936"
  },
  {
    "text": "The resetWorkout function resets all of our model variables ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2949"
  },
  {
    "text": "back to an initial state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2952"
  },
  {
    "text": "Let’s call resetWorkout when the summary dismisses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2955"
  },
  {
    "text": "This is done in the didSet of showingSummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2958"
  },
  {
    "text": "Let’s display a progress view when the workout ends, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2972"
  },
  {
    "text": "while the workout is saving, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2975"
  },
  {
    "text": "before displaying the SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2977"
  },
  {
    "text": "Let’s go to our SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2979"
  },
  {
    "text": "Click SummaryView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2982"
  },
  {
    "text": "First, add the workoutManager EnvironmentObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2986"
  },
  {
    "text": "to SummaryView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2989"
  },
  {
    "text": "We want to display the ProgressView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2996"
  },
  {
    "text": "until workoutManager has the HKWorkout assigned ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=2998"
  },
  {
    "text": "when the builder finishes saving the workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3001"
  },
  {
    "text": "If workoutManager’s workout is nil, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3016"
  },
  {
    "text": "then display the ProgressView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3018"
  },
  {
    "text": "with the text showing “Saving workout”, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3020"
  },
  {
    "text": "and hide the navigation bar.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3022"
  },
  {
    "text": "We've also updated ActivityRingsView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3030"
  },
  {
    "text": "to use workoutManager’s HKHealthStore. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3033"
  },
  {
    "text": "You only need a single HKHealthStore per app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3035"
  },
  {
    "text": "Let’s update our SummaryMetricViews ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3039"
  },
  {
    "text": "to use the HKWorkout values.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3041"
  },
  {
    "text": "The Total Time metric view uses the workout duration.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3058"
  },
  {
    "text": "The totalDistance metric view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3066"
  },
  {
    "text": "uses the workout’s total distance.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3068"
  },
  {
    "text": "The Total Energy metric view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3074"
  },
  {
    "text": "uses the workout’s totalEnergyBurned.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3076"
  },
  {
    "text": "The Average Heart Rate metric view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3083"
  },
  {
    "text": "uses the workoutManager’s averageHeartRate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3084"
  },
  {
    "text": "If you want to save average heart rate for later, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3087"
  },
  {
    "text": "you can add it as metadata to the builder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3090"
  },
  {
    "text": "before saving the workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3092"
  },
  {
    "text": "Let’s update our SessionPagingView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3094"
  },
  {
    "text": "to react to Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3096"
  },
  {
    "text": "Select SessionPagingView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3098"
  },
  {
    "text": "Add the isLuminanceReduced Environment variable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3103"
  },
  {
    "text": "During Always On state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3111"
  },
  {
    "text": "we want to hide the TabView’s page indicator ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3113"
  },
  {
    "text": "and ensure the MetricsView is displayed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3115"
  },
  {
    "text": "We’ve set the tabViewStyle's indexDisplayMode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3125"
  },
  {
    "text": "to either never or automatic, based on isLuminanceReduced. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3128"
  },
  {
    "text": "When isLuminanceReduced changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3133"
  },
  {
    "text": "call the displayMetricsView function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3135"
  },
  {
    "text": "to display the MetricsView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3138"
  },
  {
    "text": "Let’s run our app in the simulator and try it out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3140"
  },
  {
    "text": "Click Stop to stop the last run. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3143"
  },
  {
    "text": "Click Run.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3146"
  },
  {
    "text": "Select the Run workout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3154"
  },
  {
    "text": "Notice metrics are updating live from the builder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3158"
  },
  {
    "text": "Swipe left. Tap Pause. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3161"
  },
  {
    "text": "Notice metrics have stopped updating, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3165"
  },
  {
    "text": "because the workout is paused. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3167"
  },
  {
    "text": "Swipe left. Tap Resume. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3169"
  },
  {
    "text": "Metrics resume updating. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3174"
  },
  {
    "text": "Swipe right, see the NowPlayingView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3177"
  },
  {
    "text": "Swipe left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3180"
  },
  {
    "text": "Click Lock to trigger the Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3183"
  },
  {
    "text": "Notice subseconds are hidden ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3187"
  },
  {
    "text": "and page control indicators are hidden. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3189"
  },
  {
    "text": "Click Unlock to resume active state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3191"
  },
  {
    "text": "Swipe left, tap End.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3196"
  },
  {
    "text": "The workout saves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3200"
  },
  {
    "text": "The summary is displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3203"
  },
  {
    "text": "Scroll down to view each of the metrics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3205"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3207"
  },
  {
    "text": "Activity Rings will populate based on the amount of energy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3211"
  },
  {
    "text": "exercise minutes, and stand hours. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3214"
  },
  {
    "text": "Tap Done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3217"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3218"
  },
  {
    "text": "We are taken back to the start view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3220"
  },
  {
    "text": "ready for our next workout.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3222"
  },
  {
    "text": "You saw how easy it is to use SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3228"
  },
  {
    "text": "to implement a fully functioning workout app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3231"
  },
  {
    "text": "integrated with HealthKit that supports the Always On state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3234"
  },
  {
    "text": "We can’t wait to see what great workout apps you’ll build next! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3238"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10009/?time=3241"
  }
]