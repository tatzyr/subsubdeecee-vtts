[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2"
  },
  {
    "text": "Hi! My name is Egor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=9"
  },
  {
    "text": "and today, I’d like to tell you about all the improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=11"
  },
  {
    "text": "and new features in Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=13"
  },
  {
    "text": "This year, we are bringing support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=15"
  },
  {
    "text": "for more Metal features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=18"
  },
  {
    "text": "such as ray tracing and function pointers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=19"
  },
  {
    "text": "We have added brand-new profiling workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=23"
  },
  {
    "text": "like the GPU timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=26"
  },
  {
    "text": "and consistent GPU performance state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=27"
  },
  {
    "text": "to help you get the most out of GPUs across Apple platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=30"
  },
  {
    "text": "We’ve made improvements to other debugging workflows you know and love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=35"
  },
  {
    "text": "including broader support for shader validation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=38"
  },
  {
    "text": "and precise capture controls.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=41"
  },
  {
    "text": "We are also introducing advances in texture compression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=45"
  },
  {
    "text": "which my colleague Amanda will talk about later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=48"
  },
  {
    "text": "First, let’s talk about ray tracing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=53"
  },
  {
    "text": "Last year, we introduced a new Metal ray tracing API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=56"
  },
  {
    "text": "and now, in Xcode 13, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=60"
  },
  {
    "text": "we support it in Metal Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=63"
  },
  {
    "text": "along with function pointers and function tables, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=65"
  },
  {
    "text": "which bring flexibility to your shaders. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=68"
  },
  {
    "text": "And dynamic libraries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=71"
  },
  {
    "text": "which give you a way to build well-abstracted and reusable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=73"
  },
  {
    "text": "shader library code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=76"
  },
  {
    "text": "Also, for ray tracing, we are introducing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=78"
  },
  {
    "text": "a brand-new tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=81"
  },
  {
    "text": "the Acceleration Structure Viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=82"
  },
  {
    "text": "Take a look at ray tracing in the Metal Debugger.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=85"
  },
  {
    "text": "I’ve opened a GPU trace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=88"
  },
  {
    "text": "of the ModernRenderer sample app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=90"
  },
  {
    "text": "It was modified to use the Metal ray tracing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=93"
  },
  {
    "text": "to achieve effects such as shadows and ambient occlusion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=96"
  },
  {
    "text": "This encoder creates a beautiful ray traced shadow map. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=101"
  },
  {
    "text": "I’ve selected a dispatch call ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=105"
  },
  {
    "text": "so that you can see the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=106"
  },
  {
    "text": "in bound resources. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=109"
  },
  {
    "text": "From here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=111"
  },
  {
    "text": "I will open the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=113"
  },
  {
    "text": "to go to our new acceleration structure viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=115"
  },
  {
    "text": "Here, you can see the geometry of the familiar bistro scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=118"
  },
  {
    "text": "on the right, and its outline on the left. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=122"
  },
  {
    "text": "Clicking on an instance in the scene ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=127"
  },
  {
    "text": "will select it in the viewer and also in the scene outline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=129"
  },
  {
    "text": "You can see the transformation matrix ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=134"
  },
  {
    "text": "and other instance properties by expanding it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=136"
  },
  {
    "text": "You can also select an individual geometry ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=140"
  },
  {
    "text": "by holding the Option key ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=142"
  },
  {
    "text": "while clicking in the scene viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=144"
  },
  {
    "text": "This will also select it in the scene outline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=146"
  },
  {
    "text": "and vice versa.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=149"
  },
  {
    "text": "You can also see the relevant intersection functions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=152"
  },
  {
    "text": "used with the acceleration structure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=155"
  },
  {
    "text": "right here in the viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=157"
  },
  {
    "text": "But the Acceleration Structure Viewer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=160"
  },
  {
    "text": "can do much more than simply display geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=162"
  },
  {
    "text": "Here on the bottom-right, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=166"
  },
  {
    "text": "you will also find a number of highlighting modes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=167"
  },
  {
    "text": "that will help you visualize some of the properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=170"
  },
  {
    "text": "of your scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=172"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=174"
  },
  {
    "text": "the bounding volume traversals mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=175"
  },
  {
    "text": "can help you visualize the complexity of your geometry. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=177"
  },
  {
    "text": "A deeper blue color shows areas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=181"
  },
  {
    "text": "where the bounding volume hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=183"
  },
  {
    "text": "is more computationally expensive to traverse ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=185"
  },
  {
    "text": "relative to other parts of it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=188"
  },
  {
    "text": "For all of the modes, we have this small view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=191"
  },
  {
    "text": "that shows the relevant information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=193"
  },
  {
    "text": "when you hover over different parts of your scene. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=195"
  },
  {
    "text": "Here, it displays the number of bounding box traversals ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=198"
  },
  {
    "text": "and primitive intersections.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=202"
  },
  {
    "text": "To give you more flexibility, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=205"
  },
  {
    "text": "we also included traversal settings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=207"
  },
  {
    "text": "With them, you can configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=210"
  },
  {
    "text": "the acceleration structure viewer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=211"
  },
  {
    "text": "using same properties you can find ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=214"
  },
  {
    "text": "on an intersector object inside your shaders.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=215"
  },
  {
    "text": "There’s so much more to talk about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=220"
  },
  {
    "text": "when it comes to ray tracing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=221"
  },
  {
    "text": "If you’d like to learn more, check this year’s session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=223"
  },
  {
    "text": "“Explore hybrid rendering with Metal ray tracing.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=226"
  },
  {
    "text": "And if you want to know more about the API in general, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=230"
  },
  {
    "text": "check out last year’s talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=234"
  },
  {
    "text": "“Discover ray tracing with Metal.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=235"
  },
  {
    "text": "Next, let’s talk about profiling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=238"
  },
  {
    "text": "Profiling your app is an important step, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=241"
  },
  {
    "text": "and we already have a lot of great tools at your disposal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=244"
  },
  {
    "text": "For example, using the Metal system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=247"
  },
  {
    "text": "trace in instruments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=250"
  },
  {
    "text": "you can explore a timeline view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=251"
  },
  {
    "text": "that shows CPU and GPU durations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=253"
  },
  {
    "text": "for different rendering stages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=255"
  },
  {
    "text": "GPU counters, and shader timelines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=257"
  },
  {
    "text": "And in the Metal Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=260"
  },
  {
    "text": "GPU counters show a rich set of measurements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=263"
  },
  {
    "text": "directly from the GPU, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=265"
  },
  {
    "text": "either per encoder or per draw. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=267"
  },
  {
    "text": "Both are excellent tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=271"
  },
  {
    "text": "which provide complementary views of your app’s performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=272"
  },
  {
    "text": "But aligning those views may take additional effort. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=276"
  },
  {
    "text": "So, that’s why I’m excited to show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=280"
  },
  {
    "text": "a new GPU profiling tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=282"
  },
  {
    "text": "that combines Metal system trace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=284"
  },
  {
    "text": "and GPU counters in a unified experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=286"
  },
  {
    "text": "Introducing GPU Timeline in Metal Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=290"
  },
  {
    "text": "a new tool designed specifically for Apple GPUs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=293"
  },
  {
    "text": "It gives you a different perspective ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=297"
  },
  {
    "text": "on the performance data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=299"
  },
  {
    "text": "and it can help you find potential points of optimization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=301"
  },
  {
    "text": "in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=304"
  },
  {
    "text": "Let’s walk through this latest addition ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=306"
  },
  {
    "text": "to our suite of profiling tools.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=308"
  },
  {
    "text": "The GPU Timeline is available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=312"
  },
  {
    "text": "under the Performance panel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=314"
  },
  {
    "text": "You can find it in the debug navigator ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=316"
  },
  {
    "text": "after you’ve captured a frame from your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=318"
  },
  {
    "text": "When you open the Performance panel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=321"
  },
  {
    "text": "you’ll be greeted by a set of different tracks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=324"
  },
  {
    "text": "laid out in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=326"
  },
  {
    "text": "Before we continue, I want to explain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=328"
  },
  {
    "text": "why encoder tracks are in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=330"
  },
  {
    "text": "On Apple GPUs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=333"
  },
  {
    "text": "vertex and fragment stages of different render passes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=335"
  },
  {
    "text": "and also compute dispatches, can run simultaneously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=338"
  },
  {
    "text": "This is enabled by Apple GPU architecture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=342"
  },
  {
    "text": "and use of rendering technique ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=345"
  },
  {
    "text": "called “tile-based deferred rendering.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=347"
  },
  {
    "text": "We thought it is important for you to be able to see this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=350"
  },
  {
    "text": "parallel nature of Apple GPUs in the context of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=353"
  },
  {
    "text": "And that’s where GPU Timeline comes in handy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=357"
  },
  {
    "text": "At the top, you can see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=360"
  },
  {
    "text": "the Vertex, Fragment, and Compute encoder timelines, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=362"
  },
  {
    "text": "with each encoder showing the resources it uses ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=366"
  },
  {
    "text": "at a quick glance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=369"
  },
  {
    "text": "Below the encoders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=370"
  },
  {
    "text": "you will find Occupancy, Bandwidth, and limiter counters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=372"
  },
  {
    "text": "Let’s take a closer look at the encoder timeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=377"
  },
  {
    "text": "You can expand each encoder track ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=381"
  },
  {
    "text": "to see an aggregated shader timeline.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=383"
  },
  {
    "text": "Expanding the timeline even further ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=387"
  },
  {
    "text": "will show you each individual shader ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=389"
  },
  {
    "text": "in a waterfall-like fashion.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=391"
  },
  {
    "text": "It’s easy to navigate the encoders. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=395"
  },
  {
    "text": "Select an encoder track ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=398"
  },
  {
    "text": "to see a list of all the encoders on the right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=400"
  },
  {
    "text": "There, you can sort them by their average duration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=403"
  },
  {
    "text": "Clicking on an individual encoder in the timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=408"
  },
  {
    "text": "will show you more information about it in the sidebar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=410"
  },
  {
    "text": "For example, here you can see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=414"
  },
  {
    "text": "the attachments for this render command encoder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=416"
  },
  {
    "text": "You may have noticed that when you select an encoder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=421"
  },
  {
    "text": "time ranges where it’s active ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=424"
  },
  {
    "text": "become highlighted across all the tracks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=426"
  },
  {
    "text": "With this, you can easily examine ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=429"
  },
  {
    "text": "how different stages overlap, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=431"
  },
  {
    "text": "and also correlate counter values for the encoder.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=433"
  },
  {
    "text": "Moving away from the timeline view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=438"
  },
  {
    "text": "you can access the GPU counters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=440"
  },
  {
    "text": "by switching to the Counters tab, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=442"
  },
  {
    "text": "or you can just open encoder’s context menu ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=445"
  },
  {
    "text": "and reveal it in Counters from there.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=448"
  },
  {
    "text": "And this is just a sneak peek at the GPU Timeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=451"
  },
  {
    "text": "To learn more about using Metal Debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=456"
  },
  {
    "text": "to understand your app’s performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=458"
  },
  {
    "text": "check out this year’s session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=460"
  },
  {
    "text": "“Optimize high-end games for Apple GPUs.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=462"
  },
  {
    "text": "Now that I’ve showed you a new way to profile your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=467"
  },
  {
    "text": "it’s important to understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=470"
  },
  {
    "text": "that its performance depends on several factors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=472"
  },
  {
    "text": "When we are talking about Metal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=476"
  },
  {
    "text": "the GPU performance state is a very important factor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=478"
  },
  {
    "text": "It’s managed by the operating system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=482"
  },
  {
    "text": "which will lower or raise the state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=484"
  },
  {
    "text": "depending on device thermals, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=487"
  },
  {
    "text": "system settings, GPU utilization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=489"
  },
  {
    "text": "and other parameters.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=491"
  },
  {
    "text": "These state changes can affect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=494"
  },
  {
    "text": "profiling results you are seeing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=496"
  },
  {
    "text": "This year, we are introducing new ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=500"
  },
  {
    "text": "for you to profile your app with more consistent results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=502"
  },
  {
    "text": "We have added ways for you to see and change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=506"
  },
  {
    "text": "the GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=509"
  },
  {
    "text": "across our whole suite of Metal tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=510"
  },
  {
    "text": "starting with Instruments and Metal system trace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=513"
  },
  {
    "text": "for live performance recordings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=516"
  },
  {
    "text": "continuing with Metal Debugger, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=519"
  },
  {
    "text": "for profiling GPU traces, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=521"
  },
  {
    "text": "and finally, Device conditions in Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=523"
  },
  {
    "text": "for general use cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=526"
  },
  {
    "text": "First, let’s talk about Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=529"
  },
  {
    "text": "This year, we’ve added a track for GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=533"
  },
  {
    "text": "to the Metal system trace. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=536"
  },
  {
    "text": "Use it in conjunction with the other tracks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=539"
  },
  {
    "text": "to correlate your app’s performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=542"
  },
  {
    "text": "with the device’s performance state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=543"
  },
  {
    "text": "Keep in mind, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=546"
  },
  {
    "text": "that being able to see the performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=547"
  },
  {
    "text": "is just part of the equation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=549"
  },
  {
    "text": "In order to get profiling results ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=552"
  },
  {
    "text": "that are consistent and reproducible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=554"
  },
  {
    "text": "you also need a way to set ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=556"
  },
  {
    "text": "a GPU performance state on a device.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=558"
  },
  {
    "text": "New this year is the ability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=561"
  },
  {
    "text": "to induce a specific GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=563"
  },
  {
    "text": "when you are recording a trace in Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=566"
  },
  {
    "text": "Simply go to Recording Options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=569"
  },
  {
    "text": "and choose a performance state before the recording starts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=571"
  },
  {
    "text": "After that, you can record the performance trace as usual. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=575"
  },
  {
    "text": "Instruments will induce the state you chose ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=580"
  },
  {
    "text": "for the duration of the trace, if the device can sustain it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=582"
  },
  {
    "text": "Sometimes, you might need to check ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=585"
  },
  {
    "text": "if an existing Instruments trace had a GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=588"
  },
  {
    "text": "induced during recording. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=591"
  },
  {
    "text": "You can find this information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=594"
  },
  {
    "text": "in the “Recording Settings” section ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=595"
  },
  {
    "text": "in the information popover.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=597"
  },
  {
    "text": "And now, you know how to view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=601"
  },
  {
    "text": "and induce the GPU performance state from Instruments. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=603"
  },
  {
    "text": "The second way to leverage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=606"
  },
  {
    "text": "a consistent GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=608"
  },
  {
    "text": "is by using Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=610"
  },
  {
    "text": "By default, when you capture a GPU trace of your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=612"
  },
  {
    "text": "Xcode will profile the trace for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=617"
  },
  {
    "text": "And it will do so using the same performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=620"
  },
  {
    "text": "the device was in at the time of the capture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=622"
  },
  {
    "text": "That state may have fluctuated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=626"
  },
  {
    "text": "depending on the factors we mentioned previously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=628"
  },
  {
    "text": "If, instead, you would like to select ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=631"
  },
  {
    "text": "a certain performance state yourself, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=632"
  },
  {
    "text": "use the Stopwatch button in the debug bar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=635"
  },
  {
    "text": "After you make a selection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=639"
  },
  {
    "text": "Metal Debugger will profile your GPU trace again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=640"
  },
  {
    "text": "After it’s done, the button is highlighted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=644"
  },
  {
    "text": "to reflect that the consistent performance state was achieved. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=647"
  },
  {
    "text": "Also, “Performance” section on the summary page ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=651"
  },
  {
    "text": "now shows new performance data at a glance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=654"
  },
  {
    "text": "as well as the selected performance state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=657"
  },
  {
    "text": "These two approaches are tied to the suite of Metal tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=660"
  },
  {
    "text": "But sometimes, you might want to induce ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=664"
  },
  {
    "text": "a consistent performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=666"
  },
  {
    "text": "outside of profiling workflows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=668"
  },
  {
    "text": "The third way to set a GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=670"
  },
  {
    "text": "is through Device conditions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=673"
  },
  {
    "text": "If you want to test how your app performs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=677"
  },
  {
    "text": "under different GPU performance states, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=679"
  },
  {
    "text": "this is the option for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=682"
  },
  {
    "text": "In Xcode 13, we have added ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=684"
  },
  {
    "text": "the GPU performance state device condition. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=687"
  },
  {
    "text": "It forces the operating system ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=690"
  },
  {
    "text": "to use the specified state on a device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=692"
  },
  {
    "text": "as long as it can sustain it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=695"
  },
  {
    "text": "and it stays connected to the Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=696"
  },
  {
    "text": "You can add this condition from Xcode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=699"
  },
  {
    "text": "if you go to Window, Devices and Simulators, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=701"
  },
  {
    "text": "choose your device there, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=705"
  },
  {
    "text": "then scroll to the “Device Conditions” section, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=707"
  },
  {
    "text": "and add a “GPU Performance State” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=709"
  },
  {
    "text": "condition with the desired level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=711"
  },
  {
    "text": "Press Start when you want to apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=714"
  },
  {
    "text": "the GPU performance state change on the device. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=716"
  },
  {
    "text": "Then, when you are done, press Stop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=719"
  },
  {
    "text": "These new ways to see and change GPU performance state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=723"
  },
  {
    "text": "right from our tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=726"
  },
  {
    "text": "should help you with profiling and testing your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=727"
  },
  {
    "text": "And I think you are going to love ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=731"
  },
  {
    "text": "our latest additions and improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=733"
  },
  {
    "text": "to profiling workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=734"
  },
  {
    "text": "and I hope they will help you make your apps even better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=736"
  },
  {
    "text": "Now, let’s talk about some other improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=740"
  },
  {
    "text": "we are bringing to Metal Debugger this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=743"
  },
  {
    "text": "First, I’ll tell you about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=746"
  },
  {
    "text": "improvements to shader validation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=747"
  },
  {
    "text": "Then, I’ll show you precise capture controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=751"
  },
  {
    "text": "And after that, I’ll give you a look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=754"
  },
  {
    "text": "at the new pipeline state workflows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=756"
  },
  {
    "text": "Finally, I want to introduce two new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=760"
  },
  {
    "text": "related to shader debugging and profiling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=762"
  },
  {
    "text": "separate debug information and selective shader debugging.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=765"
  },
  {
    "text": "Last year, in Xcode 12, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=770"
  },
  {
    "text": "we introduced shader validation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=772"
  },
  {
    "text": "which helps you diagnose runtime errors on the GPU, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=774"
  },
  {
    "text": "like out of bounds access, and others.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=777"
  },
  {
    "text": "Remember that if shader validation is enabled, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=782"
  },
  {
    "text": "and an encoder raises a validation error, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=785"
  },
  {
    "text": "you will get a runtime issue in the issue navigator, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=788"
  },
  {
    "text": "showing both the CPU and GPU backtraces ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=791"
  },
  {
    "text": "for the call that faulted.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=794"
  },
  {
    "text": "We already have a session that covers this in a greater detail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=799"
  },
  {
    "text": "so to learn more about using shader validation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=803"
  },
  {
    "text": "check out last year’s talk, called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=806"
  },
  {
    "text": "“Debugging GPU-side errors in Metal.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=808"
  },
  {
    "text": "This year, we are extending shader validation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=812"
  },
  {
    "text": "to support more use cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=814"
  },
  {
    "text": "making it available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=817"
  },
  {
    "text": "when you are using indirect command buffers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=818"
  },
  {
    "text": "dynamic libraries, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=821"
  },
  {
    "text": "and function pointers and tables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=823"
  },
  {
    "text": "This should allow you to use shader validation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=826"
  },
  {
    "text": "more extensively throughout your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=829"
  },
  {
    "text": "during its development. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=831"
  },
  {
    "text": "Next, I wanna show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=833"
  },
  {
    "text": "our new precise capture controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=835"
  },
  {
    "text": "But first, take a look at the Capture button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=838"
  },
  {
    "text": "which now looks like the Metal logo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=841"
  },
  {
    "text": "It’s located on the debug bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=844"
  },
  {
    "text": "at the bottom of the Xcode window. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=846"
  },
  {
    "text": "When you click it, a new menu appears. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=849"
  },
  {
    "text": "This menu lets you choose a scope for your capture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=852"
  },
  {
    "text": "The default is to capture one frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=856"
  },
  {
    "text": "but you can specify how many you want to capture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=858"
  },
  {
    "text": "up to five. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=861"
  },
  {
    "text": "You can also choose to capture a number of command buffers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=863"
  },
  {
    "text": "that have the same parent device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=866"
  },
  {
    "text": "or a command queue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=869"
  },
  {
    "text": "as well as those that present a certain Metal layer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=871"
  },
  {
    "text": "and even custom scopes that you can define ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=875"
  },
  {
    "text": "in your app’s code using MTLCaptureScope API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=877"
  },
  {
    "text": "These new controls give you incredible power ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=882"
  },
  {
    "text": "out-of-the-box in deciding how and when ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=885"
  },
  {
    "text": "your Metal calls are captured.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=887"
  },
  {
    "text": "Next, let’s talk about Metal libraries and pipeline states. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=891"
  },
  {
    "text": "These are the essential building blocks of your Metal app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=896"
  },
  {
    "text": "And in Xcode 13, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=900"
  },
  {
    "text": "we’ve made it easier than ever ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=902"
  },
  {
    "text": "to examine all the pipeline states and libraries ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=903"
  },
  {
    "text": "your app is using. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=906"
  },
  {
    "text": "Now, let’s see how it looks in practice.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=907"
  },
  {
    "text": "Here, I’ve captured a GPU trace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=911"
  },
  {
    "text": "from a ModernRenderer sample app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=913"
  },
  {
    "text": "I wanted to see how the GBuffer pipeline state works, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=916"
  },
  {
    "text": "so I selected this draw call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=920"
  },
  {
    "text": "If I look in bound resources, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=923"
  },
  {
    "text": "I can now see the pipeline state which was used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=925"
  },
  {
    "text": "Opening it takes me to the Pipeline State Viewer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=928"
  },
  {
    "text": "From here, I can examine the functions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=932"
  },
  {
    "text": "and see other properties the pipeline state was created with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=935"
  },
  {
    "text": "Further, from the viewer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=939"
  },
  {
    "text": "I can either check out the performance data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=941"
  },
  {
    "text": "associated with the state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=943"
  },
  {
    "text": "or I can go to Memory Viewer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=944"
  },
  {
    "text": "and reveal the state there. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=946"
  },
  {
    "text": "In Xcode 13, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=949"
  },
  {
    "text": "Memory Viewer now shows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=950"
  },
  {
    "text": "how much memory the pipeline states ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=952"
  },
  {
    "text": "are taking up in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=953"
  },
  {
    "text": "These are just some of the additions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=957"
  },
  {
    "text": "that make it easier to inspect pipeline states ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=959"
  },
  {
    "text": "across the Metal Debugger ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=961"
  },
  {
    "text": "when you’re looking at GPU traces of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=963"
  },
  {
    "text": "Next, let’s talk about shader debugging and profiling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=966"
  },
  {
    "text": "in Metal Debugger. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=969"
  },
  {
    "text": "Right now, if you wanna use these features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=971"
  },
  {
    "text": "you have two choices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=974"
  },
  {
    "text": "First option is compiling your libraries ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=976"
  },
  {
    "text": "from source code when the app is running.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=978"
  },
  {
    "text": "A second, better option ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=981"
  },
  {
    "text": "is building Metallib files with sources embedded offline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=983"
  },
  {
    "text": "and then loading those at runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=987"
  },
  {
    "text": "But then, App Store rules ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=990"
  },
  {
    "text": "don’t allow you to publish your apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=992"
  },
  {
    "text": "with these debug Metallibs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=994"
  },
  {
    "text": "All of that means ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=997"
  },
  {
    "text": "that if you compile your libraries offline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=998"
  },
  {
    "text": "and you want to be able to debug your shaders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1000"
  },
  {
    "text": "you have to compile them twice: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1003"
  },
  {
    "text": "once with sources embedded, for use during development, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1006"
  },
  {
    "text": "and once without sources, for distribution. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1010"
  },
  {
    "text": "This year, we are changing that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1014"
  },
  {
    "text": "You can now generate a separate file with sources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1017"
  },
  {
    "text": "and other debugging information while compiling a Metallib. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1019"
  },
  {
    "text": "These files have a Metallibsym extension, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1023"
  },
  {
    "text": "and they allow you to debug and profile shaders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1026"
  },
  {
    "text": "without embedding additional information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1029"
  },
  {
    "text": "in the libraries themselves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1031"
  },
  {
    "text": "The most important benefit of having them separately, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1034"
  },
  {
    "text": "is that now you don’t need to have two versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1037"
  },
  {
    "text": "of the same Metallib. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1039"
  },
  {
    "text": "Another benefit is that with these Metallibsym files, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1041"
  },
  {
    "text": "you will now be able to debug shaders ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1045"
  },
  {
    "text": "even in release versions of your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1047"
  },
  {
    "text": "without having to compromise your shader sources.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1049"
  },
  {
    "text": "I’ll show you an example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1054"
  },
  {
    "text": "of how to compile a shader source file ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1055"
  },
  {
    "text": "into a Metallib with Metallibsym file alongside it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1058"
  },
  {
    "text": "I’ll start with xcrun terminal command ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1062"
  },
  {
    "text": "that compiles a Metallib as normal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1065"
  },
  {
    "text": "To generate a Metallibsym file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1068"
  },
  {
    "text": "I simply need to add the flag ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1070"
  },
  {
    "text": "“record-sources” with the “flat” option, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1072"
  },
  {
    "text": "and then run the compiler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1075"
  },
  {
    "text": "Now, when I try to debug a shader ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1078"
  },
  {
    "text": "that was compiled ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1080"
  },
  {
    "text": "with a separate debug information file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1081"
  },
  {
    "text": "I’ll be prompted to import it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1083"
  },
  {
    "text": "Clicking on Import Sources opens up a dialog ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1087"
  },
  {
    "text": "that lists all the libraries ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1090"
  },
  {
    "text": "and whether they have their source files imported.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1091"
  },
  {
    "text": "From here, I can import any Metallibsym files, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1095"
  },
  {
    "text": "and once imported, the libraries and their sources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1099"
  },
  {
    "text": "will be matched automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1102"
  },
  {
    "text": "When I’m done importing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1105"
  },
  {
    "text": "I can close the dialog, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1107"
  },
  {
    "text": "and now I can see the sources for the shader and debug it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1109"
  },
  {
    "text": "There is one last debugging improvement I wanna show you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1114"
  },
  {
    "text": "It’s called “selective shader debugging.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1118"
  },
  {
    "text": "If your app uses large shaders, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1120"
  },
  {
    "text": "you might have noticed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1123"
  },
  {
    "text": "that the shader debugging may take a while to start. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1124"
  },
  {
    "text": "To help in such cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1128"
  },
  {
    "text": "this year, we are bringing selective shader debugging. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1129"
  },
  {
    "text": "It helps you narrow down the debugging scopes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1133"
  },
  {
    "text": "so you can debug your shaders quicker. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1135"
  },
  {
    "text": "Let’s see it in action with one of such large shaders.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1139"
  },
  {
    "text": "I would like to debug this GPU ASTCDecoder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1143"
  },
  {
    "text": "I know that if I tried to debug this whole kernel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1148"
  },
  {
    "text": "Shader Debugger would take a long time to start. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1151"
  },
  {
    "text": "I wouldn’t want to wait that long, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1154"
  },
  {
    "text": "so instead, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1156"
  },
  {
    "text": "I can narrow down the debugging scope ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1157"
  },
  {
    "text": "to just this function, decodeIntegerSequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1159"
  },
  {
    "text": "To do so, I can right-click it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1163"
  },
  {
    "text": "and select Debug Functions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1166"
  },
  {
    "text": "This opens “functions to debug” menu, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1168"
  },
  {
    "text": "with the function scope already selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1170"
  },
  {
    "text": "Now, the debugger will start almost instantly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1173"
  },
  {
    "text": "Selective shader debugging ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1180"
  },
  {
    "text": "is a great way to pinpoint bugs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1181"
  },
  {
    "text": "in huge shaders quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1183"
  },
  {
    "text": "These are all the Metal tools improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1185"
  },
  {
    "text": "I wanted to show you today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1188"
  },
  {
    "text": "And now, Amanda will tell you about advances we’ve made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1190"
  },
  {
    "text": "in texture compression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1193"
  },
  {
    "text": "Amanda? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1194"
  },
  {
    "text": "Thanks, Egor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1196"
  },
  {
    "text": "I’m going to walk you through the updates we’ve made this year ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1197"
  },
  {
    "text": "to texture compression tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1200"
  },
  {
    "text": "Before I dive into the tools, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1202"
  },
  {
    "text": "I’m going to briefly discuss ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1204"
  },
  {
    "text": "the basics of texture compression on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1205"
  },
  {
    "text": "Texture compression, in this case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1208"
  },
  {
    "text": "is fixed-rate, lossy compression of texture data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1210"
  },
  {
    "text": "This is primarily intended for offline compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1213"
  },
  {
    "text": "of static texture data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1215"
  },
  {
    "text": "such as decals or normal maps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1217"
  },
  {
    "text": "While you can compress dynamic texture data at runtime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1219"
  },
  {
    "text": "that’s not something I’m covering today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1222"
  },
  {
    "text": "Most texture compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1224"
  },
  {
    "text": "works by splitting a texture into blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1226"
  },
  {
    "text": "and compressing each block as a pair of colors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1228"
  },
  {
    "text": "This pair defines a localized palette, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1231"
  },
  {
    "text": "including other colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1232"
  },
  {
    "text": "interpolated from these endpoints, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1233"
  },
  {
    "text": "and a per-pixel index that selects from this palette. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1235"
  },
  {
    "text": "Each format has different strengths ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1238"
  },
  {
    "text": "that suit different kinds of texture data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1240"
  },
  {
    "text": "Apple GPUs also support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1243"
  },
  {
    "text": "lossless frame-buffer compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1244"
  },
  {
    "text": "starting in our A12 devices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1246"
  },
  {
    "text": "and is great for optimizing bandwidth. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1248"
  },
  {
    "text": "Check out last year’s session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1250"
  },
  {
    "text": "“Optimize Metal apps and games with GPU counters” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1251"
  },
  {
    "text": "to learn more about measuring the memory bandwidth ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1254"
  },
  {
    "text": "the GPU is using for your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1256"
  },
  {
    "text": "Another option is to perform lossless compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1258"
  },
  {
    "text": "of texture files ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1261"
  },
  {
    "text": "on top of the GPU texture compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1262"
  },
  {
    "text": "I’m covering in this presentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1264"
  },
  {
    "text": "This can give you additional reductions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1267"
  },
  {
    "text": "in the size of your app download. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1268"
  },
  {
    "text": "Now that I’ve defined texture compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1271"
  },
  {
    "text": "for this talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1273"
  },
  {
    "text": "I’ll talk about the benefits ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1274"
  },
  {
    "text": "texture compression can bring to your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1275"
  },
  {
    "text": "Texture compression is an important step ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1277"
  },
  {
    "text": "in the development of your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1279"
  },
  {
    "text": "In general, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1281"
  },
  {
    "text": "most of the memory footprint of games ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1282"
  },
  {
    "text": "consists of textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1284"
  },
  {
    "text": "Using texture compression allows you to load more textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1286"
  },
  {
    "text": "into memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1289"
  },
  {
    "text": "and use more detailed textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1290"
  },
  {
    "text": "to create more visually compelling games. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1291"
  },
  {
    "text": "Compression may also allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1294"
  },
  {
    "text": "to reduce the size and memory footprint of your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1296"
  },
  {
    "text": "Now that I’ve covered the basics, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1299"
  },
  {
    "text": "I’ll discuss the current state of texture compression tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1301"
  },
  {
    "text": "on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1303"
  },
  {
    "text": "The existing TextureTool in the iOS SDK ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1305"
  },
  {
    "text": "has a relatively simple pipeline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1308"
  },
  {
    "text": "TextureTool reads the input image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1310"
  },
  {
    "text": "generates mipmaps if desired, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1312"
  },
  {
    "text": "compresses the texture, block by block, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1314"
  },
  {
    "text": "then writes the results to a new output file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1316"
  },
  {
    "text": "But as graphics algorithms increase in complexity, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1319"
  },
  {
    "text": "textures need more advanced processing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1322"
  },
  {
    "text": "The core of these processes is performing operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1325"
  },
  {
    "text": "in the correct color space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1327"
  },
  {
    "text": "while minimizing rounding from transformations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1329"
  },
  {
    "text": "between numeric precisions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1331"
  },
  {
    "text": "Understanding this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1334"
  },
  {
    "text": "we’ve designed a new compression tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1335"
  },
  {
    "text": "called TextureConverter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1337"
  },
  {
    "text": "to handle the necessary increase ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1338"
  },
  {
    "text": "in texture processing sophistication, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1340"
  },
  {
    "text": "and give you access to a host of new options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1342"
  },
  {
    "text": "Let’s take a closer look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1344"
  },
  {
    "text": "at how we’ve revamped ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1346"
  },
  {
    "text": "the texture processing pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1347"
  },
  {
    "text": "on Apple platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1348"
  },
  {
    "text": "The texture processing pipeline has been rebuilt ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1351"
  },
  {
    "text": "from the ground up to give you access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1353"
  },
  {
    "text": "to a fully-featured texture processing pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1355"
  },
  {
    "text": "with TextureConverter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1357"
  },
  {
    "text": "TextureConverter leverages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1359"
  },
  {
    "text": "a set of industry-recognized compressors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1361"
  },
  {
    "text": "to support a wide range of compression formats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1363"
  },
  {
    "text": "and give you the option to tradeoff ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1365"
  },
  {
    "text": "between compression speed and image quality. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1367"
  },
  {
    "text": "You can specify which compressor to use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1370"
  },
  {
    "text": "or allow TextureConverter to select ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1372"
  },
  {
    "text": "based on the compression format, quality level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1374"
  },
  {
    "text": "and other options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1376"
  },
  {
    "text": "Each stage is now fully configurable by you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1378"
  },
  {
    "text": "and texture processing is gamma-aware. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1381"
  },
  {
    "text": "To support integration into all your content pipelines, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1384"
  },
  {
    "text": "TextureConverter is available for both macOS and Windows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1387"
  },
  {
    "text": "and is optimized for use with Apple Silicon.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1390"
  },
  {
    "text": "Let’s step through each stage of the expanded pipeline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1393"
  },
  {
    "text": "starting with gamma. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1396"
  },
  {
    "text": "Gamma correction is a nonlinear operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1397"
  },
  {
    "text": "to encode and decode luminance in images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1400"
  },
  {
    "text": "Textures can be encoded in many gamma spaces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1402"
  },
  {
    "text": "The best choice is dependent on the type of data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1405"
  },
  {
    "text": "that the texture represents. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1407"
  },
  {
    "text": "Most visual data, such as decals or light maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1409"
  },
  {
    "text": "do best when encoded in a non-linear space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1412"
  },
  {
    "text": "like sRGB. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1414"
  },
  {
    "text": "Non-visual data, like normal maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1416"
  },
  {
    "text": "should be encoded in linear space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1418"
  },
  {
    "text": "This choice gives you more accuracy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1421"
  },
  {
    "text": "in the dark areas where it’s needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1422"
  },
  {
    "text": "Non-visual data, like normal maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1425"
  },
  {
    "text": "should be encoded in linear space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1427"
  },
  {
    "text": "Compression should be performed in your target color space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1429"
  },
  {
    "text": "specified with the “gamma_in” and “gamma_out” options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1432"
  },
  {
    "text": "You can either input a float value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1435"
  },
  {
    "text": "for linear gamma space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1437"
  },
  {
    "text": "or use the string “sRGB” to specify that color space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1439"
  },
  {
    "text": "You also have the flexibility to use these options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1443"
  },
  {
    "text": "to convert to a different target space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1445"
  },
  {
    "text": "Other operations, such as mipmap generation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1448"
  },
  {
    "text": "should be performed in linear space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1451"
  },
  {
    "text": "I’ll walk through the linear space processing stages now.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1453"
  },
  {
    "text": "Now that the input has been converted to linear gamma space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1457"
  },
  {
    "text": "the linear space operations are performed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1460"
  },
  {
    "text": "before the input texture is converted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1462"
  },
  {
    "text": "to the specified target gamma space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1464"
  },
  {
    "text": "The three stages are physical transforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1466"
  },
  {
    "text": "mipmap generation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1469"
  },
  {
    "text": "and alpha handling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1470"
  },
  {
    "text": "and some of these have substages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1471"
  },
  {
    "text": "I’ll start with physical transforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1474"
  },
  {
    "text": "By defining the maximum size in any axis, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1476"
  },
  {
    "text": "you can downscale your image as you need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1479"
  },
  {
    "text": "for your top-level mipmap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1480"
  },
  {
    "text": "In this stage, you also have control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1483"
  },
  {
    "text": "over the resize filter and resize rounding mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1484"
  },
  {
    "text": "The resize filter options use different algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1488"
  },
  {
    "text": "to help you reduce blurriness of your mipmaps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1490"
  },
  {
    "text": "as they go down in dimension size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1492"
  },
  {
    "text": "Resize round mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1495"
  },
  {
    "text": "is used in conjunction with max_extent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1496"
  },
  {
    "text": "when resizing your image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1499"
  },
  {
    "text": "If max_extent is exceeded, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1501"
  },
  {
    "text": "the source image is resized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1503"
  },
  {
    "text": "by maintaining the original image’s aspect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1504"
  },
  {
    "text": "The specified round mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1507"
  },
  {
    "text": "will be used when finding the target dimensions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1508"
  },
  {
    "text": "If you’re unsure which resize filter or rounding mode to use, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1511"
  },
  {
    "text": "we’ve picked defaults that work well in most cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1515"
  },
  {
    "text": "And the flip options in this stage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1519"
  },
  {
    "text": "give you control over linear transformations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1521"
  },
  {
    "text": "on the X, Y, and Z axes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1523"
  },
  {
    "text": "After transforms is mipmap generation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1527"
  },
  {
    "text": "used in the majority of common texture processing situations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1529"
  },
  {
    "text": "Mipmaps are a precalculated sequences of images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1534"
  },
  {
    "text": "that reduce in resolution over the sequence, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1537"
  },
  {
    "text": "used to increase rendering speed and reduce aliasing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1539"
  },
  {
    "text": "The height and width of each level ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1543"
  },
  {
    "text": "is a power of two smaller than the previous level.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1544"
  },
  {
    "text": "When customizing mipmap generation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1548"
  },
  {
    "text": "specify the maximum number you want, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1551"
  },
  {
    "text": "and which mip filter to use. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1553"
  },
  {
    "text": "TextureConverter defaults to Kaiser filtering, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1555"
  },
  {
    "text": "with options for “box” and “triangle” filtering.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1558"
  },
  {
    "text": "The last stage in linear space processing is alpha handling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1563"
  },
  {
    "text": "If alpha to coverage is enabled, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1568"
  },
  {
    "text": "this is applied first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1571"
  },
  {
    "text": "using the specified alpha reference value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1572"
  },
  {
    "text": "Alpha to coverage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1575"
  },
  {
    "text": "replaces alpha blending with a coverage mask. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1576"
  },
  {
    "text": "When antialiasing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1578"
  },
  {
    "text": "or semitransparent textures are used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1580"
  },
  {
    "text": "this gives you order-independent transparency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1582"
  },
  {
    "text": "and is a particularly useful tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1584"
  },
  {
    "text": "for rendering dense greenery in your game. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1586"
  },
  {
    "text": "Afterwards, the option to discard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1589"
  },
  {
    "text": "preserve, or premultiply the alpha channel is presented. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1592"
  },
  {
    "text": "In premultiplied alpha, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1596"
  },
  {
    "text": "partly transparent pixels of your image ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1598"
  },
  {
    "text": "will be premultiplied with a matting color.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1600"
  },
  {
    "text": "At the end of the linear space processing stages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1604"
  },
  {
    "text": "we’re ready to move back to the target gamma space ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1606"
  },
  {
    "text": "and compress the processed mip levels.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1609"
  },
  {
    "text": "The last step in texture processing is the compression. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1612"
  },
  {
    "text": "The compression stage can be divided ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1615"
  },
  {
    "text": "into two substages, channel mapping and encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1617"
  },
  {
    "text": "Channel mapping is a technique ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1621"
  },
  {
    "text": "to optimize general purpose texture compression algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1623"
  },
  {
    "text": "for particular data types.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1626"
  },
  {
    "text": "Specifying a channel mapping in TextureConverter is optional. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1628"
  },
  {
    "text": "If you do want to use it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1631"
  },
  {
    "text": "TextureConverter currently supports ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1633"
  },
  {
    "text": "two modes of channel mapping, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1635"
  },
  {
    "text": "RGBM encoding and normal map encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1636"
  },
  {
    "text": "I’m going to cover both of these formats in more depth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1639"
  },
  {
    "text": "starting with RGBM encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1642"
  },
  {
    "text": "RGBM encoding is a technique to compress HDR data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1644"
  },
  {
    "text": "in LDR formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1647"
  },
  {
    "text": "by storing a multiplier in the alpha channel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1649"
  },
  {
    "text": "and scaling the RGB channels by this multiplier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1651"
  },
  {
    "text": "Here’s an example HDR image of a classroom. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1655"
  },
  {
    "text": "And here’s the same classroom image again ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1658"
  },
  {
    "text": "with the multiplier stored in the alpha channel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1660"
  },
  {
    "text": "visible in grayscale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1662"
  },
  {
    "text": "I’ll show you how to calculate the multiplier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1664"
  },
  {
    "text": "to encode to RGBM with a code example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1666"
  },
  {
    "text": "EncodeRGBM is a simplified pseudocode function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1669"
  },
  {
    "text": "that I’ll walk you through to help you understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1672"
  },
  {
    "text": "the mechanics of encoding to RGBM. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1674"
  },
  {
    "text": "This snippet includes use of RGBM_Range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1677"
  },
  {
    "text": "the brand-new parameter for setting the range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1680"
  },
  {
    "text": "of RGBM and defaults to 6.0. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1682"
  },
  {
    "text": "In order to calculate the RGBM alpha value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1685"
  },
  {
    "text": "the multiplier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1688"
  },
  {
    "text": "first, I’ll determine the maximum ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1689"
  },
  {
    "text": "of the input texture’s red, green, and blue channels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1691"
  },
  {
    "text": "This is done with Metal’s max3 function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1695"
  },
  {
    "text": "Then this maximum is divided by RGBM_Range. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1698"
  },
  {
    "text": "In order to calculate the encoded RGBM’s ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1701"
  },
  {
    "text": "red, green, and blue channel values, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1704"
  },
  {
    "text": "first, the previously calculated multiplier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1706"
  },
  {
    "text": "is multiplied back by RGBM_Range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1709"
  },
  {
    "text": "which was used to scale the value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1712"
  },
  {
    "text": "for storage in the alpha channel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1713"
  },
  {
    "text": "Then, the input texture is divided ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1716"
  },
  {
    "text": "by the final multiplier value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1718"
  },
  {
    "text": "To decode RGBM in your shader, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1721"
  },
  {
    "text": "you multiply the sample’s RGB ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1723"
  },
  {
    "text": "by alpha and the fixed factor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1725"
  },
  {
    "text": "as I showed you in the encoding function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1726"
  },
  {
    "text": "I’ll walk through the DecodeRGBM code snippet ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1729"
  },
  {
    "text": "to show you how to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1731"
  },
  {
    "text": "The scaling factor is recalculated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1733"
  },
  {
    "text": "by multiplying the RGBM alpha channel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1735"
  },
  {
    "text": "where the multiplier is stored, by RGBM_Range. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1738"
  },
  {
    "text": "The original texture’s RGB ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1742"
  },
  {
    "text": "is calculated by multiplying the RGBM sample ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1744"
  },
  {
    "text": "by the calculated multiplier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1747"
  },
  {
    "text": "Now that I’ve introduced you to RGBM encoding, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1749"
  },
  {
    "text": "I’ll move on to normal map encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1751"
  },
  {
    "text": "In most cases, when referring to normal maps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1754"
  },
  {
    "text": "we’re specifically referring to object-space normal maps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1756"
  },
  {
    "text": "When encoding our normals in object-space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1760"
  },
  {
    "text": "we know that each normal is a unit vector, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1762"
  },
  {
    "text": "which has the benefit that it can be represented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1764"
  },
  {
    "text": "in two axes with the third axis trivially derivable at runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1766"
  },
  {
    "text": "This allows us to remap these two channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1771"
  },
  {
    "text": "to best take advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1773"
  },
  {
    "text": "of texture compression algorithms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1775"
  },
  {
    "text": "and achieve superior compression quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1776"
  },
  {
    "text": "compared to compressing XYZ as RGB. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1779"
  },
  {
    "text": "How you remap channels varies depending ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1782"
  },
  {
    "text": "on the compression format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1784"
  },
  {
    "text": "I’ll walk through an example of encoding a normal with ASTC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1785"
  },
  {
    "text": "using this chart as a guide. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1789"
  },
  {
    "text": "When encoding with ASTC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1791"
  },
  {
    "text": "the red, green, and blue channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1793"
  },
  {
    "text": "are set to the X component, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1796"
  },
  {
    "text": "and the alpha channel is set to the Y component. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1797"
  },
  {
    "text": "The colors correspond to which channel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1800"
  },
  {
    "text": "the X and Y components will be reassigned back to ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1802"
  },
  {
    "text": "when sampling the encoded normal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1805"
  },
  {
    "text": "TextureConverter takes care of encoding remapping for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1807"
  },
  {
    "text": "by automatically remapping to your chosen format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1811"
  },
  {
    "text": "if you pass the normal map parameter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1813"
  },
  {
    "text": "When sampling normal maps in your shader, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1816"
  },
  {
    "text": "it’s important to know the channel mapping. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1819"
  },
  {
    "text": "While the X component is read from the red or alpha channel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1821"
  },
  {
    "text": "the Y component comes from the alpha or green channel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1824"
  },
  {
    "text": "depending on the compression format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1827"
  },
  {
    "text": "Coming back to the ASTC example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1829"
  },
  {
    "text": "to sample a texture, the X component ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1832"
  },
  {
    "text": "is sampled from the red channel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1834"
  },
  {
    "text": "and the Y component is sampled from the alpha channel, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1835"
  },
  {
    "text": "the reverse of how the normal was encoded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1838"
  },
  {
    "text": "If you’re encoding to multiple formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1841"
  },
  {
    "text": "to achieve the best possible quality on any device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1843"
  },
  {
    "text": "then this mapping is something ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1846"
  },
  {
    "text": "that you’ll need to handle at runtime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1847"
  },
  {
    "text": "I’ll walk through an example of runtime normal sampling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1849"
  },
  {
    "text": "using Metal texture swizzles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1852"
  },
  {
    "text": "Encoding to multiple formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1855"
  },
  {
    "text": "could lead to needing multiple shader variants ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1856"
  },
  {
    "text": "if the different formats used different channel mappings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1859"
  },
  {
    "text": "To avoid this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1862"
  },
  {
    "text": "Metal allows you to apply custom swizzles to your texture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1863"
  },
  {
    "text": "Swizzles allow you to remap X and Y components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1867"
  },
  {
    "text": "to red and green channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1869"
  },
  {
    "text": "so your shaders can be compression format neutral. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1871"
  },
  {
    "text": "Here’s an example of remapping channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1874"
  },
  {
    "text": "to red and green ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1876"
  },
  {
    "text": "for a normal map compressed with ASTC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1877"
  },
  {
    "text": "as we saw in the diagram previously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1880"
  },
  {
    "text": "After the texture descriptor is initialized, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1882"
  },
  {
    "text": "the red channel is set to MTLTextureSwizzleRed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1885"
  },
  {
    "text": "and the green channel is set to MTLTextureSwizzleAlpha.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1888"
  },
  {
    "text": "Since this is a normal map, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1892"
  },
  {
    "text": "only two channels are needed for sampling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1893"
  },
  {
    "text": "Since the red and green channels are now assigned ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1896"
  },
  {
    "text": "to the X and Y components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1898"
  },
  {
    "text": "originally encoded to the red and alpha channels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1900"
  },
  {
    "text": "the blue and alpha channels are set to zero. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1903"
  },
  {
    "text": "Once that’s done, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1906"
  },
  {
    "text": "the last line is to assemble the final swizzle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1907"
  },
  {
    "text": "with the remapped channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1910"
  },
  {
    "text": "using MTLTextureSwizzleChannelsMake. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1911"
  },
  {
    "text": "Once the X and Y channels ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1915"
  },
  {
    "text": "are sampled in your shader, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1916"
  },
  {
    "text": "you can reconstruct the Z component. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1917"
  },
  {
    "text": "I’ll walk you through the ReconstructNormal function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1920"
  },
  {
    "text": "to show you how.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1922"
  },
  {
    "text": "First, the code rebiases the X and Y components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1926"
  },
  {
    "text": "into the correct range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1929"
  },
  {
    "text": "which is negative one to one for a normal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1930"
  },
  {
    "text": "The next step is to subtract the dot product ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1934"
  },
  {
    "text": "of the X and Y components from one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1936"
  },
  {
    "text": "to ensure the result of the dot product has the right sign. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1939"
  },
  {
    "text": "The saturate function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1943"
  },
  {
    "text": "is then used to clamp this result ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1944"
  },
  {
    "text": "within the range of zero to one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1946"
  },
  {
    "text": "The last step to calculate the Z component ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1949"
  },
  {
    "text": "is to take the square root of the output ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1951"
  },
  {
    "text": "of the saturate function.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1953"
  },
  {
    "text": "Now that I’ve explained ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1956"
  },
  {
    "text": "RGBM and normal map encoding options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1957"
  },
  {
    "text": "available for channel mapping, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1960"
  },
  {
    "text": "I’ll finish the discussion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1962"
  },
  {
    "text": "of the texture compression pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1963"
  },
  {
    "text": "with the final compression substate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1964"
  },
  {
    "text": "encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1966"
  },
  {
    "text": "All TextureConverter command lines ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1968"
  },
  {
    "text": "require specification of the target compression format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1969"
  },
  {
    "text": "with the compression_format argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1973"
  },
  {
    "text": "You can also specify which compressor to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1975"
  },
  {
    "text": "or let TextureConverter make the selection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1978"
  },
  {
    "text": "based on the compression format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1980"
  },
  {
    "text": "and other options you’ve selected. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1982"
  },
  {
    "text": "You may also select the compression quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1984"
  },
  {
    "text": "from these four options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1986"
  },
  {
    "text": "Note that there’s a tradeoff between compression speed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1988"
  },
  {
    "text": "and image quality, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1990"
  },
  {
    "text": "and you may wish to select a lower compression quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1991"
  },
  {
    "text": "while iterating on your game, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1994"
  },
  {
    "text": "but use the highest quality for released builds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=1996"
  },
  {
    "text": "Now, I’ll cover the texture compression formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2000"
  },
  {
    "text": "available for you to select.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2002"
  },
  {
    "text": "Here’s an overview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2005"
  },
  {
    "text": "of the texture compression format families ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2006"
  },
  {
    "text": "supported on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2008"
  },
  {
    "text": "iOS and Apple Silicon platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2010"
  },
  {
    "text": "support ASTC and PVRTC families, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2012"
  },
  {
    "text": "and all macOS platforms support BCn families. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2016"
  },
  {
    "text": "I’ll go over each of these format families in more detail, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2020"
  },
  {
    "text": "and give you some guidelines to help you choose ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2023"
  },
  {
    "text": "the best ones for your needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2025"
  },
  {
    "text": "I’ll start with BCn formats. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2026"
  },
  {
    "text": "BCn is a set of seven formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2029"
  },
  {
    "text": "that all operate using four-by-four blocks of pixels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2031"
  },
  {
    "text": "and either use four or eight bits per pixel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2034"
  },
  {
    "text": "Each compression format is ideal for a different data format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2038"
  },
  {
    "text": "BC1 and BC3 are commonly used for RGB and RGBA compression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2042"
  },
  {
    "text": "BC6 is ideal for HDR images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2047"
  },
  {
    "text": "and BC5, with its dual independent channels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2050"
  },
  {
    "text": "is ideal for normal map encoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2053"
  },
  {
    "text": "Next is ASTC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2056"
  },
  {
    "text": "a family of RGBA formats in LDR, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2058"
  },
  {
    "text": "sRGB, and HDR color spaces. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2061"
  },
  {
    "text": "The ASTC family of formats allows for the highest quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2065"
  },
  {
    "text": "at all sizes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2068"
  },
  {
    "text": "and is therefore more generally recommended over PVRTC. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2069"
  },
  {
    "text": "There’s a range of bits per pixel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2073"
  },
  {
    "text": "versus quality for each format.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2074"
  },
  {
    "text": "With ASTC, the byte size of each block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2077"
  },
  {
    "text": "is the same regardless of the format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2080"
  },
  {
    "text": "while the number of texels it represents varies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2082"
  },
  {
    "text": "This gives you a continuum ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2085"
  },
  {
    "text": "between the highest quality compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2087"
  },
  {
    "text": "but lowest compression rate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2088"
  },
  {
    "text": "at the four-by-four block size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2090"
  },
  {
    "text": "versus the lowest compression quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2092"
  },
  {
    "text": "but highest compression rate at the 12-by-12 block size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2094"
  },
  {
    "text": "The LDR, sRGB, and HDR variants ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2098"
  },
  {
    "text": "describe the color range for compressed ASTC textures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2101"
  },
  {
    "text": "LDR and sRGB are both in the zero-to-one range, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2105"
  },
  {
    "text": "in either linear or sRGB space, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2109"
  },
  {
    "text": "while the HDR variant ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2111"
  },
  {
    "text": "is for data outside of the zero-to-one range.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2113"
  },
  {
    "text": "Lastly, PVRTC formats are available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2117"
  },
  {
    "text": "in RGB and RGBA in 2-bit or 4-bit mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2119"
  },
  {
    "text": "A data block in this format always occupies eight bytes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2124"
  },
  {
    "text": "so in 2-bit mode there’ll be one block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2127"
  },
  {
    "text": "for every eight-by-four pixels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2129"
  },
  {
    "text": "and in 4-bit mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2131"
  },
  {
    "text": "there’s one block for each four-by-four pixel.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2132"
  },
  {
    "text": "Now that I’ve introduced the supported format families, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2136"
  },
  {
    "text": "I’m going to give some recommendations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2139"
  },
  {
    "text": "for choosing formats for your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2141"
  },
  {
    "text": "On iOS devices, you should always be using ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2143"
  },
  {
    "text": "ASTC compression by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2146"
  },
  {
    "text": "with the addition of PVRTC compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2148"
  },
  {
    "text": "and per-device thinning ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2151"
  },
  {
    "text": "only if you’re supporting A7 GPUs and earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2152"
  },
  {
    "text": "If you have any HDR textures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2155"
  },
  {
    "text": "you can take advantage of ASTC HDR on A13 and later GPUs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2158"
  },
  {
    "text": "For macOS, BCn is available across the board. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2164"
  },
  {
    "text": "On Apple Silicon Macs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2168"
  },
  {
    "text": "you also have the option of using ASTC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2169"
  },
  {
    "text": "and you should consider this option ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2172"
  },
  {
    "text": "if you’re also targeting iOS devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2173"
  },
  {
    "text": "While PVRTC is available on Apple Silicon, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2176"
  },
  {
    "text": "we don’t recommend this option, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2179"
  },
  {
    "text": "and it’s intended only for iOS legacy support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2181"
  },
  {
    "text": "Since there are a lot of different formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2184"
  },
  {
    "text": "within each compression format family to choose between, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2186"
  },
  {
    "text": "the guideline for selecting the most effective ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2189"
  },
  {
    "text": "texture compression formats for your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2191"
  },
  {
    "text": "is to select per-texture and per-target when possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2193"
  },
  {
    "text": "Unless all of your textures are RGB or RGBA data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2196"
  },
  {
    "text": "you should select the compression format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2200"
  },
  {
    "text": "based on the type of data you’re compressing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2202"
  },
  {
    "text": "like choosing a format that allows compression ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2204"
  },
  {
    "text": "as two independent channels for normal data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2206"
  },
  {
    "text": "When compressing to an ASTC format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2209"
  },
  {
    "text": "you may want to select a subset of the formats. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2212"
  },
  {
    "text": "Consider bucketing textures ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2214"
  },
  {
    "text": "by those that require the highest quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2216"
  },
  {
    "text": "versus those that are acceptable at higher compression rates.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2218"
  },
  {
    "text": "Now, let’s review what we’ve covered.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2222"
  },
  {
    "text": "We’ve completely remade ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2224"
  },
  {
    "text": "the texture processing pipeline from TextureTool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2226"
  },
  {
    "text": "to give you complete control over every stage of the pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2228"
  },
  {
    "text": "with our new TextureConverter tool. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2231"
  },
  {
    "text": "I’ve walked through each stage of this new pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2233"
  },
  {
    "text": "and explored all of the options available for you to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2236"
  },
  {
    "text": "at each stage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2238"
  },
  {
    "text": "and introduced you to the channel mapping ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2240"
  },
  {
    "text": "and texture compression format families ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2241"
  },
  {
    "text": "supported on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2243"
  },
  {
    "text": "We want to make it as easy as possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2245"
  },
  {
    "text": "to update your workflows from using TextureTool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2247"
  },
  {
    "text": "to TextureConverter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2249"
  },
  {
    "text": "so we’ve added a compatibility mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2251"
  },
  {
    "text": "to help you switch over your command lines. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2253"
  },
  {
    "text": "Whether using TextureTool compatibility mode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2255"
  },
  {
    "text": "or calling TextureConverter with native options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2258"
  },
  {
    "text": "invoke with xcrun TextureConverter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2260"
  },
  {
    "text": "Here’s an example command line of TextureConverter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2264"
  },
  {
    "text": "being called with TextureTool options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2266"
  },
  {
    "text": "TextureConverter will translate the options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2269"
  },
  {
    "text": "to native TextureConverter options, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2272"
  },
  {
    "text": "do the compression, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2274"
  },
  {
    "text": "and then tell you what the new native options are, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2275"
  },
  {
    "text": "so that you can update your build scripts easily.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2277"
  },
  {
    "text": "That was an introduction to TextureConverter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2281"
  },
  {
    "text": "Here’s how to get it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2283"
  },
  {
    "text": "TextureConverter ships as a part of Xcode 13 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2284"
  },
  {
    "text": "and is available to use in seed 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2288"
  },
  {
    "text": "On Windows, TextureConverter ships ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2290"
  },
  {
    "text": "as a part of the Metal Developer Tools for Windows 2.0 package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2292"
  },
  {
    "text": "available from developer.apple.com. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2296"
  },
  {
    "text": "Seed 1 is available now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2299"
  },
  {
    "text": "Be aware that in Windows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2301"
  },
  {
    "text": "there’s no support for compressing to PVRTC formats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2303"
  },
  {
    "text": "as PVRTC is available in macOS ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2306"
  },
  {
    "text": "for supporting legacy iOS platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2308"
  },
  {
    "text": "Another important part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2312"
  },
  {
    "text": "of the Metal Developer Tools for Windows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2313"
  },
  {
    "text": "is the Metal Compiler for Windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2315"
  },
  {
    "text": "The Metal Compiler for Windows was introduced last year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2317"
  },
  {
    "text": "with support for Metal Shading Language version 2.3. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2320"
  },
  {
    "text": "Updates throughout the year ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2324"
  },
  {
    "text": "mirrored the updates to the Metal compiler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2325"
  },
  {
    "text": "shipped in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2327"
  },
  {
    "text": "The latest release version is 1.2, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2328"
  },
  {
    "text": "which includes support for Metal Shading Language ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2331"
  },
  {
    "text": "on Apple Silicon Macs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2333"
  },
  {
    "text": "Seed 1 of version 2.0 is now available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2335"
  },
  {
    "text": "with support for all of the great new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2338"
  },
  {
    "text": "in Metal Shading Language 2.4.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2340"
  },
  {
    "text": "Here’s a summary of everything we’ve covered today: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2345"
  },
  {
    "text": "Egor discussed support for more Metal features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2347"
  },
  {
    "text": "like ray tracing and function pointers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2350"
  },
  {
    "text": "He introduced brand-new profiling workflows, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2352"
  },
  {
    "text": "like GPU Timeline and consistent GPU performance state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2355"
  },
  {
    "text": "to help you get the most out of the GPUs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2358"
  },
  {
    "text": "across all Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2360"
  },
  {
    "text": "And he demonstrated improvements to debugging workflows ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2363"
  },
  {
    "text": "you’re already familiar with to give you more support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2365"
  },
  {
    "text": "for shader validation and precise capture controls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2368"
  },
  {
    "text": "And I introduced you to TextureConverter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2371"
  },
  {
    "text": "a new tool to help you take full advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2374"
  },
  {
    "text": "of the texture processing pipeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2376"
  },
  {
    "text": "and all of the supported texture compression formats ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2378"
  },
  {
    "text": "available on Apple platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2380"
  },
  {
    "text": "Thanks, and have a great rest of WWDC 2021. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2383"
  },
  {
    "text": "[music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10157/?time=2386"
  }
]