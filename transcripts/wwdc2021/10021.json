[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=2"
  },
  {
    "text": "Hi, I'm Jacob, and welcome ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=9"
  },
  {
    "text": "to \"Add Rich Graphics to Your SwiftUI App.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=11"
  },
  {
    "text": "I'm working on an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=14"
  },
  {
    "text": "to build gradients with a few of my colleagues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=15"
  },
  {
    "text": "This year, colors are the hot thing on our team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=18"
  },
  {
    "text": "Most of the implementation is already done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=21"
  },
  {
    "text": "Now I just need to finish it by adding some rich graphics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=24"
  },
  {
    "text": "As we customize the app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=27"
  },
  {
    "text": "we're going to see a few different areas: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=28"
  },
  {
    "text": "working with the safe area, including customizing it; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=30"
  },
  {
    "text": "new foreground style support; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=34"
  },
  {
    "text": "a rich new set of materials; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=36"
  },
  {
    "text": "and drawing with Canvas, a powerful new view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=39"
  },
  {
    "text": "So let's get started. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=42"
  },
  {
    "text": "I'll show you what's in the app so far. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=44"
  },
  {
    "text": "We have a library of gradients, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=47"
  },
  {
    "text": "and I can view those gradients. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=49"
  },
  {
    "text": "There's something about this one I really like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=51"
  },
  {
    "text": "I just can't put my finger on it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=53"
  },
  {
    "text": "I can also edit a gradient... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=55"
  },
  {
    "text": "which lets me change the color stops.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=58"
  },
  {
    "text": "And I can add a new gradient.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=66"
  },
  {
    "text": "I can also use these gradients ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=70"
  },
  {
    "text": "in some visualizers... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=72"
  },
  {
    "text": "But one step at a time. We'll look at those a bit later.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=74"
  },
  {
    "text": "For now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=78"
  },
  {
    "text": "let's focus on this gradient detail view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=79"
  },
  {
    "text": "It's functional, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=82"
  },
  {
    "text": "but our actual content is pretty small ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=83"
  },
  {
    "text": "relative to the chrome and empty space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=85"
  },
  {
    "text": "I want the gradient to really take over for this screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=88"
  },
  {
    "text": "So let's start editing it in Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=91"
  },
  {
    "text": "This is our main detail view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=95"
  },
  {
    "text": "and it's used for our editing mode as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=97"
  },
  {
    "text": "Let's start with isEditing false, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=100"
  },
  {
    "text": "and we'll look at the editing mode later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=102"
  },
  {
    "text": "Let's make our gradient use as much of the space as possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=104"
  },
  {
    "text": "by deleting this frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=107"
  },
  {
    "text": "And now that the gradient is taking up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=111"
  },
  {
    "text": "all of the height, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=112"
  },
  {
    "text": "we no longer need this spacer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=113"
  },
  {
    "text": "We can go even further ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=117"
  },
  {
    "text": "by putting our controls on top of this gradient ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=118"
  },
  {
    "text": "by changing this to a ZStack.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=121"
  },
  {
    "text": "If you haven't seen a ZStack before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=124"
  },
  {
    "text": "it lays elements out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=126"
  },
  {
    "text": "on top of each other instead of next to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=127"
  },
  {
    "text": "Let's move our editing controls to the bottom.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=131"
  },
  {
    "text": "And we only need padding on the controls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=138"
  },
  {
    "text": "not on our gradient... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=140"
  },
  {
    "text": "so let's move this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=142"
  },
  {
    "text": "You may be wondering ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=146"
  },
  {
    "text": "why there's still empty space at the top ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=147"
  },
  {
    "text": "and bottom of the gradient, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=149"
  },
  {
    "text": "even after we've removed the padding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=151"
  },
  {
    "text": "By default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=153"
  },
  {
    "text": "SwiftUI positions your content within the safe area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=154"
  },
  {
    "text": "avoiding anything that would obscure or clip your view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=157"
  },
  {
    "text": "like the Home indicator ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=160"
  },
  {
    "text": "or any bars that are being shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=161"
  },
  {
    "text": "The safe area is represented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=163"
  },
  {
    "text": "as a region that is inset from the outermost full area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=165"
  },
  {
    "text": "where a view is shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=168"
  },
  {
    "text": "Content in the safe area is automatically laid out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=170"
  },
  {
    "text": "within the appropriate insets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=172"
  },
  {
    "text": "to avoid those areas where it would be obscured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=174"
  },
  {
    "text": "The safe area is also ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=177"
  },
  {
    "text": "how SwiftUI helps you avoid ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=178"
  },
  {
    "text": "drawing content under the keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=180"
  },
  {
    "text": "So in our app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=182"
  },
  {
    "text": "our controls will automatically lift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=183"
  },
  {
    "text": "out of the way of the keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=184"
  },
  {
    "text": "This works the same way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=187"
  },
  {
    "text": "and if we look more closely at how, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=188"
  },
  {
    "text": "it's because there are multiple different safe areas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=190"
  },
  {
    "text": "The most common one is the container safe area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=193"
  },
  {
    "text": "which is driven by the container a view is shown within ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=196"
  },
  {
    "text": "and includes things like bars and device chrome. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=198"
  },
  {
    "text": "Additionally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=201"
  },
  {
    "text": "there is a keyboard safe area for avoiding the keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=202"
  },
  {
    "text": "And note that the keyboard safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=205"
  },
  {
    "text": "is always a region within the container safe area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=207"
  },
  {
    "text": "It keeps content safe from the same areas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=210"
  },
  {
    "text": "as the container safe area in addition to the keyboard. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=212"
  },
  {
    "text": "It's possible to opt out of safe areas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=216"
  },
  {
    "text": "Usually you won't need to do this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=219"
  },
  {
    "text": "since most content should be within the safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=220"
  },
  {
    "text": "so it isn't clipped. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=222"
  },
  {
    "text": "It is safe, after all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=224"
  },
  {
    "text": "But ignoring the safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=226"
  },
  {
    "text": "can make sense for backgrounds or other content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=227"
  },
  {
    "text": "that you want to go fully edge to edge. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=229"
  },
  {
    "text": "You can use this code to opt out of all safe areas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=232"
  },
  {
    "text": "or specify the keyboard region ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=235"
  },
  {
    "text": "to just opt out of the keyboard safe area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=237"
  },
  {
    "text": "Let's add ignoresSafeArea to our linear gradient ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=241"
  },
  {
    "text": "to get that full-bleed effect.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=243"
  },
  {
    "text": "This Edit button isn't very visible on top of our gradient, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=249"
  },
  {
    "text": "so let's only ignore the safe area on the bottom edge.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=253"
  },
  {
    "text": "Now, to make sure we don't run into the same problem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=259"
  },
  {
    "text": "with this bottom text being illegible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=261"
  },
  {
    "text": "from the gradient, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=263"
  },
  {
    "text": "let's add a background behind it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=265"
  },
  {
    "text": "We'll customize the background in a minute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=271"
  },
  {
    "text": "but let's start with the most simple default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=273"
  },
  {
    "text": "which gives us a white background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=276"
  },
  {
    "text": "that automatically changes in Dark Mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=277"
  },
  {
    "text": "And this background also extends ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=290"
  },
  {
    "text": "beyond the safe area automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=291"
  },
  {
    "text": "This version of background and its behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=294"
  },
  {
    "text": "is new in iOS 15 and aligned OS releases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=296"
  },
  {
    "text": "Let's look at how it works. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=300"
  },
  {
    "text": "Let's start with a container view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=301"
  },
  {
    "text": "and its safe area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=303"
  },
  {
    "text": "Then we have our content view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=305"
  },
  {
    "text": "which will just be within the safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=307"
  },
  {
    "text": "to keep it legible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=308"
  },
  {
    "text": "If we naively added a background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=311"
  },
  {
    "text": "with the same bounds to the view it's applied to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=312"
  },
  {
    "text": "we'd get this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=314"
  },
  {
    "text": "But if we apply the ignoresSafeArea modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=316"
  },
  {
    "text": "to just the background view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=319"
  },
  {
    "text": "then it will expand beyond the safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=321"
  },
  {
    "text": "while keeping the main content nice and safe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=323"
  },
  {
    "text": "The new background modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=326"
  },
  {
    "text": "gives you this behavior automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=327"
  },
  {
    "text": "Let's go back to our background and start customizing it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=331"
  },
  {
    "text": "We can pass in a specific style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=334"
  },
  {
    "text": "which could be a color or any other style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=336"
  },
  {
    "text": "like a gradient.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=339"
  },
  {
    "text": "It doesn't really make sense in this app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=342"
  },
  {
    "text": "but let's look at something pastel colored.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=343"
  },
  {
    "text": "I can also pass in a shape to clip this background to... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=347"
  },
  {
    "text": "For example, a rounded rectangle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=351"
  },
  {
    "text": "Notice that when I use a custom shape, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=358"
  },
  {
    "text": "the background no longer extends out of the safe area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=360"
  },
  {
    "text": "so that the shape matches your content's bounds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=363"
  },
  {
    "text": "What I think would fit our app better ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=365"
  },
  {
    "text": "is a blur for our background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=367"
  },
  {
    "text": "We can use another new API to do that: Materials. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=369"
  },
  {
    "text": "Materials are a set of standard blur styles that you can apply. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=373"
  },
  {
    "text": "And let's make this background go back ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=377"
  },
  {
    "text": "to taking up the whole area.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=379"
  },
  {
    "text": "Materials are great for places ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=382"
  },
  {
    "text": "where we want to show through colorful content like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=384"
  },
  {
    "text": "There's a set of different materials you can choose from, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=387"
  },
  {
    "text": "going from Ultra Thin to Ultra Thick. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=389"
  },
  {
    "text": "And all of these automatically show ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=392"
  },
  {
    "text": "the right design on every platform.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=394"
  },
  {
    "text": "I'm going to use a thin material here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=398"
  },
  {
    "text": "Next, I want to customize our text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=401"
  },
  {
    "text": "Let's make the number of colors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=403"
  },
  {
    "text": "a little less prominent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=405"
  },
  {
    "text": "to show that the name is the primary information here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=406"
  },
  {
    "text": "I can do that by setting a foreground style of secondary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=411"
  },
  {
    "text": "You may have noticed that the secondary content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=418"
  },
  {
    "text": "is automatically shown with an effect called Vibrancy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=420"
  },
  {
    "text": "which blends the colors behind it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=423"
  },
  {
    "text": "In SwiftUI, there's no extra API for this effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=425"
  },
  {
    "text": "It happens automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=428"
  },
  {
    "text": "when you use the new Secondary through Quaternary styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=429"
  },
  {
    "text": "in a material context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=432"
  },
  {
    "text": "That can happen when you explicitly add a background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=434"
  },
  {
    "text": "with a material, like we just did, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=436"
  },
  {
    "text": "or when your content is in a system component, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=438"
  },
  {
    "text": "like a sidebar, that adds the material for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=441"
  },
  {
    "text": "And these styles have a lot of automatic smarts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=444"
  },
  {
    "text": "They automatically do the right thing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=447"
  },
  {
    "text": "when used in a non-blurred context as well, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=449"
  },
  {
    "text": "where they don't use a vibrant effect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=451"
  },
  {
    "text": "They also automatically change their behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=454"
  },
  {
    "text": "as you set a color on them, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=456"
  },
  {
    "text": "setting versions of the color for each level. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=457"
  },
  {
    "text": "And the same support works ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=460"
  },
  {
    "text": "for setting any base foreground style, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=461"
  },
  {
    "text": "even things like gradients. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=463"
  },
  {
    "text": "Please use tastefully. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=465"
  },
  {
    "text": "One thing to note: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=467"
  },
  {
    "text": "Any given text can have a single foreground style applied to it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=468"
  },
  {
    "text": "but multiple colors within its ranges. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=471"
  },
  {
    "text": "So for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=474"
  },
  {
    "text": "I could use string interpolation to embed an inner Text...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=476"
  },
  {
    "text": "And then apply a foregroundColor of red... ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=483"
  },
  {
    "text": "to the word \"colors.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=488"
  },
  {
    "text": "And it will show that color, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=489"
  },
  {
    "text": "automatically opting out of vibrancy for that range.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=491"
  },
  {
    "text": "Even more importantly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=498"
  },
  {
    "text": "with these foreground styles, for the first time ever, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=499"
  },
  {
    "text": "you get the right behavior with embedded emoji, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=502"
  },
  {
    "text": "where they just work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=505"
  },
  {
    "text": "This is looking good. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=508"
  },
  {
    "text": "Let's run it again ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=510"
  },
  {
    "text": "and try out Edit mode with these changes too.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=511"
  },
  {
    "text": "It mostly works already. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=521"
  },
  {
    "text": "And these colors go under the blur, which is great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=523"
  },
  {
    "text": "But if you look closely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=527"
  },
  {
    "text": "it's not doing quite the right thing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=528"
  },
  {
    "text": "When I scroll all the way down, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=531"
  },
  {
    "text": "there's a little bit of the list that's hidden behind the blur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=533"
  },
  {
    "text": "Let's look more closely at what's happening. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=536"
  },
  {
    "text": "Let's take away the chrome ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=538"
  },
  {
    "text": "and only look at the relevant views, here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=540"
  },
  {
    "text": "If we slide these views apart a bit horizontally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=543"
  },
  {
    "text": "we can see this is because the bar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=547"
  },
  {
    "text": "is just ZStacked on top of our content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=549"
  },
  {
    "text": "Now that we want to see all of the view in the back, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=551"
  },
  {
    "text": "that's not the right behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=554"
  },
  {
    "text": "We could change to a VStack here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=557"
  },
  {
    "text": "but without the list under the blur, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=559"
  },
  {
    "text": "we wouldn't get any of the color showing through ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=560"
  },
  {
    "text": "when scrolling down. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=562"
  },
  {
    "text": "We want the background of the list ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=565"
  },
  {
    "text": "and its scrollable area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=566"
  },
  {
    "text": "to extend under the bar but not its main content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=568"
  },
  {
    "text": "And this is exactly what the safe area is for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=571"
  },
  {
    "text": "If we make the safe area get inset by this bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=574"
  },
  {
    "text": "then any important content will stay unobscured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=577"
  },
  {
    "text": "To customize the safe area of our own views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=580"
  },
  {
    "text": "we can use a new modifier: safeAreaInset. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=583"
  },
  {
    "text": "This lets us add auxiliary content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=586"
  },
  {
    "text": "like our bar, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=588"
  },
  {
    "text": "over the main content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=589"
  },
  {
    "text": "I'll replace our ZStack...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=591"
  },
  {
    "text": "With a safeAreaInset...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=596"
  },
  {
    "text": "Using an edge of.bottom...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=603"
  },
  {
    "text": "And put our controls into that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=607"
  },
  {
    "text": "Let's run it again to check.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=610"
  },
  {
    "text": "This view still looks the same, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=617"
  },
  {
    "text": "which is good. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=619"
  },
  {
    "text": "That's because it's ignoring the safe area.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=620"
  },
  {
    "text": "And in Edit mode...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=624"
  },
  {
    "text": "We can still scroll under the bar to get that blur. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=627"
  },
  {
    "text": "But when we scroll to the bottom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=630"
  },
  {
    "text": "nothing is obscured. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=632"
  },
  {
    "text": "Great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=634"
  },
  {
    "text": "Next, let's look at our visualizers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=635"
  },
  {
    "text": "Let's start with the Shapes visualizer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=639"
  },
  {
    "text": "which is already written.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=641"
  },
  {
    "text": "It shows a large number of random shape symbols, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=644"
  },
  {
    "text": "each drawn with one of the gradients from the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=646"
  },
  {
    "text": "I can tap on a symbol to zoom it up...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=649"
  },
  {
    "text": "Or tap in the background to reposition all of the symbols.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=655"
  },
  {
    "text": "And if you've seen our SwiftUI animation demos before, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=660"
  },
  {
    "text": "you know that it's always interactive and interruptible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=662"
  },
  {
    "text": "So I can keep rearranging...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=665"
  },
  {
    "text": "And even tap to select and deselect shapes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=669"
  },
  {
    "text": "while that's happening.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=672"
  },
  {
    "text": "If I go look at the code...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=675"
  },
  {
    "text": "It's using a common technique for drawing graphics in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=679"
  },
  {
    "text": "There's a GeometryReader ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=683"
  },
  {
    "text": "so I can read the view's size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=685"
  },
  {
    "text": "to lay out all of these graphics ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=686"
  },
  {
    "text": "and a ZStack to help me position them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=689"
  },
  {
    "text": "And at the end of the body, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=693"
  },
  {
    "text": "there's a modifier you may have seen before: drawingGroup. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=695"
  },
  {
    "text": "A drawingGroup tells SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=698"
  },
  {
    "text": "to combine all of the views it contains ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=700"
  },
  {
    "text": "in a single layer to draw. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=702"
  },
  {
    "text": "This works well for graphical elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=704"
  },
  {
    "text": "like these ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=705"
  },
  {
    "text": "but shouldn't be used with UI controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=707"
  },
  {
    "text": "like text fields and lists. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=708"
  },
  {
    "text": "This is a great technique to use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=711"
  },
  {
    "text": "when you want to show a large number of graphical elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=713"
  },
  {
    "text": "like we're doing here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=715"
  },
  {
    "text": "And one of the benefits of drawingGroup ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=717"
  },
  {
    "text": "is that even though these views are drawn differently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=719"
  },
  {
    "text": "you can still use the same functionality from SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=722"
  },
  {
    "text": "that you use everywhere else in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=724"
  },
  {
    "text": "For example, here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=727"
  },
  {
    "text": "we have a gesture applied to each symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=729"
  },
  {
    "text": "for tapping on them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=731"
  },
  {
    "text": "and also an animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=732"
  },
  {
    "text": "that applies when we change selection or reposition them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=734"
  },
  {
    "text": "The accessibility information contained in these views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=738"
  },
  {
    "text": "is also passed up normally-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=740"
  },
  {
    "text": "for example, these accessibility actions on each symbol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=742"
  },
  {
    "text": "However, to support all of these features, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=746"
  },
  {
    "text": "there is some bookkeeping ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=748"
  },
  {
    "text": "and storage required for each view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=749"
  },
  {
    "text": "If you have a high enough number of elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=751"
  },
  {
    "text": "then even that extra overhead might be too much. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=753"
  },
  {
    "text": "And for those cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=756"
  },
  {
    "text": "we've introduced a new Canvas view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=757"
  },
  {
    "text": "Our next visualizer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=759"
  },
  {
    "text": "will show a complex particle system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=761"
  },
  {
    "text": "and it isn't written yet. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=763"
  },
  {
    "text": "Let's go build it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=764"
  },
  {
    "text": "Let's start with our Canvas view to draw it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=766"
  },
  {
    "text": "This lets us make a closure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=772"
  },
  {
    "text": "that's run every time the canvas is drawn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=773"
  },
  {
    "text": "and contains our drawing commands. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=776"
  },
  {
    "text": "If you're familiar with drawRect in UIKit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=778"
  },
  {
    "text": "or AppKit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=780"
  },
  {
    "text": "this works pretty similarly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=781"
  },
  {
    "text": "This closure gives us a context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=783"
  },
  {
    "text": "which is what we send drawing commands to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=785"
  },
  {
    "text": "and a size that we can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=787"
  },
  {
    "text": "to get the size of the entire canvas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=789"
  },
  {
    "text": "Let's start by just drawing an image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=792"
  },
  {
    "text": "I can create one using the same Image type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=795"
  },
  {
    "text": "I use in the rest of my SwiftUI code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=797"
  },
  {
    "text": "And let's tell the context to draw our image.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=802"
  },
  {
    "text": "When we draw it at 0,0, it's up here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=812"
  },
  {
    "text": "centered at the origin, where it's not very visible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=814"
  },
  {
    "text": "Since we have the size of the whole canvas available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=817"
  },
  {
    "text": "let's use that to draw it in the middle instead.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=820"
  },
  {
    "text": "And one thing you can see if I change our preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=831"
  },
  {
    "text": "to be in Dark Mode...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=833"
  },
  {
    "text": "Is that our image automatically flips to draw in white, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=838"
  },
  {
    "text": "since it's using the same foreground style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=841"
  },
  {
    "text": "that we saw earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=843"
  },
  {
    "text": "Since we want to build a particle system, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=845"
  },
  {
    "text": "let's draw this image a few more times.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=847"
  },
  {
    "text": "Note that this closure is for imperative code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=850"
  },
  {
    "text": "It's not a ViewBuilder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=853"
  },
  {
    "text": "So I can just use a normal for loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=854"
  },
  {
    "text": "And let's shift each image a bit so we can actually see them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=861"
  },
  {
    "text": "Now, we're drawing this image several times, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=872"
  },
  {
    "text": "but each time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=875"
  },
  {
    "text": "the context needs to resolve it to evaluate it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=876"
  },
  {
    "text": "based on things like the current environment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=878"
  },
  {
    "text": "even though each time, it's the same image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=880"
  },
  {
    "text": "We can improve this by resolving the image ourselves ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=883"
  },
  {
    "text": "before drawing it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=886"
  },
  {
    "text": "Now we have better performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=892"
  },
  {
    "text": "because we're sharing the same resolved image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=894"
  },
  {
    "text": "but the resolved image also lets us do some other things.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=896"
  },
  {
    "text": "We can now ask for its size and baseline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=900"
  },
  {
    "text": "In our case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=903"
  },
  {
    "text": "we'll use its size to shift each one by the right amount.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=904"
  },
  {
    "text": "Next, let's add ellipses behind our sparkles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=917"
  },
  {
    "text": "I'm going to draw them in the same region. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=920"
  },
  {
    "text": "So let's pull out a frame to draw them both in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=922"
  },
  {
    "text": "I'll create a CGRect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=929"
  },
  {
    "text": "with the same X and Y values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=931"
  },
  {
    "text": "and use our imageSize for the width and height...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=935"
  },
  {
    "text": "Then draw our image in that frame.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=945"
  },
  {
    "text": "Because each drawing operation is done in order, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=950"
  },
  {
    "text": "to put our ellipse behind the image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=952"
  },
  {
    "text": "we need to draw it first. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=954"
  },
  {
    "text": "And we can draw it with context.fill...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=956"
  },
  {
    "text": "Which takes a path and a shading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=960"
  },
  {
    "text": "You can construct a path with standard bezier curves, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=962"
  },
  {
    "text": "but here's a tip: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=965"
  },
  {
    "text": "You can also use shapes like ellipse ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=967"
  },
  {
    "text": "and ask them for their path in a given rectangle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=970"
  },
  {
    "text": "The other argument is a shading, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=976"
  },
  {
    "text": "which is what to fill our path with. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=978"
  },
  {
    "text": "And this can use the same styles as the rest of our SwiftUI app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=979"
  },
  {
    "text": "Let's use a cyan color.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=983"
  },
  {
    "text": "And there are the ellipses. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=988"
  },
  {
    "text": "There's not a lot of contrast with the images, though. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=990"
  },
  {
    "text": "Let's fix that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=992"
  },
  {
    "text": "Graphics context has many standard drawing properties, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=993"
  },
  {
    "text": "like opacity, blend modes, transforms, and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=996"
  },
  {
    "text": "Let's set an opacity here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1000"
  },
  {
    "text": "And we can look at an area ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1002"
  },
  {
    "text": "where this context behaves a little differently ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1003"
  },
  {
    "text": "from what you might be used to. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1005"
  },
  {
    "text": "If I just set an opacity on the context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1008"
  },
  {
    "text": "then it behaves as you'd expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1010"
  },
  {
    "text": "It affects all operations that happen afterwards.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1012"
  },
  {
    "text": "In the past, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1017"
  },
  {
    "text": "if I wanted to make a change to a graphics context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1018"
  },
  {
    "text": "only applied to some of my drawing operations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1020"
  },
  {
    "text": "I would have to bracket those operations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1023"
  },
  {
    "text": "in a save and restore call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1024"
  },
  {
    "text": "But with a SwiftUI context, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1027"
  },
  {
    "text": "all I have to do is make changes on a copy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1029"
  },
  {
    "text": "And those changes only affect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1039"
  },
  {
    "text": "drawing done with the modified context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1040"
  },
  {
    "text": "Drawing done on the original context is unaffected.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1043"
  },
  {
    "text": "Let's add some color to our image too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1048"
  },
  {
    "text": "One other thing we can do with a resolved image ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1051"
  },
  {
    "text": "is set a shading to control how symbols are drawn.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1054"
  },
  {
    "text": "Let's set a blue color here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1061"
  },
  {
    "text": "That looks a little less bright than I was hoping for. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1067"
  },
  {
    "text": "Sometimes when you're drawing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1070"
  },
  {
    "text": "the right blend mode can make a big difference. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1071"
  },
  {
    "text": "Blend modes control how colors are combined, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1074"
  },
  {
    "text": "especially with partial opacity, like we have here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1076"
  },
  {
    "text": "Let's set a screen blend mode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1082"
  },
  {
    "text": "That combines colors so that they always get brighter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1084"
  },
  {
    "text": "That's looks better. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1088"
  },
  {
    "text": "There are many more drawing operations you can do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1090"
  },
  {
    "text": "Check out the GraphicsContext type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1093"
  },
  {
    "text": "to see everything that's possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1095"
  },
  {
    "text": "Now, to make this like a simulation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1097"
  },
  {
    "text": "it needs to actually move. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1098"
  },
  {
    "text": "There are a few tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1100"
  },
  {
    "text": "to make something change over time in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1101"
  },
  {
    "text": "Animations are the most common, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1104"
  },
  {
    "text": "and they generally just happen automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1107"
  },
  {
    "text": "when you make a change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1108"
  },
  {
    "text": "This year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1110"
  },
  {
    "text": "we're introducing a new lower-level tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1111"
  },
  {
    "text": "called TimelineView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1113"
  },
  {
    "text": "for when you want to control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1114"
  },
  {
    "text": "exactly how something changes over time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1115"
  },
  {
    "text": "I can use a TimelineView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1118"
  },
  {
    "text": "by just wrapping it around the view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1119"
  },
  {
    "text": "that I want to change.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1121"
  },
  {
    "text": "And I can configure it with a schedule, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1129"
  },
  {
    "text": "which tells it how often to update.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1131"
  },
  {
    "text": "There are schedules for things like timers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1136"
  },
  {
    "text": "but we're going to use an animation schedule ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1138"
  },
  {
    "text": "to get updates as quickly as we can display them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1141"
  },
  {
    "text": "If you're familiar with a display link, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1144"
  },
  {
    "text": "this works very similarly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1146"
  },
  {
    "text": "And if you're not, that's totally OK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1147"
  },
  {
    "text": "We get passed a timeline context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1149"
  },
  {
    "text": "that gives us information about what we should show.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1151"
  },
  {
    "text": "I can pull out a time in seconds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1156"
  },
  {
    "text": "that we'll use to animate our images around.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1158"
  },
  {
    "text": "Let's make our images move in a rotating oscillation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1166"
  },
  {
    "text": "So I'll make an angle from the current time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1169"
  },
  {
    "text": "Let's have it loop every three seconds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1176"
  },
  {
    "text": "by using a remainder...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1178"
  },
  {
    "text": "And multiply that by 120 to get 360 degrees.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1182"
  },
  {
    "text": "And we'll get the X value with cosine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1187"
  },
  {
    "text": "Or was it sine? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1190"
  },
  {
    "text": "I hope you remember your trigonometry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1191"
  },
  {
    "text": "Now let's use that value to change our offset...",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1196"
  },
  {
    "text": "And take our previews live to see how it looks.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1201"
  },
  {
    "text": "Nice. See how when they overlap, they get even brighter? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1206"
  },
  {
    "text": "That's our screen blend mode at work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1209"
  },
  {
    "text": "Next, let's add some interactivity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1211"
  },
  {
    "text": "Earlier, we looked at some of the interactions we can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1214"
  },
  {
    "text": "by adding gestures to individual views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1216"
  },
  {
    "text": "Remember that one of the tradeoffs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1219"
  },
  {
    "text": "of using a canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1221"
  },
  {
    "text": "is that the individual elements within it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1222"
  },
  {
    "text": "are combined into a single drawing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1224"
  },
  {
    "text": "So we couldn't, for example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1226"
  },
  {
    "text": "attach a gesture to these individual images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1227"
  },
  {
    "text": "However, we can still add a gesture to the entire view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1231"
  },
  {
    "text": "Let's add the ability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1234"
  },
  {
    "text": "to increase the number of sparkles shown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1235"
  },
  {
    "text": "We'll add some state for how many to show.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1238"
  },
  {
    "text": "And let's have it start with two. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1245"
  },
  {
    "text": "Let's use the count to control our loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1248"
  },
  {
    "text": "Then we'll add a TapGesture to increment the count.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1255"
  },
  {
    "text": "Let's update our preview.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1262"
  },
  {
    "text": "And now we can tap to add sparkles.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1267"
  },
  {
    "text": "One other important aspect of using a canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1273"
  },
  {
    "text": "is that, since it's a single graphic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1275"
  },
  {
    "text": "there's not any information about its contents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1277"
  },
  {
    "text": "available to Accessibility. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1280"
  },
  {
    "text": "To make this accessible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1282"
  },
  {
    "text": "we'll use the standard accessibility modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1284"
  },
  {
    "text": "to add information about our view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1286"
  },
  {
    "text": "And for more advanced cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1297"
  },
  {
    "text": "there's a powerful new .accessibilityChildren modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1298"
  },
  {
    "text": "that lets you specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1302"
  },
  {
    "text": "an arbitrary SwiftUI view hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1303"
  },
  {
    "text": "to use to generate accessibility information about a view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1305"
  },
  {
    "text": "See \"SwiftUI Accessibility: Beyond the Basics\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1309"
  },
  {
    "text": "for more information on how to use that.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1311"
  },
  {
    "text": "We've built up a relatively simple use of Canvas, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1315"
  },
  {
    "text": "but it's designed to support much more complex uses, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1317"
  },
  {
    "text": "so let's spice things up a bit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1320"
  },
  {
    "text": "One of my colleagues wrote some simulation code for me ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1322"
  },
  {
    "text": "that works the same way as what we have here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1325"
  },
  {
    "text": "but with a lot more elements doing more interesting things. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1327"
  },
  {
    "text": "I have the file he sent me here ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1329"
  },
  {
    "text": "that I'll just paste into our view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1331"
  },
  {
    "text": "This code has the same structure as what we were just doing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1342"
  },
  {
    "text": "We now have a long-lived model object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1346"
  },
  {
    "text": "that we're updating over time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1349"
  },
  {
    "text": "that keeps track of all of our particles. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1350"
  },
  {
    "text": "We have the same TimelineView and Canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1353"
  },
  {
    "text": "to animate and draw our content. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1356"
  },
  {
    "text": "We're updating our model with the new date, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1358"
  },
  {
    "text": "setting that screen blend mode, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1362"
  },
  {
    "text": "and telling each active particle to draw itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1364"
  },
  {
    "text": "the same way as the ellipse that we just had. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1367"
  },
  {
    "text": "And finally, we have the same modifiers applied, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1370"
  },
  {
    "text": "just with a slightly more complex gesture. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1373"
  },
  {
    "text": "So let's see what it looks like.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1375"
  },
  {
    "text": "It creates a new fireworks burst periodically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1384"
  },
  {
    "text": "and we can also tap to add more bursts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1387"
  },
  {
    "text": "And they're made using ellipses ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1390"
  },
  {
    "text": "with the colors from the app's gradients.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1392"
  },
  {
    "text": "One other great thing about drawing in Canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1396"
  },
  {
    "text": "is that it also works on watchOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1399"
  },
  {
    "text": "tvOS, and macOS. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1401"
  },
  {
    "text": "It's available on all SwiftUI platforms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1404"
  },
  {
    "text": "All right. We've finished our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1407"
  },
  {
    "text": "And along the way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1409"
  },
  {
    "text": "we looked at working with and modifying safe areas, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1410"
  },
  {
    "text": "how to use foreground styles to control how content is drawn, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1414"
  },
  {
    "text": "how to use materials to get blurs and vibrancy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1417"
  },
  {
    "text": "and we used Canvas and TimelineView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1421"
  },
  {
    "text": "to build complex animated graphics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1423"
  },
  {
    "text": "I can't wait to see what amazing graphics you build in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1426"
  },
  {
    "text": "[music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10021/?time=1430"
  }
]