[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=0"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=3"
  },
  {
    "text": "Hi! I'm Nicole, and welcome to \"What's new in Swift.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=9"
  },
  {
    "text": "Swift 5.5 is our best release yet! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=14"
  },
  {
    "text": "The Swift language continues to evolve at a rapid pace, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=17"
  },
  {
    "text": "with many new features, including Swift Concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=21"
  },
  {
    "text": "a new model for asynchronous and concurrent programming ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=24"
  },
  {
    "text": "designed to make concurrent programming in Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=27"
  },
  {
    "text": "convenient, efficient, and safe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=29"
  },
  {
    "text": "In addition, we've made it easier than ever ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=33"
  },
  {
    "text": "to develop in Swift, thanks to advances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=36"
  },
  {
    "text": "in the package experience, new standard library packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=38"
  },
  {
    "text": "and features enhancing the developer experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=42"
  },
  {
    "text": "As important as these advances are, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=46"
  },
  {
    "text": "the heart of the Swift project is not code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=48"
  },
  {
    "text": "but a community of people ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=51"
  },
  {
    "text": "working towards the goals of the Swift project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=53"
  },
  {
    "text": "This is why it is important that we invest ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=56"
  },
  {
    "text": "in our community, as well as our software. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=58"
  },
  {
    "text": "I'd like to start things off by talking about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=61"
  },
  {
    "text": "an important Swift community initiative. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=63"
  },
  {
    "text": "Diversity is a core value of the Swift community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=66"
  },
  {
    "text": "Research shows that diverse open source projects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=70"
  },
  {
    "text": "are more productive and make better decisions. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=73"
  },
  {
    "text": "Including people from all backgrounds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=76"
  },
  {
    "text": "and with diverse perspectives helps a community thrive. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=78"
  },
  {
    "text": "We, and other members of the Swift community, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=83"
  },
  {
    "text": "saw the opportunity to encourage active engagement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=85"
  },
  {
    "text": "in the Swift ecosystem and community from a wider range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=88"
  },
  {
    "text": "of developers with our Diversity in Swift initiative. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=92"
  },
  {
    "text": "The mission of Diversity in Swift is to foster ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=95"
  },
  {
    "text": "an inclusive Swift community ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=98"
  },
  {
    "text": "by elevating a wide variety of voices ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=100"
  },
  {
    "text": "and making it easier for developers to start learning ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=103"
  },
  {
    "text": "or contributing to Swift, regardless of their background. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=106"
  },
  {
    "text": "As part of this initiative, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=110"
  },
  {
    "text": "we have expanded the swift.org blog ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=112"
  },
  {
    "text": "to include posts that recognize and highlight the contributions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=114"
  },
  {
    "text": "from a wide range of developers within our community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=117"
  },
  {
    "text": "We have also created community groups ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=121"
  },
  {
    "text": "in the Swift forums for developers to connect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=123"
  },
  {
    "text": "with others who may have had similar experiences ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=125"
  },
  {
    "text": "or faced similar barriers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=128"
  },
  {
    "text": "To get involved with Diversity in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=130"
  },
  {
    "text": "or find out more, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=132"
  },
  {
    "text": "please visit swift.org/diversity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=134"
  },
  {
    "text": "We also want to help developers already in the community ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=138"
  },
  {
    "text": "grow and reach their goals with Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=141"
  },
  {
    "text": "To make contributing to Swift open source projects ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=144"
  },
  {
    "text": "more approachable, we recently announced ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=146"
  },
  {
    "text": "the Swift mentorship program to help newcomers get ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=149"
  },
  {
    "text": "direct support and guidance from regular contributors. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=151"
  },
  {
    "text": "This program isn't limited to Apple's projects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=155"
  },
  {
    "text": "It also encompasses the entire ecosystem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=158"
  },
  {
    "text": "of Swift packages and open source tools. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=161"
  },
  {
    "text": "Next, I'd like to talk about packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=164"
  },
  {
    "text": "Packages are a fundamental building block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=168"
  },
  {
    "text": "for building software, allowing you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=170"
  },
  {
    "text": "to conveniently take advantage of an ever-growing array ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=172"
  },
  {
    "text": "of open source code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=175"
  },
  {
    "text": "Members of the Swift community ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=176"
  },
  {
    "text": "have come up with some great solutions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=178"
  },
  {
    "text": "to help developers find packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=180"
  },
  {
    "text": "like the Swift Package Index. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=182"
  },
  {
    "text": "The Swift Package Index is a page ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=184"
  },
  {
    "text": "created by the community that helps you find ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=186"
  },
  {
    "text": "packages which support the Swift Package Manager. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=189"
  },
  {
    "text": "Now, in Swift 5.5 and Xcode 13, we are providing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=192"
  },
  {
    "text": "additional ways for you to find and access packages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=196"
  },
  {
    "text": "by providing integrated Xcode tooling support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=200"
  },
  {
    "text": "to make it even faster and easier to use packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=202"
  },
  {
    "text": "in your project as part of your development workflow.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=206"
  },
  {
    "text": "This year, we are introducing Swift Package Collections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=212"
  },
  {
    "text": "curated lists of Swift packages you can use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=216"
  },
  {
    "text": "both from the command line and from Xcode 13. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=219"
  },
  {
    "text": "With package collections, you no longer need to search ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=222"
  },
  {
    "text": "for packages on the Internet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=225"
  },
  {
    "text": "or copy and paste URLs to add them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=227"
  },
  {
    "text": "You can now simply browse a collection and add packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=230"
  },
  {
    "text": "from a new package search screen in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=233"
  },
  {
    "text": "Package collections are simple JSON files ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=235"
  },
  {
    "text": "you can publish anywhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=238"
  },
  {
    "text": "Package collections are meant to allow anyone to build ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=240"
  },
  {
    "text": "curated lists of packages for different use cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=243"
  },
  {
    "text": "For example, an instructor for a computer science class ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=246"
  },
  {
    "text": "can put together a set of packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=250"
  },
  {
    "text": "that helps teach the concepts of that class, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=251"
  },
  {
    "text": "or someone can put together a collection of packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=254"
  },
  {
    "text": "that are good for a particular domain or task, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=257"
  },
  {
    "text": "or that are used by their organization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=260"
  },
  {
    "text": "We're excited to see all the different ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=262"
  },
  {
    "text": "in which people will use collections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=264"
  },
  {
    "text": "We have a great presentation on package collections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=267"
  },
  {
    "text": "that I recommend you check out to learn more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=270"
  },
  {
    "text": "Package collections include ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=273"
  },
  {
    "text": "some powerful tooling support in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=274"
  },
  {
    "text": "You are now just an import away from using your favorite APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=277"
  },
  {
    "text": "When you try to import a module that cannot be found, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=281"
  },
  {
    "text": "Xcode will check if any of the packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=284"
  },
  {
    "text": "in the package collections that you have configured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=286"
  },
  {
    "text": "provide that module and provide you the opportunity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=289"
  },
  {
    "text": "to automatically start using that package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=291"
  },
  {
    "text": "Once you choose to use a package, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=294"
  },
  {
    "text": "all configuration is handled for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=296"
  },
  {
    "text": "based on the information in the package collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=299"
  },
  {
    "text": "Package collections are also searchable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=301"
  },
  {
    "text": "making it easy to find packages to meet your use case. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=304"
  },
  {
    "text": "If you are interested in trying out package collections today, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=308"
  },
  {
    "text": "there are some already available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=311"
  },
  {
    "text": "including a package collection of the Swift Packages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=313"
  },
  {
    "text": "that Apple publishes on GitHub. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=315"
  },
  {
    "text": "Xcode comes pre-wired to use the Apple collection.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=318"
  },
  {
    "text": "If you are interested in learning more ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=323"
  },
  {
    "text": "about package collections, including collections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=325"
  },
  {
    "text": "already available from the community, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=327"
  },
  {
    "text": "check out the new swift.org blog post ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=329"
  },
  {
    "text": "on package collections. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=332"
  },
  {
    "text": "Speaking of your favorite APIs, Apple publishes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=334"
  },
  {
    "text": "a growing family of open source Swift packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=338"
  },
  {
    "text": "In addition to some big enhancements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=342"
  },
  {
    "text": "to your favorite packages, this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=344"
  },
  {
    "text": "we launched four more new packages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=346"
  },
  {
    "text": "First, I'd like to tell you about Swift Collections.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=348"
  },
  {
    "text": "Swift Collections is a new open source package ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=355"
  },
  {
    "text": "of data structures that complements those available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=359"
  },
  {
    "text": "in the Swift Standard Library. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=361"
  },
  {
    "text": "The initial version of Swift Collections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=364"
  },
  {
    "text": "comes with implementations for three ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=366"
  },
  {
    "text": "of the most frequently requested data structures: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=368"
  },
  {
    "text": "Deque, OrderedSet, and OrderedDictionary.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=371"
  },
  {
    "text": "Deque is like an Array, except that it supports ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=376"
  },
  {
    "text": "efficient insertion and removal at both ends. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=379"
  },
  {
    "text": "OrderedSet is a powerful hybrid of an Array and a Set. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=384"
  },
  {
    "text": "Like Array, OrderedSet maintains its elements in order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=389"
  },
  {
    "text": "and supports random access. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=393"
  },
  {
    "text": "Like a Set, OrderedSet ensures each element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=394"
  },
  {
    "text": "appears only once and provides efficient membership testing.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=397"
  },
  {
    "text": "And last is OrderedDictionary, which is a useful alternative ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=403"
  },
  {
    "text": "to Dictionary when order is important, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=406"
  },
  {
    "text": "or we need random access to elements. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=409"
  },
  {
    "text": "Next, let's talk about Swift Algorithms. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=412"
  },
  {
    "text": "Swift Algorithms is a new open source package ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=416"
  },
  {
    "text": "of Sequence and Collection algorithms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=419"
  },
  {
    "text": "We've already added over 40 algorithms to Swift Algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=423"
  },
  {
    "text": "for things like generating all the combinations or permutations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=428"
  },
  {
    "text": "of a collection of elements, or iterating the elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=432"
  },
  {
    "text": "of a sequence by two or three or in groups ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=435"
  },
  {
    "text": "determined by a predicate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=438"
  },
  {
    "text": "or selecting the five smallest elements in a collection, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=440"
  },
  {
    "text": "the five largest, or just any five at random.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=444"
  },
  {
    "text": "It takes a little investment to learn the vocabulary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=449"
  },
  {
    "text": "but once you do, it can be striking to discover ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=452"
  },
  {
    "text": "just how many algorithms are hiding in plain sight.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=454"
  },
  {
    "text": "If you want to learn more, we have a session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=458"
  },
  {
    "text": "which describes how the new Swift Algorithms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=460"
  },
  {
    "text": "and Collections packages can help you make your code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=463"
  },
  {
    "text": "clearer, faster, and more correct. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=466"
  },
  {
    "text": "Now, let's talk about Swift System. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=469"
  },
  {
    "text": "Last fall, we open-sourced Swift System, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=471"
  },
  {
    "text": "a library providing idiomatic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=475"
  },
  {
    "text": "low-level interfaces to system calls. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=477"
  },
  {
    "text": "System is available on Apple platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=480"
  },
  {
    "text": "Linux, and even Windows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=482"
  },
  {
    "text": "We recently added powerful new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=485"
  },
  {
    "text": "to System's FilePath type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=487"
  },
  {
    "text": "for performing common path manipulation operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=489"
  },
  {
    "text": "These include the ability to query or set extensions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=492"
  },
  {
    "text": "add and remove components, and perform path normalization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=496"
  },
  {
    "text": "A path can be decomposed into its root ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=501"
  },
  {
    "text": "and its relative components. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=505"
  },
  {
    "text": "FilePath's ComponentView is a collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=507"
  },
  {
    "text": "of structured path components, meaning it comes with support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=510"
  },
  {
    "text": "for many of Swift's generic algorithms right out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=513"
  },
  {
    "text": "And when targeting Windows, Windows paths, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=518"
  },
  {
    "text": "with their complex root components, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=520"
  },
  {
    "text": "are fully supported by all the new FilePath APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=523"
  },
  {
    "text": "Next, let's talk about Swift Numerics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=527"
  },
  {
    "text": "Swift Numerics received a number of big additions this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=531"
  },
  {
    "text": "We brought Float16 to iOS, tvOS, and watchOS last year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=535"
  },
  {
    "text": "This year, we added Float16 support to Apple Silicon Macs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=540"
  },
  {
    "text": "and the ability to make Float16-based complex numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=545"
  },
  {
    "text": "Another addition this year is complex number support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=549"
  },
  {
    "text": "for all the elementary functions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=553"
  },
  {
    "text": "like log, sine, and cosine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=554"
  },
  {
    "text": "Because these implementations are written in Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=558"
  },
  {
    "text": "they are frequently more efficient ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=560"
  },
  {
    "text": "than a traditional C library and allow for optimizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=562"
  },
  {
    "text": "that would otherwise not be possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=565"
  },
  {
    "text": "Finally, let's talk about Swift ArgumentParser. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=568"
  },
  {
    "text": "We've continued to refine Swift ArgumentParser this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=572"
  },
  {
    "text": "with enhancements like the ability to generate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=575"
  },
  {
    "text": "code-completion scripts for the Fish shell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=578"
  },
  {
    "text": "joined short options, and improved error messages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=580"
  },
  {
    "text": "We also passed an important milestone ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=584"
  },
  {
    "text": "this spring when ArgumentParser was adopted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=586"
  },
  {
    "text": "by the Swift Package Manager in Xcode 12.5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=589"
  },
  {
    "text": "That's right! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=593"
  },
  {
    "text": "If you've used the Swift Package Manager ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=594"
  },
  {
    "text": "command-line tool recently, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=596"
  },
  {
    "text": "you've used Swift ArgumentParser. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=598"
  },
  {
    "text": "Next, I'd like to talk about some work we've done ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=601"
  },
  {
    "text": "to support Swift on server development. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=604"
  },
  {
    "text": "Last year, we added support for a number of platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=607"
  },
  {
    "text": "including Amazon Linux. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=610"
  },
  {
    "text": "This year, we've followed up on that work by investing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=612"
  },
  {
    "text": "in performance and functionality for Swift server applications.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=616"
  },
  {
    "text": "We started by enabling static linking on Linux, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=621"
  },
  {
    "text": "which improves application startup time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=624"
  },
  {
    "text": "as well as simplifies the deployment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=626"
  },
  {
    "text": "of server applications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=628"
  },
  {
    "text": "which can now be deployed as a single file. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=629"
  },
  {
    "text": "Also, in Swift 5.5, the JSON encoding and decoding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=632"
  },
  {
    "text": "used on Linux were reimplemented from scratch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=636"
  },
  {
    "text": "resulting in performance gains for most common use cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=640"
  },
  {
    "text": "Finally, we've enhanced and optimized the performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=644"
  },
  {
    "text": "of the AWS Lambda runtime library itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=647"
  },
  {
    "text": "All this work made Swift programs running on AWS Lambda ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=651"
  },
  {
    "text": "start 33% faster, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=656"
  },
  {
    "text": "as well as 40% faster invocation time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=659"
  },
  {
    "text": "for a lambda routed via AWS API Gateway. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=662"
  },
  {
    "text": "In addition to optimizing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=666"
  },
  {
    "text": "the AWS runtime library performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=667"
  },
  {
    "text": "we refactored it to use our new async/await model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=670"
  },
  {
    "text": "instead of closures. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=673"
  },
  {
    "text": "Improving the Swift developer experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=676"
  },
  {
    "text": "is another key focus in Swift 5.5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=678"
  },
  {
    "text": "I'd like to start by talking about documentation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=681"
  },
  {
    "text": "Providing great documentation is key for creating a smooth ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=685"
  },
  {
    "text": "and enjoyable experience for users of a framework. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=689"
  },
  {
    "text": "This year, we are introducing DocC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=693"
  },
  {
    "text": "a documentation compiler that's deeply integrated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=696"
  },
  {
    "text": "inside Xcode 13, to help you teach developers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=699"
  },
  {
    "text": "how to use your Swift framework or package. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=702"
  },
  {
    "text": "It's now easier than ever to write and share ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=705"
  },
  {
    "text": "great documentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=708"
  },
  {
    "text": "DocC is built from the ground up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=711"
  },
  {
    "text": "using tools and technologies that you already know and love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=713"
  },
  {
    "text": "such as markdown comments in your Swift source code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=716"
  },
  {
    "text": "so that you can easily write and diff your documentation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=719"
  },
  {
    "text": "We have four fantastic sessions to show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=724"
  },
  {
    "text": "every aspect of DocC documentation in Xcode. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=727"
  },
  {
    "text": "I highly recommend you check them out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=730"
  },
  {
    "text": "And now, I'm thrilled to announce ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=733"
  },
  {
    "text": "that Swift DocC will be open-sourced later this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=736"
  },
  {
    "text": "Open-sourcing Swift DocC will allow developers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=740"
  },
  {
    "text": "to more easily generate great documentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=743"
  },
  {
    "text": "on all of Swift's supported platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=745"
  },
  {
    "text": "In Swift 5.5, we invested in quality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=750"
  },
  {
    "text": "and performance improvements in the type checker. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=753"
  },
  {
    "text": "One result of this is you will see fewer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=756"
  },
  {
    "text": "\"expression too complex\" errors when compiling your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=758"
  },
  {
    "text": "We also sped up the performance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=763"
  },
  {
    "text": "for type checking of array literals.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=765"
  },
  {
    "text": "In this release, we're also enhancing developer productivity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=768"
  },
  {
    "text": "with three major improvements to speed up incremental builds. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=772"
  },
  {
    "text": "First of all, we now support incremental imports, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=776"
  },
  {
    "text": "meaning we now no longer rebuild every source file ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=780"
  },
  {
    "text": "that imports a module when that module changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=783"
  },
  {
    "text": "In addition, we now compute ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=786"
  },
  {
    "text": "the module dependency graph up front ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=788"
  },
  {
    "text": "so that we can quickly start incremental builds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=791"
  },
  {
    "text": "of only what has changed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=793"
  },
  {
    "text": "Finally, we've extended selective recompilation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=795"
  },
  {
    "text": "to work with extensions, meaning fewer recompilations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=798"
  },
  {
    "text": "when you change the body of an extension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=801"
  },
  {
    "text": "Using the SwiftDriver open source project as an example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=805"
  },
  {
    "text": "on the average, with incremental imports ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=808"
  },
  {
    "text": "in Swift 5.5, we now recompile ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=810"
  },
  {
    "text": "less than a tenth as many files when imported modules change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=813"
  },
  {
    "text": "and the build time is decreased by about a third. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=818"
  },
  {
    "text": "The performance improvements from incremental imports ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=823"
  },
  {
    "text": "means that you can now modularize your project ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=825"
  },
  {
    "text": "and change an imported module ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=828"
  },
  {
    "text": "without a large penalty in build performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=830"
  },
  {
    "text": "And by the way, some of these performance improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=832"
  },
  {
    "text": "were made possible by an important milestone ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=836"
  },
  {
    "text": "for the Swift project, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=839"
  },
  {
    "text": "the first part of the compiler to be written in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=840"
  },
  {
    "text": "This is the Swift Driver, the program that coordinates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=844"
  },
  {
    "text": "the compilation of Swift source code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=847"
  },
  {
    "text": "This project began in late 2019 and, as of Xcode 13, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=850"
  },
  {
    "text": "is now the default for Swift compilation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=854"
  },
  {
    "text": "Finally, let's talk about improvements we've made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=857"
  },
  {
    "text": "to make memory management in Swift more efficient, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=860"
  },
  {
    "text": "so Swift programs reclaim memory more quickly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=863"
  },
  {
    "text": "Swift class instances use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=867"
  },
  {
    "text": "Automatic Reference Counting, ARC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=869"
  },
  {
    "text": "to track how many references there are ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=872"
  },
  {
    "text": "to a particular object at any given time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=873"
  },
  {
    "text": "In most cases, this means that memory management ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=877"
  },
  {
    "text": "just works in Swift, and you don't need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=880"
  },
  {
    "text": "to think about memory management yourself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=883"
  },
  {
    "text": "ARC automatically frees up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=886"
  },
  {
    "text": "the memory used by class instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=888"
  },
  {
    "text": "when those instances are no longer needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=890"
  },
  {
    "text": "To do this, the Swift compiler inserts a retain operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=892"
  },
  {
    "text": "any time a new reference is created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=897"
  },
  {
    "text": "and a release operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=899"
  },
  {
    "text": "whenever a new reference stops being used. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=901"
  },
  {
    "text": "This year, we introduced a new way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=904"
  },
  {
    "text": "to track references inside the compiler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=906"
  },
  {
    "text": "that allows the compiler to significantly reduce ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=908"
  },
  {
    "text": "the number of retain and release operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=911"
  },
  {
    "text": "We've seen measurable performance and code size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=914"
  },
  {
    "text": "improvements from this change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=917"
  },
  {
    "text": "We've added an Xcode setting, Optimize Object Lifetimes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=920"
  },
  {
    "text": "that will allow you to see the effect of this new, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=924"
  },
  {
    "text": "more aggressive ARC optimization on your code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=926"
  },
  {
    "text": "For more information on ARC, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=930"
  },
  {
    "text": "please check out the \"ARC in Swift\" session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=932"
  },
  {
    "text": "These are just some of the improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=936"
  },
  {
    "text": "brought to you by Swift 5.5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=938"
  },
  {
    "text": "Next, Tim will talk to you about Swift Concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=940"
  },
  {
    "text": "and other evolutions in the Swift language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=943"
  },
  {
    "text": "Thanks, Nicole. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=946"
  },
  {
    "text": "We're all very excited about Swift Concurrency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=948"
  },
  {
    "text": "but before I get to that, I want to discuss a number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=950"
  },
  {
    "text": "of other changes we've made to Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=953"
  },
  {
    "text": "to simplify and improve everyday programming.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=955"
  },
  {
    "text": "Here's a list of the ergonomic improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=959"
  },
  {
    "text": "we've made this year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=961"
  },
  {
    "text": "The SE numbers identify Swift Evolution proposals. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=962"
  },
  {
    "text": "Each of these proposals was written by a member ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=966"
  },
  {
    "text": "of the community, discussed on the Swift Evolution forum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=969"
  },
  {
    "text": "and approved by the Swift Core Team ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=972"
  },
  {
    "text": "before being accepted into the language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=974"
  },
  {
    "text": "All SE proposals, whether accepted, rejected, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=976"
  },
  {
    "text": "or still in discussion, can be found ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=980"
  },
  {
    "text": "in the Swift Evolution repository on GitHub. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=982"
  },
  {
    "text": "Let's look at a few of these changes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=985"
  },
  {
    "text": "First, Result Builders. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=987"
  },
  {
    "text": "When SwiftUI was first announced, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=990"
  },
  {
    "text": "it introduced a new syntax that could be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=993"
  },
  {
    "text": "to quickly and easily describe complex object hierarchies. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=995"
  },
  {
    "text": "This past year, that syntax was standardized and refined ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=999"
  },
  {
    "text": "through the Swift Evolution process so that it could be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1003"
  },
  {
    "text": "more easily used in a wide variety of contexts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1006"
  },
  {
    "text": "If you'd like to take advantage of this powerful technology, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1009"
  },
  {
    "text": "we have a session specifically devoted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1012"
  },
  {
    "text": "to using Result Builders. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1014"
  },
  {
    "text": "The Codable protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1017"
  },
  {
    "text": "is a convenient way to serialize your data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1019"
  },
  {
    "text": "but it's long suffered from a notable omission. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1021"
  },
  {
    "text": "Consider this two-case Enum. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1024"
  },
  {
    "text": "In order to make it conform to Codable, you used to have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1027"
  },
  {
    "text": "to manually implement all of this boilerplate. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1031"
  },
  {
    "text": "Now, you just need to declare the Codable conformance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1035"
  },
  {
    "text": "and the compiler will do all of that work for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1038"
  },
  {
    "text": "We also made some key improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1042"
  },
  {
    "text": "to Swift's type checker. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1044"
  },
  {
    "text": "As you know, type inference in Swift ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1046"
  },
  {
    "text": "means you can omit redundant type information. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1049"
  },
  {
    "text": "Here, it lets you shorten Coffee.regular ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1051"
  },
  {
    "text": "down to just .regular. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1054"
  },
  {
    "text": "But Enum-like structures are also represented in other ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1057"
  },
  {
    "text": "For example, you might have a collection of types ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1060"
  },
  {
    "text": "that conform to a protocol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1063"
  },
  {
    "text": "and want to use instances of those types in your API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1065"
  },
  {
    "text": "You can now refer to instances of those types ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1070"
  },
  {
    "text": "using the same dot-notation that you use for Enums, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1072"
  },
  {
    "text": "by declaring a few static properties on your protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1076"
  },
  {
    "text": "This is enabled by improvements to Swift's type checker ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1080"
  },
  {
    "text": "that allows it to reason more generally ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1083"
  },
  {
    "text": "about static properties in generic contexts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1085"
  },
  {
    "text": "including chained property references ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1088"
  },
  {
    "text": "such as the .large here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1090"
  },
  {
    "text": "This allows library authors to build sophisticated generic ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1092"
  },
  {
    "text": "data models with natural and easy-to-use Enum-like APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1096"
  },
  {
    "text": "Property wrappers were also improved this year.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1103"
  },
  {
    "text": "Property wrappers are a convenient tool ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1107"
  },
  {
    "text": "for applying common semantics to properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1109"
  },
  {
    "text": "Many of you have implemented your own property wrappers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1111"
  },
  {
    "text": "using the @propertyWrapper annotation on a struct. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1114"
  },
  {
    "text": "Here's an example that adds the requirement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1117"
  },
  {
    "text": "that the property not be empty. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1119"
  },
  {
    "text": "With the implementation of SE-0293, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1122"
  },
  {
    "text": "those same property wrappers can now be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1126"
  },
  {
    "text": "on function and closure parameters.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1128"
  },
  {
    "text": "Cumulatively, these and other changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1132"
  },
  {
    "text": "to the language can simplify a lot of common coding problems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1135"
  },
  {
    "text": "Let's look at them together in the context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1138"
  },
  {
    "text": "of a simple SwiftUI code sample. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1140"
  },
  {
    "text": "Here's a SwiftUI View that has a single property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1143"
  },
  {
    "text": "holding an array of settings, and a body that presents ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1147"
  },
  {
    "text": "a list of those settings, with a toggle next to each one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1151"
  },
  {
    "text": "Let's review this code and see how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1156"
  },
  {
    "text": "the new Swift 5.5 features can simplify it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1158"
  },
  {
    "text": "First, that Toggle() initializer is obviously duplicated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1162"
  },
  {
    "text": "This duplication used to be necessary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1166"
  },
  {
    "text": "but we've relaxed the use of #if to allow it to surround ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1169"
  },
  {
    "text": "postfix expressions, such as the toggleStyle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1172"
  },
  {
    "text": "modifiers here, which allows us ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1175"
  },
  {
    "text": "to factor out that redundancy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1177"
  },
  {
    "text": "SwiftUI has also been updated to take advantage of the new ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1180"
  },
  {
    "text": "type checker improvements I mentioned earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1183"
  },
  {
    "text": "So you can use natural dot-notation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1186"
  },
  {
    "text": "in many more places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1188"
  },
  {
    "text": "It's--it's a little awkward ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1191"
  },
  {
    "text": "to specify indexes for the settings array ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1193"
  },
  {
    "text": "and then index the array within the closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1195"
  },
  {
    "text": "We'd rather just step through the values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1198"
  },
  {
    "text": "Now you can pass the projected binding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1201"
  },
  {
    "text": "directly into the List constructor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1203"
  },
  {
    "text": "which can then iterate over the array values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1205"
  },
  {
    "text": "The new support for property wrapper arguments ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1208"
  },
  {
    "text": "lets us write the closure argument with a dollar sign, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1210"
  },
  {
    "text": "which will give us a bound setting in our closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1213"
  },
  {
    "text": "That, in turn, allows us to access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1216"
  },
  {
    "text": "both the wrapped value and the binding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1218"
  },
  {
    "text": "And finally, the Swift compiler now transparently converts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1221"
  },
  {
    "text": "between CGFloat and Double, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1225"
  },
  {
    "text": "which allows you to eliminate many redundant numeric ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1227"
  },
  {
    "text": "conversions when working with Apple platform APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1229"
  },
  {
    "text": "As you see, our continuing effort ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1233"
  },
  {
    "text": "to refine the core language is making the code you write ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1235"
  },
  {
    "text": "every day simpler than ever and creating more opportunities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1238"
  },
  {
    "text": "for library authors to build rich and easy-to-use APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1242"
  },
  {
    "text": "For more information about some of the many ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1246"
  },
  {
    "text": "that SwiftUI programming has been improved this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1248"
  },
  {
    "text": "please watch the \"What's new in SwiftUI\" session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1250"
  },
  {
    "text": "Of course, the highlight of Swift 5.5 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1254"
  },
  {
    "text": "is a set of interlocking features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1257"
  },
  {
    "text": "to support asynchronous and concurrent programming. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1260"
  },
  {
    "text": "I'll introduce these in a moment, but first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1263"
  },
  {
    "text": "let me briefly explain what I mean by \"asynchronous\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1265"
  },
  {
    "text": "and \"concurrent.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1268"
  },
  {
    "text": "Software projects are composed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1270"
  },
  {
    "text": "out of blocks of code that execute in some order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1272"
  },
  {
    "text": "In the simplest case, those blocks execute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1275"
  },
  {
    "text": "one after the other in a simple sequence. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1278"
  },
  {
    "text": "But other structures are common as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1280"
  },
  {
    "text": "For example, networking APIs are often designed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1282"
  },
  {
    "text": "in an asynchronous style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1286"
  },
  {
    "text": "In these APIs, after you've sent a request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1289"
  },
  {
    "text": "to the remote server, there may be a long delay ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1291"
  },
  {
    "text": "until you receive a response and need to do more work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1294"
  },
  {
    "text": "Ideally, your code would be suspended ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1297"
  },
  {
    "text": "during this delay so it does not use any resources ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1300"
  },
  {
    "text": "until you are able to act on the response. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1302"
  },
  {
    "text": "In contrast, concurrent code is when ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1306"
  },
  {
    "text": "you have two or more blocks of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1309"
  },
  {
    "text": "that you would like to have running at the same time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1311"
  },
  {
    "text": "These are often independent but related operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1314"
  },
  {
    "text": "Processing several frames of a video, for instance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1317"
  },
  {
    "text": "or running the next iteration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1319"
  },
  {
    "text": "of an ML classifier at the same time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1321"
  },
  {
    "text": "that you're updating the UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1323"
  },
  {
    "text": "with the previous set of results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1325"
  },
  {
    "text": "With those ideas in mind, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1327"
  },
  {
    "text": "let's look at a simple asynchronous programming example ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1330"
  },
  {
    "text": "without using Swift's new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1333"
  },
  {
    "text": "If you've done much iOS or macOS programming, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1337"
  },
  {
    "text": "you may have written code similar to this many times. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1340"
  },
  {
    "text": "This uses Foundation's URLSession class ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1344"
  },
  {
    "text": "to make a network call. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1346"
  },
  {
    "text": "The dataTask method is an asynchronous operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1347"
  },
  {
    "text": "You call it with a closure argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1350"
  },
  {
    "text": "When the result becomes available, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1352"
  },
  {
    "text": "your closure will be called with the results to process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1354"
  },
  {
    "text": "Using closures in this way to express asynchronous code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1357"
  },
  {
    "text": "results in a somewhat awkward order of operations, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1361"
  },
  {
    "text": "as you can see by walking through this code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1364"
  },
  {
    "text": "First, there's some initial setup, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1367"
  },
  {
    "text": "and the dataTask method gives us back a task handle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1369"
  },
  {
    "text": "Then we resume the task handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1373"
  },
  {
    "text": "to start the background operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1375"
  },
  {
    "text": "The fetchImage function actually returns at this point. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1377"
  },
  {
    "text": "Whoever called us must be ready to continue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1381"
  },
  {
    "text": "even though we haven't actually done the work ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1384"
  },
  {
    "text": "we were asked to do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1386"
  },
  {
    "text": "Later, after the network operation finishes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1388"
  },
  {
    "text": "this closure will have a chance to deal with the results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1391"
  },
  {
    "text": "Hopefully, everything goes well, and we can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1393"
  },
  {
    "text": "call our completion handler with the final result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1396"
  },
  {
    "text": "Besides the somewhat awkward order of execution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1400"
  },
  {
    "text": "using completion handlers also prevents us ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1403"
  },
  {
    "text": "from using try/catch error handling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1406"
  },
  {
    "text": "Notice how dataTask provides an extra error parameter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1408"
  },
  {
    "text": "to its completion handler and how we have to invoke ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1412"
  },
  {
    "text": "our completion handler with every possible error. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1415"
  },
  {
    "text": "To see how Swift 5.5 improves this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1418"
  },
  {
    "text": "let's take a look at this one line of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1421"
  },
  {
    "text": "Notice how this call returns a task, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1424"
  },
  {
    "text": "an abstract handle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1427"
  },
  {
    "text": "that represents the background operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1429"
  },
  {
    "text": "That's not really what we want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1431"
  },
  {
    "text": "We just want to get the data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1433"
  },
  {
    "text": "So let's push that idea a bit and see where we end up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1435"
  },
  {
    "text": "Since we're dealing with HTTP, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1439"
  },
  {
    "text": "we also need to capture some response metadata. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1441"
  },
  {
    "text": "So the function is really going to return a pair, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1443"
  },
  {
    "text": "with the actual data as the first item ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1446"
  },
  {
    "text": "and additional information as the second. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1448"
  },
  {
    "text": "By structuring this as a function call ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1451"
  },
  {
    "text": "that returns the data, we can now use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1453"
  },
  {
    "text": "try/catch error handling to eliminate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1455"
  },
  {
    "text": "a lot of the boilerplate from the previous example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1458"
  },
  {
    "text": "We just need a bit of syntax to tell the compiler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1461"
  },
  {
    "text": "that our function can be suspended ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1464"
  },
  {
    "text": "as soon as the data method begins ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1466"
  },
  {
    "text": "and that we won't be able to finish the assignment ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1468"
  },
  {
    "text": "until that operation has completed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1471"
  },
  {
    "text": "Which is exactly what the new await keyword does. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1474"
  },
  {
    "text": "Let's look at that in context. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1477"
  },
  {
    "text": "Here's what our fetchImage function looks like now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1480"
  },
  {
    "text": "As you see, this code is now much easier to follow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1483"
  },
  {
    "text": "Control flows from top to bottom, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1486"
  },
  {
    "text": "we no longer need nested closures, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1489"
  },
  {
    "text": "and we can use try/catch error handling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1491"
  },
  {
    "text": "The await keyword indicates a point ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1493"
  },
  {
    "text": "where this fetchImage function can be suspended, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1495"
  },
  {
    "text": "set aside to not run ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1498"
  },
  {
    "text": "until some event happens that allows it to continue.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1500"
  },
  {
    "text": "In this case, as soon as URLSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1505"
  },
  {
    "text": "initiates the request, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1508"
  },
  {
    "text": "our function will be suspended by the Swift runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1510"
  },
  {
    "text": "while the operation is carried out elsewhere. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1512"
  },
  {
    "text": "When the final result is ready, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1515"
  },
  {
    "text": "whether that's a successful response or a thrown error, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1516"
  },
  {
    "text": "only then will our function be resumed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1520"
  },
  {
    "text": "If it's a successful response, we'll complete ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1523"
  },
  {
    "text": "the initialization of the data and response variables. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1525"
  },
  {
    "text": "If it's a thrown error, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1528"
  },
  {
    "text": "we'll pass that back to whoever called us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1529"
  },
  {
    "text": "An asynchronous function does not use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1532"
  },
  {
    "text": "any resources while it's suspended. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1535"
  },
  {
    "text": "In particular, it's not blocking a thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1537"
  },
  {
    "text": "This allows the Swift runtime to reuse the thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1540"
  },
  {
    "text": "this function was running on for other work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1543"
  },
  {
    "text": "This allows a very few threads to be shared ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1546"
  },
  {
    "text": "among many asynchronous processes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1548"
  },
  {
    "text": "Syntactically, the async and await keywords ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1552"
  },
  {
    "text": "are used similarly to throws and try. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1556"
  },
  {
    "text": "async decorates the function declaration to indicate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1558"
  },
  {
    "text": "that this function must be compiled to support suspension. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1561"
  },
  {
    "text": "Use the await keyword to mark any call ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1565"
  },
  {
    "text": "to an async function, method, or closure. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1568"
  },
  {
    "text": "Of course, the full mechanism is a lot more interesting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1571"
  },
  {
    "text": "than what I've shown here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1574"
  },
  {
    "text": "You can watch the \"Meet async/await in Swift\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1575"
  },
  {
    "text": "and \"Swift concurrency: Behind the scenes\" sessions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1578"
  },
  {
    "text": "to learn more about how all of this works. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1580"
  },
  {
    "text": "Next, let's take a look at Swift's new concurrency support, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1583"
  },
  {
    "text": "which builds on the async/await concepts I just described.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1585"
  },
  {
    "text": "Here's a function that renders three different images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1590"
  },
  {
    "text": "and then combines them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1593"
  },
  {
    "text": "As written here, these operations are sequential. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1595"
  },
  {
    "text": "The background, foreground, and title images will be ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1599"
  },
  {
    "text": "rendered one after the other, with each one starting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1601"
  },
  {
    "text": "only after the previous one has completed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1604"
  },
  {
    "text": "We'd like for the rendering operations to occur in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1608"
  },
  {
    "text": "But just running them in different threads ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1611"
  },
  {
    "text": "isn't enough: we also need the merge operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1613"
  },
  {
    "text": "to be held, until we have all three results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1616"
  },
  {
    "text": "This is similar, in some respects, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1620"
  },
  {
    "text": "to the asynchronous coding I was just talking about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1621"
  },
  {
    "text": "So we mark this function \"async\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1624"
  },
  {
    "text": "so that it will be able to suspend if it needs to wait ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1626"
  },
  {
    "text": "for results that are being computed in other threads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1628"
  },
  {
    "text": "Next, we use the async let syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1631"
  },
  {
    "text": "to run the first two operations in parallel. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1634"
  },
  {
    "text": "async let looks a lot like a variable initialization, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1637"
  },
  {
    "text": "and that's basically what it is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1640"
  },
  {
    "text": "But this initialization will run in parallel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1642"
  },
  {
    "text": "with other code until you try to use the results. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1645"
  },
  {
    "text": "Because the background and foreground variables ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1648"
  },
  {
    "text": "are being initialized with async let, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1651"
  },
  {
    "text": "Swift's runtime will, if necessary, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1653"
  },
  {
    "text": "suspend the merge operation until those values are ready. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1656"
  },
  {
    "text": "We mark the merge function with the await keyword ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1660"
  },
  {
    "text": "to indicate this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1663"
  },
  {
    "text": "The most important point about this code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1666"
  },
  {
    "text": "is that the background tasks cannot outlive this function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1668"
  },
  {
    "text": "Put another way, this function cannot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1672"
  },
  {
    "text": "and will not return if either of the two background tasks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1674"
  },
  {
    "text": "is still running. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1677"
  },
  {
    "text": "If an error is thrown from anywhere ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1680"
  },
  {
    "text": "inside this function, the Swift runtime will ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1682"
  },
  {
    "text": "still wait for the background tasks to complete. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1684"
  },
  {
    "text": "Here, I've highlighted a try marker that indicates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1687"
  },
  {
    "text": "the computation of the title image may throw, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1690"
  },
  {
    "text": "but the same applies to all thrown errors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1693"
  },
  {
    "text": "even if they occur in a separate thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1695"
  },
  {
    "text": "In order to keep things responsive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1697"
  },
  {
    "text": "when there is a thrown error, the Swift runtime will signal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1699"
  },
  {
    "text": "unfinished tasks to give them a chance to complete early. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1701"
  },
  {
    "text": "Our session on structured concurrency ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1705"
  },
  {
    "text": "provides more details, including a full discussion ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1707"
  },
  {
    "text": "of this cancellation mechanism and more flexible alternatives ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1710"
  },
  {
    "text": "to the async let syntax I've discussed here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1713"
  },
  {
    "text": "In the previous section, I showed how Swift 5.5 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1716"
  },
  {
    "text": "makes it easy to run operations on multiple threads ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1720"
  },
  {
    "text": "in a disciplined, structured fashion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1723"
  },
  {
    "text": "Of course, that's not quite enough. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1725"
  },
  {
    "text": "Whenever two separate threads share data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1728"
  },
  {
    "text": "you run the risk that the data will be inconsistent, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1730"
  },
  {
    "text": "or even corrupted. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1733"
  },
  {
    "text": "Swift's new actor construct helps protect your data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1735"
  },
  {
    "text": "against such problems. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1738"
  },
  {
    "text": "Again, let's start with an example of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1739"
  },
  {
    "text": "you may have written yourself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1741"
  },
  {
    "text": "Here's a class that collects statistics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1744"
  },
  {
    "text": "It contains a counter, and various other code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1746"
  },
  {
    "text": "will call the increment method to update that counter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1749"
  },
  {
    "text": "whenever something interesting happens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1751"
  },
  {
    "text": "Unfortunately, this code doesn't work well ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1754"
  },
  {
    "text": "in a multi-threaded system. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1756"
  },
  {
    "text": "If two or more threads call the increment method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1758"
  },
  {
    "text": "at the same time, you can end up with a badly-corrupted count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1760"
  },
  {
    "text": "Changing this class into a Swift actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1764"
  },
  {
    "text": "protects against such corruption. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1767"
  },
  {
    "text": "Actors work by suspending any operation that might cause ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1770"
  },
  {
    "text": "data corruption until it's safe to make that particular change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1773"
  },
  {
    "text": "This means you generally need to use await ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1777"
  },
  {
    "text": "when you call an actor method from outside of the actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1780"
  },
  {
    "text": "Actors also work seamlessly with async/await. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1784"
  },
  {
    "text": "Marking this publish method as async allows it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1787"
  },
  {
    "text": "to be suspended while waiting on network operations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1790"
  },
  {
    "text": "While it's suspended, other methods can run ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1793"
  },
  {
    "text": "on this actor without waiting for the network operation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1795"
  },
  {
    "text": "to complete and without risk of data corruption. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1797"
  },
  {
    "text": "Actors are reference types, like classes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1801"
  },
  {
    "text": "but they obey a number of rules designed to ensure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1804"
  },
  {
    "text": "that actors are safe to use in a multi-threaded environment. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1806"
  },
  {
    "text": "By packaging your data into actors, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1810"
  },
  {
    "text": "you are clearly stating that you expect this data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1812"
  },
  {
    "text": "to be accessed concurrently ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1814"
  },
  {
    "text": "and that you want the Swift compiler and runtime ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1816"
  },
  {
    "text": "to coordinate access so that no corruption is possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1818"
  },
  {
    "text": "And, of course, we have a full session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1822"
  },
  {
    "text": "devoted specifically to Swift's new actor construct. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1825"
  },
  {
    "text": "There, you can find out how to take advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1827"
  },
  {
    "text": "of the full range of capabilities this brings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1829"
  },
  {
    "text": "Before we wrap up, let's talk a little bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1832"
  },
  {
    "text": "about the future of Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1836"
  },
  {
    "text": "We believe the three key concepts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1839"
  },
  {
    "text": "we've introduced in Swift 5.5-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1840"
  },
  {
    "text": "asynchronous functions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1843"
  },
  {
    "text": "structured concurrency, and actors-- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1844"
  },
  {
    "text": "are a good basis for creating safe ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1846"
  },
  {
    "text": "and high-performance code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1848"
  },
  {
    "text": "For Swift 6, we're already researching ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1851"
  },
  {
    "text": "for the compiler to catch more kinds of concurrency mistakes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1853"
  },
  {
    "text": "earlier in the development process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1856"
  },
  {
    "text": "and give you more detailed errors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1858"
  },
  {
    "text": "and guidance in fixing those issues. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1860"
  },
  {
    "text": "Our goal, quite simply, is to entirely eliminate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1862"
  },
  {
    "text": "the most common kinds of concurrency bugs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1866"
  },
  {
    "text": "in order to make asynchronous and concurrent programming ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1868"
  },
  {
    "text": "no more complex than any other kind of programming. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1871"
  },
  {
    "text": "And, of course, as we continue to improve ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1875"
  },
  {
    "text": "the compiler's understanding of these concepts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1878"
  },
  {
    "text": "we also expect code using these new constructs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1880"
  },
  {
    "text": "to become even more efficient than it is today.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1882"
  },
  {
    "text": "Swift is an open, collaborative effort that welcomes your input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1887"
  },
  {
    "text": "To help make Swift 6 even better, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1892"
  },
  {
    "text": "tell us about your experiences with Swift 5.5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1894"
  },
  {
    "text": "How well are these new features working for you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1897"
  },
  {
    "text": "in real-world app development? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1900"
  },
  {
    "text": "Try one of the compiler snapshots ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1902"
  },
  {
    "text": "that you can find on swift.org. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1904"
  },
  {
    "text": "We provide these snapshots so you can install them into Xcode ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1905"
  },
  {
    "text": "and try out new features as we're developing them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1909"
  },
  {
    "text": "By using these snapshots, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1912"
  },
  {
    "text": "you can help guide the next version of Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1913"
  },
  {
    "text": "The Swift forums are the lifeblood ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1917"
  },
  {
    "text": "of the project. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1919"
  },
  {
    "text": "Each of the features I've discussed started life ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1921"
  },
  {
    "text": "by being pitched on the Swift Evolution forum, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1923"
  },
  {
    "text": "where a diverse group of people helped to refine it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1925"
  },
  {
    "text": "into a working proposal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1928"
  },
  {
    "text": "We also have forums devoted to many other aspects of Swift, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1929"
  },
  {
    "text": "including a help area for new users and a place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1933"
  },
  {
    "text": "to exchange news of interest to the Swift community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1935"
  },
  {
    "text": "There are many other ways you can make Swift better, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1939"
  },
  {
    "text": "and we are eager to engage even more people, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1941"
  },
  {
    "text": "such as through the new Mentorship Program ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1944"
  },
  {
    "text": "that Nicole mentioned at the beginning of this session. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1946"
  },
  {
    "text": "The only requirement is a sincere desire ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1949"
  },
  {
    "text": "to help improve Swift for everyone in our community. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1951"
  },
  {
    "text": "I look forward to hearing from you, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1955"
  },
  {
    "text": "and I hope you enjoy the conference. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1957"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10192/?time=1958"
  }
]