[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1"
  },
  {
    "text": "♪ ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=4"
  },
  {
    "text": "Hello, I'm Aditya Krishnadevan, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=9"
  },
  {
    "text": "an engineer on the UIKit team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=11"
  },
  {
    "text": "At the core of many apps are lists or collection views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=13"
  },
  {
    "text": "Having super-smooth scrolling is a big part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=17"
  },
  {
    "text": "of making those apps feel great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=20"
  },
  {
    "text": "This video will set you up for success ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=22"
  },
  {
    "text": "when making blazing-fast lists and collection views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=25"
  },
  {
    "text": "We'll build this app here that uses collection views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=28"
  },
  {
    "text": "to display a list of image posts of some great travel destinations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=31"
  },
  {
    "text": "It's fairly simple at first glance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=35"
  },
  {
    "text": "with a photo of the destination and a couple of text labels. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=37"
  },
  {
    "text": "Throughout this video, we'll talk about how it's set up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=41"
  },
  {
    "text": "and how it achieves the performance that people expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=44"
  },
  {
    "text": "First, we'll learn how to start ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=47"
  },
  {
    "text": "from a strong foundation when using APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=49"
  },
  {
    "text": "like diffable data source and cell registrations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=51"
  },
  {
    "text": "We'll refresh our understanding of the life cycle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=54"
  },
  {
    "text": "of a collection view cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=57"
  },
  {
    "text": "We'll then talk about why you might not see perfectly-smooth scrolling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=59"
  },
  {
    "text": "and some advances in prefetching that can help. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=63"
  },
  {
    "text": "Finally, Patrick will explain how to correctly update cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=66"
  },
  {
    "text": "when their content comes in asynchronously, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=70"
  },
  {
    "text": "and how to use new UIImage API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=72"
  },
  {
    "text": "to get the absolute best scrolling performance on all devices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=74"
  },
  {
    "text": "Okay. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=78"
  },
  {
    "text": "Let's begin by talking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=80"
  },
  {
    "text": "about how the app structures its data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=81"
  },
  {
    "text": "The sample app retrieves a list of posts for display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=84"
  },
  {
    "text": "where each post is represented ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=87"
  },
  {
    "text": "by this DestinationPost struct. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=89"
  },
  {
    "text": "DestinationPost conforms to identifiable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=91"
  },
  {
    "text": "which means it has this ID property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=94"
  },
  {
    "text": "that stores its identifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=96"
  },
  {
    "text": "This is a unique identifier for each DestinationPost ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=98"
  },
  {
    "text": "that remains stable even if other properties change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=101"
  },
  {
    "text": "Diffable data source is built to store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=105"
  },
  {
    "text": "identifiers of items in your model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=107"
  },
  {
    "text": "and not the model objects themselves. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=109"
  },
  {
    "text": "So, in the sample app, the diffable data source is populated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=112"
  },
  {
    "text": "using the ID property here, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=115"
  },
  {
    "text": "and not the DestinationPost itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=117"
  },
  {
    "text": "Here's the diffable data source used in the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=120"
  },
  {
    "text": "Like we just discussed, it uses the DestinationPost.ID type ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=123"
  },
  {
    "text": "for its item identifiers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=127"
  },
  {
    "text": "The Section type here is an enum with one case, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=129"
  },
  {
    "text": "as the app has only one section. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=132"
  },
  {
    "text": "To populate the data source, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=135"
  },
  {
    "text": "the app first creates an empty snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=137"
  },
  {
    "text": "and appends the main section. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=139"
  },
  {
    "text": "Then, it fetches all the posts from its backing store ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=141"
  },
  {
    "text": "and appends their identifiers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=145"
  },
  {
    "text": "This way, if one of the other properties ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=147"
  },
  {
    "text": "of a DestinationPost changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=150"
  },
  {
    "text": "its representation in diffable data source remains stable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=152"
  },
  {
    "text": "as the identifier does not change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=155"
  },
  {
    "text": "The final step is to apply the snapshot to the data source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=158"
  },
  {
    "text": "Before iOS 15, applying a snapshot without animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=162"
  },
  {
    "text": "would be translated to a reloadData internally. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=166"
  },
  {
    "text": "That wasn't great for performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=169"
  },
  {
    "text": "as the collection view had to discard ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=171"
  },
  {
    "text": "and recreate all the cells on screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=173"
  },
  {
    "text": "From iOS 15 onwards, applying a snapshot without animation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=176"
  },
  {
    "text": "will only apply the differences ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=180"
  },
  {
    "text": "and not perform any extra work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=182"
  },
  {
    "text": "With iOS 15, diffable data source also gains ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=184"
  },
  {
    "text": "a new reconfigureItems method that makes it very easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=188"
  },
  {
    "text": "to update the contents of visible cells. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=191"
  },
  {
    "text": "We'll go through how it works later in this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=194"
  },
  {
    "text": "First, let's get the data from our data source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=197"
  },
  {
    "text": "into cells and onto the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=199"
  },
  {
    "text": "Cell registrations are a great way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=202"
  },
  {
    "text": "to keep all the configuration for each type of cell in one place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=204"
  },
  {
    "text": "and they give us convenient access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=208"
  },
  {
    "text": "to the identifiers from diffable data source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=210"
  },
  {
    "text": "UICollectionView maintains a reuse queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=213"
  },
  {
    "text": "for each of instance of a registration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=215"
  },
  {
    "text": "so ensure that you create registrations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=217"
  },
  {
    "text": "only once for each type of cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=220"
  },
  {
    "text": "Here's a simplified registration for cells in the app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=223"
  },
  {
    "text": "The postID that's passed in ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=226"
  },
  {
    "text": "is used to retrieve a DestinationPost ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=229"
  },
  {
    "text": "and an asset object containing the image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=231"
  },
  {
    "text": "The properties from the DestinationPost are used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=234"
  },
  {
    "text": "to set the title and image in the cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=237"
  },
  {
    "text": "To use a registration, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=240"
  },
  {
    "text": "call dequeueConfiguredReusableCell ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=242"
  },
  {
    "text": "inside the data source's cell provider. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=245"
  },
  {
    "text": "Note how the registration is created outside the cell provider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=248"
  },
  {
    "text": "and then used inside. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=251"
  },
  {
    "text": "This is important for performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=253"
  },
  {
    "text": "as creating a registration inside the provider would mean ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=255"
  },
  {
    "text": "that the collection view would never reuse any of its cells. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=258"
  },
  {
    "text": "Now that we understand how to configure a cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=262"
  },
  {
    "text": "we'll move on to when a cell is configured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=265"
  },
  {
    "text": "and what its life cycle is like. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=267"
  },
  {
    "text": "The life of a cell is composed of two phases: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=269"
  },
  {
    "text": "preparation and display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=272"
  },
  {
    "text": "The first step for preparation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=275"
  },
  {
    "text": "is fetching the cell to work on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=277"
  },
  {
    "text": "Whenever UICollectionView needs a cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=279"
  },
  {
    "text": "it asks for one from its data source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=282"
  },
  {
    "text": "If this is a diffable data source, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=284"
  },
  {
    "text": "it runs the cell provider and returns the result. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=286"
  },
  {
    "text": "When the cell provider runs, the collection view is asked ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=289"
  },
  {
    "text": "to dequeue a new cell using a registration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=293"
  },
  {
    "text": "If a cell exists in the reuse pool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=295"
  },
  {
    "text": "UICollectionView will call prepareForReuse on it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=298"
  },
  {
    "text": "and then dequeue the cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=300"
  },
  {
    "text": "If the reuse pool is empty, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=302"
  },
  {
    "text": "it will initialize a new cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=304"
  },
  {
    "text": "That cell is then passed in ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=307"
  },
  {
    "text": "to the configuration handler from the registration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=309"
  },
  {
    "text": "This is where apps set up the cell for display ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=312"
  },
  {
    "text": "for a given item identifier and index path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=315"
  },
  {
    "text": "The configured cell is returned to the collection view for the next step.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=318"
  },
  {
    "text": "The collection view queries the cell for its preferred layout attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=323"
  },
  {
    "text": "and sizes the cell appropriately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=327"
  },
  {
    "text": "At this point, the cell is fully prepared ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=329"
  },
  {
    "text": "and ready for phase two: display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=332"
  },
  {
    "text": "willDisplayCell is called on the delegate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=335"
  },
  {
    "text": "and the cell is made visible inside the UICollectionView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=337"
  },
  {
    "text": "The cell is now on screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=340"
  },
  {
    "text": "There are no more changes to its life cycle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=342"
  },
  {
    "text": "while it remains visible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=344"
  },
  {
    "text": "When it is scrolled off screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=346"
  },
  {
    "text": "didEndDisplaying is called for the cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=348"
  },
  {
    "text": "and it ends up right back in the reuse pool. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=351"
  },
  {
    "text": "From the reuse pool, a cell can be dequeued again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=353"
  },
  {
    "text": "repeating this process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=356"
  },
  {
    "text": "Let's now check what the app feels like with these basics in place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=358"
  },
  {
    "text": "The app is featuring Cusco in Peru, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=362"
  },
  {
    "text": "and Saint Lucia in the Caribbean. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=364"
  },
  {
    "text": "Let's scroll through the app and see some other destinations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=367"
  },
  {
    "text": "but notice how it doesn't scroll smoothly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=370"
  },
  {
    "text": "These interruptions during scrolling are called \"hitches.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=383"
  },
  {
    "text": "To understand what causes a hitch, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=387"
  },
  {
    "text": "let's first learn how an app updates the display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=389"
  },
  {
    "text": "For each frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=393"
  },
  {
    "text": "events such as touches are delivered to an app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=394"
  },
  {
    "text": "In response, it updates the properties of its views and layers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=397"
  },
  {
    "text": "For example, a scroll view's contentOffset ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=401"
  },
  {
    "text": "will change during a pan gesture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=404"
  },
  {
    "text": "changing the on-screen location of all the views it contains. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=405"
  },
  {
    "text": "As a result of those changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=409"
  },
  {
    "text": "the app's views and layers perform layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=410"
  },
  {
    "text": "This process is called a \"commit.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=413"
  },
  {
    "text": "Then, the layer tree is sent to the render server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=416"
  },
  {
    "text": "Each frame has a commit deadline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=420"
  },
  {
    "text": "This is the time by which all commits ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=422"
  },
  {
    "text": "for that frame need to finish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=424"
  },
  {
    "text": "The amount of time an app has to commit for each frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=426"
  },
  {
    "text": "depends on the refresh rate of the display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=429"
  },
  {
    "text": "For example, on an iPad Pro running ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=432"
  },
  {
    "text": "at a higher refresh rate of 120 Hz, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=435"
  },
  {
    "text": "apps have less time to finish work for each frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=437"
  },
  {
    "text": "compared to an iPhone running at 60 Hz. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=440"
  },
  {
    "text": "Here's a typical example of scrolling a list of cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=442"
  },
  {
    "text": "in a collection or table view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=446"
  },
  {
    "text": "When a new cell becomes visible, there's a longer commit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=448"
  },
  {
    "text": "during which the new cell is configured and performs layout. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=451"
  },
  {
    "text": "Then, there's a couple frames where it's just the existing cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=455"
  },
  {
    "text": "being moved around on screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=458"
  },
  {
    "text": "The commits for these frames are quick ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=461"
  },
  {
    "text": "because no new cells are needed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=464"
  },
  {
    "text": "Eventually, the scroll position changes enough ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=466"
  },
  {
    "text": "to cause a new cell to become visible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=469"
  },
  {
    "text": "and this pattern repeats. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=471"
  },
  {
    "text": "So what causes hitches like in the demo earlier? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=473"
  },
  {
    "text": "When the commit for a frame takes too long and misses the deadline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=477"
  },
  {
    "text": "those updates don't get incorporated into the intended frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=480"
  },
  {
    "text": "The display keeps the previous frame on screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=484"
  },
  {
    "text": "until the commit finishes, and this delayed frame can render. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=486"
  },
  {
    "text": "This is a commit hitch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=490"
  },
  {
    "text": "and is perceived as a momentary interruption when scrolling.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=492"
  },
  {
    "text": "To learn more about this and other types of hitches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=496"
  },
  {
    "text": "watch the \"Explore UI animation hitches\" video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=499"
  },
  {
    "text": "To help avoid these hitches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=502"
  },
  {
    "text": "UICollectionView and UITableView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=504"
  },
  {
    "text": "both have a brand-new cell prefetching mechanism in iOS 15.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=507"
  },
  {
    "text": "We're back here to the example of an expensive cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=512"
  },
  {
    "text": "causing a hitch during scrolling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=514"
  },
  {
    "text": "A key takeaway from this is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=516"
  },
  {
    "text": "that you typically don't need a cell every frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=518"
  },
  {
    "text": "We have a couple of frames with very short commits ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=521"
  },
  {
    "text": "doing minimal work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=524"
  },
  {
    "text": "Cell prefetching in iOS 15 takes advantage of this spare time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=526"
  },
  {
    "text": "by preparing the next cell right after finishing a short commit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=530"
  },
  {
    "text": "Then, when the cell is eventually needed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=535"
  },
  {
    "text": "it's just a matter of making it visible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=538"
  },
  {
    "text": "That's why the commit for the frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=540"
  },
  {
    "text": "where the prefetched cell becomes visible is very quick, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=541"
  },
  {
    "text": "because all of the work was done earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=544"
  },
  {
    "text": "The amount of time spent prefetching the cell is the same ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=548"
  },
  {
    "text": "as when it causing a hitch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=551"
  },
  {
    "text": "But because we're able to get a head-start, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=553"
  },
  {
    "text": "we're able to avoid a hitch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=555"
  },
  {
    "text": "Let's understand why this works ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=557"
  },
  {
    "text": "by stepping through each commit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=559"
  },
  {
    "text": "Before the prefetching happened, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=562"
  },
  {
    "text": "we performed the commit for this frame. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=563"
  },
  {
    "text": "Since no cells were needed, it was a quick commit, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=566"
  },
  {
    "text": "and it finished with lots of time left before the deadline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=569"
  },
  {
    "text": "Instead of just waiting around until the next frame, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=572"
  },
  {
    "text": "in iOS 15, the system recognizes the situation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=575"
  },
  {
    "text": "and uses the spare time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=578"
  },
  {
    "text": "to start prefetching the next cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=580"
  },
  {
    "text": "Now, the following frame is where things get interesting. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=583"
  },
  {
    "text": "Because the cell being prefetched is expensive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=586"
  },
  {
    "text": "it actually causes the commit for that frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=589"
  },
  {
    "text": "to start later than normal. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=591"
  },
  {
    "text": "However, even though that commit starts late, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=593"
  },
  {
    "text": "it still finishes well before its deadline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=596"
  },
  {
    "text": "because it's quick. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=598"
  },
  {
    "text": "Compare this to the illustration we saw earlier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=600"
  },
  {
    "text": "without prefetching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=603"
  },
  {
    "text": "Notice how there are no longer any commits missing deadlines, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=605"
  },
  {
    "text": "and so, there are no more hitches with cell prefetching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=608"
  },
  {
    "text": "This means that your apps get up to twice the amount of time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=612"
  },
  {
    "text": "to prepare each cell, without causing any hitches. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=615"
  },
  {
    "text": "What's more, all you need to do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=618"
  },
  {
    "text": "to get this great new functionality is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=621"
  },
  {
    "text": "to build your app with the iOS 15 SDK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=623"
  },
  {
    "text": "When I last ran the demo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=626"
  },
  {
    "text": "the app was built with the iOS 14 SDK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=628"
  },
  {
    "text": "Let's check out scrolling in the app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=631"
  },
  {
    "text": "when built with the iOS 15 SDK.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=633"
  },
  {
    "text": "This is great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=641"
  },
  {
    "text": "Looks like prefetching is doing exactly what we'd want. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=642"
  },
  {
    "text": "Scrolling is now perfectly smooth, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=645"
  },
  {
    "text": "and we didn't have to change a single line of code.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=647"
  },
  {
    "text": "Remember, all you need to do is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=651"
  },
  {
    "text": "to build your app using the iOS 15 SDK. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=654"
  },
  {
    "text": "For UICollectionView, this new prefetching expands ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=656"
  },
  {
    "text": "on what was introduced in iOS 10. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=660"
  },
  {
    "text": "Cell prefetching is now supported for lists, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=662"
  },
  {
    "text": "as well as all other compositional layouts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=665"
  },
  {
    "text": "This great new prefetching is now ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=667"
  },
  {
    "text": "even enabled in UITableView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=670"
  },
  {
    "text": "Prefetching can improve scrolling performance by eliminating hitches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=672"
  },
  {
    "text": "but it will also reduce power usage and increase battery life. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=675"
  },
  {
    "text": "If your cells are quick to prepare, the system can use the extra time to run ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=679"
  },
  {
    "text": "in a more energy-efficient state and still avoid hitches. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=683"
  },
  {
    "text": "So, even if you don't notice any hitches, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=686"
  },
  {
    "text": "it's still very important to make your cell configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=689"
  },
  {
    "text": "and layout implementations as efficient as possible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=692"
  },
  {
    "text": "Let's now talk about how prefetching affects cell life cycle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=696"
  },
  {
    "text": "This is the life cycle we talked about earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=700"
  },
  {
    "text": "without prefetching, with the two distinct phases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=702"
  },
  {
    "text": "When a cell is prefetched, it is the preparation phase ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=706"
  },
  {
    "text": "that is executed ahead of the cell being required on-screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=709"
  },
  {
    "text": "To take full advantage of prefetching, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=713"
  },
  {
    "text": "a cell must be fully configured in this phase. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=715"
  },
  {
    "text": "Don't wait until a cell is visible to perform any heavy work. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=718"
  },
  {
    "text": "When a cell returns to the collection view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=722"
  },
  {
    "text": "it is sized to get its preferred layout attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=724"
  },
  {
    "text": "also as part of the prefetch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=726"
  },
  {
    "text": "After being prefetched, there is now this in-between state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=729"
  },
  {
    "text": "where a cell is waiting to be displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=733"
  },
  {
    "text": "Given this new phase, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=736"
  },
  {
    "text": "there are two important considerations for apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=738"
  },
  {
    "text": "It is possible for a prepared cell to never be displayed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=741"
  },
  {
    "text": "which could happen if the user suddenly changed the scroll direction. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=745"
  },
  {
    "text": "Then, once a cell is displayed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=749"
  },
  {
    "text": "it can go right back into the waiting state ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=751"
  },
  {
    "text": "after it goes off screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=753"
  },
  {
    "text": "The same cell can be displayed more than once for the same index path. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=756"
  },
  {
    "text": "It's no longer the case that a cell will be immediately added ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=760"
  },
  {
    "text": "to the reuse pool when it ends displaying. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=763"
  },
  {
    "text": "Prefetching helps us achieve smooth scrolling, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=766"
  },
  {
    "text": "but only because it gives us more time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=768"
  },
  {
    "text": "On other devices with a higher frame rate, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=771"
  },
  {
    "text": "it's still possible that the app is going to have hitches during scrolling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=774"
  },
  {
    "text": "Patrick will now give you more detail ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=777"
  },
  {
    "text": "about how the app configures its cells, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=779"
  },
  {
    "text": "and also talk about strategies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=782"
  },
  {
    "text": "to reduce the amount of time per commit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=783"
  },
  {
    "text": "when displaying images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=785"
  },
  {
    "text": "Thanks, Adi. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=788"
  },
  {
    "text": "Hi, I'm Patrick from the High-Level Performance team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=789"
  },
  {
    "text": "Now, I'll guide us through ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=792"
  },
  {
    "text": "updating existing cells in the sample app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=794"
  },
  {
    "text": "and then how to display images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=796"
  },
  {
    "text": "with the best-possible performance, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=798"
  },
  {
    "text": "utilizing some new APIs in iOS 15. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=800"
  },
  {
    "text": "The sample app was built with local image files on disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=803"
  },
  {
    "text": "As we scroll the app, the cells are prepared off screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=807"
  },
  {
    "text": "and the images within them are loaded ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=811"
  },
  {
    "text": "from the file system immediately. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=813"
  },
  {
    "text": "Now, we wan display images stored on a remote server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=815"
  },
  {
    "text": "So, when cells scroll in, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=820"
  },
  {
    "text": "we may not have the image to show in the image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=821"
  },
  {
    "text": "When the image view is first visible, it will be blank ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=825"
  },
  {
    "text": "and only filled in once the server request completes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=828"
  },
  {
    "text": "Let's take a look at extending ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=832"
  },
  {
    "text": "our registration's configuration handler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=834"
  },
  {
    "text": "to support this new approach. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=836"
  },
  {
    "text": "Here in the registration's configuration handler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=837"
  },
  {
    "text": "we already fetched the asset from the asset store. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=841"
  },
  {
    "text": "The store will always return an image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=844"
  },
  {
    "text": "but it may not be the full asset. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=847"
  },
  {
    "text": "It might need to be downloaded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=849"
  },
  {
    "text": "The asset object indicates this ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=851"
  },
  {
    "text": "with the isPlaceholder property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=854"
  },
  {
    "text": "When this is true, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=856"
  },
  {
    "text": "we will ask the asset store to download the full image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=858"
  },
  {
    "text": "When the load operation completes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=861"
  },
  {
    "text": "it's time to update the cell's image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=863"
  },
  {
    "text": "Here, we take the existing cell object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=866"
  },
  {
    "text": "and set the asset on its image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=870"
  },
  {
    "text": "This is a mistake. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=873"
  },
  {
    "text": "Cells are reused for different destinations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=875"
  },
  {
    "text": "and by the time the asset store loads the final asset, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=877"
  },
  {
    "text": "the cell object we have captured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=880"
  },
  {
    "text": "could be configured for a different post. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=882"
  },
  {
    "text": "Instead of updating the cell directly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=885"
  },
  {
    "text": "we must inform the collection view's data source ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=887"
  },
  {
    "text": "of the needed update.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=890"
  },
  {
    "text": "iOS 15 introduces ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=893"
  },
  {
    "text": "the reconfigureItems snapshot method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=895"
  },
  {
    "text": "Calling reconfigureItems on a prepared cell ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=898"
  },
  {
    "text": "will rerun its registration's configuration handler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=901"
  },
  {
    "text": "Use this instead of reloadItems ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=904"
  },
  {
    "text": "because it reuses the item's existing cell, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=907"
  },
  {
    "text": "rather than dequeuing and configuring a new cell. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=909"
  },
  {
    "text": "In our sample app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=913"
  },
  {
    "text": "we'll declare a setPostNeedsUpdate method, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=915"
  },
  {
    "text": "which calls reconfigureItems on the ID passed in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=918"
  },
  {
    "text": "Now, back in our registration's configuration handler, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=922"
  },
  {
    "text": "when the image is a placeholder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=926"
  },
  {
    "text": "we will download the full-size asset ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=928"
  },
  {
    "text": "and call the new method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=930"
  },
  {
    "text": "reconfigureItems will then call this handler again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=932"
  },
  {
    "text": "but now, fetchByID will return the full asset ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=936"
  },
  {
    "text": "and not the placeholder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=940"
  },
  {
    "text": "This allows us to keep all our view-updating code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=942"
  },
  {
    "text": "in one place and asynchronously update our cells ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=946"
  },
  {
    "text": "once we have data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=949"
  },
  {
    "text": "To maximize prepare time, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=952"
  },
  {
    "text": "we can also use our downloadAsset method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=954"
  },
  {
    "text": "inside our prefetchingDataSource. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=956"
  },
  {
    "text": "Data-source prefetching is a great place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=959"
  },
  {
    "text": "to kick off network downloads for a collection-view item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=961"
  },
  {
    "text": "It gives more time to download the asset and have it ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=964"
  },
  {
    "text": "before the cell is visible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=968"
  },
  {
    "text": "reducing the time users see placeholder content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=969"
  },
  {
    "text": "Let's take a look at how this looks in our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=974"
  },
  {
    "text": "It looks fine, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=978"
  },
  {
    "text": "but there are visible hitches while scrolling. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=979"
  },
  {
    "text": "They also appear to coincide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=982"
  },
  {
    "text": "with when new images are displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=984"
  },
  {
    "text": "When a new cell is prepared, there is no hitching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=987"
  },
  {
    "text": "It's only when an image is updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=990"
  },
  {
    "text": "with the full-resolution image that we hitch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=993"
  },
  {
    "text": "That's because all images take time to decode for display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=996"
  },
  {
    "text": "and some images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1000"
  },
  {
    "text": "like the larger non-placeholder assets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1001"
  },
  {
    "text": "are too large to be decoded in time for display. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1004"
  },
  {
    "text": "When the cell registration's configuration handler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1007"
  },
  {
    "text": "is first called and the asset is a placeholder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1011"
  },
  {
    "text": "the code begins an async request ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1014"
  },
  {
    "text": "for the full-size image ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1016"
  },
  {
    "text": "and completes its configuration. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1018"
  },
  {
    "text": "When the asset is finally downloaded later, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1020"
  },
  {
    "text": "the cell configuration handler is rerun ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1023"
  },
  {
    "text": "with the final image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1026"
  },
  {
    "text": "When an image view tries to commit a new image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1028"
  },
  {
    "text": "it must first prepare the image for display ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1031"
  },
  {
    "text": "on the main thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1034"
  },
  {
    "text": "This can take a long time, and there's a hitch ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1036"
  },
  {
    "text": "when the app missed its commit deadline. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1039"
  },
  {
    "text": "Image preparation is a mandatory process ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1041"
  },
  {
    "text": "that all images must undergo to be displayed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1044"
  },
  {
    "text": "The render server ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1050"
  },
  {
    "text": "can only display images that are bitmaps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1051"
  },
  {
    "text": "which means they are raw pixel data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1054"
  },
  {
    "text": "Images come in many different formats, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1057"
  },
  {
    "text": "like PNG, HEIC, and JPEG, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1059"
  },
  {
    "text": "which are compressed and must be processed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1063"
  },
  {
    "text": "and unpacked to be displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1065"
  },
  {
    "text": "Image views do this processing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1068"
  },
  {
    "text": "when it commits a new image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1070"
  },
  {
    "text": "and it happens on the main thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1072"
  },
  {
    "text": "Ideally, we could prepare the image in advance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1075"
  },
  {
    "text": "and only update the UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1078"
  },
  {
    "text": "when it's finally completed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1081"
  },
  {
    "text": "That way, we never block the main thread ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1083"
  },
  {
    "text": "and do not hitch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1086"
  },
  {
    "text": "iOS 15 introduces ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1088"
  },
  {
    "text": "the image preparation APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1090"
  },
  {
    "text": "giving you control over where ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1092"
  },
  {
    "text": "and when image preparation happens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1094"
  },
  {
    "text": "These APIs produce a new UIImage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1097"
  },
  {
    "text": "which only contains the pixel data ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1100"
  },
  {
    "text": "that the renderer needs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1102"
  },
  {
    "text": "There is no additional work needed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1104"
  },
  {
    "text": "once it's set on an image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1107"
  },
  {
    "text": "It comes in two forms: a synchronous one, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1109"
  },
  {
    "text": "which you can run on any thread, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1112"
  },
  {
    "text": "and asynchronous ones, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1114"
  },
  {
    "text": "which run on an internal UIKit serial queue.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1116"
  },
  {
    "text": "To use it, we take a UIImage we've created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1121"
  },
  {
    "text": "and set a placeholder image on our image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1125"
  },
  {
    "text": "Then, calling the new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1128"
  },
  {
    "text": "kicks off the preparation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1130"
  },
  {
    "text": "in the background on the larger image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1132"
  },
  {
    "text": "When it completes, we can just set it on the image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1135"
  },
  {
    "text": "Prepared images solve a large problem ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1139"
  },
  {
    "text": "in any image-heavy app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1142"
  },
  {
    "text": "but they also come with some considerations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1144"
  },
  {
    "text": "The prepared images contain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1147"
  },
  {
    "text": "the raw pixel data from the original image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1149"
  },
  {
    "text": "It will remain free to display in an image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1152"
  },
  {
    "text": "as long as it's retained in memory. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1155"
  },
  {
    "text": "But this also means it takes up a lot of memory, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1158"
  },
  {
    "text": "and they should be cached sparingly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1161"
  },
  {
    "text": "Finally, because of their format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1163"
  },
  {
    "text": "they are not ideal for disk storage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1165"
  },
  {
    "text": "Instead, save the original asset to disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1168"
  },
  {
    "text": "One last consideration is how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1172"
  },
  {
    "text": "image preparation can utilize prefetching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1174"
  },
  {
    "text": "Prefetching gives extra time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1177"
  },
  {
    "text": "for the image to be downloaded and prepared. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1180"
  },
  {
    "text": "Giving the process more time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1182"
  },
  {
    "text": "means the users will not see the placeholder for long, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1185"
  },
  {
    "text": "and probably not at all. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1188"
  },
  {
    "text": "In the sample app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1191"
  },
  {
    "text": "we already have an asynchronous path for image retrieval. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1192"
  },
  {
    "text": "After the download completes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1196"
  },
  {
    "text": "we can then prepare the asset ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1198"
  },
  {
    "text": "before calling the completion handler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1200"
  },
  {
    "text": "These assets are large, but also valuable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1203"
  },
  {
    "text": "so once the image is prepared, we want to cache it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1206"
  },
  {
    "text": "Our image cache uses the image's size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1210"
  },
  {
    "text": "to estimate the memory use of the prepared image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1213"
  },
  {
    "text": "Now, when a cell asks for an asset, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1216"
  },
  {
    "text": "we check that cache ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1219"
  },
  {
    "text": "before fetching it from our server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1221"
  },
  {
    "text": "If we had smaller images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1223"
  },
  {
    "text": "we would be able to cache more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1225"
  },
  {
    "text": "Images can be large, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1227"
  },
  {
    "text": "and iOS 15 introduces a similar API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1229"
  },
  {
    "text": "for preparing thumbnails of images.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1232"
  },
  {
    "text": "These can scale and prepare an image ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1236"
  },
  {
    "text": "to a smaller size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1238"
  },
  {
    "text": "It ensures that the image is read and processed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1240"
  },
  {
    "text": "with its destination size in mind, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1244"
  },
  {
    "text": "saving a lot of CPU time and memory.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1246"
  },
  {
    "text": "You use it just like the Image Preparation APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1251"
  },
  {
    "text": "First, take a UIImage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1255"
  },
  {
    "text": "and set a placeholder image on the image view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1257"
  },
  {
    "text": "Then, call the new resizing API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1260"
  },
  {
    "text": "with the view's size as the target size for the thumbnail.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1263"
  },
  {
    "text": "When its prepared, just update the image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1268"
  },
  {
    "text": "with the new thumbnail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1271"
  },
  {
    "text": "Along with the Image Preparation APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1273"
  },
  {
    "text": "it's much easier to accelerate images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1275"
  },
  {
    "text": "and avoid hitches ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1278"
  },
  {
    "text": "in any app with iOS 15. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1279"
  },
  {
    "text": "When working with images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1282"
  },
  {
    "text": "focus on having an asynchronous API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1284"
  },
  {
    "text": "that can update the UI when an image is ready. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1287"
  },
  {
    "text": "In the meantime, use a placeholder image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1291"
  },
  {
    "text": "which is small or cheap enough ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1293"
  },
  {
    "text": "to display synchronously. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1296"
  },
  {
    "text": "When used with prefetching and reconfigureItems, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1298"
  },
  {
    "text": "showing asynchronous content in collection and list views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1301"
  },
  {
    "text": "has never been easier or more performant.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1305"
  },
  {
    "text": "To get started with fast collection and table views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1309"
  },
  {
    "text": "first, build your app with the iOS 15 SDK ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1312"
  },
  {
    "text": "to unlock many new optimizations. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1316"
  },
  {
    "text": "Particularly, ensure you validate the behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1318"
  },
  {
    "text": "of your collection and table views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1322"
  },
  {
    "text": "with the new prefetching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1324"
  },
  {
    "text": "All the new APIs demonstrated here ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1326"
  },
  {
    "text": "can be found in the sample code for this talk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1328"
  },
  {
    "text": "Check it out and make sure to adopt the image preparation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1331"
  },
  {
    "text": "and resizing APIs across your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1335"
  },
  {
    "text": "This will ensure your collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1337"
  },
  {
    "text": "and table views are blazing fast. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1339"
  },
  {
    "text": "Thanks for watching. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1342"
  },
  {
    "text": "[upbeat music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10252/?time=1343"
  }
]