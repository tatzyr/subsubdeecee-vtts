[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=2"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=6"
  },
  {
    "text": "Tanu Singhal: Hello, everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=9"
  },
  {
    "text": "My name is Tanu, and I'm a SwiftUI engineer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=10"
  },
  {
    "text": "on the Apple TV team.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=12"
  },
  {
    "text": "Today, we'll talk about some new ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=15"
  },
  {
    "text": "of working with focus in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=17"
  },
  {
    "text": "One of the great things about SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=21"
  },
  {
    "text": "is how much functionality you get for free, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=22"
  },
  {
    "text": "right out of the box.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=25"
  },
  {
    "text": "Built-in components base their default behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=27"
  },
  {
    "text": "on SwiftUI's knowledge of platform conventions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=29"
  },
  {
    "text": "resulting in an overall experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=32"
  },
  {
    "text": "that is sensible and familiar in various contexts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=34"
  },
  {
    "text": "We see this intelligence at work when we look at focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=38"
  },
  {
    "text": "Focus is the system that lets your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=44"
  },
  {
    "text": "take input from keyboards, remotes, game controllers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=46"
  },
  {
    "text": "accessible switch controls, and other sources that -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=50"
  },
  {
    "text": "unlike touch inputs -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=54"
  },
  {
    "text": "are not tied to specific screen coordinates.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=55"
  },
  {
    "text": "Often, the focus view is drawn with special embellishments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=60"
  },
  {
    "text": "making it easy for people to predict ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=63"
  },
  {
    "text": "where their input will be directed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=66"
  },
  {
    "text": "For the most part, SwiftUI manages focus on your behalf.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=69"
  },
  {
    "text": "When someone clicks in a text field ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=74"
  },
  {
    "text": "or presses the Tab key ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=75"
  },
  {
    "text": "or when someone taps an adjustable watch complication ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=77"
  },
  {
    "text": "or swipes on the Siri Remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=80"
  },
  {
    "text": "SwiftUI decides how focus is affected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=82"
  },
  {
    "text": "and how its next placement is indicated.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=85"
  },
  {
    "text": "This is great for simple cases ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=89"
  },
  {
    "text": "where the right behavior can be decided by convention.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=91"
  },
  {
    "text": "There are, however, some cases where you may want ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=95"
  },
  {
    "text": "a more accelerated experience around focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=98"
  },
  {
    "text": "In this example from the Notes app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=103"
  },
  {
    "text": "when we select the new note button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=105"
  },
  {
    "text": "we want focus to automatically move to the newly created note.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=108"
  },
  {
    "text": "This type of behavior certainly requires custom implementation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=112"
  },
  {
    "text": "Over here, we have a scenario in which we want to move focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=118"
  },
  {
    "text": "from a button on the bottom-left side ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=121"
  },
  {
    "text": "to content near the top of the screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=124"
  },
  {
    "text": "when a user swipes right on the remote.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=126"
  },
  {
    "text": "Since the Music button and the App tiles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=129"
  },
  {
    "text": "are not adjacent to each other, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=131"
  },
  {
    "text": "SwiftUI cannot automatically guess where to move focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=133"
  },
  {
    "text": "It needs more information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=138"
  },
  {
    "text": "before distant focus targets can be linked.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=139"
  },
  {
    "text": "And in this example from iOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=143"
  },
  {
    "text": "we simply want the keyboard to go away ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=145"
  },
  {
    "text": "when a user selects an event.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=147"
  },
  {
    "text": "Thanks to new APIs we're introducing this year, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=150"
  },
  {
    "text": "you can now do all of this in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=153"
  },
  {
    "text": "In this talk, we will focus on two kinds of use cases.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=156"
  },
  {
    "text": "We'll see how we can move focus to a particular view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=160"
  },
  {
    "text": "without any direct input, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=164"
  },
  {
    "text": "and we'll make large navigation targets out of small views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=166"
  },
  {
    "text": "so that nothing is out of the user's reach.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=170"
  },
  {
    "text": "Let's first look an example where we may want to move focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=174"
  },
  {
    "text": "to help direct the user's attention.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=178"
  },
  {
    "text": "We're so ready to go on a vacation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=181"
  },
  {
    "text": "and we've started working on a vacation planner app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=183"
  },
  {
    "text": "This app works across all Apple platforms, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=186"
  },
  {
    "text": "and it allows you to browse destinations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=189"
  },
  {
    "text": "as well as book trips.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=192"
  },
  {
    "text": "When you launch this app, we present an email field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=194"
  },
  {
    "text": "a password field, and a Sign in with Apple button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=197"
  },
  {
    "text": "so you can log into your account.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=200"
  },
  {
    "text": "On this login screen, if we discover that the email entered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=203"
  },
  {
    "text": "was not in the correct format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=206"
  },
  {
    "text": "we want to programmatically move focus back to the email field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=209"
  },
  {
    "text": "To accomplish this behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=213"
  },
  {
    "text": "we'll use the FocusState APIs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=215"
  },
  {
    "text": "The existing code for our login view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=218"
  },
  {
    "text": "contains a VStack that has a TextField and a SecureField.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=220"
  },
  {
    "text": "Now, we'll add a FocusState property wrapper to this view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=226"
  },
  {
    "text": "FocusState is a new API that we have introduced this year! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=230"
  },
  {
    "text": "This is a special type of state that changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=235"
  },
  {
    "text": "depending on the current location of focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=237"
  },
  {
    "text": "We'll use FocusState to hold an identifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=241"
  },
  {
    "text": "for the field that is focused.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=243"
  },
  {
    "text": "The focusedField variable is of an enum type that we created ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=246"
  },
  {
    "text": "for this example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=249"
  },
  {
    "text": "You can use strings, integers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=250"
  },
  {
    "text": "or any other hashable value type for FocusState.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=252"
  },
  {
    "text": "Note that the FocusState value is optional.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=257"
  },
  {
    "text": "In general, types used for FocusState ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=260"
  },
  {
    "text": "must be both hashable and optional, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=263"
  },
  {
    "text": "with nil used for cases where focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=266"
  },
  {
    "text": "is in an unrelated part of the screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=268"
  },
  {
    "text": "Next we'll add a focused modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=272"
  },
  {
    "text": "to the TextField and the SecureField.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=275"
  },
  {
    "text": "Also new this year, this modifier creates a link ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=278"
  },
  {
    "text": "between the placement of focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=281"
  },
  {
    "text": "and the value of the focusedField property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=283"
  },
  {
    "text": "This simple link is a powerful tool, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=286"
  },
  {
    "text": "because it means you can use the current placement of focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=289"
  },
  {
    "text": "for making other decisions in your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=292"
  },
  {
    "text": "We can watch that play out in our login form.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=295"
  },
  {
    "text": "When the screen first appears, nothing has focus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=299"
  },
  {
    "text": "so the value of focusedField is nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=302"
  },
  {
    "text": "But if someone then taps on the email text field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=306"
  },
  {
    "text": "that field gains focus and the keyboard appears.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=309"
  },
  {
    "text": "Since the focused text field is bound to a FocusState value, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=314"
  },
  {
    "text": "the value of focusedField will automatically be updated ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=319"
  },
  {
    "text": "to hold the identifier for the email text field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=323"
  },
  {
    "text": "The link between focus placement and FocusState works both ways.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=327"
  },
  {
    "text": "This means that we are not limited ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=331"
  },
  {
    "text": "to reacting to focus changes; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=333"
  },
  {
    "text": "we can move focus programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=335"
  },
  {
    "text": "just by updating our FocusState property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=337"
  },
  {
    "text": "So for example, if we programmatically set the value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=341"
  },
  {
    "text": "of focusedField to .password, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=344"
  },
  {
    "text": "SwiftUI will know that our SecureField ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=348"
  },
  {
    "text": "is associated with the new value we're setting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=350"
  },
  {
    "text": "and focus will automatically move to the password field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=354"
  },
  {
    "text": "Now that our focus bindings are in place, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=358"
  },
  {
    "text": "we can put them to work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=361"
  },
  {
    "text": "In the Vacation Planner app, when a user submits their data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=366"
  },
  {
    "text": "we want to validate it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=370"
  },
  {
    "text": "If the email is not in the expected format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=371"
  },
  {
    "text": "we set the focusedField to email.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=375"
  },
  {
    "text": "This will send focus back to the email text field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=377"
  },
  {
    "text": "if it's not there already.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=381"
  },
  {
    "text": "Further, we'd like to highlight the email field with a border ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=384"
  },
  {
    "text": "if the email was invalid.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=387"
  },
  {
    "text": "We want this border to appear ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=390"
  },
  {
    "text": "only while focus is on the email field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=391"
  },
  {
    "text": "To do that, we can easily read the value of focusedField ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=395"
  },
  {
    "text": "when we create the border.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=399"
  },
  {
    "text": "Let's see how this all comes together.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=402"
  },
  {
    "text": "Note the email field doesn't have a valid address.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=405"
  },
  {
    "text": "Focus is currently on the password field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=408"
  },
  {
    "text": "When we hit Go, the onSubmit callback is triggered ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=411"
  },
  {
    "text": "where the focusedField is set.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=415"
  },
  {
    "text": "This causes the cursor to move back to the email field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=417"
  },
  {
    "text": "While the email field is focused, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=421"
  },
  {
    "text": "we see the red border around it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=423"
  },
  {
    "text": "However, once we move focus away from the email field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=425"
  },
  {
    "text": "our focusedField is no longer equal to the email identifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=429"
  },
  {
    "text": "and so the red border disappears.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=433"
  },
  {
    "text": "In the scenario where all the form data is valid, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=437"
  },
  {
    "text": "we want to simply dismiss the keyboard.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=440"
  },
  {
    "text": "To dismiss the keyboard, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=443"
  },
  {
    "text": "we will set our FocusState variable to nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=444"
  },
  {
    "text": "Since the focusedField is an optional, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=448"
  },
  {
    "text": "we use nil to indicate that focus has left this view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=450"
  },
  {
    "text": "In the video, notice that the email address has been updated.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=455"
  },
  {
    "text": "This time when we submit, the keyboard gets dismissed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=459"
  },
  {
    "text": "since we have set the FocusState variable to nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=463"
  },
  {
    "text": "We've seen how it can be helpful ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=466"
  },
  {
    "text": "to programmatically control focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=468"
  },
  {
    "text": "when our app has text fields.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=470"
  },
  {
    "text": "However, FocusStates are not just for text fields.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=472"
  },
  {
    "text": "They can be used to programmatically control focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=476"
  },
  {
    "text": "for any focusable view on iOS, tvOS, watchOS, or macOS! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=478"
  },
  {
    "text": "In the next section, we'll discuss the role ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=485"
  },
  {
    "text": "of focus-based navigation in our apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=488"
  },
  {
    "text": "Let's take a look at the tvOS version ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=491"
  },
  {
    "text": "of our Vacation Planner app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=494"
  },
  {
    "text": "We have leveraged the extra space on TV ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=496"
  },
  {
    "text": "by adding photos from some destinations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=498"
  },
  {
    "text": "that you may want to visit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=500"
  },
  {
    "text": "You can view more photos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=503"
  },
  {
    "text": "by clicking the Browse Photos button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=505"
  },
  {
    "text": "even before you've logged in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=507"
  },
  {
    "text": "Notice that focus is initially on the Email field.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=510"
  },
  {
    "text": "If we swipe right on the Siri Remote, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=514"
  },
  {
    "text": "we'd expect focus to move to the Browse Photos button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=517"
  },
  {
    "text": "However, that doesn't work by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=520"
  },
  {
    "text": "This is because directional focus navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=524"
  },
  {
    "text": "is based on adjacency relationships.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=526"
  },
  {
    "text": "When swiping to move focus, focus will only move if there is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=529"
  },
  {
    "text": "something adjacent and focusable in the given direction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=533"
  },
  {
    "text": "Take a look at the focusable views in this app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=537"
  },
  {
    "text": "Since there's no focusable view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=540"
  },
  {
    "text": "adjacent to the login fields on the left, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=542"
  },
  {
    "text": "the button on the bottom is unreachable.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=545"
  },
  {
    "text": "To make this screen navigable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=549"
  },
  {
    "text": "we will extend the Browse button's focusable area, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=550"
  },
  {
    "text": "so it becomes adjacent to the login fields.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=554"
  },
  {
    "text": "This is done using the new FocusSections API.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=557"
  },
  {
    "text": "Let's see how easy that is.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=561"
  },
  {
    "text": "Here we have a simplified version ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=563"
  },
  {
    "text": "of the Vacation Planner code for TV.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=565"
  },
  {
    "text": "It contains an HStack with two VStacks; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=569"
  },
  {
    "text": "one for the login fields, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=572"
  },
  {
    "text": "and another VStack for the image and the button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=573"
  },
  {
    "text": "We want to create a larger logical focus target ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=577"
  },
  {
    "text": "around the button so focus can behave ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=580"
  },
  {
    "text": "as if the button was adjacent to the login fields.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=582"
  },
  {
    "text": "This can be done by simply adding a focusSection() modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=587"
  },
  {
    "text": "to the VStack that contains the button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=591"
  },
  {
    "text": "When focusSection() modifier is added to any view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=594"
  },
  {
    "text": "the frame of that view becomes capable of accepting focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=597"
  },
  {
    "text": "if it contains any focusable subviews.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=601"
  },
  {
    "text": "Since we also want to move focus back to the login fields ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=605"
  },
  {
    "text": "when swiping left on the button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=609"
  },
  {
    "text": "we'll add another focusSection() modifier to the first VStack.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=611"
  },
  {
    "text": "Now when we run this app, users can move focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=616"
  },
  {
    "text": "between the input fields and the Browse button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=619"
  },
  {
    "text": "by swiping left and right on the remote.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=622"
  },
  {
    "text": "As we wrap things up, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=625"
  },
  {
    "text": "I'd encourage you to think about focus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=627"
  },
  {
    "text": "which can often look different on different platforms.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=629"
  },
  {
    "text": "SwiftUI has great default behaviors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=633"
  },
  {
    "text": "built in for most cases.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=636"
  },
  {
    "text": "The new focus states and FocusSections APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=638"
  },
  {
    "text": "can help you take advantage of focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=641"
  },
  {
    "text": "to create even more streamlined experiences.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=643"
  },
  {
    "text": "As you work on your apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=647"
  },
  {
    "text": "take a moment to observe the many ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=648"
  },
  {
    "text": "in which focus impacts user behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=651"
  },
  {
    "text": "We hope this session has equipped you with the tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=655"
  },
  {
    "text": "that'll help users focus on what's most important.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=657"
  },
  {
    "text": "Thanks for watching, and have an awesome WWDC! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=661"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10023/?time=664"
  }
]