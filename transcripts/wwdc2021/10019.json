[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=2"
  },
  {
    "text": "Hi, welcome to \"Discover concurrency in SwiftUI.\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=9"
  },
  {
    "text": "I'm Curt Clifton, an engineer on the SwiftUI team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=12"
  },
  {
    "text": "Later, I'll be joined by my colleague Jessica. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=15"
  },
  {
    "text": "Swift 5.5 introduces a variety of new tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=18"
  },
  {
    "text": "for managing concurrency in your Swift code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=22"
  },
  {
    "text": "In this talk, Jessica and I will help you understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=24"
  },
  {
    "text": "how these improvements interact with your SwiftUI apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=27"
  },
  {
    "text": "I’ll walk through how the new tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=32"
  },
  {
    "text": "can help you make your data models even better ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=33"
  },
  {
    "text": "and show you how SwiftUI works with the new main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=36"
  },
  {
    "text": "Then Jessica will show you how to connect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=40"
  },
  {
    "text": "your concurrent data model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=42"
  },
  {
    "text": "to your SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=44"
  },
  {
    "text": "and introduce some great new APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=45"
  },
  {
    "text": "that take advantage of Swift’s new concurrency tools.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=48"
  },
  {
    "text": "To make the most of the information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=52"
  },
  {
    "text": "Jessica and I will be sharing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=54"
  },
  {
    "text": "it’s important to have some background ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=55"
  },
  {
    "text": "on Swift’s new concurrency support. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=57"
  },
  {
    "text": "We recommend you watch “Meet async/await in Swift” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=59"
  },
  {
    "text": "and “Explore structured concurrency in Swift” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=63"
  },
  {
    "text": "before diving into the rest of this video. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=65"
  },
  {
    "text": "When I was a child, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=69"
  },
  {
    "text": "I always dreamed of being an astronaut. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=70"
  },
  {
    "text": "I sometimes work in a spaceship, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=72"
  },
  {
    "text": "but otherwise that particular childhood dream ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=74"
  },
  {
    "text": "didn't come true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=76"
  },
  {
    "text": "Still, I haven't lost my enthusiasm for space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=77"
  },
  {
    "text": "So I decided to apply my actual skills ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=81"
  },
  {
    "text": "as a SwiftUI engineer to build an app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=83"
  },
  {
    "text": "to download space-related photos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=85"
  },
  {
    "text": "Let's take a look at the app I have planned.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=87"
  },
  {
    "text": "The app shows a list of random space photos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=91"
  },
  {
    "text": "These colors are just beautiful. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=93"
  },
  {
    "text": "When I see a photo I really love, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=95"
  },
  {
    "text": "I can save it to view later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=97"
  },
  {
    "text": "In order to fetch these beautiful images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=100"
  },
  {
    "text": "my app is going to interact with a web service ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=102"
  },
  {
    "text": "using a REST API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=105"
  },
  {
    "text": "This sounds like a perfect use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=107"
  },
  {
    "text": "of the new concurrency features introduced in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=109"
  },
  {
    "text": "Let's start with our data model.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=112"
  },
  {
    "text": "I’m using a SpacePhoto struct ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=115"
  },
  {
    "text": "to hold the information for a single image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=117"
  },
  {
    "text": "The struct has fields like the title, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=120"
  },
  {
    "text": "a description of the photo, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=123"
  },
  {
    "text": "the date the image was posted, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=126"
  },
  {
    "text": "and a URL pointing to the actual image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=128"
  },
  {
    "text": "I made my type Codable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=132"
  },
  {
    "text": "so that I can easily instantiate instances ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=133"
  },
  {
    "text": "from a server response or save them to disk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=135"
  },
  {
    "text": "and Identifiable so I can use them in ForEach ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=139"
  },
  {
    "text": "and other data driven views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=142"
  },
  {
    "text": "Next, I want to display a list of these entries. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=144"
  },
  {
    "text": "For that, I need a model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=147"
  },
  {
    "text": "that will fetch and hold a collection of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=149"
  },
  {
    "text": "I'm using a Photos class for this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=152"
  },
  {
    "text": "By making my Photos class conform to ObservableObject, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=156"
  },
  {
    "text": "my SwiftUI views will automatically update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=159"
  },
  {
    "text": "whenever my data updates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=162"
  },
  {
    "text": "I'm using a published property ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=165"
  },
  {
    "text": "to store an array of SpacePhotos.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=167"
  },
  {
    "text": "To fetch updated items from the REST endpoint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=171"
  },
  {
    "text": "I’m using an Update Items method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=174"
  },
  {
    "text": "I’ll talk about that in more detail shortly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=176"
  },
  {
    "text": "But first I’d like to rough in a basic user interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=179"
  },
  {
    "text": "This is the user interface I want to build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=183"
  },
  {
    "text": "So far, I just have my tab view in place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=186"
  },
  {
    "text": "and a basic PhotoView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=188"
  },
  {
    "text": "My PhotoView takes a space photo and displays its title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=193"
  },
  {
    "text": "That’s enough plumbing that I’ll be able to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=197"
  },
  {
    "text": "my data model in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=199"
  },
  {
    "text": "Let’s look at the Catalog view next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=201"
  },
  {
    "text": "My Catalog view will show the list of photos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=204"
  },
  {
    "text": "To do that, I'll add a State Object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=207"
  },
  {
    "text": "and instantiate it with my Photos observable object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=210"
  },
  {
    "text": "In the body of my view, I'll add a NavigationView. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=214"
  },
  {
    "text": "Using a navigation view here will let me add ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=218"
  },
  {
    "text": "a large navigation title shortly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=220"
  },
  {
    "text": "Next, inside my NavigationView, I’ll add a List. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=223"
  },
  {
    "text": "And inside my List, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=227"
  },
  {
    "text": "I’ll use a ForEach to map over my photos, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=228"
  },
  {
    "text": "showing a PhotoView for each of them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=232"
  },
  {
    "text": "With that, I can see my sample data.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=236"
  },
  {
    "text": "That’s as far as I need to go for now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=240"
  },
  {
    "text": "but let’s add just a bit more polish here.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=241"
  },
  {
    "text": "First, here’s the promised navigation title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=245"
  },
  {
    "text": "Now, the default inset list style here looks great, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=248"
  },
  {
    "text": "but to really show off my space photos, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=252"
  },
  {
    "text": "I want to switch to a plain style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=254"
  },
  {
    "text": "so the photos will really pop ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=256"
  },
  {
    "text": "against the black background.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=258"
  },
  {
    "text": "I can make the list style plain ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=261"
  },
  {
    "text": "using the new enum-like static member syntax here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=263"
  },
  {
    "text": "With this syntax, SwiftUI’s style modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=267"
  },
  {
    "text": "get a more concise spelling ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=270"
  },
  {
    "text": "with better support for autocompletion in Xcode 13. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=272"
  },
  {
    "text": "Finally, let me use another feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=276"
  },
  {
    "text": "new in SwiftUI this year: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=278"
  },
  {
    "text": "control of list separators.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=280"
  },
  {
    "text": "Inside my ForEach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=283"
  },
  {
    "text": "I can use the listRowSeparator modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=285"
  },
  {
    "text": "to hide the separators.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=288"
  },
  {
    "text": "Sometimes when I’m polishing a user interface with SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=290"
  },
  {
    "text": "I find it hard to stop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=293"
  },
  {
    "text": "But I’ll leave the UI for now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=295"
  },
  {
    "text": "Jessica is planning to finish it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=297"
  },
  {
    "text": "after I’m done with the data model.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=298"
  },
  {
    "text": "Before I dig into the data model though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=301"
  },
  {
    "text": "I’d like to talk just a bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=304"
  },
  {
    "text": "about how SwiftUI interacts with your observable objects. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=305"
  },
  {
    "text": "And how the new concurrency features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=309"
  },
  {
    "text": "in Swift 5.5 ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=311"
  },
  {
    "text": "make this interaction easier than ever to get right. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=313"
  },
  {
    "text": "At Dub Dub 2020, in “Data Essentials in SwiftUI,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=316"
  },
  {
    "text": "my colleague Raj talked about the SwiftUI update life cycle. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=320"
  },
  {
    "text": "I’ll refer to the code that drives this life cycle ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=325"
  },
  {
    "text": "as the “run loop.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=328"
  },
  {
    "text": "With Swift 5.5, the run loop runs on the main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=329"
  },
  {
    "text": "For more details on actors in general, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=333"
  },
  {
    "text": "check out the talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=336"
  },
  {
    "text": "“Protect mutable state with Swift actors.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=337"
  },
  {
    "text": "Jessica and I will focus on the main actor in this talk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=340"
  },
  {
    "text": "The SwiftUI run loop receives events from your user, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=344"
  },
  {
    "text": "lets you update your model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=347"
  },
  {
    "text": "and then renders your SwiftUI views to the screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=349"
  },
  {
    "text": "I like to call these updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=351"
  },
  {
    "text": "the “ticks of the run loop.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=353"
  },
  {
    "text": "Let’s unroll this loop so we can look at multiple ticks in a row.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=355"
  },
  {
    "text": "In SwiftUI, ObservableObjects can interact ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=361"
  },
  {
    "text": "with the SwiftUI run loop in some interesting ways. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=364"
  },
  {
    "text": "Let’s go back to the Photos ObservableObject ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=367"
  },
  {
    "text": "and look at the updateItems method. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=370"
  },
  {
    "text": "I’m going to call updateItems from my SwiftUI views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=372"
  },
  {
    "text": "and it will run on the main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=376"
  },
  {
    "text": "Let’s use this blue rectangle to show the time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=377"
  },
  {
    "text": "when updateItems is running. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=380"
  },
  {
    "text": "I want to focus on this line of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=383"
  },
  {
    "text": "where I assign the fetched photos to my “items” property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=386"
  },
  {
    "text": "Because “items” is a Published property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=389"
  },
  {
    "text": "this assignment triggers an objectWillChange event, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=392"
  },
  {
    "text": "immediately followed by writing the fetched photos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=395"
  },
  {
    "text": "to the storage for “items.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=398"
  },
  {
    "text": "When SwiftUI sees this objectWillChange, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=400"
  },
  {
    "text": "it takes a snapshot of my items. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=404"
  },
  {
    "text": "On the next tick of the run loop after the snapshot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=406"
  },
  {
    "text": "SwiftUI compares the snapshot to the current value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=409"
  },
  {
    "text": "Because these values are different, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=413"
  },
  {
    "text": "SwiftUI knows to update my views that depend on Photos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=415"
  },
  {
    "text": "Note that because objectWillChange, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=419"
  },
  {
    "text": "updating the storage, and the run loop tick ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=422"
  },
  {
    "text": "all happen on the main actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=425"
  },
  {
    "text": "they’re guaranteed to happen in order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=426"
  },
  {
    "text": "In the 2020 “Data Essentials” talk, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=429"
  },
  {
    "text": "Raj describes slow updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=432"
  },
  {
    "text": "when your view does too much work in body.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=434"
  },
  {
    "text": "Slow updates can also happen if your model code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=437"
  },
  {
    "text": "does too much work on the main actor.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=440"
  },
  {
    "text": "For example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=444"
  },
  {
    "text": "suppose my fetchPhotos function blocks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=445"
  },
  {
    "text": "while waiting for the download to complete, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=448"
  },
  {
    "text": "and suppose I’m on a slow connection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=450"
  },
  {
    "text": "Because I’m blocking the main actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=453"
  },
  {
    "text": "I miss this tick of the run loop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=455"
  },
  {
    "text": "This is visible to my users as a hitch. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=458"
  },
  {
    "text": "In the past, you might have dispatched ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=462"
  },
  {
    "text": "to another queue to perform the work, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=464"
  },
  {
    "text": "so that the expensive fetchPhotos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=466"
  },
  {
    "text": "occurs off of the main thread. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=469"
  },
  {
    "text": "This might seem to work fine, but I have a tricky issue here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=471"
  },
  {
    "text": "I’m changing my ObservableObject from off the main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=476"
  },
  {
    "text": "It’s possible for my changes and the run loop tick ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=480"
  },
  {
    "text": "to interleave. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=483"
  },
  {
    "text": "For example, when I assign to “items,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=484"
  },
  {
    "text": "and SwiftUI takes its objectWillChange snapshot, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=487"
  },
  {
    "text": "it’s possible that this happens immediately before ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=490"
  },
  {
    "text": "a tick of the run loop. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=493"
  },
  {
    "text": "The state change hasn’t happened yet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=495"
  },
  {
    "text": "so SwiftUI compares the snapshot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=498"
  },
  {
    "text": "to the unchanged value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=501"
  },
  {
    "text": "The actual state change happens after the run loop tick, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=503"
  },
  {
    "text": "but SwiftUI doesn’t see that change, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=507"
  },
  {
    "text": "and so my views aren’t updated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=509"
  },
  {
    "text": "To update correctly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=511"
  },
  {
    "text": "SwiftUI needs these events to happen in order: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=512"
  },
  {
    "text": "objectWillChange, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=516"
  },
  {
    "text": "the ObservableObject’s state is updated, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=518"
  },
  {
    "text": "and then the run loop reaches its next tick. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=520"
  },
  {
    "text": "If I can ensure that these all happen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=524"
  },
  {
    "text": "on the main actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=525"
  },
  {
    "text": "I can guarantee this ordering. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=527"
  },
  {
    "text": "Prior to Swift 5.5, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=529"
  },
  {
    "text": "I might have dispatched back to the main queue ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=531"
  },
  {
    "text": "to update my state, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=533"
  },
  {
    "text": "but now it’s much easier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=534"
  },
  {
    "text": "Just use await! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=537"
  },
  {
    "text": "By using await to make an async call from the main actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=539"
  },
  {
    "text": "I let other work continue on the main actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=543"
  },
  {
    "text": "while the async work happens. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=545"
  },
  {
    "text": "This is called “yielding” the main actor.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=548"
  },
  {
    "text": "In updateItems, I can use await to yield the main actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=553"
  },
  {
    "text": "back to SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=557"
  },
  {
    "text": "during my long running I/O, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=558"
  },
  {
    "text": "so it can keep the run loop ticking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=560"
  },
  {
    "text": "and avoid any UI hitches. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=561"
  },
  {
    "text": "When the async work completes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=564"
  },
  {
    "text": "Swift re-enters my updateItems method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=565"
  },
  {
    "text": "back on the main actor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=569"
  },
  {
    "text": "so I can update my state. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=571"
  },
  {
    "text": "Let’s see how this works.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=573"
  },
  {
    "text": "Instead of dispatching to another queue, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=575"
  },
  {
    "text": "I simply await the result of the long running operation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=577"
  },
  {
    "text": "When I write await, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=581"
  },
  {
    "text": "the updateItems function yields control of the main actor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=583"
  },
  {
    "text": "so that the run loop can continue. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=586"
  },
  {
    "text": "When the awaited fetch is complete, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=589"
  },
  {
    "text": "the main actor re-enters my function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=591"
  },
  {
    "text": "so that I can safely update my published property, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=595"
  },
  {
    "text": "triggering objectWillChange, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=598"
  },
  {
    "text": "and making the new value available to SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=600"
  },
  {
    "text": "Let’s jump into Xcode and see if I can make fetch happen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=604"
  },
  {
    "text": "Here’s the updateItems method that I showed on the slides. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=609"
  },
  {
    "text": "To implement fetchPhotos, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=612"
  },
  {
    "text": "let’s start by adding the code to fetch a single photo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=613"
  },
  {
    "text": "I’ll make my fetchPhoto method take the URL ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=617"
  },
  {
    "text": "of a photo from the rest endpoint, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=620"
  },
  {
    "text": "and return a SpacePhoto.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=622"
  },
  {
    "text": "Next, I’ll use the new async version ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=627"
  },
  {
    "text": "of the data convenience on URLSession ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=629"
  },
  {
    "text": "to fetch the data from the URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=632"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=635"
  },
  {
    "text": "To stub this in, I’m using a forced try. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=652"
  },
  {
    "text": "I’ll clean that up shortly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=654"
  },
  {
    "text": "Ah, the data method is async, so I need to use await.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=661"
  },
  {
    "text": "And that means I need to make my fetchPhoto method async.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=667"
  },
  {
    "text": "OK, great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=673"
  },
  {
    "text": "Now that I have my data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=674"
  },
  {
    "text": "I’ll use the Decodable initializer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=675"
  },
  {
    "text": "to instantiate a photo and return it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=677"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=679"
  },
  {
    "text": "Let’s look at fetchPhotos next. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=688"
  },
  {
    "text": "I’ve stubbed in some code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=690"
  },
  {
    "text": "to get a random selection of dates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=691"
  },
  {
    "text": "and loop over them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=693"
  },
  {
    "text": "I want to build up an array, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=694"
  },
  {
    "text": "so I’ll make “downloaded” a var, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=696"
  },
  {
    "text": "and add a date variable to my loop.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=698"
  },
  {
    "text": "Inside the loop, I’ll call a helper method I already have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=703"
  },
  {
    "text": "to construct the rest endpoint URL ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=707"
  },
  {
    "text": "for fetching a particular date.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=709"
  },
  {
    "text": "Then, I’ll call my fetchPhoto method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=719"
  },
  {
    "text": "and append the results to my array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=721"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=723"
  },
  {
    "text": "And let’s build. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=735"
  },
  {
    "text": "Ah, because fetchPhoto is async, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=736"
  },
  {
    "text": "I need to await the result.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=739"
  },
  {
    "text": "And that means fetchPhotos needs to be async, too.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=743"
  },
  {
    "text": "I’m making these calls to fetchPhoto ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=747"
  },
  {
    "text": "sequentially for simplicity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=749"
  },
  {
    "text": "Check out Swift 5.5’s task groups ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=751"
  },
  {
    "text": "for even more powerful options.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=754"
  },
  {
    "text": "Now, I just need to await fetchPhotos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=757"
  },
  {
    "text": "like I showed in the slides.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=760"
  },
  {
    "text": "And with that, my update logic is in place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=763"
  },
  {
    "text": "Now, maybe you’re as nervous as I am ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=767"
  },
  {
    "text": "by these forced tries to make fetch happen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=769"
  },
  {
    "text": "Let’s clean that up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=772"
  },
  {
    "text": "For now, I’ll return nil when the download fails. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=773"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=776"
  },
  {
    "text": "Then in fetchPhotos, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=791"
  },
  {
    "text": "I’ll only add the non-nil values to my array.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=792"
  },
  {
    "text": "Now that Photos uses async-await, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=800"
  },
  {
    "text": "I can be sure it won’t run into any of the tricky ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=802"
  },
  {
    "text": "objectWillChange bugs I discussed, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=805"
  },
  {
    "text": "as long as it runs on the main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=807"
  },
  {
    "text": "But how can I ensure that? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=810"
  },
  {
    "text": "Luckily, the Swift compiler can help me here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=812"
  },
  {
    "text": "By adding the new @MainActor annotation to Photos, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=815"
  },
  {
    "text": "the compiler will guarantee ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=818"
  },
  {
    "text": "that the properties and methods on Photos ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=820"
  },
  {
    "text": "are only ever accessed from the main actor. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=822"
  },
  {
    "text": "With that done, the model is in place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=826"
  },
  {
    "text": "Next, Jessica will connect our views to the model ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=829"
  },
  {
    "text": "and show you some great new SwiftUI APIs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=832"
  },
  {
    "text": "for leveraging concurrency in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=835"
  },
  {
    "text": "Jessica? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=838"
  },
  {
    "text": "Thank you, Curt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=840"
  },
  {
    "text": "Let’s switch over to the CatalogView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=841"
  },
  {
    "text": "and use the updateItems method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=843"
  },
  {
    "text": "that Curt just showed us.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=844"
  },
  {
    "text": "I want to call updateItems whenever my Catalog shows. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=849"
  },
  {
    "text": "In the past, you might have used onAppear for this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=853"
  },
  {
    "text": "but starting this year in SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=856"
  },
  {
    "text": "use the task modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=858"
  },
  {
    "text": "Task lets you associate an asynchronous task ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=860"
  },
  {
    "text": "with your view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=863"
  },
  {
    "text": "The task starts at the beginning of the view’s lifetime. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=864"
  },
  {
    "text": "Task is async by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=867"
  },
  {
    "text": "so inside its closure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=869"
  },
  {
    "text": "I can call updateItems on myPhotos object ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=871"
  },
  {
    "text": "and await the results.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=874"
  },
  {
    "text": "This is a great use of task, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=882"
  },
  {
    "text": "but there’s even more to this new modifier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=884"
  },
  {
    "text": "A task’s lifetime is tied to the view’s lifetime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=886"
  },
  {
    "text": "so you can do things ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=889"
  },
  {
    "text": "like waiting on an async sequence ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=890"
  },
  {
    "text": "and responding to its values. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=892"
  },
  {
    "text": "And the task will be automatically canceled ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=894"
  },
  {
    "text": "when the view’s lifetime ends. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=896"
  },
  {
    "text": "For more on view lifetime, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=898"
  },
  {
    "text": "be sure to check out the talk “Demystify SwiftUI.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=900"
  },
  {
    "text": "Using live preview, I can see that the entries are updated. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=904"
  },
  {
    "text": "But we’re still missing the beautiful images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=908"
  },
  {
    "text": "I’ve already been updating the PhotoView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=910"
  },
  {
    "text": "that Curt showed earlier. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=913"
  },
  {
    "text": "I’ll add some background materials behind the title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=915"
  },
  {
    "text": "Now, let’s add the images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=918"
  },
  {
    "text": "Happily, using the new AsyncImage API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=920"
  },
  {
    "text": "loading images from a remote server ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=923"
  },
  {
    "text": "is easier than ever. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=925"
  },
  {
    "text": "All I have to do is get the image URL ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=927"
  },
  {
    "text": "I want to fetch out of our entry, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=930"
  },
  {
    "text": "and pass it to AsyncImage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=932"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=934"
  },
  {
    "text": "Well, this is a little too big at its full size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=949"
  },
  {
    "text": "so let’s use the overload of AsyncImage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=952"
  },
  {
    "text": "that lets me adjust the image and show a placeholder ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=954"
  },
  {
    "text": "so that users know their image is loading. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=957"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=960"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=978"
  },
  {
    "text": "Next, I’ll make the image resizable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=983"
  },
  {
    "text": "and set its aspect ratio to fill the space. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=986"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=989"
  },
  {
    "text": "Finally, I’ll add a minimum width and height ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1009"
  },
  {
    "text": "to make my image flexible. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1011"
  },
  {
    "text": "Using a non-zero minimum height ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1013"
  },
  {
    "text": "will also make sure that the progress view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1015"
  },
  {
    "text": "peeks out over my title area. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1017"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1019"
  },
  {
    "text": "Like the rest of SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1029"
  },
  {
    "text": "AsyncImage comes built with intelligent defaults, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1031"
  },
  {
    "text": "so even if there are errors loading your image, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1034"
  },
  {
    "text": "the result will be to continue showing the placeholder. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1037"
  },
  {
    "text": "You can also choose to customize the error handling behavior. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1040"
  },
  {
    "text": "To do that, check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1044"
  },
  {
    "text": "“AsyncImage’s overload that uses a phase.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1045"
  },
  {
    "text": "It would also be great ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1049"
  },
  {
    "text": "if users could save their favorite images ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1050"
  },
  {
    "text": "to view later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1052"
  },
  {
    "text": "Let’s add a button to this title area to do that. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1053"
  },
  {
    "text": "The button will trigger an async action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1056"
  },
  {
    "text": "to save the image entry to disk. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1059"
  },
  {
    "text": "Saved entries will appear in the Saved tab in our app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1061"
  },
  {
    "text": "I’ve already stubbed in a view to do this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1065"
  },
  {
    "text": "Let me add it here, then we can take a look at its code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1067"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1071"
  },
  {
    "text": "Here’s the stubbed-in version of my Save button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1083"
  },
  {
    "text": "Let’s add an action to save the photo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1085"
  },
  {
    "text": "Button actions in SwiftUI are synchronous, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1089"
  },
  {
    "text": "but my “save” method is asynchronous. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1091"
  },
  {
    "text": "To call the method, I’ll start an async task.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1094"
  },
  {
    "text": "Then, inside the closure, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1101"
  },
  {
    "text": "I’ll call the “save” method on “photo.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1103"
  },
  {
    "text": "It’s asynchronous, so I’ll just use await.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1106"
  },
  {
    "text": "I think it would be nice to show a progress view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1117"
  },
  {
    "text": "while the save is taking place. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1119"
  },
  {
    "text": "To do that, I’ll add a State property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1121"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1124"
  },
  {
    "text": "Then, I’ll update the State around my call to save. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1139"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1142"
  },
  {
    "text": "Then, I’ll update the label on my button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1160"
  },
  {
    "text": "to show a progress view when the save is happening. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1162"
  },
  {
    "text": "I’m using “opacity” to hide the Save label ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1165"
  },
  {
    "text": "and an overlay to show the progress view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1168"
  },
  {
    "text": "This combination ensures that the button stays the same size, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1171"
  },
  {
    "text": "based on the localization of the word “save.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1174"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1178"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1196"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1201"
  },
  {
    "text": "Finally, I’ll disable the button while the save is happening.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1207"
  },
  {
    "text": "Let’s see how this works with live preview.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1218"
  },
  {
    "text": "That’s pretty great! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1224"
  },
  {
    "text": "Let’s go back to the Catalog view to put it all together.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1226"
  },
  {
    "text": "SwiftUI has a great new modifier this year ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1236"
  },
  {
    "text": "that you can use to give people the ability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1238"
  },
  {
    "text": "to manually refresh their data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1240"
  },
  {
    "text": "By adding the refreshable modifier to my List, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1242"
  },
  {
    "text": "I tell SwiftUI that this content is refreshable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1246"
  },
  {
    "text": "I can provide an async closure to refreshable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1249"
  },
  {
    "text": "and call our updateItems method to update the List. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1253"
  },
  {
    "text": "As I showed earlier with “task,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1256"
  },
  {
    "text": "I’ll use await on this async method.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1258"
  },
  {
    "text": "The refreshing indicator dismisses automatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1270"
  },
  {
    "text": "when my asynchronous work is done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1272"
  },
  {
    "text": "Now, I can pull down to refresh my images, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1276"
  },
  {
    "text": "tap Save to save an image I like, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1280"
  },
  {
    "text": "and switch to my Saved tab to see my saved images.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1284"
  },
  {
    "text": "Swift’s new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1289"
  },
  {
    "text": "make it easy to work with concurrent data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1291"
  },
  {
    "text": "SwiftUI integrates nicely ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1294"
  },
  {
    "text": "with Swift’s concurrency features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1296"
  },
  {
    "text": "to provide you the best behavior by default. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1297"
  },
  {
    "text": "In many cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1300"
  },
  {
    "text": "you just need to use await ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1301"
  },
  {
    "text": "to leverage the power of concurrency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1303"
  },
  {
    "text": "Mark your ObservableObject as “@MainActor” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1306"
  },
  {
    "text": "for more robust checking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1308"
  },
  {
    "text": "that your object updates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1310"
  },
  {
    "text": "in ways that work well with your views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1311"
  },
  {
    "text": "Take advantage of SwiftUI’s API additions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1315"
  },
  {
    "text": "to write safe and performant concurrent apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1318"
  },
  {
    "text": "with minimal effort. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1320"
  },
  {
    "text": "Use AsyncImage to concurrently load images. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1323"
  },
  {
    "text": "Add the “refreshable” modifier to your view hierarchy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1327"
  },
  {
    "text": "to allow users to manually refresh their data. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1330"
  },
  {
    "text": "Like we saw with the Save button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1335"
  },
  {
    "text": "you can use Swift’s new concurrency features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1336"
  },
  {
    "text": "in your own custom views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1338"
  },
  {
    "text": "As we all know, concurrency is tricky. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1342"
  },
  {
    "text": "It’s a hard problem, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1345"
  },
  {
    "text": "but with these new language features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1347"
  },
  {
    "text": "and SwiftUI APIs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1349"
  },
  {
    "text": "you now have the tools to manage that complexity in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1351"
  },
  {
    "text": "We hope you enjoyed learning ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1355"
  },
  {
    "text": "about the great new concurrency tools ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1356"
  },
  {
    "text": "in Swift 5.5 and SwiftUI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1359"
  },
  {
    "text": "and we look forward to seeing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1362"
  },
  {
    "text": "all the ways you use them ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1363"
  },
  {
    "text": "to tackle tricky problems in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1364"
  },
  {
    "text": "[music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10019/?time=1367"
  }
]