[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=7"
  },
  {
    "text": "Nathan Tannar: Hello, and welcome to WWDC! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=9"
  },
  {
    "text": "My name is Nathan, and I'm an engineer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=12"
  },
  {
    "text": "on the Accessibility team.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=14"
  },
  {
    "text": "Today we'll be going beyond the basics to learn ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=16"
  },
  {
    "text": "how to deliver exceptional and accessible SwiftUI apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=18"
  },
  {
    "text": "This year marks a huge leap forward ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=22"
  },
  {
    "text": "for accessibility in SwiftUI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=24"
  },
  {
    "text": "At Apple, accessibility is one of our core values.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=27"
  },
  {
    "text": "Our assistive technologies across all our platforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=30"
  },
  {
    "text": "make sure that anyone can use your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=33"
  },
  {
    "text": "regardless of any physical, visual, audible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=35"
  },
  {
    "text": "or motor impairment.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=39"
  },
  {
    "text": "My team and I work to make sure most of your app is accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=40"
  },
  {
    "text": "by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=43"
  },
  {
    "text": "but there is always more you can do to enrich the experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=44"
  },
  {
    "text": "Today I'll show you the new tools and APIs for SwiftUI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=47"
  },
  {
    "text": "that make enriching this experience easy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=50"
  },
  {
    "text": "Let's begin with the tooling improvements in Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=53"
  },
  {
    "text": "SwiftUI Previews have changed how many of us develop apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=56"
  },
  {
    "text": "It dramatically improves your ability to iterate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=59"
  },
  {
    "text": "upon your views across multiple environments, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=62"
  },
  {
    "text": "all without the need of running your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=65"
  },
  {
    "text": "To make the most important accessibility modifiers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=69"
  },
  {
    "text": "just a click away, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=71"
  },
  {
    "text": "we've added a curated list of accessibility editors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=72"
  },
  {
    "text": "I hope this encourages everyone ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=75"
  },
  {
    "text": "to always make their views accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=77"
  },
  {
    "text": "But there's more.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=79"
  },
  {
    "text": "Since accessibility modifiers don't have visual changes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=81"
  },
  {
    "text": "in the previews, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=83"
  },
  {
    "text": "a new tool was developed that allows you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=85"
  },
  {
    "text": "to inspect the accessibility of your view without leaving Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=86"
  },
  {
    "text": "Let's switch from the editor's panel ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=91"
  },
  {
    "text": "to the new accessibility panel.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=92"
  },
  {
    "text": "Shipping in Xcode 13, SwiftUI Previews ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=96"
  },
  {
    "text": "will now also feature an Accessibility Preview.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=98"
  },
  {
    "text": "With it, you can inspect the accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=102"
  },
  {
    "text": "for a preview in real time.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=104"
  },
  {
    "text": "And this is a game changer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=106"
  },
  {
    "text": "Accessibility Preview will help you make accessible apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=108"
  },
  {
    "text": "even if you don't have a deep understanding ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=111"
  },
  {
    "text": "of each assistive technology.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=113"
  },
  {
    "text": "Let's take a closer look to see how changes are reflected ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=116"
  },
  {
    "text": "in the Accessibility Preview.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=118"
  },
  {
    "text": "This is a simplified version of the view we just saw.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=121"
  },
  {
    "text": "After running the preview, I can select the VStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=124"
  },
  {
    "text": "and the Accessibility Preview will update ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=127"
  },
  {
    "text": "to display the elements in their sorted order.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=129"
  },
  {
    "text": "Notice that each element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=132"
  },
  {
    "text": "will always display its basic properties -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=133"
  },
  {
    "text": "such as a label and traits.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=136"
  },
  {
    "text": "For example, the Text view will create an accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=140"
  },
  {
    "text": "with the string as its label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=142"
  },
  {
    "text": "It also gains the .isStaticText trait.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=145"
  },
  {
    "text": "The preview will update for any accessibility changes we make, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=148"
  },
  {
    "text": "such as adding the .isHeader trait.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=151"
  },
  {
    "text": "You will also be able to see ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=155"
  },
  {
    "text": "some of the automatic accessibility that takes place ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=157"
  },
  {
    "text": "behind the scenes, such as automatic SF Symbol labels.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=159"
  },
  {
    "text": "For example, the checkmark.seal.fill symbol ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=163"
  },
  {
    "text": "is labeled \"Verified\" by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=167"
  },
  {
    "text": "If you're relying on a symbol's default label, it's important ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=169"
  },
  {
    "text": "to check that it accurately describes your interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=172"
  },
  {
    "text": "We'll continue to use the Accessibility Preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=175"
  },
  {
    "text": "as we step through five importance areas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=177"
  },
  {
    "text": "that'll help you deliver an exceptional experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=179"
  },
  {
    "text": "to all of your app's users.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=181"
  },
  {
    "text": "We'll start by examining the best way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=183"
  },
  {
    "text": "to make custom controls accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=185"
  },
  {
    "text": "Next, we'll discuss how to make a view accessible with children.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=188"
  },
  {
    "text": "I'll highlight how to audit your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=192"
  },
  {
    "text": "for common navigation problems ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=194"
  },
  {
    "text": "and how the Accessibility Preview can assist with this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=196"
  },
  {
    "text": "Then I'll show you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=199"
  },
  {
    "text": "how to supercharge your app's navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=200"
  },
  {
    "text": "with VoiceOver rotors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=202"
  },
  {
    "text": "And finally, we'll look at focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=205"
  },
  {
    "text": "and how it relates to assistive technologies.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=207"
  },
  {
    "text": "I've been working to prototype a new finance app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=211"
  },
  {
    "text": "I call Wallet Pal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=213"
  },
  {
    "text": "It's still in the early stages, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=215"
  },
  {
    "text": "but so far, I'm pretty happy with the initial design.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=216"
  },
  {
    "text": "I was pleased to hear that early beta testers are also loving it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=219"
  },
  {
    "text": "Now that I've polished the UI, I should spend some time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=223"
  },
  {
    "text": "to polish the accessibility interface.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=226"
  },
  {
    "text": "The accessibility interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=229"
  },
  {
    "text": "compliments the visual experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=230"
  },
  {
    "text": "to make sure that it’s usable by everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=231"
  },
  {
    "text": "I've asked some VoiceOver users to help test Wallet Pal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=234"
  },
  {
    "text": "and I've heard that the app is hard to navigate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=237"
  },
  {
    "text": "and not fully accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=239"
  },
  {
    "text": "If parts are not accessible to VoiceOver, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=242"
  },
  {
    "text": "then they are also not accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=244"
  },
  {
    "text": "to other assistive technologies.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=245"
  },
  {
    "text": "It's important that anyone be able to use Wallet Pal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=248"
  },
  {
    "text": "so let's investigate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=250"
  },
  {
    "text": "to see where we can improve the experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=251"
  },
  {
    "text": "We'll begin with reports of users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=254"
  },
  {
    "text": "not being able to edit their budgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=255"
  },
  {
    "text": "a critical feature in Wallet Pal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=257"
  },
  {
    "text": "This is the Budget Planner view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=260"
  },
  {
    "text": "which allows users to edit their food, entertainment, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=262"
  },
  {
    "text": "and savings budgets.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=265"
  },
  {
    "text": "To fit the design of Wallet Pal, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=267"
  },
  {
    "text": "I ended up needing to create custom sliders.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=268"
  },
  {
    "text": "I accomplished this by creating a budget slider ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=272"
  },
  {
    "text": "out of shapes and used a drag gesture for interaction.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=274"
  },
  {
    "text": "Shapes in SwiftUI make it easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=279"
  },
  {
    "text": "to create stunning and unique views, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=280"
  },
  {
    "text": "but they are not accessible by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=283"
  },
  {
    "text": "and so neither is my budget slider.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=286"
  },
  {
    "text": "This must be why some users are not able to edit their budgets.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=290"
  },
  {
    "text": "We can confirm it's not accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=294"
  },
  {
    "text": "by running a SwiftUI preview and selecting the SliderShape.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=296"
  },
  {
    "text": "The Accessibility Preview shows that there are no elements, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=301"
  },
  {
    "text": "so this control is not accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=304"
  },
  {
    "text": "Ideally, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=307"
  },
  {
    "text": "we should have a single labeled accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=308"
  },
  {
    "text": "with a value that can be changed.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=310"
  },
  {
    "text": "In contrast, standard controls are accessible by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=314"
  },
  {
    "text": "meaning little to no extra effort is required ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=318"
  },
  {
    "text": "to provide a great experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=320"
  },
  {
    "text": "SwiftUI uses the view type and its initialization parameters ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=323"
  },
  {
    "text": "to automatically derive the accessibility element's label, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=327"
  },
  {
    "text": "value, traits, and actions.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=330"
  },
  {
    "text": "So what's the best way to make ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=334"
  },
  {
    "text": "our custom budget slider accessible? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=335"
  },
  {
    "text": "Since the standard slider is accessible by default, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=338"
  },
  {
    "text": "my team and I thought it would be great to have an API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=341"
  },
  {
    "text": "that allows the accessibility of one view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=343"
  },
  {
    "text": "to be represented by another.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=345"
  },
  {
    "text": "This is what led us to us to create ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=348"
  },
  {
    "text": "accessibilityRepresentation(representation:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=349"
  },
  {
    "text": "It's an API that allows the accessibility of one view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=351"
  },
  {
    "text": "to be defined by another.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=354"
  },
  {
    "text": "Since I want this to be perceived ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=357"
  },
  {
    "text": "by assistive technologies as a slider, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=358"
  },
  {
    "text": "that's what I'll use for the accessibility representation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=361"
  },
  {
    "text": "With accessibilityRepresentation(representation:), ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=365"
  },
  {
    "text": "we're now well on the way ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=367"
  },
  {
    "text": "to making this budget slider accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=368"
  },
  {
    "text": "The only change needed to improve the experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=371"
  },
  {
    "text": "of the slider is to describe the value in dollars.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=373"
  },
  {
    "text": "And great, just like that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=378"
  },
  {
    "text": "now our budget slider is perfectly accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=380"
  },
  {
    "text": "On macOS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=383"
  },
  {
    "text": "the type of control will also be spoken to VoiceOver users.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=384"
  },
  {
    "text": "So by using the slider view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=387"
  },
  {
    "text": "in our budget slider's representation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=389"
  },
  {
    "text": "it will be announced as a slider.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=391"
  },
  {
    "text": "It's recommended to use accessibilityRepresentation(representation:) ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=394"
  },
  {
    "text": "when possible, to make custom controls accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=396"
  },
  {
    "text": "This is just one way to use accessibilityRepresentation(representation:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=400"
  },
  {
    "text": "Its flexibility allows for many more creative uses.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=403"
  },
  {
    "text": "Let's see if we can use it to fix other accessibility bugs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=407"
  },
  {
    "text": "in our app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=409"
  },
  {
    "text": "While we have now fixed the functional ability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=411"
  },
  {
    "text": "to edit budgets, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=412"
  },
  {
    "text": "some users reported that they couldn't discover ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=414"
  },
  {
    "text": "how to navigate to the Budget Planner view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=416"
  },
  {
    "text": "When designing Wallet Pal, we decided to use SF Symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=419"
  },
  {
    "text": "for all of our buttons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=422"
  },
  {
    "text": "While SF Symbols may have great default accessibility labels, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=423"
  },
  {
    "text": "they may not always fit the intended use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=427"
  },
  {
    "text": "Let's investigate if the problem is a poorly labeled button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=430"
  },
  {
    "text": "The NavigationBarView contains the Edit Budgets button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=435"
  },
  {
    "text": "Since we rely on SF Symbols for so many of our buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=439"
  },
  {
    "text": "I created a custom buttonStyle called SymbolButtonStyle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=442"
  },
  {
    "text": "But it appears that despite initializing the button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=447"
  },
  {
    "text": "with the label \"Edit Budgets\", ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=449"
  },
  {
    "text": "the label for the button is slider.vertical.3.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=452"
  },
  {
    "text": "So the accessibility label is being derived ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=456"
  },
  {
    "text": "from the SF Symbol.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=458"
  },
  {
    "text": "Let's take a closer look at the SymbolButtonStyle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=461"
  },
  {
    "text": "The SymbolButtonStyle's makeBody(configuration:) method ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=465"
  },
  {
    "text": "returns an Image view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=467"
  },
  {
    "text": "The Edit Budgets string we initialize the button with ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=469"
  },
  {
    "text": "would create a Text view as the configuration's label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=472"
  },
  {
    "text": "But this style completely ignores ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=475"
  },
  {
    "text": "the configuration's label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=477"
  },
  {
    "text": "This is why the button is not labeled \"Edit Budgets\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=479"
  },
  {
    "text": "While we want an SF Symbol to appear visually, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=484"
  },
  {
    "text": "we want the accessibility of the button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=487"
  },
  {
    "text": "to be represented by the configuration's label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=489"
  },
  {
    "text": "And so this seems like a great use case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=492"
  },
  {
    "text": "for accessibilityRepresentation(representation:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=494"
  },
  {
    "text": "Using accessibilityRepresentation(representation:), ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=497"
  },
  {
    "text": "I can substitute the accessibility of the Image view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=499"
  },
  {
    "text": "with another view, in this case, the configuration's label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=502"
  },
  {
    "text": "This way, we can preserve the label ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=506"
  },
  {
    "text": "we used to create the button.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=508"
  },
  {
    "text": "accessibilityRepresentation(representation:) is not just the ideal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=510"
  },
  {
    "text": "and recommended way to make custom controls accessible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=513"
  },
  {
    "text": "it also opens up new creative possibilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=516"
  },
  {
    "text": "to make views accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=518"
  },
  {
    "text": "Next, let's discuss the relationship ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=520"
  },
  {
    "text": "between children and accessibility containers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=522"
  },
  {
    "text": "As you may recall, accessibility elements can be wrapped together ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=526"
  },
  {
    "text": "in a group as children of an accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=529"
  },
  {
    "text": "This is done with the accessibilityElement(children:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=533"
  },
  {
    "text": "and the contain child behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=536"
  },
  {
    "text": "In case you're unfamiliar, the contain child behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=540"
  },
  {
    "text": "can be used to create an accessibility container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=543"
  },
  {
    "text": "which wraps existing accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=547"
  },
  {
    "text": "as children.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=549"
  },
  {
    "text": "But what if instead you have an accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=551"
  },
  {
    "text": "and you want to set its children? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=554"
  },
  {
    "text": "I'm running into this case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=558"
  },
  {
    "text": "when trying to make the Budget History graph accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=559"
  },
  {
    "text": "Users reported the graph is completely inaccessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=563"
  },
  {
    "text": "And so this means when assistive technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=566"
  },
  {
    "text": "are focused on the Budget History header ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=568"
  },
  {
    "text": "and try to navigate to the next element, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=570"
  },
  {
    "text": "they end up at the Alerts header.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=572"
  },
  {
    "text": "VoiceOver users would not even know that this graph exists.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=575"
  },
  {
    "text": "I built the graph using the new Canvas view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=578"
  },
  {
    "text": "Canvas makes it easier to draw a collection of shapes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=581"
  },
  {
    "text": "For more on Canvas, please check out Jacob's presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=584"
  },
  {
    "text": "on how it can be used to add rich graphics to your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=587"
  },
  {
    "text": "The most important takeaway for accessibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=591"
  },
  {
    "text": "is that Canvas draws a collection of shapes.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=593"
  },
  {
    "text": "And just like we saw with BudgetSlider, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=596"
  },
  {
    "text": "shapes are not accessible by default.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=598"
  },
  {
    "text": "All users need to be able to view their budget history, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=601"
  },
  {
    "text": "so let's make this accessible for everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=604"
  },
  {
    "text": "Starting with the basics, let's give our Canvas a label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=608"
  },
  {
    "text": "This will automatically create a new accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=612"
  },
  {
    "text": "for the Canvas and assign its label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=614"
  },
  {
    "text": "Now, I'd like each bar in the graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=617"
  },
  {
    "text": "to be represented by their own accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=619"
  },
  {
    "text": "This is a use case where we have an accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=623"
  },
  {
    "text": "and want to provide its children.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=626"
  },
  {
    "text": "To do this, I'll use the new accessibilityChildren(children:) modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=629"
  },
  {
    "text": "This will transform the accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=634"
  },
  {
    "text": "into an accessibility container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=636"
  },
  {
    "text": "preserving other accessibility properties, such as the label.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=638"
  },
  {
    "text": "The modifier takes a ViewBuilder, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=642"
  },
  {
    "text": "which allows us to set new views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=644"
  },
  {
    "text": "as children of the accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=646"
  },
  {
    "text": "Recall that our Budget History graph ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=650"
  },
  {
    "text": "is drawing a horizontal bar graph, so we'll use an HStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=652"
  },
  {
    "text": "and return a view for each budget.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=656"
  },
  {
    "text": "I'll use a Rectangle for each accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=659"
  },
  {
    "text": "so that the frame will fill all available vertical space.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=662"
  },
  {
    "text": "This will make each accessibility element's frame ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=666"
  },
  {
    "text": "bigger than what's displayed visually, and that's OK.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=668"
  },
  {
    "text": "Having a large but consistent frame will make it easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=671"
  },
  {
    "text": "to navigate on iOS ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=674"
  },
  {
    "text": "when VoiceOver users drag their finger across the screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=676"
  },
  {
    "text": "to scan for accessibility elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=678"
  },
  {
    "text": "If I select the HStack ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=683"
  },
  {
    "text": "from within the accessibilityChildren(children:) modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=684"
  },
  {
    "text": "the Accessibility Preview confirms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=687"
  },
  {
    "text": "that an element has been created for each bar in the graph.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=689"
  },
  {
    "text": "These will all be accessible as children ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=692"
  },
  {
    "text": "of the Canvas accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=695"
  },
  {
    "text": "With these changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=698"
  },
  {
    "text": "the Budget History graph is now completely accessible, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=699"
  },
  {
    "text": "and assistive technologies can navigate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=702"
  },
  {
    "text": "through each bar in the graph.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=704"
  },
  {
    "text": "Notice that the frame for each element is the same, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=707"
  },
  {
    "text": "which is ideal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=709"
  },
  {
    "text": "For more complex charts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=712"
  },
  {
    "text": "we have other ways of making them accessible.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=713"
  },
  {
    "text": "For that, please check out Preston's presentation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=716"
  },
  {
    "text": "on bringing accessibility to charts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=718"
  },
  {
    "text": "But with accessibility children, the accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=721"
  },
  {
    "text": "of a view can differ from what's presented visually, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=723"
  },
  {
    "text": "allowing you to tailor a great experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=726"
  },
  {
    "text": "But accessibility children can also be used to compose ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=729"
  },
  {
    "text": "the accessibility with the help of the combine behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=731"
  },
  {
    "text": "As a quick refresh, the combine child behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=735"
  },
  {
    "text": "will merge properties from multiple accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=738"
  },
  {
    "text": "into a new or existing accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=741"
  },
  {
    "text": "But with the addition of the accessibility children API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=745"
  },
  {
    "text": "it can now also be used to compose accessibility ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=748"
  },
  {
    "text": "in a generic way.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=750"
  },
  {
    "text": "With accessibility representation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=754"
  },
  {
    "text": "the original accessibility is completely replaced.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=755"
  },
  {
    "text": "This means no composition can take place; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=760"
  },
  {
    "text": "whereas accessibility children is additive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=764"
  },
  {
    "text": "This means you could later combine the children ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=771"
  },
  {
    "text": "to merge their properties into the original element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=773"
  },
  {
    "text": "This is a more advanced use case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=777"
  },
  {
    "text": "of the accessibilityChildren(children:) modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=778"
  },
  {
    "text": "but it's a functionality I wanted to highlight.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=780"
  },
  {
    "text": "Examples are featured in this presentation's ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=783"
  },
  {
    "text": "Accessibility Catalog Sample Project.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=785"
  },
  {
    "text": "I hope to see many of you explore what's possible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=788"
  },
  {
    "text": "with this kind of composition.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=790"
  },
  {
    "text": "accessibilityChildren(children:) gives you control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=793"
  },
  {
    "text": "over the children of a container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=795"
  },
  {
    "text": "And with that, complex graphs drawn with Canvas ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=797"
  },
  {
    "text": "can be made accessible with modifiers and views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=800"
  },
  {
    "text": "you're already familiar with.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=802"
  },
  {
    "text": "And with the combine child behavior, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=805"
  },
  {
    "text": "the accessibility of a single view can be composed of many.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=806"
  },
  {
    "text": "Now that we've learned how to make individual components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=810"
  },
  {
    "text": "of our app accessible, we can start putting things together ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=812"
  },
  {
    "text": "to refine the navigation experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=815"
  },
  {
    "text": "I've heard that navigating Wallet Pal with VoiceOver ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=818"
  },
  {
    "text": "is confusing and difficult.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=820"
  },
  {
    "text": "So we have some more work to do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=822"
  },
  {
    "text": "if we want to deliver a great accessible app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=824"
  },
  {
    "text": "Let's take a closer look at the Friends carousel at the top.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=829"
  },
  {
    "text": "While I don't have this feature built yet, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=833"
  },
  {
    "text": "I plan to add some kind of gamification to Wallet Pal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=835"
  },
  {
    "text": "So I've added a challenge button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=838"
  },
  {
    "text": "at the top left of each friend view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=840"
  },
  {
    "text": "We already fixed the SymbolButtonStyle, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=843"
  },
  {
    "text": "so the challenge button will be properly labeled now.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=845"
  },
  {
    "text": "But since users are reporting that navigation is confusing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=849"
  },
  {
    "text": "are there other issues? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=852"
  },
  {
    "text": "To answer that, we must first understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=853"
  },
  {
    "text": "how assistive technologies will navigate Wallet Pal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=855"
  },
  {
    "text": "By default, accessibility elements are sorted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=859"
  },
  {
    "text": "based off their geometric position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=861"
  },
  {
    "text": "in relation to other elements, from top left to bottom right.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=863"
  },
  {
    "text": "This means that without accessibility containers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=868"
  },
  {
    "text": "to differentiate the content, VoiceOver would navigate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=870"
  },
  {
    "text": "through each of the challenge buttons, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=873"
  },
  {
    "text": "then the Image and Add Friend button, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=876"
  },
  {
    "text": "and finally, the text with the user's name.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=879"
  },
  {
    "text": "A great feature of the Accessibility Preview ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=882"
  },
  {
    "text": "is that it shows accessibility elements in their sorted order.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=885"
  },
  {
    "text": "This makes it easy to visualize how assistive technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=888"
  },
  {
    "text": "will navigate right from within Xcode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=891"
  },
  {
    "text": "As expected, the sorted order matches what we previously saw.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=894"
  },
  {
    "text": "And this order would certainly be confusing to navigate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=898"
  },
  {
    "text": "Now there are multiple ways ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=902"
  },
  {
    "text": "we could fix the sort order of the accessibility elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=903"
  },
  {
    "text": "One thing we could do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=907"
  },
  {
    "text": "is to introduce accessibility containers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=908"
  },
  {
    "text": "I'll add the accessibilityElement(children:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=911"
  },
  {
    "text": "with the contain behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=913"
  },
  {
    "text": "This will wrap the accessibility elements of each FriendCellView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=916"
  },
  {
    "text": "in an accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=919"
  },
  {
    "text": "This fixes the navigation order, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=922"
  },
  {
    "text": "because children of an accessibility container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=923"
  },
  {
    "text": "are navigated before moving to the next accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=926"
  },
  {
    "text": "With this change, VoiceOver will navigate through the children ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=930"
  },
  {
    "text": "of the accessibility container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=933"
  },
  {
    "text": "before moving to the next accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=935"
  },
  {
    "text": "And so we achieve a much more desirable navigation order.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=939"
  },
  {
    "text": "But could we do better to improve this experience? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=942"
  },
  {
    "text": "One problem is that the challenge button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=945"
  },
  {
    "text": "is navigated to before knowing who the user is.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=947"
  },
  {
    "text": "A VoiceOver user would want to know the name of the user ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=951"
  },
  {
    "text": "before sending a challenge, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=954"
  },
  {
    "text": "so this button should really be sorted last.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=956"
  },
  {
    "text": "We can use the accessibilitySortPriority(_:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=959"
  },
  {
    "text": "to fix this.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=961"
  },
  {
    "text": "accessibilitySortPriority(_:) can be used to change the order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=964"
  },
  {
    "text": "of elements within an accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=967"
  },
  {
    "text": "An element with a higher priority will be sorted first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=970"
  },
  {
    "text": "whereas a lower priority will be sorted last.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=973"
  },
  {
    "text": "Elements with equal priorities are then sorted ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=976"
  },
  {
    "text": "based off their geometric positioning.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=978"
  },
  {
    "text": "I'll add the accessibilitySortPriority(_:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=982"
  },
  {
    "text": "to the challenge button to improve the navigation order.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=984"
  },
  {
    "text": "I'll use a priority of -1 since the default is 0, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=989"
  },
  {
    "text": "to force the sort order of the challenge button to be last.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=992"
  },
  {
    "text": "Now the challenge button will be navigated to last.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=997"
  },
  {
    "text": "This is a good improvement, since there is less chance ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=999"
  },
  {
    "text": "a VoiceOver user would be confused ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1001"
  },
  {
    "text": "as to who they are sending a challenge to, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1003"
  },
  {
    "text": "but it's still not great.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1006"
  },
  {
    "text": "Rather than wrapping each FriendCellView ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1008"
  },
  {
    "text": "in an accessibility container, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1009"
  },
  {
    "text": "we could combine the children into a single element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1012"
  },
  {
    "text": "Recall that combine merges properties from children ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1015"
  },
  {
    "text": "into an existing or new accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1018"
  },
  {
    "text": "The combine behavior also curates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1021"
  },
  {
    "text": "which properties are merged for the best default result.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1023"
  },
  {
    "text": "For example, the challenge button has become an action ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1026"
  },
  {
    "text": "named \"Send Challenge\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1029"
  },
  {
    "text": "This too fixes the navigation order and reduces the number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1031"
  },
  {
    "text": "of accessibility elements.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1034"
  },
  {
    "text": "Now there's a single element for each user, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1036"
  },
  {
    "text": "and each element has a Send Challenge action.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1039"
  },
  {
    "text": "It is often ideal to combine the accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1043"
  },
  {
    "text": "of views that are represented in a ForEach.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1045"
  },
  {
    "text": "As you may have picked up on by now, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1048"
  },
  {
    "text": "combine is a super useful child behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1050"
  },
  {
    "text": "Instead of children being individually navigable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1053"
  },
  {
    "text": "it merges their properties into a single, navigable element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1055"
  },
  {
    "text": "For when you need a single element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1059"
  },
  {
    "text": "but do not want it to inherit properties from the children, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1061"
  },
  {
    "text": "use the ignore behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1063"
  },
  {
    "text": "And lastly, the contain child behavior wraps the children ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1066"
  },
  {
    "text": "in an accessibility container and should be used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1068"
  },
  {
    "text": "to express a groups of views that are related.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1071"
  },
  {
    "text": "This not only improves the default sort order ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1074"
  },
  {
    "text": "but has other advantages to assistive technologies.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1076"
  },
  {
    "text": "With the new Accessibility Preview, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1079"
  },
  {
    "text": "discovering these navigation problems is easy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1081"
  },
  {
    "text": "And with a few small changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1083"
  },
  {
    "text": "you can dramatically improve the experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1085"
  },
  {
    "text": "But to deliver a truly exceptional ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1087"
  },
  {
    "text": "navigation experience to VoiceOver users, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1089"
  },
  {
    "text": "you'll will want to consider rotors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1092"
  },
  {
    "text": "Now if you are new to accessibility, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1094"
  },
  {
    "text": "you might be thinking, \"What are rotors?\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1096"
  },
  {
    "text": "In short, rotors are a powerful navigation tool.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1099"
  },
  {
    "text": "They can be thought of as bookmarks ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1102"
  },
  {
    "text": "that allow users to quickly navigate between them.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1104"
  },
  {
    "text": "System rotors, such as the headings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1107"
  },
  {
    "text": "and containers rotor, provide the foundation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1109"
  },
  {
    "text": "for this supercharged form of navigation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1111"
  },
  {
    "text": "For example, users can quickly navigate through sections ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1115"
  },
  {
    "text": "using the headings rotor.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1118"
  },
  {
    "text": "This is because the Section view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1120"
  },
  {
    "text": "automatically adds the isHeader trait to the header view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1122"
  },
  {
    "text": "If you are not using the Section view, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1126"
  },
  {
    "text": "you can add the isHeader trait to your view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1127"
  },
  {
    "text": "with accessibilityAddTraits(_:).",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1130"
  },
  {
    "text": "Similarly, accessibility containers are added ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1132"
  },
  {
    "text": "to the container's rotor, which as we saw earlier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1135"
  },
  {
    "text": "are created with the accessibilityElement(children:) modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1137"
  },
  {
    "text": "As you can see, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1141"
  },
  {
    "text": "supporting the headings rotor is incredibly easy, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1142"
  },
  {
    "text": "and the container's rotor further adds to the benefit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1144"
  },
  {
    "text": "of grouping your accessibility elements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1147"
  },
  {
    "text": "with the contain child behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1149"
  },
  {
    "text": "Now that the basic navigation experience of Wallet Pal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1152"
  },
  {
    "text": "has been refined, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1155"
  },
  {
    "text": "let's take it a step further with rotors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1156"
  },
  {
    "text": "In Wallet Pal, alerts help keep users' spending habits in check ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1159"
  },
  {
    "text": "by providing motivation messages and warnings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1163"
  },
  {
    "text": "when budgets near or exceed their limit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1165"
  },
  {
    "text": "We've incorporated SF Symbols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1169"
  },
  {
    "text": "for the different types of alerts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1171"
  },
  {
    "text": "These allow visual users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1172"
  },
  {
    "text": "to quickly scan through the list.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1174"
  },
  {
    "text": "But this iconography will not help VoiceOver users.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1176"
  },
  {
    "text": "They would instead have to navigate through every alert ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1182"
  },
  {
    "text": "just to know if they have any warnings.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1184"
  },
  {
    "text": "To replicate a similar experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1187"
  },
  {
    "text": "that sighted users have, VoiceOver users need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1189"
  },
  {
    "text": "to be able to exclusively navigate warnings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1191"
  },
  {
    "text": "that way, in an instant, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1194"
  },
  {
    "text": "they can navigate to the next warning alert.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1195"
  },
  {
    "text": "To do this, we can use rotors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1198"
  },
  {
    "text": "For more examples of custom rotors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1201"
  },
  {
    "text": "and why they're so important to efficiency, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1203"
  },
  {
    "text": "please check out our \"VoiceOver Efficiency for Custom Rotors\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1205"
  },
  {
    "text": "presentation from 2020.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1207"
  },
  {
    "text": "To add a warnings rotor to my AlertsView, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1210"
  },
  {
    "text": "the first thing I'll do is to make sure I'm adding my rotor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1212"
  },
  {
    "text": "to an accessibility container.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1214"
  },
  {
    "text": "Some views in SwiftUI are accessibility containers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1217"
  },
  {
    "text": "by default -- such as List or LazyVStack -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1219"
  },
  {
    "text": "but VStacks and HStacks are not, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1223"
  },
  {
    "text": "so I'll add the accessibilityElement(children:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1226"
  },
  {
    "text": "with the contain child behavior.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1228"
  },
  {
    "text": "Next, I'll create my rotor with the accessibilityRotor(_:entries:) modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1232"
  },
  {
    "text": "giving it the name \"Warnings\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1235"
  },
  {
    "text": "And lastly, I'll declare which of my alerts ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1239"
  },
  {
    "text": "I want included in the warnings rotor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1241"
  },
  {
    "text": "in this case all of the warning alerts.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1244"
  },
  {
    "text": "And that's it! ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1246"
  },
  {
    "text": "It's this easy to supercharge your app's navigation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1247"
  },
  {
    "text": "Part of what makes rotors so easy for these simple use cases ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1252"
  },
  {
    "text": "is that SwiftUI can automatically match ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1255"
  },
  {
    "text": "the rotor entry to the accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1257"
  },
  {
    "text": "based off the ID.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1259"
  },
  {
    "text": "This is because the ID of our rotor entry will match ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1262"
  },
  {
    "text": "the ID given to the AlertCellView by a ForEach.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1264"
  },
  {
    "text": "The identity of a view is important to understand ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1268"
  },
  {
    "text": "for accessibility rotors.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1270"
  },
  {
    "text": "So if view identity is unclear or you'd like a refresher, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1272"
  },
  {
    "text": "I strongly encourage you to check out ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1275"
  },
  {
    "text": "the \"Demystifying SwiftUI\" presentation to learn more.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1276"
  },
  {
    "text": "Now you might be thinking, \"Hold on, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1280"
  },
  {
    "text": "my view isn't this simple.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1283"
  },
  {
    "text": "What about views that are not within a ForEach?\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1285"
  },
  {
    "text": "Don't worry, the accessibility rotor API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1288"
  },
  {
    "text": "can scale from simple to complex views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1290"
  },
  {
    "text": "This simple case works elegantly ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1293"
  },
  {
    "text": "because there is a single accessibility element -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1295"
  },
  {
    "text": "due to the combine -- for the AlertCellView.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1297"
  },
  {
    "text": "And the AlertCellView is identified by the ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1300"
  },
  {
    "text": "of the alert.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1303"
  },
  {
    "text": "What if for every alert there was also an Actions view? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1305"
  },
  {
    "text": "In this case, the VStack is now the root view of our ForEach, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1310"
  },
  {
    "text": "and it's the VStack which will be given the identity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1314"
  },
  {
    "text": "of the alert.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1316"
  },
  {
    "text": "So to include the AlertCellView in our warnings rotor, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1318"
  },
  {
    "text": "we will need to explicitly mark it as a rotor entry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1320"
  },
  {
    "text": "We can do that with the accessibilityRotorEntry modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1326"
  },
  {
    "text": "This modifier requires a namespace and an ID, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1329"
  },
  {
    "text": "which could be anything as long as they match the ID ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1332"
  },
  {
    "text": "and namespace used to create the AccessibilityRotorEntry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1335"
  },
  {
    "text": "And lastly, we'll need to include this namespace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1340"
  },
  {
    "text": "for each rotor entry.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1343"
  },
  {
    "text": "The ability to refer to an explicit namespace ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1345"
  },
  {
    "text": "is what enables the accessibility rotor API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1347"
  },
  {
    "text": "to scale from simple to complex use cases, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1349"
  },
  {
    "text": "allowing accessibility elements that span across multiple views ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1353"
  },
  {
    "text": "to be included in the same rotor.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1356"
  },
  {
    "text": "Accessibility rotors can also be added to enrich text navigation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1359"
  },
  {
    "text": "To do that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1363"
  },
  {
    "text": "use a different variant of the accessibilityRotor modifier, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1364"
  },
  {
    "text": "which allows you provide an array of text ranges.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1367"
  },
  {
    "text": "This modifier is great for giving VoiceOver users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1371"
  },
  {
    "text": "quick and easy access to specific strings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1373"
  },
  {
    "text": "within a TextEditor, such as emails, links, or phone numbers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1375"
  },
  {
    "text": "Accessibility rotors makes complex navigation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1381"
  },
  {
    "text": "easy for VoiceOver users.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1383"
  },
  {
    "text": "And with the new SwiftUI rotors API, it's never been easier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1385"
  },
  {
    "text": "to deliver this exceptional navigation experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1388"
  },
  {
    "text": "The last topic for today is focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1392"
  },
  {
    "text": "The concept of element of focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1395"
  },
  {
    "text": "is something you may already be familiar with, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1396"
  },
  {
    "text": "but what you may not know ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1398"
  },
  {
    "text": "is that many of our assistive technologies ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1399"
  },
  {
    "text": "have their own focus state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1401"
  },
  {
    "text": "This is what we call \"accessibility focus\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1404"
  },
  {
    "text": "It's the focused view you have been seeing change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1407"
  },
  {
    "text": "when I refer to assistive technologies navigating.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1409"
  },
  {
    "text": "The position of an assistive technology's cursor ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1413"
  },
  {
    "text": "is critical to the user experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1415"
  },
  {
    "text": "When focus is changed in VoiceOver, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1417"
  },
  {
    "text": "the cursor moves to match the focused element's path ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1420"
  },
  {
    "text": "in addition to speaking a description of the element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1422"
  },
  {
    "text": "So when does focus change? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1426"
  },
  {
    "text": "Focus can but may not always change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1428"
  },
  {
    "text": "when one of three events occur.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1430"
  },
  {
    "text": "The first and most common use case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1433"
  },
  {
    "text": "is when a user drives a focus change ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1434"
  },
  {
    "text": "when navigating to a different accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1436"
  },
  {
    "text": "The second case is when the UI changes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1440"
  },
  {
    "text": "and the previously focused view is no longer on screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1442"
  },
  {
    "text": "or is covered by a modal view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1445"
  },
  {
    "text": "When this happens, focus is often reset ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1448"
  },
  {
    "text": "to the first sorted accessibility element.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1450"
  },
  {
    "text": "This covers many use cases automatically, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1453"
  },
  {
    "text": "such as moving to the first accessibility element ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1455"
  },
  {
    "text": "of a newly presented view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1457"
  },
  {
    "text": "But that may not be the best behavior in your app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1459"
  },
  {
    "text": "which is why focus can also be changed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1462"
  },
  {
    "text": "upon programmatic request.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1464"
  },
  {
    "text": "However, this should be handled with caution, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1466"
  },
  {
    "text": "because moving a VoiceOver user's focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1468"
  },
  {
    "text": "can be very disruptive.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1470"
  },
  {
    "text": "On that note, let's focus -- no pun intended -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1473"
  },
  {
    "text": "on the last case.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1476"
  },
  {
    "text": "This year we have a new API that will allow you ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1478"
  },
  {
    "text": "to both request an assistive technology to move its focus, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1480"
  },
  {
    "text": "in addition to reading where an assistive technology ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1483"
  },
  {
    "text": "is currently focused.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1486"
  },
  {
    "text": "Here we have a simple view which tracks a notification, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1488"
  },
  {
    "text": "and if it exists, overlays a custom NotificationBanner.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1491"
  },
  {
    "text": "We want to use this view in Wallet Pal ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1496"
  },
  {
    "text": "to show alerts for push notifications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1497"
  },
  {
    "text": "received while the app is in the foreground.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1499"
  },
  {
    "text": "When the NotificationBanner is added, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1502"
  },
  {
    "text": "assistive technologies will not automatically focus on it.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1504"
  },
  {
    "text": "But we can request they do so ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1508"
  },
  {
    "text": "with the new AccessibilityFocusState.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1509"
  },
  {
    "text": "AccessibilityFocusState is a property wrapper that provides ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1513"
  },
  {
    "text": "both a way of reading where an assistive technology is focused ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1516"
  },
  {
    "text": "and requesting a programmatic focus change.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1519"
  },
  {
    "text": "I'll add one to my view and bind it to the NotificationBanner ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1523"
  },
  {
    "text": "with the accessibilityFocused(_:) modifier.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1526"
  },
  {
    "text": "Next, I'll use the onChange(of:perform:) modifier ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1530"
  },
  {
    "text": "to track when a new notification is received.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1532"
  },
  {
    "text": "Only when a high-priority notification is received ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1535"
  },
  {
    "text": "do we request accessibility focus to change.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1537"
  },
  {
    "text": "It's especially important to note ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1542"
  },
  {
    "text": "that moving focus programmatically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1543"
  },
  {
    "text": "can be very disruptive if no user interaction occurred.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1545"
  },
  {
    "text": "It takes the user out of whatever context ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1550"
  },
  {
    "text": "they are currently focused on, so it must be handled with care.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1551"
  },
  {
    "text": "So for lower priority notifications, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1555"
  },
  {
    "text": "I'll post an accessibility notification ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1557"
  },
  {
    "text": "for VoiceOver to announce.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1559"
  },
  {
    "text": "This way, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1561"
  },
  {
    "text": "VoiceOver users still know a new notification has appeared ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1562"
  },
  {
    "text": "and can navigate to it if desired.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1565"
  },
  {
    "text": "Now let's step inside the NotificationBanner view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1568"
  },
  {
    "text": "When the notification appears, a timer is started.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1571"
  },
  {
    "text": "Upon it completing, the notification is set to nil.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1575"
  },
  {
    "text": "Recall from before that when the notification is nil, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1579"
  },
  {
    "text": "the NotificationBanner will be hidden.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1582"
  },
  {
    "text": "This means if a VoiceOver user was focused ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1584"
  },
  {
    "text": "on the notification banner and the timer expired, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1586"
  },
  {
    "text": "their focus would be reset, since the view is removed; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1589"
  },
  {
    "text": "and this isn't a great user experience.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1593"
  },
  {
    "text": "To fix this, let's read if our NotificationBanner ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1597"
  },
  {
    "text": "is focused by an assistive technology, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1600"
  },
  {
    "text": "and if it is, delay the notification dismissal.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1602"
  },
  {
    "text": "This is the ideal solution.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1605"
  },
  {
    "text": "A VoiceOver user's focus will no longer be reset, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1607"
  },
  {
    "text": "since the view is no longer removed while focused.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1610"
  },
  {
    "text": "Additionally, we have given assistive technology users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1613"
  },
  {
    "text": "an unlimited number of time to digest the content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1616"
  },
  {
    "text": "and interact if desired; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1619"
  },
  {
    "text": "two things that may take assistive technology users ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1621"
  },
  {
    "text": "much longer to do so.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1624"
  },
  {
    "text": "AccessibilityFocusState is the last piece you need ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1628"
  },
  {
    "text": "to deliver exceptional and accessible SwiftUI apps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1630"
  },
  {
    "text": "this year and beyond.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1633"
  },
  {
    "text": "With it, you can read and direct the focus ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1635"
  },
  {
    "text": "of assistive technologies to create smooth transitions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1637"
  },
  {
    "text": "between views.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1640"
  },
  {
    "text": "Wow, we've covered a lot today for SwiftUI accessibility.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1641"
  },
  {
    "text": "We were introduced to the new Accessibility Preview, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1645"
  },
  {
    "text": "which enhances the way you can develop ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1648"
  },
  {
    "text": "and debug SwiftUI accessibility; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1649"
  },
  {
    "text": "we covered how to make custom controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1652"
  },
  {
    "text": "and complex graphs accessible; ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1654"
  },
  {
    "text": "and we took the time to learn how the navigation experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1656"
  },
  {
    "text": "can be improved with grouping, rotors, and focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1659"
  },
  {
    "text": "Put everything together, and it truly has been ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1663"
  },
  {
    "text": "a huge leap for accessibility this year.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1665"
  },
  {
    "text": "For some great simple and complex examples ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1668"
  },
  {
    "text": "of our Accessibility APIs, please checkout ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1670"
  },
  {
    "text": "the Accessibility Catalog Sample Project.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1672"
  },
  {
    "text": "It features more examples that we couldn't cover today ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1675"
  },
  {
    "text": "and some of our recommended best practices.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1677"
  },
  {
    "text": "Thank you so much for joining me.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1680"
  },
  {
    "text": "We look forward to seeing how you make your app accessible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1681"
  },
  {
    "text": "to everyone.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1683"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10119/?time=1685"
  }
]