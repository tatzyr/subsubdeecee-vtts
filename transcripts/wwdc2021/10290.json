[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=0"
  },
  {
    "text": "♪ Bass music playing ♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=1"
  },
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=5"
  },
  {
    "text": "♪ ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=7"
  },
  {
    "text": "Marty Pye: Welcome to \"What’s new in AVKit\".",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=9"
  },
  {
    "text": "My name is Marty Pye and I'm an engineer on the AVKit team.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=11"
  },
  {
    "text": "Today, I'd like to talk about ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=14"
  },
  {
    "text": "some of the enhancements we've made ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=16"
  },
  {
    "text": "to Picture in Picture -- or short, PiP -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=17"
  },
  {
    "text": "as well as to the full-screen experience on macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=19"
  },
  {
    "text": "Let's start with Picture in Picture.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=23"
  },
  {
    "text": "With Picture in Picture, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=27"
  },
  {
    "text": "users can continue to enjoy their video content ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=28"
  },
  {
    "text": "while multitasking with their device.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=30"
  },
  {
    "text": "For example, if you're watching a video full screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=33"
  },
  {
    "text": "and you receive a message, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=35"
  },
  {
    "text": "you can briefly reply to that message ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=37"
  },
  {
    "text": "while continuing to watch your content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=39"
  },
  {
    "text": "The video will automatically enter PiP, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=41"
  },
  {
    "text": "and once you've finished replying, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=44"
  },
  {
    "text": "you can quickly resume full-screen playback.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=45"
  },
  {
    "text": "This makes for a really seamless viewing experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=48"
  },
  {
    "text": "and we think users will expect this behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=51"
  },
  {
    "text": "whenever they're watching videos.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=53"
  },
  {
    "text": "For more information on how to integrate PiP ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=55"
  },
  {
    "text": "into your own apps, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=57"
  },
  {
    "text": "I encourage you to watch this 2019 session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=59"
  },
  {
    "text": "on delivering intuitive media playback with AVKit.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=61"
  },
  {
    "text": "New this year, if your video is playing inline, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=65"
  },
  {
    "text": "you can optionally allow it to automatically enter PiP ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=68"
  },
  {
    "text": "when a user swipes back to the Home screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=71"
  },
  {
    "text": "Enabling this behavior is achieved via the ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=74"
  },
  {
    "text": "canStartPictureInPicture AutomaticallyFromInline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=76"
  },
  {
    "text": "property.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=79"
  },
  {
    "text": "This property is available both on AVPlayerViewController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=81"
  },
  {
    "text": "for apps using our native controls ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=84"
  },
  {
    "text": "and on AVPictureInPictureController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=86"
  },
  {
    "text": "for apps implementing their own custom UI.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=88"
  },
  {
    "text": "Make sure to only set this flag to true ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=91"
  },
  {
    "text": "when the playing content is intended ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=93"
  },
  {
    "text": "to be the user's primary focus.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=95"
  },
  {
    "text": "If you're using AVPlayerViewController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=99"
  },
  {
    "text": "to present video content, PiP is handled for you.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=101"
  },
  {
    "text": "There's nothing you need to do.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=104"
  },
  {
    "text": "If you're not using AVPlayerViewController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=106"
  },
  {
    "text": "you can still use AVPictureInPictureController ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=108"
  },
  {
    "text": "to bring the native PiP experience to your app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=111"
  },
  {
    "text": "First, you need to configure ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=114"
  },
  {
    "text": "your app's audio session category for playback ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=115"
  },
  {
    "text": "and enable the PiP background mode.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=118"
  },
  {
    "text": "Then, all you need to do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=121"
  },
  {
    "text": "is create a pictureInPictureController, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=122"
  },
  {
    "text": "passing in a reference to the playerLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=124"
  },
  {
    "text": "Then, when a user attempts to toggle Picture in Picture ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=128"
  },
  {
    "text": "using the button you provide, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=130"
  },
  {
    "text": "you just need to call start or stop PiP ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=132"
  },
  {
    "text": "on the controller object.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=134"
  },
  {
    "text": "Up until now, our Picture in Picture experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=137"
  },
  {
    "text": "was built around AVPlayer-based content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=139"
  },
  {
    "text": "Today, I'm excited to announce the same level of support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=142"
  },
  {
    "text": "for AVSampleBufferDisplayLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=145"
  },
  {
    "text": "Instead of creating the Picture in Picture controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=148"
  },
  {
    "text": "with a player layer, you first create a ContentSource, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=150"
  },
  {
    "text": "which you set up with either an AVPlayerLayer or -- ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=153"
  },
  {
    "text": "as shown here -- with an AVSampleBufferDisplayLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=156"
  },
  {
    "text": "For a user, the Picture in Picture experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=160"
  },
  {
    "text": "will be identical.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=162"
  },
  {
    "text": "For you as a developer, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=163"
  },
  {
    "text": "there are some new responsibilities ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=165"
  },
  {
    "text": "associated with supporting PiP for AVSampleBufferDisplayLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=166"
  },
  {
    "text": "Let's take a look at this playback delegate.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=171"
  },
  {
    "text": "We have to rely on playback state information ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=173"
  },
  {
    "text": "provided via the new ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=176"
  },
  {
    "text": "AVPictureInPictureSample BufferPlaybackDelegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=177"
  },
  {
    "text": "in order to render the PiP UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=180"
  },
  {
    "text": "since media playback is not managed by an AVPlayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=182"
  },
  {
    "text": "When the user attempts to control media from the PiP UI, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=186"
  },
  {
    "text": "we forward those commands to the delegate to handle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=189"
  },
  {
    "text": "Let's go through the five individual callbacks one by one.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=192"
  },
  {
    "text": "The setPlaying function is called when the user presses ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=196"
  },
  {
    "text": "the Play/Pause button in the PiP window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=199"
  },
  {
    "text": "The skipByInterval function is called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=201"
  },
  {
    "text": "when the user presses one of the skip buttons.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=203"
  },
  {
    "text": "Use these callbacks to control your media accordingly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=205"
  },
  {
    "text": "The timeRangeForPlayback function allows you to specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=209"
  },
  {
    "text": "the currently playable time range.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=212"
  },
  {
    "text": "This allows us to render the timeline ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=214"
  },
  {
    "text": "and show where the playhead is currently.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=216"
  },
  {
    "text": "Time ranges with a finite duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=219"
  },
  {
    "text": "should always contain the current time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=221"
  },
  {
    "text": "of the sample buffer display layer's timebase.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=222"
  },
  {
    "text": "Use a time range with an infinite duration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=225"
  },
  {
    "text": "to indicate live content.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=228"
  },
  {
    "text": "The didTransitionToRenderSize function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=230"
  },
  {
    "text": "is called when the Picture in Picture window ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=232"
  },
  {
    "text": "changes size, such as during pinch-to-zoom.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=234"
  },
  {
    "text": "Take this render size into account ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=237"
  },
  {
    "text": "when choosing media variants ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=239"
  },
  {
    "text": "in order to avoid unnecessary decoding overhead.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=241"
  },
  {
    "text": "The isPlaybackPaused function is called periodically ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=244"
  },
  {
    "text": "and informs the Picture in Picture UI ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=247"
  },
  {
    "text": "whether to reflect a paused or playing state.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=249"
  },
  {
    "text": "This is conceptually the equivalent ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=252"
  },
  {
    "text": "of timeControlStatus on AVPlayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=254"
  },
  {
    "text": "Next, let's take a look at some of the improvements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=257"
  },
  {
    "text": "we've made to the full-screen experience on macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=259"
  },
  {
    "text": "In Big Sur, when you take a video full screen ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=263"
  },
  {
    "text": "in a Mac Catalyst app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=265"
  },
  {
    "text": "the video would fill the entire window ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=267"
  },
  {
    "text": "but not the entire screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=269"
  },
  {
    "text": "Now in macOS Monterey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=271"
  },
  {
    "text": "the video will take up the entire screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=273"
  },
  {
    "text": "You end up with a true full-screen experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=276"
  },
  {
    "text": "for both native macOS and Mac Catalyst apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=278"
  },
  {
    "text": "The playback controls look the same for both.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=282"
  },
  {
    "text": "All Mac Catalyst apps will get this new behavior automatically.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=284"
  },
  {
    "text": "Just like in any native macOS full-screen experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=288"
  },
  {
    "text": "the user can swipe back to the app window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=291"
  },
  {
    "text": "A placeholder will be shown instead of the original video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=294"
  },
  {
    "text": "indicating that the content is playing full screen.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=297"
  },
  {
    "text": "This is very similar to the placeholder shown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=300"
  },
  {
    "text": "when the video is playing in Picture in Picture.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=302"
  },
  {
    "text": "In a scenario where you present a player view controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=306"
  },
  {
    "text": "full screen after a user selects some content, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=308"
  },
  {
    "text": "the view controller will still present in full window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=311"
  },
  {
    "text": "However, new in macOS Monterey, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=315"
  },
  {
    "text": "users can detach to a true full-screen playback experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=318"
  },
  {
    "text": "by pressing the green full screen button ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=321"
  },
  {
    "text": "in the top left of the window.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=323"
  },
  {
    "text": "The full screen life cycle can be explicitly managed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=325"
  },
  {
    "text": "to provide a better user experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=328"
  },
  {
    "text": "based on your application's needs.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=330"
  },
  {
    "text": "Let's take a look at an example.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=332"
  },
  {
    "text": "As we've already shown, a user should be able ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=335"
  },
  {
    "text": "to take a video full screen and then swipe back to your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=337"
  },
  {
    "text": "while playback continues.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=340"
  },
  {
    "text": "They should be able to navigate your app freely, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=343"
  },
  {
    "text": "even if that results in the player view controller ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=345"
  },
  {
    "text": "being removed from your view hierarchy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=347"
  },
  {
    "text": "At any point in time, they should be able to either swipe ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=350"
  },
  {
    "text": "or use Mission Control to navigate back ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=353"
  },
  {
    "text": "to the full-screen video.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=355"
  },
  {
    "text": "So let's take a look at how to make that work.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=357"
  },
  {
    "text": "You are responsible for ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=359"
  },
  {
    "text": "the playerViewController's life cycle.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=360"
  },
  {
    "text": "In order to achieve an optimal experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=363"
  },
  {
    "text": "you need to make sure to keep the playerViewController alive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=365"
  },
  {
    "text": "even if it's not in your app's view hierarchy.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=369"
  },
  {
    "text": "Otherwise, when the user navigates away from the page ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=372"
  },
  {
    "text": "with the video, full-screen playback will end ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=374"
  },
  {
    "text": "as the playerViewController is released.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=377"
  },
  {
    "text": "All you need to do is keep a strong reference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=380"
  },
  {
    "text": "to the playerViewController when you receive the ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=382"
  },
  {
    "text": "willBeginFullScreenPresentation callback.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=384"
  },
  {
    "text": "Then, once the user exits full screen, you'll receive the ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=387"
  },
  {
    "text": "willEndFullScreenPresentation callback.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=391"
  },
  {
    "text": "This is your opportunity to let go of ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=394"
  },
  {
    "text": "the playerViewController you were keeping alive, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=396"
  },
  {
    "text": "assuming the user has navigated away ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=398"
  },
  {
    "text": "from the original view it was presented from.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=400"
  },
  {
    "text": "The same applies for native macOS.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=403"
  },
  {
    "text": "You can use the new playerViewDelegate ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=406"
  },
  {
    "text": "to keep the playerView alive until you receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=408"
  },
  {
    "text": "the playerViewWillExitFullScreen callback.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=410"
  },
  {
    "text": "When a user exits full screen, you will also receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=414"
  },
  {
    "text": "this restoreUserInterface callback.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=417"
  },
  {
    "text": "This is an opportunity for your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=420"
  },
  {
    "text": "to navigate back to the original page containing the video, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=421"
  },
  {
    "text": "assuming that's appropriate for your use case.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=425"
  },
  {
    "text": "This is very similar to the existing callback you receive ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=428"
  },
  {
    "text": "when a user stops Picture in Picture.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=431"
  },
  {
    "text": "Make sure to return from this completionHandler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=434"
  },
  {
    "text": "as quickly as possible so as not to block ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=436"
  },
  {
    "text": "the transition from full screen to inline.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=438"
  },
  {
    "text": "Returning false indicates that restoration failed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=441"
  },
  {
    "text": "or isn't possible, in which case ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=444"
  },
  {
    "text": "the content exits full screen without an animation.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=446"
  },
  {
    "text": "With that, I would like to wrap up today's session.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=449"
  },
  {
    "text": "We saw how to use the new content source API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=452"
  },
  {
    "text": "to add Picture in Picture support to your app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=455"
  },
  {
    "text": "when using AVSampleBufferDisplayLayer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=457"
  },
  {
    "text": "instead of AVPlayerLayer.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=459"
  },
  {
    "text": "For macOS and Mac Catalyst, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=461"
  },
  {
    "text": "we went over the enhanced full screen experience, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=463"
  },
  {
    "text": "and outlined the necessary steps ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=466"
  },
  {
    "text": "for your code to integrate seamlessly.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=467"
  },
  {
    "text": "I hope you enjoyed today's session ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=470"
  },
  {
    "text": "and I look forward to seeing some of these features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=472"
  },
  {
    "text": "integrated into your apps.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=474"
  },
  {
    "text": "Enjoy the rest of the conference.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=476"
  },
  {
    "text": "♪",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10290/?time=478"
  }
]