[
  {
    "text": " ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2"
  },
  {
    "text": "Hello, my name is Tony, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=9"
  },
  {
    "text": "and I'm an engineer on the Foundation team. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=10"
  },
  {
    "text": "Welcome to “What’s new in Foundation.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=12"
  },
  {
    "text": "The Foundation framework provides base functionality ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=15"
  },
  {
    "text": "for all apps and frameworks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=18"
  },
  {
    "text": "It has plenty of features, including everything ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=19"
  },
  {
    "text": "from file handling to networking and notifications. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=22"
  },
  {
    "text": "Today I’d like to focus on something all apps need: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=25"
  },
  {
    "text": "internationalization and localization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=28"
  },
  {
    "text": "In this year’s releases, we have some ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=31"
  },
  {
    "text": "of the biggest advancements ever in this API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=32"
  },
  {
    "text": "We started at a low level, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=36"
  },
  {
    "text": "rethinking what an attributed string is in Swift. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=38"
  },
  {
    "text": "We rebuilt our formatters for Swift, making them faster, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=43"
  },
  {
    "text": "easier to use, and adding new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=47"
  },
  {
    "text": "And finally, we have a brand new feature ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=50"
  },
  {
    "text": "called automatic grammar agreement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=52"
  },
  {
    "text": "It dramatically reduces the number ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=55"
  },
  {
    "text": "of localized strings you need to provide while, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=57"
  },
  {
    "text": "at the same time, making your code simpler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=60"
  },
  {
    "text": "Let’s jump right in to attributed strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=62"
  },
  {
    "text": "An attributed string is a combination of characters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=65"
  },
  {
    "text": "a set of ranges, and a dictionary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=69"
  },
  {
    "text": "Attributed strings allow you to associate attributes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=72"
  },
  {
    "text": "which are key-value pairs, to a specific range of a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=75"
  },
  {
    "text": "The most common attributes are defined by the SDK, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=80"
  },
  {
    "text": "but you can also create your own. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=82"
  },
  {
    "text": "You’ll often find attributed strings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=85"
  },
  {
    "text": "in API that supports rich text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=87"
  },
  {
    "text": "Let’s look at an example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=90"
  },
  {
    "text": "Here is an app I’m working on called Caffé. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=92"
  },
  {
    "text": "It’s a simple menu. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=94"
  },
  {
    "text": "I pick the food that I want, the size, the quantity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=96"
  },
  {
    "text": "And at the end, it shows me a receipt ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=102"
  },
  {
    "text": "with a list of everything I’ve ordered. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=104"
  },
  {
    "text": "At the bottom here, I decided to add a short thank-you note. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=107"
  },
  {
    "text": "This is an attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=112"
  },
  {
    "text": "Part of the string is in bold and part is in italics. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=114"
  },
  {
    "text": "The last word has a link as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=118"
  },
  {
    "text": "As you can tell here, attributes can overlap. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=120"
  },
  {
    "text": "Since the beginning of Foundation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=124"
  },
  {
    "text": "we’ve had a reference type called NSAttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=126"
  },
  {
    "text": "This year, we introduce a new struct ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=129"
  },
  {
    "text": "AttributedString, which takes full advantage ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=131"
  },
  {
    "text": "of all of the features that Swift provides us. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=134"
  },
  {
    "text": "First and foremost, it’s a value type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=137"
  },
  {
    "text": "It also has the same character-counting behavior ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=141"
  },
  {
    "text": "as Swift String. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=143"
  },
  {
    "text": "As part of our commitment to making it easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=146"
  },
  {
    "text": "to write inclusive software, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=148"
  },
  {
    "text": "AttributedString is now fully localizable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=150"
  },
  {
    "text": "Finally, it is built with safety and security in mind. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=154"
  },
  {
    "text": "This includes both compile time safety by using strong typing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=157"
  },
  {
    "text": "and also safety during unarchiving using Codable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=161"
  },
  {
    "text": "Let’s take a brief tour of what you can do ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=165"
  },
  {
    "text": "with the new AttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=167"
  },
  {
    "text": "We’re going to build our thank-you message. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=171"
  },
  {
    "text": "First, we create an attributed string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=174"
  },
  {
    "text": "using a simple initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=176"
  },
  {
    "text": "I want to set an attribute on this entire string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=178"
  },
  {
    "text": "That’s as simple as setting the font property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=181"
  },
  {
    "text": "In struct AttributedString, all attributes are available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=183"
  },
  {
    "text": "directly, and they use the correct types. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=187"
  },
  {
    "text": "This property, for example, is a SwiftUI Font. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=190"
  },
  {
    "text": "Next, we create another attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=194"
  },
  {
    "text": "This one is a reference to our website, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=197"
  },
  {
    "text": "so we set the link property to a URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=199"
  },
  {
    "text": "Here I’m setting the font and link on the whole string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=203"
  },
  {
    "text": "We’ll look at how to change just part of a string later. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=206"
  },
  {
    "text": "Another useful tool is an attribute container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=210"
  },
  {
    "text": "It’s a place you can hold attributes and values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=213"
  },
  {
    "text": "on their own without the string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=215"
  },
  {
    "text": "Here, I create a container and set some attributes on it, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=218"
  },
  {
    "text": "depending on the importance of my message. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=221"
  },
  {
    "text": "And finally, I merge those attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=224"
  },
  {
    "text": "into both attributed strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=227"
  },
  {
    "text": "As I mentioned, attributed string is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=229"
  },
  {
    "text": "a combination of characters, ranges, and a dictionary. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=232"
  },
  {
    "text": "The attributed string itself is not a collection ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=235"
  },
  {
    "text": "of any single one of those things. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=237"
  },
  {
    "text": "Instead, in order to gain access ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=239"
  },
  {
    "text": "to these properties, it has what we call views. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=241"
  },
  {
    "text": "The two most important views are characters, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=245"
  },
  {
    "text": "which provides access to the string, and runs, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=247"
  },
  {
    "text": "which provides access to the attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=250"
  },
  {
    "text": "These views are Swift collections, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=252"
  },
  {
    "text": "which means the functions you are familiar with from types ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=254"
  },
  {
    "text": "like Array are available here too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=257"
  },
  {
    "text": "Let’s look at another example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=260"
  },
  {
    "text": "Let’s say our designers told us to add a little bit ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=263"
  },
  {
    "text": "of pizzazz to our thank-you message ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=266"
  },
  {
    "text": "by making all punctuation a fun orange color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=267"
  },
  {
    "text": "To do this, first I need to find ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=270"
  },
  {
    "text": "where the punctuation is in the attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=272"
  },
  {
    "text": "Like other Swift collections, attributed string views use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=275"
  },
  {
    "text": "indices, which are simply a position ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=278"
  },
  {
    "text": "for some element in the collection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=281"
  },
  {
    "text": "To iterate by index, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=283"
  },
  {
    "text": "I use the standard library indices function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=285"
  },
  {
    "text": "Next, I use the function isPunctuation to check ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=288"
  },
  {
    "text": "if this character is one that we need to change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=292"
  },
  {
    "text": "Finally, I use another feature of attributed string, slicing, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=295"
  },
  {
    "text": "to apply an attribute to only a subrange of the whole string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=298"
  },
  {
    "text": "The range starts at this index and continues ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=302"
  },
  {
    "text": "until the next index after that, so one character. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=305"
  },
  {
    "text": "And now the punctuation is orange. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=309"
  },
  {
    "text": "Let’s look at another view, runs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=311"
  },
  {
    "text": "A run is the starting location, length, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=313"
  },
  {
    "text": "and value of a particular attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=316"
  },
  {
    "text": "We can start by counting all the runs in our message. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=319"
  },
  {
    "text": "This will iterate each contiguous range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=322"
  },
  {
    "text": "of attribute values in the string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=324"
  },
  {
    "text": "There are four runs in this string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=326"
  },
  {
    "text": "Each run has a value or nil for each attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=329"
  },
  {
    "text": "The ranges from characters and runs are interchangeable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=332"
  },
  {
    "text": "so you can find the string for an attribute or vice-versa. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=336"
  },
  {
    "text": "Here I use the range of the attribute in a subscript ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=340"
  },
  {
    "text": "for the characters view, converting the result ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=343"
  },
  {
    "text": "into a standalone string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=345"
  },
  {
    "text": "It’s often most useful to look at runs by focusing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=348"
  },
  {
    "text": "on a specific attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=351"
  },
  {
    "text": "Here, we use the key path link to coalesce ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=353"
  },
  {
    "text": "for just the link attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=356"
  },
  {
    "text": "Each element of the resulting collection will give us ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=358"
  },
  {
    "text": "the value of the link attribute, not taking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=361"
  },
  {
    "text": "into account other attributes which may be set in the string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=363"
  },
  {
    "text": "If we only look at links, we have three runs: the first, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=367"
  },
  {
    "text": "where it is not set; the second, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=371"
  },
  {
    "text": "where it is set to a value; and the third, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=373"
  },
  {
    "text": "the last period in the sentence, where it is not set again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=375"
  },
  {
    "text": "Iterating the runs gives us a tuple ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=379"
  },
  {
    "text": "of the value and the range. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=381"
  },
  {
    "text": "Since the values are type safe, we can use an API, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=383"
  },
  {
    "text": "like scheme, which exists on URL, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=385"
  },
  {
    "text": "without casting or worrying about having the wrong type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=388"
  },
  {
    "text": "Here I’m checking that every link ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=392"
  },
  {
    "text": "in the attributed string is https. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=393"
  },
  {
    "text": "Another useful technique is to look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=397"
  },
  {
    "text": "for a substring and use that range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=399"
  },
  {
    "text": "to edit the characters or the attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=401"
  },
  {
    "text": "Let’s say I want to replace the word \"visit' ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=403"
  },
  {
    "text": "with something that has a more throwback vibe. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=406"
  },
  {
    "text": "First, I look for the range of a substring. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=408"
  },
  {
    "text": "Next, I use that range to set the attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=411"
  },
  {
    "text": "and characters on only that subrange. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=414"
  },
  {
    "text": "The result is an attributed string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=418"
  },
  {
    "text": "with six runs, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=420"
  },
  {
    "text": "Next, let’s talk about localization. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=422"
  },
  {
    "text": "AttributedString is fully localizable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=425"
  },
  {
    "text": "We also added localization support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=428"
  },
  {
    "text": "to NSAttributedString in Objective-C. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=430"
  },
  {
    "text": "Attributed strings are located ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=432"
  },
  {
    "text": "in your app’s strings files, just like a regular string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=434"
  },
  {
    "text": "In Swift, we now support localized formatting of String ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=438"
  },
  {
    "text": "and AttributedString using string interpolation ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=441"
  },
  {
    "text": "just like SwiftUI’s text view. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=444"
  },
  {
    "text": "Here’s a simple example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=447"
  },
  {
    "text": "This function returns a localized string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=449"
  },
  {
    "text": "which is customized with a user’s document name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=451"
  },
  {
    "text": "Instead of using format specifiers like %@ or %d ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=455"
  },
  {
    "text": "and calling a format function, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=459"
  },
  {
    "text": "you can now just pass the value in directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=461"
  },
  {
    "text": "The same approach works for AttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=464"
  },
  {
    "text": "Xcode can generate your strings files ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=469"
  },
  {
    "text": "from these new initializers using the compiler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=471"
  },
  {
    "text": "To turn it on, go to your build settings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=473"
  },
  {
    "text": "look for the localization settings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=476"
  },
  {
    "text": "and turn on Use Compiler to Extract Swift Strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=478"
  },
  {
    "text": "You may be wondering how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=482"
  },
  {
    "text": "the localized attributed string gets its attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=483"
  },
  {
    "text": "I’m excited to tell you that we’ve added support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=486"
  },
  {
    "text": "for Markdown to AttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=488"
  },
  {
    "text": "Here’s an example of using a localized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=490"
  },
  {
    "text": "attributed string, right in a SwiftUI Text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=492"
  },
  {
    "text": "I start off with just a plain string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=495"
  },
  {
    "text": "By adding two asterisks around the text, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=498"
  },
  {
    "text": "I make it strongly emphasized, which SwiftUI renders as bold. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=501"
  },
  {
    "text": "I can use underscores to make the text emphasized, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=505"
  },
  {
    "text": "which SwiftUI renders as italic. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=509"
  },
  {
    "text": "We also support links. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=512"
  },
  {
    "text": "This is a great opportunity for localizers to provide ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=514"
  },
  {
    "text": "customized URLs for different languages. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=517"
  },
  {
    "text": "We also support other inline styles ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=521"
  },
  {
    "text": "like strikethrough and code voice. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=523"
  },
  {
    "text": "Finally, let’s talk about archiving attributed strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=525"
  },
  {
    "text": "First, we need the ability to convert to and from ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=529"
  },
  {
    "text": "the NSAttributedString reference type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=532"
  },
  {
    "text": "Attributed strings can be part of your data model, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=535"
  },
  {
    "text": "which means we need to be able to encode and decode them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=538"
  },
  {
    "text": "Finally, we want a way to specify custom attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=541"
  },
  {
    "text": "in Markdown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=544"
  },
  {
    "text": "These operations are all related to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=546"
  },
  {
    "text": "Let’s start by looking at conversion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=548"
  },
  {
    "text": "We’ve all written a lot of code that uses NSAttributedString, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=552"
  },
  {
    "text": "so we’ve made it easy to convert ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=556"
  },
  {
    "text": "from the struct to the class type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=558"
  },
  {
    "text": "Here’s a view that has an NSAttributedString property. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=560"
  },
  {
    "text": "To convert, just pass our struct AttributedString ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=564"
  },
  {
    "text": "to the NSAttributedString initializer. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=567"
  },
  {
    "text": "For attributes that are part of the SDK, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=570"
  },
  {
    "text": "this is all I need to do. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=572"
  },
  {
    "text": "Now let’s look at encoding and decoding. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=575"
  },
  {
    "text": "Here is a struct that holds a receipt from our Caffé app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=578"
  },
  {
    "text": "Again, I’m using the attributes provided ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=581"
  },
  {
    "text": "by SwiftUI, UIKit, AppKit, and Foundation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=583"
  },
  {
    "text": "That means that AttributedString’s default ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=588"
  },
  {
    "text": "Codable implementation is all I need. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=590"
  },
  {
    "text": "I just add the Codable conformance to Receipt, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=593"
  },
  {
    "text": "and I’m done. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=596"
  },
  {
    "text": "Let’s go a bit further and add support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=598"
  },
  {
    "text": "for encoding a custom attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=600"
  },
  {
    "text": "We’ll start by talking about the attribute itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=602"
  },
  {
    "text": "An attribute is two parts: a key and a value. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=605"
  },
  {
    "text": "The key is a type which conforms ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=609"
  },
  {
    "text": "with the new AttributedStringKey protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=610"
  },
  {
    "text": "That defines what type of value it requires ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=613"
  },
  {
    "text": "and a name for archiving. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=616"
  },
  {
    "text": "This key can also conform with other protocols ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=619"
  },
  {
    "text": "to customize how the value is encoded or decoded. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=621"
  },
  {
    "text": "Let’s say we want to define a range ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=625"
  },
  {
    "text": "of an attributed string to have some extra color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=626"
  },
  {
    "text": "This rainbow effect comes in three levels: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=630"
  },
  {
    "text": "plain, fun, or extreme. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=632"
  },
  {
    "text": "We’ll use an enum to represent that value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=635"
  },
  {
    "text": "and set the name to rainbow. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=638"
  },
  {
    "text": "Defining the type and the name are the only requirements ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=641"
  },
  {
    "text": "of this protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=645"
  },
  {
    "text": "Now, let’s say we want to make this attribute Codable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=647"
  },
  {
    "text": "so that it will be part of the encoded attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=650"
  },
  {
    "text": "All I have to do is add Codable conformance, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=653"
  },
  {
    "text": "Finally, let’s say we want the rainbow level ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=657"
  },
  {
    "text": "to be part of our localized string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=660"
  },
  {
    "text": "That means it can be applied to the right part of the string, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=662"
  },
  {
    "text": "no matter where that is, in any language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=665"
  },
  {
    "text": "All we need is one more protocol conformance to opt in. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=668"
  },
  {
    "text": "When we say that an attribute is Markdown decodable, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=674"
  },
  {
    "text": "then we can decode it straight from Markdown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=677"
  },
  {
    "text": "and insert it into an attributed string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=679"
  },
  {
    "text": "All that’s required is that the value is Codable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=682"
  },
  {
    "text": "Next, let’s take a look at the custom attribute syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=685"
  },
  {
    "text": "for Markdown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=688"
  },
  {
    "text": "In this first example, we have a reference to a link. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=689"
  },
  {
    "text": "It uses square brackets for the link text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=692"
  },
  {
    "text": "and parentheses for the link destination, a URL. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=694"
  },
  {
    "text": "In this second example, we have a reference to an image. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=699"
  },
  {
    "text": "It starts with an exclamation point, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=702"
  },
  {
    "text": "then uses square brackets for the image description ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=704"
  },
  {
    "text": "and parentheses for the image source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=707"
  },
  {
    "text": "These first two examples are common in Markdown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=710"
  },
  {
    "text": "The third example shows our syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=713"
  },
  {
    "text": "for custom attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=715"
  },
  {
    "text": "It starts with a caret, then uses square brackets ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=717"
  },
  {
    "text": "for the text, and parentheses for its attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=720"
  },
  {
    "text": "The attributes are represented with JSON 5. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=723"
  },
  {
    "text": "JSON 5 is compatible with JSON and allows for unquoted keys, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=726"
  },
  {
    "text": "comments, and a few other features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=731"
  },
  {
    "text": "It’s a good match for a human-friendly string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=733"
  },
  {
    "text": "like this one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=735"
  },
  {
    "text": "We’ve also added JSON 5 support ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=737"
  },
  {
    "text": "to our other JSON API in Foundation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=739"
  },
  {
    "text": "Because custom attributes use JSON, anything that can ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=742"
  },
  {
    "text": "be decoded with JSONDecoder is automatically compatible ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=745"
  },
  {
    "text": "with the new custom Markdown syntax. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=749"
  },
  {
    "text": "Here we have a single attribute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=751"
  },
  {
    "text": "two attributes, one string and one number, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=753"
  },
  {
    "text": "and a single attribute with multiple properties. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=756"
  },
  {
    "text": "There is just one additional piece here, which is how ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=759"
  },
  {
    "text": "we connect these names in Markdown to a Swift type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=762"
  },
  {
    "text": "That piece is called an attribute scope. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=765"
  },
  {
    "text": "Scopes are a group of attribute keys. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=767"
  },
  {
    "text": "Scopes are useful when decoding from JSON or Markdown, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=770"
  },
  {
    "text": "because they tell us which attributes we expect ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=774"
  },
  {
    "text": "to find, their names, and how to decode them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=776"
  },
  {
    "text": "We define one scope each for Foundation, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=780"
  },
  {
    "text": "UIKit, AppKit, and SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=783"
  },
  {
    "text": "You can define a scope of your own attributes as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=786"
  },
  {
    "text": "Let’s define a scope for our Caffé App. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=790"
  },
  {
    "text": "We’ll nest the scope inside AttributeScopes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=793"
  },
  {
    "text": "and conform it to the AttributeScope protocol. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=796"
  },
  {
    "text": "Then all we need to do is list the attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=799"
  },
  {
    "text": "inside our scope with “let.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=802"
  },
  {
    "text": "So far, we have just our rainbow attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=805"
  },
  {
    "text": "Next, we’ll include the SwiftUI scope inside of ours. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=808"
  },
  {
    "text": "That allows all of those attributes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=812"
  },
  {
    "text": "in addition to our own. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=814"
  },
  {
    "text": "Scopes nest recursively, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=816"
  },
  {
    "text": "so this also includes Foundation attributes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=817"
  },
  {
    "text": "It’s useful to define a property for our new scope. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=820"
  },
  {
    "text": "That allows us to use a key path syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=823"
  },
  {
    "text": "in functions which take the scope as an argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=826"
  },
  {
    "text": "Finally, we can now load our localized ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=828"
  },
  {
    "text": "and colorful attributed string from custom Markdown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=831"
  },
  {
    "text": "You’ll also find scope-taking functions for archiving ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=834"
  },
  {
    "text": "and conversion to and from NSAttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=837"
  },
  {
    "text": "This allows customization of behavior at every step. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=840"
  },
  {
    "text": "Here’s the first screen of the Caffé app again, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=844"
  },
  {
    "text": "where you can see our custom rainbow attribute in the title. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=846"
  },
  {
    "text": "After the localized string is converted from Markdown ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=850"
  },
  {
    "text": "into an attributed string, the app finds the attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=853"
  },
  {
    "text": "and applies a fun effect to just that range of the string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=856"
  },
  {
    "text": "Because the attribute comes from our localized strings file, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=861"
  },
  {
    "text": "this works correctly for all languages ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=864"
  },
  {
    "text": "that Caffé supports, like Spanish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=866"
  },
  {
    "text": "We’re just getting started, though. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=869"
  },
  {
    "text": "We also have a totally new Formatter API. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=871"
  },
  {
    "text": "Formatters are another long-time Foundation feature. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=875"
  },
  {
    "text": "They are responsible for taking data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=878"
  },
  {
    "text": "like numbers, dates, times, and more and converting it ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=880"
  },
  {
    "text": "into a localized and user-presentable string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=884"
  },
  {
    "text": "Formatters are backed by quite a bit of configuration data, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=887"
  },
  {
    "text": "so it’s a common pattern to cache and reuse them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=890"
  },
  {
    "text": "However, apps are composed of many distinct pieces of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=894"
  },
  {
    "text": "It may not always make sense to share a formatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=897"
  },
  {
    "text": "between all of them. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=900"
  },
  {
    "text": "Also, because of the large variety of ways that people ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=902"
  },
  {
    "text": "read dates and times, plus our desire as app authors ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=904"
  },
  {
    "text": "to present this data in a way that fits our design, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=908"
  },
  {
    "text": "there are a lot of opportunities for edge cases. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=911"
  },
  {
    "text": "This year, we improved both performance and usability ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=914"
  },
  {
    "text": "by rethinking our Formatter API from the ground up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=917"
  },
  {
    "text": "In short, our new APIs focus on the format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=921"
  },
  {
    "text": "Let’s take a look at this code from the Earthquakes sample app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=925"
  },
  {
    "text": "where we can see the caching pattern in action. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=928"
  },
  {
    "text": "It has a two-step process. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=931"
  },
  {
    "text": "First, create and configure a formatter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=934"
  },
  {
    "text": "Next, give the formatter our date and get a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=937"
  },
  {
    "text": "How could it be simpler? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=941"
  },
  {
    "text": "Well, let’s start by removing the requirement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=943"
  },
  {
    "text": "to create our own date formatter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=945"
  },
  {
    "text": "It was really easy to forget that this needed to be cached, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=947"
  },
  {
    "text": "which would lead to re-creating the same formatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=950"
  },
  {
    "text": "for every cell in the table. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=952"
  },
  {
    "text": "Next, the formatting step. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=954"
  },
  {
    "text": "Instead of passing our date through the formatter, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=956"
  },
  {
    "text": "let’s just use the date itself. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=958"
  },
  {
    "text": "Now it’s just one line of code. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=961"
  },
  {
    "text": "You specify the format you want, and that’s it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=963"
  },
  {
    "text": "Let’s talk more about this number format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=967"
  },
  {
    "text": "It’s not a lot of code, but it’s hiding some complexity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=970"
  },
  {
    "text": "and has a few pitfalls to be aware of. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=973"
  },
  {
    "text": "If the argument is not a floating point number, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=975"
  },
  {
    "text": "you’ll get entirely the wrong output here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=978"
  },
  {
    "text": "Readers have to be aware of a special case syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=981"
  },
  {
    "text": "for formatting floating point numbers, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=984"
  },
  {
    "text": "along with a set of modifiers that are just string constants. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=986"
  },
  {
    "text": "We think this code is easier to understand, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=990"
  },
  {
    "text": "maintain, and read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=993"
  },
  {
    "text": "It uses regular Swift functions to specify ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=995"
  },
  {
    "text": "exactly how we want our number to be formatted. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=997"
  },
  {
    "text": "You also get autocompletion and type safety. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1000"
  },
  {
    "text": "We’ve applied this new approach ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1004"
  },
  {
    "text": "to all ten formatters in Foundation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1005"
  },
  {
    "text": "We’ve cleaned up and simplified the interfaces, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1008"
  },
  {
    "text": "made changes to help avoid common pitfalls, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1011"
  },
  {
    "text": "and added a bunch of new features along the way. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1013"
  },
  {
    "text": "Let’s take a look in detail at two ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1017"
  },
  {
    "text": "of the most popular formatted types: ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1019"
  },
  {
    "text": "dates and numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1021"
  },
  {
    "text": "Date formatting is about using a calendar ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1024"
  },
  {
    "text": "and time zone to convert an absolute point in time ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1026"
  },
  {
    "text": "into something a human understands as a date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1030"
  },
  {
    "text": "And even more than that, it takes into account ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1033"
  },
  {
    "text": "all of the preferences that humans have ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1035"
  },
  {
    "text": "about how they like their own dates to look. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1037"
  },
  {
    "text": "We call those preferences locales. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1040"
  },
  {
    "text": "Let’s take a look at the tiny amount of code ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1043"
  },
  {
    "text": "you need in order to format a date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1045"
  },
  {
    "text": "First, I’ll get the current point in time by using Date.now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1048"
  },
  {
    "text": "Next, I call the formatted function. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1053"
  },
  {
    "text": "That's it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1055"
  },
  {
    "text": "Of course, as we just saw in our example, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1057"
  },
  {
    "text": "date formatting is something that has a lot of options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1059"
  },
  {
    "text": "So let’s expand this out a bit. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1062"
  },
  {
    "text": "The formatted function can be configured ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1065"
  },
  {
    "text": "to show only the date or only the time. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1067"
  },
  {
    "text": "Both of those arguments have several options to pick from. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1071"
  },
  {
    "text": "An important goal for this new formatting API is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1075"
  },
  {
    "text": "to provide as much compile time help ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1078"
  },
  {
    "text": "as possible in creating correct formats. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1080"
  },
  {
    "text": "Formatting using magic string values is notorious ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1083"
  },
  {
    "text": "for creating pitfalls, where the format looks correct ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1086"
  },
  {
    "text": "under normal circumstances but produces entirely ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1089"
  },
  {
    "text": "the wrong value in edge cases, like at the end of the year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1092"
  },
  {
    "text": "Here again is our default format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1096"
  },
  {
    "text": "This is a short version of asking ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1099"
  },
  {
    "text": "for the date and time style, like this. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1100"
  },
  {
    "text": "For both the no-argument and simple style versions, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1104"
  },
  {
    "text": "we pick a default format for you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1107"
  },
  {
    "text": "However, if you want to really customize the date, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1109"
  },
  {
    "text": "you just go from here and add the fields you care about. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1111"
  },
  {
    "text": "In this example, I build up a format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1116"
  },
  {
    "text": "by appending fields to the style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1118"
  },
  {
    "text": "I want only the year, day, and month. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1121"
  },
  {
    "text": "Other possibilities include hours, minutes, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1125"
  },
  {
    "text": "seconds, and so on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1127"
  },
  {
    "text": "The output format will automatically adjust ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1129"
  },
  {
    "text": "according to the user’s locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1132"
  },
  {
    "text": "These fields are also configurable. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1135"
  },
  {
    "text": "In this case, I change the month to the wide format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1137"
  },
  {
    "text": "which means that the full month name is printed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1141"
  },
  {
    "text": "Formatting just part of the date is easy with this API as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1144"
  },
  {
    "text": "Here I want to get just the weekday. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1148"
  },
  {
    "text": "Dates can be formatted into different styles, too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1150"
  },
  {
    "text": "Here I choose to use the ISO 8601 format and iso8601, but only ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1153"
  },
  {
    "text": "with the year, month, and day, and separated with a dash. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1160"
  },
  {
    "text": "With these examples, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1164"
  },
  {
    "text": "the formatting pattern becomes clear. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1165"
  },
  {
    "text": "We start with the value we want to format. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1168"
  },
  {
    "text": "We call the formatted function and the argument is the style. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1170"
  },
  {
    "text": "There may be more than one kind of style for each type. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1175"
  },
  {
    "text": "Date, for example, has both dateTime and iso8601. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1178"
  },
  {
    "text": "The style can be used in a default configuration ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1182"
  },
  {
    "text": "or customized. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1185"
  },
  {
    "text": "This formatting API works by specifying a list of fields, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1187"
  },
  {
    "text": "some of which have additional options. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1192"
  },
  {
    "text": "The order of the fields you provide does not matter. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1194"
  },
  {
    "text": "Each field just tells the formatter what values should ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1197"
  },
  {
    "text": "be included somewhere in the final output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1201"
  },
  {
    "text": "We choose a sensible default for the shortest versions ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1204"
  },
  {
    "text": "of the API, those with no arguments or just a style name. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1207"
  },
  {
    "text": "Once you begin adding fields to that, the output becomes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1211"
  },
  {
    "text": "customized and reflects only what you choose to display, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1214"
  },
  {
    "text": "somewhat like placeholder text in your UI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1217"
  },
  {
    "text": "There is also a new API for formatting two dates ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1222"
  },
  {
    "text": "that are relative to each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1225"
  },
  {
    "text": "Here are some examples. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1226"
  },
  {
    "text": "First, formatting two dates in a range. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1229"
  },
  {
    "text": "You can just use the regular Swift range syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1232"
  },
  {
    "text": "with two dates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1235"
  },
  {
    "text": "Formatting ranges allows configuration of showing ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1238"
  },
  {
    "text": "the date and time, just as we did with a single date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1241"
  },
  {
    "text": "You can format this range as a duration or as components ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1245"
  },
  {
    "text": "or a single date relative to right now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1250"
  },
  {
    "text": "Another new feature in formatting ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1253"
  },
  {
    "text": "is attributed output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1255"
  },
  {
    "text": "This allows you to find the location a formatter ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1256"
  },
  {
    "text": "put a particular part of a formatted value ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1259"
  },
  {
    "text": "after it is done rearranging it to fit the user’s preferences. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1262"
  },
  {
    "text": "This, of course, uses our new struct AttributedString. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1265"
  },
  {
    "text": "Applying styling to formatted output shows up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1269"
  },
  {
    "text": "in all kinds of places. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1272"
  },
  {
    "text": "On watchOS, many of the complications ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1273"
  },
  {
    "text": "are formatted strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1275"
  },
  {
    "text": "Since Apple Watch is such a personal device, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1277"
  },
  {
    "text": "it’s important to take into account the user’s preferences, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1280"
  },
  {
    "text": "but it’s also a place where we want to apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1283"
  },
  {
    "text": "a certain kind of design language, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1285"
  },
  {
    "text": "like giving part of a date a color of the user’s choosing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1287"
  },
  {
    "text": "Setting this up is actually quite a lot of fun in SwiftUI. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1290"
  },
  {
    "text": "Let’s look at it together in a demo. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1294"
  },
  {
    "text": "Here I have the starting point for my Caffé companion app, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1296"
  },
  {
    "text": "which shows when your next free coffee is. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1300"
  },
  {
    "text": "I’ve got a SwiftUI view ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1302"
  },
  {
    "text": "which just shows a formatted date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1303"
  },
  {
    "text": "I set the locale on the format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1308"
  },
  {
    "text": "so I can control it with my SwiftUI preview here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1311"
  },
  {
    "text": "It’s a pretty good start, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1316"
  },
  {
    "text": "but I'd like to customize it a bit more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1318"
  },
  {
    "text": "Let’s begin by making this a little more specific ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1322"
  },
  {
    "text": "to my app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1325"
  },
  {
    "text": "I only care about the minute, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1326"
  },
  {
    "text": "the hour, and the weekday. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1329"
  },
  {
    "text": "OK, looking pretty good. Now let’s add a splash of color. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1335"
  },
  {
    "text": "First, we’ll change the return type to AttributedString ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1340"
  },
  {
    "text": "and ask for an attributed output.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1343"
  },
  {
    "text": "Next, we’ll use an attribute container. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1353"
  },
  {
    "text": "These can hold attributes without being attached ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1356"
  },
  {
    "text": "to any particular characters in a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1358"
  },
  {
    "text": "We’re going to create one for the weekday attribute ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1360"
  },
  {
    "text": "that date formats put on their output. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1363"
  },
  {
    "text": "It’s set on the range of the string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1366"
  },
  {
    "text": "that contains the weekday.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1367"
  },
  {
    "text": "Next, we’ll make a container ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1372"
  },
  {
    "text": "for the color attribute we want to set.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1374"
  },
  {
    "text": "And finally, we’ll use an attributed string function ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1380"
  },
  {
    "text": "to replace the attributes matching those ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1383"
  },
  {
    "text": "in the first container with the values ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1385"
  },
  {
    "text": "in the second one on our attributed string.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1387"
  },
  {
    "text": "Because AttributedString is a value type and replacing is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1393"
  },
  {
    "text": "a mutating function, we need to change our “let” to a “var.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1396"
  },
  {
    "text": "Looks great. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1404"
  },
  {
    "text": "Even better, it works for all locales. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1406"
  },
  {
    "text": "Let’s add a few more to our preview to double check.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1408"
  },
  {
    "text": "You can see here that the weekday ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1417"
  },
  {
    "text": "is orange no matter where it is in the formatted date ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1419"
  },
  {
    "text": "for these locales. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1421"
  },
  {
    "text": "Let’s keep learning about even more new formatter APIs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1423"
  },
  {
    "text": "Now that we’ve seen how to turn dates into strings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1426"
  },
  {
    "text": "let’s talk about how to strings into dates. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1429"
  },
  {
    "text": "Date now has an initializer that takes a strategy argument. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1433"
  },
  {
    "text": "The strategy is used to tell the parser ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1437"
  },
  {
    "text": "what fields to expect in the input. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1440"
  },
  {
    "text": "For dates, the format is also a kind of strategy. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1442"
  },
  {
    "text": "That’s useful for round-tripping dates, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1446"
  },
  {
    "text": "like in a text field that both displays output ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1448"
  },
  {
    "text": "and allows the user to type in a new date. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1451"
  },
  {
    "text": "Here is an example of a round trip. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1454"
  },
  {
    "text": "You’ll notice that the parsing can throw. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1456"
  },
  {
    "text": "This is because, depending on the input, parsing can fail. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1458"
  },
  {
    "text": "Some strategies have more advanced options for parsing. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1463"
  },
  {
    "text": "Here, we parse a fixed format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1467"
  },
  {
    "text": "which is useful when the date format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1470"
  },
  {
    "text": "is something received from a server. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1471"
  },
  {
    "text": "To use it, initialize a strategy with a format string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1474"
  },
  {
    "text": "Instead of using magic string values, though, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1477"
  },
  {
    "text": "we use string interpolation. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1480"
  },
  {
    "text": "In this case, we expect a string of the format year-month-day. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1482"
  },
  {
    "text": "Each interpolation is clearly identified by field, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1488"
  },
  {
    "text": "and each specifies exactly what format to expect. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1491"
  },
  {
    "text": "One really nice thing about this is ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1495"
  },
  {
    "text": "the autocomplete experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1497"
  },
  {
    "text": "If I want to use a different day format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1499"
  },
  {
    "text": "autocomplete shows me the valid options ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1502"
  },
  {
    "text": "along with documentation about what each means. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1504"
  },
  {
    "text": "No, more guessing how many Y characters you should use ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1507"
  },
  {
    "text": "to parse a year. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1510"
  },
  {
    "text": "Let’s move on to numbers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1512"
  },
  {
    "text": "Number formatting is about converting an integer ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1513"
  },
  {
    "text": "or floating point value into something a human can read. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1516"
  },
  {
    "text": "Like all formatting, it takes into account preferences ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1520"
  },
  {
    "text": "on how numbers should be displayed. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1522"
  },
  {
    "text": "This includes everything from the kind of digit used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1524"
  },
  {
    "text": "to what character is used to group the digits. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1527"
  },
  {
    "text": "As with date formatting, getting great output is easy ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1530"
  },
  {
    "text": "with no additional parameters required. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1533"
  },
  {
    "text": "There are many supported kinds of options and outputs. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1537"
  },
  {
    "text": "Here we show percentage, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1540"
  },
  {
    "text": "scientific notation, and currency. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1543"
  },
  {
    "text": "Finally, let’s put a few formats together. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1547"
  },
  {
    "text": "List formatting is now just formatting an array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1550"
  },
  {
    "text": "This member style argument specifies the format style ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1554"
  },
  {
    "text": "of each element in the array. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1557"
  },
  {
    "text": "These are numbers, so I’d like to use a percentage. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1559"
  },
  {
    "text": "The output is correct for every user’s locale. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1562"
  },
  {
    "text": "So far we’ve focused on formatting the values directly. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1565"
  },
  {
    "text": "SwiftUI also supports attaching a format style to a TextField. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1568"
  },
  {
    "text": "Since format styles have type information about the kinds ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1573"
  },
  {
    "text": "of values they format, we can use a readable ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1576"
  },
  {
    "text": "but safe syntax for the tip percentage on my receipt here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1578"
  },
  {
    "text": "Let’s look again at our Caffé app ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1582"
  },
  {
    "text": "and see just how many places formatting shows up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1585"
  },
  {
    "text": "We use a list format for the ingredients. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1588"
  },
  {
    "text": "We use a currency format for the prices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1591"
  },
  {
    "text": "We use a number format for the quantity ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1594"
  },
  {
    "text": "and also to localize the count in the order button. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1596"
  },
  {
    "text": "We can’t forget about the date format ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1599"
  },
  {
    "text": "you always see in the corner up here. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1601"
  },
  {
    "text": "You’ll find formatted output all over the place, and we think ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1603"
  },
  {
    "text": "this new API will make it easy, even fun, in your app as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1606"
  },
  {
    "text": "There are a lot more resources available ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1610"
  },
  {
    "text": "to help with localized strings and formatters. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1612"
  },
  {
    "text": "We have two more sessions on this topic, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1614"
  },
  {
    "text": "“Localize your SwiftUI App” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1616"
  },
  {
    "text": "and “Streamline your localized strings.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1618"
  },
  {
    "text": "Next, let’s talk about a new feature called ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1622"
  },
  {
    "text": "automatic grammar agreement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1624"
  },
  {
    "text": "Localizers in languages like Spanish have been limited ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1627"
  },
  {
    "text": "in their ability to express natural translations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1629"
  },
  {
    "text": "sometimes leading to awkward dialog. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1632"
  },
  {
    "text": "These languages require transformations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1635"
  },
  {
    "text": "to achieve gender and pluralization agreement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1637"
  },
  {
    "text": "between different parts of speech ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1640"
  },
  {
    "text": "and sometimes even require knowledge ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1642"
  },
  {
    "text": "of the user’s preferred term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1644"
  },
  {
    "text": "English has this feature too, with nouns ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1647"
  },
  {
    "text": "that have different forms for singular and plural. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1649"
  },
  {
    "text": "I threw out a lot of language jargon there, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1653"
  },
  {
    "text": "so let’s go through an example. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1655"
  },
  {
    "text": "In my Caffé app, I can pick a food item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1657"
  },
  {
    "text": "a size, and a quantity. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1660"
  },
  {
    "text": "I choose 1 small salad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1662"
  },
  {
    "text": "Now my friend says she will join me, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1666"
  },
  {
    "text": "so I increase the count to 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1668"
  },
  {
    "text": "In English, the word “salad” has to change to match the number 2. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1671"
  },
  {
    "text": "This is called agreement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1676"
  },
  {
    "text": "All that means is that the words ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1678"
  },
  {
    "text": "in this sentence have to match each other. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1680"
  },
  {
    "text": "In English, fixing up words due to pluralization ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1683"
  },
  {
    "text": "is a common kind of agreement. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1686"
  },
  {
    "text": "Now let’s switch our app to Spanish ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1687"
  },
  {
    "text": "and order 1 ensalada pequeña, or 1 small salad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1690"
  },
  {
    "text": "When I order for my friend, this order button needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1696"
  },
  {
    "text": "the same pluralization as in English but with a twist. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1699"
  },
  {
    "text": "In Spanish, both the adjective, pequeña, and the noun, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1703"
  },
  {
    "text": "ensalada, have to agree with the count, dos. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1707"
  },
  {
    "text": "So instead of ensalada pequeña, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1711"
  },
  {
    "text": "the button says ensaladas pequeñas. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1713"
  },
  {
    "text": "Next, I move on to drinks. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1717"
  },
  {
    "text": "For this sentence, the button not only needs ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1720"
  },
  {
    "text": "correct pluralization but also agreement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1723"
  },
  {
    "text": "in the grammatical gender of these words. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1726"
  },
  {
    "text": "Juice, jugo, is masculine. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1729"
  },
  {
    "text": "The adjective pequeño has to match as well. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1732"
  },
  {
    "text": "In order to localize text like this correctly, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1736"
  },
  {
    "text": "we end up with a combinatorial explosion. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1739"
  },
  {
    "text": "A different localized string is needed for each combination ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1742"
  },
  {
    "text": "of food, size, and count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1745"
  },
  {
    "text": "In code, it often ends up looking like this, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1747"
  },
  {
    "text": "where we need to switch over each item, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1750"
  },
  {
    "text": "then switch over each size, and so on. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1752"
  },
  {
    "text": "There is also a stringsdict file, which can pluralize each ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1755"
  },
  {
    "text": "of these strings correctly for counts. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1759"
  },
  {
    "text": "Now, by leveraging the same technology that powers ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1761"
  },
  {
    "text": "suggestions in keyboards, we’ve created a new API ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1764"
  },
  {
    "text": "that can easily handle all of these cases and more. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1768"
  },
  {
    "text": "We call this feature automatic grammar agreement, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1771"
  },
  {
    "text": "because the system automatically fixes up ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1775"
  },
  {
    "text": "localized strings so that they have correct grammar. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1777"
  },
  {
    "text": "Now the code becomes far simpler. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1781"
  },
  {
    "text": "You can combine the quantity, size, and food in one string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1783"
  },
  {
    "text": "Automatic grammar agreement will fix up the string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1788"
  },
  {
    "text": "for you using a process called inflection. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1790"
  },
  {
    "text": "Let’s break it down. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1793"
  },
  {
    "text": "In order to inflect, we need to know which part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1794"
  },
  {
    "text": "of the string needs to be fixed up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1797"
  },
  {
    "text": "Luckily, we have a type in Swift that can do that, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1799"
  },
  {
    "text": "AttributedString, and a custom attribute in Markdown. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1802"
  },
  {
    "text": "In this string, I use that syntax to wrap the food, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1805"
  },
  {
    "text": "size, and count with our inflect attribute. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1808"
  },
  {
    "text": "The value of the attribute is true. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1812"
  },
  {
    "text": "When we export this project’s localizations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1815"
  },
  {
    "text": "we'll get a strings file that contains our annotated string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1817"
  },
  {
    "text": "as well as other localized strings in our source code, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1820"
  },
  {
    "text": "like the names of the foods and sizes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1823"
  },
  {
    "text": "Here are the strings for Latin American Spanish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1828"
  },
  {
    "text": "The localizer has used the argument reordering syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1830"
  },
  {
    "text": "%1, %3, %2, because an adjective ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1833"
  },
  {
    "text": "like \"small\" or “large” goes before the noun in Spanish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1836"
  },
  {
    "text": "They keep the custom attribute syntax ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1840"
  },
  {
    "text": "for inflecting this region of the string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1842"
  },
  {
    "text": "and supply translations for the foods and sizes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1845"
  },
  {
    "text": "The automatic grammar engine takes care ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1848"
  },
  {
    "text": "of fixing up the rest. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1850"
  },
  {
    "text": "Some languages feature agreement not only ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1851"
  },
  {
    "text": "between words in the localized text itself ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1853"
  },
  {
    "text": "but between that text and the person reading it. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1856"
  },
  {
    "text": "Automatic grammar agreement can help with that too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1859"
  },
  {
    "text": "For example, let’s take a look ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1862"
  },
  {
    "text": "at this welcome screen for Notes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1864"
  },
  {
    "text": "In English, we say “Welcome to Notes.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1865"
  },
  {
    "text": "In Spanish, we say “Te damos la bienvenida a Notas,” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1868"
  },
  {
    "text": "or “We give you our welcome to Notes.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1871"
  },
  {
    "text": "We would like to have the same experience ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1874"
  },
  {
    "text": "for Spanish as we do in English. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1875"
  },
  {
    "text": "However, in Spanish, the word “bienvenido” must ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1877"
  },
  {
    "text": "match with the user’s preferred term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1881"
  },
  {
    "text": "This term could be one of several choices, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1884"
  },
  {
    "text": "and that choice changes the text. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1886"
  },
  {
    "text": "Using the correct term of address results ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1889"
  },
  {
    "text": "in a more personal and inclusive experience. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1891"
  },
  {
    "text": "In this year’s releases, we’ve made it possible for people ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1894"
  },
  {
    "text": "who use Spanish to specify their term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1897"
  },
  {
    "text": "In the Language & Region settings, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1900"
  },
  {
    "text": "there is a new Term of Address option. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1902"
  },
  {
    "text": "When you choose it, you can pick your preference ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1904"
  },
  {
    "text": "and also choose to share it with all apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1907"
  },
  {
    "text": "Here, you see the new welcome screen in Notes ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1911"
  },
  {
    "text": "for a feminine term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1913"
  },
  {
    "text": "And here it is for a masculine term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1915"
  },
  {
    "text": "If we do not know or the user prefers not to specify, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1917"
  },
  {
    "text": "we keep our original string as an alternative. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1921"
  },
  {
    "text": "The same inflection attribute we saw earlier is also used ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1923"
  },
  {
    "text": "in localized strings which refer to the user. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1926"
  },
  {
    "text": "In our “welcome to” case, we apply ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1929"
  },
  {
    "text": "the inflection attribute to the word bienvenido. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1931"
  },
  {
    "text": "The English string does not need to change. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1934"
  },
  {
    "text": "I can also add an inflection alternative, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1937"
  },
  {
    "text": "which is a replacement string the engine will use if it has no ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1939"
  },
  {
    "text": "information on what the user’s preferences are. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1942"
  },
  {
    "text": "This year, we support automatic agreement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1945"
  },
  {
    "text": "for Spanish and English. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1947"
  },
  {
    "text": "We’ve adopted it in several places across the OS, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1949"
  },
  {
    "text": "like the welcome screen in Notes. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1952"
  },
  {
    "text": "You can adopt it in your apps too. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1954"
  },
  {
    "text": "The code changes required are mostly just deleting a lot ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1956"
  },
  {
    "text": "of logic to pick different strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1959"
  },
  {
    "text": "The instructions on what to inflect are part ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1961"
  },
  {
    "text": "of the localized string itself, allowing localizers more control ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1964"
  },
  {
    "text": "over how the string appears in their language. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1967"
  },
  {
    "text": "Let’s take a look at automatic grammar agreement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1970"
  },
  {
    "text": "in action for our Caffé app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1972"
  },
  {
    "text": "Let’s go through the Caffé app running in English. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1974"
  },
  {
    "text": "I’ll start by adding some pizza to the order. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1977"
  },
  {
    "text": "I think I’ll have a large one. And just 1. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1982"
  },
  {
    "text": "Notice how the text on the button has changed ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1985"
  },
  {
    "text": "from 0 large pizzas to 1 large pizza. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1988"
  },
  {
    "text": "That was done automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1990"
  },
  {
    "text": "If I pick 2, it fixes it up again. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1992"
  },
  {
    "text": "I’ll just have one. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1996"
  },
  {
    "text": "At the bottom of this screen, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=1999"
  },
  {
    "text": "the order button has changed to say 1 item. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2000"
  },
  {
    "text": "How about something to drink? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2003"
  },
  {
    "text": "Small is fine, and just 1 of these. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2007"
  },
  {
    "text": "Notice how the button has changed to say “items” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2011"
  },
  {
    "text": "instead of “item”? ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2014"
  },
  {
    "text": "That string was changed automatically. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2015"
  },
  {
    "text": "Let’s check out. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2017"
  },
  {
    "text": "Here is our receipt. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2021"
  },
  {
    "text": "It lists our pizza and juice, along with formatted prices. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2023"
  },
  {
    "text": "At the bottom is our attributed string, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2026"
  },
  {
    "text": "with its custom fonts and link to the website. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2029"
  },
  {
    "text": "Let’s go back to Xcode and take a look at the source. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2031"
  },
  {
    "text": "I’ll start in the food details view.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2034"
  },
  {
    "text": "This is the view that shows the size selection screen. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2041"
  },
  {
    "text": "Let’s add a new size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2044"
  },
  {
    "text": "so that we can see how that only requires us ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2046"
  },
  {
    "text": "to add one localized string for Spanish instead ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2048"
  },
  {
    "text": "of one for each kind of food, each size, and each count. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2051"
  },
  {
    "text": "This line shows the list. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2055"
  },
  {
    "text": "The list comes from our model object. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2057"
  },
  {
    "text": "Let’s go there.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2059"
  },
  {
    "text": "The size enum already has small and large. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2064"
  },
  {
    "text": "I’m going to add a new size ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2067"
  },
  {
    "text": "for our hungriest customers, called “huge.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2068"
  },
  {
    "text": "To do that, I’ll add a new case, along with a localized string.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2071"
  },
  {
    "text": "Now I just need to add prices for the huge size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2078"
  },
  {
    "text": "For this demo, I’ve just put them in the initializers. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2081"
  },
  {
    "text": "Now I just need to add prices for the huge size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2084"
  },
  {
    "text": "For this demo, I’ve just put them in our initializers.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2087"
  },
  {
    "text": "Let’s check out our view again.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2097"
  },
  {
    "text": "Here in the preview is our new size. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2103"
  },
  {
    "text": "Our source already contains an English string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2106"
  },
  {
    "text": "I just need a Spanish one now. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2108"
  },
  {
    "text": "To generate the new strings, I’ll use the compiler ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2110"
  },
  {
    "text": "to find the new localized string for “huge.” ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2112"
  },
  {
    "text": "To do that, I choose Product > Export Localizations, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2115"
  },
  {
    "text": "and save the Spanish strings.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2120"
  },
  {
    "text": "Now let’s add a translation for Spanish.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2124"
  },
  {
    "text": "I can filter for our new string ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2134"
  },
  {
    "text": "and type in our Spanish word.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2138"
  },
  {
    "text": "Next, I import these localizations ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2145"
  },
  {
    "text": "to put them into my app.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2147"
  },
  {
    "text": "Now I’ll run our app again but in Spanish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2157"
  },
  {
    "text": "To do that, I choose Product > Scheme > Edit Scheme.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2161"
  },
  {
    "text": "In the Options, I can pick the language ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2168"
  },
  {
    "text": "I want to test in.",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2170"
  },
  {
    "text": "And run. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2177"
  },
  {
    "text": "You can tell from our header ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2180"
  },
  {
    "text": "that we're now running in Spanish. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2181"
  },
  {
    "text": "Let’s make another order, starting with salad. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2183"
  },
  {
    "text": "Notice as I change the quantity, the order button is fixed up. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2187"
  },
  {
    "text": "Our new huge size is correctly pluralized for 2 salads. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2192"
  },
  {
    "text": "Plus, it matches the grammatical gender for \"ensalada,\" ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2197"
  },
  {
    "text": "all with just one string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2200"
  },
  {
    "text": "There are a lot of great new features ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2203"
  },
  {
    "text": "in Foundation this year, and they are ready ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2205"
  },
  {
    "text": "for you to try in your apps today. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2208"
  },
  {
    "text": "AttributedString provides a fast, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2211"
  },
  {
    "text": "easy-to-use, and Swift-first interface ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2213"
  },
  {
    "text": "for adding key-value pairs to ranges of a string. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2216"
  },
  {
    "text": "You can use it with SwiftUI in text ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2219"
  },
  {
    "text": "and start using Markdown in your localized strings. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2221"
  },
  {
    "text": "Our new Formatter API puts the focus on the format, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2225"
  },
  {
    "text": "simplifying your code and improving performance. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2229"
  },
  {
    "text": "Use formats in all of the places you present data in your app. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2232"
  },
  {
    "text": "Finally, automatic grammar agreement ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2237"
  },
  {
    "text": "will intelligently fix up localized strings ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2240"
  },
  {
    "text": "so that they match grammatical gender, counts, ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2242"
  },
  {
    "text": "and the user’s own term of address. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2245"
  },
  {
    "text": "I hope you’ll love these new features. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2248"
  },
  {
    "text": "We’re looking forward to finding them in your apps. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2250"
  },
  {
    "text": "Thank you. ",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2252"
  },
  {
    "text": "[music]",
    "link": "https://developer.apple.com/videos/play/wwdc2021/10109/?time=2254"
  }
]